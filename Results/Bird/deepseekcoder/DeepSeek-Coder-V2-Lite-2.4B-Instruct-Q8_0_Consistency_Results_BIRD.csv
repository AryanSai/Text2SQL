,Qid,Question,Db_Id,Difficulty,Query Gold,Repeated,Query Generated,Most Frequent Query
0,306,Which molecules have triple bonds and list all the elements they contain.,toxicology,challenging,"SELECT DISTINCT T1.molecule_id, T2.element FROM bond AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#'",7,"SELECT m.label, a.element  FROM molecule m  JOIN atom a ON m.molecule_id = a.molecule_id  JOIN connected c ON a.atom_id = c.atom_id  JOIN bond b ON c.bond_id = b.bond_id  WHERE b.bond_type = 'triple'  GROUP BY m.label, a.element
SELECT m.label, a.element FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'triple'
SELECT m.label, a.element FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'triple'
SELECT m.label, a.element  FROM molecule m  JOIN atom a ON m.molecule_id = a.molecule_id  JOIN connected c ON a.atom_id = c.atom_id  JOIN bond b ON c.bond_id = b.bond_id  WHERE b.bond_type = 'triple'  GROUP BY m.label, a.element
SELECT m.label, a.element  FROM molecule m  JOIN atom a ON m.molecule_id = a.molecule_id  JOIN connected c ON a.atom_id = c.atom_id  JOIN bond b ON c.bond_id = b.bond_id  WHERE b.bond_type = 'triple'  GROUP BY m.label, a.element
SELECT m.label, a.element FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'triple'
SELECT m.label, a.element  FROM molecule m  JOIN atom a ON m.molecule_id = a.molecule_id  JOIN connected c ON a.atom_id = c.atom_id  JOIN bond b ON c.bond_id = b.bond_id  WHERE b.bond_type = 'triple'  GROUP BY m.label, a.element","SELECT m.label, a.element  FROM molecule m  JOIN atom a ON m.molecule_id = a.molecule_id  JOIN connected c ON a.atom_id = c.atom_id  JOIN bond b ON c.bond_id = b.bond_id  WHERE b.bond_type = 'triple'  GROUP BY m.label, a.element"
1,1261,How many patients with a normal RF don't have thrombosis?,thrombosis_prediction,simple,SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RF < 20 AND T1.Thrombosis = 0,7,"SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.rf = 'normal' AND l.thrombosis = 'no'
SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.rf = 'normal' AND l.thrombosis = 'no'
SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.rf = 'normal' AND l.thrombosis = 'no'
SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.rf = 'normal' AND l.thrombosis = 'no'
SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.rf = 'normal' AND l.thrombosis = 'no'
SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.rf = 'normal' AND l.thrombosis = 'no'
SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.rf = 'normal' AND l.thrombosis = 'no'",SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.rf = 'normal' AND l.thrombosis = 'no'
2,601,What is the score and the link type ID for post ID 395?,codebase_community,simple,"SELECT T1.Score, T2.LinkTypeId FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId WHERE T2.PostId = 395",7,"SELECT score, linktypeid FROM postlinks WHERE postid = 395
SELECT score, linktypeid FROM postlinks WHERE postid = 395
SELECT score, linktypeid FROM postlinks WHERE postid = 395
SELECT score, linktypeid FROM postlinks WHERE postid = 395
SELECT score, linktypeid FROM postlinks WHERE postid = 395
SELECT score, linktypeid FROM postlinks WHERE postid = 395
SELECT score, linktypeid FROM postlinks WHERE postid = 395","SELECT score, linktypeid FROM postlinks WHERE postid = 395"
3,245,What is the average number of bonds the atoms with the element iodine have?,toxicology,moderate,SELECT CAST(COUNT(T2.bond_id) AS REAL) / COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element = 'i',7,"SELECT AVG(num_bonds) AS average_bonds FROM (     SELECT molecule_id, COUNT(bond_id) AS num_bonds     FROM connected     JOIN bond ON connected.bond_id = bond.bond_id     WHERE connected.atom_id IN (         SELECT atom_id         FROM atom         WHERE element = 'iodine'     )     GROUP BY molecule_id )
SELECT AVG(num_bonds) FROM (SELECT molecule_id, COUNT(*) AS num_bonds FROM connected JOIN bond ON connected.bond_id = bond.bond_id WHERE connected.atom_id IN (SELECT atom_id FROM atom WHERE element = 'iodine') GROUP BY molecule_id)
SELECT AVG(num_bonds) FROM (SELECT molecule_id, COUNT(bond_id) AS num_bonds FROM connected JOIN bond ON connected.bond_id = bond.bond_id WHERE connected.atom_id IN (SELECT atom_id FROM atom WHERE element = 'iodine') GROUP BY molecule_id)
SELECT AVG(num_bonds) FROM (SELECT molecule_id, COUNT(*) AS num_bonds FROM connected JOIN bond ON connected.bond_id = bond.bond_id WHERE connected.atom_id IN (SELECT atom_id FROM atom WHERE element = 'iodine') GROUP BY molecule_id)
SELECT AVG(num_bonds) FROM (SELECT molecule_id, COUNT(bond_id) AS num_bonds FROM connected JOIN bond ON connected.bond_id = bond.bond_id WHERE connected.atom_id IN (SELECT atom_id FROM atom WHERE element = 'iodine') GROUP BY molecule_id)
SELECT AVG(num_bonds) FROM (SELECT molecule_id, COUNT(*) AS num_bonds FROM connected JOIN bond ON connected.bond_id = bond.bond_id WHERE connected.atom_id IN (SELECT atom_id FROM atom WHERE element = 'iodine') GROUP BY molecule_id)
SELECT AVG(num_bonds) FROM (SELECT molecule_id, COUNT(*) AS num_bonds FROM connected JOIN bond ON connected.bond_id = bond.bond_id WHERE connected.atom_id IN (SELECT atom_id FROM atom WHERE element = 'iodine') GROUP BY molecule_id)","SELECT AVG(num_bonds) FROM (SELECT molecule_id, COUNT(*) AS num_bonds FROM connected JOIN bond ON connected.bond_id = bond.bond_id WHERE connected.atom_id IN (SELECT atom_id FROM atom WHERE element = 'iodine') GROUP BY molecule_id)"
4,215,How many atoms with iodine and with sulfur type elements are there in single bond molecules?,toxicology,challenging,"SELECT COUNT(DISTINCT CASE WHEN T1.element = 'i' THEN T1.atom_id ELSE NULL END) AS iodine_nums , COUNT(DISTINCT CASE WHEN T1.element = 's' THEN T1.atom_id ELSE NULL END) AS sulfur_nums FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '-'",7,"SELECT COUNT(*) FROM (SELECT DISTINCT atom.atom_id FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.element IN ('I', 'S') AND bond.bond_type = 'single')
SELECT COUNT(*) FROM (SELECT DISTINCT atom.atom_id FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.element IN ('I', 'S') AND bond.bond_type = 'single')
SELECT COUNT(*) FROM (SELECT DISTINCT atom.atom_id FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.element IN ('I', 'S') AND bond.bond_type = 'single')
SELECT COUNT(*) FROM (SELECT DISTINCT atom.atom_id FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.element IN ('I', 'S') AND bond.bond_type = 'single')
SELECT COUNT(*) FROM (SELECT DISTINCT atom.atom_id FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.element IN ('I', 'S') AND bond.bond_type = 'single')
SELECT COUNT(*) FROM (SELECT DISTINCT atom.atom_id FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.element IN ('I', 'S') AND bond.bond_type = 'single')
SELECT COUNT(*) FROM (SELECT DISTINCT atom.atom_id FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.element IN ('I', 'S') AND bond.bond_type = 'single')","SELECT COUNT(*) FROM (SELECT DISTINCT atom.atom_id FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.element IN ('I', 'S') AND bond.bond_type = 'single')"
5,1299,"Among the patients with the normal level of triglyceride, how many of them have other symptoms observed?",thrombosis_prediction,simple,SELECT COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG < 200 AND T1.Symptoms IS NOT NULL,7,"SELECT COUNT(*) FROM patient p JOIN examination e ON p.id = e.id WHERE e.symptoms IS NOT NULL AND e.tg = 'normal'
SELECT COUNT(*) FROM patient p JOIN examination e ON p.id = e.id WHERE e.symptoms IS NOT NULL AND e.tg = 'normal'
SELECT COUNT(*) FROM patient p JOIN examination e ON p.id = e.id WHERE e.symptoms IS NOT NULL AND e.tg = 'normal'
SELECT COUNT(*) FROM patient p JOIN examination e ON p.id = e.id WHERE e.symptoms IS NOT NULL AND e.tg = 'normal'
SELECT COUNT(*) FROM patient p JOIN examination e ON p.id = e.id WHERE e.symptoms IS NOT NULL AND e.tg = 'normal'
SELECT COUNT(*) FROM patient p JOIN examination e ON p.id = e.id WHERE e.symptoms IS NOT NULL AND e.tg = 'normal'
SELECT COUNT(*) FROM patient p JOIN examination e ON p.id = e.id WHERE e.symptoms IS NOT NULL AND e.tg = 'normal'",SELECT COUNT(*) FROM patient p JOIN examination e ON p.id = e.id WHERE e.symptoms IS NOT NULL AND e.tg = 'normal'
6,842,Calculate the average height of all neutral superheroes.,superhero,simple,SELECT AVG(T1.height_cm) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Neutral',7,"SELECT AVG(height_cm) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'neutral')
SELECT AVG(height_cm) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'neutral')
SELECT AVG(height_cm) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'neutral')
SELECT AVG(height_cm) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'neutral')
SELECT AVG(height_cm) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'neutral')
SELECT AVG(height_cm) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'neutral')
SELECT AVG(height_cm) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'neutral')",SELECT AVG(height_cm) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'neutral')
7,1149,Are there more in-patient or outpatient who were male? What is the deviation in percentage?,thrombosis_prediction,moderate,SELECT CAST(SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN Admission = '-' THEN 1 ELSE 0 END) FROM Patient WHERE SEX = 'M',7,"SELECT sex, COUNT(*) AS count FROM (SELECT p.sex, p.id, l.id AS lab_id FROM patient p JOIN laboratory l ON p.id = l.id) WHERE sex = 'male' GROUP BY sex
SELECT sex, COUNT(*) AS count FROM (SELECT p.sex, p.id, l.id AS lab_id FROM patient p JOIN laboratory l ON p.id = l.id) WHERE sex = 'male' GROUP BY sex
SELECT sex, COUNT(*) AS count FROM (SELECT p.sex, p.id, l.id AS lab_id FROM patient p JOIN laboratory l ON p.id = l.id) WHERE sex = 'male' GROUP BY sex
SELECT sex, COUNT(*) AS count FROM (SELECT p.sex, p.id, l.id AS lab_id FROM patient p JOIN laboratory l ON p.id = l.id) WHERE sex = 'male' GROUP BY sex HAVING COUNT(*) > 0
SELECT sex, COUNT(*) AS count FROM (SELECT p.sex, p.id, l.id AS lab_id FROM patient p JOIN laboratory l ON p.id = l.id) WHERE sex = 'male' GROUP BY sex
SELECT sex, COUNT(*) AS count FROM (SELECT p.sex, p.id, l.id AS lab_id FROM patient p JOIN laboratory l ON p.id = l.id) WHERE sex = 'male' GROUP BY sex
SELECT sex, COUNT(*) AS count FROM (SELECT p.sex, p.id, l.id AS lab_id FROM patient p JOIN laboratory l ON p.id = l.id) WHERE sex = 'male' GROUP BY sex","SELECT sex, COUNT(*) AS count FROM (SELECT p.sex, p.id, l.id AS lab_id FROM patient p JOIN laboratory l ON p.id = l.id) WHERE sex = 'male' GROUP BY sex"
8,521,"Among the cards whose version of frame style is 1997, what is the status of the card illustrated by D. Alexander Gregory in legacy play format that has sensitive content or Wizards of the Coast?",card_games,challenging,SELECT DISTINCT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T2.uuid = T1.uuid WHERE T1.frameVersion = 1997 AND T1.hasContentWarning = 1 AND T1.artist = 'D. Alexander Gregory' AND T2.format = 'legacy',7,"SELECT status FROM cards WHERE frameversion = '1997' AND artist = 'D. Alexander Gregory' AND hascontentwarning = 1 OR Wizards_of_the_Coast = 1
SELECT status FROM cards WHERE frameversion = '1997' AND artist = 'D. Alexander Gregory' AND hascontentwarning = 1 OR Wizards_of_the_Coast = 1
SELECT status FROM cards WHERE frameversion = '1997' AND artist = 'D. Alexander Gregory' AND hascontentwarning = 1 OR Wizards_of_the_Coast = 1
SELECT status FROM cards WHERE frameversion = '1997' AND artist = 'D. Alexander Gregory' AND hascontentwarning = 1 OR Wizards_of_the_Coast = 1
SELECT status FROM cards WHERE frameversion = '1997' AND artist = 'D. Alexander Gregory' AND hascontentwarning = 1 OR Wizards_of_the_Coast = 1
SELECT status FROM cards WHERE frameversion = '1997' AND artist = 'D. Alexander Gregory' AND hascontentwarning = 1 OR Wizards_of_the_Coast = 1
SELECT status FROM cards WHERE frameversion = '1997' AND artist = 'D. Alexander Gregory' AND hascontentwarning = 1 OR Wizards_of_the_Coast = 1",SELECT status FROM cards WHERE frameversion = '1997' AND artist = 'D. Alexander Gregory' AND hascontentwarning = 1 OR Wizards_of_the_Coast = 1
9,1526,"For the customer who paid 634.8 in 2012/8/25, what was the consumption decrease rate from Year 2012 to 2013?",debit_card_specializing,challenging,"SELECT CAST(SUM(IIF(SUBSTR(Date, 1, 4) = '2012', Consumption, 0)) - SUM(IIF(SUBSTR(Date, 1, 4) = '2013', Consumption, 0)) AS FLOAT) / SUM(IIF(SUBSTR(Date, 1, 4) = '2012', Consumption, 0)) FROM yearmonth WHERE CustomerID = ( SELECT T1.CustomerID FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-25' AND T1.Price = 634.8 )",7,"SELECT (consumption_2013 - consumption_2012) / consumption_2012 * 100 AS consumption_decrease_rate FROM (     SELECT          ym1.customerid,         ym1.consumption AS consumption_2012,         ym2.consumption AS consumption_2013     FROM          yearmonth ym1     JOIN          yearmonth ym2 ON ym1.customerid = ym2.customerid AND strftime('%Y', ym1.date) = '2012' AND strftime('%Y', ym2.date) = '2013'     WHERE          ym1.date = '2012/8/25' AND ym2.date = '2013/8/25' ) WHERE      customerid = (         SELECT customerid          FROM transactions_1k          WHERE amount = 634.8 AND date = '2012/8/25'     )
SELECT (SELECT consumption FROM yearmonth WHERE customerid = 'customerid' AND date = '2012/8/25') - (SELECT consumption FROM yearmonth WHERE customerid = 'customerid' AND date = '2013/8/25') AS consumption_decrease_rate FROM transactions_1k WHERE customerid = 'customerid' AND date = '2012/8/25' AND amount = 634.8
SELECT (consumption_2013 - consumption_2012) / consumption_2012 * 100 AS consumption_decrease_rate FROM (     SELECT          ym1.customerid,         ym1.consumption AS consumption_2012,         ym2.consumption AS consumption_2013     FROM          yearmonth ym1     JOIN          yearmonth ym2 ON ym1.customerid = ym2.customerid AND strftime('%Y', ym2.date) = '2013'     WHERE          strftime('%Y', ym1.date) = '2012' AND ym1.customerid IN (             SELECT customerid              FROM transactions_1k              WHERE amount = 634.8 AND date = '2012/8/25'         ) ) 
SELECT (SELECT consumption FROM yearmonth WHERE customerid = 'customerid' AND date = '2012/8/25') - (SELECT consumption FROM yearmonth WHERE customerid = 'customerid' AND date = '2013/8/25') AS consumption_decrease_rate FROM transactions_1k WHERE customerid = 'customerid' AND date = '2012/8/25' AND amount = 634.8
SELECT (SELECT consumption FROM yearmonth WHERE customerid = 'customerid' AND date = '2012/8/25') - (SELECT consumption FROM yearmonth WHERE customerid = 'customerid' AND date = '2013/8/25') AS consumption_decrease_rate FROM transactions_1k WHERE customerid = 'customerid' AND date = '2012/8/25' AND amount = 634.8
SELECT (consumption_2013 - consumption_2012) / consumption_2012 * 100 AS consumption_decrease_rate FROM (     SELECT          ym1.customerid,         ym1.consumption AS consumption_2012,         ym2.consumption AS consumption_2013     FROM          yearmonth ym1     JOIN          yearmonth ym2 ON ym1.customerid = ym2.customerid AND strftime('%Y', ym1.date) = '2012' AND strftime('%Y', ym2.date) = '2013'     WHERE          ym1.date = '2012/8/25' AND ym2.date = '2013/8/25' ) WHERE      customerid = (         SELECT customerid          FROM transactions_1k          WHERE amount = 634.8 AND date = '2012/8/25'     )
SELECT (SELECT consumption FROM yearmonth WHERE customerid = 'customerid' AND date = '2012/8/25') - (SELECT consumption FROM yearmonth WHERE customerid = 'customerid' AND date = '2013/8/25') AS consumption_decrease_rate FROM transactions_1k WHERE customerid = 'customerid' AND date = '2012/8/25' AND amount = 634.8",SELECT (SELECT consumption FROM yearmonth WHERE customerid = 'customerid' AND date = '2012/8/25') - (SELECT consumption FROM yearmonth WHERE customerid = 'customerid' AND date = '2013/8/25') AS consumption_decrease_rate FROM transactions_1k WHERE customerid = 'customerid' AND date = '2012/8/25' AND amount = 634.8
10,776,Provide the hero name and race of Charles Chandler.,superhero,simple,"SELECT T1.superhero_name, T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.full_name = 'Charles Chandler'",7,"SELECT superhero_name, race FROM superhero WHERE full_name = 'Charles Chandler'
SELECT superhero_name, race FROM superhero WHERE full_name = 'Charles Chandler'
SELECT superhero_name, race FROM superhero WHERE full_name = 'Charles Chandler'
SELECT superhero_name, race FROM superhero WHERE full_name = 'Charles Chandler'
SELECT superhero_name, race FROM superhero WHERE full_name = 'Charles Chandler'
SELECT superhero_name, race FROM superhero WHERE full_name = 'Charles Chandler'
SELECT superhero_name, race FROM superhero WHERE full_name = 'Charles Chandler'","SELECT superhero_name, race FROM superhero WHERE full_name = 'Charles Chandler'"
11,1114,What was the average overall rating for Marko Arnautovic from 2007/2/22 to 2016/4/21?,european_football_2,challenging,"SELECT CAST(SUM(t2.overall_rating) AS REAL) / COUNT(t2.id) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_fifa_api_id = t2.player_fifa_api_id WHERE t1.player_name = 'Marko Arnautovic' AND SUBSTR(t2.`date`, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21'",7,"SELECT AVG(overall_rating) FROM player_attributes WHERE player_fifa_api_id IN (SELECT player_fifa_api_id FROM player WHERE player_name = 'Marko Arnautovic') AND date BETWEEN '2007/2/22' AND '2016/4/21'
SELECT AVG(overall_rating) FROM player_attributes WHERE player_fifa_api_id IN (SELECT player_fifa_api_id FROM player WHERE player_name = 'Marko Arnautovic') AND date BETWEEN '2007/2/22' AND '2016/4/21'
SELECT AVG(overall_rating) FROM player_attributes WHERE player_fifa_api_id IN (SELECT player_fifa_api_id FROM player WHERE player_name = 'Marko Arnautovic') AND date BETWEEN '2007-02-22' AND '2016-04-21'
SELECT AVG(overall_rating) FROM player_attributes WHERE player_fifa_api_id IN (SELECT player_fifa_api_id FROM player WHERE player_name = 'Marko Arnautovic') AND date BETWEEN '2007/2/22' AND '2016/4/21'
SELECT AVG(overall_rating) FROM player_attributes WHERE player_fifa_api_id IN (SELECT player_fifa_api_id FROM player WHERE player_name = 'Marko Arnautovic') AND date BETWEEN '2007-02-22' AND '2016-04-21'
SELECT AVG(overall_rating) FROM player_attributes WHERE player_fifa_api_id IN (SELECT player_fifa_api_id FROM player WHERE player_name = 'Marko Arnautovic') AND date BETWEEN '2007-02-22' AND '2016-04-21'
SELECT AVG(overall_rating) FROM player_attributes WHERE player_fifa_api_id IN (SELECT player_fifa_api_id FROM player WHERE player_name = 'Marko Arnautovic') AND date BETWEEN '2007-02-22' AND '2016-04-21'",SELECT AVG(overall_rating) FROM player_attributes WHERE player_fifa_api_id IN (SELECT player_fifa_api_id FROM player WHERE player_name = 'Marko Arnautovic') AND date BETWEEN '2007-02-22' AND '2016-04-21'
12,1403,Indicate the name of the closed event whose cost has exceeded the budget the most.,student_club,moderate,SELECT T2.event_name FROM budget AS T1 INNER JOIN event AS T2 ON T2.event_id = T1.link_to_event WHERE T1.event_status = 'Closed' AND T1.remaining < 0 ORDER BY T1.remaining LIMIT 1,7,"SELECT event_name FROM event JOIN budget ON event.event_id = budget.link_to_event WHERE event_status = 'closed' ORDER BY spent DESC LIMIT 1
SELECT event_name  FROM event  JOIN budget ON event.event_id = budget.link_to_event  WHERE event_status = 'closed'  ORDER BY (amount - spent) ASC  LIMIT 1
SELECT event_name  FROM event  JOIN budget ON event.event_id = budget.link_to_event  WHERE event_status = 'closed'  ORDER BY (amount - spent) ASC  LIMIT 1
SELECT event_name FROM event JOIN budget ON event.event_id = budget.link_to_event WHERE event_status = 'closed' ORDER BY spent DESC LIMIT 1
SELECT event_name  FROM event  JOIN budget ON event.event_id = budget.link_to_event  WHERE event_status = 'closed'  ORDER BY (amount - spent) ASC  LIMIT 1
SELECT event_name FROM event JOIN budget ON event.event_id = budget.link_to_event WHERE event_status = 'closed' ORDER BY spent DESC LIMIT 1
SELECT event_name  FROM event  JOIN budget ON event.event_id = budget.link_to_event  WHERE event_status = 'closed'  ORDER BY (amount - spent) ASC  LIMIT 1",SELECT event_name  FROM event  JOIN budget ON event.event_id = budget.link_to_event  WHERE event_status = 'closed'  ORDER BY (amount - spent) ASC  LIMIT 1
13,733,How many gold-eyed superheroes did Marvel Comics publish?,superhero,moderate,SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN colour AS T3 ON T1.eye_colour_id = T3.id WHERE T2.publisher_name = 'Marvel Comics' AND T3.colour = 'Gold',7,"SELECT COUNT(*) FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'gold')
SELECT COUNT(*) FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'gold')
SELECT COUNT(*) FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'gold')
SELECT COUNT(*) FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'gold')
SELECT COUNT(*) FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'gold')
SELECT COUNT(*) FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'gold')
SELECT COUNT(*) FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'gold')",SELECT COUNT(*) FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'gold')
14,298,Calculate the percentage of molecules containing carcinogenic compounds that element is hydrogen.,toxicology,moderate,SELECT CAST(COUNT(CASE WHEN T1.element = 'h' AND T2.label = '+' THEN T2.molecule_id ELSE NULL END) AS REAL) * 100 / COUNT(T2.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id,7,"SELECT (SELECT COUNT(*) FROM atom WHERE element = 'H' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label LIKE '%carcinogenic%')) * 1.0 / COUNT(*) * 100 AS percentage FROM atom WHERE element = 'H'
SELECT COUNT(*) * 1.0 / (SELECT COUNT(*) FROM atom WHERE element = 'H') * 100 AS percentage FROM atom WHERE element = 'H' AND molecule_id IN (     SELECT molecule_id     FROM bond     JOIN connected ON bond.bond_id = connected.bond_id     WHERE bond_type = 'carcinogenic' )
SELECT COUNT(*) * 1.0 / (SELECT COUNT(*) FROM atom WHERE element = 'H') * 100 AS percentage FROM atom WHERE element = 'H' AND molecule_id IN (     SELECT molecule_id     FROM bond     JOIN connected ON bond.bond_id = connected.bond_id     WHERE bond_type = 'carcinogenic' )
SELECT COUNT(DISTINCT molecule_id) FILTER (WHERE element = 'H') * 100.0 / COUNT(DISTINCT molecule_id) AS percentage_hydrogen_molecules FROM atom WHERE element = 'H'
SELECT (SELECT COUNT(*) FROM atom WHERE element = 'H' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label LIKE '%carcinogenic%')) * 1.0 / COUNT(*) * 100 AS percentage FROM atom WHERE element = 'H'
SELECT COUNT(DISTINCT m.molecule_id) * 100.0 / COUNT(DISTINCT m.molecule_id) AS percentage FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.element = 'H'
SELECT (SELECT COUNT(*) FROM atom WHERE element = 'H' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label LIKE '%carcinogenic%')) * 1.0 / COUNT(*) * 100 AS percentage FROM atom WHERE element = 'H'",SELECT (SELECT COUNT(*) FROM atom WHERE element = 'H' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label LIKE '%carcinogenic%')) * 1.0 / COUNT(*) * 100 AS percentage FROM atom WHERE element = 'H'
15,268,What are the elements for bond id TR001_10_11?,toxicology,challenging,SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR001_10_11',7,"SELECT atom.atom_id, atom.molecule_id, atom.element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR001_10_11'
SELECT atom.atom_id, atom.molecule_id, atom.element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR001_10_11'
SELECT atom.atom_id, atom.molecule_id, atom.element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR001_10_11'
SELECT atom.atom_id, atom.molecule_id, atom.element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR001_10_11'
SELECT atom.atom_id, atom.molecule_id, atom.element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR001_10_11'
SELECT atom.atom_id, atom.molecule_id, atom.element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR001_10_11'
SELECT atom.atom_id, atom.molecule_id, atom.element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR001_10_11'","SELECT atom.atom_id, atom.molecule_id, atom.element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR001_10_11'"
16,1448,Find the name and date of events with expenses for pizza that were more than fifty dollars but less than a hundred dollars.,student_club,challenging,"SELECT T1.event_name, T1.event_date FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T3.expense_description = 'Pizza' AND T3.cost > 50 AND T3.cost < 100",7,"SELECT event_name, event_date FROM event JOIN budget ON event.event_id = budget.link_to_event JOIN expense ON budget.budget_id = expense.link_to_budget WHERE expense_description = 'pizza' AND cost > 50 AND cost < 100
SELECT event_name, event_date FROM event JOIN budget ON event.event_id = budget.link_to_event JOIN expense ON budget.budget_id = expense.link_to_budget WHERE expense_description = 'pizza' AND cost > 50 AND cost < 100
SELECT event_name, event_date FROM event JOIN budget ON event.event_id = budget.link_to_event JOIN expense ON budget.budget_id = expense.link_to_budget WHERE expense_description = 'pizza' AND cost > 50 AND cost < 100
SELECT event_name, event_date FROM event JOIN budget ON event.event_id = budget.link_to_event JOIN expense ON budget.budget_id = expense.link_to_budget WHERE expense_description = 'pizza' AND cost > 50 AND cost < 100
SELECT event_name, event_date FROM event JOIN budget ON event.event_id = budget.link_to_event JOIN expense ON budget.budget_id = expense.link_to_budget WHERE expense_description = 'pizza' AND cost > 50 AND cost < 100
SELECT event_name, event_date FROM event JOIN budget ON event.event_id = budget.link_to_event JOIN expense ON budget.budget_id = expense.link_to_budget WHERE expense_description = 'pizza' AND cost > 50 AND cost < 100
SELECT event_name, event_date FROM event JOIN budget ON event.event_id = budget.link_to_event JOIN expense ON budget.budget_id = expense.link_to_budget WHERE expense_description = 'pizza' AND cost > 50 AND cost < 100","SELECT event_name, event_date FROM event JOIN budget ON event.event_id = budget.link_to_event JOIN expense ON budget.budget_id = expense.link_to_budget WHERE expense_description = 'pizza' AND cost > 50 AND cost < 100"
17,835,"Among all superheroes in Marvel Comics, identify the percentage of 'good' superheroes.",superhero,challenging,SELECT CAST(COUNT(CASE WHEN T3.alignment = 'Good' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T2.publisher_name = 'Marvel Comics',7,"SELECT (COUNT(*) FILTER (WHERE alignment_id = 'good') * 100.0 / COUNT(*)) AS good_percentage FROM superhero
SELECT (COUNT(*) / (SELECT COUNT(*) FROM superhero WHERE alignment_id = 'good') * 100.0) AS percentage_good_superheroes FROM superhero WHERE alignment_id = 'good'
SELECT (COUNT(*) / (SELECT COUNT(*) FROM superhero WHERE alignment_id = 'good') * 100) AS percentage_good_superheroes FROM superhero WHERE alignment_id = 'good'
SELECT (COUNT(*) FILTER (WHERE alignment_id = 'good') * 100.0 / COUNT(*)) AS percentage_good_superheroes FROM superhero
SELECT (COUNT(*) / (SELECT COUNT(*) FROM superhero WHERE alignment_id = 'good')) * 100 AS percentage_good_superheroes FROM superhero WHERE alignment_id = 'good'
SELECT (COUNT(*) FILTER (WHERE alignment_id = 'good') * 100.0 / COUNT(*)) AS good_percentage FROM superhero
SELECT (COUNT(*) / (SELECT COUNT(*) FROM superhero WHERE alignment_id = 'good') * 100) AS percentage_good_superheroes FROM superhero WHERE alignment_id = 'good'",SELECT (COUNT(*) FILTER (WHERE alignment_id = 'good') * 100.0 / COUNT(*)) AS good_percentage FROM superhero
18,773,"Which superhero has the same eyes, hair and skin colour? Indicate the publisher of the superhero.",superhero,challenging,"SELECT T1.superhero_name, T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.eye_colour_id = T1.hair_colour_id AND T1.eye_colour_id = T1.skin_colour_id",7,"SELECT s1.superhero_name, p1.publisher_name FROM superhero s1 JOIN publisher p1 ON s1.publisher_id = p1.id WHERE s1.eye_colour_id = (     SELECT eye_colour_id     FROM superhero     WHERE superhero_name != s1.superhero_name     LIMIT 1 ) AND s1.hair_colour_id = (     SELECT hair_colour_id     FROM superhero     WHERE superhero_name != s1.superhero_name     LIMIT 1 ) AND s1.skin_colour_id = (     SELECT skin_colour_id     FROM superhero     WHERE superhero_name != s1.superhero_name     LIMIT 1 )
SELECT s1.superhero_name, s1.publisher_id, s2.publisher_name FROM superhero s1 JOIN publisher s2 ON s1.publisher_id = s2.id WHERE s1.eye_colour_id = s1.hair_colour_id AND s1.hair_colour_id = s1.skin_colour_id
SELECT s1.superhero_name, s1.publisher_id AS publisher, s2.publisher_id AS publisher2 FROM superhero s1 JOIN superhero s2 ON s1.eye_colour_id = s2.eye_colour_id AND s1.hair_colour_id = s2.hair_colour_id AND s1.skin_colour_id = s2.skin_colour_id WHERE s1.id <> s2.id
SELECT s1.superhero_name, s1.publisher_id, s2.publisher_name FROM superhero s1 JOIN publisher s2 ON s1.publisher_id = s2.id WHERE s1.eye_colour_id = (     SELECT eye_colour_id     FROM superhero     WHERE eye_colour_id IS NOT NULL     LIMIT 1 ) AND s1.hair_colour_id = (     SELECT hair_colour_id     FROM superhero     WHERE hair_colour_id IS NOT NULL     LIMIT 1 ) AND s1.skin_colour_id = (     SELECT skin_colour_id     FROM superhero     WHERE skin_colour_id IS NOT NULL     LIMIT 1 )
SELECT s1.superhero_name, s1.publisher_id, s2.publisher_name FROM superhero s1 JOIN publisher s2 ON s1.publisher_id = s2.id WHERE s1.eye_colour_id = s1.hair_colour_id AND s1.hair_colour_id = s1.skin_colour_id
SELECT s1.superhero_name, p1.publisher_name FROM superhero s1 JOIN publisher p1 ON s1.publisher_id = p1.id WHERE s1.eye_colour_id = (     SELECT eye_colour_id     FROM superhero     WHERE superhero_name <> s1.superhero_name     LIMIT 1 ) AND s1.hair_colour_id = (     SELECT hair_colour_id     FROM superhero     WHERE superhero_name <> s1.superhero_name     LIMIT 1 ) AND s1.skin_colour_id = (     SELECT skin_colour_id     FROM superhero     WHERE superhero_name <> s1.superhero_name     LIMIT 1 )
SELECT s1.superhero_name, s1.publisher_id, s2.publisher_name FROM superhero s1 JOIN publisher s2 ON s1.publisher_id = s2.id WHERE s1.eye_colour_id = s1.hair_colour_id AND s1.hair_colour_id = s1.skin_colour_id","SELECT s1.superhero_name, s1.publisher_id, s2.publisher_name FROM superhero s1 JOIN publisher s2 ON s1.publisher_id = s2.id WHERE s1.eye_colour_id = s1.hair_colour_id AND s1.hair_colour_id = s1.skin_colour_id"
19,498,"What's the French name of the set of cards with ""Tendo Ice Bridge"" is in?",card_games,moderate,SELECT T2.translation FROM cards AS T1 INNER JOIN set_translations AS T2 ON T2.setCode = T1.setCode WHERE T1.name = 'Tendo Ice Bridge' AND T2.language = 'French' AND T2.translation IS NOT NULL,7,"SELECT name FROM set_translations WHERE setcode = 'Tendo Ice Bridge'
SELECT name FROM set_translations WHERE setcode = 'Tendo Ice Bridge'
SELECT name FROM set_translations WHERE setcode = 'Tendo Ice Bridge'
SELECT name FROM set_translations WHERE setcode = 'Tendo Ice Bridge'
SELECT name FROM sets WHERE code = 'FRF'
SELECT name FROM set_translations WHERE setcode = 'Tendo Ice Bridge'
SELECT name FROM set_translations WHERE setcode = 'Tendo Ice Bridge'",SELECT name FROM set_translations WHERE setcode = 'Tendo Ice Bridge'
20,1195,What is the average blood albumin level for female patients with a PLT greater than 400 who have been diagnosed with SLE?,thrombosis_prediction,moderate,SELECT AVG(T2.ALB) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.PLT > 400 AND T1.Diagnosis = 'SLE' AND T1.SEX = 'F',7,"SELECT AVG(alb) FROM laboratory JOIN patient ON laboratory.id = patient.id WHERE sex = 'female' AND plt > 400 AND diagnosis = 'SLE'
SELECT AVG(alb) FROM laboratory WHERE plt > 400 AND diagnosis = 'SLE' AND sex = 'female'
SELECT AVG(alb) FROM laboratory WHERE plt > 400 AND diagnosis = 'SLE' AND sex = 'female'
SELECT AVG(alb) FROM laboratory WHERE plt > 400 AND diagnosis = 'SLE' AND sex = 'female'
SELECT AVG(alb) FROM laboratory JOIN patient ON laboratory.id = patient.id WHERE sex = 'female' AND plt > 400 AND diagnosis = 'SLE'
SELECT AVG(alb) FROM laboratory JOIN patient ON laboratory.id = patient.id WHERE sex = 'female' AND plt > 400 AND diagnosis = 'SLE'
SELECT AVG(alb) FROM laboratory WHERE plt > 400 AND diagnosis = 'SLE' AND sex = 'female'",SELECT AVG(alb) FROM laboratory WHERE plt > 400 AND diagnosis = 'SLE' AND sex = 'female'
21,942,What is the average fastest lap time in seconds for Lewis Hamilton in all the Formula_1 races?,formula_1,moderate,"SELECT AVG(CAST(SUBSTR(T2.fastestLapTime, 1, INSTR(T2.fastestLapTime, ':') - 1) AS INTEGER) * 60 + CAST(SUBSTR(T2.fastestLapTime, INSTR(T2.fastestLapTime, ':') + 1) AS REAL)) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.surname = 'Hamilton' AND T1.forename = 'Lewis'",7,"SELECT AVG(milliseconds) FROM results WHERE driverid IN (SELECT driverid FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton') AND position = 1
SELECT AVG(milliseconds) FROM results WHERE driverid IN (SELECT driverid FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton') AND position = 1
SELECT AVG(milliseconds) FROM results WHERE driverid IN (SELECT driverid FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton') AND position = 1
SELECT AVG(milliseconds) FROM results WHERE driverid IN (SELECT driverid FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton') AND position = 1
SELECT AVG(milliseconds) FROM results WHERE driverid IN (SELECT driverid FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton') AND position = 1
SELECT AVG(milliseconds) FROM results WHERE driverid IN (SELECT driverid FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton') AND position = 1
SELECT AVG(milliseconds) FROM results WHERE driverid IN (SELECT driverid FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton') AND position = 1",SELECT AVG(milliseconds) FROM results WHERE driverid IN (SELECT driverid FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton') AND position = 1
22,0,What is the highest eligible free rate for K-12 students in the schools in Alameda County?,california_schools,simple,SELECT `Free Meal Count (K-12)` / `Enrollment (K-12)` FROM frpm WHERE `County Name` = 'Alameda' ORDER BY (CAST(`Free Meal Count (K-12)` AS REAL) / `Enrollment (K-12)`) DESC LIMIT 1,7,"SELECT MAX(percent_eligible_free_k_12) FROM schools WHERE county_name = 'Alameda'
SELECT MAX(percent_eligible_free_k_12) FROM schools WHERE county_name = 'Alameda'
SELECT MAX(percent_eligible_free_k_12) FROM schools WHERE county_name = 'Alameda'
SELECT MAX(percent_eligible_free_k_12) FROM schools WHERE county_name = 'Alameda'
SELECT MAX(percent_eligible_free_k_12) FROM schools WHERE county_name = 'Alameda'
SELECT MAX(percent_eligible_free_k_12) FROM schools WHERE county_name = 'Alameda'
SELECT MAX(percent_eligible_free_k_12) FROM schools WHERE county_name = 'Alameda'",SELECT MAX(percent_eligible_free_k_12) FROM schools WHERE county_name = 'Alameda'
23,249,What are the elements of the atoms of TR144_8_19?,toxicology,challenging,SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR144_8_19',7,"SELECT atom.atom_id, atom.molecule_id, atom.element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR144_8_19'
SELECT atom.atom_id, atom.molecule_id, atom.element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR144_8_19'
SELECT atom.atom_id, atom.molecule_id, atom.element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR144_8_19'
SELECT atom.atom_id, atom.molecule_id, atom.element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR144_8_19'
SELECT atom.atom_id, atom.molecule_id, atom.element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR144_8_19'
SELECT atom.atom_id, atom.molecule_id, atom.element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR144_8_19'
SELECT atom.atom_id, atom.molecule_id, atom.element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR144_8_19'","SELECT atom.atom_id, atom.molecule_id, atom.element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR144_8_19'"
24,304,List all carcinogenic molecules and their elements.,toxicology,challenging,"SELECT DISTINCT T2.molecule_id, T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'",7,"SELECT m.label AS molecule_label, a.element FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.element IN ('C', 'H', 'N', 'O', 'P', 'S')
SELECT m.label, a.element FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.element IN ('C', 'H', 'N', 'O', 'P', 'S')
SELECT m.label, a.element FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.element IN ('C', 'H', 'N', 'O', 'P', 'S')
SELECT m.label, a.element FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.element IN ('C', 'H', 'N', 'O', 'P', 'S')
SELECT m.label AS molecule_label, a.element FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.element IN ('C', 'H', 'N', 'O', 'P', 'S')
SELECT m.label, a.element FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.element IN ('C', 'H', 'N', 'O', 'P', 'S')
SELECT m.label AS molecule_label, a.element FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.element IN ('C', 'H', 'O', 'N', 'P', 'S')","SELECT m.label, a.element FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE a.element IN ('C', 'H', 'N', 'O', 'P', 'S')"
25,509,What is the unique id of the set that has the highest number of cards?,card_games,simple,SELECT id FROM sets ORDER BY baseSetSize DESC LIMIT 1,7,"SELECT setcode FROM sets ORDER BY (SELECT COUNT(*) FROM cards WHERE sets.code = cards.setcode) DESC LIMIT 1
SELECT setcode FROM sets ORDER BY (SELECT COUNT(*) FROM cards WHERE sets.code = cards.setcode) DESC LIMIT 1
SELECT setcode FROM sets ORDER BY (SELECT COUNT(*) FROM cards WHERE sets.code = cards.setcode) DESC LIMIT 1
SELECT setcode FROM sets ORDER BY (SELECT COUNT(*) FROM cards WHERE sets.code = cards.setcode) DESC LIMIT 1
SELECT setcode FROM sets ORDER BY (SELECT COUNT(*) FROM cards WHERE sets.code = cards.setcode) DESC LIMIT 1
SELECT setcode FROM sets ORDER BY (SELECT COUNT(*) FROM cards WHERE sets.code = cards.setcode) DESC LIMIT 1
SELECT setcode FROM sets ORDER BY (SELECT COUNT(*) FROM cards WHERE sets.code = cards.setcode) DESC LIMIT 1",SELECT setcode FROM sets ORDER BY (SELECT COUNT(*) FROM cards WHERE sets.code = cards.setcode) DESC LIMIT 1
26,1359,"How many times was the budget in Advertisement for ""Yearly Kickoff"" meeting more than ""October Meeting""?",student_club,challenging,SELECT CAST(SUM(CASE WHEN T2.event_name = 'Yearly Kickoff' THEN T1.amount ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.event_name = 'October Meeting' THEN T1.amount ELSE 0 END) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Advertisement' AND T2.type = 'Meeting',7,"SELECT COUNT(*) FROM budget WHERE category = 'Advertisement' AND amount > (SELECT amount FROM budget WHERE event_name = 'October Meeting')
SELECT COUNT(*) FROM budget WHERE category = 'Advertisement' AND amount > (SELECT amount FROM budget WHERE event_name = 'October Meeting')
SELECT COUNT(*) FROM budget WHERE category = 'Advertisement' AND amount > (SELECT amount FROM budget WHERE event_name = 'October Meeting')
SELECT COUNT(*) FROM budget WHERE category = 'Advertisement' AND amount > (SELECT amount FROM budget WHERE event_name = 'October Meeting')
SELECT COUNT(*) FROM budget WHERE category = 'Advertisement' AND amount > (SELECT amount FROM budget WHERE event_name = 'October Meeting')
SELECT COUNT(*) FROM budget WHERE category = 'Advertisement' AND amount > (SELECT amount FROM budget WHERE event_name = 'October Meeting')
SELECT COUNT(*) FROM budget WHERE category = 'Advertisement' AND amount > (SELECT amount FROM budget WHERE event_name = 'October Meeting')",SELECT COUNT(*) FROM budget WHERE category = 'Advertisement' AND amount > (SELECT amount FROM budget WHERE event_name = 'October Meeting')
27,1474,"Which customers, paying in CZK, consumed the most gas in 2011?",debit_card_specializing,moderate,SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' AND T2.Date BETWEEN 201101 AND 201112 GROUP BY T1.CustomerID ORDER BY SUM(T2.Consumption) DESC LIMIT 1,7,"SELECT customers.customerid, SUM(transactions_1k.amount) AS total_consumption FROM customers JOIN transactions_1k ON customers.customerid = transactions_1k.customerid WHERE customers.currency = 'CZK' AND strftime('%Y', transactions_1k.date) = '2011' GROUP BY customers.customerid ORDER BY total_consumption DESC
SELECT customers.customerid, SUM(transactions_1k.amount) AS total_consumption FROM customers JOIN transactions_1k ON customers.customerid = transactions_1k.customerid WHERE customers.currency = 'CZK' AND strftime('%Y', transactions_1k.date) = '2011' GROUP BY customers.customerid ORDER BY total_consumption DESC
SELECT customers.customerid, SUM(transactions_1k.amount) AS total_consumption FROM customers JOIN transactions_1k ON customers.customerid = transactions_1k.customerid WHERE customers.currency = 'CZK' AND strftime('%Y', transactions_1k.date) = '2011' GROUP BY customers.customerid ORDER BY total_consumption DESC
SELECT customers.customerid, SUM(transactions_1k.amount) AS total_consumption FROM customers JOIN transactions_1k ON customers.customerid = transactions_1k.customerid WHERE customers.currency = 'CZK' AND strftime('%Y', transactions_1k.date) = '2011' GROUP BY customers.customerid ORDER BY total_consumption DESC
SELECT customers.customerid, SUM(transactions_1k.amount) AS total_consumption FROM customers JOIN transactions_1k ON customers.customerid = transactions_1k.customerid WHERE customers.currency = 'CZK' AND strftime('%Y', transactions_1k.date) = '2011' GROUP BY customers.customerid ORDER BY total_consumption DESC
SELECT customers.customerid, SUM(transactions_1k.amount) AS total_consumption FROM customers JOIN transactions_1k ON customers.customerid = transactions_1k.customerid WHERE customers.currency = 'CZK' AND strftime('%Y', transactions_1k.date) = '2011' GROUP BY customers.customerid ORDER BY total_consumption DESC
SELECT customers.customerid, SUM(transactions_1k.amount) AS total_consumption FROM customers JOIN transactions_1k ON customers.customerid = transactions_1k.customerid WHERE customers.currency = 'CZK' AND strftime('%Y', transactions_1k.date) = '2011' GROUP BY customers.customerid ORDER BY total_consumption DESC","SELECT customers.customerid, SUM(transactions_1k.amount) AS total_consumption FROM customers JOIN transactions_1k ON customers.customerid = transactions_1k.customerid WHERE customers.currency = 'CZK' AND strftime('%Y', transactions_1k.date) = '2011' GROUP BY customers.customerid ORDER BY total_consumption DESC"
28,506,"For all the set of cards that has Japanese translation, what is the percentage of them are only available in non-foil?",card_games,challenging,SELECT CAST(SUM(CASE WHEN isNonFoilOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) FROM sets WHERE code IN ( SELECT setCode FROM set_translations WHERE language = 'Japanese' ),7,"SELECT (SELECT COUNT(*) FROM cards WHERE cards.hasnonfoil = 1 AND cards.hasfoil = 0 AND cards.availability = 'Japanese') * 100.0 / (SELECT COUNT(*) FROM cards WHERE cards.availability = 'Japanese') AS percentage_only_non_foil FROM cards
SELECT (SELECT COUNT(*) FROM cards WHERE cards.hasnonfoil = 't' AND cards.hasfoil = 'f' AND cards.availability = 'Japanese') * 100.0 / (SELECT COUNT(*) FROM cards WHERE cards.availability = 'Japanese') AS percentage_non_foil_japanese FROM cards
SELECT (SELECT COUNT(*) FROM cards WHERE cards.hasnonfoil = 1 AND cards.hasfoil = 0 AND cards.availability = 'Japanese') * 100.0 / (SELECT COUNT(*) FROM cards WHERE cards.availability = 'Japanese') AS percentage_only_non_foil FROM cards
SELECT (SELECT COUNT(*) FROM cards WHERE cards.hasnonfoil = 1 AND cards.hasfoil = 0 AND cards.availability = 'Japanese') * 100.0 / (SELECT COUNT(*) FROM cards WHERE cards.availability = 'Japanese') AS percentage_only_non_foil FROM cards
SELECT (SELECT COUNT(*) FROM cards WHERE cards.hasnonfoil = 1 AND cards.hasfoil = 0 AND cards.availability = 'Japanese') * 100.0 / (SELECT COUNT(*) FROM cards WHERE cards.availability = 'Japanese') AS percentage_only_non_foil FROM cards
SELECT (SELECT COUNT(*) FROM cards WHERE cards.hasnonfoil = 1 AND cards.hasfoil = 0 AND cards.availability = 'Japanese') * 100.0 / (SELECT COUNT(*) FROM cards WHERE cards.availability = 'Japanese') AS percentage_only_non_foil FROM cards
SELECT (SELECT COUNT(*) FROM cards WHERE cards.hasnonfoil = 1 AND cards.hasfoil = 0 AND cards.availability = 'Japanese') * 100.0 / (SELECT COUNT(*) FROM cards WHERE cards.availability = 'Japanese') AS percentage_only_non_foil FROM cards",SELECT (SELECT COUNT(*) FROM cards WHERE cards.hasnonfoil = 1 AND cards.hasfoil = 0 AND cards.availability = 'Japanese') * 100.0 / (SELECT COUNT(*) FROM cards WHERE cards.availability = 'Japanese') AS percentage_only_non_foil FROM cards
29,362,"What is the description about the ruling of card ""Condemn""?",card_games,simple,SELECT T2.text FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Condemn',7,"SELECT description FROM rulings WHERE card_id = (SELECT id FROM cards WHERE asciiname = 'Condemn')
SELECT description FROM rulings WHERE card_id = (SELECT id FROM cards WHERE asciiname = 'Condemn')
SELECT description FROM rulings WHERE card_id = (SELECT id FROM cards WHERE asciiname = 'Condemn')
SELECT description FROM rulings WHERE card_id = (SELECT id FROM cards WHERE asciiname = 'Condemn')
SELECT description FROM rulings WHERE card_id = (SELECT id FROM cards WHERE asciiname = 'Condemn')
SELECT description FROM rulings WHERE card_id = (SELECT id FROM cards WHERE asciiname = 'Condemn')
SELECT description FROM rulings WHERE card_id = (SELECT id FROM cards WHERE asciiname = 'Condemn')",SELECT description FROM rulings WHERE card_id = (SELECT id FROM cards WHERE asciiname = 'Condemn')
30,1180,Was the patient a man or a women whose ALT glutamic pylvic transaminase status got 9 on 1992-6-12?,thrombosis_prediction,moderate,SELECT T1.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GPT = 9.0 AND T2.Date = '1992-06-12',7,"SELECT * FROM patient WHERE id = (SELECT patient_id FROM laboratory WHERE date = '1992-6-12' AND got = 9 AND lab_test = 'gpt')
SELECT * FROM patient WHERE id = (SELECT patient_id FROM laboratory WHERE date = '1992-6-12' AND got = 9 AND lab_test = 'gpt')
SELECT * FROM patient WHERE id = (SELECT patient_id FROM examination WHERE '1992-6-12' = examination_date AND 'ALT glutamic pylvic transaminase' = diagnosis AND got = 9)
SELECT * FROM patient WHERE id = (SELECT patient_id FROM laboratory WHERE date = '1992-6-12' AND got = 9 AND lab_test = 'gpt')
SELECT * FROM patient WHERE id = (SELECT patient_id FROM laboratory WHERE date = '1992-6-12' AND got = 9 AND lab_test = 'gpt')
SELECT * FROM patient WHERE id = (SELECT patient_id FROM laboratory WHERE date = '1992-6-12' AND got = 9 AND lab_test = 'gpt')
SELECT * FROM patient WHERE id = (SELECT patient_id FROM laboratory WHERE date = '1992-6-12' AND got = 9 AND lab_test = 'ALT')",SELECT * FROM patient WHERE id = (SELECT patient_id FROM laboratory WHERE date = '1992-6-12' AND got = 9 AND lab_test = 'gpt')
31,586,Which user added a bounty amount of 50 to the post title mentioning variance?,codebase_community,challenging,"SELECT T3.DisplayName, T1.Title FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId INNER JOIN users AS T3 ON T3.Id = T2.UserId WHERE T2.BountyAmount = 50 AND T1.Title LIKE '%variance%'",7,"SELECT userid FROM votes WHERE bountyamount = 50 AND postid IN (SELECT id FROM posts WHERE title LIKE '%variance%')
SELECT userid FROM votes WHERE bountyamount = 50 AND postid IN (SELECT id FROM posts WHERE title LIKE '%variance%')
SELECT userid FROM votes WHERE bountyamount = 50 AND postid IN (SELECT id FROM posts WHERE title LIKE '%variance%')
SELECT userid FROM votes WHERE bountyamount = 50 AND postid IN (SELECT id FROM posts WHERE title LIKE '%variance%')
SELECT userid FROM votes WHERE bountyamount = 50 AND postid IN (SELECT id FROM posts WHERE title LIKE '%variance%')
SELECT userid FROM votes WHERE bountyamount = 50 AND postid IN (SELECT id FROM posts WHERE title LIKE '%variance%')
SELECT userid FROM votes WHERE bountyamount = 50 AND postid IN (SELECT id FROM posts WHERE title LIKE '%variance%')",SELECT userid FROM votes WHERE bountyamount = 50 AND postid IN (SELECT id FROM posts WHERE title LIKE '%variance%')
32,1169,What is the ratio of male to female patients among all those with abnormal uric acid counts?,thrombosis_prediction,challenging,SELECT CAST(SUM(CASE WHEN T2.UA <= 8.0 AND T1.SEX = 'M' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.UA <= 6.5 AND T1.SEX = 'F' THEN 1 ELSE 0 END) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID,7,"SELECT sex, COUNT(*) AS total_patients, COUNT(CASE WHEN ua = 'abnormal' THEN 1 END) AS abnormal_uric_acid_count FROM patient GROUP BY sex
SELECT sex, COUNT(*) AS total_patients, COUNT(CASE WHEN ua = 'abnormal' THEN 1 END) AS abnormal_uric_acid_count FROM patient GROUP BY sex
SELECT sex, COUNT(*) AS total_patients, COUNT(CASE WHEN ua != 'normal' THEN 1 END) AS abnormal_uric_acid FROM patient GROUP BY sex
SELECT sex, COUNT(*) AS total_patients, COUNT(CASE WHEN ua = 'abnormal' THEN 1 END) AS abnormal_uric_acid_count FROM patient GROUP BY sex
SELECT sex, COUNT(*) AS total_patients, COUNT(CASE WHEN ua <> 'normal' THEN 1 END) AS abnormal_uric_acid FROM patient GROUP BY sex
SELECT sex, COUNT(*) AS total_patients, COUNT(CASE WHEN ua = 'abnormal' THEN 1 END) AS abnormal_uric_acid_count FROM patient GROUP BY sex
SELECT sex, COUNT(*) AS total_patients, COUNT(CASE WHEN ua = 'abnormal' THEN 1 END) AS abnormal_uric_acid_count FROM patient GROUP BY sex","SELECT sex, COUNT(*) AS total_patients, COUNT(CASE WHEN ua = 'abnormal' THEN 1 END) AS abnormal_uric_acid_count FROM patient GROUP BY sex"
33,1210,What is the average index of the lactate dehydrogenase (LDH) for all patients with lactate dehydrogenase (LDH) within the normal range.,thrombosis_prediction,simple,SELECT AVG(LDH) FROM Laboratory WHERE LDH < 500,7,"SELECT AVG(ldh) FROM laboratory WHERE ldh BETWEEN 0 AND 100
SELECT AVG(ldh) FROM laboratory WHERE ldh BETWEEN 0 AND 100
SELECT AVG(ldh) FROM laboratory WHERE ldh BETWEEN (SELECT MIN(ldh) FROM laboratory) AND (SELECT MAX(ldh) FROM laboratory)
SELECT AVG(ldh) FROM laboratory WHERE ldh BETWEEN (SELECT MIN(ldh) FROM laboratory) AND (SELECT MAX(ldh) FROM laboratory)
SELECT AVG(ldh) FROM laboratory WHERE ldh BETWEEN 0 AND 100
SELECT AVG(ldh) FROM laboratory WHERE ldh BETWEEN 0 AND 100
SELECT AVG(ldh) FROM laboratory WHERE ldh BETWEEN 0 AND 100",SELECT AVG(ldh) FROM laboratory WHERE ldh BETWEEN 0 AND 100
34,987,What is the average fastest lap time of the top 10 drivers in the 2006 United States Grand Prix?,formula_1,simple,SELECT AVG(T1.fastestLapTime) FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId WHERE T1.rank < 11 AND T2.year = 2006 AND T2.name = 'United States Grand Prix',7,"SELECT AVG(laptimes.time) FROM laptimes JOIN races ON laptimes.raceid = races.raceid WHERE races.year = 2006 AND races.name = 'United States Grand Prix' ORDER BY laptimes.time ASC LIMIT 10
SELECT AVG(laptimes.time) FROM laptimes JOIN races ON laptimes.raceid = races.raceid WHERE races.year = 2006 AND races.name = 'United States Grand Prix' ORDER BY laptimes.time ASC LIMIT 10
SELECT AVG(laptimes.time) FROM laptimes JOIN races ON laptimes.raceid = races.raceid WHERE races.year = 2006 AND races.name = 'United States Grand Prix' ORDER BY laptimes.time ASC LIMIT 10
SELECT AVG(laptimes.time) FROM laptimes JOIN races ON laptimes.raceid = races.raceid WHERE races.year = 2006 AND races.name = 'United States Grand Prix' ORDER BY laptimes.time ASC LIMIT 10
SELECT AVG(laptimes.time) FROM laptimes JOIN races ON laptimes.raceid = races.raceid WHERE races.year = 2006 AND races.name = 'United States Grand Prix' ORDER BY laptimes.time ASC LIMIT 10
SELECT AVG(laptimes.time) FROM laptimes JOIN races ON laptimes.raceid = races.raceid WHERE races.year = 2006 AND races.name = 'United States Grand Prix' ORDER BY laptimes.time ASC LIMIT 10
SELECT AVG(laptimes.time) FROM laptimes JOIN races ON laptimes.raceid = races.raceid WHERE races.year = 2006 AND races.name = 'United States Grand Prix' ORDER BY laptimes.time ASC LIMIT 10",SELECT AVG(laptimes.time) FROM laptimes JOIN races ON laptimes.raceid = races.raceid WHERE races.year = 2006 AND races.name = 'United States Grand Prix' ORDER BY laptimes.time ASC LIMIT 10
35,1148,What is the percentage of players that are under 180 cm who have an overall strength of more than 70?,european_football_2,moderate,SELECT CAST(COUNT(CASE WHEN t2.overall_rating > 70 THEN t1.id ELSE NULL END) AS REAL) * 100 / COUNT(t1.id) percent FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.height < 180,7,"SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM player)) AS percentage FROM player WHERE height < 180 AND overall_rating > 70
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM player)) AS percentage FROM player WHERE height < 180 AND overall_rating > 70
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM player)) AS percentage_under_180_cm_strong_players FROM player WHERE height < 180 AND (     overall_rating > 70 OR     potential > 70 OR     crossing > 70 OR     finishing > 70 OR     heading_accuracy > 70 OR     short_passing > 70 OR     volleys > 70 OR     dribbling > 70 OR     curve > 70 OR     free_kick_accuracy > 70 OR     long_passing > 70 OR     ball_control > 70 OR     acceleration > 70 OR     sprint_speed > 70 OR     agility > 70 OR     reactions > 70 OR     balance > 70 OR     shot_power > 70 OR     jumping > 70 OR     stamina > 70 OR     strength > 70 OR     long_shots > 70 OR     aggression > 70 OR     interceptions > 70 OR     positioning > 70 OR     vision > 70 OR     penalties > 70 OR     marking > 70 OR     standing_
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM player)) AS percentage FROM player WHERE height < 180 AND overall_rating > 70
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM player)) AS percentage_under_180_cm_strong_players FROM player WHERE height < 180 AND (     overall_rating > 70 OR     potential > 70 OR     crossing > 70 OR     finishing > 70 OR     heading_accuracy > 70 OR     short_passing > 70 OR     volleys > 70 OR     dribbling > 70 OR     curve > 70 OR     free_kick_accuracy > 70 OR     long_passing > 70 OR     ball_control > 70 OR     acceleration > 70 OR     sprint_speed > 70 OR     agility > 70 OR     reactions > 70 OR     balance > 70 OR     shot_power > 70 OR     jumping > 70 OR     stamina > 70 OR     strength > 70 OR     long_shots > 70 OR     aggression > 70 OR     interceptions > 70 OR     positioning > 70 OR     vision > 70 OR     penalties > 70 OR     marking > 70 OR     standing_
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM player)) AS percentage FROM player WHERE height < 180 AND overall_rating > 70
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM player)) AS percentage FROM player WHERE height < 180 AND overall_rating > 70",SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM player)) AS percentage FROM player WHERE height < 180 AND overall_rating > 70
36,218,What percentage of carcinogenic-type molecules does not contain fluorine?,toxicology,challenging,SELECT CAST(COUNT(DISTINCT CASE WHEN T1.element <> 'f' THEN T2.molecule_id ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T2.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+',7,"SELECT (COUNT(*) * 1.0 / (SELECT COUNT(*) FROM molecule)) * 100 AS percentage_no_fluorine FROM (     SELECT m.molecule_id     FROM molecule m     LEFT JOIN atom a ON m.molecule_id = a.molecule_id     LEFT JOIN connected c ON a.atom_id = c.atom_id     LEFT JOIN bond b ON c.bond_id = b.bond_id     WHERE b.bond_type = 'carcinogenic' AND NOT EXISTS (         SELECT 1         FROM atom a2         JOIN connected c2 ON a2.atom_id = c2.atom_id         JOIN bond b2 ON c2.bond_id = b2.bond_id         WHERE b2.bond_type = 'carcinogenic' AND a2.element = 'F' AND c2.atom_id2 = a.atom_id     ) ) subquery
SELECT (COUNT(*) * 1.0 / (SELECT COUNT(*) FROM molecule)) * 100 AS percentage_no_fluorine FROM (     SELECT m.molecule_id     FROM molecule m     LEFT JOIN atom a ON m.molecule_id = a.molecule_id     LEFT JOIN connected c ON a.atom_id = c.atom_id     LEFT JOIN bond b ON c.bond_id = b.bond_id     WHERE b.bond_type = 'carcinogenic' AND NOT EXISTS (         SELECT 1         FROM atom a2         JOIN connected c2 ON a2.atom_id = c2.atom_id         JOIN bond b2 ON c2.bond_id = b2.bond_id         WHERE b2.bond_type = 'carcinogenic' AND a2.element = 'F' AND c2.atom_id2 = a.atom_id     ) ) subquery
SELECT (COUNT(*) * 1.0 / (SELECT COUNT(*) FROM molecule)) * 100 AS percentage_no_fluorine FROM molecule WHERE molecule_id NOT IN (     SELECT molecule_id     FROM atom     WHERE element = 'F' ) AND molecule_id IN (     SELECT molecule_id     FROM bond     WHERE bond_type = 'carcinogenic' )
SELECT (COUNT(*) * 1.0 / (SELECT COUNT(*) FROM molecule)) * 100 AS percentage_no_fluorine FROM (     SELECT m.molecule_id     FROM molecule m     LEFT JOIN atom a ON m.molecule_id = a.molecule_id     LEFT JOIN connected c ON a.atom_id = c.atom_id     LEFT JOIN bond b ON c.bond_id = b.bond_id     WHERE b.bond_type = 'carcinogenic' AND NOT EXISTS (         SELECT 1         FROM atom a2         JOIN connected c2 ON a2.atom_id = c2.atom_id         JOIN bond b2 ON c2.bond_id = b2.bond_id         WHERE b2.bond_type = 'carcinogenic' AND a2.element = 'F' AND c2.atom_id2 = a.atom_id     ) ) subquery
SELECT (COUNT(*) * 1.0 / (SELECT COUNT(*) FROM molecule)) * 100 AS percentage_no_fluorine FROM molecule WHERE molecule_id NOT IN (     SELECT molecule_id     FROM atom     WHERE element = 'F' ) AND molecule_id IN (     SELECT molecule_id     FROM bond     WHERE bond_type = 'carcinogenic' )
SELECT (COUNT(*) * 1.0 / (SELECT COUNT(*) FROM molecule)) * 100 AS percentage_no_fluorine FROM (     SELECT m.molecule_id     FROM molecule m     LEFT JOIN atom a ON m.molecule_id = a.molecule_id     LEFT JOIN connected c ON a.atom_id = c.atom_id     LEFT JOIN bond b ON c.bond_id = b.bond_id     WHERE b.bond_type = 'carcinogenic' AND NOT EXISTS (         SELECT 1         FROM atom a2         JOIN connected c2 ON a2.atom_id = c2.atom_id         JOIN bond b2 ON c2.bond_id = b2.bond_id         WHERE b2.bond_type = 'carcinogenic' AND a2.element = 'F' AND c2.atom_id2 = a.atom_id     ) ) subquery
SELECT (COUNT(*) * 1.0 / (SELECT COUNT(*) FROM molecule)) * 100 AS percentage_no_fluorine FROM molecule WHERE molecule_id NOT IN (     SELECT molecule_id     FROM atom     WHERE element = 'F' ) AND molecule_id IN (     SELECT molecule_id     FROM bond     WHERE bond_type = 'carcinogenic' )",SELECT (COUNT(*) * 1.0 / (SELECT COUNT(*) FROM molecule)) * 100 AS percentage_no_fluorine FROM (     SELECT m.molecule_id     FROM molecule m     LEFT JOIN atom a ON m.molecule_id = a.molecule_id     LEFT JOIN connected c ON a.atom_id = c.atom_id     LEFT JOIN bond b ON c.bond_id = b.bond_id     WHERE b.bond_type = 'carcinogenic' AND NOT EXISTS (         SELECT 1         FROM atom a2         JOIN connected c2 ON a2.atom_id = c2.atom_id         JOIN bond b2 ON c2.bond_id = b2.bond_id         WHERE b2.bond_type = 'carcinogenic' AND a2.element = 'F' AND c2.atom_id2 = a.atom_id     ) ) subquery
37,397,"What is the mana cost of cards with a normal layout, a 2003 frame version, with a black border color, and available in paper and mtgo?",card_games,moderate,"SELECT manaCost FROM cards WHERE availability = 'mtgo,paper' AND borderColor = 'black' AND frameVersion = 2003 AND layout = 'normal'",7,"SELECT convertedmanacost FROM cards WHERE layout = 'normal' AND frameversion = '2003' AND bordercolor = 'black' AND availability IN ('paper', 'mtgo')
SELECT convertedmanacost FROM cards WHERE layout = 'normal' AND frameversion = '2003' AND bordercolor = 'black' AND availability IN ('paper', 'mtgo')
SELECT convertedmanacost FROM cards WHERE layout = 'normal' AND frameversion = '2003' AND bordercolor = 'black' AND availability IN ('paper', 'mtgo')
SELECT convertedmanacost FROM cards WHERE layout = 'normal' AND frameversion = '2003' AND bordercolor = 'black' AND availability IN ('paper', 'mtgo')
SELECT convertedmanacost FROM cards WHERE layout = 'normal' AND frameversion = '2003' AND bordercolor = 'black' AND availability IN ('paper', 'mtgo')
SELECT convertedmanacost FROM cards WHERE layout = 'normal' AND frameversion = '2003' AND bordercolor = 'black' AND availability IN ('paper', 'mtgo')
SELECT convertedmanacost FROM cards WHERE layout = 'normal' AND frameversion = '2003' AND bordercolor = 'black' AND availability IN ('paper', 'mtgo')","SELECT convertedmanacost FROM cards WHERE layout = 'normal' AND frameversion = '2003' AND bordercolor = 'black' AND availability IN ('paper', 'mtgo')"
38,83,"Of the schools that offers a magnet program serving a grade span of Kindergarten to 8th grade, how many offers Multiple Provision Types? List the number of cities that offers a Kindergarten to 8th grade span and indicate how many schools are there serving such grade span for each city.",california_schools,challenging,"SELECT T2.City, COUNT(T2.CDSCode) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.Magnet = 1 AND T2.GSoffered = 'K-8' AND T1.`NSLP Provision Status` = 'Multiple Provision Types' GROUP BY T2.City",7,"SELECT city, COUNT(school) AS num_schools, COUNT(DISTINCT school) AS num_cities FROM schools WHERE low_grade = 'Kindergarten' AND high_grade = '8th grade' AND magnet = 'Y' GROUP BY city ORDER BY city
SELECT city, COUNT(school) AS num_schools, COUNT(DISTINCT school) AS num_cities FROM schools WHERE low_grade = 'Kindergarten' AND high_grade = '8th grade' AND magnet = 'Y' GROUP BY city
SELECT city, COUNT(school) AS num_schools, COUNT(DISTINCT school) AS num_cities FROM schools WHERE low_grade = 'Kindergarten' AND high_grade = '8th grade' AND magnet = 'Y' GROUP BY city
SELECT city, COUNT(school) AS num_schools, COUNT(DISTINCT school) AS num_cities FROM schools WHERE low_grade = 'Kindergarten' AND high_grade = '8th grade' AND magnet = 'Y' GROUP BY city
SELECT city, COUNT(DISTINCT school) AS num_schools, COUNT(DISTINCT school) FILTER (WHERE low_grade = 'Kindergarten' AND high_grade = '8th grade') AS num_schools_serving_kindergarten_to_8th_grade FROM schools WHERE magnet = 'Y' AND low_grade = 'Kindergarten' AND high_grade = '8th grade' GROUP BY city
SELECT city, COUNT(DISTINCT school) AS num_schools, COUNT(DISTINCT school) FILTER (WHERE low_grade = 'Kindergarten' AND high_grade = '8th grade') AS num_schools_serving_kindergarten_to_8th_grade FROM schools WHERE magnet = 'Y' AND low_grade = 'Kindergarten' AND high_grade = '8th grade' GROUP BY city
SELECT city, COUNT(school) AS num_schools FROM schools WHERE low_grade = 'Kindergarten' AND high_grade = '8th grade' GROUP BY city ORDER BY city","SELECT city, COUNT(school) AS num_schools, COUNT(DISTINCT school) AS num_cities FROM schools WHERE low_grade = 'Kindergarten' AND high_grade = '8th grade' AND magnet = 'Y' GROUP BY city"
39,1194,"What sex is the patient who in a medical examination was diagnosed with PSS and in a laboratory examination had a blood level of C-reactive protein de 2+, createnine 1 and LDH 123?",thrombosis_prediction,challenging,SELECT T1.SEX FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T3.ID = T2.ID WHERE T2.Diagnosis = 'PSS' AND T3.CRP = '2+' AND T3.CRE = 1.0 AND T3.LDH = 123,7,"SELECT sex FROM patient WHERE id IN (SELECT patient_id FROM examination WHERE diagnosis = 'PSS' AND laboratory.id IN (SELECT id FROM laboratory WHERE cre = 1 AND ldh = 123))
SELECT sex FROM patient WHERE id IN (SELECT patient_id FROM examination WHERE diagnosis = 'PSS' AND laboratory.id IN (SELECT id FROM laboratory WHERE cre = 1 AND ldh = 123))
SELECT sex FROM patient WHERE id IN (SELECT patient_id FROM examination WHERE diagnosis = 'PSS' AND laboratory.id IN (SELECT id FROM laboratory WHERE cre = 1 AND ldh = 123))
SELECT sex FROM patient WHERE id IN (SELECT patient_id FROM examination WHERE diagnosis = 'PSS' AND laboratory.id IN (SELECT id FROM laboratory WHERE cre = 1 AND ldh = 123))
SELECT sex  FROM patient  WHERE id IN (     SELECT patient_id      FROM examination      WHERE diagnosis = 'PSS'      AND patient_id IN (         SELECT patient_id          FROM laboratory          WHERE crp = '2+'          AND createnine = '1'          AND ldh = '123'     ) )
SELECT sex FROM patient WHERE id IN (SELECT patient_id FROM examination WHERE diagnosis = 'PSS' AND laboratory.id IN (SELECT id FROM laboratory WHERE cre = 1 AND ldh = 123))
SELECT sex FROM patient WHERE id IN (SELECT patient_id FROM examination WHERE diagnosis = 'PSS' AND laboratory.id IN (SELECT id FROM laboratory WHERE cre = 1 AND ldh = 123))",SELECT sex FROM patient WHERE id IN (SELECT patient_id FROM examination WHERE diagnosis = 'PSS' AND laboratory.id IN (SELECT id FROM laboratory WHERE cre = 1 AND ldh = 123))
40,814,List the skin colour of the superheroes with 100 attribute value.,superhero,moderate,SELECT DISTINCT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.skin_colour_id = T2.id INNER JOIN hero_attribute AS T3 ON T1.id = T3.hero_id WHERE T3.attribute_value = 100,7,"SELECT skin_colour_id FROM superhero WHERE alignment_id = 100
SELECT skin_colour_id FROM superhero WHERE alignment_id = 100
SELECT skin_colour_id FROM superhero WHERE alignment_id = 100
SELECT skin_colour_id FROM superhero WHERE alignment_id = 100
SELECT skin_colour_id FROM superhero WHERE alignment_id = 100
SELECT skin_colour_id FROM superhero WHERE alignment_id = 100
SELECT skin_colour_id FROM superhero WHERE alignment_id = 100",SELECT skin_colour_id FROM superhero WHERE alignment_id = 100
41,1429,What is the name of the social event that was attended by the vice president of the Student_Club located at 900 E. Washington St.?,student_club,challenging,SELECT T2.event_name FROM attendance AS T1 INNER JOIN event AS T2 ON T2.event_id = T1.link_to_event INNER JOIN member AS T3 ON T1.link_to_member = T3.member_id WHERE T3.position = 'Vice President' AND T2.location = '900 E. Washington St.' AND T2.type = 'Social',7,"SELECT event_name FROM event JOIN location ON event.location = location.location_id WHERE location.zip_code = '900 E. Washington St.' AND event.type = 'social' AND event.status = 'active'
SELECT event_name FROM event JOIN location ON event.location = location.location_id WHERE location.zip_code = '900 E. Washington St.' AND event.type = 'social' AND event.status = 'active'
SELECT event_name FROM event JOIN location ON event.location = location.location_id WHERE location.zip_code = '900 E. Washington St.' AND event.type = 'social' AND event.status = 'active'
SELECT event_name FROM event JOIN location ON event.location = location.location_id WHERE location.zip_code = '900 E. Washington St.' AND event.type = 'social' AND event.status = 'active'
SELECT event_name FROM event JOIN location ON event.location = location.location_id WHERE location.zip_code = '900 E. Washington St.' AND event.type = 'social' AND event.status = 'active'
SELECT event_name FROM event JOIN location ON event.location = location.location_id WHERE location.zip_code = '900 E. Washington St.' AND event.type = 'social' AND event.status = 'active'
SELECT event_name FROM event JOIN location ON event.location = location.location_id WHERE location.zip_code = '900 E. Washington St.' AND event.type = 'social' AND event.status = 'active'",SELECT event_name FROM event JOIN location ON event.location = location.location_id WHERE location.zip_code = '900 E. Washington St.' AND event.type = 'social' AND event.status = 'active'
42,821,List down Ajax's superpowers.,superhero,simple,SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Ajax',7,"SELECT power_name FROM superpower JOIN hero_power ON superpower.id = hero_power.power_id JOIN superhero ON hero_power.hero_id = superhero.id WHERE superhero_name = 'Ajax'
SELECT power_name FROM superpower JOIN hero_power ON superpower.id = hero_power.power_id JOIN superhero ON hero_power.hero_id = superhero.id WHERE superhero_name = 'Ajax'
SELECT power_name FROM superpower JOIN hero_power ON superpower.id = hero_power.power_id JOIN superhero ON hero_power.hero_id = superhero.id WHERE superhero_name = 'Ajax'
SELECT power_name FROM superpower JOIN hero_power ON superpower.id = hero_power.power_id JOIN superhero ON hero_power.hero_id = superhero.id WHERE superhero_name = 'Ajax'
SELECT power_name FROM superpower JOIN hero_power ON superpower.id = hero_power.power_id JOIN superhero ON hero_power.hero_id = superhero.id WHERE superhero_name = 'Ajax'
SELECT power_name FROM superpower JOIN hero_power ON superpower.id = hero_power.power_id JOIN superhero ON hero_power.hero_id = superhero.id WHERE superhero_name = 'Ajax'
SELECT power_name FROM superpower JOIN hero_power ON superpower.id = hero_power.power_id JOIN superhero ON hero_power.hero_id = superhero.id WHERE superhero_name = 'Ajax'",SELECT power_name FROM superpower JOIN hero_power ON superpower.id = hero_power.power_id JOIN superhero ON hero_power.hero_id = superhero.id WHERE superhero_name = 'Ajax'
43,1192,List all patients who were followed up at the outpatient clinic who underwent a laboratory test in October 1991 and had a total blood bilirubin level within the normal range.,thrombosis_prediction,challenging,SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.`T-BIL` < 2.0 AND T2.Date LIKE '1991-10-%',7,"SELECT DISTINCT p.id FROM patient p JOIN examination e ON p.id = e.id JOIN laboratory l ON e.id = l.id WHERE strftime('%Y-%m', e.examination_date) = '1991-10' AND l.t_bil BETWEEN 0 AND 1.2
SELECT DISTINCT p.id FROM patient p JOIN examination e ON p.id = e.id JOIN laboratory l ON p.id = l.id WHERE e.examination_date LIKE '1991-10%' AND l.t_bil BETWEEN 0 AND 1.2
SELECT DISTINCT p.id FROM patient p JOIN examination e ON p.id = e.id JOIN laboratory l ON p.id = l.id WHERE e.examination_date LIKE '1991-10%' AND l.t_bil BETWEEN 0 AND 1.2
SELECT DISTINCT p.id FROM patient p JOIN examination e ON p.id = e.id JOIN laboratory l ON p.id = l.id WHERE e.examination_date LIKE '1991-10%' AND l.t_bil BETWEEN 0 AND 1.2
SELECT DISTINCT p.id FROM patient p JOIN examination e ON p.id = e.id JOIN laboratory l ON e.id = l.id WHERE strftime('%Y-%m', e.examination_date) = '1991-10' AND l.t_bil BETWEEN 0 AND 1.2
SELECT DISTINCT p.id FROM patient p JOIN examination e ON p.id = e.id JOIN laboratory l ON e.id = l.id WHERE strftime('%Y-%m', e.examination_date) = '1991-10' AND l.t_bil BETWEEN 0 AND 1.2
SELECT DISTINCT p.id FROM patient p JOIN examination e ON p.id = e.id JOIN laboratory l ON p.id = l.id WHERE e.examination_date LIKE '1991-10%' AND l.t_bil BETWEEN 0 AND 1.2",SELECT DISTINCT p.id FROM patient p JOIN examination e ON p.id = e.id JOIN laboratory l ON p.id = l.id WHERE e.examination_date LIKE '1991-10%' AND l.t_bil BETWEEN 0 AND 1.2
44,1315,"How many students of the Student_Club have attended the event ""Women's Soccer""?",student_club,simple,SELECT COUNT(T1.event_id) FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'Women''s Soccer',7,"SELECT COUNT(*) FROM attendance JOIN member ON attendance.link_to_member = member.member_id JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women's Soccer' AND member.link_to_major IN (SELECT major_id FROM major WHERE major_name = 'Student_Club')
SELECT COUNT(*) FROM attendance JOIN member ON attendance.link_to_member = member.member_id JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women's Soccer' AND member.link_to_major IN (SELECT major_id FROM major WHERE major_name = 'Student_Club')
SELECT COUNT(*) FROM attendance JOIN member ON attendance.link_to_member = member.member_id JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women's Soccer' AND member.link_to_major IN (SELECT major_id FROM major WHERE major_name = 'Student_Club')
SELECT COUNT(*) FROM attendance JOIN member ON attendance.link_to_member = member.member_id JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women's Soccer' AND member.link_to_major IN (SELECT major_id FROM major WHERE major_name = 'Student_Club')
SELECT COUNT(*) FROM attendance JOIN member ON attendance.link_to_member = member.member_id JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women's Soccer' AND member.link_to_major IN (SELECT major_id FROM major WHERE major_name = 'Student_Club')
SELECT COUNT(*) FROM attendance JOIN member ON attendance.link_to_member = member.member_id JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women's Soccer' AND member.link_to_major IN (SELECT major_id FROM major WHERE major_name = 'Student_Club')
SELECT COUNT(*) FROM attendance JOIN member ON attendance.link_to_member = member.member_id JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women's Soccer' AND member.link_to_major IN (SELECT major_id FROM major WHERE major_name = 'Student_Club')",SELECT COUNT(*) FROM attendance JOIN member ON attendance.link_to_member = member.member_id JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women's Soccer' AND member.link_to_major IN (SELECT major_id FROM major WHERE major_name = 'Student_Club')
45,788,How many percent of female heroes were published by Marvel Comics?,superhero,challenging,SELECT CAST(COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T3.gender = 'Female',7,"SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender_name = 'Female')) AS percentage_female_heroes FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender_name = 'Female')) AS percentage_female_heroes FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender_name = 'Female')) AS percentage_female_heroes FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender_name = 'Female')) AS percentage_female_heroes FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender_name = 'Female')) AS percentage_female_heroes FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender_name = 'Female')) AS percentage_female_heroes FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender_name = 'Female')) AS percentage_female_heroes FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')",SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender_name = 'Female')) AS percentage_female_heroes FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')
46,307,Name the atoms' elements that form bond TR000_2_3.,toxicology,challenging,SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR000_2_3',7,"SELECT a.atom_id, a.molecule_id, a.element  FROM atoms a  JOIN connected c ON a.atom_id = c.atom_id  JOIN bonds b ON c.bond_id = b.bond_id  WHERE b.molecule_id = 'TR000_2_3'
SELECT a.atom_id, a.molecule_id, a.element  FROM TR000_2_3.atom a  JOIN connected c ON a.atom_id = c.atom_id  JOIN bond b ON c.bond_id = b.bond_id  WHERE b.molecule_id = 'TR000_2_3'
SELECT a.atom_id, a.molecule_id, a.element  FROM atoms a  JOIN connected c ON a.atom_id = c.atom_id  JOIN bonds b ON c.bond_id = b.bond_id  WHERE b.molecule_id = 'TR000_2_3'
SELECT a.atom_id, a.molecule_id, a.element  FROM atoms a  JOIN connected c ON a.atom_id = c.atom_id  JOIN bonds b ON c.bond_id = b.bond_id  WHERE b.molecule_id = 'TR000_2_3'
SELECT a.atom_id, a.molecule_id, a.element  FROM atoms a  JOIN connected c ON a.atom_id = c.atom_id  JOIN bonds b ON c.bond_id = b.bond_id  WHERE b.molecule_id = 'TR000_2_3'
SELECT a.atom_id, a.molecule_id, a.element  FROM atoms a  JOIN connected c ON a.atom_id = c.atom_id  JOIN bonds b ON c.bond_id = b.bond_id  WHERE b.molecule_id = 'TR000_2_3'
SELECT a.atom_id, a.molecule_id, a.element  FROM TR000_2_3.atom a  JOIN connected c ON a.atom_id = c.atom_id  JOIN bond b ON c.bond_id = b.bond_id  WHERE b.molecule_id = 'TR000_2_3'","SELECT a.atom_id, a.molecule_id, a.element  FROM atoms a  JOIN connected c ON a.atom_id = c.atom_id  JOIN bonds b ON c.bond_id = b.bond_id  WHERE b.molecule_id = 'TR000_2_3'"
47,1057,Calculate the average home team goal in the 2010/2011 season in the country of Poland.,european_football_2,moderate,SELECT CAST(SUM(t2.home_team_goal) AS REAL) / COUNT(t2.id) FROM Country AS t1 INNER JOIN Match AS t2 ON t1.id = t2.country_id WHERE t1.name = 'Poland' AND t2.season = '2010/2011',7,"SELECT AVG(home_team_goal) FROM match WHERE season = '2010/2011' AND country_id = (SELECT id FROM country WHERE name = 'Poland')
SELECT AVG(home_team_goal) FROM match WHERE season = '2010/2011' AND country_id = (SELECT id FROM country WHERE name = 'Poland')
SELECT AVG(home_team_goal)  FROM match  WHERE season = '2010/2011' AND country_id = (SELECT id FROM country WHERE name = 'Poland')
SELECT AVG(home_team_goal) FROM match WHERE season = '2010/2011' AND country_id = (SELECT id FROM country WHERE name = 'Poland')
SELECT AVG(home_team_goal) FROM match WHERE season = '2010/2011' AND country_id = (SELECT id FROM country WHERE name = 'Poland')
SELECT AVG(home_team_goal) FROM match WHERE season = '2010/2011' AND country_id = (SELECT id FROM country WHERE name = 'Poland')
SELECT AVG(home_team_goal) FROM match WHERE season = '2010/2011' AND country_id = (SELECT id FROM country WHERE name = 'Poland')",SELECT AVG(home_team_goal) FROM match WHERE season = '2010/2011' AND country_id = (SELECT id FROM country WHERE name = 'Poland')
48,1264,"Among the patients have blood clots in veins, how many of them have a normal level of complement 4?",thrombosis_prediction,moderate,SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.C4 > 10 AND T1.Diagnosis = 'APS',7,"SELECT COUNT(*) FROM patient p JOIN examination e ON p.id = e.id WHERE e.diagnosis = 'thrombosis' AND e.c4 < (SELECT AVG(c4) FROM examination)
SELECT COUNT(*) FROM patient p JOIN examination e ON p.id = e.id WHERE e.diagnosis = 'thrombosis' AND e.acl_c4 = 'normal'
SELECT COUNT(*) FROM patient p JOIN examination e ON p.id = e.id WHERE e.diagnosis = 'thrombosis' AND e.c4 < (SELECT AVG(c4) FROM examination)
SELECT COUNT(*) FROM patient p JOIN examination e ON p.id = e.id WHERE e.diagnosis = 'thrombosis' AND e.c4 < (SELECT AVG(c4) FROM examination)
SELECT COUNT(*) FROM patient p JOIN examination e ON p.id = e.id WHERE e.diagnosis = 'thrombosis' AND e.c4 < (SELECT AVG(c4) FROM examination)
SELECT COUNT(*) FROM patient p JOIN examination e ON p.id = e.id WHERE e.diagnosis = 'thrombosis' AND e.c4 < (SELECT AVG(c4) FROM examination)
SELECT COUNT(*) FROM patient p JOIN examination e ON p.id = e.id WHERE e.diagnosis = 'blood clots in veins' AND e.acl_c4 = 'normal'",SELECT COUNT(*) FROM patient p JOIN examination e ON p.id = e.id WHERE e.diagnosis = 'thrombosis' AND e.c4 < (SELECT AVG(c4) FROM examination)
49,1115,What percentage is Landon Donovan's overall rating higher than Jordan Bowery on 2013/7/12?,european_football_2,challenging,"SELECT (SUM(CASE WHEN t1.player_name = 'Landon Donovan' THEN t2.overall_rating ELSE 0 END) * 1.0 - SUM(CASE WHEN t1.player_name = 'Jordan Bowery' THEN t2.overall_rating ELSE 0 END)) * 100 / SUM(CASE WHEN t1.player_name = 'Landon Donovan' THEN t2.overall_rating ELSE 0 END) LvsJ_percent FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_fifa_api_id = t2.player_fifa_api_id WHERE SUBSTR(t2.`date`, 1, 10) = '2013-07-12'",7,"SELECT (Landon Donovan's overall rating - Jordan Bowery's overall rating) / Jordan Bowery's overall rating * 100 AS percentage_difference FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name IN ('Landon Donovan', 'Jordan Bowery') AND player_attributes.date = '2013/7/12'
SELECT (Landon Donovan's overall rating - Jordan Bowery's overall rating) / Jordan Bowery's overall rating * 100 AS percentage_difference FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name IN ('Landon Donovan', 'Jordan Bowery') AND player_attributes.date = '2013/7/12'
SELECT ((SELECT overall_rating FROM player_attributes WHERE player_fifa_api_id = (SELECT player_fifa_api_id FROM player WHERE player_name = 'Landon Donovan') AND date = '2013/7/12') / (SELECT overall_rating FROM player_attributes WHERE player_fifa_api_id = (SELECT player_fifa_api_id FROM player WHERE player_name = 'Jordan Bowery') AND date = '2013/7/12')) * 100 - 100 AS percentage_difference FROM player_attributes
SELECT (Landon Donovan's overall rating - Jordan Bowery's overall rating) / Jordan Bowery's overall rating * 100 AS percentage_difference FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name IN ('Landon Donovan', 'Jordan Bowery') AND player_attributes.date = '2013/7/12'
SELECT (Landon Donovan's overall rating - Jordan Bowery's overall rating) / Jordan Bowery's overall rating * 100 AS percentage_difference FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name IN ('Landon Donovan', 'Jordan Bowery') AND player_attributes.date = '2013/7/12'
SELECT (Landon Donovan's overall rating - Jordan Bowery's overall rating) / Jordan Bowery's overall rating * 100 AS percentage_difference FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name IN ('Landon Donovan', 'Jordan Bowery') AND player_attributes.date = '2013/7/12'
SELECT (Landon Donovan's overall rating - Jordan Bowery's overall rating) / Jordan Bowery's overall rating * 100 AS percentage_difference FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name IN ('Landon Donovan', 'Jordan Bowery') AND player_attributes.date = '2013/7/12'","SELECT (Landon Donovan's overall rating - Jordan Bowery's overall rating) / Jordan Bowery's overall rating * 100 AS percentage_difference FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name IN ('Landon Donovan', 'Jordan Bowery') AND player_attributes.date = '2013/7/12'"
50,592,How many users are awarded with more than 5 badges?,codebase_community,simple,"SELECT COUNT(UserId) FROM ( SELECT UserId, COUNT(Name) AS num FROM badges GROUP BY UserId ) T WHERE T.num > 5",7,"SELECT COUNT(*) FROM users WHERE reputation > 5
SELECT COUNT(*) FROM users WHERE reputation > 5
SELECT COUNT(*) FROM users WHERE reputation > 5
SELECT COUNT(*) FROM users WHERE reputation > 5
SELECT COUNT(*) FROM users WHERE reputation > 5
SELECT COUNT(*) FROM users WHERE reputation > 5
SELECT COUNT(*) FROM users WHERE reputation > 5",SELECT COUNT(*) FROM users WHERE reputation > 5
51,1232,"Provide ID, sex and age of patient who has blood glucose (GLU) not within normal range but with total cholesterol(T-CHO) within normal range.",thrombosis_prediction,challenging,"SELECT DISTINCT T1.ID, T1.SEX , STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GLU >= 180 AND T2.`T-CHO` < 250",7,"SELECT p.id, p.sex, p.birthday AS age FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.glu NOT BETWEEN 70 AND 110 AND l.t_cho BETWEEN 200 AND 300
SELECT p.id, p.sex, p.birthday AS age FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.glu NOT BETWEEN 70 AND 110 AND l.t_cho BETWEEN 200 AND 300
SELECT p.id, p.sex, p.birthday AS age FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.glu NOT BETWEEN 70 AND 110 AND l.t_cho BETWEEN 200 AND 300
SELECT p.id, p.sex, p.birthday AS age FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.glu NOT BETWEEN 70 AND 110 AND l.t_cho BETWEEN 200 AND 300
SELECT p.id, p.sex, p.birthday AS age FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.glu NOT BETWEEN 70 AND 110 AND l.t_cho BETWEEN 150 AND 250
SELECT p.id, p.sex, p.birthday AS age FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.glu NOT BETWEEN 70 AND 110 AND l.t_cho BETWEEN 200 AND 300
SELECT p.id, p.sex, p.birthday AS age FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.glu NOT BETWEEN 70 AND 110 AND l.t_cho BETWEEN 200 AND 300","SELECT p.id, p.sex, p.birthday AS age FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.glu NOT BETWEEN 70 AND 110 AND l.t_cho BETWEEN 200 AND 300"
52,487,What is the percentage of incredibly powerful cards in the set Coldsnap?,card_games,challenging,SELECT CAST(SUM(CASE WHEN T1.cardKingdomFoilId IS NOT NULL AND T1.cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE T2.name = 'Coldsnap',7,"SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'CNS')) AS percentage_powerful_cards FROM cards WHERE setcode = 'CNS' AND power >= 12
SELECT (SELECT COUNT(*) FROM cards WHERE cards.setcode = 'CNS' AND cards.power >= 12) * 100.0 / (SELECT COUNT(*) FROM cards WHERE cards.setcode = 'CNS') AS percentage_of_powerful_cards FROM cards LIMIT 1
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'CNS')) AS percentage_powerful_cards FROM cards WHERE setcode = 'CNS' AND power >= 12
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'CNS')) AS percentage_powerful_cards FROM cards WHERE setcode = 'CNS' AND power >= 12
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'CNS')) AS percentage_powerful_cards FROM cards WHERE setcode = 'CNS' AND power >= 12
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'CNS')) AS percentage_powerful_cards FROM cards WHERE setcode = 'CNS' AND power >= 12
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'CNS')) AS percentage_powerful_cards FROM cards WHERE setcode = 'CNS' AND power >= 12",SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'CNS')) AS percentage_powerful_cards FROM cards WHERE setcode = 'CNS' AND power >= 12
53,1070,Which country is the league Italy Serie A from?,european_football_2,simple,SELECT t1.name FROM Country AS t1 INNER JOIN League AS t2 ON t1.id = t2.country_id WHERE t2.name = 'Italy Serie A',7,"SELECT country.name  FROM country  JOIN league ON country.id = league.country_id  WHERE league.name = 'Italy Serie A'
SELECT country.name  FROM country  JOIN league ON country.id = league.country_id  WHERE league.name = 'Italy Serie A'
SELECT country.name  FROM country  JOIN league ON country.id = league.country_id  WHERE league.name = 'Italy Serie A'
SELECT country.name  FROM country  JOIN league ON country.id = league.country_id  WHERE league.name = 'Italy Serie A'
SELECT country.name  FROM country  JOIN league ON country.id = league.country_id  WHERE league.name = 'Italy Serie A'
SELECT country.name  FROM country  JOIN league ON country.id = league.country_id  WHERE league.name = 'Italy Serie A'
SELECT country.name  FROM country  JOIN league ON country.id = league.country_id  WHERE league.name = 'Italy Serie A'",SELECT country.name  FROM country  JOIN league ON country.id = league.country_id  WHERE league.name = 'Italy Serie A'
54,639,"Based on posts posted by Community, calculate the percentage of posts that use the R language.",codebase_community,challenging,"SELECT CAST(SUM(IIF(T3.TagName = 'r', 1, 0)) AS REAL) * 100 / COUNT(T1.Id) FROM users AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.UserId INNER JOIN tags AS T3 ON T3.ExcerptPostId = T2.PostId WHERE T1.DisplayName = 'Community'",7,"SELECT (SELECT COUNT(*) FROM posts WHERE tags LIKE '%R%') * 100.0 / COUNT(*) AS R_language_post_percentage FROM posts
SELECT (SELECT COUNT(*) FROM posts WHERE tags LIKE '%R%') * 100.0 / COUNT(*) AS R_post_percentage FROM posts
SELECT (SELECT COUNT(*) FROM posts WHERE tags LIKE '%R%') * 100.0 / COUNT(*) AS R_language_post_percentage FROM posts
SELECT (SELECT COUNT(*) FROM posts WHERE tags LIKE '%R%') * 100.0 / COUNT(*) AS R_language_post_percentage FROM posts
SELECT (SELECT COUNT(*) FROM posts WHERE tags LIKE '%R%') * 100.0 / COUNT(*) AS R_percentage FROM posts
SELECT (SELECT COUNT(*) FROM posts WHERE tags LIKE '%R%') * 100.0 / COUNT(*) AS R_language_post_percentage FROM posts
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM posts WHERE posttypeid = 1) AS percentage_R_posts FROM posts WHERE body LIKE '%R%'",SELECT (SELECT COUNT(*) FROM posts WHERE tags LIKE '%R%') * 100.0 / COUNT(*) AS R_language_post_percentage FROM posts
55,994,"Which constructor scored most points from Monaco Grand Prix between 1980 and 2010? List the score, name and nationality of this team.",formula_1,challenging,"SELECT SUM(T1.points), T2.name, T2.nationality FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId INNER JOIN races AS T3 ON T3.raceid = T1.raceid WHERE T3.name = 'Monaco Grand Prix' AND T3.year BETWEEN 1980 AND 2010 GROUP BY T2.name ORDER BY SUM(T1.points) DESC LIMIT 1",7,"SELECT c.name, c.nationality, cr.points  FROM constructorresults cr  JOIN constructors c ON cr.constructorid = c.constructorid  JOIN races r ON cr.raceid = r.raceid  WHERE r.circuitid = (SELECT circuitid FROM circuits WHERE name = 'Monaco Grand Prix')  AND r.year BETWEEN 1980 AND 2010  ORDER BY cr.points DESC  LIMIT 1
SELECT c.name, c.nationality, cr.points  FROM constructorresults cr  JOIN constructors c ON cr.constructorid = c.constructorid  JOIN races r ON cr.raceid = r.raceid  WHERE r.circuitid = (SELECT circuitid FROM circuits WHERE name = 'Monaco Grand Prix')  AND r.year BETWEEN 1980 AND 2010  ORDER BY cr.points DESC  LIMIT 1
SELECT c.name, c.nationality, cr.points  FROM constructorresults cr  JOIN constructors c ON cr.constructorid = c.constructorid  JOIN races r ON cr.raceid = r.raceid  WHERE r.circuitid = (SELECT circuitid FROM circuits WHERE name = 'Monaco Grand Prix')  AND r.year BETWEEN 1980 AND 2010  ORDER BY cr.points DESC  LIMIT 1
SELECT c.name, c.nationality, cr.points  FROM constructorresults cr  JOIN constructors c ON cr.constructorid = c.constructorid  JOIN races r ON cr.raceid = r.raceid  WHERE r.circuitid = (SELECT circuitid FROM circuits WHERE name = 'Monaco Grand Prix')  AND r.year BETWEEN 1980 AND 2010  ORDER BY cr.points DESC  LIMIT 1
SELECT c.name, c.nationality, cr.points  FROM constructorresults cr  JOIN constructors c ON cr.constructorid = c.constructorid  JOIN races r ON cr.raceid = r.raceid  WHERE r.circuitid = (SELECT circuitid FROM circuits WHERE name = 'Monaco Grand Prix')  AND r.year BETWEEN 1980 AND 2010  ORDER BY cr.points DESC  LIMIT 1
SELECT c.name, c.nationality, cr.points  FROM constructorresults cr  JOIN constructors c ON cr.constructorid = c.constructorid  JOIN races r ON cr.raceid = r.raceid  WHERE r.circuitid = (SELECT circuitid FROM circuits WHERE name = 'Monaco Grand Prix')  AND r.year BETWEEN 1980 AND 2010  ORDER BY cr.points DESC  LIMIT 1
SELECT c.name, c.nationality, cr.points  FROM constructorresults cr  JOIN constructors c ON cr.constructorid = c.constructorid  JOIN races r ON cr.raceid = r.raceid  WHERE r.circuitid = (SELECT circuitid FROM circuits WHERE name = 'Monaco Grand Prix')  AND r.year BETWEEN 1980 AND 2010  ORDER BY cr.points DESC  LIMIT 1","SELECT c.name, c.nationality, cr.points  FROM constructorresults cr  JOIN constructors c ON cr.constructorid = c.constructorid  JOIN races r ON cr.raceid = r.raceid  WHERE r.circuitid = (SELECT circuitid FROM circuits WHERE name = 'Monaco Grand Prix')  AND r.year BETWEEN 1980 AND 2010  ORDER BY cr.points DESC  LIMIT 1"
56,1026,Which home team had lost the fewest matches in the 2016 season?,european_football_2,moderate,SELECT teamDetails.team_long_name FROM Match AS matchData INNER JOIN Team AS teamDetails ON matchData.home_team_api_id = teamDetails.team_api_id WHERE matchData.season = '2015/2016' AND matchData.home_team_goal - matchData.away_team_goal < 0 GROUP BY matchData.home_team_api_id ORDER BY COUNT(*) ASC LIMIT 1,7,"SELECT team_long_name, COUNT(*) AS lost_matches FROM match JOIN team ON match.home_team_api_id = team.team_api_id WHERE season = '2016' AND home_team_goal < away_team_goal GROUP BY team_long_name ORDER BY lost_matches ASC LIMIT 1
SELECT team_long_name, COUNT(*) AS lost_matches FROM match JOIN team ON match.home_team_api_id = team.team_api_id WHERE season = '2016' AND home_team_goal < away_team_goal GROUP BY team_long_name ORDER BY lost_matches ASC LIMIT 1
SELECT home_team_api_id, COUNT(*) AS lost_matches FROM match WHERE season = '2016' AND home_team_goal < away_team_goal GROUP BY home_team_api_id ORDER BY lost_matches ASC LIMIT 1
SELECT home_team_api_id, COUNT(*) AS lost_matches FROM match WHERE season = '2016' AND home_team_goal < away_team_goal GROUP BY home_team_api_id ORDER BY lost_matches ASC LIMIT 1
SELECT team_long_name, COUNT(*) AS lost_matches FROM match JOIN team ON match.home_team_api_id = team.team_api_id WHERE season = '2016' AND home_team_goal < away_team_goal GROUP BY team_long_name ORDER BY lost_matches ASC LIMIT 1
SELECT home_team_api_id, COUNT(*) AS lost_matches FROM match WHERE season = '2016' AND home_team_goal < away_team_goal GROUP BY home_team_api_id ORDER BY lost_matches ASC LIMIT 1
SELECT home_team_api_id, COUNT(*) AS lost_matches FROM match WHERE season = '2016' AND home_team_goal < away_team_goal GROUP BY home_team_api_id ORDER BY lost_matches ASC LIMIT 1","SELECT home_team_api_id, COUNT(*) AS lost_matches FROM match WHERE season = '2016' AND home_team_goal < away_team_goal GROUP BY home_team_api_id ORDER BY lost_matches ASC LIMIT 1"
57,1023,"Among the players with an overall rating between 60 to 65, how many players whose going to be in all of your attack moves instead of defensing?",european_football_2,moderate,SELECT COUNT(id) FROM Player_Attributes WHERE overall_rating BETWEEN 60 AND 65 AND defensive_work_rate = 'low',7,"SELECT COUNT(*)  FROM player_attributes  WHERE overall_rating BETWEEN 60 AND 65  AND attacking_work_rate = 'High'  AND defensive_work_rate = 'Low'
SELECT COUNT(*)  FROM player_attributes  WHERE overall_rating BETWEEN 60 AND 65  AND attacking_work_rate = 'High'  AND defensive_work_rate = 'Low'
SELECT COUNT(*)  FROM player_attributes  WHERE overall_rating BETWEEN 60 AND 65  AND attacking_work_rate = 'High'  AND defensive_work_rate = 'Low'
SELECT COUNT(*)  FROM player_attributes  WHERE overall_rating BETWEEN 60 AND 65  AND attacking_work_rate = 'High'  AND defensive_work_rate = 'Low'
SELECT COUNT(*)  FROM player_attributes  WHERE overall_rating BETWEEN 60 AND 65  AND attacking_work_rate = 'High'  AND defensive_work_rate = 'Low'
SELECT COUNT(*)  FROM player_attributes  WHERE overall_rating BETWEEN 60 AND 65  AND attacking_work_rate = 'High'  AND defensive_work_rate = 'Low'
SELECT COUNT(*)  FROM player_attributes  WHERE overall_rating BETWEEN 60 AND 65  AND attacking_work_rate = 'High'  AND defensive_work_rate = 'Low'",SELECT COUNT(*)  FROM player_attributes  WHERE overall_rating BETWEEN 60 AND 65  AND attacking_work_rate = 'High'  AND defensive_work_rate = 'Low'
58,371,What is the percentage of cards whose language is French among the Story Spotlight cards?,card_games,challenging,SELECT CAST(SUM(CASE WHEN T2.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.isStorySpotlight = 1,7,"SELECT (SELECT COUNT(*) FROM foreign_data WHERE language = 'French' AND cards.id = foreign_data.id) * 100.0 / COUNT(*) AS percentage FROM cards WHERE isstoryspotlight = 1
SELECT (SELECT COUNT(*) FROM foreign_data WHERE language = 'French' AND cards.id = foreign_data.id) * 100.0 / COUNT(*) AS percentage FROM cards WHERE isstoryspotlight = 1
SELECT (SELECT COUNT(*) FROM foreign_data WHERE language = 'French' AND foreign_data.id IN (SELECT id FROM cards WHERE isstoryspotlight = 1)) * 100.0 / (SELECT COUNT(*) FROM cards WHERE isstoryspotlight = 1) AS percentage_french_story_spotlight_cards
SELECT (SELECT COUNT(*) FROM foreign_data WHERE language = 'French' AND cards.id = foreign_data.id) * 100.0 / COUNT(*) AS percentage FROM cards WHERE isstoryspotlight = 1
SELECT (SELECT COUNT(*) FROM foreign_data WHERE language = 'French' AND foreign_data.id IN (SELECT id FROM cards WHERE isstoryspotlight = 1)) * 100.0 / (SELECT COUNT(*) FROM cards WHERE isstoryspotlight = 1) AS percentage_french_story_spotlight_cards
SELECT (SELECT COUNT(*) FROM foreign_data WHERE language = 'French' AND foreign_data.id IN (SELECT id FROM cards WHERE isstoryspotlight = 1)) * 100.0 / (SELECT COUNT(*) FROM cards WHERE isstoryspotlight = 1) AS percentage_french_story_spotlight_cards
SELECT (SELECT COUNT(*) FROM foreign_data WHERE language = 'French' AND cards.id = foreign_data.id) * 100.0 / COUNT(*) AS percentage FROM cards WHERE isstoryspotlight = 1",SELECT (SELECT COUNT(*) FROM foreign_data WHERE language = 'French' AND cards.id = foreign_data.id) * 100.0 / COUNT(*) AS percentage FROM cards WHERE isstoryspotlight = 1
59,772,"List the eyes, hair and skin colour of all female superheroes published by Dark Horse Comics.",superhero,challenging,"SELECT T1.eye_colour_id, T1.hair_colour_id, T1.skin_colour_id FROM superhero AS T1 INNER JOIN publisher AS T2 ON T2.id = T1.publisher_id INNER JOIN gender AS T3 ON T3.id = T1.gender_id WHERE T2.publisher_name = 'Dark Horse Comics' AND T3.gender = 'Female'",7,"SELECT s.eye_colour_id, s.hair_colour_id, s.skin_colour_id FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Dark Horse Comics' AND s.gender_id = (SELECT id FROM gender WHERE gender = 'Female')
SELECT s.eye_colour_id, s.hair_colour_id, s.skin_colour_id FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Dark Horse Comics' AND s.gender_id = (SELECT id FROM gender WHERE gender = 'Female')
SELECT s.eye_colour_id, s.hair_colour_id, s.skin_colour_id FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Dark Horse Comics' AND s.gender_id = (SELECT id FROM gender WHERE gender = 'Female')
SELECT s.eye_colour_id, s.hair_colour_id, s.skin_colour_id FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Dark Horse Comics' AND s.gender_id = (SELECT id FROM gender WHERE gender = 'Female')
SELECT s.eye_colour_id, s.hair_colour_id, s.skin_colour_id FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Dark Horse Comics' AND s.gender_id = (SELECT id FROM gender WHERE gender = 'Female')
SELECT s.eye_colour_id, s.hair_colour_id, s.skin_colour_id FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Dark Horse Comics' AND s.gender_id = (SELECT id FROM gender WHERE gender = 'Female')
SELECT s.eye_colour_id, s.hair_colour_id, s.skin_colour_id FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Dark Horse Comics' AND s.gender_id = (SELECT id FROM gender WHERE gender = 'Female')","SELECT s.eye_colour_id, s.hair_colour_id, s.skin_colour_id FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Dark Horse Comics' AND s.gender_id = (SELECT id FROM gender WHERE gender = 'Female')"
60,232,Please list top three molecules that have single bonds between two atoms and are not carcinogenic in alphabetical order.,toxicology,moderate,SELECT DISTINCT T2.molecule_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' AND T2.label = '-' ORDER BY T2.molecule_id LIMIT 3,7,"SELECT m.label FROM molecule m JOIN (     SELECT c.molecule_id     FROM connected c     JOIN bond b ON c.bond_id = b.bond_id     WHERE b.bond_type = 'single'     GROUP BY c.molecule_id     HAVING COUNT(DISTINCT c.atom_id) = (SELECT COUNT(*) FROM atom) ) AS valid_molecules ON m.molecule_id = valid_molecules.molecule_id WHERE m.label NOT IN (SELECT label FROM molecule WHERE label LIKE '%carcinogenic%') ORDER BY m.label LIMIT 3
SELECT m.label FROM molecule m JOIN (     SELECT c.molecule_id     FROM connected c     JOIN bond b ON c.bond_id = b.bond_id     WHERE b.bond_type = 'single'     GROUP BY c.molecule_id     HAVING COUNT(DISTINCT c.atom_id) > 1 ) AS valid_molecules ON m.molecule_id = valid_molecules.molecule_id WHERE m.label NOT IN (     SELECT m.label     FROM molecule m     JOIN (         SELECT c.molecule_id         FROM connected c         JOIN bond b ON c.bond_id = b.bond_id         WHERE b.bond_type = 'single'         GROUP BY c.molecule_id         HAVING COUNT(DISTINCT c.atom_id) > 1     ) AS valid_molecules ON m.molecule_id = valid_molecules.molecule_id     JOIN molecule_carcinogen mc ON m.molecule_id = mc.molecule_id ) ORDER BY m.label LIMIT 3
SELECT m.label FROM molecule m JOIN (     SELECT c.molecule_id     FROM connected c     JOIN bond b ON c.bond_id = b.bond_id     WHERE b.bond_type = 'single'     GROUP BY c.molecule_id     HAVING COUNT(DISTINCT c.atom_id) = (SELECT COUNT(*) FROM atom) ) AS valid_molecules ON m.molecule_id = valid_molecules.molecule_id WHERE m.label NOT IN (SELECT label FROM molecule WHERE label LIKE '%carcinogenic%') ORDER BY m.label LIMIT 3
SELECT m.label FROM molecule m JOIN (     SELECT c.molecule_id     FROM connected c     JOIN bond b ON c.bond_id = b.bond_id     WHERE b.bond_type = 'single'     AND m.molecule_id = c.molecule_id     AND m.label NOT LIKE '%carcinogenic%'     GROUP BY c.molecule_id     ORDER BY m.label     LIMIT 3 ) AS top_molecules ON m.molecule_id = top_molecules.molecule_id
SELECT m.label FROM molecule m JOIN (     SELECT c.molecule_id     FROM connected c     JOIN bond b ON c.bond_id = b.bond_id     WHERE b.bond_type = 'single'     GROUP BY c.molecule_id     HAVING COUNT(DISTINCT c.atom_id) = (SELECT COUNT(*) FROM atom) ) AS valid_molecules ON m.molecule_id = valid_molecules.molecule_id WHERE m.label NOT IN (SELECT label FROM molecule WHERE label LIKE '%carcinogenic%') ORDER BY m.label LIMIT 3
SELECT m.label FROM molecule m JOIN (     SELECT c.molecule_id     FROM connected c     JOIN bond b ON c.bond_id = b.bond_id     WHERE b.bond_type = 'single'     GROUP BY c.molecule_id     HAVING COUNT(DISTINCT c.atom_id) > 1 ) AS valid_molecules ON m.molecule_id = valid_molecules.molecule_id WHERE m.label NOT IN (     SELECT m.label     FROM molecule m     JOIN (         SELECT c.molecule_id         FROM connected c         JOIN bond b ON c.bond_id = b.bond_id         WHERE b.bond_type = 'single'         GROUP BY c.molecule_id         HAVING COUNT(DISTINCT c.atom_id) > 1     ) AS valid_molecules ON m.molecule_id = valid_molecules.molecule_id     JOIN molecule_carcinogen mc ON m.molecule_id = mc.molecule_id ) ORDER BY m.label LIMIT 3
SELECT m.label FROM molecule m JOIN (     SELECT c.molecule_id     FROM connected c     JOIN bond b ON c.bond_id = b.bond_id     WHERE b.bond_type = 'single'     GROUP BY c.molecule_id     HAVING COUNT(DISTINCT c.atom_id) = (SELECT COUNT(*) FROM atom) ) AS valid_molecules ON m.molecule_id = valid_molecules.molecule_id WHERE m.label NOT IN (SELECT label FROM molecule WHERE label LIKE '%carcinogenic%') ORDER BY m.label LIMIT 3",SELECT m.label FROM molecule m JOIN (     SELECT c.molecule_id     FROM connected c     JOIN bond b ON c.bond_id = b.bond_id     WHERE b.bond_type = 'single'     GROUP BY c.molecule_id     HAVING COUNT(DISTINCT c.atom_id) = (SELECT COUNT(*) FROM atom) ) AS valid_molecules ON m.molecule_id = valid_molecules.molecule_id WHERE m.label NOT IN (SELECT label FROM molecule WHERE label LIKE '%carcinogenic%') ORDER BY m.label LIMIT 3
61,1297,"For the patients whose total cholesterol is higher than normal, how many of them have a negative measure of degree of coagulation?",thrombosis_prediction,moderate,SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.`T-CHO` >= 250 AND T3.KCT = '-',7,"SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.diagnosis = 'hypercholesterolemia' AND l.aptt < 0
SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.diagnosis = 'hypercholesterolemia' AND l.aptt < 0
SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.diagnosis = 'hypercholesterolemia' AND l.aptt < 0
SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.diagnosis = 'hypercholesterolemia' AND l.aptt < 0
SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.diagnosis = 'hypercholesterolemia' AND l.aptt < 0
SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.diagnosis = 'hypercholesterolemia' AND l.aptt < 0
SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.diagnosis = 'hypercholesterolemia' AND l.aptt < 0",SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.diagnosis = 'hypercholesterolemia' AND l.aptt < 0
62,171,What was the difference in the number of crimes committed in East and North Bohemia in 1996?,financial,moderate,"SELECT SUM(IIF(A3 = 'east Bohemia', A16, 0)) - SUM(IIF(A3 = 'north Bohemia', A16, 0)) FROM district",7,"SELECT (SELECT SUM(t.amount) FROM trans t WHERE t.account_id IN (SELECT a.account_id FROM account a WHERE a.district_id IN (SELECT d.district_id FROM district d WHERE d.a2 = 'East'))) - (SELECT SUM(t.amount) FROM trans t WHERE t.account_id IN (SELECT a.account_id FROM account a WHERE a.district_id IN (SELECT d.district_id FROM district d WHERE d.a2 = 'North Bohemia'))) AS difference_in_crimes FROM dual
SELECT (SELECT SUM(t.amount) FROM trans t WHERE t.account_id IN (SELECT a.account_id FROM account a WHERE a.district_id IN (SELECT d.district_id FROM district d WHERE d.a2 = 'East'))) - (SELECT SUM(t.amount) FROM trans t WHERE t.account_id IN (SELECT a.account_id FROM account a WHERE a.district_id IN (SELECT d.district_id FROM district d WHERE d.a2 = 'North Bohemia'))) AS difference_in_crimes_1996 FROM dual
SELECT (SELECT SUM(t.amount) FROM trans t WHERE t.account_id IN (SELECT a.account_id FROM account a WHERE a.district_id IN (SELECT d.district_id FROM district d WHERE d.a2 = 'East'))) - (SELECT SUM(t.amount) FROM trans t WHERE t.account_id IN (SELECT a.account_id FROM account a WHERE a.district_id IN (SELECT d.district_id FROM district d WHERE d.a2 = 'North Bohemia'))) AS difference_in_crimes FROM dual
SELECT (SELECT SUM(t.amount) FROM trans t WHERE t.account_id IN (SELECT a.account_id FROM account a WHERE a.district_id IN (SELECT d.district_id FROM district d WHERE d.name = 'East Bohemia'))) - (SELECT SUM(t.amount) FROM trans t WHERE t.account_id IN (SELECT a.account_id FROM account a WHERE a.district_id IN (SELECT d.district_id FROM district d WHERE d.name = 'North Bohemia'))) AS difference_in_crimes FROM dual
SELECT (SELECT SUM(t.amount) FROM trans t WHERE t.account_id IN (SELECT a.account_id FROM account a WHERE a.district_id IN (SELECT d.district_id FROM district d WHERE d.a2 = 'East'))) - (SELECT SUM(t.amount) FROM trans t WHERE t.account_id IN (SELECT a.account_id FROM account a WHERE a.district_id IN (SELECT d.district_id FROM district d WHERE d.a2 = 'North Bohemia'))) AS difference_in_crimes_1996 FROM dual
SELECT (SELECT SUM(t.amount) FROM trans t WHERE t.account_id IN (SELECT a.account_id FROM account a WHERE a.district_id IN (SELECT d.district_id FROM district d WHERE d.name = 'East Bohemia'))) - (SELECT SUM(t.amount) FROM trans t WHERE t.account_id IN (SELECT a.account_id FROM account a WHERE a.district_id IN (SELECT d.district_id FROM district d WHERE d.name = 'North Bohemia'))) AS difference_in_crimes FROM dual
SELECT (SELECT SUM(t.amount) FROM trans t WHERE t.account_id IN (SELECT a.account_id FROM account a WHERE a.district_id IN (SELECT d.district_id FROM district d WHERE d.a2 = 'East'))) - (SELECT SUM(t.amount) FROM trans t WHERE t.account_id IN (SELECT a.account_id FROM account a WHERE a.district_id IN (SELECT d.district_id FROM district d WHERE d.a2 = 'North Bohemia'))) AS difference_in_crimes_1996 FROM dual",SELECT (SELECT SUM(t.amount) FROM trans t WHERE t.account_id IN (SELECT a.account_id FROM account a WHERE a.district_id IN (SELECT d.district_id FROM district d WHERE d.a2 = 'East'))) - (SELECT SUM(t.amount) FROM trans t WHERE t.account_id IN (SELECT a.account_id FROM account a WHERE a.district_id IN (SELECT d.district_id FROM district d WHERE d.a2 = 'North Bohemia'))) AS difference_in_crimes_1996 FROM dual
63,679,Which post has the highest score? Please give its id and title's name.,codebase_community,simple,"SELECT T1.Id, T2.Title FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId ORDER BY T2.Score DESC LIMIT 1",7,"SELECT id, title FROM posts ORDER BY score DESC LIMIT 1
SELECT id, title FROM posts ORDER BY score DESC LIMIT 1
SELECT id, title FROM posts ORDER BY score DESC LIMIT 1
SELECT id, title FROM posts ORDER BY score DESC LIMIT 1
SELECT id, title FROM posts ORDER BY score DESC LIMIT 1
SELECT id, title FROM posts ORDER BY score DESC LIMIT 1
SELECT id, title FROM posts ORDER BY score DESC LIMIT 1","SELECT id, title FROM posts ORDER BY score DESC LIMIT 1"
64,1437,Which members who were approved from 1/10/2019 to 11/19/2019? Please identify the member who attended the event and the link to their event.,student_club,challenging,"SELECT DISTINCT T1.link_to_member, T3.link_to_event FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN attendance AS T3 ON T2.member_id = T3.link_to_member WHERE date(SUBSTR(T1.expense_date, 1, 10)) BETWEEN '2019-01-10' AND '2019-11-19' AND T1.approved = 'true'",7,"SELECT m.first_name, m.last_name, e.event_name, e.event_date, a.link_to_event FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_date BETWEEN '2019-10-01' AND '2019-11-19' AND e.status = 'approved'
SELECT m.first_name, m.last_name, e.event_name, a.link_to_event FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_date BETWEEN '2019-10-01' AND '2019-11-19' AND e.status = 'approved'
SELECT m.first_name, m.last_name, e.event_id, e.event_name, e.event_date FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_date BETWEEN '2019-10-01' AND '2019-11-19' AND e.status = 'approved'
SELECT m.first_name, m.last_name, e.event_name, e.event_date, a.link_to_event FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_date BETWEEN '2019-10-01' AND '2019-11-19' AND e.status = 'approved'
SELECT m.first_name, m.last_name, e.event_id, e.event_name, e.event_date FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_date BETWEEN '2019-10-01' AND '2019-11-19' AND e.status = 'approved'
SELECT m.first_name, m.last_name, e.event_id, e.event_name, e.event_date FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_date BETWEEN '2019-10-01' AND '2019-11-19' AND e.status = 'approved'
SELECT m.first_name, m.last_name, e.event_name, e.event_date, a.link_to_event FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_date BETWEEN '2019-10-01' AND '2019-11-19' AND e.status = 'approved'","SELECT m.first_name, m.last_name, e.event_name, e.event_date, a.link_to_event FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_date BETWEEN '2019-10-01' AND '2019-11-19' AND e.status = 'approved'"
65,328,"List all the elements with double bond, consisted in molecule TR024.",toxicology,challenging,SELECT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR024' AND T2.bond_type = '=',7,"SELECT a.atom_id, a.molecule_id, a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'double' AND a.molecule_id = 'TR024'
SELECT a.atom_id, a.molecule_id, a.element FROM TR024.atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'double'
SELECT a.atom_id, a.molecule_id, a.element FROM TR024.atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'double'
SELECT a.atom_id, a.molecule_id, a.element FROM TR024.atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'double'
SELECT a.atom_id, a.molecule_id, a.element FROM TR024.atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'double'
SELECT a.atom_id, a.molecule_id, a.element FROM TR024.atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'double'
SELECT a.atom_id, a.molecule_id, a.element FROM TR024.atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'double'","SELECT a.atom_id, a.molecule_id, a.element FROM TR024.atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'double'"
66,1243,"For all patients who are older than 55 years old, what is the percentage of female who has abnormal prothrombin time (PT)?",thrombosis_prediction,challenging,"SELECT CAST(SUM(CASE WHEN T2.PT >= 14 AND T1.SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) > 55",7,"SELECT (COUNT(CASE WHEN sex = 'female' AND pt IS NULL THEN 1 END) * 100.0 / COUNT(*)) AS percentage_female_abnormal_pt FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE (strftime('%Y', 'now') - strftime('%Y', birthday)) > 55
SELECT (COUNT(CASE WHEN patient.sex = 'female' AND laboratory.pt > 15 AND laboratory.aptt > 30 THEN 1 END) * 100.0 / COUNT(*)) AS percentage_female_abnormal_pt FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE (strftime('%Y', 'now') - strftime('%Y', patient.birthday)) > 55
SELECT (COUNT(CASE WHEN sex = 'female' AND pt IS NULL THEN 1 END) * 100.0 / COUNT(*)) AS percentage_female_abnormal_pt FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE (strftime('%Y', 'now') - strftime('%Y', birthday)) > 55
SELECT (COUNT(CASE WHEN sex = 'female' AND pt > 15 THEN 1 END) * 100.0 / COUNT(*)) AS percentage_female_abnormal_pt FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE (strftime('%Y', 'now') - strftime('%Y', birthday)) > 55
SELECT (COUNT(CASE WHEN sex = 'female' AND pt IS NULL THEN 1 END) * 100.0 / COUNT(*)) AS percentage_female_abnormal_pt FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE (strftime('%Y', 'now') - strftime('%Y', birthday)) > 55
SELECT (COUNT(CASE WHEN sex = 'female' AND pt IS NULL THEN 1 END) * 100.0 / COUNT(*)) AS percentage_female_abnormal_pt FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE (strftime('%Y', 'now') - strftime('%Y', birthday)) > 55 AND pt IS NULL
SELECT (COUNT(CASE WHEN sex = 'female' AND pt IS NULL THEN 1 END) * 100.0 / COUNT(*)) AS percentage_female_abnormal_pt FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE (strftime('%Y', 'now') - strftime('%Y', birthday)) > 55","SELECT (COUNT(CASE WHEN sex = 'female' AND pt IS NULL THEN 1 END) * 100.0 / COUNT(*)) AS percentage_female_abnormal_pt FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE (strftime('%Y', 'now') - strftime('%Y', birthday)) > 55"
67,1292,What is the anti Cardiolipin antibody concentration of the female patient with the highest uric acid level in the normal range?,thrombosis_prediction,challenging,"SELECT T3.`aCL IgG`, T3.`aCL IgM`, T3.`aCL IgA` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T3.ID = T2.ID WHERE T1.SEX = 'F' AND T2.UA > 6.5 ORDER BY T2.UA DESC LIMIT 1",7,"SELECT l.ua FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'female' AND l.ua > 0 AND l.ua < 6 ORDER BY l.ua DESC LIMIT 1
SELECT l.ua FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'female' AND l.ua > 0 AND l.ua < 6 AND l.ua = (SELECT MAX(ua) FROM laboratory WHERE sex = 'female' AND ua > 0 AND ua < 6)
SELECT l.ua FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'female' AND l.ua > 0 AND l.ua < 7 ORDER BY l.ua DESC LIMIT 1
SELECT l.ua FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'female' AND l.ua > 0 AND l.ua < 6 ORDER BY l.ua DESC LIMIT 1
SELECT l.ua FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'female' AND l.ua > 0 AND l.ua < 6 AND l.ua = (SELECT MAX(ua) FROM laboratory WHERE sex = 'female')
SELECT l.ua FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'female' AND l.ua > 0 AND l.ua < 6 ORDER BY l.ua DESC LIMIT 1
SELECT l.ua FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'female' AND l.ua > 0 AND l.ua < 6 ORDER BY l.ua DESC LIMIT 1",SELECT l.ua FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'female' AND l.ua > 0 AND l.ua < 6 ORDER BY l.ua DESC LIMIT 1
68,198,On average how many carcinogenic molecules are single bonded?,toxicology,challenging,"SELECT AVG(single_bond_count) FROM (SELECT T3.molecule_id, COUNT(T1.bond_type) AS single_bond_count FROM bond AS T1  INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN molecule AS T3 ON T3.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' AND T3.label = '+' GROUP BY T3.molecule_id) AS subquery",7,"SELECT AVG(CASE WHEN bond_type = 'single' THEN 1 ELSE 0 END) AS avg_single_bonded_carcinogenic_molecules FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE element = 'carcinogenic'
SELECT AVG(num_carcinogenic) FROM (SELECT COUNT(c.atom_id) AS num_carcinogenic FROM connected c JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'single' AND b.is_carcinogenic = 1 GROUP BY c.molecule_id) AS avg_carcinogenic_molecules
SELECT AVG(CASE WHEN bond_type = 'single' THEN 1 ELSE 0 END) AS avg_single_bonded_carcinogenic_molecules FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE element = 'carcinogenic'
SELECT AVG(num_carcinogenic) FROM (SELECT COUNT(c.atom_id) AS num_carcinogenic FROM connected c JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'single' AND b.is_carcinogenic = 1 GROUP BY c.molecule_id)
SELECT AVG(num_carcinogenic) FROM (SELECT COUNT(c.atom_id) AS num_carcinogenic FROM connected c JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'single' AND b.is_carcinogenic = 1 GROUP BY c.molecule_id) AS avg_carcinogenic_molecules
SELECT AVG(num_carcinogenic) FROM (SELECT COUNT(c.atom_id) AS num_carcinogenic FROM connected c JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'single' AND b.is_carcinogenic = 1 GROUP BY c.molecule_id) AS avg_carcinogenic_molecules
SELECT AVG(CASE WHEN bond_type = 'single' THEN 1 ELSE 0 END) AS avg_single_bonded_carcinogenic_molecules FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE element = 'carcinogenic'",SELECT AVG(num_carcinogenic) FROM (SELECT COUNT(c.atom_id) AS num_carcinogenic FROM connected c JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'single' AND b.is_carcinogenic = 1 GROUP BY c.molecule_id) AS avg_carcinogenic_molecules
69,660,What is the owner user id of the most valuable post?,codebase_community,simple,SELECT OwnerUserId FROM posts WHERE FavoriteCount = ( SELECT MAX(FavoriteCount) FROM posts ),7,"SELECT owneruserid FROM posts ORDER BY score DESC LIMIT 1
SELECT owneruserid FROM posts ORDER BY score DESC LIMIT 1
SELECT owneruserid FROM posts ORDER BY score DESC LIMIT 1
SELECT owneruserid FROM posts ORDER BY score DESC LIMIT 1
SELECT owneruserid FROM posts ORDER BY score DESC LIMIT 1
SELECT owneruserid FROM posts ORDER BY score DESC LIMIT 1
SELECT owneruserid FROM posts ORDER BY score DESC LIMIT 1",SELECT owneruserid FROM posts ORDER BY score DESC LIMIT 1
70,1223,Are there more male patients with creatinine not within the normal range than female? True or False?,thrombosis_prediction,challenging,SELECT CASE WHEN SUM(CASE WHEN T1.SEX = 'M' THEN 1 ELSE 0 END) > SUM(CASE WHEN T1.SEX = 'F' THEN 1 ELSE 0 END) THEN 'True' ELSE 'False' END FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE >= 1.5,7,"SELECT (SELECT COUNT(*) FROM patient WHERE sex = 'male' AND diagnosis = 'creatinine not within the normal range') > (SELECT COUNT(*) FROM patient WHERE sex = 'female' AND diagnosis = 'creatinine not within the normal range')
SELECT (SELECT COUNT(*) FROM patient WHERE sex = 'male' AND diagnosis = 'creatinine not within the normal range') > (SELECT COUNT(*) FROM patient WHERE sex = 'female' AND diagnosis = 'creatinine not within the normal range')
SELECT (SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'male' AND l.cre NOT BETWEEN 0.6 AND 1.2) > (SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'female' AND l.cre NOT BETWEEN 0.6 AND 1.2)
SELECT (SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'male' AND l.cre NOT BETWEEN 0.6 AND 1.2) > (SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'female' AND l.cre NOT BETWEEN 0.6 AND 1.2)
SELECT (SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'male' AND l.cre NOT BETWEEN 0.6 AND 1.2) > (SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'female' AND l.cre NOT BETWEEN 0.6 AND 1.2)
SELECT (SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'male' AND l.cre NOT BETWEEN 0.6 AND 1.2) > (SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'female' AND l.cre NOT BETWEEN 0.6 AND 1.2)
SELECT (SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'male' AND l.cre NOT BETWEEN 0.5 AND 1.2) > (SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'female' AND l.cre NOT BETWEEN 0.5 AND 1.2)",SELECT (SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'male' AND l.cre NOT BETWEEN 0.6 AND 1.2) > (SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'female' AND l.cre NOT BETWEEN 0.6 AND 1.2)
71,1418,Mention the category of events which were held at MU 215.,student_club,simple,SELECT T2.category FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.location = 'MU 215',7,"SELECT event_name, event_date, type, notes, location, status FROM event WHERE location = 'MU 215'
SELECT event_name, event_date, type, notes, location, status FROM event WHERE location = 'MU 215'
SELECT event_name, event_date, type, notes, location, status FROM event WHERE location = 'MU 215'
SELECT event_name, event_date, type, notes, location, status FROM event WHERE location = 'MU 215'
SELECT event_name, event_date, type, notes, location, status FROM event WHERE location = 'MU 215'
SELECT event_name, event_date, type, notes, location, status FROM event WHERE location = 'MU 215'
SELECT event_name, event_date, type, notes, location, status  FROM event  WHERE location = 'MU 215'","SELECT event_name, event_date, type, notes, location, status FROM event WHERE location = 'MU 215'"
72,131,Which district has highest active loan?,financial,moderate,"SELECT T2.A3 FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T1.account_id = T3.account_id WHERE T3.status IN ('C', 'D') GROUP BY T2.A3 ORDER BY SUM(T3.amount) DESC LIMIT 1",7,"SELECT district_id FROM district ORDER BY a13 DESC LIMIT 1
SELECT district_id FROM district ORDER BY a13 DESC LIMIT 1
SELECT district_id, COUNT(*) AS active_loans FROM loan JOIN account ON loan.account_id = account.account_id GROUP BY district_id ORDER BY active_loans DESC LIMIT 1
SELECT district_id, COUNT(*) AS active_loans FROM loan JOIN disp ON loan.account_id = disp.account_id JOIN client ON disp.client_id = client.client_id JOIN district ON client.district_id = district.district_id WHERE loan.status = 'active' GROUP BY district_id ORDER BY active_loans DESC LIMIT 1
SELECT district_id FROM district ORDER BY a13 DESC LIMIT 1
SELECT district_id FROM district ORDER BY a13 DESC LIMIT 1
SELECT district_id, COUNT(*) AS active_loans FROM loan JOIN disp ON loan.account_id = disp.account_id JOIN client ON disp.client_id = client.client_id JOIN district ON client.district_id = district.district_id WHERE loan.status = 'active' GROUP BY district_id ORDER BY active_loans DESC LIMIT 1",SELECT district_id FROM district ORDER BY a13 DESC LIMIT 1
73,896,Calculate the percentage whereby Hamilton was not at the 1st track of the the f1 circuit since 2010.,formula_1,challenging,SELECT CAST(COUNT(CASE WHEN T2.position <> 1 THEN T2.position END) AS REAL) * 100 / COUNT(T2.driverStandingsId) FROM races AS T1 INNER JOIN driverStandings AS T2 ON T2.raceId = T1.raceId INNER JOIN drivers AS T3 ON T3.driverId = T2.driverId WHERE T3.surname = 'Hamilton' AND T1.year >= 2010,7,"SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM races WHERE year >= 2010) AS percentage_not_at_first_track FROM races WHERE year >= 2010 AND circuitid <> (SELECT circuitid FROM circuits LIMIT 1)
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM races WHERE year >= 2010) AS percentage_not_at_first_track FROM races WHERE year >= 2010 AND circuitid NOT IN (SELECT circuitid FROM races WHERE year >= 2010 AND round = 1 ORDER BY date LIMIT 1)
SELECT (SELECT COUNT(*) FROM races WHERE year >= 2010 AND circuitid = (SELECT circuitid FROM circuits WHERE name = '1st track')) - (SELECT COUNT(*) FROM races WHERE year >= 2010 AND circuitid = (SELECT circuitid FROM circuits WHERE name = '1st track') AND driverid = (SELECT driverid FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton')) AS percentage_not_at_1st_track FROM races WHERE year >= 2010 AND circuitid = (SELECT circuitid FROM circuits WHERE name = '1st track') AND driverid = (SELECT driverid FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton')
SELECT (COUNT(*) - COUNT(DISTINCT races.circuitid)) * 100.0 / COUNT(*) AS percentage_not_at_first_track FROM races JOIN circuits ON races.circuitid = circuits.circuitid WHERE races.year >= 2010 AND circuits.circuitid = (     SELECT circuitid     FROM circuits     ORDER BY circuitid     LIMIT 1 )
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM races WHERE year >= 2010) AS percentage_not_at_first_track FROM races WHERE year >= 2010 AND circuitid NOT IN (SELECT circuitid FROM races WHERE year >= 2010 AND round = 1 ORDER BY date LIMIT 1)
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM races WHERE year >= 2010) AS percentage_not_at_first_track FROM races WHERE year >= 2010 AND circuitid != (SELECT circuitid FROM circuits LIMIT 1)
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM races WHERE year >= 2010) AS percentage_not_at_first_track FROM races WHERE year >= 2010 AND circuitid != (SELECT circuitid FROM circuits LIMIT 1)",SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM races WHERE year >= 2010) AS percentage_not_at_first_track FROM races WHERE year >= 2010 AND circuitid NOT IN (SELECT circuitid FROM races WHERE year >= 2010 AND round = 1 ORDER BY date LIMIT 1)
74,173,How often does account number 3 request an account statement to be released? What was the aim of debiting 3539 in total?,financial,challenging,"SELECT T1.frequency, T2.k_symbol FROM account AS T1 INNER JOIN (SELECT account_id, k_symbol, SUM(amount) AS total_amount FROM `order` GROUP BY account_id, k_symbol) AS T2 ON T1.account_id = T2.account_id WHERE T1.account_id = 3 AND T2.total_amount = 3539",7,"SELECT COUNT(*) FROM trans WHERE account_id = 3
SELECT COUNT(*) FROM trans WHERE account_id = 3 AND type = 'credit'
SELECT COUNT(*) FROM trans WHERE account_id = 3
SELECT COUNT(*) FROM trans WHERE account_id = 3
SELECT COUNT(*) FROM trans WHERE account_id = 3 AND type = 'credit'
SELECT COUNT(*) FROM trans WHERE account_id = 3 AND type = 'credit'
SELECT COUNT(*) FROM trans WHERE account_id = 3",SELECT COUNT(*) FROM trans WHERE account_id = 3
75,125,"For loans contracts which are still running where client are in debt, list the district of the and the state the percentage unemployment rate increment from year 1995 to 1996.",financial,challenging,SELECT CAST((T3.A13 - T3.A12) AS REAL) * 100 / T3.A12 FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.status = 'D',7,"SELECT d.a2 AS district, d.a3 AS state, ((COUNT(l.loan_id) FILTER (WHERE l.status = 'A')) * 100.0 / COUNT(l.loan_id)) AS percentage_unemployment_increment FROM district d JOIN client c ON d.district_id = c.district_id JOIN disp dp ON c.client_id = dp.client_id JOIN loan l ON dp.account_id = l.account_id WHERE l.status = 'A' GROUP BY d.district_id, d.a2, d.a3 HAVING (SELECT COUNT(l2.loan_id) FILTER (WHERE l2.date_part('year', l2.date) = 1995) FROM loan l2 WHERE l2.account_id = l.account_id) > 0 AND (SELECT COUNT(l3.loan_id) FILTER (WHERE l3.date_part('year', l3.date) = 1996) FROM loan l3 WHERE l3.account_id = l.account_id) > 0
SELECT d.a2 AS district, d.a3 AS state, ((u.unemp_rate_1996 - u.unemp_rate_1995) / u.unemp_rate_1995) * 100 AS percentage_increase FROM district d JOIN (     SELECT l.account_id,            (SELECT a.a3 FROM district a WHERE a.district_id = l.account_id) AS district_state,            (SELECT a.a2 FROM district a WHERE a.district_id = l.account_id) AS district,            (SELECT t.amount FROM trans t WHERE t.account_id = l.account_id AND t.date LIKE '1995%' ORDER BY t.date DESC LIMIT 1) AS debt_amount_1995,            (SELECT t.amount FROM trans t WHERE t.account_id = l.account_id AND t.date LIKE '1996%' ORDER BY t.date DESC LIMIT 1) AS debt_amount_1996,            (SELECT u.unemp_rate FROM unemployment u WHERE u.year = 1995 AND u.district_id = l.account_id) AS unemp_rate_1995,            (SELECT u.unemp_rate FROM
SELECT d.a2 AS district, d.a3 AS state, ((COUNT(l.loan_id) FILTER (WHERE l.status = 'A')) * 100.0 / COUNT(l.loan_id)) AS percentage_increment FROM district d JOIN client c ON d.district_id = c.district_id JOIN disp dp ON c.client_id = dp.client_id JOIN account a ON dp.account_id = a.account_id JOIN loan l ON a.account_id = l.account_id WHERE l.status = 'A' GROUP BY d.district_id, d.a2, d.a3 HAVING (COUNT(l.loan_id) FILTER (WHERE l.date >= '1995-01-01' AND l.date < '1996-01-01')) > 0 ORDER BY percentage_increment DESC
SELECT d.a2 AS district, d.a3 AS state, ((u.unemp_rate_1996 - u.unemp_rate_1995) / u.unemp_rate_1995) * 100 AS percentage_increase FROM district d JOIN (     SELECT l.account_id,            (SELECT a.a3 FROM district a WHERE a.district_id = l.account_id) AS district_state,            (SELECT a.a2 FROM district a WHERE a.district_id = l.account_id) AS district,            (SELECT t.amount FROM trans t WHERE t.account_id = l.account_id AND t.date LIKE '1995%' ORDER BY t.date DESC LIMIT 1) AS debt_amount_1995,            (SELECT t.amount FROM trans t WHERE t.account_id = l.account_id AND t.date LIKE '1996%' ORDER BY t.date DESC LIMIT 1) AS debt_amount_1996,            (SELECT u.unemp_rate FROM unemployment u WHERE u.year = 1995 AND u.district_id = l.account_id) AS unemp_rate_1995,            (SELECT u.unemp_rate FROM
SELECT d.a2 AS district, d.a3 AS state, ((u.unemp_rate_1996 - u.unemp_rate_1995) / u.unemp_rate_1995) * 100 AS percentage_increase FROM district d JOIN (     SELECT l.account_id,            (SELECT a.a3 FROM district a WHERE a.district_id = l.account_id) AS district,            (SELECT a.a3 FROM district a WHERE a.district_id = l.account_id) AS state,            (SELECT t.amount FROM trans t WHERE t.account_id = l.account_id AND t.date LIKE '1995%') AS loan_amount_1995,            (SELECT t.amount FROM trans t WHERE t.account_id = l.account_id AND t.date LIKE '1996%') AS loan_amount_1996,            (SELECT u.unemp_rate FROM unemployment u WHERE u.year = 1995 AND u.district_id = l.account_id) AS unemp_rate_1995,            (SELECT u.unemp_rate FROM unemployment u WHERE u.year = 1996 AND u.district_id = l
SELECT d.a2 AS district, d.a3 AS state, ((COUNT(l.loan_id) FILTER (WHERE l.status = 'A')) * 100.0 / COUNT(l.loan_id)) AS percentage_unemployment_increment FROM district d JOIN client c ON d.district_id = c.district_id JOIN disp dp ON c.client_id = dp.client_id JOIN loan l ON dp.account_id = l.account_id WHERE l.status = 'A' GROUP BY d.district_id, d.a2, d.a3 HAVING (SELECT COUNT(l2.loan_id) FILTER (WHERE l2.date_part('year', l2.date) = 1995) FROM loan l2 WHERE l2.account_id = l.account_id) > 0 AND (SELECT COUNT(l3.loan_id) FILTER (WHERE l3.date_part('year', l3.date) = 1996) FROM loan l3 WHERE l3.account_id = l.account_id) > 0
SELECT d.a2 AS district, d.a3 AS state, ((COUNT(l.loan_id) FILTER (WHERE l.status = 'A')) * 100.0 / COUNT(l.loan_id)) AS percentage_unemployed FROM district d JOIN client c ON d.district_id = c.district_id JOIN disp dsp ON c.client_id = dsp.client_id JOIN loan l ON dsp.account_id = l.account_id WHERE l.status = 'A' GROUP BY d.district_id, d.a2, d.a3 HAVING (COUNT(l.loan_id) FILTER (WHERE l.status = 'A')) * 100.0 / COUNT(l.loan_id) > (SELECT ((COUNT(l2.loan_id) FILTER (WHERE l2.status = 'A')) * 100.0 / COUNT(l2.loan_id)) FROM loan l2 WHERE l2.date_part('year', l2.date) = 1995) AND (COUNT(l.loan_id) FILTER (WHERE l.status = 'A')) * 100.0 / COUNT(l.loan_id) <= (SELECT ((COUNT(l3.loan_id)","SELECT d.a2 AS district, d.a3 AS state, ((COUNT(l.loan_id) FILTER (WHERE l.status = 'A')) * 100.0 / COUNT(l.loan_id)) AS percentage_unemployment_increment FROM district d JOIN client c ON d.district_id = c.district_id JOIN disp dp ON c.client_id = dp.client_id JOIN loan l ON dp.account_id = l.account_id WHERE l.status = 'A' GROUP BY d.district_id, d.a2, d.a3 HAVING (SELECT COUNT(l2.loan_id) FILTER (WHERE l2.date_part('year', l2.date) = 1995) FROM loan l2 WHERE l2.account_id = l.account_id) > 0 AND (SELECT COUNT(l3.loan_id) FILTER (WHERE l3.date_part('year', l3.date) = 1996) FROM loan l3 WHERE l3.account_id = l.account_id) > 0"
76,201,What is the percentage of carbon in double-bond molecules?,toxicology,moderate,SELECT CAST(COUNT(DISTINCT CASE WHEN T1.element = 'c' THEN T1.atom_id ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T1.atom_id) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '=',7,"SELECT AVG(CASE WHEN bond_type = 'double' THEN 1 ELSE 0 END) * 100 AS percentage_carbon_in_double_bonds FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE element = 'C'
SELECT AVG(CASE WHEN bond_type = 'double' THEN 1 ELSE 0 END) * 100 AS percentage_carbon_in_double_bonds FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE element = 'C'
SELECT AVG(CASE WHEN bond_type = 'double' THEN 1 ELSE 0 END) * 100 AS percentage_carbon_in_double_bonds FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE element = 'C'
SELECT AVG(CASE WHEN bond_type = 'double' THEN 1 ELSE 0 END) * 100 AS percentage_carbon_in_double_bonds FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE element = 'C'
SELECT AVG(CASE WHEN bond_type = 'double' THEN 1 ELSE 0 END) * 100 AS percentage_carbon_in_double_bonds FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE element = 'C'
SELECT AVG(CASE WHEN bond_type = 'double' THEN 1 ELSE 0 END) * 100 AS percentage_carbon_in_double_bonds FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE element = 'C'
SELECT AVG(CASE WHEN bond_type = 'double' THEN 1 ELSE 0 END) * 100 AS percentage_carbon_in_double_bonds FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE element = 'C'",SELECT AVG(CASE WHEN bond_type = 'double' THEN 1 ELSE 0 END) * 100 AS percentage_carbon_in_double_bonds FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE element = 'C'
77,1150,What is the percentage of female patient were born after 1930?,thrombosis_prediction,moderate,"SELECT CAST(SUM(CASE WHEN STRFTIME('%Y', Birthday) > '1930' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Patient WHERE SEX = 'F'",7,"SELECT (COUNT(CASE WHEN sex = 'female' AND birthday > '1930-01-01' THEN 1 END) * 100.0 / COUNT(*)) AS female_percentage FROM patient
SELECT (COUNT(CASE WHEN sex = 'female' AND birthday > '1930-01-01' THEN 1 END) * 100.0 / COUNT(*)) AS female_percentage FROM patient
SELECT (COUNT(CASE WHEN sex = 'female' AND birthday > '1930-01-01' THEN 1 END) * 100.0 / COUNT(*)) AS female_percentage FROM patient
SELECT (COUNT(CASE WHEN sex = 'female' AND birthday > '1930-01-01' THEN 1 END) * 100.0 / COUNT(*)) AS female_percentage FROM patient
SELECT (COUNT(CASE WHEN sex = 'female' AND birthday > '1930-01-01' THEN 1 END) * 100.0 / COUNT(*)) AS female_percentage FROM patient
SELECT (COUNT(CASE WHEN sex = 'female' AND birthday > '1930-01-01' THEN 1 END) * 100.0 / COUNT(*)) AS female_percentage FROM patient
SELECT (COUNT(CASE WHEN sex = 'female' AND birthday > '1930-01-01' THEN 1 END) * 100.0 / COUNT(*)) AS female_percentage FROM patient",SELECT (COUNT(CASE WHEN sex = 'female' AND birthday > '1930-01-01' THEN 1 END) * 100.0 / COUNT(*)) AS female_percentage FROM patient
78,284,Determine the bond type that is formed in the chemical compound containing element Carbon.,toxicology,moderate,SELECT DISTINCT T2.bond_type FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'c',7,"SELECT b.bond_type FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id JOIN atom a ON c.atom_id = a.atom_id AND c.atom_id2 = a.atom_id WHERE a.element = 'Carbon'
SELECT b.bond_type FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id JOIN atom a ON c.atom_id = a.atom_id AND c.atom_id2 = a.atom_id WHERE a.element = 'Carbon'
SELECT b.bond_type FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id JOIN atom a ON c.atom_id = a.atom_id AND c.atom_id2 = a.atom_id WHERE a.element = 'Carbon'
SELECT b.bond_type FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id JOIN atom a ON c.atom_id = a.atom_id AND c.atom_id2 = a.atom_id WHERE a.element = 'Carbon'
SELECT b.bond_type FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id JOIN atom a ON c.atom_id = a.atom_id AND c.atom_id2 = a.atom_id WHERE a.element = 'Carbon'
SELECT b.bond_type FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id JOIN atom a ON c.atom_id = a.atom_id AND c.atom_id2 = a.atom_id WHERE a.element = 'Carbon'
SELECT b.bond_type FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id JOIN atom a ON c.atom_id = a.atom_id AND c.atom_id2 = a.atom_id WHERE a.element = 'Carbon'",SELECT b.bond_type FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id JOIN atom a ON c.atom_id = a.atom_id AND c.atom_id2 = a.atom_id WHERE a.element = 'Carbon'
79,1236,"For all the female patient age 50 and above, who has abnormal red blood cell count. State if they were admitted to hospital.",thrombosis_prediction,challenging,"SELECT DISTINCT T1.ID, T1.Admission FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (T2.RBC <= 3.5 OR T2.RBC >= 6.0) AND STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) >= 50",7,"SELECT p.id, p.admission FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'female' AND (julianday('now') - julianday(p.birthday)) / 365.25 >= 50 AND l.rbc < 4.5
SELECT p.id, p.admission FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'female' AND (julianday('now') - julianday(p.birthday)) / 365.25 >= 50 AND l.rbc < 4.5
SELECT p.id, p.admission FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'female' AND (julianday('now') - julianday(p.birthday)) / 365.25 >= 50 AND l.rbc < 4.5
SELECT p.id, p.admission FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'female' AND (julianday('now') - julianday(p.birthday)) / 365.25 >= 50 AND l.rbc < 4.5
SELECT p.id, p.admission FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'female' AND (julianday('now') - julianday(p.birthday)) / 365.25 >= 50 AND l.rbc < 4.5
SELECT p.id, p.admission FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'female' AND (julianday('now') - julianday(p.birthday)) / 365.25 >= 50 AND l.rbc < 4.5
SELECT p.id, p.admission FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'female' AND strftime('%Y', 'now') - strftime('%Y', p.birthday) >= 50 AND l.rbc < 4.5","SELECT p.id, p.admission FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'female' AND (julianday('now') - julianday(p.birthday)) / 365.25 >= 50 AND l.rbc < 4.5"
80,68,Which county reported the most number of school closure in the 1980s with school wonership code belonging to Youth Authority Facilities (CEA)?,california_schools,moderate,"SELECT County FROM schools WHERE strftime('%Y', ClosedDate) BETWEEN '1980' AND '1989' AND StatusType = 'Closed' AND SOC = 11 GROUP BY County ORDER BY COUNT(School) DESC LIMIT 1",7,"SELECT county_name, COUNT(*) AS closure_count FROM schools WHERE closeddate LIKE '198%' AND edopscode = 'CEA' GROUP BY county_name ORDER BY closure_count DESC LIMIT 1
SELECT county_name, COUNT(*) AS closure_count FROM schools WHERE closeddate LIKE '198%' AND edopscode = 'CEA' GROUP BY county_name ORDER BY closure_count DESC LIMIT 1
SELECT county_name, COUNT(*) AS closure_count FROM schools WHERE closeddate BETWEEN '1980-01-01' AND '1989-12-31' AND edopscode = 'CEA' GROUP BY county_name ORDER BY closure_count DESC LIMIT 1
SELECT county_name, COUNT(*) AS closure_count FROM schools WHERE closeddate BETWEEN '1980-01-01' AND '1989-12-31' AND edopscode = 'CEA' GROUP BY county_name ORDER BY closure_count DESC LIMIT 1
SELECT county_name, COUNT(*) AS closure_count FROM schools WHERE closeddate LIKE '198%' AND edopscode = 'CEA' GROUP BY county_name ORDER BY closure_count DESC LIMIT 1
SELECT county_name, COUNT(*) AS closure_count FROM schools WHERE closeddate LIKE '198%' AND edopscode = 'CEA' GROUP BY county_name ORDER BY closure_count DESC LIMIT 1
SELECT county_name, COUNT(*) AS closure_count FROM schools WHERE closeddate LIKE '198%' AND edopscode = 'CEA' GROUP BY county_name ORDER BY closure_count DESC LIMIT 1","SELECT county_name, COUNT(*) AS closure_count FROM schools WHERE closeddate LIKE '198%' AND edopscode = 'CEA' GROUP BY county_name ORDER BY closure_count DESC LIMIT 1"
81,825,Identify the gender of the superhero who has the ability of Phoenix Force.,superhero,moderate,SELECT T4.gender FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id INNER JOIN gender AS T4 ON T1.gender_id = T4.id WHERE T3.power_name = 'Phoenix Force',7,"SELECT gender FROM superhero WHERE superhero_name = 'Phoenix Force'
SELECT gender FROM superhero WHERE superhero_name = 'Phoenix Force'
SELECT gender FROM superhero WHERE superhero_name = 'Phoenix Force'
SELECT gender FROM superhero WHERE superhero_name = 'Phoenix Force'
SELECT gender FROM superhero WHERE superhero_name = 'Phoenix Force'
SELECT gender FROM superhero WHERE superhero_name = 'Phoenix Force'
SELECT gender FROM superhero WHERE superhero_name = 'Phoenix Force'",SELECT gender FROM superhero WHERE superhero_name = 'Phoenix Force'
82,1173,"What is the most common illness that doctors identified among the patients whose lab work was done between 1/1/1985, and 12/31/1995?",thrombosis_prediction,challenging,SELECT T2.Diagnosis FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.`Examination Date` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY T2.Diagnosis ORDER BY COUNT(T2.Diagnosis) DESC LIMIT 1,7,"SELECT diagnosis, COUNT(*) AS illness_count FROM laboratory WHERE date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY diagnosis ORDER BY illness_count DESC LIMIT 1
SELECT diagnosis, COUNT(*) AS illness_count FROM laboratory WHERE date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY diagnosis ORDER BY illness_count DESC LIMIT 1
SELECT diagnosis, COUNT(*) AS illness_count FROM laboratory WHERE date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY diagnosis ORDER BY illness_count DESC LIMIT 1
SELECT diagnosis, COUNT(*) AS illness_count FROM laboratory WHERE date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY diagnosis ORDER BY illness_count DESC LIMIT 1
SELECT diagnosis, COUNT(*) AS illness_count FROM laboratory WHERE date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY diagnosis ORDER BY illness_count DESC LIMIT 1
SELECT diagnosis, COUNT(*) AS illness_count FROM laboratory WHERE date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY diagnosis ORDER BY illness_count DESC LIMIT 1
SELECT diagnosis, COUNT(*) AS illness_count FROM laboratory WHERE date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY diagnosis ORDER BY illness_count DESC LIMIT 1","SELECT diagnosis, COUNT(*) AS illness_count FROM laboratory WHERE date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY diagnosis ORDER BY illness_count DESC LIMIT 1"
83,1189,"What number of patients with a degree of thrombosis level 2 and ANA pattern of only S, have a level of anti-Cardiolip in antibody (IgM) 20% higher than average?",thrombosis_prediction,challenging,SELECT COUNT(*) FROM Examination WHERE Thrombosis = 2 AND `ANA Pattern` = 'S' AND `aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination WHERE Thrombosis = 2 AND `ANA Pattern` = 'S'),7,"SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.diagnosis = 'thrombosis' AND l.ana_pattern = 'S' AND l.igg = '20% higher than average'
SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.diagnosis = 'thrombosis' AND l.ana_pattern = 'S' AND l.igm > (SELECT AVG(igm) + 20 FROM laboratory) AND l.thrombosis = 2
SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.diagnosis = 'thrombosis' AND l.ana_pattern = 'S' AND l.igm > (SELECT AVG(igm) + 20 FROM laboratory) AND l.thrombosis = 2
SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.diagnosis = 'thrombosis' AND l.ana_pattern = 'S' AND l.igm > (SELECT AVG(igm) + 20 FROM laboratory) AND l.thrombosis = 2
SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.diagnosis = 'thrombosis' AND l.ana_pattern = 'S' AND l.igm > (SELECT AVG(igm) + 20 FROM laboratory) AND l.thrombosis = 2
SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.diagnosis = 'thrombosis' AND l.ana_pattern = 'S' AND l.igm > (SELECT AVG(igm) + 20 FROM laboratory) AND l.thrombosis = 2
SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.diagnosis = 'thrombosis' AND l.ana_pattern = 'S' AND l.igm > (SELECT AVG(igm) + 20 FROM laboratory) AND l.thrombosis = 2",SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.diagnosis = 'thrombosis' AND l.ana_pattern = 'S' AND l.igm > (SELECT AVG(igm) + 20 FROM laboratory) AND l.thrombosis = 2
84,1042,List the name of leagues in which the average goals by the home team is higher than the away team in the 2009/2010 season.,european_football_2,challenging,SELECT t1.name FROM League AS t1 INNER JOIN Match AS t2 ON t1.id = t2.league_id WHERE t2.season = '2009/2010' GROUP BY t1.name HAVING (CAST(SUM(t2.home_team_goal) AS REAL) / COUNT(DISTINCT t2.id)) - (CAST(SUM(t2.away_team_goal) AS REAL) / COUNT(DISTINCT t2.id)) > 0,7,"SELECT l.name FROM league l JOIN match m ON l.id = m.league_id WHERE m.season = '2009/2010' AND m.home_team_goal > m.away_team_goal
SELECT l.name  FROM league l JOIN match m ON l.id = m.league_id WHERE m.season = '2009/2010' AND m.home_team_goal > m.away_team_goal GROUP BY l.name
SELECT l.name  FROM league l JOIN match m ON l.id = m.league_id WHERE m.season = '2009/2010' AND m.home_team_goal > m.away_team_goal GROUP BY l.name
SELECT l.name  FROM league l JOIN match m ON l.id = m.league_id WHERE m.season = '2009/2010' AND m.home_team_goal > m.away_team_goal GROUP BY l.name
SELECT l.name FROM league l JOIN match m ON l.id = m.league_id WHERE m.season = '2009/2010' AND m.home_team_goal > m.away_team_goal
SELECT l.name FROM league l JOIN match m ON l.id = m.league_id WHERE m.season = '2009/2010' AND m.home_team_goal > m.away_team_goal
SELECT l.name FROM league l JOIN match m ON l.id = m.league_id WHERE m.season = '2009/2010' AND m.home_team_goal > m.away_team_goal",SELECT l.name FROM league l JOIN match m ON l.id = m.league_id WHERE m.season = '2009/2010' AND m.home_team_goal > m.away_team_goal
85,1201,What percentage of patients who were born in 1980 and were diagnosed with RA are women?,thrombosis_prediction,moderate,"SELECT CAST(SUM(CASE WHEN SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM Patient WHERE Diagnosis = 'RA' AND STRFTIME('%Y', Birthday) = '1980'",7,"SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM patient WHERE birthday LIKE '1980%' AND diagnosis = 'RA')) AS percentage_women FROM patient WHERE birthday LIKE '1980%' AND diagnosis = 'RA' AND sex = 'F'
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM patient WHERE birthday LIKE '1980%' AND diagnosis = 'RA')) AS percentage_women FROM patient WHERE birthday LIKE '1980%' AND diagnosis = 'RA' AND sex = 'F'
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM patient WHERE birthday LIKE '1980%' AND diagnosis = 'RA')) AS percentage_women FROM patient WHERE birthday LIKE '1980%' AND diagnosis = 'RA' AND sex = 'F'
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM patient WHERE birthday LIKE '1980%' AND diagnosis = 'RA')) AS percentage_women FROM patient WHERE birthday LIKE '1980%' AND diagnosis = 'RA' AND sex = 'female'
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM patient WHERE birthday LIKE '1980%' AND diagnosis = 'RA')) AS percentage_women FROM patient WHERE birthday LIKE '1980%' AND diagnosis = 'RA' AND sex = 'F'
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM patient WHERE birthday LIKE '1980%' AND diagnosis = 'RA')) AS percentage_women FROM patient WHERE birthday LIKE '1980%' AND diagnosis = 'RA' AND sex = 'F'
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM patient WHERE birthday LIKE '1980%' AND diagnosis = 'RA')) AS percentage_women FROM patient WHERE birthday LIKE '1980%' AND diagnosis = 'RA' AND sex = 'F'",SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM patient WHERE birthday LIKE '1980%' AND diagnosis = 'RA')) AS percentage_women FROM patient WHERE birthday LIKE '1980%' AND diagnosis = 'RA' AND sex = 'F'
86,206,What elements are in the TR004_8_9 bond atoms?,toxicology,challenging,SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR004_8_9',7,"SELECT element FROM atom WHERE atom_id IN (SELECT atom_id FROM bond WHERE bond_type = 'TR004_8_9')
SELECT element FROM atom WHERE atom_id IN (SELECT atom_id FROM bond WHERE bond_type = 'TR004_8_9')
SELECT element FROM atom WHERE atom_id IN (SELECT atom_id FROM bond WHERE bond_type = 'TR004_8_9')
SELECT element FROM atom WHERE atom_id IN (SELECT atom_id FROM bond WHERE bond_type = 'TR004_8_9')
SELECT element FROM atom WHERE atom_id IN (SELECT atom_id FROM bond WHERE bond_type = 'TR004_8_9')
SELECT element FROM atom WHERE atom_id IN (SELECT atom_id FROM bond WHERE bond_type = 'TR004_8_9')
SELECT element FROM atom WHERE atom_id IN (SELECT atom_id FROM bond WHERE bond_type = 'TR004_8_9')",SELECT element FROM atom WHERE atom_id IN (SELECT atom_id FROM bond WHERE bond_type = 'TR004_8_9')
87,1010,What is the lap record set by Lewis Hamilton in a Formula_1 race?,formula_1,simple,SELECT T1.time FROM lapTimes AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton',7,"SELECT time FROM results JOIN races ON results.raceid = races.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.surname = 'Hamilton' AND drivers.forename = 'Lewis' AND races.name LIKE '%Formula_1%'
SELECT time FROM results JOIN races ON results.raceid = races.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.surname = 'Hamilton' AND drivers.forename = 'Lewis' AND races.name LIKE '%Formula_1%'
SELECT time FROM results JOIN races ON results.raceid = races.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.surname = 'Hamilton' AND drivers.forename = 'Lewis' AND races.name LIKE '%Formula_1%'
SELECT time FROM results JOIN races ON results.raceid = races.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.surname = 'Hamilton' AND drivers.forename = 'Lewis' AND races.name LIKE '%Formula_1%'
SELECT time FROM results JOIN races ON results.raceid = races.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.surname = 'Hamilton' AND drivers.forename = 'Lewis' AND races.name LIKE '%Formula_1%'
SELECT time FROM results JOIN races ON results.raceid = races.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.surname = 'Hamilton' AND drivers.forename = 'Lewis' AND races.name LIKE '%Formula_1%'
SELECT time FROM results JOIN races ON results.raceid = races.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.surname = 'Hamilton' AND drivers.forename = 'Lewis' AND races.name LIKE '%Formula_1%'",SELECT time FROM results JOIN races ON results.raceid = races.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.surname = 'Hamilton' AND drivers.forename = 'Lewis' AND races.name LIKE '%Formula_1%'
88,1395,How many members did attend the event 'Community Theater' in 2019?,student_club,moderate,"SELECT COUNT(T2.link_to_member) FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'Community Theater' AND SUBSTR(T1.event_date, 1, 4) = '2019'",7,"SELECT COUNT(DISTINCT attendance.link_to_member) FROM attendance JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Community 
SELECT COUNT(DISTINCT attendance.link_to_member) FROM attendance JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Community 
SELECT COUNT(DISTINCT attendance.link_to_member) FROM attendance JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Community 
SELECT COUNT(DISTINCT attendance.link_to_member) AS attendees FROM attendance JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Community 
SELECT COUNT(DISTINCT attendance.link_to_member) FROM attendance JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Community 
SELECT COUNT(DISTINCT attendance.link_to_member) FROM attendance JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Community 
SELECT COUNT(DISTINCT attendance.link_to_member) AS attendees FROM attendance JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Community ",SELECT COUNT(DISTINCT attendance.link_to_member) FROM attendance JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Community 
89,108,"For the client who applied the biggest loan, what was his/her first amount of transaction after opened the account?",financial,simple,"SELECT T3.amount FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN trans AS T3 ON T2.account_id = T3.account_id ORDER BY T1.amount DESC, T3.date ASC LIMIT 1",7,"SELECT trans.amount FROM trans JOIN loan ON trans.account_id = loan.account_id JOIN client ON loan.account_id = client.client_id WHERE client.client_id = (SELECT client_id FROM loan ORDER BY loan.amount DESC LIMIT 1) AND trans.date = (SELECT MIN(trans.date) FROM trans WHERE trans.account_id = (SELECT loan.account_id FROM loan ORDER BY loan.amount DESC LIMIT 1))
SELECT t.amount  FROM trans t  JOIN loan l ON t.account_id = l.account_id  JOIN disp d ON l.account_id = d.account_id  JOIN client c ON d.client_id = c.client_id  WHERE d.type = 'OWNER'  AND l.amount = (SELECT MAX(amount) FROM loan)  AND t.date > (SELECT date FROM account WHERE account_id = l.account_id)  ORDER BY t.date ASC  LIMIT 1
SELECT t.amount  FROM trans t  JOIN loan l ON t.account_id = l.account_id  JOIN disp d ON l.account_id = d.account_id  JOIN client c ON d.client_id = c.client_id  WHERE d.type = 'OWNER'  AND l.amount = (SELECT MAX(amount) FROM loan)  AND t.date > (SELECT date FROM account WHERE account_id = l.account_id)  ORDER BY t.date  LIMIT 1
SELECT t.amount  FROM trans t  JOIN loan l ON t.account_id = l.account_id  JOIN disp d ON l.account_id = d.account_id  JOIN client c ON d.client_id = c.client_id  WHERE d.type = 'OWNER'  AND l.amount = (SELECT MAX(amount) FROM loan)  AND t.date > (SELECT date FROM account WHERE account_id = l.account_id)  ORDER BY t.date ASC  LIMIT 1
SELECT t.amount  FROM trans t  JOIN loan l ON t.account_id = l.account_id  JOIN disp d ON l.account_id = d.account_id  JOIN client c ON d.client_id = c.client_id  WHERE d.type = 'OWNER'  AND l.amount = (SELECT MAX(amount) FROM loan)  AND t.date > (SELECT date FROM account WHERE account_id = l.account_id)  ORDER BY t.date ASC  LIMIT 1
SELECT t.amount  FROM trans t JOIN loan l ON t.account_id = l.account_id JOIN disp d ON l.account_id = d.account_id JOIN client c ON d.client_id = c.client_id WHERE l.amount = (SELECT MAX(amount) FROM loan)  AND t.date > (SELECT date FROM account WHERE account_id = l.account_id)  LIMIT 1
SELECT t.amount  FROM trans t  JOIN loan l ON t.account_id = l.account_id  JOIN disp d ON l.account_id = d.account_id  JOIN client c ON d.client_id = c.client_id  WHERE d.type = 'OWNER'  AND l.amount = (SELECT MAX(amount) FROM loan)  AND t.date > (SELECT date FROM account WHERE account_id = l.account_id)  ORDER BY t.date  LIMIT 1",SELECT t.amount  FROM trans t  JOIN loan l ON t.account_id = l.account_id  JOIN disp d ON l.account_id = d.account_id  JOIN client c ON d.client_id = c.client_id  WHERE d.type = 'OWNER'  AND l.amount = (SELECT MAX(amount) FROM loan)  AND t.date > (SELECT date FROM account WHERE account_id = l.account_id)  ORDER BY t.date ASC  LIMIT 1
90,829,Which publisher created more superheroes: DC or Marvel Comics? Find the difference in the number of superheroes.,superhero,challenging,SELECT SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id,7,"SELECT      (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC')) -      (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS difference_in_number_of_superheroes
SELECT      (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC')) -      (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS difference_in_number_of_superheroes
SELECT      publisher_name,      COUNT(*) AS superhero_count FROM      superhero JOIN      publisher ON superhero.publisher_id = publisher.id WHERE      publisher_name IN ('DC', 'Marvel Comics') GROUP BY      publisher_name ORDER BY      superhero_count DESC LIMIT 1
SELECT      (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC')) -      (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS difference_in_number_of_superheroes
SELECT      (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC')) -      (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS difference_in_number_of_superheroes
SELECT      (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC')) -      (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS difference_in_number_of_superheroes
SELECT      (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC')) -      (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS difference_in_number_of_superheroes",SELECT      (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC')) -      (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS difference_in_number_of_superheroes
91,36,Under whose administration is the school with the highest number of students scoring 1500 or more on the SAT? Indicate their full names.,california_schools,challenging,"SELECT T2.AdmFName1, T2.AdmLName1, T2.AdmFName2, T2.AdmLName2, T2.AdmFName3, T2.AdmLName3 FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.NumGE1500 DESC LIMIT 1",7,"SELECT s.admfname1, s.admlname1, s.admemail1 FROM schools s JOIN satscores sat ON s.cdscode = sat.sname WHERE sat.numge1500 >= 1500 ORDER BY sat.numge1500 DESC LIMIT 1
SELECT s.admfname1, s.admlname1, s.admemail1 FROM schools s JOIN satscores sat ON s.cdscode = sat.sname WHERE sat.numge1500 >= 1500 ORDER BY sat.numge1500 DESC LIMIT 1
SELECT s.admfname1, s.admlname1, s.admemail1 FROM schools s JOIN satscores sat ON s.cdscode = sat.sname WHERE sat.numge1500 >= 1500 ORDER BY sat.numge1500 DESC LIMIT 1
SELECT s.admfname1, s.admlname1, s.admemail1 FROM schools s JOIN satscores sat ON s.cdscode = sat.sname WHERE sat.numge1500 >= 1500 ORDER BY sat.numge1500 DESC LIMIT 1
SELECT s.admfname1, s.admlname1, s.admemail1 FROM schools s JOIN satscores sat ON s.cdscode = sat.sname WHERE sat.numge1500 >= 1500 ORDER BY sat.numge1500 DESC LIMIT 1
SELECT s.admfname1, s.admlname1, s.admemail1 FROM schools s JOIN satscores sat ON s.cdscode = sat.sname WHERE sat.numge1500 >= 1500 ORDER BY sat.numge1500 DESC LIMIT 1
SELECT s.admfname1, s.admlname1, s.admemail1 FROM schools s JOIN satscores sat ON s.cdscode = sat.sname WHERE sat.numge1500 >= 1500 ORDER BY sat.numge1500 DESC LIMIT 1","SELECT s.admfname1, s.admlname1, s.admemail1 FROM schools s JOIN satscores sat ON s.cdscode = sat.sname WHERE sat.numge1500 >= 1500 ORDER BY sat.numge1500 DESC LIMIT 1"
92,415,What percentage of cards with format commander and legal status do not have a content warning?,card_games,challenging,SELECT CAST(SUM(CASE WHEN T1.hasContentWarning = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'commander' AND T2.status = 'Legal',7,"SELECT (COUNT(*) FILTER (WHERE hascontentwarning = 0) * 100.0 / COUNT(*)) AS percentage_no_content_warning FROM cards WHERE format = 'commander' AND status = 'legal'
SELECT (COUNT(*) FILTER (WHERE hascontentwarning = 0) * 100.0 / COUNT(*)) AS percentage_no_content_warning FROM cards WHERE format = 'commander' AND status = 'legal'
SELECT (COUNT(*) FILTER (WHERE hascontentwarning = 0) * 100.0 / COUNT(*)) AS percentage_no_content_warning FROM cards WHERE format = 'commander' AND status = 'legal'
SELECT (COUNT(*) FILTER (WHERE hascontentwarning = 0) * 100.0 / COUNT(*)) AS percentage_no_content_warning FROM cards WHERE format = 'commander' AND status = 'legal'
SELECT (COUNT(*) FILTER (WHERE hascontentwarning = 0) * 100.0 / COUNT(*)) AS percentage_no_content_warning FROM cards WHERE format = 'commander' AND status = 'legal'
SELECT (COUNT(*) FILTER (WHERE hascontentwarning = 0) * 100.0 / COUNT(*)) AS percentage_no_content_warning FROM cards WHERE format = 'commander' AND status = 'legal'
SELECT (COUNT(*) FILTER (WHERE hascontentwarning = 0) * 100.0 / COUNT(*)) AS percentage_no_content_warning FROM cards WHERE format = 'commander' AND status = 'legal'",SELECT (COUNT(*) FILTER (WHERE hascontentwarning = 0) * 100.0 / COUNT(*)) AS percentage_no_content_warning FROM cards WHERE format = 'commander' AND status = 'legal'
93,290,Which toxic element can be found in the molecule TR151?,toxicology,challenging,SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR151',7,"SELECT element FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR151')
SELECT element FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR151')
SELECT element FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR151')
SELECT element FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR151')
SELECT element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR151'
SELECT element FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR151')
SELECT element FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR151')",SELECT element FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR151')
94,1316,"Please list the phone numbers of the students from the Student_Club that has attended the event ""Women's Soccer"".",student_club,moderate,SELECT T3.phone FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T1.event_name = 'Women''s Soccer',7,"SELECT phone FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women's Soccer'
SELECT phone FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women's Soccer'
SELECT phone FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women's Soccer'
SELECT phone FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women's Soccer'
SELECT phone FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women's Soccer'
SELECT phone FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE event_name = 'Women's Soccer'
SELECT phone FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women's Soccer'",SELECT phone FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women's Soccer'
95,1308,"Among the patients who have a normal platelet level, how many of them have other symptoms observed?",thrombosis_prediction,moderate,SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.PLT > 100 AND T2.PLT < 400 AND T1.Diagnosis IS NOT NULL,7,"SELECT COUNT(*) FROM patient p JOIN examination e ON p.id = e.id WHERE e.symptoms IS NOT NULL AND p.diagnosis = 'normal platelet level'
SELECT COUNT(*) FROM patient p JOIN examination e ON p.id = e.id WHERE p.diagnosis = 'normal platelet level' AND e.symptoms IS NOT NULL
SELECT COUNT(*) FROM patient p JOIN examination e ON p.id = e.id WHERE p.diagnosis = 'normal platelet level' AND e.symptoms IS NOT NULL
SELECT COUNT(*) FROM patient p JOIN examination e ON p.id = e.id WHERE p.diagnosis = 'normal platelet level' AND e.symptoms IS NOT NULL
SELECT COUNT(*) FROM patient p JOIN examination e ON p.id = e.id WHERE p.diagnosis = 'normal platelet level' AND e.symptoms IS NOT NULL
SELECT COUNT(*) FROM patient p JOIN examination e ON p.id = e.id WHERE p.diagnosis = 'normal platelet level' AND e.symptoms IS NOT NULL
SELECT COUNT(*) FROM patient p JOIN examination e ON p.id = e.id WHERE p.diagnosis = 'normal platelet level' AND e.symptoms IS NOT NULL",SELECT COUNT(*) FROM patient p JOIN examination e ON p.id = e.id WHERE p.diagnosis = 'normal platelet level' AND e.symptoms IS NOT NULL
96,1109,"How was the build up play dribbling class for ""LEI"" on 2015/9/10?",european_football_2,moderate,"SELECT t2.buildUpPlayDribblingClass FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t1.team_short_name = 'LEI' AND SUBSTR(t2.`date`, 1, 10) = '2015-09-10'",7,"SELECT buildupplaydribblingclass  FROM team_attributes  JOIN team ON team_attributes.team_api_id = team.team_api_id  JOIN match ON team.team_api_id = match.home_team_api_id  WHERE date = '2015/9/10' AND team_long_name = 'LEI'
SELECT buildupplaydribblingclass  FROM team_attributes  JOIN team ON team_attributes.team_api_id = team.team_api_id  JOIN match ON team.team_api_id = match.home_team_api_id OR team.team_api_id = match.away_team_api_id  WHERE date = '2015/9/10' AND team_long_name = 'LEI'
SELECT buildupplaydribblingclass  FROM team_attributes  JOIN team ON team_attributes.team_api_id = team.team_api_id  JOIN match ON team.team_api_id = match.home_team_api_id  WHERE date = '2015/9/10'  AND team_long_name = 'LEI'
SELECT buildupplaydribblingclass  FROM team_attributes  JOIN team ON team_attributes.team_api_id = team.team_api_id  JOIN match ON team.team_api_id = match.home_team_api_id  WHERE date = '2015/9/10'  AND team_long_name = 'LEI'
SELECT buildupplaydribblingclass  FROM team_attributes  JOIN team ON team_attributes.team_api_id = team.team_api_id  JOIN match ON team.team_api_id = match.home_team_api_id  WHERE date = '2015/9/10'  AND team_long_name = 'LEI'
SELECT buildupplaydribblingclass FROM team_attributes WHERE team_fifa_api_id = 'LEI' AND date = '2015-09-10'
SELECT buildupplaydribblingclass  FROM team_attributes  JOIN team ON team_attributes.team_api_id = team.team_api_id  JOIN match ON team.team_api_id = match.home_team_api_id OR team.team_api_id = match.away_team_api_id  WHERE date = '2015/9/10' AND team_long_name = 'LEI'",SELECT buildupplaydribblingclass  FROM team_attributes  JOIN team ON team_attributes.team_api_id = team.team_api_id  JOIN match ON team.team_api_id = match.home_team_api_id  WHERE date = '2015/9/10'  AND team_long_name = 'LEI'
97,1113,"For the team ""Hannover 96"", what was its defence aggression class on 2015/9/10?",european_football_2,moderate,SELECT t2.chanceCreationShootingClass FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t1.team_long_name = 'Hannover 96' AND t2.`date` LIKE '2015-09-10%',7,"SELECT defenceaggressionclass  FROM team_attributes  WHERE team_fifa_api_id IN (     SELECT team_fifa_api_id      FROM team      WHERE team_long_name = 'Hannover 96' )  AND date = '2015-09-10'
SELECT defenceaggressionclass  FROM team_attributes  WHERE team_fifa_api_id IN (     SELECT team_fifa_api_id      FROM team      WHERE team_long_name = 'Hannover 96' )  AND date = '2015-09-10'
SELECT defenceaggressionclass  FROM team_attributes  WHERE team_fifa_api_id IN (     SELECT team_fifa_api_id      FROM team      WHERE team_long_name = 'Hannover 96' )  AND date = '2015-09-10'
SELECT defenceaggressionclass  FROM team_attributes  JOIN team ON team_attributes.team_api_id = team.team_api_id  WHERE team.team_long_name = 'Hannover 96'  AND team_attributes.date = '2015-09-10'
SELECT defenceaggressionclass  FROM team_attributes  WHERE team_fifa_api_id IN (     SELECT team_fifa_api_id      FROM team      WHERE team_long_name = 'Hannover 96' )  AND date = '2015-09-10'
SELECT defenceaggressionclass  FROM team_attributes  JOIN team ON team_attributes.team_api_id = team.team_api_id  WHERE team.team_long_name = 'Hannover 96' AND date = '2015-09-10'
SELECT defenceaggressionclass  FROM team_attributes  JOIN team ON team_attributes.team_api_id = team.team_api_id  WHERE team.team_long_name = 'Hannover 96' AND date = '2015-09-10'",SELECT defenceaggressionclass  FROM team_attributes  WHERE team_fifa_api_id IN (     SELECT team_fifa_api_id      FROM team      WHERE team_long_name = 'Hannover 96' )  AND date = '2015-09-10'
98,634,"Among posts by Harvey Motulsky and Noah Snyder, which one has higher popularity?",codebase_community,challenging,SELECT T1.DisplayName FROM users AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.UserId INNER JOIN posts AS T3 ON T2.PostId = T3.Id WHERE T1.DisplayName = 'Harvey Motulsky' OR T1.DisplayName = 'Noah Snyder' GROUP BY T1.DisplayName ORDER BY SUM(T3.ViewCount) DESC LIMIT 1,7,"SELECT p.title, p.score FROM posts p JOIN users u ON p.owneruserid = u.id WHERE u.displayname IN ('Harvey Motulsky', 'Noah Snyder') ORDER BY p.score DESC
SELECT p.title, p.score, p.answercount, p.commentcount, p.favoritecount, p.viewcount, p.tags FROM posts p JOIN users u ON p.owneruserid = u.id WHERE u.displayname IN ('Harvey Motulsky', 'Noah Snyder') ORDER BY p.score DESC LIMIT 1
SELECT p.title, p.score FROM posts p JOIN users u ON p.owneruserid = u.id WHERE u.displayname IN ('Harvey Motulsky', 'Noah Snyder') ORDER BY p.score DESC
SELECT p.title, p.score FROM posts p JOIN users u ON p.owneruserid = u.id WHERE u.displayname IN ('Harvey Motulsky', 'Noah Snyder') ORDER BY p.score DESC
SELECT p.title, p.score FROM posts p JOIN users u ON p.owneruserid = u.id WHERE u.displayname IN ('Harvey Motulsky', 'Noah Snyder') ORDER BY p.score DESC
SELECT p.title, p.score, p.answercount, p.commentcount, p.favoritecount, p.viewcount, p.tags, u.displayname FROM posts p JOIN users u ON p.owneruserid = u.id WHERE u.displayname IN ('Harvey Motulsky', 'Noah Snyder') ORDER BY p.score DESC LIMIT 1
SELECT p.title, p.score, p.answercount, p.commentcount, p.favoritecount, p.viewcount, p.tags FROM posts p JOIN users u ON p.owneruserid = u.id WHERE u.displayname IN ('Harvey Motulsky', 'Noah Snyder') ORDER BY p.score DESC LIMIT 1","SELECT p.title, p.score FROM posts p JOIN users u ON p.owneruserid = u.id WHERE u.displayname IN ('Harvey Motulsky', 'Noah Snyder') ORDER BY p.score DESC"
99,1265,How many patients have a normal level of anti-ribonuclear protein and have been admitted to the hospital?,thrombosis_prediction,moderate,SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RNP = 'negative' OR T2.RNP = '0' AND T1.Admission = '+',7,"SELECT COUNT(*) FROM patient WHERE admission = 'hospital' AND 'ana' = 'normal'
SELECT COUNT(*) FROM patient WHERE admission = 'hospital' AND 'ana' = 'normal'
SELECT COUNT(*) FROM patient WHERE admission = 'hospital' AND 'ana' = 'normal'
SELECT COUNT(*) FROM patient WHERE admission = 'hospital' AND 'ana' = 'normal'
SELECT COUNT(*) FROM patient WHERE admission = 'hospital' AND 'ana' = 'normal'
SELECT COUNT(*) FROM patient WHERE admission = 'hospital' AND 'ana' = 'normal'
SELECT COUNT(*) FROM patient WHERE admission = 'hospital' AND 'ana' = 'normal'",SELECT COUNT(*) FROM patient WHERE admission = 'hospital' AND 'ana' = 'normal'
100,1076,"What is the difference of the average ball control score between Abdou Diallo and Aaron Appindangoye
?",european_football_2,challenging,SELECT CAST(SUM(CASE WHEN t1.player_name = 'Abdou Diallo' THEN t2.ball_control ELSE 0 END) AS REAL) / COUNT(CASE WHEN t1.player_name = 'Abdou Diallo' THEN t2.id ELSE NULL END) - CAST(SUM(CASE WHEN t1.player_name = 'Aaron Appindangoye' THEN t2.ball_control ELSE 0 END) AS REAL) / COUNT(CASE WHEN t1.player_name = 'Aaron Appindangoye' THEN t2.id ELSE NULL END) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id,7,"SELECT AVG(pa1.ball_control) - AVG(pa2.ball_control) AS difference FROM player_attributes pa1 JOIN player p1 ON pa1.player_api_id = p1.player_api_id JOIN player_attributes pa2 ON pa2.player_api_id = p2.player_api_id WHERE p1.player_name = 'Abdou Diallo' AND p2.player_name = 'Aaron Appindangoye'
SELECT AVG(pa1.ball_control) - AVG(pa2.ball_control) AS difference FROM player_attributes pa1 JOIN player p1 ON pa1.player_api_id = p1.player_api_id JOIN player_attributes pa2 ON pa2.player_api_id = p2.player_api_id WHERE p1.player_name = 'Abdou Diallo' AND p2.player_name = 'Aaron Appindangoye'
SELECT AVG(pa1.ball_control) - AVG(pa2.ball_control) AS difference FROM player_attributes pa1 JOIN player p1 ON pa1.player_api_id = p1.player_api_id JOIN player_attributes pa2 ON pa2.player_api_id = p2.player_api_id WHERE p1.player_name = 'Abdou Diallo' AND p2.player_name = 'Aaron Appindangoye'
SELECT AVG(pa1.ball_control) - AVG(pa2.ball_control) AS difference FROM player_attributes pa1 JOIN player p1 ON pa1.player_api_id = p1.player_api_id JOIN player_attributes pa2 ON pa2.player_api_id = p2.player_api_id WHERE p1.player_name = 'Abdou Diallo' AND p2.player_name = 'Aaron Appindangoye'
SELECT AVG(pa1.ball_control) - AVG(pa2.ball_control) AS difference FROM player_attributes pa1 JOIN player p1 ON pa1.player_api_id = p1.player_api_id JOIN player_attributes pa2 ON pa2.player_api_id = p2.player_api_id WHERE p1.player_name = 'Abdou Diallo' AND p2.player_name = 'Aaron Appindangoye'
SELECT AVG(pa1.ball_control) - AVG(pa2.ball_control) AS difference FROM player_attributes pa1 JOIN player p1 ON pa1.player_api_id = p1.player_api_id JOIN player_attributes pa2 ON pa2.player_api_id = p2.player_api_id WHERE p1.player_name = 'Abdou Diallo' AND p2.player_name = 'Aaron Appindangoye'
SELECT AVG(pa1.ball_control) - AVG(pa2.ball_control) AS difference FROM player_attributes pa1 JOIN player p1 ON pa1.player_api_id = p1.player_api_id JOIN player_attributes pa2 ON pa2.player_api_id = p2.player_api_id WHERE p1.player_name = 'Abdou Diallo' AND p2.player_name = 'Aaron Appindangoye'",SELECT AVG(pa1.ball_control) - AVG(pa2.ball_control) AS difference FROM player_attributes pa1 JOIN player p1 ON pa1.player_api_id = p1.player_api_id JOIN player_attributes pa2 ON pa2.player_api_id = p2.player_api_id WHERE p1.player_name = 'Abdou Diallo' AND p2.player_name = 'Aaron Appindangoye'
101,477,"Which of these artists have designed a card in the set Coldsnap, Jeremy Jarvis, Aaron Miller or Chippy?",card_games,challenging,SELECT T1.artist FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE (T2.name = 'Coldsnap' AND T1.artist = 'Chippy') OR (T2.name = 'Coldsnap' AND T1.artist = 'Aaron Miller') OR (T2.name = 'Coldsnap' AND T1.artist = 'Jeremy Jarvis') GROUP BY T1.artist,7,"SELECT artist FROM cards WHERE setcode = 'Coldsnap' AND (artist = 'Jeremy Jarvis' OR artist = 'Aaron Miller' OR artist = 'Chippy')
SELECT name FROM cards WHERE setcode = 'Coldsnap' AND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')
SELECT name FROM cards WHERE setcode = 'Coldsnap' AND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')
SELECT name FROM cards WHERE setcode = 'Coldsnap' AND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')
SELECT artist FROM cards WHERE setcode = 'Coldsnap'
SELECT artist FROM cards WHERE setcode = 'Coldsnap' AND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')
SELECT artist FROM cards WHERE setcode = 'Coldsnap' AND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')","SELECT name FROM cards WHERE setcode = 'Coldsnap' AND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')"
102,1124,Who are the players that tend to be attacking when their mates were doing attack moves? List down their name.,european_football_2,moderate,SELECT DISTINCT t1.player_name FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t2.attacking_work_rate = 'high',7,"SELECT p.player_name FROM player p JOIN player_attributes pa ON p.player_api_id = pa.player_api_id WHERE pa.attacking_work_rate = 'High' AND EXISTS (     SELECT 1     FROM player_attributes pa_mate     WHERE pa_mate.player_api_id = p.player_api_id - 1     AND pa_mate.attacking_work_rate = 'High' )
SELECT p.player_name FROM player p JOIN player_attributes pa ON p.player_api_id = pa.player_api_id WHERE pa.attacking_work_rate = 'High' AND EXISTS (     SELECT 1     FROM player_attributes pa_mate     WHERE pa_mate.player_api_id = p.player_api_id - 1     AND pa_mate.attacking_work_rate = 'High' )
SELECT p.player_name FROM player p JOIN player_attributes pa ON p.player_api_id = pa.player_api_id WHERE pa.attacking_work_rate = 'High' AND EXISTS (     SELECT 1     FROM player_attributes pa_mate     WHERE pa_mate.player_api_id = p.player_api_id - 1     AND pa_mate.attacking_work_rate = 'High' )
SELECT p.player_name FROM player p JOIN player_attributes pa ON p.player_api_id = pa.player_api_id WHERE pa.attacking_work_rate = 'High' AND EXISTS (     SELECT 1     FROM player_attributes pa_mate     WHERE pa_mate.player_api_id = p.player_api_id - 1     AND pa_mate.attacking_work_rate = 'High' )
SELECT p.player_name FROM player p JOIN player_attributes pa ON p.player_api_id = pa.player_api_id WHERE pa.attacking_work_rate = 'High' AND EXISTS (     SELECT 1     FROM player_attributes pa_mate     WHERE pa_mate.player_api_id = p.player_api_id - 1     AND pa_mate.attacking_work_rate = 'High' )
SELECT p.player_name FROM player p JOIN player_attributes pa ON p.player_api_id = pa.player_api_id WHERE pa.attacking_work_rate = 'High' AND EXISTS (     SELECT 1     FROM player_attributes pa_mate     WHERE pa_mate.player_api_id = p.player_api_id - 1     AND pa_mate.attacking_work_rate = 'High' )
SELECT p.player_name FROM player p JOIN player_attributes pa ON p.player_api_id = pa.player_api_id WHERE pa.attacking_work_rate = 'High' AND EXISTS (     SELECT 1     FROM player_attributes pa_mate     WHERE pa_mate.player_api_id = p.player_api_id - 1     AND pa_mate.attacking_work_rate = 'High' )",SELECT p.player_name FROM player p JOIN player_attributes pa ON p.player_api_id = pa.player_api_id WHERE pa.attacking_work_rate = 'High' AND EXISTS (     SELECT 1     FROM player_attributes pa_mate     WHERE pa_mate.player_api_id = p.player_api_id - 1     AND pa_mate.attacking_work_rate = 'High' )
103,1117,What are the player api id of 10 heaviest players?,european_football_2,simple,SELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 10,7,"SELECT player_api_id  FROM player  ORDER BY weight DESC  LIMIT 10
SELECT player_api_id FROM player ORDER BY weight DESC LIMIT 10
SELECT player_api_id FROM player ORDER BY weight DESC LIMIT 10
SELECT player_api_id FROM player ORDER BY weight DESC LIMIT 10
SELECT player_api_id FROM player ORDER BY weight DESC LIMIT 10
SELECT player_api_id FROM player ORDER BY weight DESC LIMIT 10
SELECT player_api_id FROM player ORDER BY weight DESC LIMIT 10",SELECT player_api_id FROM player ORDER BY weight DESC LIMIT 10
104,1464,Write the full names of students who received funds on the date of 9/9/2019 and include the amount received.,student_club,challenging,"SELECT DISTINCT T3.first_name, T3.last_name, T4.amount FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T3.member_id = T2.link_to_member INNER JOIN income AS T4 ON T4.link_to_member = T3.member_id WHERE T4.date_received = '2019-09-09'",7,"SELECT first_name || ' ' || last_name AS full_name, amount FROM member JOIN income ON member.member_id = income.link_to_member WHERE income.date_received = '2019-09-09'
SELECT first_name || ' ' || last_name AS full_name, amount FROM member JOIN income ON member.member_id = income.link_to_member WHERE income.date_received = '2019-09-09'
SELECT m.first_name || ' ' || m.last_name AS full_name, i.amount FROM member m JOIN income i ON m.member_id = i.link_to_member WHERE i.date_received = '2019-09-09'
SELECT first_name || ' ' || last_name AS full_name, amount FROM member JOIN income ON member.member_id = income.link_to_member WHERE income.date_received = '2019-09-09'
SELECT first_name || ' ' || last_name AS full_name, amount FROM member JOIN income ON member.member_id = income.link_to_member WHERE income.date_received = '2019-09-09'
SELECT first_name || ' ' || last_name AS full_name, amount FROM member JOIN income ON member.member_id = income.link_to_member WHERE income.date_received = '2019-09-09'
SELECT m.first_name || ' ' || m.last_name AS full_name, i.amount FROM member m JOIN income i ON m.member_id = i.link_to_member WHERE i.date_received = '2019-09-09'","SELECT first_name || ' ' || last_name AS full_name, amount FROM member JOIN income ON member.member_id = income.link_to_member WHERE income.date_received = '2019-09-09'"
105,1458,Calculate the difference in the percentage of members in New Jersey and Vermont.,student_club,moderate,SELECT CAST((SUM(CASE WHEN T2.state = 'New Jersey' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.state = 'Vermont' THEN 1 ELSE 0 END)) AS REAL) * 100 / COUNT(T1.member_id) AS diff FROM member AS T1 INNER JOIN zip_code AS T2 ON T2.zip_code = T1.zip,7,"SELECT ((SELECT COUNT(*) FROM member WHERE zip IN ('08610', '05401')) / (SELECT COUNT(*) FROM member)) * 100 - ((SELECT COUNT(*) FROM member WHERE zip IN ('08610', '05401')) / (SELECT COUNT(*) FROM member)) * 100 AS percentage_difference
SELECT ((SELECT COUNT(*) FROM member WHERE zip IN ('08610', '05401')) / (SELECT COUNT(*) FROM member)) * 100 - ((SELECT COUNT(*) FROM member WHERE zip IN ('08610', '05401')) / (SELECT COUNT(*) FROM member)) * 100 AS percentage_difference
SELECT ((SELECT COUNT(*) FROM member WHERE zip IN ('NJ')) * 100.0 / (SELECT COUNT(*) FROM member WHERE zip IN ('VT'))) AS percentage_difference FROM member
SELECT ((SELECT COUNT(*) FROM member WHERE zip IN (SELECT zip_code FROM zip_code WHERE state = 'New Jersey')) / (SELECT COUNT(*) FROM member) * 100.0) - ((SELECT COUNT(*) FROM member WHERE zip IN (SELECT zip_code FROM zip_code WHERE state = 'Vermont')) / (SELECT COUNT(*) FROM member) * 100.0) AS percentage_difference
SELECT ((SELECT COUNT(*) FROM member WHERE zip IN ('NJ')) * 100.0 / (SELECT COUNT(*) FROM member WHERE zip IN ('VT'))) AS percentage_difference FROM member
SELECT (SELECT COUNT(*) FROM member WHERE zip IN ('08601', '05401')) / (SELECT COUNT(*) FROM member) * 100 - (SELECT COUNT(*) FROM member WHERE zip IN ('08601', '05401')) / (SELECT COUNT(*) FROM member) * 100 AS percentage_difference
SELECT ((SELECT COUNT(*) FROM member WHERE zip IN (SELECT zip_code FROM zip_code WHERE state = 'New Jersey')) / (SELECT COUNT(*) FROM member) * 100.0) - ((SELECT COUNT(*) FROM member WHERE zip IN (SELECT zip_code FROM zip_code WHERE state = 'Vermont')) / (SELECT COUNT(*) FROM member) * 100.0) AS percentage_difference","SELECT ((SELECT COUNT(*) FROM member WHERE zip IN ('08610', '05401')) / (SELECT COUNT(*) FROM member)) * 100 - ((SELECT COUNT(*) FROM member WHERE zip IN ('08610', '05401')) / (SELECT COUNT(*) FROM member)) * 100 AS percentage_difference"
106,473,Is the set of cards with Adarkar Valkyrie only available outside the United States?,card_games,moderate,"SELECT IIF(isForeignOnly = 1, 'YES', 'NO') FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE T1.name = 'Adarkar Valkyrie'",7,"SELECT * FROM cards WHERE name LIKE '%Adarkar Valkyrie%' AND availability != 'United States'
SELECT * FROM cards WHERE name LIKE '%Adarkar Valkyrie%' AND availability != 'United States'
SELECT * FROM cards WHERE name LIKE '%Adarkar Valkyrie%' AND availability != 'United States'
SELECT * FROM cards WHERE name LIKE '%Adarkar Valkyrie%' AND availability != 'United States'
SELECT * FROM cards WHERE name LIKE '%Adarkar Valkyrie%' AND availability != 'United States'
SELECT * FROM cards WHERE name LIKE '%Adarkar Valkyrie%' AND availability != 'United States'
SELECT * FROM cards WHERE name LIKE '%Adarkar Valkyrie%' AND availability != 'United States'",SELECT * FROM cards WHERE name LIKE '%Adarkar Valkyrie%' AND availability != 'United States'
107,87,"What are the valid e-mail addresses of the administrator of the school located in the San Bernardino county, City of San Bernardino City Unified that opened between 1/1/2009 to 12/31/2010 whose school types are public Intermediate/Middle Schools and Unified Schools?",california_schools,challenging,"SELECT T2.AdmEmail1, T2.AdmEmail2 FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'San Bernardino' AND T2.City = 'San Bernardino' AND T2.DOC = 54 AND strftime('%Y', T2.OpenDate) BETWEEN '2009' AND '2010' AND T2.SOC = 62",7,"SELECT admemail2  FROM schools  WHERE county = 'San Bernardino'  AND city = 'San Bernardino'  AND school_type IN ('public Intermediate/Middle Schools', 'Unified Schools')  AND opendate BETWEEN '2009-01-01' AND '2010-12-31'
SELECT admemail2  FROM schools  WHERE county = 'San Bernardino'  AND city = 'San Bernardino'  AND school_type IN ('public Intermediate/Middle Schools', 'Unified Schools')  AND opendate BETWEEN '2009-01-01' AND '2010-12-31'
SELECT admemail2  FROM schools  WHERE county = 'San Bernardino'  AND city = 'San Bernardino'  AND school_type IN ('public Intermediate/Middle Schools', 'Unified Schools')  AND opendate BETWEEN '2009-01-01' AND '2010-12-31'
SELECT admemail2  FROM schools  WHERE county = 'San Bernardino'  AND city = 'San Bernardino'  AND school_type IN ('public Intermediate/Middle Schools', 'Unified Schools')  AND opendate BETWEEN '2009-01-01' AND '2010-12-31'
SELECT admemail2  FROM schools  WHERE county = 'San Bernardino'  AND city = 'San Bernardino'  AND school_type IN ('public Intermediate/Middle Schools', 'Unified Schools')  AND opendate BETWEEN '2009-01-01' AND '2010-12-31'
SELECT admemail2  FROM schools  WHERE county = 'San Bernardino'  AND city = 'San Bernardino'  AND school_type IN ('public Intermediate/Middle Schools', 'Unified Schools')  AND opendate BETWEEN '2009-01-01' AND '2010-12-31'
SELECT admemail2  FROM schools  WHERE county = 'San Bernardino'  AND city = 'San Bernardino'  AND school_type IN ('public Intermediate/Middle Schools', 'Unified Schools')  AND opendate BETWEEN '2009-01-01' AND '2010-12-31'","SELECT admemail2  FROM schools  WHERE county = 'San Bernardino'  AND city = 'San Bernardino'  AND school_type IN ('public Intermediate/Middle Schools', 'Unified Schools')  AND opendate BETWEEN '2009-01-01' AND '2010-12-31'"
108,719,"Among the superheroes with the super power of ""Super Strength"", how many of them have a height of over 200cm?",superhero,moderate,SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Super Strength' AND T1.height_cm > 200,7,"SELECT COUNT(*) FROM superhero WHERE alignment_id IN (SELECT id FROM alignment WHERE alignment = 'good') AND height_cm > 200
SELECT COUNT(*) FROM superhero WHERE alignment_id IN (SELECT id FROM alignment WHERE alignment = 'good') AND height_cm > 200
SELECT COUNT(*) FROM superhero WHERE alignment_id IN (SELECT id FROM alignment WHERE alignment = 'good') AND height_cm > 200
SELECT COUNT(*) FROM superhero WHERE alignment_id IN (SELECT id FROM alignment WHERE alignment = 'good') AND height_cm > 200
SELECT COUNT(*) FROM superhero WHERE alignment_id IN (SELECT id FROM alignment WHERE alignment = 'good') AND height_cm > 200
SELECT COUNT(*) FROM superhero WHERE alignment_id IN (SELECT id FROM alignment WHERE alignment = 'good') AND height_cm > 200
SELECT COUNT(*) FROM superhero WHERE alignment_id IN (SELECT id FROM alignment WHERE alignment = 'good') AND height_cm > 200",SELECT COUNT(*) FROM superhero WHERE alignment_id IN (SELECT id FROM alignment WHERE alignment = 'good') AND height_cm > 200
109,416,What percentage of cards without power are in French?,card_games,challenging,SELECT CAST(SUM(CASE WHEN T2.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.power IS NULL OR T1.power = '*',7,"SELECT (SELECT COUNT(*) FROM cards WHERE power IS NULL AND artist = 'French') * 100.0 / (SELECT COUNT(*) FROM cards WHERE power IS NULL) AS percentage_french_without_power FROM cards
SELECT (SELECT COUNT(*) FROM cards WHERE power IS NULL AND artist = 'French') * 100.0 / (SELECT COUNT(*) FROM cards WHERE power IS NULL) AS percentage_french_without_power FROM cards
SELECT (SELECT COUNT(*) FROM cards WHERE power IS NULL AND artist = 'French') * 100.0 / (SELECT COUNT(*) FROM cards WHERE power IS NULL) AS percentage_french_without_power FROM cards
SELECT (SELECT COUNT(*) FROM cards WHERE power IS NULL AND artist = 'French') * 100.0 / (SELECT COUNT(*) FROM cards WHERE power IS NULL) AS percentage_french_without_power FROM cards
SELECT (SELECT COUNT(*) FROM cards WHERE power IS NULL AND artist = 'French') * 100.0 / (SELECT COUNT(*) FROM cards WHERE power IS NULL) AS percentage_french_without_power FROM cards
SELECT (SELECT COUNT(*) FROM cards WHERE power IS NULL AND artist = 'French') * 100.0 / (SELECT COUNT(*) FROM cards WHERE power IS NULL) AS percentage_french_without_power FROM cards WHERE power IS NULL
SELECT (SELECT COUNT(*) FROM cards WHERE power IS NULL AND artist = 'French') * 100.0 / (SELECT COUNT(*) FROM cards WHERE power IS NULL) AS percentage_french_powerless_cards",SELECT (SELECT COUNT(*) FROM cards WHERE power IS NULL AND artist = 'French') * 100.0 / (SELECT COUNT(*) FROM cards WHERE power IS NULL) AS percentage_french_without_power FROM cards
110,944,How much faster in percentage is the champion than the driver who finished the race last in the 2008 Australian Grand Prix?,formula_1,challenging,"WITH time_in_seconds AS ( SELECT T1.positionOrder, CASE WHEN T1.positionOrder = 1 THEN (CAST(SUBSTR(T1.time, 1, 1) AS REAL) * 3600) + (CAST(SUBSTR(T1.time, 3, 2) AS REAL) * 60) + CAST(SUBSTR(T1.time, 6) AS REAL) ELSE CAST(SUBSTR(T1.time, 2) AS REAL) END AS time_seconds FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Australian Grand Prix' AND T1.time IS NOT NULL AND T2.year = 2008 ), champion_time AS ( SELECT time_seconds FROM time_in_seconds WHERE positionOrder = 1), last_driver_incremental AS ( SELECT time_seconds FROM time_in_seconds WHERE positionOrder = (SELECT MAX(positionOrder) FROM time_in_seconds) ) SELECT (CAST((SELECT time_seconds FROM last_driver_incremental) AS REAL) * 100) / (SELECT time_seconds + (SELECT time_seconds FROM last_driver_incremental) FROM champion_time)",7,"SELECT (SELECT points FROM driverstandings WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND driverid = (SELECT driverid FROM drivers WHERE surname = 'Champion')) / (SELECT points FROM driverstandings WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND driverid = (SELECT driverid FROM drivers WHERE surname = 'Driver' AND position = (SELECT MIN(position) FROM results WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix')))) * 100 - 100 AS percentage_difference FROM drivers WHERE surname = 'Champion'
SELECT (SELECT points FROM driverstandings WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND name = '2008 Australian Grand Prix') ORDER BY points DESC LIMIT 1) / (SELECT points FROM driverstandings WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND name = '2008 Australian Grand Prix') ORDER BY points ASC LIMIT 1) * 100 - 100 AS percentage_difference FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton'
SELECT (SELECT points FROM driverstandings WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND driverid = (SELECT driverid FROM drivers WHERE surname = 'Champion')) / (SELECT points FROM driverstandings WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND driverid = (SELECT driverid FROM drivers WHERE surname = 'Driver' AND position = (SELECT MIN(position) FROM results WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix')))) * 100 AS percentage_difference FROM drivers WHERE surname = 'Champion'
SELECT (SELECT points FROM driverstandings WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND driverid = (SELECT driverid FROM drivers WHERE surname = 'Champion')) / (SELECT points FROM driverstandings WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND driverid = (SELECT driverid FROM drivers WHERE surname = 'Driver' AND position = (SELECT MIN(position) FROM results WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix')))) * 100 - 100 AS percentage_difference FROM drivers WHERE surname = 'Champion'
SELECT (SELECT points FROM driverstandings WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND driverid = (SELECT driverid FROM drivers WHERE surname = 'Champion')) / (SELECT points FROM driverstandings WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND driverid = (SELECT driverid FROM drivers WHERE surname = 'Driver' AND position = (SELECT MIN(position) FROM results WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix')))) * 100 - 100 AS percentage_difference FROM drivers WHERE surname = 'Champion'
SELECT (SELECT points FROM driverstandings WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND position = 1) / (SELECT points FROM driverstandings WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND position = (SELECT COUNT(*) FROM results WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix'))) * 100 AS percentage_difference FROM results LIMIT 1
SELECT (SELECT points FROM driverstandings WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND driverid = (SELECT driverid FROM drivers WHERE surname = 'Champion')) / (SELECT points FROM driverstandings WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND driverid = (SELECT driverid FROM drivers WHERE surname = 'Driver' AND position = (SELECT MIN(position) FROM results WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix')))) * 100 - 100 AS percentage_difference FROM drivers WHERE surname = 'Champion'",SELECT (SELECT points FROM driverstandings WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND driverid = (SELECT driverid FROM drivers WHERE surname = 'Champion')) / (SELECT points FROM driverstandings WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND driverid = (SELECT driverid FROM drivers WHERE surname = 'Driver' AND position = (SELECT MIN(position) FROM results WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix')))) * 100 - 100 AS percentage_difference FROM drivers WHERE surname = 'Champion'
111,791,Calculate the average height for each superhero.,superhero,simple,SELECT CAST(SUM(height_cm) AS REAL) / COUNT(id) FROM superhero,7,"SELECT alignment_id, AVG(height_cm) AS average_height FROM superhero GROUP BY alignment_id
SELECT alignment_id, AVG(height_cm) AS average_height FROM superhero GROUP BY alignment_id
SELECT alignment_id, AVG(height_cm) AS average_height FROM superhero GROUP BY alignment_id
SELECT alignment_id, AVG(height_cm) AS average_height FROM superhero GROUP BY alignment_id
SELECT alignment_id, AVG(height_cm) AS average_height FROM superhero GROUP BY alignment_id
SELECT alignment_id, AVG(height_cm) AS average_height FROM superhero GROUP BY alignment_id
SELECT alignment_id, AVG(height_cm) AS average_height FROM superhero GROUP BY alignment_id","SELECT alignment_id, AVG(height_cm) AS average_height FROM superhero GROUP BY alignment_id"
112,827,What is the average height of a non-human superhero in Dark Horse Comics?,superhero,moderate,SELECT AVG(T1.height_cm) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN race AS T3 ON T1.race_id = T3.id WHERE T2.publisher_name = 'Dark Horse Comics' AND T3.race != 'Human',7,"SELECT AVG(height_cm) FROM superhero WHERE publisher_name = 'Dark Horse Comics' AND race != 'Human'
SELECT AVG(height_cm) FROM superhero WHERE publisher_name = 'Dark Horse Comics' AND race != 'Human'
SELECT AVG(height_cm) FROM superhero WHERE publisher_name = 'Dark Horse Comics' AND race != 'Human'
SELECT AVG(height_cm) FROM superhero WHERE publisher_name = 'Dark Horse Comics' AND race != 'Human'
SELECT AVG(height_cm) FROM superhero WHERE publisher_name = 'Dark Horse Comics' AND race != 'Human'
SELECT AVG(height_cm) FROM superhero WHERE publisher_name = 'Dark Horse Comics' AND race != 'Human'
SELECT AVG(height_cm) FROM superhero WHERE publisher_name = 'Dark Horse Comics' AND race != 'Human'",SELECT AVG(height_cm) FROM superhero WHERE publisher_name = 'Dark Horse Comics' AND race != 'Human'
113,769,Which superhero has the most durability published by Dark Horse Comics?,superhero,challenging,SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T3.id = T2.attribute_id INNER JOIN publisher AS T4 ON T4.id = T1.publisher_id WHERE T4.publisher_name = 'Dark Horse Comics' AND T3.attribute_name = 'Durability' ORDER BY T2.attribute_value DESC LIMIT 1,7,"SELECT superhero_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher_name = 'Dark Horse Comics' ORDER BY superhero.weight_kg DESC LIMIT 1
SELECT superhero_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher_name = 'Dark Horse Comics' ORDER BY superhero.weight_kg DESC LIMIT 1
SELECT superhero_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher_name = 'Dark Horse Comics' ORDER BY superhero.weight_kg DESC LIMIT 1
SELECT superhero_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher_name = 'Dark Horse Comics' ORDER BY superhero.weight_kg DESC LIMIT 1
SELECT superhero_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher_name = 'Dark Horse Comics' ORDER BY superhero.weight_kg DESC LIMIT 1
SELECT superhero_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher_name = 'Dark Horse Comics' ORDER BY superhero.weight_kg DESC LIMIT 1
SELECT superhero_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher_name = 'Dark Horse Comics' ORDER BY superhero.weight_kg DESC LIMIT 1",SELECT superhero_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher_name = 'Dark Horse Comics' ORDER BY superhero.weight_kg DESC LIMIT 1
114,615,"Among the users who obtained the ""Organizer"" badges, calculate the percentage of users who are teenagers.",codebase_community,moderate,"SELECT CAST(SUM(IIF(T2.Age BETWEEN 13 AND 18, 1, 0)) AS REAL) * 100 / COUNT(T1.Id) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.`Name` = 'Organizer'",7,"SELECT COUNT(*) * 1.0 / (SELECT COUNT(*) FROM users WHERE age >= 13 AND age <= 19) * 100 AS percentage_teenagers FROM users JOIN (     SELECT DISTINCT userid     FROM badges     WHERE name = 'Organizer' ) AS organizer_users ON users.id = organizer_users.userid WHERE users.age >= 13 AND users.age <= 19
SELECT (SELECT COUNT(*) FROM users WHERE age BETWEEN 13 AND 19 AND userid IN (SELECT userid FROM badges WHERE name = 'Organizer')) * 100.0 / COUNT(*) AS percentage_teenagers FROM users
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM users WHERE age >= 13 AND age <= 19) AS percentage_teenagers FROM users WHERE age >= 13 AND age <= 19 AND userid IN (     SELECT userid     FROM badges     WHERE name = 'Organizer' )
SELECT COUNT(*) * 1.0 / (SELECT COUNT(*) FROM users WHERE age >= 13 AND age <= 19) * 100 AS percentage_teenagers FROM users JOIN badges ON users.id = badges.userid WHERE badges.name = 'Organizer'
SELECT COUNT(*) * 1.0 / (SELECT COUNT(*) FROM users WHERE age >= 13 AND age <= 19) * 100 AS percentage_teenagers FROM users JOIN badges ON users.id = badges.userid WHERE badges.name = 'Organizer'
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM users WHERE age >= 13 AND age <= 19) AS percentage_teenagers FROM users WHERE age >= 13 AND age <= 19 AND userid IN (     SELECT userid     FROM badges     WHERE name = 'Organizer' )
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM users WHERE age >= 13 AND age <= 19) AS percentage_teenagers FROM users WHERE age >= 13 AND age <= 19 AND userid IN (     SELECT userid     FROM badges     WHERE name = 'Organizer' )",SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM users WHERE age >= 13 AND age <= 19) AS percentage_teenagers FROM users WHERE age >= 13 AND age <= 19 AND userid IN (     SELECT userid     FROM badges     WHERE name = 'Organizer' )
115,575,What is the badge name that user 'SilentGhost' obtained?,codebase_community,simple,SELECT T2.Name FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'SilentGhost',7,"SELECT name FROM badges WHERE userid IN (SELECT id FROM users WHERE displayname = 'SilentGhost')
SELECT name FROM badges WHERE userid IN (SELECT id FROM users WHERE displayname = 'SilentGhost')
SELECT name FROM badges WHERE userid IN (SELECT id FROM users WHERE displayname = 'SilentGhost')
SELECT name FROM badges WHERE userid IN (SELECT id FROM users WHERE displayname = 'SilentGhost')
SELECT name FROM badges WHERE userid IN (SELECT id FROM users WHERE displayname = 'SilentGhost')
SELECT name FROM badges WHERE userid IN (SELECT id FROM users WHERE displayname = 'SilentGhost')
SELECT name FROM badges WHERE userid IN (SELECT id FROM users WHERE displayname = 'SilentGhost')",SELECT name FROM badges WHERE userid IN (SELECT id FROM users WHERE displayname = 'SilentGhost')
116,523,What is the annual average number of sets that were released between 1/1/2012 to 12/31/2015? Indicate the common langugage of the card.,card_games,challenging,"SELECT (CAST(SUM(T1.id) AS REAL) / COUNT(T1.id)) / 4, T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.id WHERE T1.releaseDate BETWEEN '2012-01-01' AND '2015-12-31' GROUP BY T1.releaseDate ORDER BY COUNT(T2.language) DESC LIMIT 1",7,"SELECT AVG(num_sets) AS average_sets FROM (     SELECT COUNT(*) AS num_sets     FROM sets     WHERE releasedate BETWEEN '2012-01-01' AND '2015-12-31' ) 
SELECT AVG(num_sets) AS average_sets FROM (     SELECT COUNT(*) AS num_sets     FROM cards     WHERE originalreleasedate BETWEEN '2012-01-01' AND '2015-12-31'     GROUP BY originalreleasedate ) 
SELECT AVG(num_sets) AS average_sets FROM (     SELECT COUNT(*) AS num_sets     FROM cards     WHERE originalreleasedate BETWEEN '2012-01-01' AND '2015-12-31'     GROUP BY originalreleasedate ) 
SELECT AVG(num_sets) AS average_sets FROM (     SELECT COUNT(*) AS num_sets     FROM cards     WHERE originalreleasedate BETWEEN '2012-01-01' AND '2015-12-31'     GROUP BY originalreleasedate ) 
SELECT AVG(num_sets) AS average_sets FROM (     SELECT COUNT(*) AS num_sets     FROM sets     WHERE releasedate BETWEEN '2012-01-01' AND '2015-12-31' ) 
SELECT AVG(num_sets) AS average_sets FROM (     SELECT COUNT(*) AS num_sets     FROM cards     WHERE originalreleasedate BETWEEN '2012-01-01' AND '2015-12-31'     GROUP BY originalreleasedate ) 
SELECT AVG(num_sets) AS average_sets FROM (     SELECT COUNT(*) AS num_sets     FROM cards     WHERE originalreleasedate BETWEEN '2012-01-01' AND '2015-12-31'     GROUP BY originalreleasedate ) ",SELECT AVG(num_sets) AS average_sets FROM (     SELECT COUNT(*) AS num_sets     FROM cards     WHERE originalreleasedate BETWEEN '2012-01-01' AND '2015-12-31'     GROUP BY originalreleasedate ) 
117,319,How many elements are contained in bond_id TR001_3_4?,toxicology,challenging,SELECT COUNT(DISTINCT T1.element) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_3_4',7,"SELECT COUNT(*) FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'TR001_3_4')
SELECT COUNT(*) FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'TR001_3_4')
SELECT COUNT(*) FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'TR001_3_4')
SELECT COUNT(*) FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'TR001_3_4')
SELECT COUNT(*) FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'TR001_3_4')
SELECT COUNT(*) FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'TR001_3_4')
SELECT COUNT(*) FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'TR001_3_4')",SELECT COUNT(*) FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'TR001_3_4')
118,1094,How much higher in percentage is Ariel Borysiuk's overall rating than that of Paulin Puel?,european_football_2,challenging,SELECT (SUM(CASE WHEN t1.player_name = 'Ariel Borysiuk' THEN t2.overall_rating ELSE 0 END) * 1.0 - SUM(CASE WHEN t1.player_name = 'Paulin Puel' THEN t2.overall_rating ELSE 0 END)) * 100 / SUM(CASE WHEN t1.player_name = 'Paulin Puel' THEN t2.overall_rating ELSE 0 END) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id,7,"SELECT (Ariel_Borysiuk.overall_rating - Paulin_Puel.overall_rating) / Paulin_Puel.overall_rating * 100 AS percentage_difference FROM player_attributes AS Ariel_Borysiuk JOIN player_attributes AS Paulin_Puel ON Ariel_Borysiuk.player_fifa_api_id = Paulin_Puel.player_fifa_api_id WHERE Ariel_Borysiuk.player_name = 'Ariel Borysiuk' AND Paulin_Puel.player_name = 'Paulin Puel'
SELECT (Ariel_Borysiuk.overall_rating - Paulin_Puel.overall_rating) / Paulin_Puel.overall_rating * 100 AS percentage_difference FROM player_attributes AS Ariel_Borysiuk JOIN player_attributes AS Paulin_Puel ON Ariel_Borysiuk.player_fifa_api_id = Paulin_Puel.player_fifa_api_id WHERE Ariel_Borysiuk.player_name = 'Ariel Borysiuk' AND Paulin_Puel.player_name = 'Paulin Puel'
SELECT (Ariel_Borysiuk.overall_rating - Paulin_Puel.overall_rating) / Paulin_Puel.overall_rating * 100 AS percentage_difference FROM player_attributes AS Ariel_Borysiuk JOIN player_attributes AS Paulin_Puel ON Ariel_Borysiuk.player_fifa_api_id = Paulin_Puel.player_fifa_api_id WHERE Ariel_Borysiuk.player_name = 'Ariel Borysiuk' AND Paulin_Puel.player_name = 'Paulin Puel'
SELECT (Ariel_Borysiuk.overall_rating - Paulin_Puel.overall_rating) / Paulin_Puel.overall_rating * 100 AS percentage_difference FROM player_attributes AS Ariel_Borysiuk JOIN player_attributes AS Paulin_Puel ON Ariel_Borysiuk.player_fifa_api_id = Paulin_Puel.player_fifa_api_id WHERE Ariel_Borysiuk.player_name = 'Ariel Borysiuk' AND Paulin_Puel.player_name = 'Paulin Puel'
SELECT ((Ariel_Borysiuk.overall_rating - Paulin_Puel.overall_rating) / Paulin_Puel.overall_rating) * 100 AS percentage_difference FROM player_attributes AS Ariel_Borysiuk JOIN player_attributes AS Paulin_Puel ON Ariel_Borysiuk.player_fifa_api_id = Paulin_Puel.player_fifa_api_id WHERE Ariel_Borysiuk.player_name = 'Ariel Borysiuk' AND Paulin_Puel.player_name = 'Paulin Puel'
SELECT (Ariel_Borysiuk.overall_rating - Paulin_Puel.overall_rating) / Paulin_Puel.overall_rating * 100 AS percentage_difference FROM player_attributes AS Ariel_Borysiuk JOIN player_attributes AS Paulin_Puel ON Ariel_Borysiuk.player_fifa_api_id = Paulin_Puel.player_fifa_api_id WHERE Ariel_Borysiuk.player_name = 'Ariel Borysiuk' AND Paulin_Puel.player_name = 'Paulin Puel'
SELECT (Ariel_Borysiuk.overall_rating - Paulin_Puel.overall_rating) / Paulin_Puel.overall_rating * 100 AS percentage_difference FROM player_attributes AS Ariel_Borysiuk JOIN player_attributes AS Paulin_Puel ON Ariel_Borysiuk.player_fifa_api_id = Paulin_Puel.player_fifa_api_id WHERE Ariel_Borysiuk.player_name = 'Ariel Borysiuk' AND Paulin_Puel.player_name = 'Paulin Puel'",SELECT (Ariel_Borysiuk.overall_rating - Paulin_Puel.overall_rating) / Paulin_Puel.overall_rating * 100 AS percentage_difference FROM player_attributes AS Ariel_Borysiuk JOIN player_attributes AS Paulin_Puel ON Ariel_Borysiuk.player_fifa_api_id = Paulin_Puel.player_fifa_api_id WHERE Ariel_Borysiuk.player_name = 'Ariel Borysiuk' AND Paulin_Puel.player_name = 'Paulin Puel'
119,212,Which element is the least numerous in non-carcinogenic molecules?,toxicology,challenging,"SELECT T.element FROM (SELECT T1.element, COUNT(DISTINCT T1.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '-' GROUP BY T1.element ORDER BY COUNT(DISTINCT T1.molecule_id) ASC LIMIT 1) t",7,"SELECT element FROM atom GROUP BY element ORDER BY COUNT(*) ASC LIMIT 1
SELECT element FROM atom GROUP BY element ORDER BY COUNT(*) ASC LIMIT 1
SELECT element FROM atom GROUP BY element ORDER BY COUNT(*) ASC LIMIT 1
SELECT element FROM atom GROUP BY element ORDER BY COUNT(*) ASC LIMIT 1
SELECT element FROM atom GROUP BY element ORDER BY COUNT(*) ASC LIMIT 1
SELECT element FROM atom GROUP BY element ORDER BY COUNT(*) ASC LIMIT 1
SELECT element FROM atom GROUP BY element ORDER BY COUNT(*) ASC LIMIT 1",SELECT element FROM atom GROUP BY element ORDER BY COUNT(*) ASC LIMIT 1
120,513,"Among the sets whose expansion type is Commander, which set has the highest total number of cards including promotional and related supplemental products but excluding Alchemy modifications? Indicate the id of the set.",card_games,challenging,SELECT id FROM sets WHERE type = 'commander' ORDER BY totalSetSize DESC LIMIT 1,7,"SELECT id FROM sets WHERE type = 'commander' ORDER BY basesetsize + isfoilonly + isforeignonly + isnonfoilonly + isonlineonly + ispartialpreview + keyrunecode + mcmid + mcmidextras + mcmname + mtgocode + parentcode + releasedate + tcgplayergroupid + totalsetsize DESC LIMIT 1
SELECT id FROM sets WHERE type = 'commander' ORDER BY basesetsize + isfoilonly + isforeignonly + isnonfoilonly + isonlineonly + ispartialpreview + keyrunecode + mcmid + mcmidextras + mcmname + mtgocode + parentcode + releasedate + tcgplayergroupid + totalsetsize DESC LIMIT 1
SELECT id FROM sets WHERE type = 'commander' ORDER BY basesetsize DESC LIMIT 1
SELECT id FROM sets WHERE type = 'commander' ORDER BY basesetsize DESC LIMIT 1
SELECT id FROM sets WHERE type = 'commander' ORDER BY basesetsize + isfoilonly + isforeignonly + isnonfoilonly + isonlineonly + ispartialpreview + keyrunecode + mcmid + mcmidextras + mcmname + mtgocode + parentcode + releasedate + tcgplayergroupid + totalsetsize DESC LIMIT 1
SELECT id FROM sets WHERE type = 'commander' ORDER BY basesetsize + isfoilonly + isforeignonly + isnonfoilonly + isonlineonly + ispartialpreview + keyrunecode + mcmid + mcmidextras + mcmname + mtgocode + parentcode + releasedate + tcgplayergroupid + totalsetsize DESC LIMIT 1
SELECT id FROM sets WHERE type = 'commander' ORDER BY basesetsize DESC LIMIT 1",SELECT id FROM sets WHERE type = 'commander' ORDER BY basesetsize + isfoilonly + isforeignonly + isnonfoilonly + isonlineonly + ispartialpreview + keyrunecode + mcmid + mcmidextras + mcmname + mtgocode + parentcode + releasedate + tcgplayergroupid + totalsetsize DESC LIMIT 1
121,598,What is the percentage difference of student badges given during 2010 and 2011?,codebase_community,challenging,"SELECT CAST(SUM(IIF(STRFTIME('%Y', Date) = '2010', 1, 0)) AS REAL) * 100 / COUNT(Id) - CAST(SUM(IIF(STRFTIME('%Y', Date) = '2011', 1, 0)) AS REAL) * 100 / COUNT(Id) FROM badges WHERE Name = 'Student'",7,"SELECT ((SELECT COUNT(*) FROM posts WHERE strftime('%Y', creationdate) = '2011') - (SELECT COUNT(*) FROM posts WHERE strftime('%Y', creationdate) = '2010')) * 100.0 / (SELECT COUNT(*) FROM posts WHERE strftime('%Y', creationdate) = '2010') AS percentage_difference
SELECT ((SELECT COUNT(*) FROM posts WHERE strftime('%Y', creationdate) = '2011') - (SELECT COUNT(*) FROM posts WHERE strftime('%Y', creationdate) = '2010')) * 100.0 / (SELECT COUNT(*) FROM posts WHERE strftime('%Y', creationdate) = '2010') AS percentage_difference
SELECT ((SELECT COUNT(*) FROM posts WHERE strftime('%Y', creationdate) = '2011' AND posttypeid = 1) - (SELECT COUNT(*) FROM posts WHERE strftime('%Y', creationdate) = '2010' AND posttypeid = 1)) * 100.0 / (SELECT COUNT(*) FROM posts WHERE strftime('%Y', creationdate) = '2010' AND posttypeid = 1) AS percentage_difference
SELECT ((SELECT COUNT(*) FROM posts WHERE strftime('%Y', creationdate) = '2011' AND posttypeid = 1) - (SELECT COUNT(*) FROM posts WHERE strftime('%Y', creationdate) = '2010' AND posttypeid = 1)) * 100.0 / (SELECT COUNT(*) FROM posts WHERE strftime('%Y', creationdate) = '2010' AND posttypeid = 1) AS percentage_difference
SELECT ((SELECT COUNT(*) FROM posts WHERE strftime('%Y', creationdate) = '2011' AND posttypeid = 1) - (SELECT COUNT(*) FROM posts WHERE strftime('%Y', creationdate) = '2010' AND posttypeid = 1)) * 100.0 / (SELECT COUNT(*) FROM posts WHERE strftime('%Y', creationdate) = '2010' AND posttypeid = 1) AS percentage_difference
SELECT ((SELECT COUNT(*) FROM posts WHERE strftime('%Y', creationdate) = '2011' AND posttypeid = 1) - (SELECT COUNT(*) FROM posts WHERE strftime('%Y', creationdate) = '2010' AND posttypeid = 1)) * 100.0 / (SELECT COUNT(*) FROM posts WHERE strftime('%Y', creationdate) = '2010' AND posttypeid = 1) AS percentage_difference
SELECT ((SELECT COUNT(*) FROM posts WHERE strftime('%Y', creationdate) = '2011' AND posttypeid = 1) - (SELECT COUNT(*) FROM posts WHERE strftime('%Y', creationdate) = '2010' AND posttypeid = 1)) * 100.0 / (SELECT COUNT(*) FROM posts WHERE strftime('%Y', creationdate) = '2010' AND posttypeid = 1) AS percentage_difference","SELECT ((SELECT COUNT(*) FROM posts WHERE strftime('%Y', creationdate) = '2011' AND posttypeid = 1) - (SELECT COUNT(*) FROM posts WHERE strftime('%Y', creationdate) = '2010' AND posttypeid = 1)) * 100.0 / (SELECT COUNT(*) FROM posts WHERE strftime('%Y', creationdate) = '2010' AND posttypeid = 1) AS percentage_difference"
122,330,Calculate the percentage of carcinogenic molecules with triple bonded Hidrogen atoms.,toxicology,challenging,SELECT CAST(SUM(CASE WHEN T1.label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T1.molecule_id = T3.molecule_id WHERE T3.bond_type = '#' AND T2.element = 'h',7,"SELECT (SELECT COUNT(*) FROM connected c1 JOIN bond b1 ON c1.bond_id = b1.bond_id AND b1.bond_type = 'triple' JOIN atom a1 ON c1.atom_id = a1.atom_id AND a1.element = 'H' WHERE EXISTS (SELECT 1 FROM connected c2 JOIN bond b2 ON c2.bond_id = b2.bond_id AND b2.bond_type = 'triple' JOIN atom a2 ON c2.atom_id = a2.atom_id AND a2.element = 'C' WHERE c2.atom_id2 = c1.atom_id2)) * 1.0 / (SELECT COUNT(*) FROM atom a WHERE a.element = 'H') * 100 AS percentage_of_carcinogenic_molecules FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = 'carcinogenic'
SELECT (SELECT COUNT(*) FROM connected c1 JOIN bond b1 ON c1.bond_id = b1.bond_id WHERE b1.bond_type = 'triple' AND b1.molecule_id IN (SELECT molecule_id FROM atom WHERE element = 'H')) * 1.0 / (SELECT COUNT(*) FROM atom WHERE element = 'H') * 100 AS percentage_of_carcinogenic_molecules
SELECT (SELECT COUNT(*) FROM connected c1 JOIN bond b1 ON c1.bond_id = b1.bond_id AND b1.bond_type = 'triple' JOIN atom a1 ON c1.atom_id = a1.atom_id AND a1.element = 'H' WHERE EXISTS (SELECT 1 FROM connected c2 JOIN bond b2 ON c2.bond_id = b2.bond_id AND b2.bond_type = 'triple' JOIN atom a2 ON c2.atom_id = a2.atom_id AND a2.element = 'C' WHERE c2.atom_id2 = c1.atom_id2)) * 1.0 / (SELECT COUNT(*) FROM atom a WHERE a.element = 'H') * 100 AS percentage_of_carcinogenic_molecules FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = 'carcinogenic'
SELECT COUNT(*) * 1.0 / (SELECT COUNT(*) FROM connected WHERE atom_id IN (SELECT atom_id FROM atom WHERE element = 'H') AND atom_id2 IN (SELECT atom_id FROM atom WHERE element = 'H')) * 100 AS percentage_of_carcinogenic_molecules FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE bond_type = 'triple') AND (atom_id IN (SELECT atom_id FROM atom WHERE element = 'H') OR atom_id2 IN (SELECT atom_id FROM atom WHERE element = 'H'))
SELECT (SELECT COUNT(*) FROM connected c1 JOIN bond b1 ON c1.bond_id = b1.bond_id AND b1.bond_type = 'triple' JOIN atom a1 ON c1.atom_id = a1.atom_id AND a1.element = 'H' WHERE EXISTS (SELECT 1 FROM connected c2 JOIN bond b2 ON c2.bond_id = b2.bond_id AND b2.bond_type = 'triple' JOIN atom a2 ON c2.atom_id = a2.atom_id AND a2.element = 'C' WHERE c2.atom_id2 = c1.atom_id2)) * 1.0 / (SELECT COUNT(*) FROM atom a WHERE a.element = 'H') * 100 AS percentage_of_carcinogenic_molecules FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = 'carcinogenic'
SELECT (SELECT COUNT(*) FROM connected c1 JOIN bond b1 ON c1.bond_id = b1.bond_id AND b1.bond_type = 'triple' JOIN atom a1 ON c1.atom_id = a1.atom_id AND a1.element = 'H' WHERE EXISTS (SELECT 1 FROM connected c2 JOIN bond b2 ON c2.bond_id = b2.bond_id AND b2.bond_type = 'triple' JOIN atom a2 ON c2.atom_id = a2.atom_id AND a2.element = 'C' WHERE c2.atom_id2 = c1.atom_id2)) * 1.0 / (SELECT COUNT(*) FROM atom a WHERE a.element = 'H') * 100 AS percentage_of_carcinogenic_molecules FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = 'carcinogenic'
SELECT (SELECT COUNT(*) FROM connected c1 JOIN bond b1 ON c1.bond_id = b1.bond_id AND b1.bond_type = 'triple' JOIN atom a1 ON c1.atom_id = a1.atom_id AND a1.element = 'H' WHERE EXISTS (SELECT 1 FROM connected c2 JOIN bond b2 ON c2.bond_id = b2.bond_id AND b2.bond_type = 'triple' JOIN atom a2 ON c2.atom_id = a2.atom_id AND a2.element = 'C' WHERE c2.atom_id2 = c1.atom_id2)) * 1.0 / (SELECT COUNT(*) FROM atom a WHERE a.element = 'H') * 100 AS percentage_of_carcinogenic_molecules FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = 'carcinogenic'",SELECT (SELECT COUNT(*) FROM connected c1 JOIN bond b1 ON c1.bond_id = b1.bond_id AND b1.bond_type = 'triple' JOIN atom a1 ON c1.atom_id = a1.atom_id AND a1.element = 'H' WHERE EXISTS (SELECT 1 FROM connected c2 JOIN bond b2 ON c2.bond_id = b2.bond_id AND b2.bond_type = 'triple' JOIN atom a2 ON c2.atom_id = a2.atom_id AND a2.element = 'C' WHERE c2.atom_id2 = c1.atom_id2)) * 1.0 / (SELECT COUNT(*) FROM atom a WHERE a.element = 'H') * 100 AS percentage_of_carcinogenic_molecules FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = 'carcinogenic'
123,716,"Among the comments with scores between 5 to 10, what is the percentage of the users with 0 up votes?",codebase_community,moderate,"SELECT CAST(SUM(IIF(T1.UpVotes = 0, 1, 0)) AS REAL) * 100/ COUNT(T1.Id) AS per FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T2.Score BETWEEN 5 AND 10",7,"SELECT COUNT(*) * 1.0 / (SELECT COUNT(*) FROM comments WHERE score BETWEEN 5 AND 10) * 100 AS percentage_users_with_0_up_votes FROM users WHERE upvotes = 0 AND id IN (SELECT userid FROM comments WHERE score BETWEEN 5 AND 10)
SELECT COUNT(*) * 1.0 / (SELECT COUNT(*) FROM comments WHERE score BETWEEN 5 AND 10) * 100 AS percentage_users_with_0_up_votes FROM comments c JOIN users u ON c.userid = u.id WHERE c.score BETWEEN 5 AND 10 AND u.upvotes = 0
SELECT COUNT(*) * 1.0 / (SELECT COUNT(*) FROM comments WHERE score BETWEEN 5 AND 10) * 100 AS percentage_users_with_0_up_votes FROM users WHERE upvotes = 0 AND id IN (SELECT userid FROM comments WHERE score BETWEEN 5 AND 10)
SELECT COUNT(*) * 1.0 / (SELECT COUNT(*) FROM comments WHERE score BETWEEN 5 AND 10) * 100 AS percentage_users_with_0_up_votes FROM users WHERE upvotes = 0 AND id IN (SELECT userid FROM comments WHERE score BETWEEN 5 AND 10)
SELECT COUNT(*) * 1.0 / (SELECT COUNT(*) FROM comments WHERE score BETWEEN 5 AND 10) * 100 AS percentage_users_with_0_up_votes FROM users WHERE upvotes = 0 AND id IN (SELECT userid FROM comments WHERE score BETWEEN 5 AND 10)
SELECT COUNT(*) * 1.0 / (SELECT COUNT(*) FROM comments WHERE score BETWEEN 5 AND 10) * 100 AS percentage_users_with_0_up_votes FROM users WHERE upvotes = 0 AND id IN (SELECT userid FROM comments WHERE score BETWEEN 5 AND 10)
SELECT COUNT(*) * 1.0 / (SELECT COUNT(*) FROM comments WHERE score BETWEEN 5 AND 10) * 100 AS percentage_users_with_0_up_votes FROM users WHERE upvotes = 0 AND id IN (SELECT userid FROM comments WHERE score BETWEEN 5 AND 10)",SELECT COUNT(*) * 1.0 / (SELECT COUNT(*) FROM comments WHERE score BETWEEN 5 AND 10) * 100 AS percentage_users_with_0_up_votes FROM users WHERE upvotes = 0 AND id IN (SELECT userid FROM comments WHERE score BETWEEN 5 AND 10)
124,247,List all the elements of atoms that can not bond with any other atoms.,toxicology,challenging,SELECT DISTINCT T.element FROM atom AS T WHERE T.element NOT IN ( SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id ),7,"SELECT a.atom_id, a.molecule_id, a.element FROM atom a LEFT JOIN connected c ON a.atom_id = c.atom_id LEFT JOIN bond b ON c.atom_id2 = b.atom_id AND b.molecule_id = a.molecule_id WHERE b.bond_id IS NULL
SELECT a.atom_id, a.molecule_id, a.element FROM atom a LEFT JOIN connected c ON a.atom_id = c.atom_id LEFT JOIN bond b ON c.atom_id2 = b.atom_id AND b.molecule_id = a.molecule_id WHERE b.bond_id IS NULL
SELECT a.atom_id, a.molecule_id, a.element FROM atom a WHERE NOT EXISTS (     SELECT 1     FROM bond b     JOIN connected c ON b.bond_id = c.bond_id     WHERE c.atom_id = a.atom_id ) 
SELECT a.atom_id, a.molecule_id, a.element FROM atom a LEFT JOIN connected c ON a.atom_id = c.atom_id LEFT JOIN bond b ON c.atom_id2 = b.atom_id AND b.molecule_id = a.molecule_id WHERE b.bond_id IS NULL
SELECT a.atom_id, a.molecule_id, a.element FROM atom a LEFT JOIN connected c ON a.atom_id = c.atom_id LEFT JOIN bond b ON c.atom_id2 = b.atom_id AND b.molecule_id = a.molecule_id WHERE b.bond_id IS NULL
SELECT a.atom_id, a.molecule_id, a.element FROM atom a LEFT JOIN connected c ON a.atom_id = c.atom_id LEFT JOIN bond b ON c.atom_id2 = b.atom_id AND b.molecule_id = a.molecule_id WHERE b.bond_id IS NULL
SELECT a.atom_id, a.molecule_id, a.element FROM atom a LEFT JOIN connected c ON a.atom_id = c.atom_id LEFT JOIN bond b ON c.atom_id2 = b.atom_id AND b.molecule_id = a.molecule_id WHERE b.bond_id IS NULL","SELECT a.atom_id, a.molecule_id, a.element FROM atom a LEFT JOIN connected c ON a.atom_id = c.atom_id LEFT JOIN bond b ON c.atom_id2 = b.atom_id AND b.molecule_id = a.molecule_id WHERE b.bond_id IS NULL"
125,116,"For the client whose loan was approved first in 1993/7/5, what is the increase rate of his/her account balance from 1993/3/22 to 1998/12/27?",financial,challenging,"SELECT CAST((SUM(IIF(T3.date = '1998-12-27', T3.balance, 0)) - SUM(IIF(T3.date = '1993-03-22', T3.balance, 0))) AS REAL) * 100 / SUM(IIF(T3.date = '1993-03-22', T3.balance, 0)) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN trans AS T3 ON T3.account_id = T2.account_id WHERE T1.date = '1993-07-05'",7,"SELECT (SELECT amount FROM loan WHERE loan.account_id = account.account_id AND strftime('%Y', loan.date) = '1993' AND strftime('%m', loan.date) = '7' AND strftime('%d', loan.date) = '5') - (SELECT amount FROM loan WHERE loan.account_id = account.account_id AND strftime('%Y-%m-%d', loan.date) = '1993-3-22') AS increase_rate FROM account
SELECT (SELECT amount FROM loan WHERE loan.account_id = account.account_id AND strftime('%Y', loan.date) = '1993' AND strftime('%m', loan.date) = '7' AND strftime('%d', loan.date) = '5') AS first_loan_amount,        (SELECT amount FROM loan WHERE loan.account_id = account.account_id AND strftime('%Y-%m-%d', loan.date) = '1993-3-22') AS initial_amount,        (SELECT amount FROM loan WHERE loan.account_id = account.account_id AND strftime('%Y-%m-%d', loan.date) = '1998-12-27') AS final_amount FROM account WHERE account.account_id IN (SELECT loan.account_id FROM loan WHERE strftime('%Y', loan.date) = '1993' AND strftime('%m', loan.date) = '7' AND strftime('%d', loan.date) = '5') AND account.account_id IN (SELECT loan.account_id FROM loan WHERE strftime('%Y-%m-%d', loan.date) = '1993-3-22') AND account.account_id IN (SELECT loan.account_id FROM loan WHERE strftime
SELECT (SELECT amount FROM loan WHERE loan.account_id = account.account_id AND strftime('%Y', loan.date) = '1993' AND strftime('%m', loan.date) = '7' AND strftime('%d', loan.date) = '5') AS first_loan_amount,        (SELECT amount FROM loan WHERE loan.account_id = account.account_id AND strftime('%Y-%m-%d', loan.date) = '1993-3-22') AS initial_balance,        (SELECT amount FROM loan WHERE loan.account_id = account.account_id AND strftime('%Y-%m-%d', loan.date) = '1998-12-27') AS final_balance FROM account WHERE account.account_id IN (     SELECT loan.account_id     FROM loan     WHERE strftime('%Y', loan.date) = '1993'     ORDER BY loan.date ASC     LIMIT 1 ) AND strftime('%Y-%m-%d', (SELECT loan.date FROM loan WHERE loan.account_id = account.account_id ORDER BY loan.date ASC LIMIT 1)) = '1993-7-5'
SELECT (SELECT amount FROM loan WHERE loan.account_id = account.account_id AND strftime('%Y', loan.date) = '1993' AND strftime('%m', loan.date) = '7' AND strftime('%d', loan.date) = '5') AS first_approved_loan_amount,        (SELECT amount FROM loan WHERE loan.account_id = account.account_id AND strftime('%Y-%m-%d', loan.date) = '1993-3-22') AS initial_balance,        (SELECT amount FROM loan WHERE loan.account_id = account.account_id AND strftime('%Y-%m-%d', loan.date) = '1998-12-27') AS final_balance FROM account WHERE account.account_id IN (     SELECT loan.account_id     FROM loan     WHERE strftime('%Y', loan.date) = '1993' AND strftime('%m', loan.date) = '7' AND strftime('%d', loan.date) = '5'     LIMIT 1 )
SELECT (SELECT amount FROM loan WHERE loan.account_id = account.account_id AND strftime('%Y', loan.date) = '1993' AND strftime('%m', loan.date) = '7' AND strftime('%d', loan.date) = '5') - (SELECT amount FROM loan WHERE loan.account_id = account.account_id AND strftime('%Y-%m-%d', loan.date) = '1993-3-22') AS increase_rate FROM account
SELECT (SELECT amount FROM loan WHERE loan.account_id = account.account_id AND strftime('%Y', loan.date) = '1993' AND strftime('%m', loan.date) = '7' AND strftime('%d', loan.date) = '5') - (SELECT amount FROM loan WHERE loan.account_id = account.account_id AND strftime('%Y-%m-%d', loan.date) = '1993-3-22') AS increase_rate FROM account
SELECT (SELECT amount FROM loan WHERE loan.account_id = account.account_id AND strftime('%Y', loan.date) = '1993' AND strftime('%m', loan.date) = '7' AND strftime('%d', loan.date) = '5') AS first_loan_amount,        (SELECT amount FROM loan WHERE loan.account_id = account.account_id AND strftime('%Y-%m-%d', loan.date) = '1993-3-22') AS initial_balance,        (SELECT amount FROM loan WHERE loan.account_id = account.account_id AND strftime('%Y-%m-%d', loan.date) = '1998-12-27') AS final_balance FROM account WHERE account.account_id IN (SELECT loan.account_id FROM loan WHERE strftime('%Y', loan.date) = '1993' AND strftime('%m', loan.date) = '7' AND strftime('%d', loan.date) = '5') AND account.account_id IN (SELECT loan.account_id FROM loan WHERE strftime('%Y-%m-%d', loan.date) = '1993-3-22') AND account.account_id IN (SELECT loan.account_id FROM loan WHERE strftime","SELECT (SELECT amount FROM loan WHERE loan.account_id = account.account_id AND strftime('%Y', loan.date) = '1993' AND strftime('%m', loan.date) = '7' AND strftime('%d', loan.date) = '5') - (SELECT amount FROM loan WHERE loan.account_id = account.account_id AND strftime('%Y-%m-%d', loan.date) = '1993-3-22') AS increase_rate FROM account"
126,253,List the elements of all the triple bonds.,toxicology,challenging,SELECT DISTINCT T3.element FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T1.bond_type = '#',7,"SELECT a.atom_id, a.molecule_id, a.element, c.atom_id2, b.bond_type FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'triple'
SELECT a.atom_id, a.molecule_id, a.element, c.atom_id2, b.bond_type FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'triple'
SELECT a.atom_id, a.molecule_id, a.element, c.atom_id2, b.bond_type FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'triple'
SELECT a.atom_id, a.molecule_id, a.element, c.atom_id2, b.bond_type FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'triple'
SELECT a.atom_id, a.molecule_id, a.element, c.atom_id2, b.bond_type FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'triple'
SELECT a.atom_id, a.molecule_id, a.element, c.atom_id2, b.bond_type FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'triple'
SELECT a.atom_id, a.molecule_id, a.element, c.atom_id2, b.bond_type FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'triple'","SELECT a.atom_id, a.molecule_id, a.element, c.atom_id2, b.bond_type FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'triple'"
127,1051,List all the football player with the highest potential score.,european_football_2,simple,SELECT DISTINCT(t1.player_name) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t2.potential = (SELECT MAX(potential) FROM Player_Attributes) ,7,"SELECT player_name, potential FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE potential = (SELECT MAX(potential) FROM player_attributes)
SELECT player_name, potential FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE potential = (SELECT MAX(potential) FROM player_attributes)
SELECT player_name, potential FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE potential = (SELECT MAX(potential) FROM player_attributes)
SELECT player_name, potential FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE potential = (SELECT MAX(potential) FROM player_attributes)
SELECT player_name, potential FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE potential = (SELECT MAX(potential) FROM player_attributes)
SELECT player_name, potential FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE potential = (SELECT MAX(potential) FROM player_attributes)
SELECT player_name, potential FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE potential = (SELECT MAX(potential) FROM player_attributes)","SELECT player_name, potential FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE potential = (SELECT MAX(potential) FROM player_attributes)"
128,1241,"For patients with abnormal platelet level, state the number of patients with lower than normal range. How is it compare to the number of patients with higher than normal range?",thrombosis_prediction,challenging,SELECT SUM(CASE WHEN T2.PLT <= 100 THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.PLT >= 400 THEN 1 ELSE 0 END) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID,7,"SELECT      COUNT(CASE WHEN plt < 500 THEN 1 END) AS lower_normal_plt,     COUNT(CASE WHEN plt > 450 THEN 1 END) AS higher_normal_plt FROM      laboratory WHERE      plt IS NOT NULL
SELECT      COUNT(CASE WHEN plt < 500 THEN 1 END) AS lower_normal_plt,     COUNT(CASE WHEN plt > 450 THEN 1 END) AS higher_normal_plt FROM      laboratory WHERE      plt IS NOT NULL
SELECT      COUNT(CASE WHEN plt < 500 THEN 1 END) AS lower_normal_range,     COUNT(CASE WHEN plt > 450 THEN 1 END) AS higher_normal_range FROM      laboratory WHERE      diagnosis = 'abnormal platelet level'
SELECT      COUNT(CASE WHEN plt < 500 THEN 1 END) AS lower_normal_plt,     COUNT(CASE WHEN plt > 450 THEN 1 END) AS higher_normal_plt,     (COUNT(CASE WHEN plt < 500 THEN 1 END) / COUNT(*)) * 100 AS lower_normal_plt_percentage,     (COUNT(CASE WHEN plt > 450 THEN 1 END) / COUNT(*)) * 100 AS higher_normal_plt_percentage FROM      laboratory WHERE      plt IS NOT NULL
SELECT      COUNT(CASE WHEN plt < 500 THEN 1 END) AS lower_normal_plt,     COUNT(CASE WHEN plt > 450 THEN 1 END) AS higher_normal_plt,     (COUNT(CASE WHEN plt < 500 THEN 1 END) / COUNT(*)) * 100 AS lower_normal_plt_percentage,     (COUNT(CASE WHEN plt > 450 THEN 1 END) / COUNT(*)) * 100 AS higher_normal_plt_percentage FROM      laboratory WHERE      plt IS NOT NULL
SELECT      COUNT(CASE WHEN plt < 500 THEN 1 END) AS lower_normal_plt,     COUNT(CASE WHEN plt > 450 THEN 1 END) AS higher_normal_plt FROM      laboratory WHERE      diagnosis = 'abnormal platelet level'
SELECT      COUNT(CASE WHEN plt < 500 THEN 1 END) AS lower_normal_plt,     COUNT(CASE WHEN plt > 450 THEN 1 END) AS higher_normal_plt FROM      laboratory WHERE      diagnosis = 'abnormal platelet level'","SELECT      COUNT(CASE WHEN plt < 500 THEN 1 END) AS lower_normal_plt,     COUNT(CASE WHEN plt > 450 THEN 1 END) AS higher_normal_plt FROM      laboratory WHERE      plt IS NOT NULL"
129,256,Calculate the total atoms consisting of the element carbon and hydrogen.,toxicology,simple,SELECT COUNT(T.atom_id) FROM atom AS T WHERE T.element = 'c' OR T.element = 'h',7,"SELECT SUM(CASE WHEN element = 'C' THEN 1 ELSE 0 END + CASE WHEN element = 'H' THEN 1 ELSE 0 END) AS total_atoms FROM atom
SELECT SUM(a.atom_id) FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.element IN ('C', 'H')
SELECT SUM(a.atom_id) FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.element IN ('C', 'H')
SELECT SUM(a.atom_id) FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.element IN ('C', 'H')
SELECT SUM(a.atom_id) FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.element IN ('C', 'H')
SELECT SUM(CASE WHEN element = 'C' THEN 1 ELSE 0 END) + SUM(CASE WHEN element = 'H' THEN 1 ELSE 0 END) AS total_atoms FROM atom
SELECT SUM(CASE WHEN element = 'C' THEN 1 ELSE 0 END + CASE WHEN element = 'H' THEN 1 ELSE 0 END) AS total_atoms FROM atom","SELECT SUM(a.atom_id) FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.element IN ('C', 'H')"
130,775,What is the percentage of blue female superheroes among all female superheroes?,superhero,challenging,SELECT CAST(COUNT(CASE WHEN T3.colour = 'Blue' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN colour AS T3 ON T1.skin_colour_id = T3.id WHERE T2.gender = 'Female',7,"SELECT (COUNT(DISTINCT CASE WHEN colour.colour = 'blue' AND gender.gender = 'female' THEN superhero.id END) / COUNT(DISTINCT superhero.id)) * 100 AS percentage_blue_female_superheroes FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN colour ON superhero.eye_colour_id = colour.id
SELECT (COUNT(CASE WHEN colour.colour = 'blue' AND gender.gender = 'female' THEN 1 END) * 100.0 / COUNT(gender.gender)) AS percentage_blue_female_superheroes FROM superhero WHERE gender.gender = 'female'
SELECT (COUNT(DISTINCT CASE WHEN colour.colour = 'blue' AND gender.gender = 'female' THEN superhero.id END) / COUNT(DISTINCT superhero.id)) * 100 AS percentage_blue_female_superheroes FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN colour ON superhero.eye_colour_id = colour.id
SELECT (COUNT(DISTINCT CASE WHEN colour.colour = 'blue' AND gender.gender = 'female' THEN superhero.id END) / COUNT(DISTINCT superhero.id)) * 100 AS percentage_blue_female_superheroes FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN colour ON superhero.eye_colour_id = colour.id
SELECT (COUNT(DISTINCT CASE WHEN colour.colour = 'blue' AND gender.gender = 'female' THEN superhero.id END) / COUNT(DISTINCT superhero.id)) * 100 AS percentage_blue_female_superheroes FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN colour ON superhero.eye_colour_id = colour.id
SELECT (COUNT(DISTINCT CASE WHEN colour.colour = 'blue' AND gender.gender = 'female' THEN superhero.id END) / COUNT(DISTINCT superhero.id)) * 100 AS percentage_blue_female_superheroes FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN colour ON superhero.eye_colour_id = colour.id
SELECT (COUNT(DISTINCT CASE WHEN colour.colour = 'blue' AND gender.gender = 'female' THEN superhero.id END) / COUNT(DISTINCT superhero.id)) * 100 AS percentage_blue_female_superheroes FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN colour ON superhero.eye_colour_id = colour.id",SELECT (COUNT(DISTINCT CASE WHEN colour.colour = 'blue' AND gender.gender = 'female' THEN superhero.id END) / COUNT(DISTINCT superhero.id)) * 100 AS percentage_blue_female_superheroes FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN colour ON superhero.eye_colour_id = colour.id
131,200,Find the triple-bonded molecules which are carcinogenic.,toxicology,simple,SELECT DISTINCT T2.molecule_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#' AND T2.label = '+',7,"SELECT m.label FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'triple' AND m.label LIKE '%carcinogenic%'
SELECT m.label FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'triple' AND m.label LIKE '%carcinogenic%'
SELECT DISTINCT m.molecule_id FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'triple' AND m.label = 'carcinogenic'
SELECT m.label FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'triple' AND m.label LIKE '%carcinogenic%'
SELECT m.label FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'triple' AND m.label LIKE '%carcinogenic%'
SELECT DISTINCT m.molecule_id FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'triple' AND m.label = 'carcinogenic'
SELECT m.label FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'triple' AND m.label LIKE '%carcinogenic%'",SELECT m.label FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'triple' AND m.label LIKE '%carcinogenic%'
132,1275,"Among the patients who has a normal level of anti-centromere and a normal level of anti-SSB, how many of them are male?",thrombosis_prediction,moderate,"SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CENTROMEA IN ('negative', '0') AND T2.SSB IN ('negative', '0') AND T1.SEX = 'M'",7,"SELECT COUNT(*) FROM patient WHERE id IN (SELECT patient_id FROM laboratory WHERE centromea = 'normal' AND ssb = 'normal') AND sex = 'male'
SELECT COUNT(*) FROM patient WHERE id IN (SELECT patient_id FROM laboratory WHERE centromea = 'normal' AND ssb = 'normal') AND sex = 'male'
SELECT COUNT(*) FROM patient WHERE id IN (SELECT patient_id FROM laboratory WHERE centromea = 'normal' AND ssb = 'normal') AND sex = 'male'
SELECT COUNT(*) FROM patient WHERE id IN (SELECT patient_id FROM laboratory WHERE centromea = 'normal' AND ssb = 'normal') AND sex = 'male'
SELECT COUNT(*) FROM patient WHERE id IN (SELECT patient_id FROM laboratory WHERE centromea = 'normal' AND ssb = 'normal') AND sex = 'male'
SELECT COUNT(*) FROM patient WHERE id IN (SELECT patient_id FROM laboratory WHERE centromea = 'normal' AND ssb = 'normal') AND sex = 'male'
SELECT COUNT(*) FROM patient WHERE id IN (SELECT patient_id FROM laboratory WHERE centromea = 'normal' AND ssb = 'normal') AND sex = 'male'",SELECT COUNT(*) FROM patient WHERE id IN (SELECT patient_id FROM laboratory WHERE centromea = 'normal' AND ssb = 'normal') AND sex = 'male'
133,1482,"Which of the three segments—SME, LAM and KAM—has the biggest and lowest percentage increases in consumption paid in EUR between 2012 and 2013?",debit_card_specializing,challenging,"SELECT CAST((SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2013%', T2.Consumption, 0)) - SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2012%', T2.Consumption, 0))) AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2012%', T2.Consumption, 0)), CAST(SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2013%', T2.Consumption, 0)) - SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) , CAST(SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2013%', T2.Consumption, 0)) - SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID",7,"SELECT segment,         MAX(percentage_increase) AS highest_increase,         MIN(percentage_increase) AS lowest_increase  FROM (     SELECT t1.segment,             ((t2.consumption - t1.consumption) / t1.consumption) * 100 AS percentage_increase     FROM yearmonth t1     JOIN yearmonth t2 ON t1.customerid = t2.customerid      AND t1.date = '2012-12-01'      AND t2.date = '2013-12-01' )  GROUP BY segment
SELECT segment,         MAX(percentage_increase) AS highest_increase,         MIN(percentage_increase) AS lowest_increase  FROM (     SELECT segment,             ((SUM(amount * price) - LAG(SUM(amount * price), 1) OVER (PARTITION BY segment ORDER BY date)) /              LAG(SUM(amount * price), 1) OVER (PARTITION BY segment ORDER BY date)) * 100 AS percentage_increase      FROM transactions_1k      WHERE date BETWEEN '2012-01-01' AND '2013-12-31'      GROUP BY segment ) AS segment_increases  GROUP BY segment
SELECT segment,         MAX(percentage_increase) AS highest_increase,         MIN(percentage_increase) AS lowest_increase  FROM (     SELECT segment,             ((SUM(amount * price) - LAG(SUM(amount * price), 1) OVER (PARTITION BY segment ORDER BY date)) /              LAG(SUM(amount * price), 1) OVER (PARTITION BY segment ORDER BY date)) * 100 AS percentage_increase      FROM transactions_1k      WHERE date BETWEEN '2012-01-01' AND '2013-12-31'      GROUP BY segment ) AS segment_increases  GROUP BY segment
SELECT segment,         MAX(percentage_increase) AS highest_increase,         MIN(percentage_increase) AS lowest_increase  FROM (     SELECT segment,             ((SUM(amount * price) - LAG(SUM(amount * price), 1) OVER (PARTITION BY segment ORDER BY date)) /              LAG(SUM(amount * price), 1) OVER (PARTITION BY segment ORDER BY date)) * 100 AS percentage_increase      FROM transactions_1k      WHERE date BETWEEN '2012-01-01' AND '2013-12-31'      GROUP BY segment ) AS segment_increases  GROUP BY segment
SELECT segment,         MAX(percentage_increase) AS highest_increase,         MIN(percentage_increase) AS lowest_increase  FROM (     SELECT segment,             ((SUM(amount * price) - LAG(SUM(amount * price), 1) OVER (PARTITION BY segment ORDER BY date)) /              LAG(SUM(amount * price), 1) OVER (PARTITION BY segment ORDER BY date)) * 100 AS percentage_increase      FROM transactions_1k      WHERE date BETWEEN '2012-01-01' AND '2013-12-31'      GROUP BY segment ) AS segment_increases  GROUP BY segment
SELECT segment,         MAX(percentage_increase) AS highest_increase,         MIN(percentage_increase) AS lowest_increase  FROM (     SELECT t1.segment,             ((t2.consumption - t1.consumption) / t1.consumption) * 100 AS percentage_increase     FROM yearmonth t1     JOIN yearmonth t2 ON t1.customerid = t2.customerid      AND t1.date = '2012-12-01'      AND t2.date = '2013-12-01' )  GROUP BY segment
SELECT segment,         MAX(percentage_increase) AS highest_increase,         MIN(percentage_increase) AS lowest_increase  FROM (     SELECT segment,             ((SUM(amount * price) - LAG(SUM(amount * price), 1) OVER (PARTITION BY segment ORDER BY date)) /              LAG(SUM(amount * price), 1) OVER (PARTITION BY segment ORDER BY date)) * 100 AS percentage_increase      FROM transactions_1k      WHERE date BETWEEN '2012-01-01' AND '2013-12-31'      GROUP BY segment ) AS segment_increases  GROUP BY segment","SELECT segment,         MAX(percentage_increase) AS highest_increase,         MIN(percentage_increase) AS lowest_increase  FROM (     SELECT segment,             ((SUM(amount * price) - LAG(SUM(amount * price), 1) OVER (PARTITION BY segment ORDER BY date)) /              LAG(SUM(amount * price), 1) OVER (PARTITION BY segment ORDER BY date)) * 100 AS percentage_increase      FROM transactions_1k      WHERE date BETWEEN '2012-01-01' AND '2013-12-31'      GROUP BY segment ) AS segment_increases  GROUP BY segment"
134,311,How many molecules without sulphur element is not having double bond?,toxicology,simple,SELECT COUNT(DISTINCT T1.molecule_id) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element <> 's' AND T2.bond_type <> '=',7,"SELECT COUNT(*) FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN bond b ON m.molecule_id = b.molecule_id WHERE a.element != 'S' AND b.bond_type != 'double'
SELECT COUNT(*) FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN bond b ON m.molecule_id = b.molecule_id WHERE a.element != 'S' AND b.bond_type != 'double'
SELECT COUNT(*) FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 WHERE a.element != 'S' AND b.bond_type != 'double'
SELECT COUNT(*) FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 WHERE a.element != 'S' AND b.bond_type != 'double'
SELECT COUNT(*) FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 WHERE a.element != 'S' AND b.bond_type != 'double'
SELECT COUNT(*) FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 WHERE a.element != 'S' AND b.bond_type != 'double'
SELECT COUNT(*) FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 WHERE a.element != 'S' AND b.bond_type != 'double'",SELECT COUNT(*) FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 WHERE a.element != 'S' AND b.bond_type != 'double'
135,23,List the names of schools with more than 30 difference in enrollements between K-12 and ages 5-17? Please also give the full street adress of the schools.,california_schools,moderate,"SELECT T1.School, T1.Street FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`Enrollment (K-12)` - T2.`Enrollment (Ages 5-17)` > 30",7,"SELECT s.school_name, s.street, s.city, s.zip, s.state FROM schools s JOIN (     SELECT school_code, (enrollment_k_12 - enrollment_ages_5_17) AS enrollment_diff     FROM schools     WHERE (enrollment_k_12 - enrollment_ages_5_17) > 30 ) AS diff ON s.school_code = diff.school_code
SELECT s.school_name, s.street, s.city, s.zip, s.state FROM schools s JOIN (     SELECT school_code, (enrollment_k_12 - enrollment_ages_5_17) AS enrollment_diff     FROM schools     WHERE (enrollment_k_12 - enrollment_ages_5_17) > 30 ) AS diff ON s.school_code = diff.school_code
SELECT s.school_name, s.street, s.city, s.zip, s.state FROM schools s JOIN (     SELECT school_code, (enrollment_k_12 - enrollment_ages_5_17) AS enrollment_diff     FROM schools     WHERE (enrollment_k_12 - enrollment_ages_5_17) > 30 ) AS diff ON s.school_code = diff.school_code
SELECT s.school_name, s.street, s.city, s.zip, s.state FROM schools s JOIN (     SELECT school_code, (enrollment_k_12 - enrollment_ages_5_17) AS enrollment_diff     FROM schools     WHERE (enrollment_k_12 - enrollment_ages_5_17) > 30 ) AS diff ON s.school_code = diff.school_code
SELECT s.school_name, s.street, s.city, s.zip, s.state FROM schools s JOIN (     SELECT school_code, (enrollment_k_12 - enrollment_ages_5_17) AS enrollment_diff     FROM schools     WHERE (enrollment_k_12 - enrollment_ages_5_17) > 30 ) AS diff ON s.school_code = diff.school_code
SELECT s.school_name, s.street, s.city, s.zip, s.state FROM schools s JOIN (     SELECT school_code, (enrollment_k_12 - enrollment_ages_5_17) AS enrollment_diff     FROM schools     WHERE (enrollment_k_12 - enrollment_ages_5_17) > 30 ) AS diff ON s.school_code = diff.school_code
SELECT s.school_name, s.street, s.city, s.zip, s.state FROM schools s JOIN (     SELECT school_code, (enrollment_k_12 - enrollment_ages_5_17) AS enrollment_diff     FROM schools     WHERE (enrollment_k_12 - enrollment_ages_5_17) > 30 ) AS diff ON s.school_code = diff.school_code","SELECT s.school_name, s.street, s.city, s.zip, s.state FROM schools s JOIN (     SELECT school_code, (enrollment_k_12 - enrollment_ages_5_17) AS enrollment_diff     FROM schools     WHERE (enrollment_k_12 - enrollment_ages_5_17) > 30 ) AS diff ON s.school_code = diff.school_code"
136,981,"On what year did the youngest driver had his first qualifying race? Also state the name, date and time of the race.",formula_1,moderate,"SELECT T3.year, T3.name, T3.date, T3.time FROM qualifying AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId INNER JOIN races AS T3 on T1.raceId = T3.raceId WHERE T1.driverId = ( SELECT driverId FROM drivers ORDER BY dob DESC LIMIT 1 ) ORDER BY T3.date ASC LIMIT 1",7,"SELECT year, name, date, time FROM races WHERE time IS NOT NULL ORDER BY date DESC LIMIT 1
SELECT year, name, date, time FROM races WHERE time IS NOT NULL ORDER BY date DESC LIMIT 1
SELECT year, name, date, time FROM races WHERE time IS NOT NULL ORDER BY date DESC LIMIT 1
SELECT year, name, date, time FROM races WHERE time IS NOT NULL ORDER BY date DESC LIMIT 1
SELECT year, name, date, time FROM races WHERE time IS NOT NULL ORDER BY date DESC LIMIT 1
SELECT year, name, date, time FROM races WHERE time IS NOT NULL ORDER BY date DESC LIMIT 1
SELECT year, name, date, time FROM races WHERE time IS NOT NULL ORDER BY date DESC LIMIT 1","SELECT year, name, date, time FROM races WHERE time IS NOT NULL ORDER BY date DESC LIMIT 1"
137,1339,Calculate the total average cost that Elijah Allen spent in the events on September and October.,student_club,challenging,"SELECT AVG(T2.cost) FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.last_name = 'Allen' AND T1.first_name = 'Elijah' AND (SUBSTR(T2.expense_date, 6, 2) = '09' OR SUBSTR(T2.expense_date, 6, 2) = '10')",7,"SELECT AVG(cost) AS average_cost FROM expense WHERE expense_date BETWEEN '2023-09-01' AND '2023-10-31'
SELECT AVG(cost) AS average_cost FROM expense WHERE expense_date BETWEEN '2023-09-01' AND '2023-10-31'
SELECT AVG(cost) AS average_cost FROM expense WHERE expense_date BETWEEN '2023-09-01' AND '2023-10-31'
SELECT AVG(cost) AS average_cost FROM expense WHERE expense_date BETWEEN '2023-09-01' AND '2023-10-31'
SELECT AVG(cost) AS average_cost FROM expense WHERE expense_date BETWEEN '2023-09-01' AND '2023-10-31'
SELECT AVG(cost) AS average_cost FROM expense WHERE expense_date BETWEEN '2023-09-01' AND '2023-10-31'
SELECT AVG(cost) AS average_cost FROM expense WHERE expense_date BETWEEN '2023-09-01' AND '2023-10-31'",SELECT AVG(cost) AS average_cost FROM expense WHERE expense_date BETWEEN '2023-09-01' AND '2023-10-31'
138,988,List down top 3 German drivers who has the shortest average pit stop duration and were born between 1980-1985.,formula_1,challenging,"SELECT T2.forename, T2.surname FROM pitStops AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId WHERE T2.nationality = 'German' AND STRFTIME('%Y', T2.dob) BETWEEN '1980' AND '1985' GROUP BY T2.forename, T2.surname ORDER BY AVG(T1.duration) LIMIT 3",7,"SELECT forename, surname, dob, AVG(duration) AS avg_duration FROM drivers JOIN pitstops ON drivers.driverid = pitstops.driverid WHERE nationality = 'German' AND dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY drivers.driverid ORDER BY avg_duration ASC LIMIT 3
SELECT forename, surname, dob, AVG(duration) AS avg_duration FROM drivers JOIN pitstops ON drivers.driverid = pitstops.driverid WHERE nationality = 'German' AND dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY drivers.driverid ORDER BY avg_duration ASC LIMIT 3
SELECT forename, surname, dob, AVG(duration) AS avg_duration FROM drivers JOIN pitstops ON drivers.driverid = pitstops.driverid WHERE nationality = 'German' AND dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY drivers.driverid ORDER BY avg_duration ASC LIMIT 3
SELECT forename, surname, dob, AVG(duration) AS avg_duration FROM drivers JOIN pitstops ON drivers.driverid = pitstops.driverid WHERE nationality = 'German' AND dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY drivers.driverid ORDER BY avg_duration ASC LIMIT 3
SELECT forename, surname, dob, AVG(duration) AS avg_duration FROM drivers JOIN pitstops ON drivers.driverid = pitstops.driverid WHERE nationality = 'German' AND dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY drivers.driverid ORDER BY avg_duration ASC LIMIT 3
SELECT forename, surname, dob, AVG(duration) AS avg_duration FROM drivers JOIN pitstops ON drivers.driverid = pitstops.driverid WHERE nationality = 'German' AND dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY drivers.driverid ORDER BY avg_duration ASC LIMIT 3
SELECT forename, surname, dob, AVG(duration) AS avg_duration FROM drivers JOIN pitstops ON drivers.driverid = pitstops.driverid WHERE nationality = 'German' AND dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY drivers.driverid ORDER BY avg_duration ASC LIMIT 3","SELECT forename, surname, dob, AVG(duration) AS avg_duration FROM drivers JOIN pitstops ON drivers.driverid = pitstops.driverid WHERE nationality = 'German' AND dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY drivers.driverid ORDER BY avg_duration ASC LIMIT 3"
139,28,"Consider the average difference between K-12 enrollment and 15-17 enrollment of schools that are locally funded, list the names and DOC type of schools which has a difference above this average.",california_schools,challenging,"SELECT T2.School, T2.DOC FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.FundingType = 'Locally funded' AND (T1.`Enrollment (K-12)` - T1.`Enrollment (Ages 5-17)`) > (SELECT AVG(T3.`Enrollment (K-12)` - T3.`Enrollment (Ages 5-17)`) FROM frpm AS T3 INNER JOIN schools AS T4 ON T3.CDSCode = T4.CDSCode WHERE T4.FundingType = 'Locally funded')",7,"SELECT s.school_name, s.doc_type FROM schools s JOIN (     SELECT AVG(s.enrollment_k_12 - s.enrollment_ages_5_17) AS avg_diff     FROM schools s     WHERE s.district_type = 'Locally Funded' ) avg_diff_table ON 1=1 WHERE (s.enrollment_k_12 - s.enrollment_ages_5_17) > avg_diff_table.avg_diff AND s.district_type = 'Locally Funded'
SELECT s.school_name, s.doc_type  FROM schools s  JOIN (     SELECT AVG(s.enrollment_k_12 - s.enrollment_ages_5_17) AS avg_diff     FROM schools s     WHERE s.district_type = 'Locally Funded' ) avg_diff_table ON avg_diff_table.avg_diff < (s.enrollment_k_12 - s.enrollment_ages_5_17) WHERE s.district_type = 'Locally Funded'
SELECT s.school_name, s.doc_type FROM schools s JOIN (     SELECT AVG(s.enrollment_k_12 - s.enrollment_ages_5_17) AS avg_diff     FROM schools s     WHERE s.district_type = 'Locally Funded' ) avg_diff_table ON 1=1 WHERE s.enrollment_k_12 - s.enrollment_ages_5_17 > avg_diff_table.avg_diff AND s.district_type = 'Locally Funded'
SELECT s.school_name, s.doc_type  FROM schools s  JOIN (     SELECT AVG(s.enrollment_k_12 - s.enrollment_ages_5_17) AS avg_diff     FROM schools s     WHERE s.district_type = 'Locally Funded' ) avg_diff_table ON avg_diff_table.avg_diff < (s.enrollment_k_12 - s.enrollment_ages_5_17) WHERE s.district_type = 'Locally Funded'
SELECT s.school_name, s.doc_type FROM schools s JOIN (     SELECT AVG(s.enrollment_k_12 - s.enrollment_ages_5_17) AS avg_diff     FROM schools s     WHERE s.district_type = 'Locally Funded' ) avg_diff_table ON 1=1 WHERE s.enrollment_k_12 - s.enrollment_ages_5_17 > avg_diff_table.avg_diff AND s.district_type = 'Locally Funded'
SELECT s.school_name, s.doc_type  FROM schools s  JOIN (     SELECT AVG(s.enrollment_k_12 - s.enrollment_ages_5_17) AS avg_diff     FROM schools s     WHERE s.district_type = 'Locally Funded' ) avg_diff_table ON s.enrollment_k_12 - s.enrollment_ages_5_17 > avg_diff_table.avg_diff WHERE s.district_type = 'Locally Funded'
SELECT s.school_name, s.doc_type  FROM schools s  JOIN (     SELECT AVG(s.enrollment_k_12 - s.enrollment_ages_5_17) AS avg_diff     FROM schools s     WHERE s.district_type = 'locally funded' ) avg_diff_table ON s.enrollment_k_12 - s.enrollment_ages_5_17 > avg_diff_table.avg_diff WHERE s.district_type = 'locally funded'","SELECT s.school_name, s.doc_type  FROM schools s  JOIN (     SELECT AVG(s.enrollment_k_12 - s.enrollment_ages_5_17) AS avg_diff     FROM schools s     WHERE s.district_type = 'Locally Funded' ) avg_diff_table ON avg_diff_table.avg_diff < (s.enrollment_k_12 - s.enrollment_ages_5_17) WHERE s.district_type = 'Locally Funded'"
140,94,"List out the account numbers of female clients who are oldest and has lowest average salary, calculate the gap between this lowest average salary with the highest average salary?",financial,challenging,"SELECT T1.account_id , ( SELECT MAX(A11) - MIN(A11) FROM district ) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T1.account_id = T3.account_id INNER JOIN client AS T4 ON T3.client_id = T4.client_id WHERE T2.district_id = ( SELECT district_id FROM client WHERE gender = 'F' ORDER BY birth_date ASC LIMIT 1 ) ORDER BY T2.A11 DESC LIMIT 1",7,"SELECT c.client_id, c.gender, c.birth_date, c.district_id FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id WHERE c.gender = 'F' ORDER BY c.birth_date ASC, a.district_id DESC LIMIT 1
SELECT c.client_id, c.gender, c.birth_date, c.district_id, AVG(l.amount) AS avg_salary FROM client c JOIN disp d ON c.client_id = d.client_id JOIN loan l ON d.account_id = l.account_id WHERE c.gender = 'F' GROUP BY c.client_id ORDER BY avg_salary ASC LIMIT 1
SELECT c.client_id, c.gender, c.birth_date, c.district_id, AVG(l.amount) AS avg_salary FROM client c JOIN disp d ON c.client_id = d.client_id JOIN loan l ON d.account_id = l.account_id WHERE c.gender = 'F' GROUP BY c.client_id ORDER BY avg_salary ASC LIMIT 1
SELECT c.client_id, c.gender, c.birth_date, c.district_id FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id WHERE c.gender = 'F' ORDER BY c.birth_date ASC, a.frequency DESC LIMIT 1
SELECT c.client_id, c.gender, c.birth_date, c.district_id FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id WHERE c.gender = 'F' ORDER BY c.birth_date ASC, a.frequency DESC LIMIT 1
SELECT c.client_id, c.gender, c.birth_date, c.district_id, AVG(l.amount) AS avg_salary FROM client c JOIN disp d ON c.client_id = d.client_id JOIN loan l ON d.account_id = l.account_id WHERE c.gender = 'F' GROUP BY c.client_id ORDER BY avg_salary ASC LIMIT 1
SELECT c.client_id, c.gender, c.birth_date, c.district_id FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id WHERE c.gender = 'F' ORDER BY c.birth_date ASC, a.frequency DESC LIMIT 1","SELECT c.client_id, c.gender, c.birth_date, c.district_id, AVG(l.amount) AS avg_salary FROM client c JOIN disp d ON c.client_id = d.client_id JOIN loan l ON d.account_id = l.account_id WHERE c.gender = 'F' GROUP BY c.client_id ORDER BY avg_salary ASC LIMIT 1"
141,281,Tally the toxicology element of the 4th atom of each molecule that was carcinogenic.,toxicology,challenging,"SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND SUBSTR(T1.atom_id, -1) = '4' AND LENGTH(T1.atom_id) = 7",7,"SELECT COUNT(*) FROM (SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = '4th' AND b.bond_type = 'carcinogenic') AS subquery
SELECT COUNT(*) FROM (SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = '4th' AND b.bond_type = 'carcinogenic') AS subquery
SELECT COUNT(*) FROM (SELECT DISTINCT molecule.molecule_id FROM molecule JOIN atom ON molecule.molecule_id = atom.molecule_id JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.atom_id = 4 AND bond.bond_type = 'carcinogenic') AS subquery
SELECT COUNT(*) FROM (SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = '4th' AND b.bond_type = 'carcinogenic') AS subquery
SELECT COUNT(*) FROM (SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = '4th' AND b.bond_type = 'carcinogenic') AS subquery
SELECT COUNT(*) FROM (SELECT DISTINCT molecule.molecule_id FROM molecule JOIN atom ON molecule.molecule_id = atom.molecule_id JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.atom_id = 4 AND bond.bond_type = 'carcinogenic') AS subquery
SELECT COUNT(*) FROM (SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = '4th' AND b.bond_type = 'carcinogenic')",SELECT COUNT(*) FROM (SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = '4th' AND b.bond_type = 'carcinogenic') AS subquery
142,730,List the superheroes from Marvel Comics who have the super power of 'Super Strength'.,superhero,challenging,SELECT superhero_name FROM superhero AS T1 WHERE EXISTS (SELECT 1 FROM hero_power AS T2 INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Super Strength' AND T1.id = T2.hero_id)AND EXISTS (SELECT 1 FROM publisher AS T4 WHERE T4.publisher_name = 'Marvel Comics' AND T1.publisher_id = T4.id),7,"SELECT superhero.superhero_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength'
SELECT superhero_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE power_name = 'Super Strength'
SELECT superhero.id, superhero.superhero_name, superhero.full_name, superhero.gender_id, superhero.eye_colour_id, superhero.hair_colour_id, superhero.skin_colour_id, superhero.race_id, superhero.publisher_id, superhero.alignment_id, superhero.height_cm, superhero.weight_kg FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength'
SELECT superhero_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE power_name = 'Super Strength'
SELECT superhero.id, superhero.superhero_name, superhero.full_name, superhero.gender_id, superhero.eye_colour_id, superhero.hair_colour_id, superhero.skin_colour_id, superhero.race_id, superhero.publisher_id, superhero.alignment_id, superhero.height_cm, superhero.weight_kg FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength'
SELECT superhero.id, superhero.superhero_name, superhero.full_name, superhero.gender_id, superhero.eye_colour_id, superhero.hair_colour_id, superhero.skin_colour_id, superhero.race_id, superhero.publisher_id, superhero.alignment_id, superhero.height_cm, superhero.weight_kg FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength'
SELECT superhero.id, superhero.superhero_name, superhero.full_name, superhero.gender_id, superhero.eye_colour_id, superhero.hair_colour_id, superhero.skin_colour_id, superhero.race_id, superhero.publisher_id, superhero.alignment_id, superhero.height_cm, superhero.weight_kg FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength'","SELECT superhero.id, superhero.superhero_name, superhero.full_name, superhero.gender_id, superhero.eye_colour_id, superhero.hair_colour_id, superhero.skin_colour_id, superhero.race_id, superhero.publisher_id, superhero.alignment_id, superhero.height_cm, superhero.weight_kg FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength'"
143,1041,"For the teams with normal build-up play dribbling class in 2014, List the names of the teams with less than average chance creation passing, in descending order of chance creation passing.",european_football_2,challenging,"SELECT t3.team_long_name FROM Team AS t3 INNER JOIN Team_Attributes AS t4 ON t3.team_api_id = t4.team_api_id WHERE t4.buildUpPlayDribblingClass = 'Normal' AND t4.chanceCreationPassing < ( SELECT CAST(SUM(t2.chanceCreationPassing) AS REAL) / COUNT(t1.id) FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t2.buildUpPlayDribblingClass = 'Normal' AND SUBSTR(t2.`date`, 1, 4) = '2014') ORDER BY t4.chanceCreationPassing DESC",7,"SELECT ta.team_long_name FROM team_attributes ta JOIN team t ON ta.team_api_id = t.team_api_id WHERE ta.buildupplaydribblingclass = 'Normal' AND ta.date = '2014-01-01' AND ta.chancecreationpassing < (SELECT AVG(chancecreationpassing) FROM team_attributes WHERE date = '2014-01-01') ORDER BY ta.chancecreationpassing DESC
SELECT ta.team_long_name FROM team_attributes ta JOIN team t ON ta.team_api_id = t.team_api_id WHERE ta.buildupplaydribblingclass = 'Normal' AND ta.date LIKE '2014%' AND ta.chancecreationpassing < (SELECT AVG(chancecreationpassing) FROM team_attributes WHERE date LIKE '2014%') ORDER BY ta.chancecreationpassing DESC
SELECT ta.team_long_name FROM team_attributes ta JOIN team t ON ta.team_api_id = t.team_api_id WHERE ta.buildupplaydribblingclass = 'Normal' AND ta.date LIKE '2014%' AND ta.chancecreationpassing < (SELECT AVG(chancecreationpassing) FROM team_attributes WHERE date LIKE '2014%') ORDER BY ta.chancecreationpassing DESC
SELECT ta.team_long_name FROM team_attributes ta JOIN team t ON ta.team_api_id = t.team_api_id WHERE ta.buildupplaydribblingclass = 'Normal' AND ta.date LIKE '2014%' AND ta.chancecreationpassing < (SELECT AVG(chancecreationpassing) FROM team_attributes WHERE date LIKE '2014%') ORDER BY ta.chancecreationpassing DESC
SELECT ta.team_long_name FROM team_attributes ta JOIN team t ON ta.team_api_id = t.team_api_id WHERE ta.buildupplaydribblingclass = 'Normal' AND ta.date = '2014-01-01' AND ta.chancecreationpassing < (SELECT AVG(chancecreationpassing) FROM team_attributes WHERE date = '2014-01-01') ORDER BY ta.chancecreationpassing DESC
SELECT ta.team_long_name FROM team_attributes ta JOIN team t ON ta.team_api_id = t.team_api_id WHERE ta.buildupplaydribblingclass = 'Normal' AND ta.date LIKE '2014%' AND ta.chancecreationpassing < (SELECT AVG(chancecreationpassing) FROM team_attributes WHERE date LIKE '2014%') ORDER BY ta.chancecreationpassing DESC
SELECT ta.team_long_name FROM team_attributes ta JOIN team t ON ta.team_api_id = t.team_api_id WHERE ta.buildupplaydribblingclass = 'Normal' AND ta.date LIKE '2014%' AND ta.chancecreationpassing < (SELECT AVG(chancecreationpassing) FROM team_attributes WHERE date LIKE '2014%') ORDER BY ta.chancecreationpassing DESC",SELECT ta.team_long_name FROM team_attributes ta JOIN team t ON ta.team_api_id = t.team_api_id WHERE ta.buildupplaydribblingclass = 'Normal' AND ta.date LIKE '2014%' AND ta.chancecreationpassing < (SELECT AVG(chancecreationpassing) FROM team_attributes WHERE date LIKE '2014%') ORDER BY ta.chancecreationpassing DESC
144,1016,"In the race a driver set the lap record for the Austrian Grand Prix Circuit, how long did he spent at the pit stop at that same race?",formula_1,challenging,"WITH fastest_lap_times AS ( SELECT T1.raceId, T1.driverId, T1.FastestLapTime, (CAST(SUBSTR(T1.FastestLapTime, 1, INSTR(T1.FastestLapTime, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, ':') + 1, INSTR(T1.FastestLapTime, '.') - INSTR(T1.FastestLapTime, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, '.') + 1) AS REAL) / 1000) as time_in_seconds FROM results AS T1 WHERE T1.FastestLapTime IS NOT NULL), lap_record_race AS ( SELECT T1.raceId, T1.driverId FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN circuits AS T3 on T2.circuitId = T3.circuitId INNER JOIN ( SELECT MIN(fastest_lap_times.time_in_seconds) as min_time_in_seconds FROM fastest_lap_times INNER JOIN races AS T2 on fastest_lap_times.raceId = T2.raceId INNER JOIN circuits AS T3 on T2.circuitId = T3.circuitId WHERE T2.name = 'Austrian Grand Prix') AS T4 ON (CAST(SUBSTR(T1.FastestLapTime, 1, INSTR(T1.FastestLapTime, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, ':') + 1, INSTR(T1.FastestLapTime, '.') - INSTR(T1.FastestLapTime, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, '.') + 1) AS REAL) / 1000) = T4.min_time_in_seconds WHERE T2.name = 'Austrian Grand Prix') SELECT T4.duration FROM lap_record_race INNER JOIN pitStops AS T4 on lap_record_race.raceId = T4.raceId AND lap_record_race.driverId = T4.driverId",7,"SELECT races.name, pitstops.duration  FROM races  JOIN pitstops ON races.raceid = pitstops.raceid  WHERE races.name = 'Austrian Grand Prix'  AND pitstops.stop = 1
SELECT races.name, pitstops.duration  FROM races  JOIN pitstops ON races.raceid = pitstops.raceid  WHERE races.name = 'Austrian Grand Prix'  AND pitstops.stop = 1
SELECT races.name, pitstops.duration  FROM races  JOIN pitstops ON races.raceid = pitstops.raceid  WHERE races.name = 'Austrian Grand Prix'  AND pitstops.stop = 1
SELECT races.name, pitstops.duration  FROM races  JOIN pitstops ON races.raceid = pitstops.raceid  WHERE races.name = 'Austrian Grand Prix'  AND pitstops.stop = 1
SELECT races.name, pitstops.duration  FROM races  JOIN pitstops ON races.raceid = pitstops.raceid  WHERE races.name = 'Austrian Grand Prix'  AND pitstops.stop = 1
SELECT races.name, pitstops.duration  FROM races  JOIN pitstops ON races.raceid = pitstops.raceid  WHERE races.name = 'Austrian Grand Prix'  AND pitstops.stop = 1
SELECT races.name, pitstops.duration  FROM races  JOIN pitstops ON races.raceid = pitstops.raceid  WHERE races.name = 'Austrian Grand Prix'  AND pitstops.stop = 1","SELECT races.name, pitstops.duration  FROM races  JOIN pitstops ON races.raceid = pitstops.raceid  WHERE races.name = 'Austrian Grand Prix'  AND pitstops.stop = 1"
145,1242,"For laboratory examinations take in 1984, list all patients below 50 years old with normal platelet level.",thrombosis_prediction,challenging,"SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.PLT BETWEEN 100 AND 400 AND STRFTIME('%Y', T2.Date) - STRFTIME('%Y', T1.Birthday) < 50 AND STRFTIME('%Y', T2.Date) = '1984'",7,"SELECT patient.id, patient.sex, patient.birthday, patient.diagnosis FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.plt < 50 AND YEAR(laboratory.date) = 1984
SELECT patient.id, patient.sex, patient.birthday, patient.diagnosis FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.plt < 50 AND YEAR(laboratory.date) = 1984
SELECT patient.id, patient.sex, patient.birthday, patient.diagnosis FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.date LIKE '1984%' AND (2024 - CAST(SUBSTR(patient.birthday, 1, 4) AS INTEGER)) < 50 AND laboratory.plt >= 150000 AND laboratory.plt <= 450000
SELECT patient.id, patient.sex, patient.birthday, patient.diagnosis FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.plt < 50 AND YEAR(laboratory.date) = 1984
SELECT patient.id, patient.sex, patient.birthday, patient.diagnosis FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.plt < 50 AND YEAR(laboratory.date) = 1984
SELECT patient.id, patient.sex, patient.birthday, patient.diagnosis FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.plt < 50 AND YEAR(laboratory.date) = 1984
SELECT patient.id, patient.sex, patient.birthday, patient.diagnosis FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.plt < 50 AND YEAR(laboratory.date) = 1984","SELECT patient.id, patient.sex, patient.birthday, patient.diagnosis FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.plt < 50 AND YEAR(laboratory.date) = 1984"
146,701,"Among all the posts posted by the most influential user, identify the percentage with a score above 50.",codebase_community,challenging,SELECT CAST(SUM(CASE WHEN T2.Score > 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Id) FROM users T1 INNER JOIN posts T2 ON T1.Id = T2.OwnerUserId INNER JOIN ( SELECT MAX(Reputation) AS max_reputation FROM users ) T3 ON T1.Reputation = T3.max_reputation,7,"SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM posts WHERE score > 50) AS percentage_above_50 FROM posts WHERE score > 50
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM posts WHERE score > 50) AS percentage_above_50 FROM posts WHERE score > 50
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM posts WHERE owneruserid IN (SELECT id FROM users WHERE reputation = (SELECT MAX(reputation) FROM users))) AS percentage FROM posts WHERE score > 50 AND owneruserid IN (SELECT id FROM users WHERE reputation = (SELECT MAX(reputation) FROM users))
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM posts WHERE score > 50) AS percentage_above_50 FROM posts WHERE score > 50
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM posts WHERE owneruserid IN (SELECT id FROM users WHERE reputation = (SELECT MAX(reputation) FROM users))) AS percentage FROM posts WHERE score > 50 AND owneruserid IN (SELECT id FROM users WHERE reputation = (SELECT MAX(reputation) FROM users))
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM posts WHERE score > 50) AS percentage_above_50 FROM posts WHERE score > 50
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM posts WHERE score > 50) AS percentage_above_50 FROM posts WHERE score > 50",SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM posts WHERE score > 50) AS percentage_above_50 FROM posts WHERE score > 50
147,1099,Which foot is preferred by Abdou Diallo?,european_football_2,simple,SELECT DISTINCT t2.preferred_foot FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.player_name = 'Abdou Diallo',7,"SELECT preferred_foot FROM player_attributes WHERE player_api_id IN (SELECT player_api_id FROM player WHERE player_name = 'Abdou Diallo')
SELECT preferred_foot FROM player_attributes WHERE player_api_id IN (SELECT player_api_id FROM player WHERE player_name = 'Abdou Diallo')
SELECT preferred_foot FROM player_attributes WHERE player_api_id IN (SELECT player_api_id FROM player WHERE player_name = 'Abdou Diallo')
SELECT preferred_foot FROM player_attributes WHERE player_api_id IN (SELECT player_api_id FROM player WHERE player_name = 'Abdou Diallo')
SELECT preferred_foot FROM player_attributes WHERE player_api_id IN (SELECT player_api_id FROM player WHERE player_name = 'Abdou Diallo')
SELECT preferred_foot FROM player_attributes WHERE player_api_id IN (SELECT player_api_id FROM player WHERE player_name = 'Abdou Diallo')
SELECT preferred_foot FROM player_attributes WHERE player_api_id IN (SELECT player_api_id FROM player WHERE player_name = 'Abdou Diallo')",SELECT preferred_foot FROM player_attributes WHERE player_api_id IN (SELECT player_api_id FROM player WHERE player_name = 'Abdou Diallo')
148,932,In which years did Lewis Hamilton participate in a Formula_1 race?,formula_1,simple,SELECT DISTINCT T1.year FROM races AS T1 INNER JOIN results AS T2 ON T2.raceId = T1.raceId INNER JOIN drivers AS T3 ON T3.driverId = T2.driverId WHERE T3.forename = 'Lewis' AND T3.surname = 'Hamilton',7,"SELECT DISTINCT year FROM races WHERE name LIKE '%Hamilton%' AND name LIKE '%Lewis%' AND name NOT LIKE '%Schumacher%' AND name NOT LIKE '%F1%'
SELECT DISTINCT year FROM races WHERE name LIKE '%Hamilton%' AND name LIKE '%Lewis%' AND name NOT LIKE '%Schumacher%' AND name NOT LIKE '%F1%'
SELECT DISTINCT year FROM races WHERE name LIKE '%Hamilton%' AND name LIKE '%Lewis%' AND name NOT LIKE '%Schumacher%' AND name NOT LIKE '%F1%'
SELECT DISTINCT year FROM races WHERE name LIKE '%Hamilton%' AND name LIKE '%Lewis%' AND name NOT LIKE '%Schumacher%' AND name NOT LIKE '%F1%'
SELECT DISTINCT year FROM races WHERE name LIKE '%Hamilton%' AND name LIKE '%Lewis%' AND name NOT LIKE '%Schumacher%' AND name NOT LIKE '%F1%'
SELECT DISTINCT year FROM races WHERE name LIKE '%Hamilton%' AND name LIKE '%Lewis%' AND name NOT LIKE '%Schumacher%' AND name NOT LIKE '%F1%'
SELECT DISTINCT year FROM races WHERE name LIKE '%Hamilton%' AND name LIKE '%Lewis%' AND name NOT LIKE '%Schumacher%' AND name NOT LIKE '%F1%'",SELECT DISTINCT year FROM races WHERE name LIKE '%Hamilton%' AND name LIKE '%Lewis%' AND name NOT LIKE '%Schumacher%' AND name NOT LIKE '%F1%'
149,231,Which bond type accounted for the majority of the bonds found in molecule TR010 and state whether or not this molecule is carcinogenic?,toxicology,challenging,"SELECT T.bond_type FROM ( SELECT T1.bond_type, COUNT(T1.molecule_id) FROM bond AS T1  WHERE T1.molecule_id = 'TR010' GROUP BY T1.bond_type ORDER BY COUNT(T1.molecule_id) DESC LIMIT 1 ) AS T",7,"SELECT bond_type, COUNT(*) AS bond_count FROM bond WHERE molecule_id = 'TR010' GROUP BY bond_type ORDER BY bond_count DESC LIMIT 1
SELECT bond_type, COUNT(*) AS bond_count FROM bond WHERE molecule_id = 'TR010' GROUP BY bond_type ORDER BY bond_count DESC LIMIT 1
SELECT bond_type, COUNT(*) AS bond_count FROM bond WHERE molecule_id = 'TR010' GROUP BY bond_type ORDER BY bond_count DESC LIMIT 1
SELECT bond_type, COUNT(*) AS bond_count FROM bond WHERE molecule_id = 'TR010' GROUP BY bond_type ORDER BY bond_count DESC LIMIT 1
SELECT bond_type, COUNT(*) AS bond_count FROM bond WHERE molecule_id = 'TR010' GROUP BY bond_type ORDER BY bond_count DESC LIMIT 1
SELECT bond_type, COUNT(*) AS bond_count FROM bond WHERE molecule_id = 'TR010' GROUP BY bond_type ORDER BY bond_count DESC LIMIT 1
SELECT bond_type, COUNT(*) AS bond_count FROM bond WHERE molecule_id = 'TR010' GROUP BY bond_type ORDER BY bond_count DESC LIMIT 1","SELECT bond_type, COUNT(*) AS bond_count FROM bond WHERE molecule_id = 'TR010' GROUP BY bond_type ORDER BY bond_count DESC LIMIT 1"
150,819,"In superheroes with missing weight data, calculate the difference between the number of superheroes with blue eyes and no eye color.",superhero,challenging,SELECT SUM(CASE WHEN T2.id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.id = 1 THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg = 0 OR T1.weight_kg is NULL,7,"SELECT COUNT(*) - COUNT(eye_colour_id) AS difference FROM superhero WHERE eye_colour_id IS NULL
SELECT COUNT(*) - COUNT(eye_colour_id) AS difference FROM superhero WHERE eye_colour_id IS NULL
SELECT COUNT(*) - COUNT(eye_colour_id) AS difference FROM superhero WHERE eye_colour_id IS NULL
SELECT COUNT(*) - COUNT(eye_colour_id) AS difference FROM superhero WHERE eye_colour_id IS NULL
SELECT COUNT(*) - COUNT(eye_colour_id) AS difference FROM superhero WHERE eye_colour_id IS NULL
SELECT COUNT(*) - COUNT(eye_colour_id) AS difference FROM superhero WHERE eye_colour_id IS NULL
SELECT COUNT(*) - COUNT(eye_colour_id) AS difference FROM superhero WHERE eye_colour_id IS NULL",SELECT COUNT(*) - COUNT(eye_colour_id) AS difference FROM superhero WHERE eye_colour_id IS NULL
151,1168,"The oldest SJS patient's medical laboratory work was completed on what date, and what age was the patient when they initially arrived at the hospital?",thrombosis_prediction,challenging,"SELECT T1.Date, STRFTIME('%Y', T2.`First Date`) - STRFTIME('%Y', T2.Birthday),T2.Birthday FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'SJS' AND T2.Birthday IS NOT NULL ORDER BY T2.Birthday ASC LIMIT 1",7,"SELECT MIN(laboratory.date) AS oldest_lab_date,         TIMESTAMPDIFF(YEAR, patient.birthday, patient.first_date) AS age_at_arrival FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.diagnosis = 'SJS'
SELECT MIN(laboratory.date) AS oldest_lab_date,         TIMESTAMPDIFF(YEAR, patient.birthday, patient.first_date) AS age_at_arrival FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.diagnosis = 'SJS'
SELECT MIN(laboratory.date) AS oldest_lab_date,         TIMESTAMPDIFF(YEAR, patient.birthday, patient.first_date) AS age_at_arrival FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.diagnosis = 'SJS'
SELECT MIN(laboratory.date) AS oldest_lab_date,         TIMESTAMPDIFF(YEAR, patient.birthday, patient.first_date) AS age_at_arrival FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.diagnosis = 'SJS'
SELECT MIN(laboratory.date) AS oldest_lab_date,         TIMESTAMPDIFF(YEAR, patient.birthday, patient.first_date) AS age_at_arrival FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.diagnosis = 'SJS'
SELECT MIN(laboratory.date) AS oldest_lab_date,         TIMESTAMPDIFF(YEAR, patient.birthday, patient.first_date) AS age_at_arrival FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.diagnosis = 'SJS'
SELECT MIN(laboratory.date) AS oldest_lab_date,         TIMESTAMPDIFF(YEAR, patient.birthday, patient.first_date) AS age_at_arrival FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.diagnosis = 'SJS'","SELECT MIN(laboratory.date) AS oldest_lab_date,         TIMESTAMPDIFF(YEAR, patient.birthday, patient.first_date) AS age_at_arrival FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.diagnosis = 'SJS'"
152,1451,"Among the members who incurred expenses in more than one event, who paid the most amount?",student_club,challenging,SELECT T2.member_id FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN budget AS T3 ON T1.link_to_budget = T3.budget_id INNER JOIN event AS T4 ON T3.link_to_event = T4.event_id GROUP BY T2.member_id HAVING COUNT(DISTINCT T4.event_id) > 1 ORDER BY SUM(T1.cost) DESC LIMIT 1,7,"SELECT m.member_id, m.first_name, m.last_name, SUM(e.cost) AS total_expense FROM member m JOIN expense e ON m.member_id = e.link_to_member GROUP BY m.member_id HAVING COUNT(DISTINCT e.link_to_event) > 1 ORDER BY total_expense DESC LIMIT 1
SELECT m.member_id, m.first_name, m.last_name, SUM(e.cost) AS total_expense FROM member m JOIN expense e ON m.member_id = e.link_to_member GROUP BY m.member_id HAVING COUNT(DISTINCT e.link_to_event) > 1 ORDER BY total_expense DESC LIMIT 1
SELECT m.member_id, m.first_name, m.last_name, SUM(e.cost) AS total_expense FROM member m JOIN expense e ON m.member_id = e.link_to_member GROUP BY m.member_id HAVING COUNT(DISTINCT e.link_to_event) > 1 ORDER BY total_expense DESC LIMIT 1
SELECT m.member_id, m.first_name, m.last_name, SUM(e.cost) AS total_expense FROM member m JOIN expense e ON m.member_id = e.link_to_member GROUP BY m.member_id HAVING COUNT(DISTINCT e.link_to_event) > 1 ORDER BY total_expense DESC LIMIT 1
SELECT m.member_id, m.first_name, m.last_name, SUM(e.cost) AS total_expense FROM member m JOIN expense e ON m.member_id = e.link_to_member GROUP BY m.member_id HAVING COUNT(DISTINCT e.link_to_event) > 1 ORDER BY total_expense DESC LIMIT 1
SELECT m.member_id, m.first_name, m.last_name, SUM(e.cost) AS total_expense FROM member m JOIN expense e ON m.member_id = e.link_to_member GROUP BY m.member_id HAVING COUNT(DISTINCT e.link_to_event) > 1 ORDER BY total_expense DESC LIMIT 1
SELECT m.member_id, m.first_name, m.last_name, SUM(e.cost) AS total_expense FROM member m JOIN expense e ON m.member_id = e.link_to_member GROUP BY m.member_id HAVING COUNT(DISTINCT e.link_to_event) > 1 ORDER BY total_expense DESC LIMIT 1","SELECT m.member_id, m.first_name, m.last_name, SUM(e.cost) AS total_expense FROM member m JOIN expense e ON m.member_id = e.link_to_member GROUP BY m.member_id HAVING COUNT(DISTINCT e.link_to_event) > 1 ORDER BY total_expense DESC LIMIT 1"
153,1187,How many patients who were examined between 1987/7/6 and 1996/1/31 had a GPT level greater than 30 and an ALB level less than 4? List them by their ID.,thrombosis_prediction,moderate,SELECT DISTINCT ID FROM Laboratory WHERE Date BETWEEN '1987-07-06' AND '1996-01-31' AND GPT > 30 AND ALB < 4,7,"SELECT id FROM laboratory WHERE date BETWEEN '1987/7/6' AND '1996/1/31' AND gpt > 30 AND alb < 4 ORDER BY id
SELECT id FROM laboratory WHERE date BETWEEN '1987/7/6' AND '1996/1/31' AND gpt > 30 AND alb < 4 ORDER BY id
SELECT id FROM laboratory WHERE date BETWEEN '1987/7/6' AND '1996/1/31' AND gpt > 30 AND alb < 4 ORDER BY id
SELECT id FROM laboratory WHERE date BETWEEN '1987/7/6' AND '1996/1/31' AND gpt > 30 AND alb < 4 ORDER BY id
SELECT id FROM laboratory WHERE date BETWEEN '1987/7/6' AND '1996/1/31' AND gpt > 30 AND alb < 4 ORDER BY id
SELECT id FROM laboratory WHERE date BETWEEN '1987/7/6' AND '1996/1/31' AND gpt > 30 AND alb < 4 ORDER BY id
SELECT id FROM laboratory WHERE date BETWEEN '1987/7/6' AND '1996/1/31' AND gpt > 30 AND alb < 4 ORDER BY id",SELECT id FROM laboratory WHERE date BETWEEN '1987/7/6' AND '1996/1/31' AND gpt > 30 AND alb < 4 ORDER BY id
154,656,Describe the display name of the parent ID for child post with the highest score.,codebase_community,simple,SELECT DisplayName FROM users WHERE Id = ( SELECT OwnerUserId FROM posts WHERE ParentId IS NOT NULL ORDER BY Score DESC LIMIT 1 ),7,"SELECT p.ownerdisplayname FROM posts p JOIN posts p2 ON p.parentid = p2.id ORDER BY p.score DESC LIMIT 1
SELECT p.ownerdisplayname FROM posts p JOIN posts c ON p.id = c.parentid ORDER BY c.score DESC LIMIT 1
SELECT p.ownerdisplayname FROM posts p JOIN posts c ON p.id = c.parentid ORDER BY c.score DESC LIMIT 1
SELECT p.ownerdisplayname FROM posts p JOIN posts c ON p.id = c.parentid ORDER BY c.score DESC LIMIT 1
SELECT p.ownerdisplayname FROM posts p JOIN posts p2 ON p.parentid = p2.id ORDER BY p.score DESC LIMIT 1
SELECT p.ownerdisplayname FROM posts p JOIN (     SELECT parentid     FROM posts     WHERE posttypeid = 1     ORDER BY score DESC     LIMIT 1 ) AS highest_score_post ON p.id = highest_score_post.parentid
SELECT p.ownerdisplayname FROM posts p JOIN posts c ON p.id = c.parentid ORDER BY c.score DESC LIMIT 1",SELECT p.ownerdisplayname FROM posts p JOIN posts c ON p.id = c.parentid ORDER BY c.score DESC LIMIT 1
155,1031,"At present, calculate for the player's age who have a sprint speed of no less than 97 between 2013 to 2015.",european_football_2,challenging,"SELECT DISTINCT DATETIME() - T2.birthday age FROM Player_Attributes AS t1 INNER JOIN Player AS t2 ON t1.player_api_id = t2.player_api_id WHERE STRFTIME('%Y',t1.`date`) >= '2013' AND STRFTIME('%Y',t1.`date`) <= '2015' AND t1.sprint_speed >= 97",7,"SELECT player.player_name, player.birthday FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.sprint_speed >= 97 AND player_attributes.date BETWEEN '2013-01-01' AND '2015-12-31'
SELECT player.player_name, (strftime('%Y', 'now') - strftime('%Y', player.birthday)) - (strftime('%m-%d', 'now') < strftime('%m-%d', player.birthday)) AS age FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.sprint_speed >= 97 AND strftime('%Y', player_attributes.date) BETWEEN '2013' AND '2015' 
SELECT player.player_name, player.birthday FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.sprint_speed >= 97 AND player_attributes.date BETWEEN '2013-01-01' AND '2015-12-31'
SELECT player.player_name, player.birthday FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.sprint_speed >= 97 AND player_attributes.date BETWEEN '2013-01-01' AND '2015-12-31'
SELECT player.player_name, (strftime('%Y', 'now') - strftime('%Y', player.birthday)) - (strftime('%m-%d', 'now') < strftime('%m-%d', player.birthday)) AS age FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.sprint_speed >= 97 AND strftime('%Y', player_attributes.date) BETWEEN '2013' AND '2015' 
SELECT player.player_name, player.birthday FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.sprint_speed >= 97 AND player_attributes.date BETWEEN '2013-01-01' AND '2015-12-31'
SELECT player.player_name, player.birthday FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.sprint_speed >= 97 AND player_attributes.date BETWEEN '2013-01-01' AND '2015-12-31'","SELECT player.player_name, player.birthday FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.sprint_speed >= 97 AND player_attributes.date BETWEEN '2013-01-01' AND '2015-12-31'"
156,505,"Show the Simplified Chinese translation of the name of the set ""Mirrodin""?",card_games,moderate,SELECT translation FROM set_translations WHERE setCode IN ( SELECT code FROM sets WHERE name = 'Mirrodin' ) AND language = 'Chinese Simplified',7,"SELECT translation FROM set_translations WHERE setcode = 'MRD'
SELECT translation FROM set_translations WHERE setcode = 'MRD'
SELECT translation FROM set_translations WHERE setcode = 'MRD'
SELECT translation FROM set_translations WHERE setcode = 'MRD'
SELECT translation FROM set_translations WHERE setcode = 'MRD'
SELECT translation FROM set_translations WHERE setcode = 'MRD'
SELECT translation FROM set_translations WHERE setcode = 'MRD'",SELECT translation FROM set_translations WHERE setcode = 'MRD'
157,1107,When was the first time did Kevin Constant have his highest crossing score? Give the date.,european_football_2,moderate,"SELECT `date` FROM ( SELECT t2.crossing, t2.`date` FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_fifa_api_id = t2.player_fifa_api_id WHERE t1.player_name = 'Kevin Constant' ORDER BY t2.crossing DESC) ORDER BY date DESC LIMIT 1",7,"SELECT date FROM player_attributes JOIN player ON player_attributes.player_fifa_api_id = player.player_fifa_api_id WHERE player.player_name = 'Kevin Constant' ORDER BY crossing DESC LIMIT 1
SELECT date FROM player_attributes JOIN player ON player_attributes.player_fifa_api_id = player.player_fifa_api_id WHERE player.player_name = 'Kevin Constant' ORDER BY crossing DESC LIMIT 1
SELECT date FROM player_attributes JOIN player ON player_attributes.player_fifa_api_id = player.player_fifa_api_id WHERE player.player_name = 'Kevin Constant' ORDER BY crossing DESC LIMIT 1
SELECT date FROM player_attributes JOIN player ON player_attributes.player_fifa_api_id = player.player_fifa_api_id WHERE player.player_name = 'Kevin Constant' ORDER BY crossing DESC LIMIT 1
SELECT date FROM player_attributes JOIN player ON player_attributes.player_fifa_api_id = player.player_fifa_api_id WHERE player.player_name = 'Kevin Constant' ORDER BY crossing DESC LIMIT 1
SELECT date FROM player_attributes JOIN player ON player_attributes.player_fifa_api_id = player.player_fifa_api_id WHERE player.player_name = 'Kevin Constant' ORDER BY crossing DESC LIMIT 1
SELECT date FROM player_attributes JOIN player ON player_attributes.player_fifa_api_id = player.player_fifa_api_id WHERE player.player_name = 'Kevin Constant' ORDER BY crossing DESC LIMIT 1",SELECT date FROM player_attributes JOIN player ON player_attributes.player_fifa_api_id = player.player_fifa_api_id WHERE player.player_name = 'Kevin Constant' ORDER BY crossing DESC LIMIT 1
158,31,What is the eligible free rate of the 10th and 11th schools with the highest enrolment for students in grades 1 through 12?,california_schools,moderate,"SELECT CAST(`Free Meal Count (K-12)` AS REAL) / `Enrollment (K-12)` FROM frpm ORDER BY `Enrollment (K-12)` DESC LIMIT 9, 2",7,"SELECT ""percent (%) eligible free (k-12)""  FROM schools  WHERE ""school code"" IN (     SELECT ""school code""      FROM schools      ORDER BY ""enrollment (k-12)"" DESC      LIMIT 11 )  AND ""high grade"" >= 12  ORDER BY ""school code""  LIMIT 2
SELECT ""percent (%) eligible free (k-12)""  FROM schools  WHERE ""school code"" IN (     SELECT ""school code""      FROM schools      ORDER BY ""enrollment (k-12)"" DESC      LIMIT 11 )  AND ""high grade"" >= 12  ORDER BY ""school code""  LIMIT 2
SELECT ""percent (%) eligible free (k-12)""  FROM schools  WHERE ""school code"" IN (     SELECT ""school code""      FROM schools      ORDER BY ""enrollment (k-12)"" DESC      LIMIT 11 )  AND ""high grade"" >= 12  ORDER BY ""school code""  LIMIT 2
SELECT ""percent (%) eligible free (k-12)""  FROM schools  WHERE ""school code"" IN (     SELECT ""school code""      FROM schools      ORDER BY ""enrollment (k-12)"" DESC      LIMIT 11 )  AND ""high grade"" >= 12  ORDER BY ""school code""  LIMIT 2
SELECT ""percent (%) eligible free (k-12)""  FROM schools  WHERE ""school code"" IN (     SELECT ""school code""      FROM schools      ORDER BY ""enrollment (k-12)"" DESC      LIMIT 11 )  AND ""high grade"" >= 12  ORDER BY ""school code""  LIMIT 2
SELECT ""percent (%) eligible free (k-12)""  FROM schools  WHERE ""school code"" IN (     SELECT ""school code""      FROM schools      ORDER BY ""enrollment (k-12)"" DESC      LIMIT 11 )  AND ""high grade"" >= 12  ORDER BY ""school code""  LIMIT 2
SELECT ""percent (%) eligible free (k-12)""  FROM schools  WHERE ""school code"" IN (     SELECT ""school code""      FROM schools      ORDER BY ""enrollment (k-12)"" DESC      LIMIT 11 )  AND ""high grade"" >= 12  ORDER BY ""school code""  LIMIT 2","SELECT ""percent (%) eligible free (k-12)""  FROM schools  WHERE ""school code"" IN (     SELECT ""school code""      FROM schools      ORDER BY ""enrollment (k-12)"" DESC      LIMIT 11 )  AND ""high grade"" >= 12  ORDER BY ""school code""  LIMIT 2"
159,394,How many white bordered cards are powerful?,card_games,simple,SELECT COUNT(id) FROM cards WHERE borderColor = 'white' AND cardKingdomId IS NOT NULL AND cardKingdomFoilId IS NOT NULL,7,"SELECT COUNT(*) FROM cards WHERE bordercolor = 'white' AND power > 0
SELECT COUNT(*) FROM cards WHERE bordercolor = 'white' AND power > 0
SELECT COUNT(*) FROM cards WHERE bordercolor = 'white' AND power > 0
SELECT COUNT(*) FROM cards WHERE bordercolor = 'white' AND power > 0
SELECT COUNT(*) FROM cards WHERE bordercolor = 'white' AND power > 0
SELECT COUNT(*) FROM cards WHERE bordercolor = 'white' AND power > 0
SELECT COUNT(*) FROM cards WHERE bordercolor = 'white' AND power > 0",SELECT COUNT(*) FROM cards WHERE bordercolor = 'white' AND power > 0
160,230,What are the elements of the toxicology and label of molecule TR060?,toxicology,challenging,"SELECT DISTINCT T1.element, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR060'",7,"SELECT atom.atom_id, atom.molecule_id, atom.element, bond.bond_id, bond.molecule_id, bond.bond_type, connected.atom_id, connected.atom_id2, connected.bond_id, molecule.molecule_id, molecule.label FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id JOIN connected ON atom.atom_id = connected.atom_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR060'
SELECT atom.atom_id, atom.molecule_id, atom.element, bond.bond_id, bond.molecule_id, bond.bond_type, connected.atom_id, connected.atom_id2, connected.bond_id, molecule.molecule_id, molecule.label FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id JOIN connected ON atom.atom_id = connected.atom_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR060'
SELECT atom.atom_id, atom.molecule_id, atom.element, bond.bond_id, bond.molecule_id, bond.bond_type, connected.atom_id, connected.atom_id2, connected.bond_id, molecule.molecule_id, molecule.label FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id JOIN connected ON atom.atom_id = connected.atom_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR060'
SELECT atom.atom_id, atom.molecule_id, atom.element, bond.bond_id, bond.molecule_id, bond.bond_type, connected.atom_id, connected.atom_id2, connected.bond_id, molecule.molecule_id, molecule.label FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id JOIN connected ON atom.atom_id = connected.atom_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR060'
SELECT atom.atom_id, atom.molecule_id, atom.element, bond.bond_id, bond.molecule_id, bond.bond_type, connected.atom_id, connected.atom_id2, connected.bond_id, molecule.molecule_id, molecule.label FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id JOIN connected ON atom.atom_id = connected.atom_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR060'
SELECT atom.atom_id, atom.molecule_id, atom.element, bond.bond_id, bond.molecule_id, bond.bond_type, connected.atom_id, connected.atom_id2, connected.bond_id, molecule.molecule_id, molecule.label FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id JOIN connected ON atom.atom_id = connected.atom_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR060'
SELECT atom.atom_id, atom.molecule_id, atom.element, bond.bond_id, bond.molecule_id, bond.bond_type, connected.atom_id, connected.atom_id2, connected.bond_id, molecule.molecule_id, molecule.label FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id JOIN connected ON atom.atom_id = connected.atom_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR060'","SELECT atom.atom_id, atom.molecule_id, atom.element, bond.bond_id, bond.molecule_id, bond.bond_type, connected.atom_id, connected.atom_id2, connected.bond_id, molecule.molecule_id, molecule.label FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id JOIN connected ON atom.atom_id = connected.atom_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR060'"
161,715,"In comments with score between 1 to 5, list down the display names of the users with 0 down votes.",codebase_community,simple,SELECT T2.DisplayName FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Score BETWEEN 1 AND 5 AND T2.DownVotes = 0,7,"SELECT DISTINCT users.displayname FROM comments JOIN users ON comments.userid = users.id WHERE comments.score BETWEEN 1 AND 5 AND users.downvotes = 0
SELECT DISTINCT users.displayname FROM comments JOIN users ON comments.userid = users.id WHERE comments.score BETWEEN 1 AND 5 AND users.downvotes = 0
SELECT DISTINCT users.displayname FROM comments JOIN users ON comments.userid = users.id WHERE comments.score BETWEEN 1 AND 5 AND users.downvotes = 0
SELECT DISTINCT users.displayname FROM comments JOIN users ON comments.userid = users.id WHERE comments.score BETWEEN 1 AND 5 AND users.downvotes = 0
SELECT DISTINCT u.displayname FROM users u JOIN comments c ON u.id = c.userid WHERE c.score BETWEEN 1 AND 5 AND u.downvotes = 0
SELECT DISTINCT users.displayname FROM comments JOIN users ON comments.userid = users.id WHERE comments.score BETWEEN 1 AND 5 AND users.downvotes = 0
SELECT DISTINCT users.displayname FROM comments JOIN users ON comments.userid = users.id WHERE comments.score BETWEEN 1 AND 5 AND users.downvotes = 0",SELECT DISTINCT users.displayname FROM comments JOIN users ON comments.userid = users.id WHERE comments.score BETWEEN 1 AND 5 AND users.downvotes = 0
162,207,What elements are in a double type bond?,toxicology,challenging,SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id WHERE T2.bond_type = '=',7,"SELECT a.atom_id, a.molecule_id, a.element, b.bond_id, b.molecule_id, b.bond_type, c.atom_id, c.atom_id2, c.bond_id, m.molecule_id, m.label FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE b.bond_type = 'double'
SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'double'
SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'double'
SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'double'
SELECT a.atom_id, a.molecule_id, a.element, b.bond_id, b.molecule_id, b.bond_type, c.atom_id, c.atom_id2, c.bond_id, m.molecule_id, m.label FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE b.bond_type = 'double'
SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'double'
SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'double'",SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'double'
163,494,For all cards illustrated by Jim Pavelec. and describe the text of the ruling of these cards. Do these cards have missing or degraded properties and values.,card_games,challenging,"SELECT T2.text , CASE WHEN T1.hasContentWarning = 1 THEN 'YES' ELSE 'NO' END FROM cards AS T1 INNER JOIN rulings AS T2 ON T2.uuid = T1.uuid WHERE T1.artist = 'Jim Pavelec'",7,"SELECT * FROM cards WHERE artist = 'Jim Pavelec'
SELECT * FROM cards WHERE artist = 'Jim Pavelec'
SELECT * FROM cards WHERE artist = 'Jim Pavelec'
SELECT * FROM cards WHERE artist = 'Jim Pavelec'
SELECT * FROM cards WHERE artist = 'Jim Pavelec'
SELECT * FROM cards WHERE artist = 'Jim Pavelec'
SELECT * FROM cards WHERE artist = 'Jim Pavelec'",SELECT * FROM cards WHERE artist = 'Jim Pavelec'
164,240,"List all the elements of the toxicology of the molecule ""TR004"".",toxicology,challenging,SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR004',7,"SELECT atom.atom_id, atom.molecule_id, atom.element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR004'
SELECT atom.atom_id, atom.molecule_id, atom.element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR004'
SELECT atom.atom_id, atom.molecule_id, atom.element, bond.bond_id, bond.molecule_id, bond.bond_type, connected.atom_id2, connected.bond_id, molecule.label FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id JOIN connected ON atom.atom_id = connected.atom_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR004'
SELECT atom.atom_id, atom.molecule_id, atom.element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR004'
SELECT atom.atom_id, atom.molecule_id, atom.element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR004'
SELECT atom.atom_id, atom.molecule_id, atom.element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR004'
SELECT atom.atom_id, atom.molecule_id, atom.element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR004'","SELECT atom.atom_id, atom.molecule_id, atom.element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR004'"
165,818,"Among the bad superheroes, what is the percentage of female superheroes?",superhero,challenging,SELECT CAST(COUNT(CASE WHEN T3.gender = 'Female' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.alignment = 'Bad',7,"SELECT (COUNT(DISTINCT CASE WHEN gender_id = (SELECT id FROM gender WHERE gender = 'Female') THEN superhero.id END) * 1.0 / COUNT(DISTINCT superhero.id)) * 100 AS percentage_female_bad_superheroes FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'bad'
SELECT (SELECT COUNT(*) FROM superhero WHERE gender_id IN (SELECT id FROM gender WHERE gender = 'Female') AND alignment_id IN (SELECT id FROM alignment WHERE alignment = 'Bad')) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE alignment_id IN (SELECT id FROM alignment WHERE alignment = 'Bad')) AS percentage_female_bad_superheroes
SELECT (COUNT(DISTINCT CASE WHEN gender_id = (SELECT id FROM gender WHERE gender = 'Female') THEN superhero.id END) * 1.0 / COUNT(DISTINCT superhero.id)) * 100 AS percentage_female_bad_superheroes FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'bad'
SELECT (SELECT COUNT(*) FROM superhero WHERE gender_id IN (SELECT id FROM gender WHERE gender = 'Female') AND alignment_id IN (SELECT id FROM alignment WHERE alignment = 'Bad')) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE alignment_id IN (SELECT id FROM alignment WHERE alignment = 'Bad')) AS percentage_female_bad_superheroes
SELECT (COUNT(DISTINCT CASE WHEN gender_id = (SELECT id FROM gender WHERE gender = 'Female') THEN superhero.id END) * 1.0 / COUNT(DISTINCT superhero.id)) * 100 AS percentage_female_bad_superheroes FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'bad'
SELECT (SELECT COUNT(*) FROM superhero WHERE gender_id IN (SELECT id FROM gender WHERE gender = 'Female') AND alignment_id IN (SELECT id FROM alignment WHERE alignment = 'Bad')) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE alignment_id IN (SELECT id FROM alignment WHERE alignment = 'Bad')) AS percentage_female_bad_superheroes
SELECT (SELECT COUNT(*) FROM superhero WHERE gender_id IN (SELECT id FROM gender WHERE gender = 'Female') AND alignment_id IN (SELECT id FROM alignment WHERE alignment = 'Bad')) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE alignment_id IN (SELECT id FROM alignment WHERE alignment = 'Bad')) AS percentage_female_bad_superheroes",SELECT (SELECT COUNT(*) FROM superhero WHERE gender_id IN (SELECT id FROM gender WHERE gender = 'Female') AND alignment_id IN (SELECT id FROM alignment WHERE alignment = 'Bad')) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE alignment_id IN (SELECT id FROM alignment WHERE alignment = 'Bad')) AS percentage_female_bad_superheroes
166,1507,Please list the disparate time of the transactions taken place in the gas stations from chain no. 11.,debit_card_specializing,simple,SELECT DISTINCT T1.Time FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.ChainID = 11,7,"SELECT time FROM transactions_1k WHERE gasstationid IN (SELECT gasstationid FROM gasstations WHERE chainid = 11)
SELECT time FROM transactions_1k WHERE gasstationid IN (SELECT gasstationid FROM gasstations WHERE chainid = 11)
SELECT time FROM transactions_1k WHERE gasstationid IN (SELECT gasstationid FROM gasstations WHERE chainid = 11)
SELECT time FROM transactions_1k WHERE gasstationid IN (SELECT gasstationid FROM gasstations WHERE chainid = 11)
SELECT time FROM transactions_1k WHERE gasstationid IN (SELECT gasstationid FROM gasstations WHERE chainid = 11)
SELECT time FROM transactions_1k WHERE gasstationid IN (SELECT gasstationid FROM gasstations WHERE chainid = 11)
SELECT time FROM transactions_1k WHERE gasstationid IN (SELECT gasstationid FROM gasstations WHERE chainid = 11)",SELECT time FROM transactions_1k WHERE gasstationid IN (SELECT gasstationid FROM gasstations WHERE chainid = 11)
167,935,How many drivers managed to finish the race in the 2008 Australian Grand Prix?,formula_1,simple,SELECT COUNT(T2.driverId) FROM races AS T1 INNER JOIN results AS T2 ON T2.raceId = T1.raceId WHERE T1.name = 'Australian Grand Prix' AND T1.year = 2008 AND T2.time IS NOT NULL,7,"SELECT COUNT(*) FROM results WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix')
SELECT COUNT(*) FROM results WHERE raceid IN (SELECT raceid FROM races WHERE name = '2008 Australian Grand Prix')
SELECT COUNT(*) FROM results WHERE raceid IN (SELECT raceid FROM races WHERE name = '2008 Australian Grand Prix')
SELECT COUNT(*) FROM results WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix')
SELECT COUNT(*) FROM results WHERE raceid IN (SELECT raceid FROM races WHERE name = '2008 Australian Grand Prix')
SELECT COUNT(*) FROM results WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix')
SELECT COUNT(*) FROM results WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix')",SELECT COUNT(*) FROM results WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix')
168,834,"Among all superheroes created by George Lucas, identify the percentage of female superheroes.",superhero,challenging,SELECT CAST(COUNT(CASE WHEN T3.gender = 'Female' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.publisher_name = 'George Lucas',7,"SELECT (COUNT(DISTINCT s.id) FILTER (WHERE g.gender = 'Female')) * 100.0 / COUNT(DISTINCT s.id) AS female_percentage FROM superhero s JOIN gender g ON s.gender_id = g.id WHERE s.publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'George Lucas')
SELECT (COUNT(DISTINCT s.id) FILTER (WHERE g.gender = 'Female')) * 100.0 / COUNT(DISTINCT s.id) AS female_percentage FROM superhero s JOIN gender g ON s.gender_id = g.id WHERE s.publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'George Lucas')
SELECT (COUNT(DISTINCT s.id) FILTER (WHERE g.gender = 'Female')) * 100.0 / COUNT(DISTINCT s.id) AS female_percentage FROM superhero s JOIN gender g ON s.gender_id = g.id WHERE s.publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'George Lucas')
SELECT (COUNT(DISTINCT s.id) FILTER (WHERE g.gender = 'Female')) * 100.0 / COUNT(DISTINCT s.id) AS female_percentage FROM superhero s JOIN gender g ON s.gender_id = g.id WHERE s.publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'George Lucas')
SELECT (COUNT(DISTINCT s.id) FILTER (WHERE g.gender = 'Female')) * 100.0 / COUNT(DISTINCT s.id) AS female_percentage FROM superhero s JOIN gender g ON s.gender_id = g.id WHERE s.publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'George Lucas')
SELECT (COUNT(DISTINCT s.id) FILTER (WHERE g.gender = 'Female')) * 100.0 / COUNT(DISTINCT s.id) AS female_percentage FROM superhero s JOIN gender g ON s.gender_id = g.id WHERE s.publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'George Lucas')
SELECT (COUNT(DISTINCT s.id) FILTER (WHERE g.gender = 'Female')) * 100.0 / COUNT(DISTINCT s.id) AS female_percentage FROM superhero s JOIN gender g ON s.gender_id = g.id WHERE s.publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'George Lucas')",SELECT (COUNT(DISTINCT s.id) FILTER (WHERE g.gender = 'Female')) * 100.0 / COUNT(DISTINCT s.id) AS female_percentage FROM superhero s JOIN gender g ON s.gender_id = g.id WHERE s.publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'George Lucas')
169,1040,List the top 10 players' names whose heights are above 180 in descending order of average heading accuracy.,european_football_2,moderate,SELECT t1.player_name FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.height > 180 GROUP BY t1.id ORDER BY CAST(SUM(t2.heading_accuracy) AS REAL) / COUNT(t2.`player_fifa_api_id`) DESC LIMIT 10,7,"SELECT p.player_name FROM player p JOIN player_attributes pa ON p.player_api_id = pa.player_api_id WHERE p.height > 180 ORDER BY pa.heading_accuracy DESC LIMIT 10
SELECT player.player_name FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.heading_accuracy > 0 ORDER BY player_attributes.heading_accuracy DESC LIMIT 10
SELECT p.player_name FROM player p JOIN player_attributes pa ON p.player_api_id = pa.player_api_id WHERE p.height > 180 ORDER BY pa.heading_accuracy DESC LIMIT 10
SELECT p.player_name FROM player p JOIN player_attributes pa ON p.player_api_id = pa.player_api_id WHERE p.height > 180 ORDER BY pa.heading_accuracy DESC LIMIT 10
SELECT p.player_name FROM player p JOIN player_attributes pa ON p.player_api_id = pa.player_api_id WHERE p.height > 180 ORDER BY pa.heading_accuracy DESC LIMIT 10
SELECT p.player_name FROM player p JOIN player_attributes pa ON p.player_api_id = pa.player_api_id WHERE p.height > 180 ORDER BY pa.heading_accuracy DESC LIMIT 10
SELECT p.player_name FROM player p JOIN player_attributes pa ON p.player_api_id = pa.player_api_id WHERE p.height > 180 ORDER BY pa.heading_accuracy DESC LIMIT 10",SELECT p.player_name FROM player p JOIN player_attributes pa ON p.player_api_id = pa.player_api_id WHERE p.height > 180 ORDER BY pa.heading_accuracy DESC LIMIT 10
170,744,"Between DC and Marvel Comics, which publisher has published more superheroes? Find the difference in the number of superheroes they have published.",superhero,challenging,SELECT SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id,7,"SELECT      (SELECT publisher_name FROM publisher WHERE id = (SELECT publisher_id FROM superhero WHERE id IN (SELECT hero_id FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'superhero')))) AS Publisher,     COUNT(*) AS NumberOfSuperheroes FROM superhero GROUP BY publisher_id ORDER BY NumberOfSuperheroes DESC LIMIT 1
SELECT      (SELECT publisher_name FROM publisher WHERE id = (SELECT publisher_id FROM superhero WHERE id IN (SELECT hero_id FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'superhero')))) AS Publisher,     COUNT(*) AS NumberOfSuperheroes FROM superhero GROUP BY publisher_id ORDER BY NumberOfSuperheroes DESC LIMIT 1
SELECT      (SELECT publisher_name FROM publisher WHERE id = (SELECT publisher_id FROM superhero WHERE id IN (SELECT hero_id FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'superhero')))) AS Publisher,     COUNT(*) AS NumberOfSuperheroes FROM superhero GROUP BY publisher_id ORDER BY NumberOfSuperheroes DESC LIMIT 1
SELECT      p1.publisher_name AS DC,      COUNT(s1.id) AS DC_Count,      p2.publisher_name AS Marvel,      COUNT(s2.id) AS Marvel_Count FROM      superhero s1 RIGHT JOIN      publisher p1 ON s1.publisher_id = p1.id AND p1.publisher_name = 'DC' LEFT JOIN      superhero s2 ON s2.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel') GROUP BY      p1.publisher_name UNION SELECT      p2.publisher_name AS Marvel,      COUNT(s2.id) AS Marvel_Count,      p1.publisher_name AS DC,      COUNT(s1.id) AS DC_Count FROM      superhero s2 RIGHT JOIN      publisher p2 ON s2.publisher_id = p2.id AND p2.publisher_name = 'Marvel' LEFT JOIN      superhero s1 ON s1.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC') GROUP BY      p2.publisher_name
SELECT      (SELECT publisher_name FROM publisher WHERE id = (SELECT publisher_id FROM superhero WHERE id IN (SELECT hero_id FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'superhero')))) AS Publisher,     COUNT(*) AS NumberOfSuperheroes FROM superhero GROUP BY publisher_id ORDER BY NumberOfSuperheroes DESC LIMIT 1
SELECT      (SELECT publisher_name FROM publisher WHERE id = (SELECT publisher_id FROM superhero WHERE id IN (SELECT hero_id FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'superhero')))) AS Publisher,     COUNT(*) AS NumberOfSuperheroes FROM superhero GROUP BY publisher_id ORDER BY NumberOfSuperheroes DESC LIMIT 1
SELECT      (SELECT publisher_name FROM publisher WHERE id = (SELECT publisher_id FROM superhero WHERE id IN (SELECT hero_id FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'superhero')))) AS Publisher,     COUNT(*) AS NumberOfSuperheroes FROM superhero GROUP BY publisher_id ORDER BY NumberOfSuperheroes DESC LIMIT 1","SELECT      (SELECT publisher_name FROM publisher WHERE id = (SELECT publisher_id FROM superhero WHERE id IN (SELECT hero_id FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'superhero')))) AS Publisher,     COUNT(*) AS NumberOfSuperheroes FROM superhero GROUP BY publisher_id ORDER BY NumberOfSuperheroes DESC LIMIT 1"
171,1457,Give the full name and contact number of members who had to spend more than average on each expense.,student_club,challenging,"SELECT DISTINCT T3.first_name, T3.last_name, T3.phone FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN member AS T3 ON T3.member_id = T1.link_to_member WHERE T1.cost > ( SELECT AVG(T1.cost) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN member AS T3 ON T3.member_id = T1.link_to_member )",7,"SELECT m.first_name || ' ' || m.last_name AS full_name, m.phone AS contact_number FROM member m JOIN expense e ON m.member_id = e.link_to_member GROUP BY m.member_id HAVING e.cost > (SELECT AVG(cost) FROM expense WHERE link_to_member = m.member_id)
SELECT m.first_name || ' ' || m.last_name AS full_name, m.phone AS contact_number FROM member m JOIN expense e ON m.member_id = e.link_to_member GROUP BY m.member_id HAVING e.cost > (SELECT AVG(cost) FROM expense WHERE link_to_member = m.member_id)
SELECT m.first_name || ' ' || m.last_name AS full_name, m.phone AS contact_number FROM member m JOIN expense e ON m.member_id = e.link_to_member GROUP BY m.member_id HAVING e.cost > (SELECT AVG(cost) FROM expense WHERE link_to_member = m.member_id)
SELECT m.first_name || ' ' || m.last_name AS full_name, m.phone AS contact_number FROM member m JOIN expense e ON m.member_id = e.link_to_member GROUP BY m.member_id HAVING e.cost > (SELECT AVG(cost) FROM expense WHERE link_to_member = m.member_id)
SELECT m.first_name || ' ' || m.last_name AS full_name, m.phone AS contact_number FROM member m JOIN expense e ON m.member_id = e.link_to_member GROUP BY m.member_id HAVING e.cost > (SELECT AVG(cost) FROM expense WHERE link_to_member = m.member_id)
SELECT m.first_name || ' ' || m.last_name AS full_name, m.phone AS contact_number FROM member m JOIN expense e ON m.member_id = e.link_to_member GROUP BY m.member_id HAVING e.cost > (SELECT AVG(cost) FROM expense WHERE link_to_member = m.member_id)
SELECT m.first_name || ' ' || m.last_name AS full_name, m.phone AS contact_number FROM member m JOIN expense e ON m.member_id = e.link_to_member GROUP BY m.member_id HAVING e.cost > (SELECT AVG(cost) FROM expense WHERE link_to_member = m.member_id)","SELECT m.first_name || ' ' || m.last_name AS full_name, m.phone AS contact_number FROM member m JOIN expense e ON m.member_id = e.link_to_member GROUP BY m.member_id HAVING e.cost > (SELECT AVG(cost) FROM expense WHERE link_to_member = m.member_id)"
172,1036,List the long name of teams with above-average build-up play passing in 2012.,european_football_2,challenging,"SELECT DISTINCT t4.team_long_name FROM Team_Attributes AS t3 INNER JOIN Team AS t4 ON t3.team_api_id = t4.team_api_id WHERE SUBSTR(t3.`date`, 1, 4) = '2012' AND t3.buildUpPlayPassing > ( SELECT CAST(SUM(t2.buildUpPlayPassing) AS REAL) / COUNT(t1.id) FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE STRFTIME('%Y',t2.`date`) = '2012')",7,"SELECT team_long_name  FROM team  JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id  WHERE team_attributes.date LIKE '2012%'  AND team_attributes.buildupplaypassing > (SELECT AVG(buildupplaypassing) FROM team_attributes WHERE date LIKE '2012%')
SELECT team_long_name  FROM team  JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id  WHERE team_attributes.date = '2012-01-01'  AND team_attributes.buildupplaypassing > (SELECT AVG(buildupplaypassing) FROM team_attributes WHERE date = '2012-01-01') 
SELECT team_long_name  FROM team  JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id  WHERE team_attributes.date LIKE '2012%'  AND team_attributes.buildupplaypassing > (SELECT AVG(buildupplaypassing) FROM team_attributes WHERE date LIKE '2012%')
SELECT team_long_name  FROM team  JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id  WHERE team_attributes.date LIKE '2012%'  AND team_attributes.buildupplaypassing > (SELECT AVG(buildupplaypassing) FROM team_attributes WHERE date LIKE '2012%')
SELECT team_long_name  FROM team  JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id  WHERE team_attributes.date LIKE '2012%'  AND team_attributes.buildupplaypassing > (SELECT AVG(buildupplaypassing) FROM team_attributes WHERE date LIKE '2012%')
SELECT team_long_name  FROM team  JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id  WHERE team_attributes.date LIKE '2012%'  AND team_attributes.buildupplaypassing > (SELECT AVG(buildupplaypassing) FROM team_attributes WHERE date LIKE '2012%')
SELECT team_long_name  FROM team  JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id  WHERE team_attributes.date = '2012-01-01'  AND team_attributes.buildupplaypassing > (SELECT AVG(buildupplaypassing) FROM team_attributes WHERE date = '2012-01-01') ",SELECT team_long_name  FROM team  JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id  WHERE team_attributes.date LIKE '2012%'  AND team_attributes.buildupplaypassing > (SELECT AVG(buildupplaypassing) FROM team_attributes WHERE date LIKE '2012%')
173,781,Provide the heights of the heroes whose eye colours are amber.,superhero,simple,SELECT T1.height_cm FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Amber',7,"SELECT superhero.height_cm  FROM superhero  WHERE superhero.eye_colour_id IN (     SELECT colour.id      FROM colour      WHERE colour.colour = 'amber' )
SELECT height_cm FROM superhero WHERE eye_colour_id IN (SELECT id FROM colour WHERE colour = 'amber')
SELECT height_cm FROM superhero WHERE eye_colour_id IN (SELECT id FROM colour WHERE colour = 'amber')
SELECT superhero.height_cm  FROM superhero  WHERE superhero.eye_colour_id IN (     SELECT colour.id      FROM colour      WHERE colour.colour = 'amber' )
SELECT height_cm FROM superhero WHERE eye_colour_id IN (SELECT id FROM colour WHERE colour = 'amber')
SELECT height_cm FROM superhero WHERE eye_colour_id IN (SELECT id FROM colour WHERE colour = 'amber')
SELECT height_cm FROM superhero WHERE eye_colour_id IN (SELECT id FROM colour WHERE colour = 'amber')",SELECT height_cm FROM superhero WHERE eye_colour_id IN (SELECT id FROM colour WHERE colour = 'amber')
174,479,"Among the cards with converted mana cost higher than 5 in the set Coldsnap, how many of them have unknown power?",card_games,moderate,SELECT SUM(CASE WHEN T1.power LIKE '*' OR T1.power IS NULL THEN 1 ELSE 0 END) FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE T2.name = 'Coldsnap' AND T1.convertedManaCost > 5,7,"SELECT COUNT(*) FROM cards WHERE convertedmanacost > 5 AND power IS NULL
SELECT COUNT(*) FROM cards WHERE convertedmanacost > 5 AND power IS NULL
SELECT COUNT(*) FROM cards WHERE convertedmanacost > 5 AND power IS NULL
SELECT COUNT(*) FROM cards WHERE convertedmanacost > 5 AND power IS NULL
SELECT COUNT(*) FROM cards WHERE convertedmanacost > 5 AND power IS NULL
SELECT COUNT(*) FROM cards WHERE convertedmanacost > 5 AND power IS NULL
SELECT COUNT(*) FROM cards WHERE convertedmanacost > 5 AND power IS NULL",SELECT COUNT(*) FROM cards WHERE convertedmanacost > 5 AND power IS NULL
175,115,"For the branch which located in the south Bohemia with biggest number of inhabitants, what is the percentage of the male clients?",financial,challenging,SELECT CAST(SUM(T1.gender = 'M') AS REAL) * 100 / COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A3 = 'south Bohemia' GROUP BY T2.A4 ORDER BY T2.A4 DESC LIMIT 1,7,"SELECT d.a2 AS district_name, COUNT(c.client_id) AS total_clients, SUM(CASE WHEN c.gender = 'M' THEN 1 ELSE 0 END) AS male_clients, (SUM(CASE WHEN c.gender = 'M' THEN 1 ELSE 0 END) * 100.0 / COUNT(c.client_id)) AS male_client_percentage FROM client c JOIN district d ON c.district_id = d.district_id WHERE d.a4 = 'South Bohemia' GROUP BY d.district_id ORDER BY total_clients DESC LIMIT 1
SELECT d.a2 AS district_name, COUNT(c.client_id) AS total_clients,         SUM(CASE WHEN c.gender = 'M' THEN 1 ELSE 0 END) AS male_clients,        (SUM(CASE WHEN c.gender = 'M' THEN 1 ELSE 0 END) * 100.0 / COUNT(c.client_id)) AS male_client_percentage FROM district d JOIN client c ON d.district_id = c.district_id WHERE d.a1 = 'south Bohemia' GROUP BY d.district_id ORDER BY total_clients DESC LIMIT 1
SELECT d.a2 AS district, COUNT(c.client_id) AS total_clients, SUM(CASE WHEN c.gender = 'M' THEN 1 ELSE 0 END) AS male_clients, (SUM(CASE WHEN c.gender = 'M' THEN 1 ELSE 0 END) * 100.0 / COUNT(c.client_id)) AS male_percentage FROM district d JOIN client c ON d.district_id = c.district_id WHERE d.a3 = 'south Bohemia' GROUP BY d.district_id ORDER BY total_clients DESC LIMIT 1
SELECT d.a2 AS district, COUNT(c.client_id) AS total_clients, SUM(CASE WHEN c.gender = 'M' THEN 1 ELSE 0 END) AS male_clients, (SUM(CASE WHEN c.gender = 'M' THEN 1 ELSE 0 END) * 100.0 / COUNT(c.client_id)) AS male_percentage FROM district d JOIN client c ON d.district_id = c.district_id WHERE d.a3 = 'south Bohemia' GROUP BY d.district_id ORDER BY total_clients DESC LIMIT 1
SELECT d.a2 AS district, COUNT(c.client_id) AS total_clients, SUM(CASE WHEN c.gender = 'M' THEN 1 ELSE 0 END) AS male_clients, (SUM(CASE WHEN c.gender = 'M' THEN 1 ELSE 0 END) * 100.0 / COUNT(c.client_id)) AS male_percentage FROM district d JOIN client c ON d.district_id = c.district_id WHERE d.a3 = 'south Bohemia' GROUP BY d.district_id ORDER BY total_clients DESC LIMIT 1
SELECT d.a2 AS district_name, COUNT(c.client_id) AS total_inhabitants, SUM(CASE WHEN c.gender = 'M' THEN 1 ELSE 0 END) AS male_inhabitants, (SUM(CASE WHEN c.gender = 'M' THEN 1 ELSE 0 END) * 100.0 / COUNT(c.client_id)) AS percentage_male_inhabitants FROM district d JOIN client c ON d.district_id = c.district_id WHERE d.a4 = 'South Bohemia' GROUP BY d.district_id ORDER BY total_inhabitants DESC LIMIT 1
SELECT d.a2 AS district, COUNT(c.client_id) AS total_clients, SUM(CASE WHEN c.gender = 'M' THEN 1 ELSE 0 END) AS male_clients, (SUM(CASE WHEN c.gender = 'M' THEN 1 ELSE 0 END) * 100.0 / COUNT(c.client_id)) AS male_percentage FROM district d JOIN client c ON d.district_id = c.district_id WHERE d.a3 = 'south Bohemia' GROUP BY d.district_id ORDER BY total_clients DESC LIMIT 1","SELECT d.a2 AS district, COUNT(c.client_id) AS total_clients, SUM(CASE WHEN c.gender = 'M' THEN 1 ELSE 0 END) AS male_clients, (SUM(CASE WHEN c.gender = 'M' THEN 1 ELSE 0 END) * 100.0 / COUNT(c.client_id)) AS male_percentage FROM district d JOIN client c ON d.district_id = c.district_id WHERE d.a3 = 'south Bohemia' GROUP BY d.district_id ORDER BY total_clients DESC LIMIT 1"
176,955,"What is the average time in seconds of champion for each year, before year 1975?",formula_1,challenging,"WITH time_in_seconds AS ( SELECT T2.year, T2.raceId, T1.positionOrder, CASE WHEN T1.positionOrder = 1 THEN (CAST(SUBSTR(T1.time, 1, 1) AS REAL) * 3600) + (CAST(SUBSTR(T1.time, 3, 2) AS REAL) * 60) + CAST(SUBSTR(T1.time, 6,2) AS REAL )   + CAST(SUBSTR(T1.time, 9) AS REAL)/1000 ELSE 0 END AS time_seconds FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.time IS NOT NULL ), champion_time AS ( SELECT year, raceId, time_seconds FROM time_in_seconds WHERE positionOrder = 1 ) SELECT year, AVG(time_seconds) FROM champion_time WHERE year < 1975 GROUP BY year HAVING AVG(time_seconds) IS NOT NULL",7,"SELECT year, AVG(time) AS average_time_seconds FROM races WHERE year < 1975 GROUP BY year
SELECT year, AVG(time) AS average_time_seconds FROM races WHERE year < 1975 GROUP BY year
SELECT year, AVG(time) AS average_time_seconds FROM races WHERE year < 1975 GROUP BY year
SELECT year, AVG(time) AS average_time_seconds FROM races WHERE year < 1975 GROUP BY year
SELECT year, AVG(time) AS average_time_seconds FROM races WHERE year < 1975 GROUP BY year
SELECT year, AVG(time) AS average_time_seconds FROM races WHERE year < 1975 GROUP BY year
SELECT year, AVG(time) AS average_time_seconds FROM races WHERE year < 1975 GROUP BY year","SELECT year, AVG(time) AS average_time_seconds FROM races WHERE year < 1975 GROUP BY year"
177,1047,What is the football player Francois Affolter header's finishing rate on 18/09/2014?,european_football_2,moderate,"SELECT t2.heading_accuracy FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.player_name = 'Francois Affolter' AND SUBSTR(t2.`date`, 1, 10) = '2014-09-18'",7,"SELECT heading_accuracy, finishing FROM player_attributes WHERE player_fifa_api_id IN (     SELECT player_fifa_api_id     FROM player     WHERE player_name = 'Francois Affolter' ) AND date = '2014-09-18'
SELECT heading_accuracy, finishing FROM player_attributes WHERE player_fifa_api_id IN (     SELECT player_fifa_api_id     FROM player     WHERE player_name = 'Francois Affolter' ) AND date = '2014-09-18'
SELECT AVG(heading_accuracy) AS average_heading_accuracy FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id JOIN match ON player.player_api_id = match.home_player_x1 OR player.player_api_id = match.home_player_x2 OR player.player_api_id = match.home_player_x3 OR player.player_api_id = match.home_player_x4 OR player.player_api_id = match.home_player_x5 OR player.player_api_id = match.home_player_x6 OR player.player_api_id = match.home_player_x7 OR player.player_api_id = match.home_player_x8 OR player.player_api_id = match.home_player_x9 OR player.player_api_id = match.home_player_x10 OR player.player_api_id = match.home_player_x11 OR player.player_api_id = match.away_player_x1 OR player.player_api_id = match.away_player_x2 OR player.player_api_id = match.away_player_x3 OR player.player_api_id = match.away_player_
SELECT heading_accuracy  FROM player_attributes  WHERE player_fifa_api_id IN (     SELECT player_fifa_api_id      FROM player      WHERE player_name = 'Francois Affolter' ) AND date = '2014-09-18'
SELECT heading_accuracy, finishing  FROM player_attributes  WHERE player_fifa_api_id IN (     SELECT player_fifa_api_id      FROM player      WHERE player_name = 'Francois Affolter' ) AND date = '2014-09-18'
SELECT heading_accuracy  FROM player_attributes  WHERE player_fifa_api_id IN (     SELECT player_fifa_api_id      FROM player      WHERE player_name = 'Francois Affolter' ) AND date = '2014-09-18'
SELECT heading_accuracy, finishing  FROM player_attributes  WHERE player_fifa_api_id IN (     SELECT player_fifa_api_id      FROM player      WHERE player_name = 'Francois Affolter' ) AND date = '2014-09-18'","SELECT heading_accuracy, finishing FROM player_attributes WHERE player_fifa_api_id IN (     SELECT player_fifa_api_id     FROM player     WHERE player_name = 'Francois Affolter' ) AND date = '2014-09-18'"
178,998,"In terms of number of points acquired, how many victories did the driver who ranked 91st acquired?",formula_1,simple,SELECT SUM(CASE WHEN points = 91 THEN wins ELSE 0 END) FROM driverStandings,7,"SELECT wins FROM driverstandings JOIN drivers ON driverstandings.driverid = drivers.driverid WHERE drivers.number = 91
SELECT wins FROM driverstandings JOIN drivers ON driverstandings.driverid = drivers.driverid WHERE drivers.number = 91
SELECT wins FROM driverstandings JOIN drivers ON driverstandings.driverid = drivers.driverid WHERE drivers.number = 91
SELECT wins FROM driverstandings JOIN drivers ON driverstandings.driverid = drivers.driverid WHERE drivers.number = 91
SELECT wins FROM driverstandings JOIN drivers ON driverstandings.driverid = drivers.driverid WHERE drivers.number = 91
SELECT wins FROM driverstandings JOIN drivers ON driverstandings.driverid = drivers.driverid WHERE drivers.number = 91
SELECT wins FROM driverstandings JOIN drivers ON driverstandings.driverid = drivers.driverid WHERE drivers.number = 91",SELECT wins FROM driverstandings JOIN drivers ON driverstandings.driverid = drivers.driverid WHERE drivers.number = 91
179,1435,"List the names of closed event as ""game"" that was closed from 3/15/2019 to 3/20/2020.",student_club,moderate,"SELECT DISTINCT event_name FROM event WHERE type = 'Game' AND date(SUBSTR(event_date, 1, 10)) BETWEEN '2019-03-15' AND '2020-03-20' AND status = 'Closed'",7,"SELECT event_name FROM event WHERE type = 'game' AND status = 'closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20'
SELECT event_name FROM event WHERE type = 'game' AND status = 'closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20'
SELECT event_name FROM event WHERE type = 'game' AND status = 'closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20'
SELECT event_name FROM event WHERE type = 'game' AND status = 'closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20'
SELECT event_name FROM event WHERE type = 'game' AND status = 'closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20'
SELECT event_name FROM event WHERE type = 'game' AND status = 'closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20'
SELECT event_name FROM event WHERE type = 'game' AND status = 'closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20'",SELECT event_name FROM event WHERE type = 'game' AND status = 'closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20'
180,408,How many unknown power cards contain info about the triggered ability,card_games,moderate,SELECT T2.text FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE (T1.power IS NULL OR T1.power = '*') AND T2.text LIKE '%triggered ability%',7,"SELECT COUNT(*) FROM cards WHERE power = 'unknown'
SELECT COUNT(*) FROM cards WHERE power = 'unknown'
SELECT COUNT(*) FROM cards WHERE power = 'unknown'
SELECT COUNT(*) FROM cards WHERE power = 'unknown'
SELECT COUNT(*) FROM cards WHERE power = 'unknown'
SELECT COUNT(*) FROM cards WHERE power = 'unknown'
SELECT COUNT(*) FROM cards WHERE power = 'unknown'",SELECT COUNT(*) FROM cards WHERE power = 'unknown'
181,1049,"How many matches in the 2015/2016 season were held in Scotland Premier League
?",european_football_2,simple,SELECT COUNT(t2.id) FROM League AS t1 INNER JOIN Match AS t2 ON t1.id = t2.league_id WHERE t2.season = '2015/2016' AND t1.name = 'Scotland Premier League',7,"SELECT COUNT(*) FROM match WHERE season = '2015/2016' AND league_id IN (SELECT id FROM league WHERE name = 'Scotland Premier League')
SELECT COUNT(*) FROM match WHERE season = '2015/2016' AND league_id IN (SELECT id FROM league WHERE name = 'Scotland Premier League')
SELECT COUNT(*) FROM match WHERE season = '2015/2016' AND league_id IN (SELECT id FROM league WHERE name = 'Scotland Premier League')
SELECT COUNT(*) FROM match WHERE season = '2015/2016' AND league_id IN (SELECT id FROM league WHERE name = 'Scotland Premier League')
SELECT COUNT(*) FROM match WHERE season = '2015/2016' AND league_id IN (SELECT id FROM league WHERE name = 'Scotland Premier League')
SELECT COUNT(*) FROM match WHERE season = '2015/2016' AND league_id IN (SELECT id FROM league WHERE name = 'Scotland Premier League')
SELECT COUNT(*) FROM match WHERE season = '2015/2016' AND league_id IN (SELECT id FROM league WHERE name = 'Scotland Premier League')",SELECT COUNT(*) FROM match WHERE season = '2015/2016' AND league_id IN (SELECT id FROM league WHERE name = 'Scotland Premier League')
182,1071,"List the football team that has a build up play speed of 31, build up plan dribbling of 53, and build up play passing of 32. Only indicate the short name of the team.",european_football_2,challenging,SELECT DISTINCT t1.team_short_name FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t2.buildUpPlaySpeed = 31 AND t2.buildUpPlayDribbling = 53 AND t2.buildUpPlayPassing = 32,7,"SELECT team_short_name  FROM team_attributes  WHERE buildupplayspeed = 31  AND buildupplaydribbling = 53  AND buildupplaypassing = 32
SELECT team_short_name  FROM team_attributes  WHERE buildupplayspeed = 31  AND buildupplaydribbling = 53  AND buildupplaypassing = 32
SELECT team_short_name  FROM team_attributes  WHERE buildupplayspeed = 31  AND buildupplaydribbling = 53  AND buildupplaypassing = 32
SELECT team_short_name  FROM team_attributes  WHERE buildupplayspeed = 31  AND buildupplaydribbling = 53  AND buildupplaypassing = 32
SELECT team_short_name FROM team_attributes WHERE buildupplayspeed = 31 AND buildupplaydribbling = 53 AND buildupplaypassing = 32
SELECT team_short_name  FROM team_attributes  WHERE buildupplayspeed = 31  AND buildupplaydribbling = 53  AND buildupplaypassing = 32
SELECT team_short_name  FROM team_attributes  WHERE buildupplayspeed = 31  AND buildupplaydribbling = 53  AND buildupplaypassing = 32",SELECT team_short_name  FROM team_attributes  WHERE buildupplayspeed = 31  AND buildupplaydribbling = 53  AND buildupplaypassing = 32
183,616,What is the comment's rating score of the post which was created on 7/19/2010 7:19:56 PM,codebase_community,simple,SELECT T1.Score FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.CreationDate = '2010-07-19 19:19:56.0',7,"SELECT comments.score  FROM comments  JOIN posts ON comments.postid = posts.id  WHERE posts.creationdate = '2010-07-19 19:19:56'
SELECT comments.score  FROM comments  JOIN posts ON comments.postid = posts.id  WHERE posts.creationdate = '2010-07-19 19:19:56'
SELECT comments.score  FROM comments  JOIN posts ON comments.postid = posts.id  WHERE posts.creationdate = '2010-07-19 19:19:56'
SELECT comments.score  FROM comments  JOIN posts ON comments.postid = posts.id  WHERE posts.creationdate = '2010-07-19 19:19:56'
SELECT comments.score  FROM comments  JOIN posts ON comments.postid = posts.id  WHERE posts.creationdate = '2010-07-19 19:19:56'
SELECT comments.score  FROM comments  JOIN posts ON comments.postid = posts.id  WHERE posts.creationdate = '2010-07-19 19:19:56'
SELECT comments.score  FROM comments  JOIN posts ON comments.postid = posts.id  WHERE posts.creationdate = '2010-07-19 19:19:56'",SELECT comments.score  FROM comments  JOIN posts ON comments.postid = posts.id  WHERE posts.creationdate = '2010-07-19 19:19:56'
184,990,What is the constructor reference name of the champion in the 2009 Singapore Grand Prix? Please give its website.,formula_1,challenging,"SELECT T3.constructorRef, T3.url FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN constructors AS T3 on T1.constructorId = T3.constructorId WHERE T2.name = 'Singapore Grand Prix' AND T2.year = 2009 AND T1.time LIKE '_:%:__.___'",7,"SELECT name FROM constructors JOIN constructorresults ON constructors.constructorid = constructorresults.constructorid JOIN races ON constructorresults.raceid = races.raceid WHERE races.name = '2009 Singapore Grand Prix'
SELECT name FROM constructors JOIN constructorresults ON constructors.constructorid = constructorresults.constructorid JOIN races ON constructorresults.raceid = races.raceid WHERE races.name = '2009 Singapore Grand Prix'
SELECT name FROM constructors JOIN constructorresults ON constructors.constructorid = constructorresults.constructorid JOIN races ON constructorresults.raceid = races.raceid WHERE races.name = '2009 Singapore Grand Prix'
SELECT constructorref FROM constructors JOIN constructorresults ON constructors.constructorid = constructorresults.constructorid JOIN races ON constructorresults.raceid = races.raceid WHERE races.name = 'Singapore Grand Prix' AND races.year = 2009
SELECT name FROM constructors JOIN constructorresults ON constructors.constructorid = constructorresults.constructorid JOIN races ON constructorresults.raceid = races.raceid WHERE races.name = '2009 Singapore Grand Prix'
SELECT name FROM constructors JOIN constructorresults ON constructors.constructorid = constructorresults.constructorid JOIN races ON constructorresults.raceid = races.raceid WHERE races.name = '2009 Singapore Grand Prix'
SELECT constructorref FROM constructors JOIN constructorresults ON constructors.constructorid = constructorresults.constructorid JOIN races ON constructorresults.raceid = races.raceid WHERE races.name = 'Singapore Grand Prix' AND races.year = 2009",SELECT name FROM constructors JOIN constructorresults ON constructors.constructorid = constructorresults.constructorid JOIN races ON constructorresults.raceid = races.raceid WHERE races.name = '2009 Singapore Grand Prix'
185,1472,"In 2012, who had the least consumption in LAM?",debit_card_specializing,moderate,"SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM' AND SUBSTR(T2.Date, 1, 4) = '2012' GROUP BY T1.CustomerID ORDER BY SUM(T2.Consumption) ASC LIMIT 1",7,"SELECT customerid, consumption FROM yearmonth WHERE date LIKE '2012%' GROUP BY customerid ORDER BY SUM(consumption) LIMIT 1
SELECT customerid, consumption FROM yearmonth WHERE date LIKE '2012%' ORDER BY consumption ASC LIMIT 1
SELECT customerid, consumption FROM yearmonth WHERE date LIKE '2012%' ORDER BY consumption ASC LIMIT 1
SELECT customerid, consumption FROM yearmonth WHERE date LIKE '2012%' GROUP BY customerid ORDER BY SUM(consumption) ASC LIMIT 1
SELECT customerid, consumption FROM yearmonth WHERE date LIKE '2012%' ORDER BY consumption ASC LIMIT 1
SELECT customerid, consumption FROM yearmonth WHERE date LIKE '2012%' ORDER BY consumption ASC LIMIT 1
SELECT customerid, consumption FROM yearmonth WHERE date LIKE '2012%' ORDER BY consumption ASC LIMIT 1","SELECT customerid, consumption FROM yearmonth WHERE date LIKE '2012%' ORDER BY consumption ASC LIMIT 1"
186,954,Please calculate the race completion percentage of Japanese drivers from 2007 to 2009.,formula_1,challenging,"SELECT CAST(SUM(IIF(T1.time IS NOT NULL, 1, 0)) AS REAL) * 100 / COUNT(T1.raceId) FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN drivers AS T3 on T1.driverId = T3.driverId WHERE T3.nationality = 'Japanese' AND T2.year BETWEEN 2007 AND 2009",7,"SELECT year, COUNT(*) AS total_races, SUM(CASE WHEN nationality = 'Japanese' THEN 1 ELSE 0 END) AS japanese_drivers,         ROUND(SUM(CASE WHEN nationality = 'Japanese' THEN 1 ELSE 0 END) * 100.0 / COUNT(*), 2) AS japanese_completion_percentage FROM drivers WHERE year BETWEEN 2007 AND 2009 GROUP BY year
SELECT year, COUNT(*) AS total_races,         SUM(CASE WHEN nationality = 'Japanese' THEN 1 ELSE 0 END) AS japanese_drivers,        (SUM(CASE WHEN nationality = 'Japanese' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS completion_percentage FROM drivers JOIN races ON drivers.driverid = races.driverid WHERE year BETWEEN 2007 AND 2009 GROUP BY year
SELECT year, COUNT(*) AS total_races,         SUM(CASE WHEN nationality = 'Japanese' THEN 1 ELSE 0 END) AS japanese_drivers,        (SUM(CASE WHEN nationality = 'Japanese' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS completion_percentage FROM drivers JOIN races ON drivers.driverid = races.driverid WHERE year BETWEEN 2007 AND 2009 GROUP BY year
SELECT year, COUNT(*) AS total_races, SUM(CASE WHEN nationality = 'Japanese' THEN 1 ELSE 0 END) AS japanese_drivers,         ROUND((SUM(CASE WHEN nationality = 'Japanese' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)), 2) AS japanese_completion_percentage FROM drivers WHERE year BETWEEN 2007 AND 2009 GROUP BY year
SELECT year, COUNT(*) AS total_races,         SUM(CASE WHEN nationality = 'Japanese' THEN 1 ELSE 0 END) AS japanese_drivers,        (SUM(CASE WHEN nationality = 'Japanese' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS completion_percentage FROM drivers WHERE year BETWEEN 2007 AND 2009 GROUP BY year
SELECT year, COUNT(*) AS total_races,         SUM(CASE WHEN nationality = 'Japanese' THEN 1 ELSE 0 END) AS japanese_drivers,        (SUM(CASE WHEN nationality = 'Japanese' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS completion_percentage FROM drivers JOIN races ON drivers.driverid = races.driverid WHERE year BETWEEN 2007 AND 2009 GROUP BY year
SELECT year, COUNT(*) AS total_races,         SUM(CASE WHEN nationality = 'Japanese' THEN 1 ELSE 0 END) AS japanese_drivers,        (SUM(CASE WHEN nationality = 'Japanese' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS completion_percentage FROM drivers JOIN races ON drivers.driverid = races.driverid WHERE year BETWEEN 2007 AND 2009 GROUP BY year","SELECT year, COUNT(*) AS total_races,         SUM(CASE WHEN nationality = 'Japanese' THEN 1 ELSE 0 END) AS japanese_drivers,        (SUM(CASE WHEN nationality = 'Japanese' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS completion_percentage FROM drivers JOIN races ON drivers.driverid = races.driverid WHERE year BETWEEN 2007 AND 2009 GROUP BY year"
187,301,What is the bond type of TR007_4_19?,toxicology,simple,SELECT T.bond_type FROM bond AS T WHERE T.bond_id = 'TR007_4_19',7,"SELECT bond_type FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR007_4_19')
SELECT bond_type FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR007_4_19')
SELECT bond_type FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR007_4_19')
SELECT bond_type FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR007_4_19')
SELECT bond_type FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR007_4_19')
SELECT bond_type FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR007_4_19')
SELECT bond_type FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR007_4_19')",SELECT bond_type FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR007_4_19')
188,798,"What is the publisher for Hawkman, Karate Kid and Speedy?",superhero,moderate,"SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')",7,"SELECT publisher_name FROM publisher JOIN superhero ON publisher.id = superhero.publisher_id WHERE superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')
SELECT publisher_name FROM publisher JOIN superhero ON publisher.id = superhero.publisher_id WHERE superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')
SELECT publisher_name FROM publisher JOIN superhero ON publisher.id = superhero.publisher_id WHERE superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')
SELECT publisher_name FROM publisher JOIN superhero ON publisher.id = superhero.publisher_id WHERE superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')
SELECT publisher_name FROM publisher JOIN superhero ON publisher.id = superhero.publisher_id WHERE superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')
SELECT publisher_name FROM publisher JOIN superhero ON publisher.id = superhero.publisher_id WHERE superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')
SELECT publisher_name FROM publisher JOIN superhero ON publisher.id = superhero.publisher_id WHERE superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')","SELECT publisher_name FROM publisher JOIN superhero ON publisher.id = superhero.publisher_id WHERE superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')"
189,1481,"What is the difference in the annual average consumption of the customers with the least amount of consumption paid in CZK for 2013 between SME and LAM, LAM and KAM, and KAM and SME?",debit_card_specializing,challenging,"SELECT CAST(SUM(IIF(T1.Segment = 'SME', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'LAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) , CAST(SUM(IIF(T1.Segment = 'LAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'KAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) , CAST(SUM(IIF(T1.Segment = 'KAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'SME', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' AND T2.Consumption = ( SELECT MIN(Consumption) FROM yearmonth ) AND T2.Date BETWEEN 201301 AND 201312",7,"SELECT      (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'SME')) -     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'LAM')) AS SME_LAM_Difference,     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'LAM')) -     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'KAM')) AS LAM_KAM_Difference,     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'KAM')) -     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'SME')) AS KAM_SME_Difference FROM customers LIMIT 1
SELECT      (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'SME')) -     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'LAM')) AS SME_LAM_Difference,     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'LAM')) -     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'KAM')) AS LAM_KAM_Difference,     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'KAM')) -     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'SME')) AS KAM_SME_Difference FROM yearmonth WHERE date = '2013-01-01'
SELECT      (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'SME')) -     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'LAM')) AS SME_LAM_Difference,     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'LAM')) -     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'KAM')) AS LAM_KAM_Difference,     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'KAM')) -     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'SME')) AS KAM_SME_Difference FROM yearmonth WHERE date = '2013-01-01'
SELECT      (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'SME')) -     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'LAM')) AS SME_LAM_Difference,     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'LAM')) -     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'KAM')) AS LAM_KAM_Difference,     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'KAM')) -     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'SME')) AS KAM_SME_Difference FROM customers LIMIT 1
SELECT      (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'SME')) -     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'LAM')) AS SME_LAM_Difference,     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'LAM')) -     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'KAM')) AS LAM_KAM_Difference,     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'KAM')) -     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'SME')) AS KAM_SME_Difference FROM yearmonth WHERE date = '2013-01-01'
SELECT      (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'SME')) -     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'LAM')) AS SME_LAM_Difference,     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'LAM')) -     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'KAM')) AS LAM_KAM_Difference,     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'KAM')) -     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'SME')) AS KAM_SME_Difference FROM customers LIMIT 1
SELECT      (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'SME')) -     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'LAM')) AS SME_LAM_diff,     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'LAM')) -     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'KAM')) AS LAM_KAM_diff,     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'KAM')) -     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'SME')) AS KAM_SME_diff FROM yearmonth LIMIT 1","SELECT      (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'SME')) -     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'LAM')) AS SME_LAM_Difference,     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'LAM')) -     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'KAM')) AS LAM_KAM_Difference,     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'KAM')) -     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'SME')) AS KAM_SME_Difference FROM customers LIMIT 1"
190,1011,Which top 20 driver created the shortest lap time ever record in a Formula_1 race? Please give them full names.,formula_1,challenging,"WITH lap_times_in_seconds AS (SELECT driverId, (CASE WHEN SUBSTR(time, 1, INSTR(time, ':') - 1) <> '' THEN CAST(SUBSTR(time, 1, INSTR(time, ':') - 1) AS REAL) * 60 ELSE 0 END + CASE WHEN SUBSTR(time, INSTR(time, ':') + 1, INSTR(time, '.') - INSTR(time, ':') - 1) <> '' THEN CAST(SUBSTR(time, INSTR(time, ':') + 1, INSTR(time, '.') - INSTR(time, ':') - 1) AS REAL) ELSE 0 END + CASE WHEN SUBSTR(time, INSTR(time, '.') + 1) <> '' THEN CAST(SUBSTR(time, INSTR(time, '.') + 1) AS REAL) / 1000 ELSE 0 END) AS time_in_seconds FROM lapTimes) SELECT T2.forename, T2.surname, T1.driverId FROM (SELECT driverId, MIN(time_in_seconds) AS min_time_in_seconds FROM lap_times_in_seconds GROUP BY driverId) AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId ORDER BY T1.min_time_in_seconds ASC LIMIT 20",7,"SELECT d.forename, d.surname, r.name AS race_name, MIN(l.milliseconds) AS shortest_lap_time FROM results r JOIN drivers d ON r.driverid = d.driverid JOIN laptimes l ON r.raceid = l.raceid AND r.driverid = l.driverid GROUP BY r.raceid ORDER BY shortest_lap_time ASC LIMIT 20
SELECT d.forename, d.surname FROM drivers d JOIN results r ON d.driverid = r.driverid WHERE r.position = 1 ORDER BY r.time LIMIT 20
SELECT d.forename, d.surname FROM drivers d JOIN results r ON d.driverid = r.driverid WHERE r.position = 1 ORDER BY r.milliseconds ASC LIMIT 20
SELECT d.forename, d.surname FROM drivers d JOIN results r ON d.driverid = r.driverid WHERE r.position = 1 ORDER BY r.milliseconds ASC LIMIT 20
SELECT d.forename, d.surname FROM drivers d JOIN results r ON d.driverid = r.driverid WHERE r.position = 1 ORDER BY r.time LIMIT 20
SELECT d.forename, d.surname FROM drivers d JOIN results r ON d.driverid = r.driverid WHERE r.position = 1 ORDER BY r.time LIMIT 20
SELECT d.forename, d.surname, r.name AS race_name, MIN(l.milliseconds) AS shortest_lap_time FROM results r JOIN drivers d ON r.driverid = d.driverid JOIN laptimes l ON r.raceid = l.raceid AND r.driverid = l.driverid GROUP BY r.raceid ORDER BY shortest_lap_time ASC LIMIT 20","SELECT d.forename, d.surname FROM drivers d JOIN results r ON d.driverid = r.driverid WHERE r.position = 1 ORDER BY r.time LIMIT 20"
191,507,"For all the set of cards that has Brazil Portuguese translation, what is the percentage of them are only available online?",card_games,challenging,SELECT CAST(SUM(CASE WHEN isOnlineOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) FROM sets WHERE code IN ( SELECT setCode FROM set_translations WHERE language = 'Portuguese (Brazil)' ),7,"SELECT (SELECT COUNT(*) FROM cards WHERE availability = 'online' AND id IN (SELECT id FROM foreign_data WHERE language = 'Portuguese (Brazil)')) * 100.0 / (SELECT COUNT(*) FROM cards WHERE id IN (SELECT id FROM foreign_data WHERE language = 'Portuguese (Brazil)')) AS percentage_online_only FROM cards LIMIT 1
SELECT (SELECT COUNT(*) FROM cards WHERE availability = 'online' AND id IN (SELECT id FROM foreign_data WHERE language = 'Portuguese (Brazil)')) * 1.0 / (SELECT COUNT(*) FROM cards WHERE id IN (SELECT id FROM foreign_data WHERE language = 'Portuguese (Brazil)')) * 100 AS percentage_online_only FROM cards LIMIT 1
SELECT (SELECT COUNT(*) FROM cards WHERE cards.id IN (SELECT foreign_data.multiverseid FROM foreign_data WHERE foreign_data.language = 'pt')) * 100.0 / (SELECT COUNT(*) FROM cards WHERE cards.id IN (SELECT foreign_data.multiverseid FROM foreign_data)) AS percentage_online_only FROM cards
SELECT (SELECT COUNT(*) FROM cards WHERE cards.availability = 'online' AND cards.id IN (SELECT cards.id FROM foreign_data WHERE foreign_data.language = 'Portuguese' AND foreign_data.name = cards.name)) * 100.0 / COUNT(*) AS percentage_online_only FROM cards WHERE cards.id IN (SELECT cards.id FROM foreign_data WHERE foreign_data.language = 'Portuguese')
SELECT (SELECT COUNT(*) FROM cards WHERE cards.availability = 'online' AND cards.id IN (SELECT cards.id FROM foreign_data WHERE foreign_data.language = 'Portuguese' AND foreign_data.name = cards.name)) * 1.0 / COUNT(*) * 100 AS percentage_online_only FROM cards WHERE cards.id IN (SELECT cards.id FROM foreign_data WHERE foreign_data.language = 'Portuguese')
SELECT (SELECT COUNT(*) FROM cards WHERE cards.availability = 'online' AND cards.id IN (SELECT cards.id FROM foreign_data WHERE foreign_data.language = 'Portuguese' AND foreign_data.name = cards.name)) * 1.0 / COUNT(*) * 100 AS percentage_online_only FROM cards WHERE cards.id IN (SELECT cards.id FROM foreign_data WHERE foreign_data.language = 'Portuguese')
SELECT (SELECT COUNT(*) FROM cards WHERE availability = 'online' AND id IN (SELECT id FROM foreign_data WHERE language = 'Portuguese (Brazil)')) * 1.0 / (SELECT COUNT(*) FROM cards WHERE id IN (SELECT id FROM foreign_data WHERE language = 'Portuguese (Brazil)')) * 100 AS percentage_online_only FROM cards LIMIT 1",SELECT (SELECT COUNT(*) FROM cards WHERE availability = 'online' AND id IN (SELECT id FROM foreign_data WHERE language = 'Portuguese (Brazil)')) * 1.0 / (SELECT COUNT(*) FROM cards WHERE id IN (SELECT id FROM foreign_data WHERE language = 'Portuguese (Brazil)')) * 100 AS percentage_online_only FROM cards LIMIT 1
192,431,Which set is not available outside of the United States and has foil cards with Japanese writing on them? Please include the set ID in your response.,card_games,challenging,"SELECT T1.name, T1.id FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Japanese' AND T1.isFoilOnly = 1 AND T1.isForeignOnly = 0",7,"SELECT id FROM sets WHERE isforeignonly = 1 AND id IN (SELECT setcode FROM cards WHERE hasfoil = 1 AND id IN (SELECT id FROM foreign_data WHERE language = 'Japanese'))
SELECT id FROM sets WHERE isforeignonly = 1 AND id IN (SELECT setcode FROM cards WHERE hasfoil = 1 AND id IN (SELECT id FROM foreign_data WHERE language = 'Japanese'))
SELECT id FROM sets WHERE isforeignonly = 1 AND id IN (SELECT setcode FROM cards WHERE hasfoil = 1 AND id IN (SELECT id FROM foreign_data WHERE language = 'Japanese'))
SELECT id FROM sets WHERE isforeignonly = 1 AND id IN (SELECT setcode FROM cards WHERE hasfoil = 1 AND id IN (SELECT id FROM foreign_data WHERE language = 'Japanese'))
SELECT id FROM sets WHERE isforeignonly = 1 AND id IN (SELECT setcode FROM cards WHERE hasfoil = 1 AND id IN (SELECT id FROM foreign_data WHERE language = 'Japanese'))
SELECT id FROM sets WHERE isforeignonly = 1 AND id IN (SELECT setcode FROM cards WHERE hasfoil = 1 AND id IN (SELECT id FROM foreign_data WHERE language = 'Japanese'))
SELECT id FROM sets WHERE isforeignonly = 1 AND id IN (SELECT setcode FROM cards WHERE hasfoil = 1 AND id IN (SELECT id FROM foreign_data WHERE language = 'Japanese'))",SELECT id FROM sets WHERE isforeignonly = 1 AND id IN (SELECT setcode FROM cards WHERE hasfoil = 1 AND id IN (SELECT id FROM foreign_data WHERE language = 'Japanese'))
193,1167,"For the year that concluded on December 31, 1998, how many male patients on average were tested in the lab each month?",thrombosis_prediction,moderate,"SELECT CAST(COUNT(T1.ID) AS REAL) / 12 FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T2.Date) = '1998' AND T1.SEX = 'M'",7,"SELECT AVG(male_count) AS avg_male_tests_per_month FROM (     SELECT COUNT(*) AS male_count, strftime('%m', l.date) AS month     FROM patient p     JOIN laboratory l ON p.id = l.id     WHERE p.sex = 'male' AND strftime('%Y', l.date) = '1998'     GROUP BY month )
SELECT AVG(male_count) AS avg_male_tests_per_month FROM (     SELECT COUNT(*) AS male_count, strftime('%m', l.date) AS month     FROM patient p     JOIN laboratory l ON p.id = l.id     WHERE p.sex = 'male' AND strftime('%Y', l.date) = '1998'     GROUP BY month )
SELECT AVG(male_count) AS average_male_tests_per_month FROM (     SELECT COUNT(*) AS male_count, strftime('%m', l.date) AS month     FROM patient p     JOIN laboratory l ON p.id = l.id     WHERE p.sex = 'male' AND strftime('%Y', l.date) = '1998'     GROUP BY month )
SELECT AVG(male_count) FROM (SELECT COUNT(*) AS male_count, strftime('%m', l.date) AS month FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'male' AND l.date BETWEEN '1998-01-01' AND '1998-12-31' GROUP BY month)
SELECT AVG(male_count) AS avg_male_tests_per_month FROM (     SELECT COUNT(*) AS male_count, strftime('%m', l.date) AS month     FROM patient p     JOIN laboratory l ON p.id = l.id     WHERE p.sex = 'male' AND strftime('%Y', l.date) = '1998'     GROUP BY month )
SELECT AVG(male_count) AS avg_male_tests_per_month FROM (     SELECT COUNT(*) AS male_count, strftime('%m', l.date) AS month     FROM patient p     JOIN laboratory l ON p.id = l.id     WHERE p.sex = 'male' AND strftime('%Y', l.date) = '1998'     GROUP BY month )
SELECT AVG(male_count) FROM (SELECT COUNT(*) AS male_count, strftime('%m', l.date) AS month FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'male' AND l.date BETWEEN '1998-01-01' AND '1998-12-31' GROUP BY month)","SELECT AVG(male_count) AS avg_male_tests_per_month FROM (     SELECT COUNT(*) AS male_count, strftime('%m', l.date) AS month     FROM patient p     JOIN laboratory l ON p.id = l.id     WHERE p.sex = 'male' AND strftime('%Y', l.date) = '1998'     GROUP BY month )"
194,451,How many cards available in paper have a positive starting maximum hand size?,card_games,simple,SELECT SUM(CASE WHEN availability = 'paper' AND hAND = '3' THEN 1 ELSE 0 END) FROM cards,7,"SELECT COUNT(*) FROM cards WHERE availability = 'paper' AND hand > 0
SELECT COUNT(*) FROM cards WHERE availability = 'paper' AND hand > 0
SELECT COUNT(*) FROM cards WHERE availability = 'paper' AND hand > 0
SELECT COUNT(*) FROM cards WHERE availability = 'paper' AND hand > 0
SELECT COUNT(*) FROM cards WHERE availability = 'paper' AND hand > 0
SELECT COUNT(*) FROM cards WHERE availability = 'paper' AND hand > 0
SELECT COUNT(*) FROM cards WHERE availability = 'paper' AND hand > 0",SELECT COUNT(*) FROM cards WHERE availability = 'paper' AND hand > 0
195,1431,List the last name of the members of the club that attended the women's soccer event.,student_club,moderate,SELECT T3.last_name FROM attendance AS T1 INNER JOIN event AS T2 ON T2.event_id = T1.link_to_event INNER JOIN member AS T3 ON T1.link_to_member = T3.member_id WHERE T2.event_name = 'Women''s Soccer' AND T3.position = 'Member',7,"SELECT last_name FROM member JOIN attendance ON member.member_id = attendance.link_to_member WHERE attendance.link_to_event IN (SELECT event_id FROM event WHERE event_name = 'women''s soccer')
SELECT last_name FROM member JOIN attendance ON member.member_id = attendance.link_to_member WHERE attendance.link_to_event IN (SELECT event_id FROM event WHERE event_name = 'women''s soccer')
SELECT last_name FROM member JOIN attendance ON member.member_id = attendance.link_to_member WHERE attendance.link_to_event IN (SELECT event_id FROM event WHERE event_name = 'women''s soccer')
SELECT last_name FROM member JOIN attendance ON member.member_id = attendance.link_to_member WHERE attendance.link_to_event IN (SELECT event_id FROM event WHERE event_name = 'women''s soccer')
SELECT last_name FROM member JOIN attendance ON member.member_id = attendance.link_to_member WHERE attendance.link_to_event IN (SELECT event_id FROM event WHERE event_name = 'women''s soccer')
SELECT last_name FROM member JOIN attendance ON member.member_id = attendance.link_to_member WHERE attendance.link_to_event IN (SELECT event_id FROM event WHERE event_name = 'women''s soccer')
SELECT last_name FROM member JOIN attendance ON member.member_id = attendance.link_to_member WHERE attendance.link_to_event IN (SELECT event_id FROM event WHERE event_name = 'women''s soccer')",SELECT last_name FROM member JOIN attendance ON member.member_id = attendance.link_to_member WHERE attendance.link_to_event IN (SELECT event_id FROM event WHERE event_name = 'women''s soccer')
196,1191,What percentage of male patients who first presented to the hospital in 1981 were diagnosed with BEHCET?,thrombosis_prediction,challenging,"SELECT CAST(SUM(CASE WHEN Diagnosis = 'BEHCET' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM Patient WHERE STRFTIME('%Y', `First Date`) = '1981' AND SEX = 'M'",7,"SELECT (COUNT(l.id) * 100.0 / COUNT(p.id)) AS percentage FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.first_date = '1981' AND p.sex = 'male' AND l.diagnosis = 'BEHCET'
SELECT (COUNT(l.id) * 100.0 / COUNT(p.id)) AS percentage FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.first_date = '1981' AND p.sex = 'male' AND l.diagnosis = 'BEHCET'
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM patient WHERE CAST(SUBSTR(first_date, 1, 4) AS INTEGER) = 1981 AND sex = 'male')) AS percentage FROM patient JOIN examination ON patient.id = examination.id WHERE CAST(SUBSTR(patient.first_date, 1, 4) AS INTEGER) = 1981 AND patient.sex = 'male' AND examination.diagnosis = 'BEHCET'
SELECT (COUNT(l.id) * 100.0 / COUNT(p.id)) AS percentage FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.first_date = '1981' AND p.sex = 'male' AND l.diagnosis = 'BEHCET'
SELECT (SELECT COUNT(*) FROM patient WHERE sex = 'male' AND first_date = '1981' AND diagnosis = 'BEHCET') * 100.0 / COUNT(*) AS percentage FROM patient WHERE sex = 'male' AND first_date = '1981'
SELECT (COUNT(l.id) * 100.0 / COUNT(p.id)) AS percentage FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.first_date = '1981' AND p.sex = 'male' AND l.diagnosis = 'BEHCET'
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM patient WHERE CAST(SUBSTR(first_date, 1, 4) AS INTEGER) = 1981 AND sex = 'male') AS percentage FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE CAST(SUBSTR(patient.first_date, 1, 4) AS INTEGER) = 1981 AND patient.sex = 'male' AND laboratory.diagnosis = 'BEHCET'",SELECT (COUNT(l.id) * 100.0 / COUNT(p.id)) AS percentage FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.first_date = '1981' AND p.sex = 'male' AND l.diagnosis = 'BEHCET'
197,1112,"What was the chance creation crossing class for ""Hull City"" on 2010/2/22?",european_football_2,moderate,"SELECT t2.chanceCreationCrossingClass FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t1.team_long_name = 'Hull City' AND SUBSTR(t2.`date`, 1, 10) = '2010-02-22'",7,"SELECT chancecreationcrossingclass  FROM team_attributes  JOIN team ON team_attributes.team_api_id = team.team_api_id  WHERE team_long_name = 'Hull City'  AND date = '2010-02-22'
SELECT chancecreationcrossingclass  FROM team_attributes  JOIN team ON team_attributes.team_api_id = team.team_api_id  WHERE team_long_name = 'Hull City'  AND date = '2010-02-22'
SELECT chancecreationcrossingclass  FROM team_attributes  JOIN team ON team_attributes.team_api_id = team.team_api_id  WHERE team_long_name = 'Hull City'  AND date = '2010-02-22'
SELECT chancecreationcrossingclass  FROM team_attributes  JOIN team ON team_attributes.team_api_id = team.team_api_id  WHERE team_long_name = 'Hull City'  AND date = '2010-02-22'
SELECT chancecreationcrossingclass  FROM team_attributes  JOIN team ON team_attributes.team_api_id = team.team_api_id  WHERE team_long_name = 'Hull City'  AND date = '2010-02-22'
SELECT chancecreationcrossingclass  FROM team_attributes  JOIN team ON team_attributes.team_api_id = team.team_api_id  WHERE team_long_name = 'Hull City'  AND date = '2010-02-22'
SELECT chancecreationcrossingclass  FROM team_attributes  JOIN team ON team_attributes.team_api_id = team.team_api_id  WHERE team_long_name = 'Hull City'  AND date = '2010-02-22'",SELECT chancecreationcrossingclass  FROM team_attributes  JOIN team ON team_attributes.team_api_id = team.team_api_id  WHERE team_long_name = 'Hull City'  AND date = '2010-02-22'
198,812,List down at least five full names of superheroes with blue eyes.,superhero,simple,SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Blue' LIMIT 5,7,"SELECT full_name FROM superhero WHERE eye_colour_id IN (SELECT id FROM colour WHERE colour_name = 'blue')
SELECT full_name FROM superhero WHERE eye_colour_id IN (SELECT id FROM colour WHERE colour_name = 'blue')
SELECT full_name FROM superhero WHERE eye_colour_id IN (SELECT id FROM colour WHERE colour_name = 'blue')
SELECT full_name FROM superhero WHERE eye_colour_id IN (SELECT id FROM colour WHERE colour_name = 'blue')
SELECT full_name FROM superhero WHERE eye_colour_id IN (SELECT id FROM colour WHERE colour_name = 'blue')
SELECT full_name FROM superhero WHERE eye_colour_id IN (SELECT id FROM colour WHERE colour_name = 'blue')
SELECT full_name FROM superhero WHERE eye_colour_id IN (SELECT id FROM colour WHERE colour_name = 'blue')",SELECT full_name FROM superhero WHERE eye_colour_id IN (SELECT id FROM colour WHERE colour_name = 'blue')
199,1183,"For the patient who was diagnosed SLE on 1997/1/27, what was his/her original diagnose when he/she came to the hospital for the first time?",thrombosis_prediction,challenging,SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.ID = ( SELECT ID FROM Examination WHERE `Examination Date` = '1997-01-27' AND Diagnosis = 'SLE' ) AND T2.`Examination Date` = T1.`First Date`,7,"SELECT diagnosis FROM patient WHERE id IN (SELECT patient_id FROM examination WHERE diagnosis = 'SLE' AND '1997/1/27' = 'examination date')
SELECT diagnosis FROM patient WHERE id = (SELECT patient_id FROM examination WHERE diagnosis = 'SLE' AND '1997/1/27' = 'first date')
SELECT diagnosis FROM patient WHERE id = (SELECT patient FROM diagnosis WHERE diagnosis = 'SLE' AND date = '1997/1/27')
SELECT diagnosis FROM patient WHERE id IN (SELECT patient_id FROM examination WHERE diagnosis = 'SLE' AND '1997/1/27' = 'examination date')
SELECT diagnosis FROM patient WHERE id = (SELECT patient_id FROM examination WHERE diagnosis = 'SLE' AND '1997/1/27' = 'first date')
SELECT diagnosis FROM patient WHERE id = (SELECT patient_id FROM examination WHERE diagnosis = 'SLE' AND '1997/1/27' = 'first date')
SELECT diagnosis FROM patient WHERE id = (SELECT patient_id FROM examination WHERE diagnosis = 'SLE' AND '1997/1/27' = '1997/1/27')",SELECT diagnosis FROM patient WHERE id = (SELECT patient_id FROM examination WHERE diagnosis = 'SLE' AND '1997/1/27' = 'first date')
200,1014,Please list the lap records for the circuits in Italy.,formula_1,challenging,"WITH fastest_lap_times AS (SELECT T1.raceId, T1.FastestLapTime, (CAST(SUBSTR(T1.FastestLapTime, 1, INSTR(T1.FastestLapTime, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, ':') + 1, INSTR(T1.FastestLapTime, '.') - INSTR(T1.FastestLapTime, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, '.') + 1) AS REAL) / 1000) as time_in_seconds FROM results AS T1 WHERE T1.FastestLapTime IS NOT NULL ) SELECT T1.FastestLapTime as lap_record FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN circuits AS T3 on T2.circuitId = T3.circuitId INNER JOIN (SELECT MIN(fastest_lap_times.time_in_seconds) as min_time_in_seconds FROM fastest_lap_times INNER JOIN races AS T2 on fastest_lap_times.raceId = T2.raceId INNER JOIN circuits AS T3 on T2.circuitId = T3.circuitId WHERE T3.country = 'Italy' ) AS T4 ON (CAST(SUBSTR(T1.FastestLapTime, 1, INSTR(T1.FastestLapTime, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, ':') + 1, INSTR(T1.FastestLapTime, '.') - INSTR(T1.FastestLapTime, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, '.') + 1) AS REAL) / 1000) = T4.min_time_in_seconds LIMIT 1",7,"SELECT lap, position, time, milliseconds FROM laptimes WHERE circuitid IN (SELECT circuitid FROM circuits WHERE country = 'Italy') ORDER BY lap
SELECT lap, position, time, milliseconds FROM laptimes WHERE circuitid IN (SELECT circuitid FROM circuits WHERE country = 'Italy') ORDER BY lap
SELECT lap, position, time, milliseconds FROM laptimes WHERE raceid IN (SELECT raceid FROM races WHERE circuitid IN (SELECT circuitid FROM circuits WHERE country = 'Italy')) ORDER BY lap
SELECT lap, raceid, driverid, position, time, milliseconds FROM laptimes WHERE circuitid IN (SELECT circuitid FROM circuits WHERE country = 'Italy')
SELECT lap, position, time, milliseconds FROM laptimes WHERE circuitid IN (SELECT circuitid FROM circuits WHERE country = 'Italy') ORDER BY lap
SELECT lap, position, time, milliseconds FROM laptimes WHERE circuitid IN (SELECT circuitid FROM circuits WHERE country = 'Italy') ORDER BY lap
SELECT lap, position, time, milliseconds FROM laptimes WHERE circuitid IN (SELECT circuitid FROM circuits WHERE country = 'Italy') ORDER BY lap","SELECT lap, position, time, milliseconds FROM laptimes WHERE circuitid IN (SELECT circuitid FROM circuits WHERE country = 'Italy') ORDER BY lap"
201,728,"Rank superheroes from Marvel Comics by their eye color popularity, starting with the most common color.",superhero,moderate,"SELECT colour.colour AS EyeColor, COUNT(superhero.id) AS Count, RANK() OVER (ORDER BY COUNT(superhero.id) DESC) AS PopularityRank FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics' GROUP BY colour.colour",7,"SELECT eye_colour_id, COUNT(*) AS popularity FROM superhero GROUP BY eye_colour_id ORDER BY popularity DESC
SELECT eye_colour_id, COUNT(*) AS popularity FROM superhero GROUP BY eye_colour_id ORDER BY popularity DESC
SELECT eye_colour_id, COUNT(*) AS popularity FROM superhero GROUP BY eye_colour_id ORDER BY popularity DESC
SELECT eye_colour_id, COUNT(*) AS popularity FROM superhero GROUP BY eye_colour_id ORDER BY popularity DESC
SELECT eye_colour_id, COUNT(*) AS popularity FROM superhero GROUP BY eye_colour_id ORDER BY popularity DESC
SELECT eye_colour_id, COUNT(*) AS popularity FROM superhero GROUP BY eye_colour_id ORDER BY popularity DESC
SELECT eye_colour_id, COUNT(*) AS popularity FROM superhero GROUP BY eye_colour_id ORDER BY popularity DESC","SELECT eye_colour_id, COUNT(*) AS popularity FROM superhero GROUP BY eye_colour_id ORDER BY popularity DESC"
202,1531,Who is the top spending customer and how much is the average price per single item purchased by this customer? What currency was being used?,debit_card_specializing,moderate,"SELECT T2.CustomerID, SUM(T2.Price / T2.Amount), T1.Currency FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.CustomerID = ( SELECT CustomerID FROM yearmonth ORDER BY Consumption DESC LIMIT 1 ) GROUP BY T2.CustomerID, T1.Currency",7,"SELECT      c.customerid,      SUM(t.amount * t.price) AS total_spent,      AVG(t.price) AS avg_price_per_item,      t.currency FROM      transactions_1k t JOIN      customers c ON t.customerid = c.customerid GROUP BY      c.customerid, t.currency ORDER BY      total_spent DESC LIMIT 1
SELECT      t.customerid,      SUM(t.amount * t.price) AS total_spent,      AVG(t.price) AS avg_price_per_item,      t.currency FROM      transactions_1k t JOIN      customers c ON t.customerid = c.customerid GROUP BY      t.customerid, t.currency ORDER BY      total_spent DESC LIMIT 1
SELECT      t.customerid,      SUM(t.amount * t.price) AS total_spent,      AVG(t.price) AS avg_price_per_item,      t.currency FROM      transactions_1k t GROUP BY      t.customerid,      t.currency ORDER BY      total_spent DESC LIMIT 1
SELECT      t.customerid,      SUM(t.amount * t.price) AS total_spent,      AVG(t.price) AS avg_price_per_item,      t.currency FROM      transactions_1k t GROUP BY      t.customerid,      t.currency ORDER BY      total_spent DESC LIMIT 1
SELECT      t.customerid,      SUM(t.amount * t.price) AS total_spent,      AVG(t.price) AS avg_price_per_item,      t.currency FROM      transactions_1k t GROUP BY      t.customerid,      t.currency ORDER BY      total_spent DESC LIMIT 1
SELECT      c.customerid,      SUM(t.amount * t.price) AS total_spent,      AVG(t.price) AS avg_price_per_item,      t.currency FROM      transactions_1k t JOIN      customers c ON t.customerid = c.customerid GROUP BY      c.customerid, t.currency ORDER BY      total_spent DESC LIMIT 1
SELECT      t.customerid,      SUM(t.amount * t.price) AS total_spent,      AVG(t.price) AS avg_price_per_item,      t.currency FROM      transactions_1k t GROUP BY      t.customerid,      t.currency ORDER BY      total_spent DESC LIMIT 1","SELECT      t.customerid,      SUM(t.amount * t.price) AS total_spent,      AVG(t.price) AS avg_price_per_item,      t.currency FROM      transactions_1k t GROUP BY      t.customerid,      t.currency ORDER BY      total_spent DESC LIMIT 1"
203,1254,How many patients with a normal Ig A level came to the hospital after 1990/1/1?,thrombosis_prediction,moderate,"SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGA BETWEEN 80 AND 500 AND  strftime('%Y',  T1.`First Date`) > '1990'",7,"SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id WHERE examination.acl_iga = 'normal' AND examination.date > '1990-01-01'
SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id WHERE examination.acl_iga = 'normal' AND examination.date > '1990-01-01'
SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id WHERE examination.acl_iga = 'normal' AND examination.date > '1990-01-01'
SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id WHERE examination.acl_iga = 'normal' AND examination.date > '1990-01-01'
SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id WHERE examination.acl_iga = 'normal' AND examination.date > '1990-01-01'
SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id WHERE examination.acl_iga = 'normal' AND examination.date > '1990-01-01'
SELECT COUNT(*) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.iga = 'normal' AND patient.admission > '1990-01-01'",SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id WHERE examination.acl_iga = 'normal' AND examination.date > '1990-01-01'
204,880,"Paul di Resta was in the No. 853 race, what percent faster did he finish in the 853rd race than the next race for the fastest lap speed?",formula_1,challenging,"SELECT (SUM(IIF(T2.raceId = 853, T2.fastestLapSpeed, 0)) - SUM(IIF(T2.raceId = 854, T2.fastestLapSpeed, 0))) * 100 / SUM(IIF(T2.raceId = 853, T2.fastestLapSpeed, 0)) FROM drivers AS T1 INNER JOIN results AS T2 ON T2.driverId = T1.driverId WHERE T1.forename = 'Paul' AND T1.surname = 'di Resta'",7,"SELECT (SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE round = 853) AND position = 1) - (SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE round = 853) AND driverid = (SELECT driverid FROM drivers WHERE surname = 'di Resta')) AS fastest_lap_difference, (SELECT fastestlapspeed FROM results WHERE raceid = (SELECT raceid FROM races WHERE round = 853) AND position = 1) AS fastest_lap_speed FROM results WHERE raceid = (SELECT raceid FROM races WHERE round = 853) AND driverid = (SELECT driverid FROM drivers WHERE surname = 'di Resta') AND position = 1
SELECT (SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE round = 853) AND position = 1) - (SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE round = 854) AND position = 1) AS fastestlapspeed_difference, (SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE round = 853) AND position = 1) / (SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE round = 854) AND position = 1) * 100 - 100 AS percentage_difference FROM results WHERE driverid = (SELECT driverid FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta') AND raceid = (SELECT raceid FROM races WHERE round = 853)
SELECT (SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE round = 853) AND position = 1) - (SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE round = 853) AND driverid = (SELECT driverid FROM drivers WHERE surname = 'di Resta')) AS fastest_lap_difference, (SELECT fastestlapspeed FROM results WHERE raceid = (SELECT raceid FROM races WHERE round = 853) AND position = 1) AS fastest_lap_speed FROM results WHERE raceid = (SELECT raceid FROM races WHERE round = 853) AND driverid = (SELECT driverid FROM drivers WHERE surname = 'di Resta') AND position = 1
SELECT (SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE round = 853) AND position = 1) - (SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE round = 854) AND position = 1) AS fastest_lap_difference, (SELECT fastestlapspeed FROM results WHERE raceid = (SELECT raceid FROM races WHERE round = 853) AND position = 1) AS fastest_lap_speed_in_853, (SELECT fastestlapspeed FROM results WHERE raceid = (SELECT raceid FROM races WHERE round = 854) AND position = 1) AS fastest_lap_speed_in_854 FROM results WHERE raceid = (SELECT raceid FROM races WHERE round = 853) AND driverid = (SELECT driverid FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta') AND position = 1
SELECT (SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE round = 853) AND position = 1) - (SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE round = 854) AND position = 1) AS fastestlapspeed_difference, (SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE round = 853) AND position = 1) / (SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE round = 854) AND position = 1) * 100 - 100 AS percentage_difference FROM results WHERE driverid = (SELECT driverid FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta') AND raceid = (SELECT raceid FROM races WHERE round = 853)
SELECT (SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE round = 853) AND position = 1) - (SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE round = 854) AND position = 1) AS fastestlapspeed_difference FROM results WHERE raceid = (SELECT raceid FROM races WHERE round = 853) AND driverid = (SELECT driverid FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta')
SELECT (SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE round = 853) AND position = 1) - (SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE round = 854) AND position = 1) AS fastestlapspeed_difference, (SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE round = 853) AND position = 1) / (SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE round = 854) AND position = 1) * 100 - 100 AS percentage_difference FROM results WHERE driverid = (SELECT driverid FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta') AND raceid = (SELECT raceid FROM races WHERE round = 853)","SELECT (SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE round = 853) AND position = 1) - (SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE round = 854) AND position = 1) AS fastestlapspeed_difference, (SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE round = 853) AND position = 1) / (SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE round = 854) AND position = 1) * 100 - 100 AS percentage_difference FROM results WHERE driverid = (SELECT driverid FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta') AND raceid = (SELECT raceid FROM races WHERE round = 853)"
205,931,What was the fastest lap speed among all drivers in the 2009 Spanish Grand Prix?,formula_1,moderate,SELECT T2.fastestLapSpeed FROM races AS T1 INNER JOIN results AS T2 ON T2.raceId = T1.raceId WHERE T1.name = 'Spanish Grand Prix' AND T1.year = 2009 AND T2.fastestLapSpeed IS NOT NULL ORDER BY T2.fastestLapSpeed DESC LIMIT 1,7,"SELECT MAX(fastestlapspeed) FROM results WHERE raceid IN (SELECT raceid FROM races WHERE name = 'Spanish Grand Prix' AND year = 2009)
SELECT MAX(fastestlapspeed) FROM results WHERE raceid IN (SELECT raceid FROM races WHERE name = 'Spanish Grand Prix' AND year = 2009)
SELECT MAX(fastestlapspeed) FROM results WHERE raceid IN (SELECT raceid FROM races WHERE name = 'Spanish Grand Prix' AND year = 2009)
SELECT MAX(fastestlapspeed) FROM results WHERE raceid IN (SELECT raceid FROM races WHERE name = 'Spanish Grand Prix' AND year = 2009)
SELECT MAX(fastestlapspeed) FROM results WHERE raceid IN (SELECT raceid FROM races WHERE name = 'Spanish Grand Prix' AND year = 2009)
SELECT MAX(fastestlapspeed) FROM results WHERE raceid IN (SELECT raceid FROM races WHERE name = 'Spanish Grand Prix' AND year = 2009)
SELECT MAX(fastestlapspeed) FROM results WHERE raceid IN (SELECT raceid FROM races WHERE name = 'Spanish Grand Prix' AND year = 2009)",SELECT MAX(fastestlapspeed) FROM results WHERE raceid IN (SELECT raceid FROM races WHERE name = 'Spanish Grand Prix' AND year = 2009)
206,1204,How long did it take after patient number 821298 arrived at the hospital for the first time before her evaluation began?,thrombosis_prediction,simple,"SELECT STRFTIME('%d', T3.`Examination Date`) - STRFTIME('%d', T1.`First Date`) FROM Patient AS T1 INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T1.ID = 821298",7,"SELECT MIN(julianday(examination.date) - julianday(patient.first_date)) AS days_until_evaluation FROM examination JOIN patient ON examination.patient_id = patient.id WHERE patient.id = 821298
SELECT MIN(julianday(examination.date) - julianday(patient.first_date)) AS days_until_evaluation FROM examination JOIN patient ON examination.patient_id = patient.id WHERE patient.id = 821298
SELECT MIN(julianday(examination.date) - julianday(patient.first_date)) AS days_until_evaluation FROM examination JOIN patient ON examination.patient_id = patient.id WHERE patient.id = 821298
SELECT MIN(julianday(examination.date) - julianday(patient.first_date)) AS days_until_evaluation FROM examination JOIN patient ON examination.patient_id = patient.id WHERE patient.id = 821298
SELECT MIN(julianday(examination.date) - julianday(patient.first_date)) AS days_until_evaluation FROM examination JOIN patient ON examination.patient_id = patient.id WHERE patient.id = 821298
SELECT MIN(julianday(examination.date) - julianday(patient.first_date)) AS days_until_evaluation FROM examination JOIN patient ON examination.patient_id = patient.id WHERE patient.id = 821298
SELECT MIN(julianday(examination.date) - julianday(patient.first_date)) AS days_until_evaluation FROM examination JOIN patient ON examination.patient_id = patient.id WHERE patient.id = 821298",SELECT MIN(julianday(examination.date) - julianday(patient.first_date)) AS days_until_evaluation FROM examination JOIN patient ON examination.patient_id = patient.id WHERE patient.id = 821298
207,724,Please list the superhero names of all the superheroes that have blue eyes and blond hair.,superhero,challenging,SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Blue' AND T3.colour = 'Blond',7,"SELECT superhero_name FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour_name = 'blue') AND hair_colour_id = (SELECT id FROM colour WHERE colour_name = 'blond')
SELECT superhero_name FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour_name = 'blue') AND hair_colour_id = (SELECT id FROM colour WHERE colour_name = 'blond')
SELECT superhero_name FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'blue') AND hair_colour_id = (SELECT id FROM colour WHERE colour = 'blond')
SELECT superhero_name FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour_name = 'blue') AND hair_colour_id = (SELECT id FROM colour WHERE colour_name = 'blond')
SELECT superhero_name FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'blue') AND hair_colour_id = (SELECT id FROM colour WHERE colour = 'blond')
SELECT superhero_name FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'blue') AND hair_colour_id = (SELECT id FROM colour WHERE colour = 'blond')
SELECT superhero_name FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'blue') AND hair_colour_id = (SELECT id FROM colour WHERE colour = 'blond')",SELECT superhero_name FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'blue') AND hair_colour_id = (SELECT id FROM colour WHERE colour = 'blond')
208,1461,List the last names of students under the Elementary Education major and include their phone numbers.,student_club,simple,"SELECT T1.last_name, T1.phone FROM member AS T1 INNER JOIN major AS T2 ON T2.major_id = T1.link_to_major WHERE T2.major_name = 'Elementary Education'",7,"SELECT last_name, phone FROM member WHERE link_to_major IN (     SELECT major_id     FROM major     WHERE major_name = 'Elementary Education' )
SELECT last_name, phone FROM member WHERE link_to_major IN (     SELECT major_id     FROM major     WHERE major_name = 'Elementary Education' )
SELECT last_name, phone FROM member WHERE link_to_major IN (     SELECT major_id     FROM major     WHERE major_name = 'Elementary Education' )
SELECT last_name, phone FROM member WHERE link_to_major IN (     SELECT major_id     FROM major     WHERE major_name = 'Elementary Education' )
SELECT last_name, phone FROM member WHERE link_to_major IN (SELECT major_id FROM major WHERE major_name = 'Elementary Education')
SELECT last_name, phone FROM member WHERE link_to_major IN (     SELECT major_id     FROM major     WHERE major_name = 'Elementary Education' )
SELECT last_name, phone FROM member WHERE link_to_major IN (     SELECT major_id     FROM major     WHERE major_name = 'Elementary Education' )","SELECT last_name, phone FROM member WHERE link_to_major IN (     SELECT major_id     FROM major     WHERE major_name = 'Elementary Education' )"
209,1139,"What was the final score for the match on September 24, 2008, in the Belgian Jupiler League between the home team and the away team?",european_football_2,challenging,"SELECT t2.home_team_goal, t2.away_team_goal FROM League AS t1 INNER JOIN Match AS t2 ON t1.id = t2.league_id WHERE t1.name = 'Belgium Jupiler League' AND t2.`date` LIKE '2008-09-24%'",7,"SELECT home_team_goal, away_team_goal FROM match WHERE date = '2008-09-24'
SELECT home_team_goal, away_team_goal FROM match WHERE date = '2008-09-24'
SELECT home_team_goal, away_team_goal FROM match WHERE date = '2008-09-24'
SELECT home_team_goal, away_team_goal FROM match WHERE date = '2008-09-24'
SELECT home_team_goal, away_team_goal FROM match WHERE date = '2008-09-24'
SELECT home_team_goal, away_team_goal FROM match WHERE date = '2008-09-24'
SELECT home_team_goal, away_team_goal FROM match WHERE date = '2008-09-24'","SELECT home_team_goal, away_team_goal FROM match WHERE date = '2008-09-24'"
210,968,What is reference name of Robert Kubica?,formula_1,simple,SELECT driverRef FROM drivers WHERE forename = 'Robert' AND surname = 'Kubica',7,"SELECT constructorref FROM constructors WHERE name = 'Robert Kubica'
SELECT constructorref FROM constructors WHERE name = 'Robert Kubica'
SELECT constructorref FROM constructors WHERE name = 'Robert Kubica'
SELECT constructorref FROM constructors WHERE name = 'Robert Kubica'
SELECT constructorref FROM constructors WHERE name = 'Robert Kubica'
SELECT constructorref FROM constructors WHERE name = 'Robert Kubica'
SELECT constructorref FROM constructors WHERE name = 'Robert Kubica'",SELECT constructorref FROM constructors WHERE name = 'Robert Kubica'
211,962,"From 2000 to 2005, what percentage of drivers who were born before 1985 and the lap numbers were over 50?",formula_1,challenging,"SELECT CAST(SUM(IIF(STRFTIME('%Y', T3.dob) < '1985' AND T1.laps > 50, 1, 0)) AS REAL) * 100 / COUNT(*) FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN drivers AS T3 on T1.driverId = T3.driverId WHERE T2.year BETWEEN 2000 AND 2005",7,"SELECT (SELECT COUNT(*) FROM results WHERE results.driverid IN (SELECT drivers.driverid FROM drivers WHERE drivers.dob < '1985-01-01' AND results.lap > 50) AND results.raceid IN (SELECT races.raceid FROM races WHERE races.year BETWEEN 2000 AND 2005)) * 100.0 / (SELECT COUNT(*) FROM results WHERE results.driverid IN (SELECT drivers.driverid FROM drivers WHERE drivers.dob < '1985-01-01')) AS percentage_drivers
SELECT (SELECT COUNT(*) FROM results WHERE results.driverid IN (SELECT drivers.driverid FROM drivers WHERE drivers.dob < '1985-01-01' AND results.lap > 50) AND results.raceid IN (SELECT races.raceid FROM races WHERE races.year BETWEEN 2000 AND 2005)) * 100.0 / (SELECT COUNT(*) FROM results WHERE results.driverid IN (SELECT drivers.driverid FROM drivers WHERE drivers.dob < '1985-01-01')) AS percentage_drivers
SELECT (SELECT COUNT(*) FROM results WHERE results.driverid IN (SELECT drivers.driverid FROM drivers WHERE drivers.dob < '1985-01-01' AND results.lap > 50) AND results.raceid IN (SELECT races.raceid FROM races WHERE races.year BETWEEN 2000 AND 2005)) * 100.0 / (SELECT COUNT(*) FROM results WHERE results.driverid IN (SELECT drivers.driverid FROM drivers WHERE drivers.dob < '1985-01-01')) AS percentage_drivers
SELECT (SELECT COUNT(*) FROM results WHERE results.driverid IN (SELECT drivers.driverid FROM drivers WHERE drivers.dob < '1985-01-01' AND results.lap > 50) AND results.raceid IN (SELECT races.raceid FROM races WHERE races.year BETWEEN 2000 AND 2005)) * 100.0 / (SELECT COUNT(*) FROM results WHERE results.driverid IN (SELECT drivers.driverid FROM drivers WHERE drivers.dob < '1985-01-01')) AS percentage_drivers
SELECT (SELECT COUNT(*) FROM results WHERE results.driverid IN (SELECT drivers.driverid FROM drivers WHERE drivers.dob < '1985-01-01' AND results.lap > 50) AND results.raceid IN (SELECT races.raceid FROM races WHERE races.year BETWEEN 2000 AND 2005)) * 100.0 / (SELECT COUNT(*) FROM results WHERE results.driverid IN (SELECT drivers.driverid FROM drivers WHERE drivers.dob < '1985-01-01')) AS percentage_drivers
SELECT (SELECT COUNT(*) FROM results WHERE results.driverid IN (SELECT drivers.driverid FROM drivers WHERE drivers.dob < '1985-01-01' AND results.lap > 50) AND results.raceid IN (SELECT races.raceid FROM races WHERE races.year BETWEEN 2000 AND 2005)) * 100.0 / (SELECT COUNT(*) FROM results WHERE results.driverid IN (SELECT drivers.driverid FROM drivers WHERE drivers.dob < '1985-01-01')) AS percentage_drivers
SELECT (SELECT COUNT(*) FROM results WHERE results.driverid IN (SELECT drivers.driverid FROM drivers WHERE drivers.dob < '1985-01-01' AND results.lap > 50) AND results.raceid IN (SELECT races.raceid FROM races WHERE races.year BETWEEN 2000 AND 2005)) * 100.0 / (SELECT COUNT(*) FROM results WHERE results.driverid IN (SELECT drivers.driverid FROM drivers WHERE drivers.dob < '1985-01-01')) AS percentage_drivers",SELECT (SELECT COUNT(*) FROM results WHERE results.driverid IN (SELECT drivers.driverid FROM drivers WHERE drivers.dob < '1985-01-01' AND results.lap > 50) AND results.raceid IN (SELECT races.raceid FROM races WHERE races.year BETWEEN 2000 AND 2005)) * 100.0 / (SELECT COUNT(*) FROM results WHERE results.driverid IN (SELECT drivers.driverid FROM drivers WHERE drivers.dob < '1985-01-01')) AS percentage_drivers
212,1102,"For the players who had a 77 points overall rating on 2016/6/23, who was the oldest? Give the name of the player.",european_football_2,moderate,"SELECT t1.player_name FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE SUBSTR(t2.`date`, 1, 10) = '2016-06-23' AND t2.overall_rating = 77 ORDER BY t1.birthday ASC LIMIT 1",7,"SELECT player_name  FROM player  JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id  WHERE player_attributes.date = '2016/6/23'  AND player_attributes.overall_rating = 77  ORDER BY player.birthday ASC  LIMIT 1
SELECT player_name  FROM player  JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id  WHERE player_attributes.date = '2016/6/23'  AND player_attributes.overall_rating = 77  ORDER BY player.birthday ASC  LIMIT 1
SELECT player_name  FROM player  JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id  WHERE player_attributes.overall_rating = 77  AND player_attributes.date = '2016/6/23'  ORDER BY player.birthday ASC  LIMIT 1
SELECT player_name  FROM player  JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id  WHERE player_attributes.overall_rating = 77  AND player_attributes.date = '2016/6/23'  ORDER BY player.birthday ASC  LIMIT 1
SELECT player_name  FROM player  JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id  WHERE player_attributes.date = '2016/6/23' AND player_attributes.overall_rating = 77  ORDER BY player.birthday ASC  LIMIT 1
SELECT player_name  FROM player  JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id  WHERE player_attributes.overall_rating = 77  AND player_attributes.date = '2016/6/23'  ORDER BY player.birthday ASC  LIMIT 1
SELECT player_name  FROM player  JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id  WHERE player_attributes.overall_rating = 77  AND player_attributes.date = '2016/6/23'  ORDER BY player.birthday ASC  LIMIT 1",SELECT player_name  FROM player  JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id  WHERE player_attributes.overall_rating = 77  AND player_attributes.date = '2016/6/23'  ORDER BY player.birthday ASC  LIMIT 1
213,1025,Give the name of the league had the most goals in the 2016 season?,european_football_2,moderate,SELECT t2.name FROM Match AS t1 INNER JOIN League AS t2 ON t1.league_id = t2.id WHERE t1.season = '2015/2016' GROUP BY t2.name ORDER BY SUM(t1.home_team_goal + t1.away_team_goal) DESC LIMIT 1,7,"SELECT league.name  FROM match  JOIN league ON match.league_id = league.id  WHERE match.season = '2016'  GROUP BY league.name  ORDER BY SUM(match.home_team_goal + match.away_team_goal) DESC  LIMIT 1
SELECT league.name  FROM match  JOIN league ON match.league_id = league.id  WHERE match.season = '2016'  GROUP BY league.name  ORDER BY SUM(match.home_team_goal + match.away_team_goal) DESC  LIMIT 1
SELECT league.name  FROM match  JOIN league ON match.league_id = league.id  WHERE match.season = '2016'  GROUP BY league.name  ORDER BY SUM(match.home_team_goal + match.away_team_goal) DESC  LIMIT 1
SELECT league.name  FROM match  JOIN league ON match.league_id = league.id  WHERE match.season = '2016'  GROUP BY league.name  ORDER BY SUM(match.home_team_goal + match.away_team_goal) DESC  LIMIT 1
SELECT league.name  FROM match  JOIN league ON match.league_id = league.id  WHERE match.season = '2016'  GROUP BY league.name  ORDER BY SUM(match.home_team_goal + match.away_team_goal) DESC  LIMIT 1
SELECT league.name  FROM match  JOIN league ON match.league_id = league.id  WHERE match.season = '2016'  GROUP BY league.name  ORDER BY SUM(match.home_team_goal + match.away_team_goal) DESC  LIMIT 1
SELECT league.name  FROM match  JOIN league ON match.league_id = league.id  WHERE match.season = '2016'  GROUP BY league.name  ORDER BY SUM(match.home_team_goal + match.away_team_goal) DESC  LIMIT 1",SELECT league.name  FROM match  JOIN league ON match.league_id = league.id  WHERE match.season = '2016'  GROUP BY league.name  ORDER BY SUM(match.home_team_goal + match.away_team_goal) DESC  LIMIT 1
214,234,How many bonds which involved atom 12 does molecule TR009 have?,toxicology,moderate,SELECT COUNT(T2.bond_id) FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.molecule_id = 'TR009' AND T2.atom_id = T1.molecule_id || '_1' AND T2.atom_id2 = T1.molecule_id || '_2',7,"SELECT COUNT(*) FROM bond WHERE atom_id IN (SELECT atom_id FROM atom WHERE molecule_id = 'TR009' AND element = '12')
SELECT COUNT(*) FROM bond WHERE atom_id IN (SELECT atom_id FROM atom WHERE molecule_id = 'TR009' AND element = '12')
SELECT COUNT(*) FROM bond WHERE atom_id IN (SELECT atom_id FROM atom WHERE molecule_id = 'TR009' AND element = '12')
SELECT COUNT(*) FROM bond WHERE atom_id IN (SELECT atom_id FROM atom WHERE molecule_id = 'TR009' AND element = '12')
SELECT COUNT(*) FROM bond WHERE atom_id IN (SELECT atom_id FROM atom WHERE molecule_id = 'TR009' AND element = '12')
SELECT COUNT(*) FROM bond WHERE atom_id IN (SELECT atom_id FROM atom WHERE molecule_id = 'TR009' AND element = '12')
SELECT COUNT(*) FROM bond WHERE atom_id IN (SELECT atom_id FROM atom WHERE molecule_id = 'TR009' AND element = '12')",SELECT COUNT(*) FROM bond WHERE atom_id IN (SELECT atom_id FROM atom WHERE molecule_id = 'TR009' AND element = '12')
215,1460,"Write the full name of the member who spent money for water, veggie tray and supplies and include the cost of it.",student_club,challenging,"SELECT T2.first_name, T2.last_name, T1.cost FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.expense_description = 'Water, Veggie tray, supplies'",7,"SELECT m.first_name || ' ' || m.last_name AS full_name, SUM(e.cost) AS total_spent FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.expense_description IN ('water', 'veggie tray', 'supplies') GROUP BY m.member_id HAVING total_spent > 0
SELECT m.first_name || ' ' || m.last_name AS full_name, SUM(e.cost) AS total_spent FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.expense_description IN ('water', 'veggie tray', 'supplies') GROUP BY m.member_id HAVING total_spent > 0
SELECT m.first_name || ' ' || m.last_name AS full_name, SUM(e.cost) AS total_spent FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.expense_description IN ('water', 'veggie tray', 'supplies') GROUP BY m.member_id HAVING total_spent > 0
SELECT m.first_name || ' ' || m.last_name AS full_name, SUM(e.cost) AS total_spent FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.expense_description IN ('water', 'veggie tray', 'supplies') GROUP BY m.member_id HAVING total_spent > 0
SELECT m.first_name || ' ' || m.last_name AS full_name, SUM(e.cost) AS total_spent FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.expense_description IN ('water', 'veggie tray', 'supplies') GROUP BY m.member_id HAVING total_spent > 0
SELECT m.first_name || ' ' || m.last_name AS full_name, SUM(e.cost) AS total_spent FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.expense_description IN ('water', 'veggie tray', 'supplies') GROUP BY m.member_id HAVING total_spent > 0
SELECT m.first_name || ' ' || m.last_name AS full_name, SUM(e.cost) AS total_spent FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.expense_description IN ('water', 'veggie tray', 'supplies') GROUP BY m.member_id HAVING total_spent > 0","SELECT m.first_name || ' ' || m.last_name AS full_name, SUM(e.cost) AS total_spent FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.expense_description IN ('water', 'veggie tray', 'supplies') GROUP BY m.member_id HAVING total_spent > 0"
216,1258,How many patients with a normal Rhuematoid Factor has a positive measure of degree of coagulation?,thrombosis_prediction,moderate,SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T3.ID = T2.ID WHERE (T2.RA = '-' OR T2.RA = '+-') AND T3.KCT = '+',7,"SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.diagnosis = 'normal rheumatoid factor' AND l.rf = 'positive'
SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.rf = 'normal' AND l.ra = 'positive'
SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.rf = 'normal' AND l.ra = 'positive'
SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.rf = 'normal' AND l.ra = 'positive'
SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.rf = 'normal' AND l.ra = 'positive'
SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.rf = 'normal' AND l.ra = 'positive'
SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.diagnosis = 'normal rheumatoid factor' AND l.rf = 'positive'",SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.rf = 'normal' AND l.ra = 'positive'
217,1185,"For the patient who was born on 1959/2/18, what is the decrease rate for his/her total cholesterol from November to December in 1981?",thrombosis_prediction,challenging,SELECT CAST((SUM(CASE WHEN T2.Date LIKE '1981-11-%' THEN T2.`T-CHO` ELSE 0 END) - SUM(CASE WHEN T2.Date LIKE '1981-12-%' THEN T2.`T-CHO` ELSE 0 END)) AS REAL) / SUM(CASE WHEN T2.Date LIKE '1981-12-%' THEN T2.`T-CHO` ELSE 0 END) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday = '1959-02-18',7,"SELECT tg  FROM laboratory  WHERE id IN (     SELECT id      FROM patient      WHERE birthday = '1959-02-18' )  AND date BETWEEN '1981-11-01' AND '1981-12-31'
SELECT tg FROM laboratory WHERE id IN (SELECT id FROM patient WHERE birthday = '1959/2/18') AND date BETWEEN '1981/11/1' AND '1981/12/31'
SELECT tg  FROM laboratory  WHERE id IN (     SELECT id      FROM patient      WHERE birthday = '1959-02-18' )  AND date >= '1981-11-01'  AND date <= '1981-12-31'
SELECT (laboratory.t_cho - LAG(laboratory.t_cho) OVER (PARTITION BY laboratory.id ORDER BY laboratory.date)) / LAG(laboratory.t_cho) OVER (PARTITION BY laboratory.id ORDER BY laboratory.date) * 100 AS decrease_rate FROM laboratory JOIN patient ON laboratory.id = patient.id WHERE patient.birthday = '1959-02-18' AND laboratory.date >= '1981-11-01' AND laboratory.date <= '1981-12-31' AND laboratory.date = (SELECT MAX(date) FROM laboratory WHERE id = patient.id AND date <= '1981-12-31') 
SELECT (laboratory.t_cho - LAG(laboratory.t_cho) OVER (PARTITION BY laboratory.id ORDER BY laboratory.date)) / LAG(laboratory.t_cho) OVER (PARTITION BY laboratory.id ORDER BY laboratory.date) * 100 AS decrease_rate FROM laboratory JOIN patient ON laboratory.id = patient.id WHERE patient.birthday = '1959-02-18' AND laboratory.date >= '1981-11-01' AND laboratory.date <= '1981-12-31' AND laboratory.date = (SELECT MAX(date) FROM laboratory WHERE id = laboratory.id AND date <= '1981-12-31') 
SELECT tg FROM laboratory WHERE id IN (SELECT id FROM patient WHERE birthday = '1959/2/18') AND date BETWEEN '1981/11/1' AND '1981/12/31'
SELECT tg FROM laboratory WHERE id IN (SELECT id FROM patient WHERE birthday = '1959/2/18') AND date BETWEEN '1981/11/1' AND '1981/12/31'",SELECT tg FROM laboratory WHERE id IN (SELECT id FROM patient WHERE birthday = '1959/2/18') AND date BETWEEN '1981/11/1' AND '1981/12/31'
218,37,"What is the complete address of the school with the lowest excellence rate? Indicate the Street, City, Zip and State.",california_schools,moderate,"SELECT T2.Street, T2.City, T2.State, T2.Zip FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY CAST(T1.NumGE1500 AS REAL) / T1.NumTstTakr ASC LIMIT 1",7,"SELECT street, city, zip, state FROM schools WHERE excellence_rate = (SELECT MIN(excellence_rate) FROM schools)
SELECT street, city, zip, state FROM schools WHERE excellence_rate = (SELECT MIN(excellence_rate) FROM schools)
SELECT street, city, zip, state FROM schools WHERE excellence_rate = (SELECT MIN(excellence_rate) FROM schools)
SELECT street, city, zip, state FROM schools WHERE excellence_rate = (SELECT MIN(excellence_rate) FROM schools)
SELECT street, city, zip, state FROM schools WHERE excellence_rate = (SELECT MIN(excellence_rate) FROM schools)
SELECT street, city, zip, state FROM schools WHERE excellence_rate = (SELECT MIN(excellence_rate) FROM schools)
SELECT street, city, zip, state FROM schools WHERE excellence_rate = (SELECT MIN(excellence_rate) FROM schools)","SELECT street, city, zip, state FROM schools WHERE excellence_rate = (SELECT MIN(excellence_rate) FROM schools)"
219,285,Name chemical elements that form a bond TR001_10_11.,toxicology,challenging,SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR001_10_11',7,"SELECT DISTINCT e1.element, e2.element FROM connected c JOIN TR001_10_11_atom e1 ON c.atom_id = e1.atom_id JOIN TR001_10_11_atom e2 ON c.atom_id2 = e2.atom_id WHERE c.bond_id IN (     SELECT bond_id     FROM bond     WHERE bond_type = 'TR001_10_11' )
SELECT DISTINCT e1.element, e2.element FROM connected c JOIN TR001_10_11_atom e1 ON c.atom_id = e1.atom_id JOIN TR001_10_11_atom e2 ON c.atom_id2 = e2.atom_id WHERE c.bond_id IN (     SELECT bond_id     FROM bond     WHERE bond_type = 'TR001_10_11' )
SELECT DISTINCT e1.element, e2.element FROM connected c JOIN TR001_10_11_atom e1 ON c.atom_id = e1.atom_id JOIN TR001_10_11_atom e2 ON c.atom_id2 = e2.atom_id WHERE c.bond_id IN (     SELECT bond_id     FROM bond     WHERE bond_type = 'TR001_10_11' )
SELECT DISTINCT e1.element, e2.element FROM connected c JOIN TR001_10_11_atom e1 ON c.atom_id = e1.atom_id JOIN TR001_10_11_atom e2 ON c.atom_id2 = e2.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'TR001_10_11' AND e1.molecule_id = e2.molecule_id
SELECT DISTINCT e1.element, e2.element FROM connected c JOIN TR001_10_11_atom e1 ON c.atom_id = e1.atom_id JOIN TR001_10_11_atom e2 ON c.atom_id2 = e2.atom_id WHERE c.bond_id IN (     SELECT bond_id     FROM bond     WHERE bond_type = 'TR001_10_11' )
SELECT DISTINCT e1.element, e2.element FROM connected c JOIN TR001_10_11_atom e1 ON c.atom_id = e1.atom_id JOIN TR001_10_11_atom e2 ON c.atom_id2 = e2.atom_id WHERE c.bond_id IN (     SELECT bond_id     FROM bond     WHERE bond_type = 'TR001_10_11' )
SELECT DISTINCT e1.element, e2.element FROM connected c JOIN TR001_10_11_atom e1 ON c.atom_id = e1.atom_id JOIN TR001_10_11_atom e2 ON c.atom_id2 = e2.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'TR001_10_11' AND e1.molecule_id = e2.molecule_id","SELECT DISTINCT e1.element, e2.element FROM connected c JOIN TR001_10_11_atom e1 ON c.atom_id = e1.atom_id JOIN TR001_10_11_atom e2 ON c.atom_id2 = e2.atom_id WHERE c.bond_id IN (     SELECT bond_id     FROM bond     WHERE bond_type = 'TR001_10_11' )"
220,302,Name the elements that comprise the atoms of bond TR001_2_4.,toxicology,challenging,SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_2_4',7,"SELECT atom.atom_id, atom.molecule_id, atom.element  FROM atom  JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE molecule.label = 'TR001_2_4'
SELECT atom.atom_id, atom.molecule_id, atom.element  FROM atom  JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE molecule.label = 'TR001_2_4'
SELECT atom.atom_id, atom.molecule_id, atom.element  FROM atom  JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE molecule.label = 'TR001_2_4'
SELECT atom.atom_id, atom.molecule_id, atom.element  FROM atom  JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE molecule.label = 'TR001_2_4'
SELECT atom.atom_id, atom.molecule_id, atom.element  FROM atom  JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE molecule.label = 'TR001_2_4'
SELECT atom.atom_id, atom.molecule_id, atom.element  FROM atom  JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE molecule.label = 'TR001_2_4'
SELECT atom.atom_id, atom.molecule_id, atom.element  FROM atom  JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE molecule.label = 'TR001_2_4'","SELECT atom.atom_id, atom.molecule_id, atom.element  FROM atom  JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE molecule.label = 'TR001_2_4'"
221,1514,What kind of currency did the customer paid at 16:25:00 in 2012/8/24?,debit_card_specializing,simple,SELECT DISTINCT T3.Currency FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN customers AS T3 ON T1.CustomerID = T3.CustomerID WHERE T1.Date = '2012-08-24' AND T1.Time = '16:25:00',7,"SELECT currency FROM transactions_1k WHERE date = '2012/8/24' AND time = '16:25:00'
SELECT currency FROM transactions_1k WHERE date = '2012/8/24' AND time = '16:25:00'
SELECT currency FROM transactions_1k WHERE date = '2012/8/24' AND time = '16:25:00'
SELECT currency FROM transactions_1k WHERE date = '2012/8/24' AND time = '16:25:00'
SELECT currency FROM transactions_1k WHERE date = '2012/8/24' AND time = '16:25:00'
SELECT currency FROM transactions_1k WHERE date = '2012/8/24' AND time = '16:25:00'
SELECT currency FROM transactions_1k WHERE date = '2012/8/24' AND time = '16:25:00'",SELECT currency FROM transactions_1k WHERE date = '2012/8/24' AND time = '16:25:00'
222,734,What is the publisher's name of Blue Beetle II?,superhero,simple,SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name = 'Blue Beetle II',7,"SELECT publisher_name FROM publisher WHERE id = (SELECT publisher_id FROM superhero WHERE superhero_name = 'Blue Beetle II')
SELECT publisher_name FROM publisher WHERE id = (SELECT publisher_id FROM superhero WHERE superhero_name = 'Blue Beetle II')
SELECT publisher_name FROM publisher WHERE id = (SELECT publisher_id FROM superhero WHERE superhero_name = 'Blue Beetle II')
SELECT publisher_name FROM publisher WHERE id = (SELECT publisher_id FROM superhero WHERE superhero_name = 'Blue Beetle II')
SELECT publisher_name FROM publisher WHERE id = (SELECT publisher_id FROM superhero WHERE superhero_name = 'Blue Beetle II')
SELECT publisher_name FROM publisher WHERE id = (SELECT publisher_id FROM superhero WHERE superhero_name = 'Blue Beetle II')
SELECT publisher_name FROM publisher WHERE id = (SELECT publisher_id FROM superhero WHERE superhero_name = 'Blue Beetle II')",SELECT publisher_name FROM publisher WHERE id = (SELECT publisher_id FROM superhero WHERE superhero_name = 'Blue Beetle II')
223,1260,Please list the ID of the patient whose RF is normal and who is older than 60.,thrombosis_prediction,simple,"SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RF < 20 AND STRFTIME('%Y', DATE('now')) - STRFTIME('%Y', T1.Birthday) > 60",7,"SELECT patient.id FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.rf = 'normal' AND (strftime('%Y', 'now') - strftime('%Y', patient.birthday)) > 60
SELECT patient.id FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.rf = 'normal' AND (strftime('%Y', 'now') - strftime('%Y', patient.birthday)) > 60
SELECT patient.id FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.rf = 'normal' AND (strftime('%Y', 'now') - strftime('%Y', patient.birthday)) > 60
SELECT patient.id FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.rf = 'normal' AND (strftime('%Y', 'now') - strftime('%Y', patient.birthday)) > 60
SELECT patient.id FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.rf = 'normal' AND (strftime('%Y', 'now') - strftime('%Y', patient.birthday)) > 60
SELECT patient.id FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.rf = 'normal' AND (strftime('%Y', 'now') - strftime('%Y', patient.birthday)) > 60
SELECT patient.id FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.rf = 'normal' AND (strftime('%Y', 'now') - strftime('%Y', patient.birthday)) > 60","SELECT patient.id FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.rf = 'normal' AND (strftime('%Y', 'now') - strftime('%Y', patient.birthday)) > 60"
224,282,What is the ratio of Hydrogen elements in molecule ID TR006? List the ratio with its label.,toxicology,challenging,"WITH SubQuery AS (SELECT DISTINCT T1.atom_id, T1.element, T1.molecule_id, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR006') SELECT CAST(COUNT(CASE WHEN element = 'h' THEN atom_id ELSE NULL END) AS REAL) / (CASE WHEN COUNT(atom_id) = 0 THEN NULL ELSE COUNT(atom_id) END) AS ratio, label FROM SubQuery GROUP BY label",7,"SELECT (SELECT COUNT(*) FROM atom WHERE element = 'H' AND molecule_id = 'TR006') / (SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR006') AS ratio
SELECT (SELECT COUNT(*) FROM atom WHERE element = 'H' AND molecule_id = 'TR006') / (SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR006') AS ratio
SELECT (SELECT COUNT(*) FROM atom WHERE element = 'H' AND molecule_id = 'TR006') / (SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR006') AS ratio
SELECT (SELECT COUNT(*) FROM atom WHERE element = 'H' AND molecule_id = 'TR006') / (SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR006') AS hydrogen_ratio
SELECT (SELECT COUNT(*) FROM atom WHERE element = 'H' AND molecule_id = 'TR006') / (SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR006') AS ratio
SELECT (SELECT COUNT(*) FROM atom WHERE element = 'H' AND molecule_id = 'TR006') / (SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR006') AS ratio
SELECT (SELECT COUNT(*) FROM atom WHERE element = 'H' AND molecule_id = 'TR006') / (SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR006') AS ratio",SELECT (SELECT COUNT(*) FROM atom WHERE element = 'H' AND molecule_id = 'TR006') / (SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR006') AS ratio
225,1401,Indicate the cost of posters for 'September Speaker' event.,student_club,moderate,SELECT T3.cost FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T1.event_name = 'September Speaker' AND T3.expense_description = 'Posters',7,"SELECT cost FROM expense WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'September Speaker')
SELECT cost FROM expense WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'September Speaker')
SELECT cost FROM expense WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'September Speaker')
SELECT cost FROM expense WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'September Speaker')
SELECT cost FROM expense WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'September Speaker')
SELECT cost FROM expense WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'September Speaker')
SELECT cost FROM expense WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'September Speaker')",SELECT cost FROM expense WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'September Speaker')
226,1433,Which countries have zip codes with post office boxes?,student_club,simple,SELECT DISTINCT county FROM zip_code WHERE type = 'PO Box' AND county IS NOT NULL,7,"SELECT DISTINCT state FROM zip_code WHERE type = 'PO Box'
SELECT DISTINCT state FROM zip_code WHERE type = 'PO Box'
SELECT DISTINCT state FROM zip_code WHERE type = 'PO Box'
SELECT DISTINCT state FROM zip_code WHERE type = 'PO Box'
SELECT DISTINCT state FROM zip_code WHERE type = 'PO Box'
SELECT DISTINCT state FROM zip_code WHERE type = 'PO Box'
SELECT DISTINCT state FROM zip_code WHERE type = 'PO Box'",SELECT DISTINCT state FROM zip_code WHERE type = 'PO Box'
227,334,What is the element with the atom ID of TR004_7 in molecule that is not carcinogenic?,toxicology,challenging,SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR004_7' AND T2.label = '-',7,"SELECT element FROM atom WHERE atom_id = 'TR004_7' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label NOT LIKE '%carcinogenic%')
SELECT element FROM atom WHERE atom_id = 'TR004_7' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label NOT LIKE '%carcinogenic%')
SELECT element FROM atom WHERE atom_id = 'TR004_7' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label NOT LIKE '%carcinogenic%')
SELECT element FROM atom WHERE atom_id = 'TR004_7' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label NOT LIKE '%carcinogenic%')
SELECT element FROM atom WHERE atom_id = 'TR004_7' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label NOT LIKE '%carcinogenic%')
SELECT element FROM atom WHERE atom_id = 'TR004_7' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label NOT LIKE '%carcinogenic%')
SELECT element FROM atom WHERE atom_id = 'TR004_7' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label NOT LIKE '%carcinogenic%')",SELECT element FROM atom WHERE atom_id = 'TR004_7' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label NOT LIKE '%carcinogenic%')
228,158,What is the district Id of the account that placed the order with the id 33333?,financial,simple,SELECT T3.district_id FROM `order` AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.order_id = 33333,7,"SELECT district_id FROM account WHERE account_id = (SELECT account_id FROM `order` WHERE order_id = 33333)
SELECT district_id FROM account WHERE account_id = (SELECT account_id FROM `order` WHERE order_id = 33333)
SELECT district_id FROM account WHERE account_id = (SELECT account_id FROM `order` WHERE order_id = 33333)
SELECT district_id FROM account WHERE account_id = (SELECT account_id FROM `order` WHERE order_id = 33333)
SELECT district_id FROM account WHERE account_id = (SELECT account_id FROM `order` WHERE order_id = 33333)
SELECT district_id FROM account WHERE account_id = (SELECT account_id FROM `order` WHERE order_id = 33333)
SELECT district_id FROM account WHERE account_id = (SELECT account_id FROM `order` WHERE order_id = 33333)",SELECT district_id FROM account WHERE account_id = (SELECT account_id FROM `order` WHERE order_id = 33333)
229,220,Please list top three elements of the toxicology of the molecule TR000 in alphabetical order.,toxicology,challenging,SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR000' ORDER BY T.element LIMIT 3,7,"SELECT element FROM atom WHERE molecule_id = 'TR000' ORDER BY element LIMIT 3
SELECT element FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR000') ORDER BY element ASC LIMIT 3
SELECT element FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR000') ORDER BY element ASC LIMIT 3
SELECT element FROM atom WHERE molecule_id = 'TR000' ORDER BY element LIMIT 3
SELECT element FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR000') ORDER BY element ASC LIMIT 3
SELECT element FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR000') ORDER BY element ASC LIMIT 3
SELECT element FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR000') ORDER BY element ASC LIMIT 3",SELECT element FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR000') ORDER BY element ASC LIMIT 3
230,1247,"Among the male patients who have a normal level of white blood cells, how many of them have an abnormal fibrinogen level?",thrombosis_prediction,challenging,SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.FG <= 150 OR T2.FG >= 450 AND T2.WBC > 3.5 AND T2.WBC < 9.0 AND T1.SEX = 'M',7,"SELECT COUNT(*) FROM laboratory l JOIN patient p ON l.id = p.id WHERE p.sex = 'male' AND l.wbc = 'normal' AND l.fg != 'normal'
SELECT COUNT(*) FROM laboratory l JOIN patient p ON l.id = p.id WHERE p.sex = 'male' AND l.wbc = 'normal' AND l.fg != 'normal'
SELECT COUNT(*) FROM laboratory l JOIN patient p ON l.id = p.id WHERE p.sex = 'male' AND l.wbc = 'normal' AND l.fg != 'normal'
SELECT COUNT(*)  FROM patient p  JOIN examination e ON p.id = e.id  JOIN laboratory l ON p.id = l.id  WHERE p.sex = 'male'  AND l.wbc = 'normal'  AND l.fg = 'abnormal'
SELECT COUNT(*) FROM laboratory l JOIN patient p ON l.id = p.id WHERE p.sex = 'male' AND l.wbc = 'normal' AND l.fg != 'normal'
SELECT COUNT(*) FROM laboratory l JOIN patient p ON l.id = p.id WHERE p.sex = 'male' AND l.wbc = 'normal' AND l.fg != 'normal'
SELECT COUNT(*) FROM laboratory l JOIN patient p ON l.id = p.id WHERE p.sex = 'male' AND l.wbc = 'normal' AND l.fg != 'normal'",SELECT COUNT(*) FROM laboratory l JOIN patient p ON l.id = p.id WHERE p.sex = 'male' AND l.wbc = 'normal' AND l.fg != 'normal'
231,149,"Please list the account types that are not eligible for loans, and the average income of residents in the district where the account is located exceeds $8000 but is no more than $9000.",financial,challenging,SELECT T3.type FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T2.account_id = T3.account_id WHERE T3.type != 'OWNER' AND T1.A11 BETWEEN 8000 AND 9000,7,"SELECT d.a2 AS district, d.a6 AS average_income FROM district d JOIN disp dp ON d.district_id = dp.district_id JOIN account a ON dp.account_id = a.account_id JOIN client c ON dp.client_id = c.client_id WHERE a.frequency = 'monthly' AND d.a6 BETWEEN 8000 AND 9000 AND dp.type = 'OWNER' AND NOT EXISTS (     SELECT 1     FROM loan l     WHERE l.account_id = a.account_id ) GROUP BY d.district_id
SELECT d.a2 AS district_name, d.a10 AS average_income FROM district d JOIN disp dp ON d.district_id = dp.district_id JOIN account a ON dp.account_id = a.account_id JOIN client c ON dp.client_id = c.client_id WHERE a.frequency = 'monthly' AND d.a10 BETWEEN 8000 AND 9000 AND dp.type = 'OWNER' AND NOT EXISTS (     SELECT 1     FROM loan l     WHERE l.account_id = a.account_id ) GROUP BY d.district_id
SELECT d.a2 AS district, d.a3 AS region, d.a4 AS population, d.a5 AS urban_ratio, d.a6 AS avg_salary, d.a7 AS unemploy_rate, d.a8 AS crime_rate, d.a9 AS unemployment, d.a10 AS avg_income, d.a11 AS avg_expense, d.a12 AS avg_salary_in_city, d.a13 AS clients_per_branch, d.a14 AS atms_per_1000_clients, d.a15 AS avg_salary_in_district, d.a16 AS avg_unemploy_rate FROM district d JOIN disp dp ON d.district_id = dp.district_id JOIN account a ON dp.account_id = a.account_id JOIN client c ON dp.client_id = c.client_id JOIN loan l ON a.account_id = l.account_id WHERE l.status = 'B' AND d.a10 > 8000 AND d.a10 <= 9000
SELECT d.a2 AS district, d.a3 AS region, d.a4 AS population, d.a5 AS number_of_cities, d.a6 AS ratio_of_urban_inhabitants, d.a7 AS average_salary, d.a8 AS unemployement_rate, d.a9 AS number_of_entrepreneurs, d.a10 AS number_of_commited_crimes, d.a11 AS number_of_inhabitants_per_1000_sq_km, d.a12 AS average_income, d.a13 AS average_salary_of_municipalities, d.a14 AS number_of_enterpreneurs_per_1000_inhabitants, d.a15 AS number_of_crimes_per_1000_inhabitants, d.a16 AS number_of_vehicles_per_1000_inhabitants FROM district d JOIN disp ds ON d.district_id = ds.district_id JOIN account a ON ds.account_id = a.account_id JOIN client c ON ds.client_id = c.client_id JOIN loan l ON a.account_id = l.account_id WHERE l.status = 'B' AND d.a12 > 
SELECT d.a2 AS district, d.a3 AS region, d.a4 AS population, d.a5 AS number_of_cities, d.a6 AS ratio_of_urban_inhabitants, d.a7 AS average_salary, d.a8 AS unemployement_rate, d.a9 AS number_of_entrepreneurs, d.a10 AS number_of_commited_crimes, d.a11 AS number_of_inhabitants_per_1000_sq_km, d.a12 AS average_income, d.a13 AS average_salary_of_municipalities, d.a14 AS number_of_enterpreneurs_per_1000_inhabitants, d.a15 AS number_of_crimes_per_1000_inhabitants, d.a16 AS number_of_villed_inhabitants_per_1000_sq_km FROM district d JOIN disp d2 ON d.district_id = d2.district_id JOIN account a ON d2.account_id = a.account_id JOIN client c ON d2.client_id = c.client_id JOIN loan l ON a.account_id = l.account_id WHERE l.status = 'B' 
SELECT d.a2 AS district, d.a12 AS no_of_inhabitants, d.a15 AS average_salary FROM district d JOIN disp dp ON d.district_id = dp.district_id JOIN account a ON dp.account_id = a.account_id JOIN client c ON dp.client_id = c.client_id JOIN loan l ON a.account_id = l.account_id WHERE l.status = 'B' AND d.a12 > 8000 AND d.a12 <= 9000 AND c.birth_date < DATE('now', '-30 year') AND dp.type = 'OWNER' GROUP BY d.district_id HAVING COUNT(DISTINCT a.account_id) > 5
SELECT d.a2 AS district, d.a3 AS region, d.a4 AS number_of_inhabitants, d.a5 AS number_of_municipalities, d.a6 AS number_of_cities, d.a7 AS number_of_urban_inhabitants, d.a8 AS number_of_houses, d.a9 AS number_of_communities, d.a10 AS average_salary, d.a11 AS average_unemployment_rate, d.a12 AS number_of_enterpreneurs, d.a13 AS number_of_commited_crimes, d.a14 AS number_of_law_enforcement_stations, d.a15 AS number_of_policemen, d.a16 AS number_of_vehicles, a.type AS account_type FROM district d JOIN disp d2 ON d.district_id = d2.district_id JOIN account a ON d2.account_id = a.account_id WHERE a.frequency = 'monthly' AND d.a10 > 8000 AND d.a10 <= 9000 AND d2.type = 'OWNER' AND NOT EXISTS (SELECT 1 FROM loan l WHERE l.account_id = d2.account_id)","SELECT d.a2 AS district, d.a6 AS average_income FROM district d JOIN disp dp ON d.district_id = dp.district_id JOIN account a ON dp.account_id = a.account_id JOIN client c ON dp.client_id = c.client_id WHERE a.frequency = 'monthly' AND d.a6 BETWEEN 8000 AND 9000 AND dp.type = 'OWNER' AND NOT EXISTS (     SELECT 1     FROM loan l     WHERE l.account_id = a.account_id ) GROUP BY d.district_id"
232,62,What is the total number of non-chartered schools in the county of Los Angeles with a percent (%) of eligible free meals for grades 1 through 12 that is less than 0.18%?,california_schools,challenging,SELECT COUNT(T2.School) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'Los Angeles' AND T2.Charter = 0 AND CAST(T1.`Free Meal Count (K-12)` AS REAL) * 100 / T1.`Enrollment (K-12)` < 0.18,7,"SELECT COUNT(*) FROM schools WHERE county = 'Los Angeles' AND ""percent (%) eligible free (k-12)"" < 0.18
SELECT COUNT(*) FROM schools WHERE county = 'Los Angeles' AND ""percent (%) eligible free (k-12)"" < 0.18
SELECT COUNT(*) FROM schools WHERE county = 'Los Angeles' AND ""percent (%) eligible free (k-12)"" < 0.18
SELECT COUNT(*) FROM schools WHERE county = 'Los Angeles' AND ""percent (%) eligible free (k-12)"" < 0.18
SELECT COUNT(*) FROM schools WHERE county = 'Los Angeles' AND ""percent (%) eligible free (k-12)"" < 0.18
SELECT COUNT(*) FROM schools WHERE county = 'Los Angeles' AND ""percent (%) eligible free (k-12)"" < 0.18
SELECT COUNT(*)  FROM schools  WHERE county = 'Los Angeles'  AND percent_eligible_free_k_12 < 0.18","SELECT COUNT(*) FROM schools WHERE county = 'Los Angeles' AND ""percent (%) eligible free (k-12)"" < 0.18"
233,1257,"Among the patients whose creatinine level is abnormal, how many of them aren't 70 yet?",thrombosis_prediction,challenging,"SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE >= 1.5 AND STRFTIME('%Y', Date('now')) - STRFTIME('%Y', T1.Birthday) < 70",7,"SELECT COUNT(*) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.cre > 70
SELECT COUNT(*) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.cre > 70
SELECT COUNT(*) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.cre > 70
SELECT COUNT(*) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.cre > 70
SELECT COUNT(*) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.cre > 70
SELECT COUNT(*) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.cre > 70
SELECT COUNT(*) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.cre > 70",SELECT COUNT(*) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.cre > 70
234,743,What is the percentage of superheroes who act in their own self-interest or make decisions based on their own moral code? Indicate how many of the said superheroes were published by Marvel Comics.,superhero,challenging,"SELECT (CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM superhero)), CAST(SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS REAL) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN alignment AS T3 ON T3.id = T1.alignment_id WHERE T3.alignment = 'Bad'",7,"SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero) AS percentage_marvel_self_interest FROM superhero s JOIN alignment a ON s.alignment_id = a.id WHERE a.alignment IN ('neutral', 'good', 'bad')
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero) AS percentage_marvel_self_interest FROM superhero s JOIN alignment a ON s.alignment_id = a.id WHERE a.alignment IN ('neutral', 'good', 'bad')
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero) AS percentage_marvel_self_interest FROM superhero s JOIN alignment a ON s.alignment_id = a.id WHERE a.alignment IN ('neutral', 'good', 'bad')
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero) AS percentage_marvel_self_interest FROM superhero s JOIN alignment a ON s.alignment_id = a.id WHERE a.alignment IN ('neutral', 'good', 'bad')
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero) AS percentage_marvel_self_interest FROM superhero s JOIN alignment a ON s.alignment_id = a.id WHERE a.alignment IN ('neutral', 'good', 'bad')
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero) AS percentage_marvel_self_interest FROM superhero s JOIN alignment a ON s.alignment_id = a.id WHERE a.alignment IN ('neutral', 'good', 'bad')
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero) AS percentage_marvel_self_interest FROM superhero s JOIN alignment a ON s.alignment_id = a.id WHERE a.alignment IN ('neutral', 'good', 'bad')","SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero) AS percentage_marvel_self_interest FROM superhero s JOIN alignment a ON s.alignment_id = a.id WHERE a.alignment IN ('neutral', 'good', 'bad')"
235,310,"How many molecules have a double bond type and among these molecule, how many are labeled as carcinogenic compound?",toxicology,moderate,"SELECT COUNT(DISTINCT T2.molecule_id), SUM(CASE WHEN T2.label = '+' THEN 1 ELSE 0 END) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '='",7,"SELECT COUNT(DISTINCT molecule_id) FROM bond WHERE bond_type = 'double' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'carcinogenic')
SELECT COUNT(DISTINCT molecule_id) FROM bond WHERE bond_type = 'double' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'carcinogenic')
SELECT COUNT(DISTINCT molecule_id) FROM bond WHERE bond_type = 'double' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'carcinogenic')
SELECT COUNT(DISTINCT molecule_id) FROM bond WHERE bond_type = 'double' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'carcinogenic')
SELECT COUNT(DISTINCT molecule_id) FROM bond WHERE bond_type = 'double' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'carcinogenic')
SELECT COUNT(DISTINCT molecule_id) FROM bond WHERE bond_type = 'double' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'carcinogenic')
SELECT COUNT(DISTINCT molecule_id) FROM bond WHERE bond_type = 'double' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'carcinogenic')",SELECT COUNT(DISTINCT molecule_id) FROM bond WHERE bond_type = 'double' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'carcinogenic')
236,1111,"State the chance creation passing class for ""PEC Zwolle"" on 2013/9/20.",european_football_2,moderate,"SELECT t2.chanceCreationPassingClass FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t1.team_long_name = 'PEC Zwolle' AND SUBSTR(t2.`date`, 1, 10) = '2013-09-20'",7,"SELECT chancecreationpassingclass  FROM team_attributes  WHERE team_long_name = 'PEC Zwolle'  AND date = '2013-09-20'
SELECT chancecreationpassingclass FROM team_attributes WHERE team_long_name = 'PEC Zwolle' AND date = '2013-09-20'
SELECT chancecreationpassingclass  FROM team_attributes  WHERE team_long_name = 'PEC Zwolle'  AND date = '2013-09-20'
SELECT chancecreationpassingclass  FROM team_attributes  WHERE team_long_name = 'PEC Zwolle'  AND date = '2013-09-20'
SELECT chancecreationpassingclass  FROM team_attributes  WHERE team_long_name = 'PEC Zwolle'  AND date = '2013-09-20'
SELECT chancecreationpassingclass  FROM team_attributes  WHERE team_long_name = 'PEC Zwolle'  AND date = '2013-09-20'
SELECT chancecreationpassingclass  FROM team_attributes  WHERE team_long_name = 'PEC Zwolle'  AND date = '2013-09-20'",SELECT chancecreationpassingclass  FROM team_attributes  WHERE team_long_name = 'PEC Zwolle'  AND date = '2013-09-20'
237,735,How many superheroes with blonde hair are there?,superhero,simple,SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.hair_colour_id = T2.id WHERE T2.colour = 'Blond',7,"SELECT COUNT(*) FROM superhero WHERE hair_colour_id = (SELECT id FROM colour WHERE colour = 'blonde')
SELECT COUNT(*) FROM superhero WHERE hair_colour_id = (SELECT id FROM colour WHERE colour = 'blonde')
SELECT COUNT(*) FROM superhero WHERE hair_colour_id = (SELECT id FROM colour WHERE colour = 'blonde')
SELECT COUNT(*) FROM superhero WHERE hair_colour_id = (SELECT id FROM colour WHERE colour = 'blonde')
SELECT COUNT(*) FROM superhero WHERE hair_colour_id = (SELECT id FROM colour WHERE colour = 'blonde')
SELECT COUNT(*) FROM superhero WHERE hair_colour_id = (SELECT id FROM colour WHERE colour = 'blonde')
SELECT COUNT(*) FROM superhero WHERE hair_colour_id = (SELECT id FROM colour WHERE colour = 'blonde')",SELECT COUNT(*) FROM superhero WHERE hair_colour_id = (SELECT id FROM colour WHERE colour = 'blonde')
238,337,List the element and bond type included in the molecule with molecule ID of TR002.,toxicology,challenging,"SELECT DISTINCT T1.element, T2.bond_type FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR002'",7,"SELECT m.label, a.element, b.bond_type FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id WHERE m.molecule_id = 'TR002' 
SELECT m.label, a.element, b.bond_type FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE m.molecule_id = 'TR002'
SELECT m.label, a.element, b.bond_type FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id WHERE m.molecule_id = 'TR002' 
SELECT m.label, a.element, b.bond_type FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id WHERE m.molecule_id = 'TR002' 
SELECT m.label, a.element, b.bond_type FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id WHERE m.molecule_id = 'TR002' 
SELECT m.label, a.element, b.bond_type FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id WHERE m.molecule_id = 'TR002' 
SELECT m.label, a.element, b.bond_type FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id WHERE m.molecule_id = 'TR002' ","SELECT m.label, a.element, b.bond_type FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id WHERE m.molecule_id = 'TR002' "
239,958,Which driver has the fastest lap time? Please give their forenames and surnames.,formula_1,moderate,"SELECT T2.forename, T2.surname, T1.fastestLapTime FROM results AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId WHERE T1.fastestLapTime IS NOT NULL ORDER BY T1.fastestLapTime ASC LIMIT 1",7,"SELECT forename, surname FROM drivers WHERE driverid IN (SELECT driverid FROM results WHERE raceid IN (SELECT raceid FROM races WHERE year = 2023) ORDER BY milliseconds ASC LIMIT 1)
SELECT forename, surname FROM drivers WHERE driverid IN (SELECT driverid FROM results WHERE raceid IN (SELECT raceid FROM races WHERE year = 2023) ORDER BY milliseconds ASC LIMIT 1)
SELECT forename, surname FROM drivers WHERE driverid IN (SELECT driverid FROM results WHERE raceid IN (SELECT raceid FROM races WHERE year = 2023) ORDER BY milliseconds ASC LIMIT 1)
SELECT forename, surname FROM drivers WHERE driverid IN (SELECT driverid FROM results WHERE raceid IN (SELECT raceid FROM races WHERE year = 2023) ORDER BY milliseconds ASC LIMIT 1)
SELECT forename, surname FROM drivers WHERE driverid IN (SELECT driverid FROM results WHERE raceid IN (SELECT raceid FROM races WHERE year = 2023) ORDER BY milliseconds ASC LIMIT 1)
SELECT forename, surname FROM drivers WHERE driverid IN (SELECT driverid FROM results WHERE raceid IN (SELECT raceid FROM races WHERE year = 2023) ORDER BY milliseconds ASC LIMIT 1)
SELECT forename, surname FROM drivers WHERE driverid IN (SELECT driverid FROM results WHERE raceid IN (SELECT raceid FROM races WHERE year = 2023) ORDER BY milliseconds ASC LIMIT 1)","SELECT forename, surname FROM drivers WHERE driverid IN (SELECT driverid FROM results WHERE raceid IN (SELECT raceid FROM races WHERE year = 2023) ORDER BY milliseconds ASC LIMIT 1)"
240,255,What proportion of single bonds are carcinogenic? Please provide your answer as a percentage with five decimal places.,toxicology,moderate,"SELECT ROUND(CAST(COUNT(CASE WHEN T2.label = '+' THEN T1.bond_id ELSE NULL END) AS REAL) * 100 / COUNT(T1.bond_id),5) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-'",7,"SELECT ROUND((COUNT(DISTINCT b.bond_id) FILTER (WHERE b.bond_type = 'single' AND b.molecule_id IN (SELECT m.molecule_id FROM molecule m WHERE m.label = 'carcinogenic'))) / COUNT(DISTINCT b.bond_id) FILTER (WHERE b.bond_type = 'single') * 100, 5) || '%' AS proportion_carcinogenic_single_bonds FROM bond b
SELECT ROUND((COUNT(DISTINCT b.bond_id) FILTER (WHERE b.bond_type = 'single' AND b.molecule_id IN (SELECT m.molecule_id FROM molecule m WHERE m.label = 'carcinogenic'))) / COUNT(DISTINCT b.bond_id) FILTER (WHERE b.bond_type = 'single') * 100, 5) AS proportion_carcinogenic_single_bonds FROM bond b
SELECT ROUND((COUNT(DISTINCT b.bond_id) FILTER (WHERE b.bond_type = 'single' AND b.molecule_id IN (SELECT m.molecule_id FROM molecule m WHERE m.label = 'carcinogenic'))) / COUNT(DISTINCT b.bond_id) FILTER (WHERE b.bond_type = 'single') * 100, 5) AS proportion_carcinogenic_single_bonds FROM bond b
SELECT ROUND((COUNT(DISTINCT b.bond_id) FILTER (WHERE b.bond_type = 'single' AND b.molecule_id IN (SELECT m.molecule_id FROM molecule m WHERE m.label = 'carcinogenic'))) / COUNT(DISTINCT b.bond_id) FILTER (WHERE b.bond_type = 'single') * 100, 5) || '%' AS proportion_carcinogenic_single_bonds FROM bond b
SELECT ROUND((COUNT(DISTINCT b.bond_id) FILTER (WHERE b.bond_type = 'single' AND b.molecule_id IN (SELECT m.molecule_id FROM molecule m WHERE m.label = 'carcinogenic'))) / COUNT(DISTINCT b.bond_id) FILTER (WHERE b.bond_type = 'single') * 100, 5) || '%' AS proportion_carcinogenic_single_bonds FROM bond b
SELECT ROUND((COUNT(DISTINCT b.bond_id) FILTER (WHERE b.bond_type = 'single' AND b.molecule_id IN (SELECT m.molecule_id FROM molecule m WHERE m.label = 'carcinogenic')) / COUNT(DISTINCT b.bond_id) FILTER (WHERE b.bond_type = 'single')) * 100, 5) || '%' AS proportion_carcinogenic_single_bonds FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON c.atom_id = a.atom_id OR c.atom_id2 = a.atom_id
SELECT ROUND((COUNT(DISTINCT b.bond_id) FILTER (WHERE b.bond_type = 'single' AND b.molecule_id IN (SELECT m.molecule_id FROM molecule m WHERE m.label = 'carcinogenic'))) / COUNT(DISTINCT b.bond_id) FILTER (WHERE b.bond_type = 'single') * 100, 5) AS proportion_carcinogenic_single_bonds FROM bond b","SELECT ROUND((COUNT(DISTINCT b.bond_id) FILTER (WHERE b.bond_type = 'single' AND b.molecule_id IN (SELECT m.molecule_id FROM molecule m WHERE m.label = 'carcinogenic'))) / COUNT(DISTINCT b.bond_id) FILTER (WHERE b.bond_type = 'single') * 100, 5) || '%' AS proportion_carcinogenic_single_bonds FROM bond b"
241,169,What was the growth rate of the total amount of loans across all accounts for a male client between 1996 and 1997?,financial,challenging,"SELECT CAST((SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1997' THEN T1.amount ELSE 0 END) - SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1996' THEN T1.amount ELSE 0 END)) AS REAL) * 100 / SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1996' THEN T1.amount ELSE 0 END) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN disp AS T3 ON T3.account_id = T2.account_id INNER JOIN client AS T4 ON T4.client_id = T3.client_id WHERE T4.gender = 'M' AND T3.type = 'OWNER'",7,"SELECT (SUM(l2.amount) - SUM(l1.amount)) / SUM(l1.amount) * 100 AS growth_rate FROM loan l1 JOIN loan l2 ON l1.account_id = l2.account_id JOIN account a ON l1.account_id = a.account_id JOIN client c ON a.account_id = c.client_id WHERE c.gender = 'M' AND l1.date BETWEEN '1996-01-01' AND '1996-12-31' AND l2.date BETWEEN '1997-01-01' AND '1997-12-31'
SELECT (SUM(l2.amount) - SUM(l1.amount)) / SUM(l1.amount) * 100 AS growth_rate FROM loan l1 JOIN loan l2 ON l1.account_id = l2.account_id JOIN account a ON l1.account_id = a.account_id JOIN client c ON a.account_id = c.client_id WHERE l1.date BETWEEN '1996-01-01' AND '1996-12-31' AND l2.date BETWEEN '1997-01-01' AND '1997-12-31' AND c.gender = 'M'
SELECT (SUM(l2.amount) - SUM(l1.amount)) / SUM(l1.amount) * 100 AS growth_rate FROM loan l1 JOIN loan l2 ON l1.account_id = l2.account_id JOIN account a ON l1.account_id = a.account_id JOIN client c ON a.account_id = c.client_id WHERE c.gender = 'M' AND l1.date BETWEEN '1996-01-01' AND '1996-12-31' AND l2.date BETWEEN '1997-01-01' AND '1997-12-31'
SELECT (SUM(l2.amount) - SUM(l1.amount)) / SUM(l1.amount) * 100 AS growth_rate FROM loan l1 JOIN loan l2 ON l1.account_id = l2.account_id JOIN account a ON l1.account_id = a.account_id JOIN client c ON a.account_id = c.client_id WHERE c.gender = 'M' AND l1.date >= '1996-01-01' AND l1.date < '1997-01-01' AND l2.date >= '1997-01-01' AND l2.date < '1998-01-01'
SELECT (SUM(l2.amount) - SUM(l1.amount)) / SUM(l1.amount) * 100 AS growth_rate FROM loan l1 JOIN loan l2 ON l1.account_id = l2.account_id JOIN account a ON l1.account_id = a.account_id JOIN client c ON a.account_id = c.client_id WHERE l1.date BETWEEN '1996-01-01' AND '1996-12-31' AND l2.date BETWEEN '1997-01-01' AND '1997-12-31' AND c.gender = 'M'
SELECT (SUM(l2.amount) - SUM(l1.amount)) / SUM(l1.amount) * 100 AS growth_rate FROM loan l1 JOIN loan l2 ON l1.account_id = l2.account_id JOIN account a ON l1.account_id = a.account_id JOIN client c ON a.account_id = c.client_id WHERE c.gender = 'M' AND l1.date BETWEEN '1996-01-01' AND '1996-12-31' AND l2.date BETWEEN '1997-01-01' AND '1997-12-31'
SELECT (SUM(l2.amount) - SUM(l1.amount)) / SUM(l1.amount) * 100 AS growth_rate FROM loan l1 JOIN loan l2 ON l1.account_id = l2.account_id JOIN account a ON l1.account_id = a.account_id JOIN client c ON a.account_id = c.client_id WHERE l1.date BETWEEN '1996-01-01' AND '1996-12-31' AND l2.date BETWEEN '1997-01-01' AND '1997-12-31' AND c.gender = 'M'",SELECT (SUM(l2.amount) - SUM(l1.amount)) / SUM(l1.amount) * 100 AS growth_rate FROM loan l1 JOIN loan l2 ON l1.account_id = l2.account_id JOIN account a ON l1.account_id = a.account_id JOIN client c ON a.account_id = c.client_id WHERE c.gender = 'M' AND l1.date BETWEEN '1996-01-01' AND '1996-12-31' AND l2.date BETWEEN '1997-01-01' AND '1997-12-31'
242,263,What is the composition of element chlorine in percentage among the single bond molecules?,toxicology,challenging,"SELECT CAST(COUNT(CASE WHEN T.element = 'cl' THEN T.atom_id ELSE NULL END) AS REAL) * 100 / COUNT(T.atom_id) FROM ( SELECT T1.atom_id, T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type = '-' ) AS T",7,"SELECT (SELECT COUNT(*) FROM connected c1 WHERE c1.atom_id = a.atom_id AND c1.atom_id2 IN (SELECT atom_id FROM connected c2 WHERE c2.bond_id = b.bond_id)) * 35.45 / (SELECT COUNT(*) FROM atom) * 100 AS chlorine_percentage FROM atom a JOIN bond b ON a.atom_id = b.atom_id WHERE b.bond_type = 'single'
SELECT SUM(CASE WHEN element = 'Cl' THEN 1 ELSE 0 END) * 100.0 / COUNT(*) AS chlorine_percentage FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'single'
SELECT (SELECT COUNT(*) FROM connected c1 WHERE c1.atom_id = a.atom_id AND c1.atom_id2 IN (SELECT atom_id FROM connected c2 WHERE c2.bond_id = b.bond_id AND c2.atom_id = a.atom_id) AND b.bond_id = c.bond_id AND b.bond_type = 'single') * 100.0 / (SELECT COUNT(*) FROM connected c3 WHERE c3.atom_id = a.atom_id AND c3.bond_id = b.bond_id) AS percentage FROM atom a, bond b, connected c WHERE a.atom_id = c.atom_id AND b.bond_id = c.bond_id AND a.element = 'Cl' AND b.bond_type = 'single'
SELECT (SELECT COUNT(*) FROM connected c1 WHERE c1.atom_id = a.atom_id AND c1.atom_id2 IN (SELECT atom_id FROM connected c2 WHERE c2.bond_id = b.bond_id)) * 2 AS percentage FROM atom a, bond b, molecule m WHERE a.molecule_id = m.molecule_id AND b.molecule_id = m.molecule_id AND b.bond_type = 'single' AND a.element = 'Cl'
SELECT (SELECT COUNT(*) FROM connected c1 WHERE c1.atom_id = a.atom_id AND c1.atom_id2 IN (SELECT atom_id FROM connected c2 WHERE c2.bond_id = b.bond_id)) * 2 AS percentage FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id WHERE a.element = 'Cl' AND b.bond_type = 'single'
SELECT (SELECT COUNT(*) FROM connected c1 WHERE c1.atom_id = a.atom_id AND c1.atom_id2 IN (SELECT atom_id FROM connected c2 WHERE c2.bond_id = b.bond_id)) * 35.45 / (SELECT COUNT(*) FROM atom) * 100 AS chlorine_percentage FROM atom a JOIN bond b ON a.atom_id = b.atom_id WHERE b.bond_type = 'single'
SELECT (SELECT COUNT(*) FROM connected c1 WHERE c1.atom_id = a.atom_id AND c1.atom_id2 IN (SELECT atom_id FROM connected c2 WHERE c2.bond_id = b.bond_id)) * 100.0 / (SELECT COUNT(*) FROM connected WHERE atom_id = a.atom_id OR atom_id2 = a.atom_id) AS percentage_chlorine FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id WHERE a.element = 'Cl' AND b.bond_type = 'single'",SELECT (SELECT COUNT(*) FROM connected c1 WHERE c1.atom_id = a.atom_id AND c1.atom_id2 IN (SELECT atom_id FROM connected c2 WHERE c2.bond_id = b.bond_id)) * 35.45 / (SELECT COUNT(*) FROM atom) * 100 AS chlorine_percentage FROM atom a JOIN bond b ON a.atom_id = b.atom_id WHERE b.bond_type = 'single'
243,581,Who is the editor of the post titled 'Open source tools for visualizing multi-dimensional data?',codebase_community,moderate,SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Open source tools for visualizing multi-dimensional data?',7,"SELECT * FROM posts WHERE title = 'Open source tools for visualizing multi-dimensional data?'
SELECT lasteditoruserid FROM posts WHERE title = 'Open source tools for visualizing multi-dimensional data?'
SELECT * FROM posts WHERE title = 'Open source tools for visualizing multi-dimensional data?'
SELECT * FROM posts WHERE title = 'Open source tools for visualizing multi-dimensional data?'
SELECT * FROM posts WHERE title = 'Open source tools for visualizing multi-dimensional data?'
SELECT * FROM posts WHERE title = 'Open source tools for visualizing multi-dimensional data?'
SELECT * FROM posts WHERE title = 'Open source tools for visualizing multi-dimensional data?'",SELECT * FROM posts WHERE title = 'Open source tools for visualizing multi-dimensional data?'
244,486,What is the percentage of the cards with a converted mana cost of 7 in the set Coldsnap?,card_games,moderate,SELECT CAST(SUM(CASE WHEN T1.convertedManaCost = 7 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE T2.name = 'Coldsnap',7,"SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'CNS')) AS percentage FROM cards WHERE convertedmanacost = 7 AND setcode = 'CNS'
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'CNS')) AS percentage_of_7_cmc FROM cards WHERE setcode = 'CNS' AND convertedmanacost = 7
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'CNS')) AS percentage_of_7_cmc FROM cards WHERE setcode = 'CNS' AND convertedmanacost = 7
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'CNS')) AS percentage_of_7_cmc FROM cards WHERE setcode = 'CNS' AND convertedmanacost = 7
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'CNS')) AS percentage FROM cards WHERE convertedmanacost = 7 AND setcode = 'CNS'
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'CNS')) AS percentage_of_7_cmc FROM cards WHERE setcode = 'CNS' AND convertedmanacost = 7
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'CNS')) AS percentage_of_7_cmc FROM cards WHERE setcode = 'CNS' AND convertedmanacost = 7",SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'CNS')) AS percentage_of_7_cmc FROM cards WHERE setcode = 'CNS' AND convertedmanacost = 7
245,928,Which driver ranked the first in the Canadian Grand Prix in 2007? Please give his reference name.,formula_1,moderate,"SELECT T3.forename, T3.surname, T3.driverRef FROM races AS T1 INNER JOIN results AS T2 ON T2.raceId = T1.raceId INNER JOIN drivers AS T3 ON T3.driverId = T2.driverId WHERE T1.name = 'Canadian Grand Prix' AND T2.rank = 1 AND T1.year = 2007",7,"SELECT driverref FROM results JOIN races ON results.raceid = races.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE races.year = 2007 AND races.name = 'Canadian Grand Prix' ORDER BY results.position LIMIT 1
SELECT driverref FROM results JOIN races ON results.raceid = races.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE races.year = 2007 AND races.name = 'Canadian Grand Prix' ORDER BY results.position LIMIT 1
SELECT driverref FROM results JOIN races ON results.raceid = races.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE races.year = 2007 AND races.name = 'Canadian Grand Prix' ORDER BY results.position LIMIT 1
SELECT driverref FROM results JOIN races ON results.raceid = races.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE races.year = 2007 AND races.name = 'Canadian Grand Prix' ORDER BY results.position LIMIT 1
SELECT driverref FROM results JOIN races ON results.raceid = races.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE races.year = 2007 AND races.name = 'Canadian Grand Prix' ORDER BY results.position LIMIT 1
SELECT driverref FROM results JOIN races ON results.raceid = races.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE races.year = 2007 AND races.name = 'Canadian Grand Prix' ORDER BY results.position LIMIT 1
SELECT driverref FROM results JOIN races ON results.raceid = races.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE races.year = 2007 AND races.name = 'Canadian Grand Prix' ORDER BY results.position LIMIT 1",SELECT driverref FROM results JOIN races ON results.raceid = races.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE races.year = 2007 AND races.name = 'Canadian Grand Prix' ORDER BY results.position LIMIT 1
246,1006,"Among all the lap records set on various circuits, what is the time for the fastest one?",formula_1,challenging,"SELECT time FROM lapTimes ORDER BY (CASE WHEN INSTR(time, ':') <> INSTR(SUBSTR(time, INSTR(time, ':') + 1), ':') + INSTR(time, ':') THEN CAST(SUBSTR(time, 1, INSTR(time, ':') - 1) AS REAL) * 3600 ELSE 0 END) + (CAST(SUBSTR(time, INSTR(time, ':') - 2 * (INSTR(time, ':') = INSTR(SUBSTR(time, INSTR(time, ':') + 1), ':') + INSTR(time, ':')), INSTR(time, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(time, INSTR(time, ':') + 1, INSTR(time, '.') - INSTR(time, ':') - 1) AS REAL)) + (CAST(SUBSTR(time, INSTR(time, '.') + 1) AS REAL) / 1000) ASC LIMIT 1",7,"SELECT MIN(time) FROM results
SELECT MIN(time) FROM results
SELECT MIN(time) FROM results
SELECT MIN(time) FROM results
SELECT MIN(time) FROM results
SELECT MIN(time) FROM results
SELECT MIN(time) FROM results",SELECT MIN(time) FROM results
247,1500,"Please list the product description of the products consumed in September, 2013.",debit_card_specializing,simple,SELECT T3.Description FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN products AS T3 ON T1.ProductID = T3.ProductID WHERE T2.Date = '201309',7,"SELECT p.description FROM transactions_1k t JOIN products p ON t.productid = p.productid WHERE strftime('%Y-%m', t.date) = '2013-09'
SELECT p.description FROM transactions_1k t JOIN products p ON t.productid = p.productid WHERE strftime('%Y-%m', t.date) = '2013-09'
SELECT p.description FROM transactions_1k t JOIN products p ON t.productid = p.productid WHERE strftime('%Y-%m', t.date) = '2013-09'
SELECT p.description FROM transactions_1k t JOIN products p ON t.productid = p.productid WHERE strftime('%Y-%m', t.date) = '2013-09'
SELECT p.description FROM transactions_1k t JOIN products p ON t.productid = p.productid WHERE strftime('%Y-%m', t.date) = '2013-09'
SELECT p.description FROM transactions_1k t JOIN products p ON t.productid = p.productid WHERE strftime('%Y-%m', t.date) = '2013-09'
SELECT p.description FROM transactions_1k t JOIN products p ON t.productid = p.productid WHERE strftime('%Y-%m', t.date) = '2013-09'","SELECT p.description FROM transactions_1k t JOIN products p ON t.productid = p.productid WHERE strftime('%Y-%m', t.date) = '2013-09'"
248,1295,"Among the patients whose total bilirubin is over the normal range, how many of them have a peripheral pattern observed in the sheet of ANA examination?",thrombosis_prediction,challenging,SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.`T-BIL` >= 2 AND T3.`ANA Pattern` LIKE '%P%',7,"SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.t-bil > 'normal range' AND p.ana LIKE '%peripheral%'
SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.t-bil > 'normal range' AND p.ana LIKE '%peripheral%'
SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.t-bil > 'normal range' AND p.ana LIKE '%peripheral%'
SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.t-bil > 'normal range' AND p.ana LIKE '%peripheral%'
SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.t-bil > 'normal range' AND p.ana LIKE '%peripheral%'
SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.t-bil > 'normal range' AND p.ana LIKE '%peripheral%'
SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.t-bil > 'normal range' AND p.ana LIKE '%peripheral%'",SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.t-bil > 'normal range' AND p.ana LIKE '%peripheral%'
249,1211,Provide the ID and age of patient with lactate dehydrogenase (LDH) between 100-300 index above the normal range.,thrombosis_prediction,moderate,"SELECT DISTINCT T1.ID, STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.LDH > 600 AND T2.LDH < 800",7,"SELECT id, age FROM patient WHERE id IN (SELECT patient_id FROM laboratory WHERE ldh BETWEEN 100 AND 300)
SELECT id, age FROM patient WHERE id IN (SELECT patient_id FROM laboratory WHERE ldh BETWEEN 100 AND 300)
SELECT id, age FROM patient WHERE id IN (SELECT patient_id FROM laboratory WHERE ldh BETWEEN 100 AND 300)
SELECT id, age FROM patient WHERE id IN (SELECT patient_id FROM laboratory WHERE ldh BETWEEN 100 AND 300)
SELECT id, age FROM patient WHERE id IN (SELECT patient_id FROM laboratory WHERE ldh BETWEEN 100 AND 300)
SELECT id, age FROM patient WHERE id IN (SELECT patient_id FROM laboratory WHERE ldh BETWEEN 100 AND 300)
SELECT id, age FROM patient WHERE id IN (SELECT patient_id FROM laboratory WHERE ldh BETWEEN 100 AND 300)","SELECT id, age FROM patient WHERE id IN (SELECT patient_id FROM laboratory WHERE ldh BETWEEN 100 AND 300)"
