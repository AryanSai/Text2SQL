,Qid,Question,Db_Id,Difficulty,Query Gold,Repeated,Query Generated,Most Frequent Query
0,306,Which molecules have triple bonds and list all the elements they contain.,toxicology,challenging,"SELECT DISTINCT T1.molecule_id, T2.element FROM bond AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#'",7,"SELECT DISTINCT a.molecule_id, m.label, a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE b.bond_type = 'triple' 
SELECT DISTINCT a.molecule_id, m.label, a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE b.bond_type = 'triple' 
SELECT DISTINCT a.molecule_id, m.label, a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE b.bond_type = 'triple' 
SELECT DISTINCT a.element  FROM atom a  JOIN connected c ON a.atom_id = c.atom_id  JOIN bond b ON c.bond_id = b.bond_id  WHERE b.bond_type = 'triple' 
SELECT DISTINCT a.molecule_id, m.label, a.element  FROM atom a  JOIN connected c ON a.atom_id = c.atom_id  JOIN bond b ON c.bond_id = b.bond_id  JOIN molecule m ON a.molecule_id = m.molecule_id  WHERE b.bond_type = 'triple'
SELECT DISTINCT a.molecule_id, m.label, a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE b.bond_type = 'triple' 
SELECT DISTINCT a.molecule_id, m.label, a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE b.bond_type = 'triple' ","SELECT DISTINCT a.molecule_id, m.label, a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE b.bond_type = 'triple' "
1,1261,How many patients with a normal RF don't have thrombosis?,thrombosis_prediction,simple,SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RF < 20 AND T1.Thrombosis = 0,7,"SELECT COUNT(*) FROM patient  INNER JOIN examination ON patient.id = examination.id  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE examination.diagnosis = 'normal RF' AND examination.thrombosis = 'no'
SELECT COUNT(*) FROM patient  INNER JOIN examination ON patient.id = examination.id  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE examination.diagnosis = 'normal RF' AND examination.thrombosis = 'no'
SELECT COUNT(*) FROM patient  INNER JOIN examination ON patient.id = examination.id  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE examination.diagnosis = 'normal RF' AND examination.thrombosis = 'no'
SELECT COUNT(*) FROM patient  INNER JOIN examination ON patient.id = examination.id  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE examination.diagnosis = 'normal RF' AND examination.thrombosis = 'no'
SELECT COUNT(*) FROM patient  INNER JOIN examination ON patient.id = examination.id  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE examination.diagnosis = 'normal RF' AND examination.thrombosis = 'no'
SELECT COUNT(*) FROM patient  INNER JOIN examination ON patient.id = examination.id  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE examination.diagnosis = 'normal RF' AND examination.thrombosis = 'no'
SELECT COUNT(*)  FROM patient  INNER JOIN examination ON patient.id = examination.id  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE examination.diagnosis = 'normal RF'  AND examination.thrombosis = 'no' ",SELECT COUNT(*) FROM patient  INNER JOIN examination ON patient.id = examination.id  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE examination.diagnosis = 'normal RF' AND examination.thrombosis = 'no'
2,601,What is the score and the link type ID for post ID 395?,codebase_community,simple,"SELECT T1.Score, T2.LinkTypeId FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId WHERE T2.PostId = 395",7,"SELECT pl.linktypeid, p.score  FROM posts AS p  JOIN postlinks AS pl ON p.id = pl.postid  WHERE p.id = 395
SELECT postlinks.linktypeid, posts.score FROM posts JOIN postlinks ON posts.id = postlinks.postid WHERE posts.id = 395
SELECT pl.linktypeid, p.score FROM posts AS p JOIN postlinks AS pl ON p.id = pl.postid WHERE p.id = 395
SELECT postlinks.linktypeid, posts.score FROM posts JOIN postlinks ON posts.id = postlinks.postid WHERE posts.id = 395
SELECT pl.linktypeid, p.score FROM posts AS p JOIN postlinks AS pl ON p.id = pl.postid WHERE p.id = 395
SELECT postlinks.linktypeid, posts.score FROM posts JOIN postlinks ON posts.id = postlinks.postid WHERE posts.id = 395
SELECT pl.linktypeid, p.score FROM posts AS p JOIN postlinks AS pl ON p.id = pl.postid WHERE p.id = 395","SELECT postlinks.linktypeid, posts.score FROM posts JOIN postlinks ON posts.id = postlinks.postid WHERE posts.id = 395"
3,245,What is the average number of bonds the atoms with the element iodine have?,toxicology,moderate,SELECT CAST(COUNT(T2.bond_id) AS REAL) / COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element = 'i',7,"SELECT AVG(bond_count) FROM (SELECT a.atom_id, COUNT(c.bond_id) as bond_count FROM atom a JOIN connected c ON a.atom_id = c.atom_id WHERE a.element = 'iodine' GROUP BY a.atom_id)
SELECT AVG(bond_count) FROM (SELECT a.atom_id, COUNT(c.bond_id) as bond_count FROM atom a JOIN connected c ON a.atom_id = c.atom_id WHERE a.element = 'iodine' GROUP BY a.atom_id)
SELECT AVG(bond_count) FROM (SELECT a.atom_id, COUNT(c.bond_id) as bond_count FROM atom a JOIN connected c ON a.atom_id = c.atom_id WHERE a.element = 'iodine' GROUP BY a.atom_id)
SELECT AVG(bond_count) FROM (SELECT a.atom_id, COUNT(c.bond_id) as bond_count FROM atom a JOIN connected c ON a.atom_id = c.atom_id WHERE a.element = 'iodine' GROUP BY a.atom_id)
SELECT AVG(bond_count) FROM (SELECT a.atom_id, COUNT(c.bond_id) as bond_count FROM atom a JOIN connected c ON a.atom_id = c.atom_id WHERE a.element = 'iodine' GROUP BY a.atom_id)
SELECT AVG(bond_count) FROM (SELECT a.atom_id, COUNT(c.bond_id) as bond_count FROM atom a JOIN connected c ON a.atom_id = c.atom_id WHERE a.element = 'iodine' GROUP BY a.atom_id)
SELECT AVG(bond_count) FROM (SELECT a.atom_id, COUNT(c.bond_id) as bond_count FROM atom a JOIN connected c ON a.atom_id = c.atom_id WHERE a.element = 'iodine' GROUP BY a.atom_id)","SELECT AVG(bond_count) FROM (SELECT a.atom_id, COUNT(c.bond_id) as bond_count FROM atom a JOIN connected c ON a.atom_id = c.atom_id WHERE a.element = 'iodine' GROUP BY a.atom_id)"
4,215,How many atoms with iodine and with sulfur type elements are there in single bond molecules?,toxicology,challenging,"SELECT COUNT(DISTINCT CASE WHEN T1.element = 'i' THEN T1.atom_id ELSE NULL END) AS iodine_nums , COUNT(DISTINCT CASE WHEN T1.element = 's' THEN T1.atom_id ELSE NULL END) AS sulfur_nums FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '-'",7,"SELECT COUNT(*)  FROM atom  INNER JOIN connected ON atom.atom_id = connected.atom_id  INNER JOIN bond ON connected.bond_id = bond.bond_id  WHERE atom.element IN ('I', 'S') AND bond.bond_type = 'single'
SELECT COUNT(*)  FROM atom  INNER JOIN connected ON atom.atom_id = connected.atom_id  INNER JOIN bond ON connected.bond_id = bond.bond_id  WHERE atom.element IN ('I', 'S') AND bond.bond_type = 'single'
SELECT COUNT(*) FROM atom  INNER JOIN connected ON atom.atom_id = connected.atom_id  INNER JOIN bond ON connected.bond_id = bond.bond_id  WHERE atom.element IN ('I', 'S') AND bond.bond_type = 'single'
SELECT COUNT(*)  FROM atom  INNER JOIN connected ON atom.atom_id = connected.atom_id  INNER JOIN bond ON connected.bond_id = bond.bond_id  WHERE atom.element IN ('I', 'S') AND bond.bond_type = 'single'
SELECT COUNT(*)  FROM atom  INNER JOIN connected ON atom.atom_id = connected.atom_id  INNER JOIN bond ON connected.bond_id = bond.bond_id  WHERE atom.element IN ('I', 'S') AND bond.bond_type = 'single'
SELECT COUNT(*)  FROM atom  INNER JOIN connected ON atom.atom_id = connected.atom_id  INNER JOIN bond ON connected.bond_id = bond.bond_id  WHERE atom.element IN ('I', 'S') AND bond.bond_type = 'single'
SELECT COUNT(*)  FROM atom  INNER JOIN connected ON atom.atom_id = connected.atom_id  INNER JOIN bond ON connected.bond_id = bond.bond_id  WHERE atom.element IN ('I', 'S') AND bond.bond_type = 'single'","SELECT COUNT(*)  FROM atom  INNER JOIN connected ON atom.atom_id = connected.atom_id  INNER JOIN bond ON connected.bond_id = bond.bond_id  WHERE atom.element IN ('I', 'S') AND bond.bond_type = 'single'"
5,1299,"Among the patients with the normal level of triglyceride, how many of them have other symptoms observed?",thrombosis_prediction,simple,SELECT COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG < 200 AND T1.Symptoms IS NOT NULL,7,"SELECT COUNT(*) FROM patient  JOIN examination ON patient.id = examination.id  JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.tg <= 150 AND examination.symptoms != ''
SELECT COUNT(*) FROM patient  INNER JOIN examination ON patient.id = examination.id  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE tg <= 150 AND symptoms IS NOT NULL
SELECT COUNT(*) FROM patient  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE tg <= 150 AND symptoms IS NOT NULL
SELECT COUNT(*) FROM patient  INNER JOIN examination ON patient.id = examination.id  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE tg <= 150 AND symptoms IS NOT NULL
SELECT COUNT(*) FROM patient  INNER JOIN examination ON patient.id = examination.id  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE tg <= 150 AND symptoms IS NOT NULL
SELECT COUNT(*) FROM patient  INNER JOIN examination ON patient.id = examination.id  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE tg <= 150 AND symptoms IS NOT NULL
SELECT COUNT(*) FROM patient  INNER JOIN examination ON patient.id = examination.id  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE tg <= 150 AND symptoms IS NOT NULL",SELECT COUNT(*) FROM patient  INNER JOIN examination ON patient.id = examination.id  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE tg <= 150 AND symptoms IS NOT NULL
6,842,Calculate the average height of all neutral superheroes.,superhero,simple,SELECT AVG(T1.height_cm) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Neutral',7,"SELECT AVG(height_cm) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'neutral')
SELECT AVG(height_cm) FROM superhero WHERE alignment_id IN (SELECT id FROM alignment WHERE alignment = 'neutral')
SELECT AVG(height_cm) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'neutral')
SELECT AVG(height_cm) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'neutral')
SELECT AVG(height_cm) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'neutral')
SELECT AVG(height_cm) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'neutral')
SELECT AVG(height_cm) FROM superhero WHERE alignment_id IN (SELECT id FROM alignment WHERE alignment = 'neutral')",SELECT AVG(height_cm) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'neutral')
7,1149,Are there more in-patient or outpatient who were male? What is the deviation in percentage?,thrombosis_prediction,moderate,SELECT CAST(SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN Admission = '-' THEN 1 ELSE 0 END) FROM Patient WHERE SEX = 'M',7,"SELECT      patient.sex,      COUNT(*),      100.0 * COUNT(*) / (SELECT COUNT(*) FROM patient WHERE sex = 'male') - 100 AS deviation_percentage FROM      patient WHERE      patient.sex = 'male' GROUP BY      patient.admission ORDER BY      COUNT(*) DESC
SELECT      patient.sex,      COUNT(*),      (COUNT(*) - (SELECT COUNT(*) FROM patient WHERE sex = 'male')) / (SELECT COUNT(*) FROM patient WHERE sex = 'male') * 100 AS deviation FROM      patient WHERE      patient.sex = 'male' OR patient.sex = 'female' GROUP BY      patient.sex
SELECT      patient.sex,      COUNT(patient.id) AS patient_count,      (COUNT(patient.id) - (SELECT COUNT(*) FROM patient WHERE admission = 'in-patient')) / (SELECT COUNT(*) FROM patient WHERE admission = 'in-patient') * 100 AS deviation_percentage FROM      patient WHERE      patient.sex = 'male' GROUP BY      patient.admission HAVING      patient_count > (SELECT COUNT(*) FROM patient WHERE admission = 'out-patient' AND sex = 'male') 
SELECT      patient.sex,      COUNT(*),      (         SELECT              COUNT(*)          FROM              patient          WHERE              patient.sex = 'Male'              AND patient.admission = 'In-patient'     ) AS in_patient,     (         SELECT              COUNT(*)          FROM              patient          WHERE              patient.sex = 'Male'              AND patient.admission = 'Out-patient'     ) AS out_patient,     (         (             (                 SELECT                      COUNT(*)                  FROM                      patient                  WHERE                      patient.sex = 'Male'                      AND patient.admission = 'Out-patient'             ) -              (                 SELECT                      COUNT(*)                  FROM                      patient                  WHERE                      patient.sex = 'Male'                      AND patient.admission = 'In-patient'             )         ) /          (             SELECT                  COUNT(*)              FROM                  patient              WHERE                  patient.sex = 'Male'          ) * 10
SELECT      patient.sex,      COUNT(*) AS total,      (         SELECT              COUNT(*)          FROM              patient          WHERE              patient.sex = 'Male'     ) AS male_count,     (         (             (                 SELECT                      COUNT(*)                  FROM                      patient                  WHERE                      patient.sex = 'Male'             ) -              COUNT(*)         ) / COUNT(*) * 100     ) AS deviation_percentage FROM      patient WHERE      patient.sex = 'Male' GROUP BY      patient.sex
SELECT      patient.sex,      COUNT(*),      (         SELECT              COUNT(*)          FROM              patient          WHERE              patient.sex = 'Male'     ) AS total_male,     (         (             COUNT(*) - (                 SELECT                      COUNT(*)                  FROM                      patient                  WHERE                      patient.sex = 'Male'             )         ) / (             SELECT                  COUNT(*)              FROM                  patient         ) * 100     ) AS deviation_percentage FROM      patient WHERE      patient.sex = 'Male' GROUP BY      patient.sex
SELECT      patient.sex,      COUNT(*) AS total,      (         SELECT              COUNT(*)          FROM              patient          WHERE              patient.sex = 'Male'              AND patient.admission = 'In-patient'     ) AS in_patient,     (         SELECT              COUNT(*)          FROM              patient          WHERE              patient.sex = 'Male'              AND patient.admission = 'Out-patient'     ) AS out_patient,     (         (             (                 SELECT                      COUNT(*)                  FROM                      patient                  WHERE                      patient.sex = 'Male'                      AND patient.admission = 'Out-patient'             ) -              (                 SELECT                      COUNT(*)                  FROM                      patient                  WHERE                      patient.sex = 'Male'                      AND patient.admission = 'In-patient'             )         ) /          (             SELECT                  COUNT(*)              FROM                  patient              WHERE                  patient.sex = 'Male'         )     )","SELECT      patient.sex,      COUNT(*),      100.0 * COUNT(*) / (SELECT COUNT(*) FROM patient WHERE sex = 'male') - 100 AS deviation_percentage FROM      patient WHERE      patient.sex = 'male' GROUP BY      patient.admission ORDER BY      COUNT(*) DESC"
8,521,"Among the cards whose version of frame style is 1997, what is the status of the card illustrated by D. Alexander Gregory in legacy play format that has sensitive content or Wizards of the Coast?",card_games,challenging,SELECT DISTINCT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T2.uuid = T1.uuid WHERE T1.frameVersion = 1997 AND T1.hasContentWarning = 1 AND T1.artist = 'D. Alexander Gregory' AND T2.format = 'legacy',7,"SELECT status  FROM cards  WHERE frameversion = 1997 AND artist = 'D. Alexander Gregory' AND (availability LIKE '%Wizards of the Coast%' OR hascontentwarning = 1) AND format = 'legacy'
SELECT status  FROM cards  WHERE frameversion = 1997 AND artist = 'D. Alexander Gregory' AND (availability LIKE '%Wizards of the Coast%' OR hascontentwarning = 1) AND format = 'legacy'
SELECT status FROM cards WHERE frameversion = '1997' AND artist = 'D. Alexander Gregory' AND (availability LIKE '%Wizards of the Coast%' OR hascontentwarning = 'true') AND format = 'legacy'
SELECT status FROM cards WHERE frameversion = '1997' AND artist = 'D. Alexander Gregory' AND (availability LIKE '%Wizards of the Coast%' OR hascontentwarning = 'true') AND format = 'legacy'
SELECT status  FROM cards  WHERE frameversion = 1997 AND artist = 'D. Alexander Gregory' AND (availability LIKE '%Wizards of the Coast%' OR hascontentwarning = 1) AND format = 'legacy'
SELECT status FROM cards INNER JOIN legalities ON cards.id = legalities.id WHERE frameversion = '1997' AND artist = 'D. Alexander Gregory' AND hascontentwarning = 'Wizards of the Coast' AND format = 'legacy'
SELECT status  FROM cards  WHERE frameversion = '1997'  AND artist = 'D. Alexander Gregory'  AND (availability LIKE '%sensitive content%' OR availability LIKE '%Wizards of the Coast%')  AND format = 'legacy'",SELECT status  FROM cards  WHERE frameversion = 1997 AND artist = 'D. Alexander Gregory' AND (availability LIKE '%Wizards of the Coast%' OR hascontentwarning = 1) AND format = 'legacy'
9,1526,"For the customer who paid 634.8 in 2012/8/25, what was the consumption decrease rate from Year 2012 to 2013?",debit_card_specializing,challenging,"SELECT CAST(SUM(IIF(SUBSTR(Date, 1, 4) = '2012', Consumption, 0)) - SUM(IIF(SUBSTR(Date, 1, 4) = '2013', Consumption, 0)) AS FLOAT) / SUM(IIF(SUBSTR(Date, 1, 4) = '2012', Consumption, 0)) FROM yearmonth WHERE CustomerID = ( SELECT T1.CustomerID FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-25' AND T1.Price = 634.8 )",7,"SELECT (yearmonth.consumption_2012 - yearmonth.consumption_2013) / yearmonth.consumption_2012 * 100 as decrease_rate FROM (     SELECT t.customerid,             SUM(t.amount * t.price) as total_amount,             strftime('%Y', t.date) as year,             CASE                 WHEN strftime('%Y', t.date) = '2012' THEN SUM(t.amount * t.price)                 ELSE NULL             END as consumption_2012,             CASE                 WHEN strftime('%Y', t.date) = '2013' THEN SUM(t.amount * t.price)                 ELSE NULL             END as consumption_2013     FROM transactions_1k as t     WHERE t.customerid = (         SELECT c.customerid         FROM customers as c         WHERE t.amount * t.price = 634.8          AND t.date = '2012/8/25'     )     GROUP BY strftime('%Y', t.date) ) as yearmonth 
SELECT (yearmonth.consumption_2012 - yearmonth.consumption_2013) / yearmonth.consumption_2012 * 100 as decrease_rate FROM (     SELECT t1.customerid,             SUM(t1.amount) as consumption_2012,             SUM(t2.amount) as consumption_2013     FROM transactions_1k as t1     JOIN transactions_1k as t2 ON t1.customerid = t2.customerid     WHERE t1.date LIKE '2012%' AND t2.date LIKE '2013%' AND t1.customerid = (         SELECT customerid          FROM transactions_1k          WHERE amount = 634.8 AND date = '2012/8/25'     )     GROUP BY t1.customerid ) as yearmonth 
SELECT (yearmonth.consumption_2012 - yearmonth.consumption_2013) / yearmonth.consumption_2012 * 100 AS decrease_rate FROM (     SELECT t1.customerid, SUM(t1.amount) AS consumption_2012, SUM(t2.amount) AS consumption_2013     FROM transactions_1k AS t1     JOIN transactions_1k AS t2 ON t1.customerid = t2.customerid     WHERE strftime('%Y', t1.date) = '2012' AND strftime('%Y', t2.date) = '2013' AND t1.customerid = (         SELECT customerid FROM transactions_1k WHERE amount = 634.8 AND date = '2012/8/25'     )     GROUP BY t1.customerid ) AS yearmonth 
SELECT (yearmonth.consumption_2012 - yearmonth.consumption_2013) / yearmonth.consumption_2012 * 100 AS decrease_rate FROM (     SELECT t.customerid,             SUM(t.amount * t.price) as consumption_2012,             (SELECT SUM(t2.amount * t2.price)              FROM transactions_1k t2              WHERE strftime('%Y', t2.date) = '2013'              AND t2.customerid = t.customerid) as consumption_2013     FROM transactions_1k t     WHERE strftime('%Y', t.date) = '2012'     AND t.amount * t.price = 634.8     GROUP BY t.customerid ) AS yearmonth WHERE yearmonth.consumption_2012 > 0 AND yearmonth.consumption_2013 > 0
SELECT (yearmonth.consumption_2012 - yearmonth.consumption_2013) / yearmonth.consumption_2012 * 100 AS decrease_rate FROM (     SELECT t1.customerid, SUM(t1.amount) AS consumption_2012, SUM(t2.amount) AS consumption_2013     FROM transactions_1k AS t1     JOIN transactions_1k AS t2 ON t1.customerid = t2.customerid     WHERE strftime('%Y', t1.date) = '2012' AND strftime('%Y', t2.date) = '2013' AND t1.customerid = (         SELECT customerid FROM transactions_1k WHERE amount = 634.8 AND date = '2012/8/25'     )     GROUP BY t1.customerid ) AS yearmonth 
SELECT (yearmonth.consumption_2012 - yearmonth.consumption_2013) / yearmonth.consumption_2012 * 100 AS decrease_rate FROM (     SELECT t1.customerid, SUM(t1.amount) AS consumption_2012, SUM(t2.amount) AS consumption_2013     FROM transactions_1k AS t1     JOIN transactions_1k AS t2 ON t1.customerid = t2.customerid AND t1.productid = t2.productid     WHERE t1.date LIKE '2012%' AND t2.date LIKE '2013%' AND t1.customerid = (         SELECT customerid FROM transactions_1k WHERE amount = 634.8 AND date = '2012/8/25'     )     GROUP BY t1.customerid ) AS yearmonth 
SELECT (yearmonth.consumption_2012 - yearmonth.consumption_2013) / yearmonth.consumption_2012 * 100 AS decrease_rate FROM (     SELECT t1.customerid, SUM(t1.amount) AS consumption_2012, SUM(t2.amount) AS consumption_2013     FROM transactions_1k AS t1     JOIN transactions_1k AS t2 ON t1.customerid = t2.customerid     WHERE strftime('%Y', t1.date) = '2012' AND strftime('%Y', t2.date) = '2013' AND t1.customerid = (         SELECT customerid FROM transactions_1k WHERE amount = 634.8 AND date = '2012/8/25'     )     GROUP BY t1.customerid ) AS yearmonth ","SELECT (yearmonth.consumption_2012 - yearmonth.consumption_2013) / yearmonth.consumption_2012 * 100 AS decrease_rate FROM (     SELECT t1.customerid, SUM(t1.amount) AS consumption_2012, SUM(t2.amount) AS consumption_2013     FROM transactions_1k AS t1     JOIN transactions_1k AS t2 ON t1.customerid = t2.customerid     WHERE strftime('%Y', t1.date) = '2012' AND strftime('%Y', t2.date) = '2013' AND t1.customerid = (         SELECT customerid FROM transactions_1k WHERE amount = 634.8 AND date = '2012/8/25'     )     GROUP BY t1.customerid ) AS yearmonth "
10,776,Provide the hero name and race of Charles Chandler.,superhero,simple,"SELECT T1.superhero_name, T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.full_name = 'Charles Chandler'",7,"SELECT superhero.superhero_name, race.race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.full_name = 'Charles Chandler'
SELECT superhero.superhero_name, race.race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.full_name = 'Charles Chandler'
SELECT superhero.superhero_name, race.race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.full_name = 'Charles Chandler'
SELECT superhero.superhero_name, race.race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.full_name = 'Charles Chandler'
SELECT superhero.superhero_name, race.race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.full_name = 'Charles Chandler'
SELECT superhero.superhero_name, race.race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.full_name = 'Charles Chandler'
SELECT superhero.superhero_name, race.race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.full_name = 'Charles Chandler'","SELECT superhero.superhero_name, race.race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.full_name = 'Charles Chandler'"
11,1114,What was the average overall rating for Marko Arnautovic from 2007/2/22 to 2016/4/21?,european_football_2,challenging,"SELECT CAST(SUM(t2.overall_rating) AS REAL) / COUNT(t2.id) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_fifa_api_id = t2.player_fifa_api_id WHERE t1.player_name = 'Marko Arnautovic' AND SUBSTR(t2.`date`, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21'",7,"SELECT AVG(overall_rating) FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name = 'Marko Arnautovic' AND player_attributes.date BETWEEN '2007-2-22' AND '2016-4-21'
SELECT AVG(overall_rating) FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name = 'Marko Arnautovic' AND player_attributes.date BETWEEN '2007-2-22' AND '2016-4-21'
SELECT AVG(overall_rating) as average_rating FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name = 'Marko Arnautovic' AND player_attributes.date BETWEEN '2007-2-22' AND '2016-4-21'
SELECT AVG(overall_rating) FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name = 'Marko Arnautovic' AND player_attributes.date BETWEEN '2007-2-22' AND '2016-4-21'
SELECT AVG(overall_rating) as average_rating FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name = 'Marko Arnautovic' AND player_attributes.date BETWEEN '2007-2-22' AND '2016-4-21'
SELECT AVG(overall_rating) as average_rating FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name = 'Marko Arnautovic' AND player_attributes.date BETWEEN '2007-2-22' AND '2016-4-21'
SELECT AVG(overall_rating) as average_rating FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name = 'Marko Arnautovic' AND player_attributes.date BETWEEN '2007-2-22' AND '2016-4-21'",SELECT AVG(overall_rating) as average_rating FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name = 'Marko Arnautovic' AND player_attributes.date BETWEEN '2007-2-22' AND '2016-4-21'
12,1403,Indicate the name of the closed event whose cost has exceeded the budget the most.,student_club,moderate,SELECT T2.event_name FROM budget AS T1 INNER JOIN event AS T2 ON T2.event_id = T1.link_to_event WHERE T1.event_status = 'Closed' AND T1.remaining < 0 ORDER BY T1.remaining LIMIT 1,7,"SELECT event.event_name, MAX(budget.remaining) as cost_exceeded FROM event JOIN budget ON event.event_id = budget.link_to_event WHERE event.status = 'closed' AND budget.remaining < budget.amount ORDER BY cost_exceeded DESC LIMIT 1
SELECT event.event_name, MAX(budget.remaining) as cost_exceeded FROM event JOIN budget ON event.event_id = budget.link_to_event WHERE event.status = 'closed' AND budget.remaining < budget.amount ORDER BY cost_exceeded DESC LIMIT 1
SELECT event.event_name, MAX(budget.remaining) as cost_exceeded FROM event JOIN budget ON event.event_id = budget.link_to_event WHERE event.status = 'closed' AND budget.remaining < budget.amount ORDER BY cost_exceeded DESC LIMIT 1
SELECT event.event_name, MAX(budget.remaining) as cost_exceeded FROM event JOIN budget ON event.event_id = budget.link_to_event WHERE event.status = 'closed' AND budget.remaining < budget.amount ORDER BY cost_exceeded DESC LIMIT 1
SELECT event.event_name, MAX(budget.remaining) as cost_exceeded FROM event JOIN budget ON event.event_id = budget.link_to_event WHERE event.status = 'closed' AND budget.remaining < budget.amount ORDER BY cost_exceeded DESC LIMIT 1
SELECT event.event_name, MAX(budget.remaining) as cost_exceeded FROM event JOIN budget ON event.event_id = budget.link_to_event WHERE event.status = 'closed' AND budget.remaining < budget.amount ORDER BY cost_exceeded DESC LIMIT 1
SELECT event.event_name, MAX(budget.remaining) as cost_exceeded FROM event JOIN budget ON event.event_id = budget.link_to_event WHERE event.status = 'closed' AND budget.remaining < budget.amount ORDER BY cost_exceeded DESC LIMIT 1","SELECT event.event_name, MAX(budget.remaining) as cost_exceeded FROM event JOIN budget ON event.event_id = budget.link_to_event WHERE event.status = 'closed' AND budget.remaining < budget.amount ORDER BY cost_exceeded DESC LIMIT 1"
13,733,How many gold-eyed superheroes did Marvel Comics publish?,superhero,moderate,SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN colour AS T3 ON T1.eye_colour_id = T3.id WHERE T2.publisher_name = 'Marvel Comics' AND T3.colour = 'Gold',7,"SELECT COUNT(*)  FROM superhero  INNER JOIN colour ON superhero.eye_colour_id = colour.id  WHERE colour.colour = 'Gold' AND superhero.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')
SELECT COUNT(*)  FROM superhero  INNER JOIN colour ON superhero.eye_colour_id = colour.id  WHERE colour.colour = 'Gold' AND superhero.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')
SELECT COUNT(*)  FROM superhero  INNER JOIN colour ON superhero.eye_colour_id = colour.id  WHERE colour.colour = 'Gold' AND superhero.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')
SELECT COUNT(*) FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE colour.colour = 'Gold' AND publisher.publisher_name = 'Marvel Comics'
SELECT COUNT(*)  FROM superhero  INNER JOIN colour ON superhero.eye_colour_id = colour.id  WHERE colour.colour = 'Gold' AND superhero.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')
SELECT COUNT(*) FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE colour.colour = 'Gold' AND publisher.publisher_name = 'Marvel Comics'
SELECT COUNT(*)  FROM superhero  INNER JOIN colour ON superhero.eye_colour_id = colour.id  WHERE colour.colour = 'Gold' AND superhero.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')",SELECT COUNT(*)  FROM superhero  INNER JOIN colour ON superhero.eye_colour_id = colour.id  WHERE colour.colour = 'Gold' AND superhero.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')
14,298,Calculate the percentage of molecules containing carcinogenic compounds that element is hydrogen.,toxicology,moderate,SELECT CAST(COUNT(CASE WHEN T1.element = 'h' AND T2.label = '+' THEN T2.molecule_id ELSE NULL END) AS REAL) * 100 / COUNT(T2.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id,7,"SELECT (SELECT COUNT(*) FROM (SELECT m.molecule_id FROM molecule AS m JOIN connected AS c ON m.molecule_id = c.atom_id JOIN atom AS a ON c.atom_id2 = a.atom_id WHERE a.element = 'hydrogen' INTERSECT SELECT m.molecule_id FROM molecule AS m JOIN connected AS c ON m.molecule_id = c.atom_id JOIN atom AS a ON c.atom_id2 = a.atom_id JOIN bond AS b ON c.bond_id = b.bond_id WHERE a.element = 'carcinogenic')) / (SELECT COUNT(*) FROM (SELECT m.molecule_id FROM molecule AS m JOIN connected AS c ON m.molecule_id = c.atom_id JOIN atom AS a ON c.atom_id2 = a.atom_id WHERE a.element = 'hydrogen')) * 100 AS percentage
SELECT (SELECT COUNT(*) FROM (SELECT m.molecule_id FROM molecule AS m JOIN connected AS c ON m.molecule_id = c.atom_id JOIN atom AS a ON c.atom_id2 = a.atom_id WHERE a.element = 'hydrogen' INTERSECT SELECT m.molecule_id FROM molecule AS m JOIN connected AS c ON m.molecule_id = c.atom_id JOIN atom AS a ON c.atom_id2 = a.atom_id JOIN bond AS b ON c.bond_id = b.bond_id WHERE a.element = 'carcinogenic')) / (SELECT COUNT(*) FROM (SELECT m.molecule_id FROM molecule AS m JOIN connected AS c ON m.molecule_id = c.atom_id JOIN atom AS a ON c.atom_id2 = a.atom_id WHERE a.element = 'hydrogen')) * 100 AS percentage
SELECT (SELECT COUNT(*) FROM (SELECT m.molecule_id FROM molecule AS m JOIN connected AS c ON m.molecule_id = c.atom_id JOIN atom AS a ON c.atom_id2 = a.atom_id WHERE a.element = 'hydrogen' INTERSECT SELECT m.molecule_id FROM molecule AS m JOIN connected AS c ON m.molecule_id = c.atom_id JOIN atom AS a ON c.atom_id2 = a.atom_id JOIN bond AS b ON c.bond_id = b.bond_id WHERE a.element = 'carcinogenic')) / (SELECT COUNT(*) FROM (SELECT m.molecule_id FROM molecule AS m JOIN connected AS c ON m.molecule_id = c.atom_id JOIN atom AS a ON c.atom_id2 = a.atom_id WHERE a.element = 'hydrogen')) * 100
SELECT (SELECT COUNT(*) FROM (SELECT m.molecule_id FROM molecule AS m JOIN connected AS c ON m.molecule_id = c.atom_id JOIN atom AS a ON c.atom_id2 = a.atom_id WHERE a.element = 'hydrogen' INTERSECT SELECT m.molecule_id FROM molecule AS m JOIN connected AS c ON m.molecule_id = c.atom_id JOIN atom AS a ON c.atom_id2 = a.atom_id JOIN bond AS b ON c.bond_id = b.bond_id WHERE a.element = 'carcinogenic')) * 100.0 / (SELECT COUNT(*) FROM (SELECT m.molecule_id FROM molecule AS m JOIN connected AS c ON m.molecule_id = c.atom_id JOIN atom AS a ON c.atom_id2 = a.atom_id WHERE a.element = 'hydrogen')) AS percentage
SELECT (SELECT COUNT(*) FROM (SELECT m.molecule_id FROM molecule AS m JOIN connected AS c ON m.molecule_id = c.atom_id JOIN atom AS a ON c.atom_id2 = a.atom_id WHERE a.element = 'hydrogen' INTERSECT SELECT m.molecule_id FROM molecule AS m JOIN connected AS c ON m.molecule_id = c.atom_id JOIN atom AS a ON c.atom_id2 = a.atom_id JOIN bond AS b ON c.bond_id = b.bond_id WHERE a.element = 'carcinogenic')) / (SELECT COUNT(*) FROM (SELECT m.molecule_id FROM molecule AS m JOIN connected AS c ON m.molecule_id = c.atom_id JOIN atom AS a ON c.atom_id2 = a.atom_id WHERE a.element = 'hydrogen')) * 100 AS percentage
SELECT (SELECT COUNT(*) FROM (SELECT m.molecule_id FROM molecule AS m JOIN connected AS c ON m.molecule_id = c.atom_id JOIN atom AS a ON c.atom_id2 = a.atom_id WHERE a.element = 'hydrogen' INTERSECT SELECT m.molecule_id FROM molecule AS m JOIN connected AS c ON m.molecule_id = c.atom_id JOIN atom AS a ON c.atom_id2 = a.atom_id JOIN bond AS b ON c.bond_id = b.bond_id WHERE a.element = 'carcinogenic')) / (SELECT COUNT(*) FROM (SELECT m.molecule_id FROM molecule AS m JOIN connected AS c ON m.molecule_id = c.atom_id JOIN atom AS a ON c.atom_id2 = a.atom_id WHERE a.element = 'hydrogen')) * 100 AS percentage
SELECT (SELECT COUNT(*) FROM (SELECT m.molecule_id FROM molecule AS m JOIN connected AS c ON m.molecule_id = c.atom_id JOIN atom AS a ON c.atom_id2 = a.atom_id WHERE a.element = 'hydrogen' INTERSECT SELECT m.molecule_id FROM molecule AS m JOIN connected AS c ON m.molecule_id = c.atom_id JOIN atom AS a ON c.atom_id2 = a.atom_id JOIN bond AS b ON c.bond_id = b.bond_id WHERE a.element = 'carcinogenic')) / (SELECT COUNT(*) FROM (SELECT m.molecule_id FROM molecule AS m JOIN connected AS c ON m.molecule_id = c.atom_id JOIN atom AS a ON c.atom_id2 = a.atom_id WHERE a.element = 'hydrogen')) * 100 AS percentage",SELECT (SELECT COUNT(*) FROM (SELECT m.molecule_id FROM molecule AS m JOIN connected AS c ON m.molecule_id = c.atom_id JOIN atom AS a ON c.atom_id2 = a.atom_id WHERE a.element = 'hydrogen' INTERSECT SELECT m.molecule_id FROM molecule AS m JOIN connected AS c ON m.molecule_id = c.atom_id JOIN atom AS a ON c.atom_id2 = a.atom_id JOIN bond AS b ON c.bond_id = b.bond_id WHERE a.element = 'carcinogenic')) / (SELECT COUNT(*) FROM (SELECT m.molecule_id FROM molecule AS m JOIN connected AS c ON m.molecule_id = c.atom_id JOIN atom AS a ON c.atom_id2 = a.atom_id WHERE a.element = 'hydrogen')) * 100 AS percentage
15,268,What are the elements for bond id TR001_10_11?,toxicology,challenging,SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR001_10_11',7,"SELECT atom.atom_id, atom.element FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id WHERE connected.bond_id = 'TR001_10_11'
SELECT atom.atom_id, atom.molecule_id, atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_id = 'TR001_10_11'
SELECT atom.atom_id, atom.element FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id WHERE connected.bond_id = 'TR001_10_11'
SELECT atom.atom_id, atom.molecule_id, atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_id = 'TR001_10_11'
SELECT atom.atom_id, atom.molecule_id, atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_id = 'TR001_10_11'
SELECT atom.atom_id, atom.molecule_id, atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_id = 'TR001_10_11'
SELECT atom.atom_id, atom.molecule_id, atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_id = 'TR001_10_11'","SELECT atom.atom_id, atom.molecule_id, atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_id = 'TR001_10_11'"
16,1448,Find the name and date of events with expenses for pizza that were more than fifty dollars but less than a hundred dollars.,student_club,challenging,"SELECT T1.event_name, T1.event_date FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T3.expense_description = 'Pizza' AND T3.cost > 50 AND T3.cost < 100",7,"SELECT event.event_name, event.event_date FROM event JOIN budget ON event.event_id = budget.link_to_event JOIN expense ON budget.budget_id = expense.link_to_budget WHERE expense.expense_description = 'pizza' AND expense.cost > 50 AND expense.cost < 100
SELECT event.event_name, event.event_date FROM event JOIN budget ON event.event_id = budget.link_to_event JOIN expense ON budget.budget_id = expense.link_to_budget WHERE expense.expense_description = 'pizza' AND expense.cost > 50 AND expense.cost < 100
SELECT event.event_name, event.event_date FROM event JOIN budget ON event.event_id = budget.link_to_event JOIN expense ON budget.budget_id = expense.link_to_budget WHERE expense.expense_description = 'pizza' AND expense.cost > 50 AND expense.cost < 100
SELECT event.event_name, event.event_date FROM event JOIN budget ON event.event_id = budget.link_to_event JOIN expense ON budget.budget_id = expense.link_to_budget WHERE expense.expense_description = 'pizza' AND expense.cost > 50 AND expense.cost < 100
SELECT event.event_name, event.event_date FROM event JOIN budget ON event.event_id = budget.link_to_event JOIN expense ON budget.budget_id = expense.link_to_budget WHERE expense.expense_description = 'pizza' AND expense.cost > 50 AND expense.cost < 100
SELECT event.event_name, event.event_date FROM event JOIN budget ON event.event_id = budget.link_to_event JOIN expense ON budget.budget_id = expense.link_to_budget WHERE expense.expense_description = 'pizza' AND expense.cost > 50 AND expense.cost < 100
SELECT event.event_name, event.event_date FROM event JOIN budget ON event.event_id = budget.link_to_event JOIN expense ON budget.budget_id = expense.link_to_budget WHERE expense.expense_description = 'pizza' AND expense.cost > 50 AND expense.cost < 100","SELECT event.event_name, event.event_date FROM event JOIN budget ON event.event_id = budget.link_to_event JOIN expense ON budget.budget_id = expense.link_to_budget WHERE expense.expense_description = 'pizza' AND expense.cost > 50 AND expense.cost < 100"
17,835,"Among all superheroes in Marvel Comics, identify the percentage of 'good' superheroes.",superhero,challenging,SELECT CAST(COUNT(CASE WHEN T3.alignment = 'Good' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T2.publisher_name = 'Marvel Comics',7,"SELECT (SELECT COUNT(*) FROM superhero INNER JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'good') * 100.0 / (SELECT COUNT(*) FROM superhero) AS percentage_good_superheroes
SELECT (SELECT COUNT(*) FROM superhero INNER JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'good') * 100.0 / (SELECT COUNT(*) FROM superhero) AS percentage_good_superheroes
SELECT (SELECT COUNT(*) FROM superhero INNER JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'good') * 100.0 / (SELECT COUNT(*) FROM superhero) AS percentage_good_superheroes
SELECT (SELECT COUNT(*) FROM superhero INNER JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'good') * 100.0 / (SELECT COUNT(*) FROM superhero) AS percentage_good_superheroes
SELECT (SELECT COUNT(*) FROM superhero INNER JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'good') * 100.0 / (SELECT COUNT(*) FROM superhero) AS percentage_good_superheroes
SELECT (SELECT COUNT(*) FROM superhero INNER JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'good') * 100.0 / (SELECT COUNT(*) FROM superhero) AS percentage_good_superheroes
SELECT (SELECT COUNT(*) FROM superhero INNER JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'good') * 100.0 / (SELECT COUNT(*) FROM superhero) AS percentage_good_superheroes",SELECT (SELECT COUNT(*) FROM superhero INNER JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'good') * 100.0 / (SELECT COUNT(*) FROM superhero) AS percentage_good_superheroes
18,773,"Which superhero has the same eyes, hair and skin colour? Indicate the publisher of the superhero.",superhero,challenging,"SELECT T1.superhero_name, T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.eye_colour_id = T1.hair_colour_id AND T1.eye_colour_id = T1.skin_colour_id",7,"SELECT s1.superhero_name, p1.publisher_name FROM superhero AS s1 JOIN superhero AS s2 ON s1.eye_colour_id = s2.eye_colour_id AND s1.hair_colour_id = s2.hair_colour_id AND s1.skin_colour_id = s2.skin_colour_id JOIN publisher AS p1 ON s1.publisher_id = p1.id WHERE s1.id <> s2.id ORDER BY s1.superhero_name
SELECT s1.superhero_name, p1.publisher_name FROM superhero AS s1 JOIN superhero AS s2 ON s1.eye_colour_id = s2.eye_colour_id AND s1.hair_colour_id = s2.hair_colour_id AND s1.skin_colour_id = s2.skin_colour_id JOIN publisher AS p1 ON s1.publisher_id = p1.id WHERE s1.id <> s2.id ORDER BY s1.superhero_name
SELECT s1.superhero_name, p1.publisher_name FROM superhero AS s1 JOIN superhero AS s2 ON s1.eye_colour_id = s2.eye_colour_id AND s1.hair_colour_id = s2.hair_colour_id AND s1.skin_colour_id = s2.skin_colour_id JOIN publisher AS p1 ON s1.publisher_id = p1.id WHERE s1.id <> s2.id ORDER BY s1.superhero_name
SELECT s1.superhero_name, p1.publisher_name FROM superhero AS s1 JOIN superhero AS s2 ON s1.eye_colour_id = s2.eye_colour_id AND s1.hair_colour_id = s2.hair_colour_id AND s1.skin_colour_id = s2.skin_colour_id JOIN publisher AS p1 ON s1.publisher_id = p1.id WHERE s1.id <> s2.id ORDER BY s1.superhero_name
SELECT s1.superhero_name, p1.publisher_name FROM superhero AS s1 JOIN superhero AS s2 ON s1.eye_colour_id = s2.eye_colour_id AND s1.hair_colour_id = s2.hair_colour_id AND s1.skin_colour_id = s2.skin_colour_id JOIN publisher AS p1 ON s1.publisher_id = p1.id WHERE s1.id <> s2.id ORDER BY s1.superhero_name
SELECT s1.superhero_name, p1.publisher_name FROM superhero AS s1 JOIN superhero AS s2 ON s1.eye_colour_id = s2.eye_colour_id AND s1.hair_colour_id = s2.hair_colour_id AND s1.skin_colour_id = s2.skin_colour_id JOIN publisher AS p1 ON s1.publisher_id = p1.id WHERE s1.id <> s2.id ORDER BY s1.superhero_name
SELECT s1.superhero_name, p1.publisher_name FROM superhero AS s1 JOIN superhero AS s2 ON s1.eye_colour_id = s2.eye_colour_id AND s1.hair_colour_id = s2.hair_colour_id AND s1.skin_colour_id = s2.skin_colour_id JOIN publisher AS p1 ON s1.publisher_id = p1.id WHERE s1.id <> s2.id ORDER BY s1.superhero_name","SELECT s1.superhero_name, p1.publisher_name FROM superhero AS s1 JOIN superhero AS s2 ON s1.eye_colour_id = s2.eye_colour_id AND s1.hair_colour_id = s2.hair_colour_id AND s1.skin_colour_id = s2.skin_colour_id JOIN publisher AS p1 ON s1.publisher_id = p1.id WHERE s1.id <> s2.id ORDER BY s1.superhero_name"
19,498,"What's the French name of the set of cards with ""Tendo Ice Bridge"" is in?",card_games,moderate,SELECT T2.translation FROM cards AS T1 INNER JOIN set_translations AS T2 ON T2.setCode = T1.setCode WHERE T1.name = 'Tendo Ice Bridge' AND T2.language = 'French' AND T2.translation IS NOT NULL,7,"SELECT foreign_data.name FROM foreign_data INNER JOIN cards ON foreign_data.multiverseid = cards.multiverseid WHERE cards.name = ""Tendo Ice Bridge""
SELECT foreign_data.name FROM foreign_data INNER JOIN cards ON foreign_data.multiverseid = cards.multiverseid WHERE cards.name = ""Tendo Ice Bridge""
SELECT foreign_data.name FROM foreign_data INNER JOIN cards ON foreign_data.multiverseid = cards.multiverseid WHERE cards.name = ""Tendo Ice Bridge""
SELECT foreign_data.name FROM foreign_data INNER JOIN cards ON foreign_data.multiverseid = cards.multiverseid WHERE cards.name = ""Tendo Ice Bridge""
SELECT foreign_data.name FROM foreign_data INNER JOIN cards ON foreign_data.multiverseid = cards.multiverseid WHERE cards.name = ""Tendo Ice Bridge""
SELECT foreign_data.name FROM foreign_data INNER JOIN cards ON foreign_data.multiverseid = cards.multiverseid WHERE cards.name = ""Tendo Ice Bridge""
SELECT foreign_data.name FROM foreign_data INNER JOIN cards ON foreign_data.multiverseid = cards.multiverseid WHERE cards.name = ""Tendo Ice Bridge""","SELECT foreign_data.name FROM foreign_data INNER JOIN cards ON foreign_data.multiverseid = cards.multiverseid WHERE cards.name = ""Tendo Ice Bridge"""
20,1195,What is the average blood albumin level for female patients with a PLT greater than 400 who have been diagnosed with SLE?,thrombosis_prediction,moderate,SELECT AVG(T2.ALB) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.PLT > 400 AND T1.Diagnosis = 'SLE' AND T1.SEX = 'F',7,"SELECT AVG(laboratory.alb)  FROM patient  JOIN examination ON patient.id = examination.id  JOIN laboratory ON patient.id = laboratory.id  WHERE patient.sex = 'female'  AND laboratory.plt > 400  AND examination.diagnosis = 'SLE'
SELECT AVG(laboratory.alb)  FROM patient  JOIN examination ON patient.id = examination.id  JOIN laboratory ON patient.id = laboratory.id  WHERE patient.sex = 'female'  AND laboratory.plt > 400  AND examination.diagnosis = 'SLE'
SELECT AVG(laboratory.alb)  FROM patient  JOIN examination ON patient.id = examination.id  JOIN laboratory ON patient.id = laboratory.id  WHERE patient.sex = 'female'  AND laboratory.plt > 400  AND examination.diagnosis = 'SLE'
SELECT AVG(laboratory.alb)  FROM patient  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE patient.sex = 'female'  AND laboratory.plt > 400  AND patient.diagnosis = 'SLE'
SELECT AVG(laboratory.alb)  FROM patient  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE patient.sex = 'female'  AND laboratory.plt > 400  AND patient.diagnosis = 'SLE'
SELECT AVG(laboratory.alb)  FROM patient  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE patient.sex = 'female'  AND laboratory.plt > 400  AND patient.diagnosis = 'SLE'
SELECT AVG(laboratory.alb)  FROM patient  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE patient.sex = 'female' AND laboratory.plt > 400 AND patient.diagnosis = 'SLE'",SELECT AVG(laboratory.alb)  FROM patient  JOIN examination ON patient.id = examination.id  JOIN laboratory ON patient.id = laboratory.id  WHERE patient.sex = 'female'  AND laboratory.plt > 400  AND examination.diagnosis = 'SLE'
21,942,What is the average fastest lap time in seconds for Lewis Hamilton in all the Formula_1 races?,formula_1,moderate,"SELECT AVG(CAST(SUBSTR(T2.fastestLapTime, 1, INSTR(T2.fastestLapTime, ':') - 1) AS INTEGER) * 60 + CAST(SUBSTR(T2.fastestLapTime, INSTR(T2.fastestLapTime, ':') + 1) AS REAL)) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.surname = 'Hamilton' AND T1.forename = 'Lewis'",7,"SELECT AVG(fastestlaptime) AS AverageFastestLapTime FROM results JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'
SELECT AVG(fastestlaptime) FROM results INNER JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'
SELECT AVG(fastestlaptime) AS AverageFastestLapTime FROM results INNER JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'
SELECT AVG(fastestlaptime) AS AverageFastestLapTime FROM results JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'
SELECT AVG(fastestlaptime) FROM results INNER JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'
SELECT AVG(fastestlaptime) FROM results INNER JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'
SELECT AVG(fastestlaptime) FROM results JOIN drivers ON results.driverid = drivers.driverid WHERE surname = 'Hamilton'",SELECT AVG(fastestlaptime) FROM results INNER JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'
22,0,What is the highest eligible free rate for K-12 students in the schools in Alameda County?,california_schools,simple,SELECT `Free Meal Count (K-12)` / `Enrollment (K-12)` FROM frpm WHERE `County Name` = 'Alameda' ORDER BY (CAST(`Free Meal Count (K-12)` AS REAL) / `Enrollment (K-12)`) DESC LIMIT 1,7,"SELECT MAX(""percent (%) eligible free (k-12)"") as Highest_Eligible_Free_Rate FROM schools WHERE county = 'Alameda County' AND ""educational option type"" = 'K-12'
SELECT MAX(""percent (%) eligible free (k-12)"") as Highest_Eligible_Free_Rate FROM schools WHERE county = 'Alameda County' AND ""educational option type"" = 'K-12' AND ""nslp provision status"" = 'Eligible' ORDER BY Highest_Eligible_Free_Rate DESC
SELECT MAX(""percent (%) eligible free (k-12)"") as Highest_Eligible_Free_Rate FROM schools WHERE county = 'Alameda County' AND ""educational option type"" = 'K-12' AND ""nslp provision status"" = 'Eligible' ORDER BY Highest_Eligible_Free_Rate DESC
SELECT MAX(""percent (%) eligible free (k-12)"") as Highest_Eligible_Free_Rate FROM schools WHERE county = 'Alameda County' AND ""educational option type"" = 'K-12' AND ""nslp provision status"" = 'Eligible' ORDER BY Highest_Eligible_Free_Rate DESC
SELECT MAX(""percent (%) eligible free (k-12)"") as Highest_Eligible_Free_Rate FROM schools WHERE county = 'Alameda County' AND ""educational option type"" = 'K-12'
SELECT MAX(""percent (%) eligible free (k-12)"") as Highest_Eligible_Free_Rate FROM schools WHERE county = 'Alameda County' AND ""educational option type"" = 'K-12' AND ""nslp provision status"" = 'Eligible' AND ""charter school (y/n)"" = 'N' AND ""charter funding type"" = 'Not Applicable' AND ""2013-14 calpads fall 1 certification status"" = 'Certified' AND ""frpm count (k-12)"" > 0
SELECT MAX(""percent (%) eligible free (k-12)"") as Highest_Eligible_Free_Rate FROM schools WHERE county = 'Alameda County' AND ""educational option type"" = 'K-12'","SELECT MAX(""percent (%) eligible free (k-12)"") as Highest_Eligible_Free_Rate FROM schools WHERE county = 'Alameda County' AND ""educational option type"" = 'K-12'"
23,249,What are the elements of the atoms of TR144_8_19?,toxicology,challenging,SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR144_8_19',7,"SELECT atoms.atom_id, atoms.molecule_id, atoms.element FROM atoms INNER JOIN connected ON atoms.atom_id = connected.atom_id INNER JOIN molecules ON atoms.molecule_id = molecules.molecule_id WHERE molecules.label = 'TR144_8_19'
SELECT atoms.atom_id, atoms.molecule_id, atoms.element FROM atoms INNER JOIN connected ON atoms.atom_id = connected.atom_id INNER JOIN molecules ON atoms.molecule_id = molecules.molecule_id WHERE molecules.label = 'TR144_8_19'
SELECT atoms.atom_id, atoms.molecule_id, atoms.element  FROM atoms  INNER JOIN connected ON atoms.atom_id = connected.atom_id  INNER JOIN molecules ON atoms.molecule_id = molecules.molecule_id  WHERE molecules.label = 'TR144_8_19'
SELECT atoms.atom_id, atoms.molecule_id, atoms.element FROM atoms INNER JOIN connected ON atoms.atom_id = connected.atom_id INNER JOIN molecule ON atoms.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR144_8_19'
SELECT atoms.atom_id, atoms.molecule_id, atoms.element FROM atoms INNER JOIN connected ON atoms.atom_id = connected.atom_id INNER JOIN molecules ON atoms.molecule_id = molecules.molecule_id WHERE molecules.label = 'TR144_8_19'
SELECT atoms.atom_id, atoms.molecule_id, atoms.element  FROM atoms  INNER JOIN connected ON atoms.atom_id = connected.atom_id  INNER JOIN molecules ON atoms.molecule_id = molecules.molecule_id  WHERE molecules.label = 'TR144_8_19'
SELECT atoms.atom_id, atoms.molecule_id, atoms.element  FROM atoms  INNER JOIN connected ON atoms.atom_id = connected.atom_id  INNER JOIN molecules ON atoms.molecule_id = molecules.molecule_id  WHERE molecules.label = 'TR144_8_19'","SELECT atoms.atom_id, atoms.molecule_id, atoms.element FROM atoms INNER JOIN connected ON atoms.atom_id = connected.atom_id INNER JOIN molecules ON atoms.molecule_id = molecules.molecule_id WHERE molecules.label = 'TR144_8_19'"
24,304,List all carcinogenic molecules and their elements.,toxicology,challenging,"SELECT DISTINCT T2.molecule_id, T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'",7,"SELECT m.molecule_id, m.label, a.atom_id, a.element FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN connected c ON a.atom_id = c.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE m.label = 'carcinogenic' 
SELECT m.molecule_id, m.label, a.atom_id, a.element FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN connected c ON a.atom_id = c.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE m.label = 'carcinogenic' 
SELECT m.label AS carcinogenic_molecules, a.element  FROM molecule m  JOIN atom a ON m.molecule_id = a.molecule_id  WHERE m.label LIKE '%carcinogen%'  GROUP BY m.molecule_id
SELECT m.label AS carcinogenic_molecules, a.element FROM molecule AS m JOIN atom AS a ON m.molecule_id = a.molecule_id JOIN connected AS c ON a.atom_id = c.atom_id JOIN bond AS b ON c.bond_id = b.bond_id WHERE b.bond_type = 'carcinogenic' GROUP BY m.label, a.element
SELECT m.molecule_id, m.label, a.atom_id, a.element FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN connected c ON a.atom_id = c.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE m.label = 'carcinogenic' 
SELECT m.label AS carcinogenic_molecule, a.element AS corresponding_element FROM molecule AS m JOIN atom AS a ON m.molecule_id = a.molecule_id WHERE m.label LIKE '%carcinogen%' GROUP BY m.molecule_id
SELECT m.molecule_id, m.label, a.atom_id, a.element FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN connected c ON a.atom_id = c.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE m.label = 'carcinogenic' ","SELECT m.molecule_id, m.label, a.atom_id, a.element FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN connected c ON a.atom_id = c.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE m.label = 'carcinogenic' "
25,509,What is the unique id of the set that has the highest number of cards?,card_games,simple,SELECT id FROM sets ORDER BY baseSetSize DESC LIMIT 1,7,"SELECT sets.id FROM sets INNER JOIN cards ON sets.id = cards.setcode GROUP BY sets.id ORDER BY COUNT(cards.id) DESC LIMIT 1
SELECT sets.id FROM sets JOIN cards ON sets.id = cards.setcode GROUP BY sets.id ORDER BY COUNT(cards.id) DESC LIMIT 1
SELECT sets.id FROM sets INNER JOIN cards ON sets.id = cards.setcode GROUP BY sets.id ORDER BY COUNT(cards.id) DESC LIMIT 1
SELECT sets.id FROM sets JOIN cards ON sets.id = cards.setcode GROUP BY sets.id ORDER BY COUNT(cards.id) DESC LIMIT 1
SELECT sets.id FROM sets JOIN cards ON sets.id = cards.setcode GROUP BY sets.id ORDER BY COUNT(cards.id) DESC LIMIT 1
SELECT sets.id FROM sets JOIN cards ON sets.id = cards.setcode GROUP BY sets.id ORDER BY COUNT(cards.id) DESC LIMIT 1
SELECT sets.id FROM sets INNER JOIN cards ON sets.id = cards.setcode GROUP BY sets.id ORDER BY COUNT(cards.id) DESC LIMIT 1",SELECT sets.id FROM sets JOIN cards ON sets.id = cards.setcode GROUP BY sets.id ORDER BY COUNT(cards.id) DESC LIMIT 1
26,1359,"How many times was the budget in Advertisement for ""Yearly Kickoff"" meeting more than ""October Meeting""?",student_club,challenging,SELECT CAST(SUM(CASE WHEN T2.event_name = 'Yearly Kickoff' THEN T1.amount ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.event_name = 'October Meeting' THEN T1.amount ELSE 0 END) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Advertisement' AND T2.type = 'Meeting',7,"SELECT COUNT(*)  FROM budget  WHERE category = 'Advertisement'  AND link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Yearly Kickoff')  AND amount > (SELECT amount FROM budget WHERE category = 'Advertisement' AND link_to_event IN (SELECT event_id FROM event WHERE event_name = 'October Meeting'))
SELECT COUNT(*)  FROM budget  WHERE category = 'Advertisement'  AND link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Yearly Kickoff')  AND amount > (SELECT amount FROM budget WHERE category = 'Advertisement' AND link_to_event IN (SELECT event_id FROM event WHERE event_name = 'October Meeting'))
SELECT COUNT(*)  FROM budget  WHERE category = 'Advertisement'  AND link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Yearly Kickoff')  AND amount > (SELECT amount FROM budget WHERE category = 'Advertisement' AND link_to_event IN (SELECT event_id FROM event WHERE event_name = 'October Meeting'))
SELECT COUNT(*)  FROM budget  WHERE category = 'Advertisement'  AND link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Yearly Kickoff')  AND amount > (SELECT amount FROM budget WHERE category = 'Advertisement' AND link_to_event IN (SELECT event_id FROM event WHERE event_name = 'October Meeting'))
SELECT COUNT(*)  FROM budget  WHERE category = 'Advertisement'  AND link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Yearly Kickoff')  AND amount > (SELECT amount FROM budget WHERE category = 'Advertisement' AND link_to_event IN (SELECT event_id FROM event WHERE event_name = 'October Meeting'))
SELECT COUNT(*)  FROM budget  WHERE category = 'Advertisement'  AND link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Yearly Kickoff')  AND amount > (SELECT amount FROM budget WHERE category = 'Advertisement' AND link_to_event IN (SELECT event_id FROM event WHERE event_name = 'October Meeting'))
SELECT COUNT(*)  FROM budget  WHERE category = 'Advertisement'  AND link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Yearly Kickoff')  AND amount > (SELECT amount FROM budget WHERE category = 'Advertisement' AND link_to_event IN (SELECT event_id FROM event WHERE event_name = 'October Meeting'))",SELECT COUNT(*)  FROM budget  WHERE category = 'Advertisement'  AND link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Yearly Kickoff')  AND amount > (SELECT amount FROM budget WHERE category = 'Advertisement' AND link_to_event IN (SELECT event_id FROM event WHERE event_name = 'October Meeting'))
27,1474,"Which customers, paying in CZK, consumed the most gas in 2011?",debit_card_specializing,moderate,SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' AND T2.Date BETWEEN 201101 AND 201112 GROUP BY T1.CustomerID ORDER BY SUM(T2.Consumption) DESC LIMIT 1,7,"SELECT c.customerid, c.segment, SUM(ym.consumption) AS total_consumption FROM customers AS c JOIN yearmonth AS ym ON c.customerid = ym.customerid WHERE c.currency = 'CZK' AND strftime('%Y', ym.date) = '2011' GROUP BY c.customerid, c.segment ORDER BY total_consumption DESC
SELECT c.customerid, c.segment, SUM(ym.consumption) as total_consumption FROM customers as c JOIN yearmonth as ym ON c.customerid = ym.customerid WHERE c.currency = 'CZK' AND strftime('%Y', ym.date) = '2011' GROUP BY c.customerid, c.segment ORDER BY total_consumption DESC
SELECT c.customerid, c.segment, SUM(ym.consumption) as total_consumption FROM customers as c JOIN yearmonth as ym ON c.customerid = ym.customerid WHERE c.currency = 'CZK' AND strftime('%Y', ym.date) = '2011' GROUP BY c.customerid, c.segment ORDER BY total_consumption DESC
SELECT c.customerid, c.segment, SUM(ym.consumption) AS total_consumption FROM customers AS c JOIN yearmonth AS ym ON c.customerid = ym.customerid WHERE c.currency = 'CZK' AND strftime('%Y', ym.date) = '2011' GROUP BY c.customerid, c.segment ORDER BY total_consumption DESC
SELECT c.customerid, c.segment, SUM(ym.consumption) as total_consumption FROM customers as c JOIN yearmonth as ym ON c.customerid = ym.customerid WHERE c.currency = 'CZK' AND strftime('%Y', ym.date) = '2011' GROUP BY c.customerid, c.segment ORDER BY total_consumption DESC
SELECT c.customerid, c.segment, SUM(ym.consumption) as total_consumption FROM customers as c JOIN yearmonth as ym ON c.customerid = ym.customerid WHERE c.currency = 'CZK' AND strftime('%Y', ym.date) = '2011' GROUP BY c.customerid, c.segment ORDER BY total_consumption DESC
SELECT c.customerid, c.segment, SUM(ym.consumption) as total_consumption FROM customers as c JOIN yearmonth as ym ON c.customerid = ym.customerid WHERE c.currency = 'CZK' AND strftime('%Y', ym.date) = '2011' GROUP BY c.customerid, c.segment ORDER BY total_consumption DESC","SELECT c.customerid, c.segment, SUM(ym.consumption) as total_consumption FROM customers as c JOIN yearmonth as ym ON c.customerid = ym.customerid WHERE c.currency = 'CZK' AND strftime('%Y', ym.date) = '2011' GROUP BY c.customerid, c.segment ORDER BY total_consumption DESC"
28,506,"For all the set of cards that has Japanese translation, what is the percentage of them are only available in non-foil?",card_games,challenging,SELECT CAST(SUM(CASE WHEN isNonFoilOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) FROM sets WHERE code IN ( SELECT setCode FROM set_translations WHERE language = 'Japanese' ),7,"SELECT (   SELECT COUNT(*) FROM cards WHERE hasnonfoil = 1 AND hasfoil = 0 AND language = 'Japanese' ) / (   SELECT COUNT(*) FROM cards WHERE language = 'Japanese' ) * 100 AS percentage
SELECT (   SELECT COUNT(*)    FROM cards    WHERE hasnonfoil = 1 AND hasfoil = 0 AND language = 'Japanese' ) / (   SELECT COUNT(*)    FROM cards    WHERE language = 'Japanese' ) * 100 AS percentage
SELECT (COUNT(cards.id) * 100 / (SELECT COUNT(*) FROM cards WHERE hasnonfoil = 1 AND hasfoil = 0)) AS percentage FROM cards INNER JOIN foreign_data ON cards.id = foreign_data.id WHERE foreign_data.language = 'Japanese' AND cards.hasnonfoil = 1 AND cards.hasfoil = 0
SELECT (SELECT COUNT(*) FROM cards WHERE hasnonfoil = 1 AND hasjapanesetranslation = 1) / (SELECT COUNT(*) FROM cards WHERE hasjapanesetranslation = 1) * 100 AS percentage
SELECT (     SELECT COUNT(*)      FROM cards      WHERE hasnonfoil = 1 AND hasfoil = 0 AND language = 'Japanese' ) / (     SELECT COUNT(*)      FROM cards      WHERE language = 'Japanese' ) * 100 AS percentage
SELECT (SELECT COUNT(*) FROM cards WHERE hasnonfoil = 1 AND hasjapanese = 1) / (SELECT COUNT(*) FROM cards WHERE hasjapanese = 1) * 100 AS percentage
SELECT (     SELECT COUNT(*)      FROM cards      WHERE hasnonfoil = 1 AND hasfoil = 0 AND language = 'Japanese' ) / (     SELECT COUNT(*)      FROM cards      WHERE language = 'Japanese' ) * 100 AS percentage",SELECT (     SELECT COUNT(*)      FROM cards      WHERE hasnonfoil = 1 AND hasfoil = 0 AND language = 'Japanese' ) / (     SELECT COUNT(*)      FROM cards      WHERE language = 'Japanese' ) * 100 AS percentage
29,362,"What is the description about the ruling of card ""Condemn""?",card_games,simple,SELECT T2.text FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Condemn',7,"SELECT text FROM rulings WHERE uuid = (SELECT uuid FROM cards WHERE name = ""Condemn"")
SELECT text FROM rulings WHERE uuid = (SELECT uuid FROM cards WHERE name = ""Condemn"")
SELECT text FROM rulings WHERE uuid = (SELECT uuid FROM cards WHERE name = ""Condemn"")
SELECT text FROM rulings WHERE uuid = (SELECT uuid FROM cards WHERE name = ""Condemn"")
SELECT text FROM rulings WHERE uuid = (SELECT uuid FROM cards WHERE name = ""Condemn"")
SELECT text FROM rulings WHERE uuid = (SELECT uuid FROM cards WHERE name = ""Condemn"")
SELECT text FROM rulings WHERE uuid = (SELECT uuid FROM cards WHERE name = ""Condemn"")","SELECT text FROM rulings WHERE uuid = (SELECT uuid FROM cards WHERE name = ""Condemn"")"
30,1180,Was the patient a man or a women whose ALT glutamic pylvic transaminase status got 9 on 1992-6-12?,thrombosis_prediction,moderate,SELECT T1.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GPT = 9.0 AND T2.Date = '1992-06-12',7,"SELECT patient.id, patient.sex, laboratory.alp  FROM patient  JOIN laboratory ON patient.id = laboratory.id  WHERE patient.sex IN ('man', 'woman')  AND laboratory.date = '1992-6-12'  AND laboratory.alp = 9
SELECT patient.id, patient.sex, laboratory.alp FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex IN ('man', 'woman') AND laboratory.date = '1992-6-12' AND laboratory.alp = 9
SELECT patient.id, patient.sex, laboratory.alp FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex IN ('man', 'woman') AND laboratory.date = '1992-6-12' AND laboratory.alp = 9
SELECT patient.id, patient.sex, laboratory.alp  FROM patient  JOIN laboratory ON patient.id = laboratory.id  WHERE patient.sex IN ('man', 'woman') AND laboratory.date = '1992-6-12' AND laboratory.alp = 9
SELECT patient.id, patient.sex, laboratory.alp  FROM patient  JOIN laboratory ON patient.id = laboratory.id  WHERE patient.sex IN ('man', 'woman') AND laboratory.date = '1992-6-12' AND laboratory.alp = 9
SELECT patient.id, patient.sex, laboratory.alp FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex IN ('man', 'woman') AND laboratory.date = '1992-6-12' AND laboratory.alp = 9
SELECT patient.id, patient.sex, laboratory.alp FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex IN ('man', 'woman') AND laboratory.date = '1992-6-12' AND laboratory.alp = 9","SELECT patient.id, patient.sex, laboratory.alp FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex IN ('man', 'woman') AND laboratory.date = '1992-6-12' AND laboratory.alp = 9"
31,586,Which user added a bounty amount of 50 to the post title mentioning variance?,codebase_community,challenging,"SELECT T3.DisplayName, T1.Title FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId INNER JOIN users AS T3 ON T3.Id = T2.UserId WHERE T2.BountyAmount = 50 AND T1.Title LIKE '%variance%'",7,"SELECT users.displayname  FROM users  JOIN votes ON users.id = votes.userid  JOIN posts ON votes.postid = posts.id  WHERE votes.bountyamount = 50 AND posts.title LIKE '%variance%' AND posts.title LIKE '%badges%'
SELECT users.displayname  FROM users  JOIN votes ON users.id = votes.userid  JOIN posts ON votes.postid = posts.id  WHERE votes.bountyamount = 50 AND posts.title LIKE '%variance%' AND posts.title LIKE '%badges%'
SELECT users.id, users.displayname FROM users JOIN votes ON users.id = votes.userid WHERE votes.bountyamount = 50 AND posts.title LIKE '%variance%' AND posts.title LIKE '%badges%'
SELECT users.displayname  FROM users  JOIN votes ON users.id = votes.userid  JOIN posts ON votes.postid = posts.id  WHERE votes.bountyamount = 50 AND posts.title LIKE '%variance%' AND posts.title LIKE '%badges%'
SELECT users.id, users.displayname FROM users JOIN votes ON users.id = votes.userid WHERE votes.bountyamount = 50 AND posts.title LIKE '%variance%' AND posts.title LIKE '%badges%'
SELECT users.displayname  FROM users  JOIN votes ON users.id = votes.userid  JOIN posts ON votes.postid = posts.id  WHERE votes.bountyamount = 50 AND posts.title LIKE '%variance%' AND posts.title LIKE '%badges%'
SELECT users.id, users.displayname FROM users JOIN votes ON users.id = votes.userid WHERE votes.bountyamount = 50 AND posts.title LIKE '%variance%' AND posts.title LIKE '%badges%'",SELECT users.displayname  FROM users  JOIN votes ON users.id = votes.userid  JOIN posts ON votes.postid = posts.id  WHERE votes.bountyamount = 50 AND posts.title LIKE '%variance%' AND posts.title LIKE '%badges%'
32,1169,What is the ratio of male to female patients among all those with abnormal uric acid counts?,thrombosis_prediction,challenging,SELECT CAST(SUM(CASE WHEN T2.UA <= 8.0 AND T1.SEX = 'M' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.UA <= 6.5 AND T1.SEX = 'F' THEN 1 ELSE 0 END) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID,7,"SELECT      (SELECT COUNT(*) FROM patient WHERE sex = 'Male' AND id IN (SELECT patient_id FROM laboratory WHERE ua > 'normal')) AS male_count,     (SELECT COUNT(*) FROM patient WHERE sex = 'Female' AND id IN (SELECT patient_id FROM laboratory WHERE ua > 'normal')) AS female_count,     (SELECT male_count / female_count) AS ratio
SELECT      (SELECT COUNT(*) FROM patient WHERE sex = 'Male' AND id IN (SELECT patient_id FROM laboratory WHERE ua > 'normal')) AS male_patients,     (SELECT COUNT(*) FROM patient WHERE sex = 'Female' AND id IN (SELECT patient_id FROM laboratory WHERE ua > 'normal')) AS female_patients,     (SELECT COUNT(*) FROM patient WHERE id IN (SELECT patient_id FROM laboratory WHERE ua > 'normal')) AS total_patients 
SELECT      (SELECT COUNT(*) FROM patient WHERE sex = 'Male' AND id IN (SELECT patient_id FROM laboratory WHERE ua > 'normal')) AS male_count,     (SELECT COUNT(*) FROM patient WHERE sex = 'Female' AND id IN (SELECT patient_id FROM laboratory WHERE ua > 'normal')) AS female_count,     (SELECT male_count / female_count) AS ratio
SELECT      (SELECT COUNT(*) FROM patient WHERE sex = 'Male' AND id IN (SELECT patient_id FROM laboratory WHERE ua > 'normal')) AS male_count,     (SELECT COUNT(*) FROM patient WHERE sex = 'Female' AND id IN (SELECT patient_id FROM laboratory WHERE ua > 'normal')) AS female_count,     (SELECT male_count / female_count) AS ratio
SELECT      (SELECT COUNT(*) FROM patient WHERE sex = 'male' AND id IN (SELECT patient_id FROM laboratory WHERE ua > 'normal')) /      (SELECT COUNT(*) FROM patient WHERE sex = 'female' AND id IN (SELECT patient_id FROM laboratory WHERE ua > 'normal')) AS ratio
SELECT      (SELECT COUNT(*) FROM patient WHERE sex = 'Male' AND id IN (SELECT patient_id FROM laboratory WHERE ua > 'normal')) /      (SELECT COUNT(*) FROM patient WHERE sex = 'Female' AND id IN (SELECT patient_id FROM laboratory WHERE ua > 'normal')) AS ratio
SELECT      (SELECT COUNT(*) FROM patient WHERE sex = 'Male' AND id IN (SELECT patient_id FROM laboratory WHERE ua > 'normal')) AS male_count,     (SELECT COUNT(*) FROM patient WHERE sex = 'Female' AND id IN (SELECT patient_id FROM laboratory WHERE ua > 'normal')) AS female_count,     (SELECT male_count / female_count) AS ratio","SELECT      (SELECT COUNT(*) FROM patient WHERE sex = 'Male' AND id IN (SELECT patient_id FROM laboratory WHERE ua > 'normal')) AS male_count,     (SELECT COUNT(*) FROM patient WHERE sex = 'Female' AND id IN (SELECT patient_id FROM laboratory WHERE ua > 'normal')) AS female_count,     (SELECT male_count / female_count) AS ratio"
33,1210,What is the average index of the lactate dehydrogenase (LDH) for all patients with lactate dehydrogenase (LDH) within the normal range.,thrombosis_prediction,simple,SELECT AVG(LDH) FROM Laboratory WHERE LDH < 500,7,"SELECT AVG(laboratory.ldh)  FROM patient  JOIN examination ON patient.id = examination.id  JOIN laboratory ON patient.id = laboratory.id  WHERE patient.ldh >= 100 AND patient.ldh <= 200
SELECT AVG(laboratory.ldh)  FROM patient  JOIN examination ON patient.id = examination.id  JOIN laboratory ON patient.id = laboratory.id  WHERE patient.id IN (SELECT patient.id FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.ldh BETWEEN 100 AND 200)
SELECT AVG(laboratory.ldh)  FROM patient  JOIN examination ON patient.id = examination.id  JOIN laboratory ON patient.id = laboratory.id  WHERE patient.id IN (SELECT patient.id FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.ldh BETWEEN 100 AND 200)
SELECT AVG(laboratory.ldh) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.ldh BETWEEN normal_range_low AND normal_range_high
SELECT AVG(laboratory.ldh)  FROM patient  JOIN examination ON patient.id = examination.id  JOIN laboratory ON patient.id = laboratory.id  WHERE patient.id IN (SELECT patient.id FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.ldh BETWEEN 100 AND 200)
SELECT AVG(laboratory.ldh)  FROM patient  JOIN examination ON patient.id = examination.id  JOIN laboratory ON patient.id = laboratory.id  WHERE patient.id IN (SELECT patient.id FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.ldh BETWEEN 100 AND 200)
SELECT AVG(laboratory.ldh) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.ldh >= 100 AND laboratory.ldh <= 200",SELECT AVG(laboratory.ldh)  FROM patient  JOIN examination ON patient.id = examination.id  JOIN laboratory ON patient.id = laboratory.id  WHERE patient.id IN (SELECT patient.id FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.ldh BETWEEN 100 AND 200)
34,987,What is the average fastest lap time of the top 10 drivers in the 2006 United States Grand Prix?,formula_1,simple,SELECT AVG(T1.fastestLapTime) FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId WHERE T1.rank < 11 AND T2.year = 2006 AND T2.name = 'United States Grand Prix',7,"SELECT AVG(fastestlaptime) FROM (     SELECT r.driverid, r.fastestlaptime     FROM results r     JOIN drivers d ON r.driverid = d.driverid     JOIN races ra ON r.raceid = ra.raceid     WHERE ra.year = 2006 AND ra.circuitid IN (         SELECT circuitid         FROM circuits         WHERE country = 'USA'     )     ORDER BY r.points DESC     LIMIT 10 )
SELECT AVG(fastestlaptime)  FROM (     SELECT r.fastestlaptime      FROM results r      JOIN drivers d ON r.driverid = d.driverid      JOIN races ra ON r.raceid = ra.raceid      WHERE ra.year = 2006 AND ra.name LIKE '%United States Grand Prix%'      ORDER BY r.points DESC      LIMIT 10 )
SELECT AVG(fastestlaptime)  FROM (     SELECT r.fastestlaptime      FROM results r      JOIN drivers d ON r.driverid = d.driverid      JOIN races ra ON r.raceid = ra.raceid      WHERE ra.year = 2006 AND ra.name LIKE '%United States Grand Prix%'      ORDER BY r.points DESC      LIMIT 10 )
SELECT AVG(fastestlaptime)  FROM (     SELECT r.fastestlaptime      FROM results r      JOIN drivers d ON r.driverid = d.driverid      JOIN races ra ON r.raceid = ra.raceid      WHERE ra.year = 2006 AND ra.name LIKE '%United States Grand Prix%'      ORDER BY r.points DESC      LIMIT 10 )
SELECT AVG(fastestlaptime)  FROM (     SELECT r.fastestlaptime      FROM results r      JOIN drivers d ON r.driverid = d.driverid      JOIN races ra ON r.raceid = ra.raceid      WHERE ra.year = 2006 AND ra.name LIKE '%United States Grand Prix%'      ORDER BY r.points DESC      LIMIT 10 )
SELECT AVG(fastestlaptime) FROM (     SELECT r.driverid, r.fastestlaptime     FROM results r     JOIN drivers d ON r.driverid = d.driverid     JOIN races ra ON r.raceid = ra.raceid     WHERE ra.year = 2006 AND ra.circuitid IN (         SELECT circuitid         FROM circuits         WHERE country = 'USA'     )     ORDER BY r.points DESC     LIMIT 10 )
SELECT AVG(fastestlaptime) FROM results INNER JOIN drivers ON results.driverid = drivers.driverid WHERE raceid IN (SELECT raceid FROM races WHERE year = 2006 AND circuitid IN (SELECT circuitid FROM circuits WHERE country = 'USA')) ORDER BY points DESC LIMIT 10",SELECT AVG(fastestlaptime)  FROM (     SELECT r.fastestlaptime      FROM results r      JOIN drivers d ON r.driverid = d.driverid      JOIN races ra ON r.raceid = ra.raceid      WHERE ra.year = 2006 AND ra.name LIKE '%United States Grand Prix%'      ORDER BY r.points DESC      LIMIT 10 )
35,1148,What is the percentage of players that are under 180 cm who have an overall strength of more than 70?,european_football_2,moderate,SELECT CAST(COUNT(CASE WHEN t2.overall_rating > 70 THEN t1.id ELSE NULL END) AS REAL) * 100 / COUNT(t1.id) percent FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.height < 180,7,"SELECT (     SELECT COUNT(*)      FROM player      INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id     WHERE player.height < 180 AND player_attributes.overall_rating > 70 ) / (     SELECT COUNT(*)      FROM player      WHERE player.height < 180 ) * 100 AS percentage
SELECT (     SELECT COUNT(*)      FROM player      INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id     WHERE player.height < 180 AND player_attributes.overall_rating > 70 ) / (     SELECT COUNT(*)      FROM player     WHERE height < 180 ) * 100 AS percentage
SELECT (     SELECT COUNT(*)      FROM player      INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id      WHERE player.height < 180 AND player_attributes.strength > 70 ) / (     SELECT COUNT(*)      FROM player      WHERE player.height < 180 ) * 100 AS percentage
SELECT (     SELECT COUNT(*)      FROM player      INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id     WHERE player.height < 180 AND player_attributes.overall_rating > 70 ) / (     SELECT COUNT(*)      FROM player      WHERE player.height < 180 ) * 100 AS percentage
SELECT (     SELECT COUNT(*)      FROM player      INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id     WHERE player.height < 180 AND player_attributes.overall_rating > 70 ) / (     SELECT COUNT(*)      FROM player      WHERE player.height < 180 ) * 100 AS percentage
SELECT (     SELECT COUNT(*)      FROM player      INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id     WHERE player.height < 180 AND player_attributes.overall_rating > 70 ) / (     SELECT COUNT(*)      FROM player      WHERE player.height < 180 ) * 100 AS percentage
SELECT (     SELECT COUNT(*)      FROM player      INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id     WHERE player.height < 180 AND player_attributes.overall_rating > 70 ) / (     SELECT COUNT(*)      FROM player      WHERE player.height < 180 ) * 100 AS percentage",SELECT (     SELECT COUNT(*)      FROM player      INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id     WHERE player.height < 180 AND player_attributes.overall_rating > 70 ) / (     SELECT COUNT(*)      FROM player      WHERE player.height < 180 ) * 100 AS percentage
36,218,What percentage of carcinogenic-type molecules does not contain fluorine?,toxicology,challenging,SELECT CAST(COUNT(DISTINCT CASE WHEN T1.element <> 'f' THEN T2.molecule_id ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T2.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+',7,"SELECT (     SELECT COUNT(*)      FROM molecule      LEFT JOIN atom ON molecule.molecule_id = atom.molecule_id      WHERE element != 'F'      AND label LIKE '%carcinogenic%' ) / (     SELECT COUNT(*)      FROM molecule      WHERE label LIKE '%carcinogenic%' ) * 100 AS percentage
SELECT (     (SELECT COUNT(*) FROM molecule      LEFT JOIN atom ON molecule.molecule_id = atom.molecule_id      WHERE element != 'F' AND label LIKE '%carcinogenic%') * 100     /     (SELECT COUNT(*) FROM molecule WHERE label LIKE '%carcinogenic%') ) AS percentage
SELECT (     SELECT COUNT(*)      FROM molecule      LEFT JOIN atom ON molecule.molecule_id = atom.molecule_id      WHERE molecule.label = 'carcinogenic' AND atom.element != 'F' ) / (     SELECT COUNT(*)      FROM molecule      WHERE molecule.label = 'carcinogenic' ) * 100 AS percentage
SELECT (     SELECT COUNT(*)      FROM molecule      LEFT JOIN atom ON molecule.molecule_id = atom.molecule_id      WHERE element != 'F'      AND label LIKE '%carcinogenic%' ) / (     SELECT COUNT(*)      FROM molecule      WHERE label LIKE '%carcinogenic%' ) * 100 AS percentage
SELECT (     SELECT COUNT(*)      FROM (         SELECT DISTINCT molecule_id          FROM atom          WHERE element != 'F'     )  ) / (     SELECT COUNT(*)      FROM (         SELECT DISTINCT molecule_id          FROM atom          WHERE element = 'Carcinogenic'     ) ) * 100 AS percentage
SELECT (     SELECT COUNT(*) FROM (         SELECT DISTINCT molecule_id FROM atom WHERE element != 'F'     ) AS non_fluorine_molecules ) / (     SELECT COUNT(*) FROM (         SELECT DISTINCT molecule_id FROM atom WHERE element = 'Carcinogenic'     ) AS carcinogenic_molecules ) * 100 AS percentage
SELECT (     SELECT COUNT(*)      FROM molecule      LEFT JOIN atom ON molecule.molecule_id = atom.molecule_id      WHERE element != 'F'      AND label LIKE '%carcinogenic%' ) / (     SELECT COUNT(*)      FROM molecule      WHERE label LIKE '%carcinogenic%' ) * 100 AS percentage",SELECT (     SELECT COUNT(*)      FROM molecule      LEFT JOIN atom ON molecule.molecule_id = atom.molecule_id      WHERE element != 'F'      AND label LIKE '%carcinogenic%' ) / (     SELECT COUNT(*)      FROM molecule      WHERE label LIKE '%carcinogenic%' ) * 100 AS percentage
37,397,"What is the mana cost of cards with a normal layout, a 2003 frame version, with a black border color, and available in paper and mtgo?",card_games,moderate,"SELECT manaCost FROM cards WHERE availability = 'mtgo,paper' AND borderColor = 'black' AND frameVersion = 2003 AND layout = 'normal'",7,"SELECT convertedmanacost FROM cards WHERE layout = 'normal' AND frameversion = '2003' AND bordercolor = 'black' AND availability LIKE '%paper%' AND availability LIKE '%mtgo%'
SELECT convertedmanacost FROM cards WHERE layout = 'normal' AND frameversion = '2003' AND bordercolor = 'black' AND availability LIKE '%paper%' AND availability LIKE '%mtgo%'
SELECT convertedmanacost FROM cards WHERE layout = 'normal' AND frameversion = '2003' AND bordercolor = 'black' AND availability LIKE '%paper%' AND availability LIKE '%mtgo%'
SELECT convertedmanacost FROM cards WHERE layout = 'normal' AND frameversion = '2003' AND bordercolor = 'black' AND availability LIKE '%paper%' AND availability LIKE '%mtgo%'
SELECT convertedmanacost FROM cards WHERE layout = 'normal' AND frameversion = '2003' AND bordercolor = 'black' AND availability LIKE '%paper%' AND availability LIKE '%mtgo%'
SELECT convertedmanacost FROM cards WHERE layout = 'normal' AND frameversion = '2003' AND bordercolor = 'black' AND availability LIKE '%paper%' AND availability LIKE '%mtgo%'
SELECT convertedmanacost FROM cards WHERE layout = 'normal' AND frameversion = '2003' AND bordercolor = 'black' AND availability LIKE '%paper%' AND availability LIKE '%mtgo%'",SELECT convertedmanacost FROM cards WHERE layout = 'normal' AND frameversion = '2003' AND bordercolor = 'black' AND availability LIKE '%paper%' AND availability LIKE '%mtgo%'
38,83,"Of the schools that offers a magnet program serving a grade span of Kindergarten to 8th grade, how many offers Multiple Provision Types? List the number of cities that offers a Kindergarten to 8th grade span and indicate how many schools are there serving such grade span for each city.",california_schools,challenging,"SELECT T2.City, COUNT(T2.CDSCode) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.Magnet = 1 AND T2.GSoffered = 'K-8' AND T1.`NSLP Provision Status` = 'Multiple Provision Types' GROUP BY T2.City",7,"SELECT s.city, COUNT(s.school) AS schools_count, COUNT(sat.numge1500) AS sat_scores_count FROM schools AS s JOIN satscores AS sat ON s.cdscode = sat.cds WHERE s.magnet = 'Yes' AND s.gsserved = 'K-8' GROUP BY s.city
SELECT s.city, COUNT(s.school) AS schools_count, COUNT(sat.numge1500) AS sat_scores_count FROM schools AS s JOIN satscores AS sat ON s.cdscode = sat.cds WHERE s.magnet = 'Yes' AND s.gsserved = 'K-8' GROUP BY s.city
SELECT s.city, COUNT(s.school) AS schools_count, COUNT(sat.numge1500) AS sat_scores_count FROM schools AS s JOIN satscores AS sat ON s.cdscode = sat.cds WHERE s.low_grade = 'K' AND s.high_grade = '8' AND s.magnet = 'Yes' GROUP BY s.city
SELECT s.city, COUNT(s.school) AS schools_count, COUNT(sat.numge1500) AS sat_scores_count FROM schools AS s JOIN satscores AS sat ON s.cdscode = sat.cds WHERE s.magnet = 'Yes' AND s.gsserved = 'K-8' GROUP BY s.city
SELECT s.city, COUNT(s.school) AS schools_count, COUNT(sat.numge1500) AS sat_scores_count FROM schools AS s JOIN satscores AS sat ON s.cdscode = sat.cds WHERE s.magnet = 'Yes' AND s.gsserved = 'K-8' GROUP BY s.city
SELECT satscores.cname, COUNT(schools.cdscode), schools.city FROM satscores JOIN schools ON satscores.cds = schools.cdscode WHERE schools.magnet = 'y' AND schools.gsserved = 'K-8' GROUP BY satscores.cname, schools.city
SELECT satscores.cname, COUNT(schools.cdscode), schools.city FROM satscores JOIN schools ON satscores.cds = schools.cdscode WHERE schools.magnet = 'y' AND schools.gsserved = 'K-8' GROUP BY satscores.cname, schools.city","SELECT s.city, COUNT(s.school) AS schools_count, COUNT(sat.numge1500) AS sat_scores_count FROM schools AS s JOIN satscores AS sat ON s.cdscode = sat.cds WHERE s.magnet = 'Yes' AND s.gsserved = 'K-8' GROUP BY s.city"
39,1194,"What sex is the patient who in a medical examination was diagnosed with PSS and in a laboratory examination had a blood level of C-reactive protein de 2+, createnine 1 and LDH 123?",thrombosis_prediction,challenging,SELECT T1.SEX FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T3.ID = T2.ID WHERE T2.Diagnosis = 'PSS' AND T3.CRP = '2+' AND T3.CRE = 1.0 AND T3.LDH = 123,7,"SELECT patient.sex  FROM patient  JOIN examination ON patient.id = examination.id  JOIN laboratory ON patient.id = laboratory.id  WHERE examination.diagnosis = 'PSS'  AND laboratory.crp = '2+'  AND laboratory.cre = '1'  AND laboratory.ldh = '123'
SELECT patient.sex  FROM patient  JOIN examination ON patient.id = examination.id  JOIN laboratory ON patient.id = laboratory.id  WHERE examination.diagnosis = 'PSS'  AND laboratory.crp = '2+'  AND laboratory.cre = '1'  AND laboratory.ldh = '123'
SELECT patient.sex  FROM patient  JOIN examination ON patient.id = examination.id  JOIN laboratory ON patient.id = laboratory.id  WHERE examination.diagnosis = 'PSS'  AND laboratory.crp = '2+'  AND laboratory.cre = '1'  AND laboratory.ldh = '123'
SELECT patient.sex  FROM patient  JOIN examination ON patient.id = examination.id  JOIN laboratory ON patient.id = laboratory.id  WHERE examination.diagnosis = 'PSS'  AND laboratory.crp = '2+'  AND laboratory.cre = '1'  AND laboratory.ldh = '123'
SELECT patient.sex  FROM patient  JOIN examination ON patient.id = examination.id  JOIN laboratory ON patient.id = laboratory.id  WHERE examination.diagnosis = 'PSS'  AND laboratory.crp = '2+'  AND laboratory.cre = '1'  AND laboratory.ldh = '123'
SELECT patient.sex  FROM patient  JOIN examination ON patient.id = examination.id  JOIN laboratory ON patient.id = laboratory.id  WHERE examination.diagnosis = 'PSS'  AND laboratory.crp = '2+'  AND laboratory.cre = '1'  AND laboratory.ldh = '123'
SELECT patient.sex  FROM patient  JOIN examination ON patient.id = examination.id  JOIN laboratory ON patient.id = laboratory.id  WHERE examination.diagnosis = 'PSS'  AND laboratory.crp = 2  AND laboratory.cre = 1  AND laboratory.ldh = 123",SELECT patient.sex  FROM patient  JOIN examination ON patient.id = examination.id  JOIN laboratory ON patient.id = laboratory.id  WHERE examination.diagnosis = 'PSS'  AND laboratory.crp = '2+'  AND laboratory.cre = '1'  AND laboratory.ldh = '123'
40,814,List the skin colour of the superheroes with 100 attribute value.,superhero,moderate,SELECT DISTINCT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.skin_colour_id = T2.id INNER JOIN hero_attribute AS T3 ON T1.id = T3.hero_id WHERE T3.attribute_value = 100,7,"SELECT skin_colour.colour FROM superhero INNER JOIN skin_colour ON superhero.skin_colour_id = skin_colour.id INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'alignment' AND hero_attribute.attribute_value = 100
SELECT skin_colour.colour FROM superhero INNER JOIN skin_colour ON superhero.skin_colour_id = skin_colour.id INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'alignment' AND hero_attribute.attribute_value = 100
SELECT skin_colour.colour FROM superhero INNER JOIN skin_colour ON superhero.skin_colour_id = skin_colour.id INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'alignment' AND hero_attribute.attribute_value = 100
SELECT skin_colour.colour FROM superhero INNER JOIN skin_colour ON superhero.skin_colour_id = skin_colour.id INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'alignment' AND hero_attribute.attribute_value = 100
SELECT skin_colour.colour FROM superhero INNER JOIN skin_colour ON superhero.skin_colour_id = skin_colour.id INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'alignment' AND hero_attribute.attribute_value = 100
SELECT skin_colour.colour FROM superhero INNER JOIN skin_colour ON superhero.skin_colour_id = skin_colour.id INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'alignment' AND hero_attribute.attribute_value = 100
SELECT skin_colour.colour FROM superhero INNER JOIN skin_colour ON superhero.skin_colour_id = skin_colour.id INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'alignment' AND hero_attribute.attribute_value = 100",SELECT skin_colour.colour FROM superhero INNER JOIN skin_colour ON superhero.skin_colour_id = skin_colour.id INNER JOIN hero_attribute ON superhero.id = hero_attribute.hero_id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'alignment' AND hero_attribute.attribute_value = 100
41,1429,What is the name of the social event that was attended by the vice president of the Student_Club located at 900 E. Washington St.?,student_club,challenging,SELECT T2.event_name FROM attendance AS T1 INNER JOIN event AS T2 ON T2.event_id = T1.link_to_event INNER JOIN member AS T3 ON T1.link_to_member = T3.member_id WHERE T3.position = 'Vice President' AND T2.location = '900 E. Washington St.' AND T2.type = 'Social',7,"SELECT event_name  FROM event  INNER JOIN attendance ON event.event_id = attendance.link_to_event  INNER JOIN member ON attendance.link_to_member = member.member_id  INNER JOIN major ON member.link_to_major = major.major_id  WHERE major.major_name = ""Student_Club"" AND member.position = ""Vice President"" AND event.location = ""900 E. Washington St.""
SELECT event_name  FROM event  INNER JOIN attendance ON event.event_id = attendance.link_to_event  INNER JOIN member ON attendance.link_to_member = member.member_id  INNER JOIN major ON member.link_to_major = major.major_id  WHERE major.major_name = ""Student_Club"" AND member.position = ""Vice President"" AND event.location = ""900 E. Washington St.""
SELECT event_name  FROM event  INNER JOIN attendance ON event.event_id = attendance.link_to_event  INNER JOIN member ON attendance.link_to_member = member.member_id  INNER JOIN major ON member.link_to_major = major.major_id  WHERE major.major_name = ""Student_Club"" AND member.position = ""Vice President"" AND event.location = ""900 E. Washington St.""
SELECT event_name  FROM event  INNER JOIN attendance ON event.event_id = attendance.link_to_event  INNER JOIN member ON attendance.link_to_member = member.member_id  INNER JOIN major ON member.link_to_major = major.major_id  WHERE major.major_name = 'Student_Club' AND member.position = 'Vice President' AND event.location = '900 E. Washington St.'
SELECT event_name  FROM event  INNER JOIN attendance ON event.event_id = attendance.link_to_event  INNER JOIN member ON attendance.link_to_member = member.member_id  INNER JOIN major ON member.link_to_major = major.major_id  WHERE major.major_name = ""Student_Club"" AND member.position = ""Vice President"" AND event.location = ""900 E. Washington St.""
SELECT event_name  FROM event  INNER JOIN attendance ON event.event_id = attendance.link_to_event  INNER JOIN member ON attendance.link_to_member = member.member_id  INNER JOIN major ON member.link_to_major = major.major_id  WHERE major.major_name = ""Student_Club"" AND member.position = ""Vice President"" AND event.location = ""900 E. Washington St.""
SELECT event_name  FROM event  INNER JOIN attendance ON event.event_id = attendance.link_to_event  INNER JOIN member ON attendance.link_to_member = member.member_id  INNER JOIN major ON member.link_to_major = major.major_id  WHERE major.major_name = ""Student_Club"" AND member.position = ""Vice President"" AND event.location = ""900 E. Washington St.""","SELECT event_name  FROM event  INNER JOIN attendance ON event.event_id = attendance.link_to_event  INNER JOIN member ON attendance.link_to_member = member.member_id  INNER JOIN major ON member.link_to_major = major.major_id  WHERE major.major_name = ""Student_Club"" AND member.position = ""Vice President"" AND event.location = ""900 E. Washington St."""
42,821,List down Ajax's superpowers.,superhero,simple,SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Ajax',7,"SELECT superpower.power_name FROM superhero JOIN hero_power ON hero_power.hero_id = superhero.id JOIN superpower ON superpower.id = hero_power.power_id WHERE superhero.superhero_name = 'Ajax'
SELECT superpower.power_name FROM superhero JOIN hero_power ON hero_power.hero_id = superhero.id JOIN superpower ON superpower.id = hero_power.power_id WHERE superhero.superhero_name = 'Ajax'
SELECT superpower.power_name  FROM superhero  JOIN hero_power ON superhero.id = hero_power.hero_id  JOIN superpower ON hero_power.power_id = superpower.id  WHERE superhero.superhero_name = 'Ajax' AND superhero.alignment_id IN (SELECT id FROM alignment WHERE alignment_name = 'good')
SELECT superpower.power_name FROM superhero JOIN hero_power ON hero_power.hero_id = superhero.id JOIN superpower ON superpower.id = hero_power.power_id WHERE superhero.superhero_name = 'Ajax'
SELECT superpower.power_name FROM superhero JOIN hero_power ON hero_power.hero_id = superhero.id JOIN superpower ON superpower.id = hero_power.power_id WHERE superhero.superhero_name = 'Ajax'
SELECT superpower.power_name FROM superhero JOIN hero_power ON hero_power.hero_id = superhero.id JOIN superpower ON superpower.id = hero_power.power_id WHERE superhero.superhero_name = 'Ajax'
SELECT superpower.power_name  FROM superhero  JOIN hero_power ON hero_power.hero_id = superhero.id  JOIN superpower ON superpower.id = hero_power.power_id  WHERE superhero.superhero_name = 'Ajax'",SELECT superpower.power_name FROM superhero JOIN hero_power ON hero_power.hero_id = superhero.id JOIN superpower ON superpower.id = hero_power.power_id WHERE superhero.superhero_name = 'Ajax'
43,1192,List all patients who were followed up at the outpatient clinic who underwent a laboratory test in October 1991 and had a total blood bilirubin level within the normal range.,thrombosis_prediction,challenging,SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.`T-BIL` < 2.0 AND T2.Date LIKE '1991-10-%',7,"SELECT patient.id, patient.sex, patient.birthday, patient.description, patient.first_date, patient.admission, patient.diagnosis FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE examination.date LIKE '1991-10%' AND (laboratory.t_bil BETWEEN 0 AND 17) AND patient.admission = 'Outpatient Clinic'
SELECT patient.id, patient.sex, patient.birthday, patient.description, patient.first_date, patient.admission, patient.diagnosis FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE examination.date LIKE '1991-10%' AND (laboratory.t_bil BETWEEN 0 AND 17) AND patient.admission = 'Outpatient Clinic'
SELECT patient.id, patient.sex, patient.birthday, patient.description, patient.first_date, patient.admission, patient.diagnosis FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE examination.date LIKE '1991-10%' AND laboratory.t_bil <= 17 AND patient.admission = 'Outpatient Clinic'
SELECT patient.id, patient.sex, patient.birthday, patient.description, patient.first_date, patient.admission, patient.diagnosis FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE examination.date LIKE '1991-10%' AND (laboratory.t_bil BETWEEN 0 AND 17) AND patient.admission = 'Outpatient Clinic'
SELECT patient.id, patient.sex, patient.birthday, patient.description, patient.first_date, patient.admission, patient.diagnosis FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE examination.date LIKE '1991-10%' AND (laboratory.t_bil BETWEEN 0 AND 17) AND patient.admission = 'Outpatient Clinic'
SELECT patient.id, patient.sex, patient.birthday, patient.description, patient.first_date, patient.admission, patient.diagnosis FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE examination.date LIKE '1991-10%' AND (laboratory.t_bil BETWEEN 0 AND 17) AND patient.admission = 'Outpatient Clinic'
SELECT patient.id, patient.sex, patient.birthday, patient.description, patient.first_date, patient.admission, patient.diagnosis FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE examination.date LIKE '1991-10%' AND (laboratory.t_bil BETWEEN 0 AND 17) AND patient.admission = 'Outpatient Clinic'","SELECT patient.id, patient.sex, patient.birthday, patient.description, patient.first_date, patient.admission, patient.diagnosis FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE examination.date LIKE '1991-10%' AND (laboratory.t_bil BETWEEN 0 AND 17) AND patient.admission = 'Outpatient Clinic'"
44,1315,"How many students of the Student_Club have attended the event ""Women's Soccer""?",student_club,simple,SELECT COUNT(T1.event_id) FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'Women''s Soccer',7,"SELECT COUNT(DISTINCT attendance.link_to_member)  FROM attendance  JOIN event ON attendance.link_to_event = event.event_id  WHERE event.event_name = 'Women\'s Soccer'
SELECT COUNT(DISTINCT attendance.link_to_member)  FROM attendance  JOIN event ON attendance.link_to_event = event.event_id  WHERE event.event_name = 'Women\'s Soccer'
SELECT COUNT(DISTINCT attendance.link_to_member)  FROM attendance  INNER JOIN event ON attendance.link_to_event = event.event_id  WHERE event.event_name = 'Women\'s Soccer'
SELECT COUNT(DISTINCT attendance.link_to_member)  FROM attendance  JOIN event ON attendance.link_to_event = event.event_id  WHERE event.event_name = 'Women\'s Soccer'
SELECT COUNT(DISTINCT attendance.link_to_member)  FROM attendance  JOIN event ON attendance.link_to_event = event.event_id  WHERE event.event_name = 'Women\'s Soccer'
SELECT COUNT(DISTINCT attendance.link_to_member)  FROM attendance  INNER JOIN event ON attendance.link_to_event = event.event_id  WHERE event.event_name = 'Women\'s Soccer'
SELECT COUNT(DISTINCT attendance.link_to_member)  FROM attendance  INNER JOIN event ON attendance.link_to_event = event.event_id  WHERE event.event_name = 'Women\'s Soccer'",SELECT COUNT(DISTINCT attendance.link_to_member)  FROM attendance  JOIN event ON attendance.link_to_event = event.event_id  WHERE event.event_name = 'Women\'s Soccer'
45,788,How many percent of female heroes were published by Marvel Comics?,superhero,challenging,SELECT CAST(COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T3.gender = 'Female',7,"SELECT (SELECT COUNT(*) FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id WHERE gender.gender = 'Female' AND superhero.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE superhero.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS percentage
SELECT (SELECT COUNT(*) FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id WHERE gender.gender = 'Female' AND superhero.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE superhero.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS percentage
SELECT (SELECT COUNT(*) FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id WHERE gender.gender = 'Female' AND superhero.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE superhero.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS percentage
SELECT (     SELECT COUNT(*)      FROM superhero      WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female')      AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') ) / (     SELECT COUNT(*)      FROM superhero      WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') ) * 100 AS percentage
SELECT (     SELECT COUNT(*)      FROM superhero      WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female')      AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') ) / (     SELECT COUNT(*)      FROM superhero      WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') ) * 100 AS percentage
SELECT (SELECT COUNT(*) FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id WHERE gender.gender = 'Female' AND superhero.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE superhero.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS percentage
SELECT (SELECT COUNT(*) FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id WHERE gender.gender = 'Female' AND superhero.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE superhero.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS percentage",SELECT (SELECT COUNT(*) FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id WHERE gender.gender = 'Female' AND superhero.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE superhero.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS percentage
46,307,Name the atoms' elements that form bond TR000_2_3.,toxicology,challenging,SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR000_2_3',7,"SELECT a1.element  FROM atoms a1  JOIN connected c ON a1.atom_id = c.atom_id  JOIN bonds b ON c.bond_id = b.bond_id  WHERE b.bond_id = 'TR000_2_3'
SELECT a.element  FROM atoms AS a  JOIN connected AS c ON a.atom_id = c.atom_id  JOIN bonds AS b ON c.bond_id = b.bond_id  WHERE b.bond_id = 'TR000_2_3'
SELECT a.element  FROM atoms AS a  JOIN connected AS c ON a.atom_id = c.atom_id  JOIN bonds AS b ON c.bond_id = b.bond_id  WHERE b.bond_id = 'TR000_2_3'
SELECT a1.element FROM atoms a1, atoms a2, connected c, bond b WHERE a1.atom_id = c.atom_id AND a2.atom_id = c.atom_id2 AND c.bond_id = b.bond_id AND b.bond_type = 'TR000_2_3'
SELECT a1.element FROM atoms a1, atoms a2, connected c, bond b WHERE a1.atom_id = c.atom_id AND a2.atom_id = c.atom_id2 AND c.bond_id = b.bond_id AND b.bond_type = 'TR000_2_3'
SELECT a.element  FROM atoms a  JOIN connected c ON a.atom_id = c.atom_id  JOIN bonds b ON c.bond_id = b.bond_id  WHERE b.bond_id = 'TR000_2_3'
SELECT a1.element FROM atoms a1, atoms a2, connected c, bond b WHERE a1.atom_id = c.atom_id AND a2.atom_id = c.atom_id2 AND c.bond_id = b.bond_id AND b.bond_type = 'TR000_2_3'","SELECT a1.element FROM atoms a1, atoms a2, connected c, bond b WHERE a1.atom_id = c.atom_id AND a2.atom_id = c.atom_id2 AND c.bond_id = b.bond_id AND b.bond_type = 'TR000_2_3'"
47,1057,Calculate the average home team goal in the 2010/2011 season in the country of Poland.,european_football_2,moderate,SELECT CAST(SUM(t2.home_team_goal) AS REAL) / COUNT(t2.id) FROM Country AS t1 INNER JOIN Match AS t2 ON t1.id = t2.country_id WHERE t1.name = 'Poland' AND t2.season = '2010/2011',7,"SELECT AVG(home_team_goal) FROM match JOIN country ON match.country_id = country.id WHERE season = '2010/2011' AND country.name = 'Poland'
SELECT AVG(home_team_goal) FROM match JOIN country ON match.country_id = country.id WHERE season = '2010/2011' AND country.name = 'Poland'
SELECT AVG(home_team_goal) FROM match JOIN country ON match.country_id = country.id WHERE season = '2010/2011' AND country.name = 'Poland'
SELECT AVG(home_team_goal) FROM match JOIN country ON match.country_id = country.id WHERE season = '2010/2011' AND country.name = 'Poland'
SELECT AVG(home_team_goal) FROM match JOIN country ON match.country_id = country.id WHERE season = '2010/2011' AND country.name = 'Poland'
SELECT AVG(home_team_goal) FROM match JOIN country ON match.country_id = country.id WHERE season = '2010/2011' AND country.name = 'Poland'
SELECT AVG(home_team_goal) FROM match JOIN country ON match.country_id = country.id WHERE season = '2010/2011' AND country.name = 'Poland'",SELECT AVG(home_team_goal) FROM match JOIN country ON match.country_id = country.id WHERE season = '2010/2011' AND country.name = 'Poland'
48,1264,"Among the patients have blood clots in veins, how many of them have a normal level of complement 4?",thrombosis_prediction,moderate,SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.C4 > 10 AND T1.Diagnosis = 'APS',7,"SELECT COUNT(*) FROM patient  INNER JOIN examination ON patient.id = examination.id  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE examination.diagnosis = 'blood clots in veins' AND laboratory.c4 = 'normal' 
SELECT COUNT(*)  FROM patient  INNER JOIN examination ON patient.id = examination.id  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE examination.diagnosis = 'veins blood clots' AND laboratory.c4 = 'normal'
SELECT COUNT(*) FROM patient  INNER JOIN examination ON patient.id = examination.id  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE examination.diagnosis = 'blood clots in veins' AND laboratory.c4 = 'normal' 
SELECT COUNT(*) FROM patient  INNER JOIN examination ON patient.id = examination.id  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE examination.diagnosis = 'blood clots in veins' AND laboratory.c4 = 'normal' 
SELECT COUNT(*) FROM patient  INNER JOIN examination ON patient.id = examination.id  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE examination.diagnosis = 'blood clots in veins' AND laboratory.c4 = 'normal' 
SELECT COUNT(*) FROM patient  JOIN examination ON patient.id = examination.id  JOIN laboratory ON patient.id = laboratory.id  WHERE examination.diagnosis = 'blood clots in veins' AND laboratory.c4 = 'normal' 
SELECT COUNT(*) FROM patient  INNER JOIN examination ON patient.id = examination.id  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE examination.diagnosis = 'blood clots in veins' AND laboratory.c4 = 'normal' ",SELECT COUNT(*) FROM patient  INNER JOIN examination ON patient.id = examination.id  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE examination.diagnosis = 'blood clots in veins' AND laboratory.c4 = 'normal' 
49,1115,What percentage is Landon Donovan's overall rating higher than Jordan Bowery on 2013/7/12?,european_football_2,challenging,"SELECT (SUM(CASE WHEN t1.player_name = 'Landon Donovan' THEN t2.overall_rating ELSE 0 END) * 1.0 - SUM(CASE WHEN t1.player_name = 'Jordan Bowery' THEN t2.overall_rating ELSE 0 END)) * 100 / SUM(CASE WHEN t1.player_name = 'Landon Donovan' THEN t2.overall_rating ELSE 0 END) LvsJ_percent FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_fifa_api_id = t2.player_fifa_api_id WHERE SUBSTR(t2.`date`, 1, 10) = '2013-07-12'",7,"SELECT ((SELECT overall_rating FROM player_attributes WHERE player_api_id = 1680064 AND date = '2013-07-12') - (SELECT overall_rating FROM player_attributes WHERE player_api_id = 1976314 AND date = '2013-07-12')) / (SELECT overall_rating FROM player_attributes WHERE player_api_id = 1976314 AND date = '2013-07-12') * 100 AS percentage
SELECT (     (         SELECT (             (                 SELECT overall_rating                  FROM player_attributes                  WHERE player_api_id = (                     SELECT player_api_id                      FROM player                      WHERE player_name = 'Landon Donovan'                 )                  AND date = '2013-7-12'             ) -              (                 SELECT overall_rating                  FROM player_attributes                  WHERE player_api_id = (                     SELECT player_api_id                      FROM player                      WHERE player_name = 'Jordan Bowery'                 )                  AND date = '2013-7-12'             )         ) /          (             SELECT overall_rating              FROM player_attributes              WHERE player_api_id = (                 SELECT player_api_id                  FROM player                  WHERE player_name = 'Jordan Bowery'             )              AND date = '2013-7-12'         ) * 100     ) AS percentage )
SELECT ((SELECT overall_rating FROM player_attributes WHERE player_api_id = 168006 AND date = '2013-07-12') - (SELECT overall_rating FROM player_attributes WHERE player_api_id = 199001 AND date = '2013-07-12')) / (SELECT overall_rating FROM player_attributes WHERE player_api_id = 199001 AND date = '2013-07-12') * 100 AS percentage
SELECT ((SELECT overall_rating FROM player_attributes WHERE player_api_id = 1133003 AND date = '2013-07-12') - (SELECT overall_rating FROM player_attributes WHERE player_api_id = 1133002 AND date = '2013-07-12')) / (SELECT overall_rating FROM player_attributes WHERE player_api_id = 1133002 AND date = '2013-07-12') * 100 AS percentage
SELECT ((SELECT overall_rating FROM player_attributes WHERE player_api_id = 168006 AND date = '2013-07-12') - (SELECT overall_rating FROM player_attributes WHERE player_api_id = 199001 AND date = '2013-07-12')) / (SELECT overall_rating FROM player_attributes WHERE player_api_id = 199001 AND date = '2013-07-12') * 100 AS percentage
SELECT (   (     SELECT        (         (           SELECT              overall_rating            FROM              player_attributes            WHERE              player_api_id = (               SELECT                  player_api_id                FROM                  player                WHERE                  player_name = 'Landon Donovan'             )              AND date = '2013-7-12'         ) -          (           SELECT              overall_rating            FROM              player_attributes            WHERE              player_api_id = (               SELECT                  player_api_id                FROM                  player                WHERE                  player_name = 'Jordan Bowery'             )              AND date = '2013-7-12'         )       ) /        (         SELECT            overall_rating          FROM            player_attributes          WHERE            player_api_id = (             SELECT                player_api_id              FROM                player              WHERE                player_name = 'Jordan Bowery'           )            AND date = '20
SELECT ((Landon_Donovan.overall_rating - Jordan_Bowery.overall_rating) / Jordan_Bowery.overall_rating) * 100 AS percentage_difference FROM (     SELECT overall_rating     FROM player_attributes     WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Landon Donovan')     AND date = '2013-7-12' ) AS Landon_Donovan, (     SELECT overall_rating     FROM player_attributes     WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Jordan Bowery')     AND date = '2013-7-12' ) AS Jordan_Bowery",SELECT ((SELECT overall_rating FROM player_attributes WHERE player_api_id = 168006 AND date = '2013-07-12') - (SELECT overall_rating FROM player_attributes WHERE player_api_id = 199001 AND date = '2013-07-12')) / (SELECT overall_rating FROM player_attributes WHERE player_api_id = 199001 AND date = '2013-07-12') * 100 AS percentage
50,592,How many users are awarded with more than 5 badges?,codebase_community,simple,"SELECT COUNT(UserId) FROM ( SELECT UserId, COUNT(Name) AS num FROM badges GROUP BY UserId ) T WHERE T.num > 5",7,"SELECT COUNT(DISTINCT users.id)  FROM users  JOIN badges ON users.id = badges.userid  GROUP BY users.id  HAVING COUNT(badges.id) > 5
SELECT COUNT(DISTINCT users.id)  FROM users  JOIN badges ON users.id = badges.userid  GROUP BY users.id  HAVING COUNT(badges.id) > 5
SELECT COUNT(DISTINCT users.id)  FROM users  JOIN badges ON users.id = badges.userid  GROUP BY users.id  HAVING COUNT(badges.id) > 5
SELECT COUNT(DISTINCT users.id)  FROM users  JOIN badges ON users.id = badges.userid  GROUP BY users.id  HAVING COUNT(badges.id) > 5
SELECT COUNT(DISTINCT users.id)  FROM users  JOIN badges ON users.id = badges.userid  GROUP BY users.id  HAVING COUNT(badges.id) > 5
SELECT COUNT(DISTINCT users.id)  FROM users  JOIN badges ON users.id = badges.userid  GROUP BY users.id  HAVING COUNT(badges.id) > 5
SELECT COUNT(DISTINCT users.id)  FROM users  JOIN badges ON users.id = badges.userid  GROUP BY users.id  HAVING COUNT(badges.id) > 5",SELECT COUNT(DISTINCT users.id)  FROM users  JOIN badges ON users.id = badges.userid  GROUP BY users.id  HAVING COUNT(badges.id) > 5
51,1232,"Provide ID, sex and age of patient who has blood glucose (GLU) not within normal range but with total cholesterol(T-CHO) within normal range.",thrombosis_prediction,challenging,"SELECT DISTINCT T1.ID, T1.SEX , STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GLU >= 180 AND T2.`T-CHO` < 250",7,"SELECT patient.id, patient.sex, 2021 - strftime('%Y', patient.birthday) AS age FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.glu NOT BETWEEN 70 AND 130 AND laboratory.t_cho BETWEEN 0 AND 200
SELECT patient.id, patient.sex, 2021 - strftime('%Y', patient.birthday) AS age FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.glu NOT BETWEEN 70 AND 130 AND laboratory.t_cho BETWEEN 0 AND 200
SELECT patient.id, patient.sex, 2021 - strftime('%Y', patient.birthday) AS age FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.glu NOT BETWEEN 70 AND 130 AND laboratory.t_cho BETWEEN 0 AND 200
SELECT patient.id, patient.sex, 2021 - strftime('%Y', patient.birthday) AS age FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.glu NOT BETWEEN 70 AND 130 AND laboratory.t_cho BETWEEN 0 AND 200
SELECT patient.id, patient.sex, 2021 - strftime('%Y', patient.birthday) AS age FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.glu NOT BETWEEN 70 AND 130 AND laboratory.t_cho BETWEEN 0 AND 200
SELECT patient.id, patient.sex, 2021 - strftime('%Y', patient.birthday) AS age FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.glu NOT BETWEEN 70 AND 130 AND laboratory.t_cho BETWEEN 0 AND 200
SELECT patient.id, patient.sex, 2021 - strftime('%Y', patient.birthday) AS age FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.glu NOT BETWEEN 70 AND 130 AND laboratory.t_cho BETWEEN 0 AND 200","SELECT patient.id, patient.sex, 2021 - strftime('%Y', patient.birthday) AS age FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.glu NOT BETWEEN 70 AND 130 AND laboratory.t_cho BETWEEN 0 AND 200"
52,487,What is the percentage of incredibly powerful cards in the set Coldsnap?,card_games,challenging,SELECT CAST(SUM(CASE WHEN T1.cardKingdomFoilId IS NOT NULL AND T1.cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE T2.name = 'Coldsnap',7,"SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'coldsnap')) AS percentage FROM cards WHERE power > (SELECT AVG(power) FROM cards WHERE setcode = 'coldsnap')
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'coldsnap')) AS percentage FROM cards WHERE power > (SELECT AVG(power) FROM cards WHERE setcode = 'coldsnap')
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'COLD')) as percentage FROM cards WHERE power > (SELECT AVG(power) FROM cards WHERE setcode = 'COLD')
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'coldsnap')) AS percentage FROM cards WHERE power > (SELECT AVG(power) FROM cards WHERE setcode = 'coldsnap')
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'COLD')) as percentage FROM cards WHERE power > (SELECT AVG(power) FROM cards WHERE setcode = 'COLD')
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'COLD')) as percentage FROM cards WHERE power > (SELECT AVG(power) FROM cards WHERE setcode = 'COLD')
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'COLD')) as percentage FROM cards WHERE power > (SELECT AVG(power) FROM cards WHERE setcode = 'COLD')",SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'COLD')) as percentage FROM cards WHERE power > (SELECT AVG(power) FROM cards WHERE setcode = 'COLD')
53,1070,Which country is the league Italy Serie A from?,european_football_2,simple,SELECT t1.name FROM Country AS t1 INNER JOIN League AS t2 ON t1.id = t2.country_id WHERE t2.name = 'Italy Serie A',7,"SELECT country.name FROM country INNER JOIN league ON country.id = league.country_id WHERE league.name = 'Italy Serie A'
SELECT country.name FROM country INNER JOIN league ON country.id = league.country_id WHERE league.name = 'Italy Serie A'
SELECT country.name FROM country INNER JOIN league ON country.id = league.country_id WHERE league.name = 'Italy Serie A'
SELECT country.name FROM country INNER JOIN league ON country.id = league.country_id WHERE league.name = 'Italy Serie A'
SELECT country.name FROM country INNER JOIN league ON country.id = league.country_id WHERE league.name = 'Italy Serie A'
SELECT country.name FROM country INNER JOIN league ON country.id = league.country_id WHERE league.name = 'Italy Serie A'
SELECT country.name FROM country INNER JOIN league ON country.id = league.country_id WHERE league.name = ""Italy Serie A""",SELECT country.name FROM country INNER JOIN league ON country.id = league.country_id WHERE league.name = 'Italy Serie A'
54,639,"Based on posts posted by Community, calculate the percentage of posts that use the R language.",codebase_community,challenging,"SELECT CAST(SUM(IIF(T3.TagName = 'r', 1, 0)) AS REAL) * 100 / COUNT(T1.Id) FROM users AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.UserId INNER JOIN tags AS T3 ON T3.ExcerptPostId = T2.PostId WHERE T1.DisplayName = 'Community'",7,"SELECT (     SELECT COUNT(*)      FROM posthistory      WHERE text LIKE '%[R]%' ) / (     SELECT COUNT(*)      FROM posthistory ) * 100 AS percentage_of_posts_using_R
SELECT (     SELECT COUNT(*)      FROM posthistory      WHERE text LIKE '%[R]%' ) / (     SELECT COUNT(*)      FROM posthistory ) * 100 AS percentage_of_posts_using_R
SELECT (     SELECT COUNT(*)      FROM posthistory      WHERE text LIKE '%[R]%' ) / (     SELECT COUNT(*)      FROM posthistory ) * 100 AS percentage_of_posts_using_R
SELECT (     SELECT COUNT(*)      FROM posthistory      WHERE text LIKE '%[R]%' ) / (     SELECT COUNT(*)      FROM posthistory ) * 100 AS R_posts_percentage
SELECT (     SELECT COUNT(*)      FROM posthistory      WHERE text LIKE '%[R]%' ) / (     SELECT COUNT(*)      FROM posthistory ) * 100 AS percentage_of_posts_using_R
SELECT (     SELECT COUNT(*)      FROM posthistory      WHERE text LIKE '%[R]%' ) / (     SELECT COUNT(*)      FROM posthistory ) * 100 AS R_posts_percentage
SELECT (     SELECT COUNT(*)      FROM posthistory      WHERE text LIKE '%[R]%' ) / (     SELECT COUNT(*)      FROM posthistory ) * 100 AS percentage_of_posts_using_R",SELECT (     SELECT COUNT(*)      FROM posthistory      WHERE text LIKE '%[R]%' ) / (     SELECT COUNT(*)      FROM posthistory ) * 100 AS percentage_of_posts_using_R
55,994,"Which constructor scored most points from Monaco Grand Prix between 1980 and 2010? List the score, name and nationality of this team.",formula_1,challenging,"SELECT SUM(T1.points), T2.name, T2.nationality FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId INNER JOIN races AS T3 ON T3.raceid = T1.raceid WHERE T3.name = 'Monaco Grand Prix' AND T3.year BETWEEN 1980 AND 2010 GROUP BY T2.name ORDER BY SUM(T1.points) DESC LIMIT 1",7,"SELECT MAX(results.points), constructors.name, constructors.nationality FROM results JOIN constructors ON results.constructorid = constructors.constructorid JOIN races ON results.raceid = races.raceid JOIN seasons ON races.year = seasons.year WHERE seasons.year BETWEEN 1980 AND 2010 AND races.name LIKE ""%Monaco%"" GROUP BY constructors.constructorid
SELECT MAX(results.points), constructors.name, constructors.nationality FROM results JOIN constructors ON results.constructorid = constructors.constructorid JOIN races ON results.raceid = races.raceid JOIN seasons ON races.year = seasons.year WHERE seasons.year BETWEEN 1980 AND 2010 AND races.name LIKE ""%Monaco%"" GROUP BY constructors.constructorid
SELECT MAX(results.points), constructors.name, constructors.nationality FROM results JOIN constructors ON results.constructorid = constructors.constructorid JOIN races ON results.raceid = races.raceid JOIN seasons ON races.year = seasons.year WHERE seasons.year BETWEEN 1980 AND 2010 AND races.name LIKE ""%Monaco%"" GROUP BY constructors.constructorid
SELECT MAX(results.points), constructors.name, constructors.nationality FROM results JOIN constructors ON results.constructorid = constructors.constructorid JOIN races ON results.raceid = races.raceid JOIN seasons ON races.year = seasons.year WHERE seasons.year BETWEEN 1980 AND 2010 AND races.name LIKE '%Monaco%' GROUP BY constructors.constructorid
SELECT MAX(results.points), constructors.name, constructors.nationality FROM results JOIN constructors ON results.constructorid = constructors.constructorid JOIN races ON results.raceid = races.raceid JOIN seasons ON races.year = seasons.year WHERE seasons.year BETWEEN 1980 AND 2010 AND races.name LIKE ""%Monaco%"" GROUP BY constructors.constructorid
SELECT MAX(results.points), constructors.name, constructors.nationality FROM results JOIN constructors ON results.constructorid = constructors.constructorid JOIN races ON results.raceid = races.raceid JOIN seasons ON races.year = seasons.year WHERE seasons.year BETWEEN 1980 AND 2010 AND races.name LIKE ""%Monaco%"" GROUP BY constructors.constructorid
SELECT MAX(results.points), constructors.name, constructors.nationality FROM results JOIN constructors ON results.constructorid = constructors.constructorid JOIN races ON results.raceid = races.raceid JOIN seasons ON races.year = seasons.year WHERE seasons.year BETWEEN 1980 AND 2010 AND races.name LIKE ""%Monaco%"" GROUP BY constructors.constructorid","SELECT MAX(results.points), constructors.name, constructors.nationality FROM results JOIN constructors ON results.constructorid = constructors.constructorid JOIN races ON results.raceid = races.raceid JOIN seasons ON races.year = seasons.year WHERE seasons.year BETWEEN 1980 AND 2010 AND races.name LIKE ""%Monaco%"" GROUP BY constructors.constructorid"
56,1026,Which home team had lost the fewest matches in the 2016 season?,european_football_2,moderate,SELECT teamDetails.team_long_name FROM Match AS matchData INNER JOIN Team AS teamDetails ON matchData.home_team_api_id = teamDetails.team_api_id WHERE matchData.season = '2015/2016' AND matchData.home_team_goal - matchData.away_team_goal < 0 GROUP BY matchData.home_team_api_id ORDER BY COUNT(*) ASC LIMIT 1,7,"SELECT home_team_api_id, COUNT(*) as lost_matches FROM match WHERE home_team_goal < away_team_goal AND season = '2016' GROUP BY home_team_api_id ORDER BY lost_matches ASC LIMIT 1
SELECT home_team_api_id, COUNT(*) as lost_matches FROM match WHERE home_team_goal < away_team_goal AND season = '2016' GROUP BY home_team_api_id ORDER BY lost_matches ASC LIMIT 1
SELECT home_team_api_id, COUNT(*) as lost_matches FROM match WHERE home_team_goal < away_team_goal AND season = '2016' GROUP BY home_team_api_id ORDER BY lost_matches ASC LIMIT 1
SELECT home_team_api_id, COUNT(*) as lost_matches FROM match WHERE home_team_goal < away_team_goal AND season = '2016' GROUP BY home_team_api_id ORDER BY lost_matches ASC LIMIT 1
SELECT home_team_api_id, COUNT(*) as loss_count FROM match WHERE season = '2016' AND home_team_goal < away_team_goal GROUP BY home_team_api_id ORDER BY loss_count ASC LIMIT 1
SELECT home_team_api_id, COUNT(*) as lost_matches FROM match WHERE home_team_goal < away_team_goal AND season = '2016' GROUP BY home_team_api_id ORDER BY lost_matches ASC LIMIT 1
SELECT home_team_api_id, COUNT(*) as lost_matches FROM match WHERE home_team_goal < away_team_goal AND season = '2016' GROUP BY home_team_api_id ORDER BY lost_matches ASC LIMIT 1","SELECT home_team_api_id, COUNT(*) as lost_matches FROM match WHERE home_team_goal < away_team_goal AND season = '2016' GROUP BY home_team_api_id ORDER BY lost_matches ASC LIMIT 1"
57,1023,"Among the players with an overall rating between 60 to 65, how many players whose going to be in all of your attack moves instead of defensing?",european_football_2,moderate,SELECT COUNT(id) FROM Player_Attributes WHERE overall_rating BETWEEN 60 AND 65 AND defensive_work_rate = 'low',7,"SELECT COUNT(*)  FROM player_attributes  WHERE overall_rating BETWEEN 60 AND 65 AND attacking_work_rate != 'H' AND defensive_work_rate != 'H' AND preferred_foot != 'right'
SELECT COUNT(*)  FROM player_attributes  WHERE overall_rating BETWEEN 60 AND 65 AND attacking_work_rate != 'H' AND defensive_work_rate != 'H' AND preferred_foot != 'right'
SELECT COUNT(*)  FROM player_attributes  WHERE overall_rating BETWEEN 60 AND 65 AND attacking_work_rate != 'H' AND defensive_work_rate != 'H' AND preferred_foot != 'H' AND crossing != 'H' AND finishing != 'H' AND heading_accuracy != 'H' AND short_passing != 'H' AND volleys != 'H' AND dribbling != 'H' AND curve != 'H' AND free_kick_accuracy != 'H' AND long_passing != 'H' AND ball_control != 'H' AND acceleration != 'H' AND sprint_speed != 'H' AND agility != 'H' AND reactions != 'H' AND balance != 'H' AND shot_power != 'H' AND jumping != 'H' AND stamina != 'H' AND strength != 'H' AND long_shots != 'H' AND aggression != 'H' AND interceptions != 'H' AND positioning != 'H' AND vision != 'H' AND penalties != 'H' AND marking != 'H' AND standing_tackle 
SELECT COUNT(*) FROM player_attributes WHERE overall_rating BETWEEN 60 AND 65 AND attacking_work_rate != 'H' AND defensive_work_rate != 'H'
SELECT COUNT(*) FROM player_attributes WHERE overall_rating BETWEEN 60 AND 65 AND preferred_foot = 'right' AND attacking_work_rate = 'high' AND defensive_work_rate = 'low' AND short_passing >= (SELECT AVG(short_passing) FROM player_attributes) AND volleys >= (SELECT AVG(volleys) FROM player_attributes) AND dribbling >= (SELECT AVG(dribbling) FROM player_attributes) AND curve >= (SELECT AVG(curve) FROM player_attributes) AND long_passing >= (SELECT AVG(long_passing) FROM player_attributes) AND ball_control >= (SELECT AVG(ball_control) FROM player_attributes) AND sprint_speed >= (SELECT AVG(sprint_speed) FROM player_attributes) AND agility >= (SELECT AVG(agility) FROM player_attributes) AND reactions >= (SELECT AVG(reactions) FROM player_attributes) AND balance >= (SELECT AVG(balance) FROM player_attributes) AND shot_power >= (SELECT AVG(shot_power) FROM player_attributes) AND stamina >= (SELECT AVG(stamina) FROM player_attributes) AND strength >= (SELECT AVG(strength) FROM player_attributes) 
SELECT COUNT(*) FROM player_attributes WHERE overall_rating BETWEEN 60 AND 65 AND attacking_work_rate != 'H' AND defensive_work_rate != 'H'
SELECT COUNT(*) FROM player_attributes WHERE overall_rating BETWEEN 60 AND 65 AND attacking_work_rate != 'H' AND defensive_work_rate != 'H'",SELECT COUNT(*) FROM player_attributes WHERE overall_rating BETWEEN 60 AND 65 AND attacking_work_rate != 'H' AND defensive_work_rate != 'H'
58,371,What is the percentage of cards whose language is French among the Story Spotlight cards?,card_games,challenging,SELECT CAST(SUM(CASE WHEN T2.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.isStorySpotlight = 1,7,"SELECT (SELECT COUNT(*) FROM cards WHERE isstoryspotlight = 1 AND language = 'French') / (SELECT COUNT(*) FROM cards WHERE isstoryspotlight = 1) * 100
SELECT (     SELECT COUNT(*)      FROM cards      WHERE language = 'French' AND isstoryspotlight = 1 ) / (     SELECT COUNT(*)      FROM cards      WHERE isstoryspotlight = 1 ) * 100 AS percentage
SELECT (     SELECT COUNT(*)      FROM cards      WHERE isstoryspotlight = 1 AND language = 'French' ) / (     SELECT COUNT(*)      FROM cards      WHERE isstoryspotlight = 1 ) * 100 AS percentage
SELECT (SELECT COUNT(*) FROM cards WHERE isstoryspotlight = 1 AND language = 'French') / (SELECT COUNT(*) FROM cards WHERE isstoryspotlight = 1) * 100
SELECT (     SELECT COUNT(*)      FROM cards      WHERE language = 'French' AND isstoryspotlight = 1 ) / (     SELECT COUNT(*)      FROM cards      WHERE isstoryspotlight = 1 ) * 100 AS percentage
SELECT (     SELECT COUNT(*)      FROM cards      WHERE isstoryspotlight = 1 AND language = 'French' ) / (     SELECT COUNT(*)      FROM cards      WHERE isstoryspotlight = 1 ) * 100 AS percentage
SELECT (SELECT COUNT(*) FROM cards WHERE isstoryspotlight = 1 AND language = 'French') / (SELECT COUNT(*) FROM cards WHERE isstoryspotlight = 1) * 100",SELECT (SELECT COUNT(*) FROM cards WHERE isstoryspotlight = 1 AND language = 'French') / (SELECT COUNT(*) FROM cards WHERE isstoryspotlight = 1) * 100
59,772,"List the eyes, hair and skin colour of all female superheroes published by Dark Horse Comics.",superhero,challenging,"SELECT T1.eye_colour_id, T1.hair_colour_id, T1.skin_colour_id FROM superhero AS T1 INNER JOIN publisher AS T2 ON T2.id = T1.publisher_id INNER JOIN gender AS T3 ON T3.id = T1.gender_id WHERE T2.publisher_name = 'Dark Horse Comics' AND T3.gender = 'Female'",7,"SELECT s.superhero_name, c1.colour AS eyes_colour, c2.colour AS hair_colour, c3.colour AS skin_colour FROM superhero AS s JOIN gender AS g ON s.gender_id = g.id JOIN colour AS c1 ON s.eye_colour_id = c1.id JOIN colour AS c2 ON s.hair_colour_id = c2.id JOIN colour AS c3 ON s.skin_colour_id = c3.id JOIN publisher AS p ON s.publisher_id = p.id WHERE g.gender = 'female' AND p.publisher_name = 'Dark Horse Comics'
SELECT s.superhero_name, c1.colour AS eyes_colour, c2.colour AS hair_colour, c3.colour AS skin_colour FROM superhero AS s JOIN gender AS g ON s.gender_id = g.id JOIN colour AS c1 ON s.eye_colour_id = c1.id JOIN colour AS c2 ON s.hair_colour_id = c2.id JOIN colour AS c3 ON s.skin_colour_id = c3.id JOIN publisher AS p ON s.publisher_id = p.id WHERE g.gender = 'Female' AND p.publisher_name = 'Dark Horse Comics'
SELECT s.superhero_name, c1.colour AS eyes_colour, c2.colour AS hair_colour, c3.colour AS skin_colour FROM superhero AS s JOIN gender AS g ON s.gender_id = g.id JOIN colour AS c1 ON s.eye_colour_id = c1.id JOIN colour AS c2 ON s.hair_colour_id = c2.id JOIN colour AS c3 ON s.skin_colour_id = c3.id JOIN publisher AS p ON s.publisher_id = p.id WHERE g.gender = 'female' AND p.publisher_name = 'Dark Horse Comics'
SELECT s.superhero_name, c1.colour AS eyes_colour, c2.colour AS hair_colour, c3.colour AS skin_colour FROM superhero AS s JOIN gender AS g ON s.gender_id = g.id JOIN colour AS c1 ON s.eye_colour_id = c1.id JOIN colour AS c2 ON s.hair_colour_id = c2.id JOIN colour AS c3 ON s.skin_colour_id = c3.id JOIN publisher AS p ON s.publisher_id = p.id WHERE g.gender = 'Female' AND p.publisher_name = 'Dark Horse Comics'
SELECT s.superhero_name, a.colour AS eye_colour, b.colour AS hair_colour, c.colour AS skin_colour FROM superhero AS s JOIN colour AS a ON s.eye_colour_id = a.id JOIN colour AS b ON s.hair_colour_id = b.id JOIN colour AS c ON s.skin_colour_id = c.id JOIN gender AS g ON s.gender_id = g.id JOIN publisher AS p ON s.publisher_id = p.id WHERE g.gender = 'Female' AND p.publisher_name = 'Dark Horse Comics'
SELECT s.superhero_name, c1.colour AS eyes_colour, c2.colour AS hair_colour, c3.colour AS skin_colour FROM superhero AS s JOIN gender AS g ON s.gender_id = g.id JOIN colour AS c1 ON s.eye_colour_id = c1.id JOIN colour AS c2 ON s.hair_colour_id = c2.id JOIN colour AS c3 ON s.skin_colour_id = c3.id JOIN publisher AS p ON s.publisher_id = p.id WHERE g.gender = 'Female' AND p.publisher_name = 'Dark Horse Comics'
SELECT s.superhero_name, c1.colour AS eyes_colour, c2.colour AS hair_colour, c3.colour AS skin_colour FROM superhero AS s JOIN gender AS g ON s.gender_id = g.id JOIN colour AS c1 ON s.eye_colour_id = c1.id JOIN colour AS c2 ON s.hair_colour_id = c2.id JOIN colour AS c3 ON s.skin_colour_id = c3.id JOIN publisher AS p ON s.publisher_id = p.id WHERE g.gender = 'Female' AND p.publisher_name = 'Dark Horse Comics'","SELECT s.superhero_name, c1.colour AS eyes_colour, c2.colour AS hair_colour, c3.colour AS skin_colour FROM superhero AS s JOIN gender AS g ON s.gender_id = g.id JOIN colour AS c1 ON s.eye_colour_id = c1.id JOIN colour AS c2 ON s.hair_colour_id = c2.id JOIN colour AS c3 ON s.skin_colour_id = c3.id JOIN publisher AS p ON s.publisher_id = p.id WHERE g.gender = 'Female' AND p.publisher_name = 'Dark Horse Comics'"
60,232,Please list top three molecules that have single bonds between two atoms and are not carcinogenic in alphabetical order.,toxicology,moderate,SELECT DISTINCT T2.molecule_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' AND T2.label = '-' ORDER BY T2.molecule_id LIMIT 3,7,"SELECT m.label  FROM molecule m  JOIN bond b ON m.molecule_id = b.molecule_id  JOIN connected c ON b.bond_id = c.bond_id  JOIN atom a1 ON c.atom_id = a1.atom_id  JOIN atom a2 ON c.atom_id2 = a2.atom_id  WHERE b.bond_type = 'single'  AND a1.element <> a2.element  AND m.molecule_id NOT IN (SELECT molecule_id FROM carcinogenic)  GROUP BY m.label  ORDER BY m.label ASC  LIMIT 3
SELECT m.label  FROM molecule m  JOIN bond b ON m.molecule_id = b.molecule_id  JOIN connected c ON b.bond_id = c.bond_id  JOIN atom a1 ON c.atom_id = a1.atom_id  JOIN atom a2 ON c.atom_id2 = a2.atom_id  WHERE b.bond_type = 'single'  AND a1.element <> a2.element  AND m.molecule_id NOT IN (SELECT molecule_id FROM carcinogenic)  GROUP BY m.label  ORDER BY m.label ASC  LIMIT 3
SELECT m.label  FROM molecule m  JOIN bond b ON m.molecule_id = b.molecule_id  JOIN connected c ON b.bond_id = c.bond_id  JOIN atom a1 ON c.atom_id = a1.atom_id  JOIN atom a2 ON c.atom_id2 = a2.atom_id  WHERE b.bond_type = 'single'  AND a1.element <> a2.element  AND m.molecule_id NOT IN (SELECT molecule_id FROM carcinogenic)  GROUP BY m.label  ORDER BY m.label ASC  LIMIT 3
SELECT m.label  FROM molecule m  JOIN bond b ON m.molecule_id = b.molecule_id  JOIN connected c ON b.bond_id = c.bond_id  JOIN atom a1 ON c.atom_id = a1.atom_id  JOIN atom a2 ON c.atom_id2 = a2.atom_id  WHERE b.bond_type = 'single'  AND a1.element <> a2.element  AND m.molecule_id NOT IN (SELECT molecule_id FROM carcinogenic)  GROUP BY m.label  ORDER BY m.label ASC  LIMIT 3
SELECT m.label  FROM molecule m  JOIN bond b ON m.molecule_id = b.molecule_id  JOIN connected c ON b.bond_id = c.bond_id  JOIN atom a1 ON c.atom_id = a1.atom_id  JOIN atom a2 ON c.atom_id2 = a2.atom_id  WHERE b.bond_type = 'single'  AND a1.element <> a2.element  AND m.molecule_id NOT IN (SELECT molecule_id FROM carcinogenic)  GROUP BY m.label  ORDER BY m.label ASC  LIMIT 3
SELECT m.label FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE b.bond_type = 'single' AND a1.element <> a2.element AND m.molecule_id NOT IN (SELECT molecule_id FROM carcinogenic) GROUP BY m.label ORDER BY m.label ASC LIMIT 3
SELECT m.label  FROM molecule m  JOIN bond b ON m.molecule_id = b.molecule_id  JOIN connected c ON b.bond_id = c.bond_id  JOIN atom a1 ON c.atom_id = a1.atom_id  JOIN atom a2 ON c.atom_id2 = a2.atom_id  WHERE b.bond_type = 'single'  AND a1.element <> a2.element  AND m.molecule_id NOT IN (SELECT molecule_id FROM carcinogenic)  GROUP BY m.label  ORDER BY m.label ASC  LIMIT 3",SELECT m.label  FROM molecule m  JOIN bond b ON m.molecule_id = b.molecule_id  JOIN connected c ON b.bond_id = c.bond_id  JOIN atom a1 ON c.atom_id = a1.atom_id  JOIN atom a2 ON c.atom_id2 = a2.atom_id  WHERE b.bond_type = 'single'  AND a1.element <> a2.element  AND m.molecule_id NOT IN (SELECT molecule_id FROM carcinogenic)  GROUP BY m.label  ORDER BY m.label ASC  LIMIT 3
61,1297,"For the patients whose total cholesterol is higher than normal, how many of them have a negative measure of degree of coagulation?",thrombosis_prediction,moderate,SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.`T-CHO` >= 250 AND T3.KCT = '-',7,"SELECT COUNT(*)  FROM patient  JOIN laboratory ON patient.id = laboratory.id  WHERE patient.id IN (SELECT patient.id                       FROM patient                       JOIN laboratory ON patient.id = laboratory.id                       WHERE laboratory.t_cho > 'normal')  AND laboratory.aptt < '0'
SELECT COUNT(*) FROM patient  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE patient.id IN (SELECT patient.id FROM patient  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.t_cho > 'normal')  AND laboratory.aptt < '0'
SELECT COUNT(*) FROM patient  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE patient.id IN (SELECT patient.id FROM patient  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.t_cho > 'normal')  AND laboratory.aptt < '0'
SELECT COUNT(*) FROM patient  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE patient.id IN (     SELECT patient.id FROM patient      INNER JOIN laboratory ON patient.id = laboratory.id      WHERE laboratory.t_cho > 'normal' ) AND laboratory.aptt < '0'
SELECT COUNT(*)  FROM patient  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.t_cho > 'normal' AND patient.sex = 'female' AND laboratory.aptt < '0'
SELECT COUNT(*) FROM patient  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE patient.id IN (     SELECT patient.id FROM patient      INNER JOIN laboratory ON patient.id = laboratory.id      WHERE laboratory.t_cho > (SELECT AVG(laboratory.t_cho) FROM laboratory) ) AND laboratory.aptt < 0
SELECT COUNT(*)  FROM patient  JOIN laboratory ON patient.id = laboratory.id  WHERE patient.id IN (     SELECT patient.id      FROM patient      JOIN laboratory ON patient.id = laboratory.id      WHERE laboratory.t_cho > 'normal' ) AND laboratory.aptt < '0'",SELECT COUNT(*) FROM patient  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE patient.id IN (SELECT patient.id FROM patient  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.t_cho > 'normal')  AND laboratory.aptt < '0'
62,171,What was the difference in the number of crimes committed in East and North Bohemia in 1996?,financial,moderate,"SELECT SUM(IIF(A3 = 'east Bohemia', A16, 0)) - SUM(IIF(A3 = 'north Bohemia', A16, 0)) FROM district",7,"SELECT (SELECT COUNT(*) FROM trans WHERE type = 'Crime' AND account_id IN (SELECT account_id FROM disp WHERE type = 'owner' AND account_id IN (SELECT account_id FROM account WHERE district_id IN (SELECT district_id FROM district WHERE a3 LIKE '%East%'))) AND strftime('%Y', date) = '1996') -         (SELECT COUNT(*) FROM trans WHERE type = 'Crime' AND account_id IN (SELECT account_id FROM disp WHERE type = 'owner' AND account_id IN (SELECT account_id FROM account WHERE district_id IN (SELECT district_id FROM district WHERE a3 LIKE '%North Bohemia%'))) AND strftime('%Y', date) = '1996')
SELECT (SELECT COUNT(*) FROM trans WHERE type = 'Crime' AND account_id IN (SELECT account_id FROM disp WHERE type = 'owner' AND account_id IN (SELECT account_id FROM account WHERE district_id IN (SELECT district_id FROM district WHERE a3 LIKE '%East%'))) AND strftime('%Y', date) = '1996') -         (SELECT COUNT(*) FROM trans WHERE type = 'Crime' AND account_id IN (SELECT account_id FROM disp WHERE type = 'owner' AND account_id IN (SELECT account_id FROM account WHERE district_id IN (SELECT district_id FROM district WHERE a3 LIKE '%North Bohemia%'))) AND strftime('%Y', date) = '1996')
SELECT (SELECT COUNT(*) FROM trans WHERE type = 'Crime' AND account_id IN (SELECT account_id FROM disp WHERE type = 'owner' AND account_id IN (SELECT account_id FROM account WHERE district_id IN (SELECT district_id FROM district WHERE a3 LIKE '%East%'))) AND strftime('%Y', date) = '1996') -         (SELECT COUNT(*) FROM trans WHERE type = 'Crime' AND account_id IN (SELECT account_id FROM disp WHERE type = 'owner' AND account_id IN (SELECT account_id FROM account WHERE district_id IN (SELECT district_id FROM district WHERE a3 LIKE '%North Bohemia%'))) AND strftime('%Y', date) = '1996')
SELECT (SELECT COUNT(*) FROM trans WHERE type = 'Crime' AND account_id IN (SELECT account_id FROM disp WHERE type = 'owner' AND account_id IN (SELECT account_id FROM account WHERE district_id IN (SELECT district_id FROM district WHERE a3 LIKE '%East%'))) AND strftime('%Y', date) = '1996') -         (SELECT COUNT(*) FROM trans WHERE type = 'Crime' AND account_id IN (SELECT account_id FROM disp WHERE type = 'owner' AND account_id IN (SELECT account_id FROM account WHERE district_id IN (SELECT district_id FROM district WHERE a3 LIKE '%North Bohemia%'))) AND strftime('%Y', date) = '1996')
SELECT (SELECT COUNT(*) FROM trans WHERE type = 'Crime' AND account_id IN (SELECT account_id FROM disp WHERE type = 'owner' AND account_id IN (SELECT account_id FROM account WHERE district_id IN (SELECT district_id FROM district WHERE a3 LIKE '%East%'))) AND strftime('%Y', date) = '1996') -         (SELECT COUNT(*) FROM trans WHERE type = 'Crime' AND account_id IN (SELECT account_id FROM disp WHERE type = 'owner' AND account_id IN (SELECT account_id FROM account WHERE district_id IN (SELECT district_id FROM district WHERE a3 LIKE '%North Bohemia%'))) AND strftime('%Y', date) = '1996')
SELECT (SELECT COUNT(*) FROM trans WHERE type = 'Crime' AND account_id IN (SELECT account_id FROM disp WHERE type = 'owner' AND account_id IN (SELECT account_id FROM account WHERE district_id IN (SELECT district_id FROM district WHERE a3 LIKE '%East%'))) AND strftime('%Y', date) = '1996') -         (SELECT COUNT(*) FROM trans WHERE type = 'Crime' AND account_id IN (SELECT account_id FROM disp WHERE type = 'owner' AND account_id IN (SELECT account_id FROM account WHERE district_id IN (SELECT district_id FROM district WHERE a3 LIKE '%North Bohemia%'))) AND strftime('%Y', date) = '1996')
SELECT (SELECT COUNT(*) FROM trans WHERE type = 'Crime' AND account_id IN (SELECT account_id FROM disp WHERE type = 'owner' AND account_id IN (SELECT account_id FROM account WHERE district_id IN (SELECT district_id FROM district WHERE a3 LIKE '%East%'))) AND strftime('%Y', date) = '1996') -         (SELECT COUNT(*) FROM trans WHERE type = 'Crime' AND account_id IN (SELECT account_id FROM disp WHERE type = 'owner' AND account_id IN (SELECT account_id FROM account WHERE district_id IN (SELECT district_id FROM district WHERE a3 LIKE '%North Bohemia%'))) AND strftime('%Y', date) = '1996')","SELECT (SELECT COUNT(*) FROM trans WHERE type = 'Crime' AND account_id IN (SELECT account_id FROM disp WHERE type = 'owner' AND account_id IN (SELECT account_id FROM account WHERE district_id IN (SELECT district_id FROM district WHERE a3 LIKE '%East%'))) AND strftime('%Y', date) = '1996') -         (SELECT COUNT(*) FROM trans WHERE type = 'Crime' AND account_id IN (SELECT account_id FROM disp WHERE type = 'owner' AND account_id IN (SELECT account_id FROM account WHERE district_id IN (SELECT district_id FROM district WHERE a3 LIKE '%North Bohemia%'))) AND strftime('%Y', date) = '1996')"
63,679,Which post has the highest score? Please give its id and title's name.,codebase_community,simple,"SELECT T1.Id, T2.Title FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId ORDER BY T2.Score DESC LIMIT 1",7,"SELECT id, title FROM posts ORDER BY score DESC LIMIT 1
SELECT id, title FROM posts ORDER BY score DESC LIMIT 1
SELECT id, title FROM posts ORDER BY score DESC LIMIT 1
SELECT id, title FROM posts ORDER BY score DESC LIMIT 1
SELECT id, title FROM posts ORDER BY score DESC LIMIT 1
SELECT id, title FROM posts ORDER BY score DESC LIMIT 1
SELECT id, title FROM posts ORDER BY score DESC LIMIT 1","SELECT id, title FROM posts ORDER BY score DESC LIMIT 1"
64,1437,Which members who were approved from 1/10/2019 to 11/19/2019? Please identify the member who attended the event and the link to their event.,student_club,challenging,"SELECT DISTINCT T1.link_to_member, T3.link_to_event FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN attendance AS T3 ON T2.member_id = T3.link_to_member WHERE date(SUBSTR(T1.expense_date, 1, 10)) BETWEEN '2019-01-10' AND '2019-11-19' AND T1.approved = 'true'",7,"SELECT member.member_id, member.first_name, member.last_name, attendance.link_to_event FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN expense ON member.member_id = expense.link_to_member JOIN budget ON expense.link_to_budget = budget.budget_id JOIN event ON budget.link_to_event = event.event_id WHERE event.event_date BETWEEN '2019-01-10' AND '2019-11-19' AND expense.approved = 'Yes' AND event.status = 'Approved' 
SELECT member.member_id, member.first_name, member.last_name, attendance.link_to_event FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE member.approved_date BETWEEN '2019-01-10' AND '2019-11-19'
SELECT member.member_id, member.first_name, member.last_name, attendance.link_to_event FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE member.status = 'approved' AND event.event_date BETWEEN '2019-01-10' AND '2019-11-19'
SELECT member.member_id, member.first_name, member.last_name, attendance.link_to_event FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE member.status = 'approved' AND event.event_date BETWEEN '2019-01-10' AND '2019-11-19'
SELECT member.member_id, member.first_name, member.last_name, attendance.link_to_event FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE member.status = 'approved' AND event.event_date BETWEEN '2019-01-10' AND '2019-11-19'
SELECT member.member_id, member.first_name, member.last_name, attendance.link_to_event FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE member.status = 'approved' AND event.event_date BETWEEN '2019-01-10' AND '2019-11-19'
SELECT member.member_id, member.first_name, member.last_name, attendance.link_to_event FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN expense ON member.member_id = expense.link_to_member JOIN budget ON expense.link_to_budget = budget.budget_id JOIN event ON budget.link_to_event = event.event_id WHERE event.event_date BETWEEN '2019-01-10' AND '2019-11-19' AND expense.approved = 'Yes' AND event.status = 'Approved'","SELECT member.member_id, member.first_name, member.last_name, attendance.link_to_event FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE member.status = 'approved' AND event.event_date BETWEEN '2019-01-10' AND '2019-11-19'"
65,328,"List all the elements with double bond, consisted in molecule TR024.",toxicology,challenging,SELECT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR024' AND T2.bond_type = '=',7,"SELECT atom.atom_id, atom.molecule_id, atom.element  FROM atom  JOIN connected ON atom.atom_id = connected.atom_id  JOIN bond ON connected.bond_id = bond.bond_id  WHERE bond.bond_type = 'double' AND atom.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR024')
SELECT atom.atom_id, atom.molecule_id, atom.element  FROM atom  JOIN connected ON atom.atom_id = connected.atom_id  JOIN bond ON connected.bond_id = bond.bond_id  WHERE bond.bond_type = 'double' AND atom.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR024')
SELECT atom.atom_id, atom.molecule_id, atom.element  FROM atom  JOIN connected ON atom.atom_id = connected.atom_id  JOIN bond ON connected.bond_id = bond.bond_id  WHERE bond.bond_type = 'double' AND atom.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR024')
SELECT atom.atom_id, atom.molecule_id, atom.element  FROM atom  JOIN connected ON atom.atom_id = connected.atom_id  JOIN bond ON connected.bond_id = bond.bond_id  WHERE bond.bond_type = 'double' AND atom.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR024')
SELECT atom.atom_id, atom.molecule_id, atom.element  FROM atom  JOIN connected ON atom.atom_id = connected.atom_id  JOIN bond ON connected.bond_id = bond.bond_id  WHERE bond.bond_type = 'double' AND atom.molecule_id = 'TR024'
SELECT atom.atom_id, atom.molecule_id, atom.element  FROM atom  JOIN connected ON atom.atom_id = connected.atom_id  JOIN bond ON connected.bond_id = bond.bond_id  WHERE bond.bond_type = 'double' AND atom.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR024')
SELECT atom.atom_id, atom.molecule_id, atom.element  FROM atom  JOIN connected ON atom.atom_id = connected.atom_id  JOIN bond ON connected.bond_id = bond.bond_id  WHERE bond.bond_type = 'double' AND atom.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR024')","SELECT atom.atom_id, atom.molecule_id, atom.element  FROM atom  JOIN connected ON atom.atom_id = connected.atom_id  JOIN bond ON connected.bond_id = bond.bond_id  WHERE bond.bond_type = 'double' AND atom.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR024')"
66,1243,"For all patients who are older than 55 years old, what is the percentage of female who has abnormal prothrombin time (PT)?",thrombosis_prediction,challenging,"SELECT CAST(SUM(CASE WHEN T2.PT >= 14 AND T1.SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) > 55",7,"SELECT (     SELECT COUNT(*)      FROM patient      INNER JOIN laboratory ON patient.id = laboratory.id      WHERE DATE('now') - DATE(patient.birthday) > 55 AND patient.sex = 'female' AND laboratory.pt <> '' AND patient.id IN (         SELECT patient.id          FROM patient          INNER JOIN laboratory ON patient.id = laboratory.id          WHERE laboratory.pt > 'normal'     ) ) / (     SELECT COUNT(*)      FROM patient      WHERE DATE('now') - DATE(patient.birthday) > 55 AND patient.sex = 'female' ) * 100 AS percentage
SELECT      (SELECT COUNT(*) FROM patient       INNER JOIN laboratory ON patient.id = laboratory.id       WHERE DATE('now') - DATE(patient.birthday) > 55 AND patient.sex = 'female' AND laboratory.pt <> 'normal') * 100.0 /     (SELECT COUNT(*) FROM patient       INNER JOIN laboratory ON patient.id = laboratory.id       WHERE DATE('now') - DATE(patient.birthday) > 55 AND patient.sex = 'female') AS percentage
SELECT      (SELECT COUNT(*) FROM patient       INNER JOIN laboratory ON patient.id = laboratory.id       WHERE DATE('now') - DATE(patient.birthday) > 55 AND patient.sex = 'female' AND laboratory.pt <> 'normal') * 100.0 /     (SELECT COUNT(*) FROM patient       INNER JOIN laboratory ON patient.id = laboratory.id       WHERE DATE('now') - DATE(patient.birthday) > 55 AND patient.sex = 'female') AS percentage
SELECT      (SELECT COUNT(*)       FROM patient       INNER JOIN laboratory ON patient.id = laboratory.id       WHERE DATE('now') - STRFTIME('%Y-%m-%d', birthday) > 55 AND sex = 'female' AND pt > 'abnormal') * 100.0 /      (SELECT COUNT(*)       FROM patient       INNER JOIN laboratory ON patient.id = laboratory.id       WHERE DATE('now') - STRFTIME('%Y-%m-%d', birthday) > 55 AND sex = 'female') AS percentage
SELECT      (SELECT COUNT(*) FROM patient       INNER JOIN laboratory ON patient.id = laboratory.id       WHERE DATE('now') - STRFTIME('%Y-%m-%d', birthday) > 55       AND sex = 'female'       AND pt > 150) * 100.0 /      (SELECT COUNT(*) FROM patient       INNER JOIN laboratory ON patient.id = laboratory.id       WHERE DATE('now') - STRFTIME('%Y-%m-%d', birthday) > 55       AND sex = 'female') AS percentage
SELECT      (SELECT COUNT(*) FROM patient      INNER JOIN laboratory ON patient.id = laboratory.id      WHERE DATE('now') - DATE(patient.birthday) > 55 AND patient.sex = 'female' AND laboratory.pt <> 'normal') * 100.0 /     (SELECT COUNT(*) FROM patient      INNER JOIN laboratory ON patient.id = laboratory.id      WHERE DATE('now') - DATE(patient.birthday) > 55 AND patient.sex = 'female') AS percentage
SELECT      (SELECT COUNT(*) FROM patient      INNER JOIN laboratory ON patient.id = laboratory.id      WHERE DATE('now') - DATE(patient.birthday) > 55 AND patient.sex = 'female' AND laboratory.pt <> 'normal') * 100.0 /     (SELECT COUNT(*) FROM patient      INNER JOIN laboratory ON patient.id = laboratory.id      WHERE DATE('now') - DATE(patient.birthday) > 55 AND patient.sex = 'female') AS percentage",SELECT      (SELECT COUNT(*) FROM patient       INNER JOIN laboratory ON patient.id = laboratory.id       WHERE DATE('now') - DATE(patient.birthday) > 55 AND patient.sex = 'female' AND laboratory.pt <> 'normal') * 100.0 /     (SELECT COUNT(*) FROM patient       INNER JOIN laboratory ON patient.id = laboratory.id       WHERE DATE('now') - DATE(patient.birthday) > 55 AND patient.sex = 'female') AS percentage
67,1292,What is the anti Cardiolipin antibody concentration of the female patient with the highest uric acid level in the normal range?,thrombosis_prediction,challenging,"SELECT T3.`aCL IgG`, T3.`aCL IgM`, T3.`aCL IgA` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T3.ID = T2.ID WHERE T1.SEX = 'F' AND T2.UA > 6.5 ORDER BY T2.UA DESC LIMIT 1",7,"SELECT MAX(laboratory.ua), patient.sex, patient.id, laboratory.igm FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'female' AND laboratory.ua BETWEEN 0 AND 500
SELECT MAX(laboratory.ua), patient.sex, patient.id, laboratory.igm FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'female' AND laboratory.ua BETWEEN 0 AND 500
SELECT MAX(laboratory.ua), patient.sex, patient.id, laboratory.igm FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'female' AND laboratory.ua BETWEEN 0 AND 500
SELECT MAX(laboratory.ua), patient.sex, patient.id, laboratory.igm FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'female' AND laboratory.ua BETWEEN 0 AND 5
SELECT MAX(laboratory.ua), patient.sex, patient.id, laboratory.igm FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'female' AND laboratory.ua BETWEEN 0 AND 500
SELECT MAX(laboratory.ua), patient.sex, patient.id, laboratory.igm FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'female' AND laboratory.ua BETWEEN 0 AND 500
SELECT MAX(laboratory.ua), patient.sex, patient.id, laboratory.igm FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'female' AND laboratory.ua BETWEEN 0 AND 500","SELECT MAX(laboratory.ua), patient.sex, patient.id, laboratory.igm FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'female' AND laboratory.ua BETWEEN 0 AND 500"
68,198,On average how many carcinogenic molecules are single bonded?,toxicology,challenging,"SELECT AVG(single_bond_count) FROM (SELECT T3.molecule_id, COUNT(T1.bond_type) AS single_bond_count FROM bond AS T1  INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN molecule AS T3 ON T3.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' AND T3.label = '+' GROUP BY T3.molecule_id) AS subquery",7,"SELECT AVG(single_bond_count)  FROM (     SELECT m.molecule_id, COUNT(b.bond_id) as single_bond_count      FROM molecule m      JOIN bond b ON m.molecule_id = b.molecule_id      JOIN connected c ON b.bond_id = c.bond_id      WHERE b.bond_type = 'single'      GROUP BY m.molecule_id ) as subquery
SELECT AVG(single_bond_count)  FROM (     SELECT m.molecule_id, COUNT(b.bond_id) as single_bond_count      FROM molecule m      JOIN bond b ON m.molecule_id = b.molecule_id      JOIN connected c ON c.bond_id = b.bond_id      WHERE b.bond_type = 'single'      GROUP BY m.molecule_id )
SELECT AVG(single_bond_count)  FROM (     SELECT m.molecule_id, COUNT(b.bond_id) as single_bond_count      FROM molecule m      JOIN bond b ON m.molecule_id = b.molecule_id      JOIN connected c ON b.bond_id = c.bond_id      WHERE b.bond_type = 'single'      GROUP BY m.molecule_id ) as subquery
SELECT AVG(single_bond_count)  FROM (     SELECT m.molecule_id, COUNT(b.bond_id) as single_bond_count      FROM molecule m      JOIN bond b ON m.molecule_id = b.molecule_id      JOIN connected c ON b.bond_id = c.bond_id      WHERE b.bond_type = 'single'      GROUP BY m.molecule_id ) as subquery
SELECT AVG(single_bond_count)  FROM (     SELECT m.molecule_id, COUNT(b.bond_id) as single_bond_count      FROM molecule m      JOIN bond b ON m.molecule_id = b.molecule_id      JOIN connected c ON b.bond_id = c.bond_id      WHERE b.bond_type = 'single'      GROUP BY m.molecule_id ) as subquery
SELECT AVG(single_bond_count)  FROM (     SELECT m.molecule_id, COUNT(b.bond_id) as single_bond_count      FROM molecule m      JOIN bond b ON m.molecule_id = b.molecule_id      JOIN connected c ON c.bond_id = b.bond_id      WHERE b.bond_type = 'single'      GROUP BY m.molecule_id )
SELECT AVG(single_bond_count)  FROM (     SELECT m.molecule_id, COUNT(b.bond_id) as single_bond_count      FROM molecule m      JOIN bond b ON m.molecule_id = b.molecule_id      JOIN connected c ON b.bond_id = c.bond_id      WHERE b.bond_type = 'single'      GROUP BY m.molecule_id ) as subquery","SELECT AVG(single_bond_count)  FROM (     SELECT m.molecule_id, COUNT(b.bond_id) as single_bond_count      FROM molecule m      JOIN bond b ON m.molecule_id = b.molecule_id      JOIN connected c ON b.bond_id = c.bond_id      WHERE b.bond_type = 'single'      GROUP BY m.molecule_id ) as subquery"
69,660,What is the owner user id of the most valuable post?,codebase_community,simple,SELECT OwnerUserId FROM posts WHERE FavoriteCount = ( SELECT MAX(FavoriteCount) FROM posts ),7,"SELECT posts.owneruserid FROM posts JOIN users ON posts.owneruserid = users.id WHERE users.reputation = (     SELECT MAX(users.reputation)     FROM posts     JOIN users     ON posts.owneruserid = users.id )
SELECT posts.owneruserid FROM posts JOIN users ON posts.owneruserid = users.id WHERE users.reputation = (SELECT MAX(reputation) FROM users)
SELECT posts.owneruserid FROM posts JOIN users ON posts.owneruserid = users.id WHERE users.reputation = (SELECT MAX(reputation) FROM users)
SELECT posts.owneruserid FROM posts JOIN users ON posts.owneruserid = users.id WHERE users.reputation = (     SELECT MAX(users.reputation)     FROM posts     JOIN users     ON posts.owneruserid = users.id )
SELECT posts.owneruserid FROM posts JOIN users ON posts.owneruserid = users.id WHERE users.reputation = (SELECT MAX(reputation) FROM users)
SELECT posts.owneruserid FROM posts JOIN users ON posts.owneruserid = users.id WHERE users.reputation = (SELECT MAX(reputation) FROM users)
SELECT owneruserid FROM posts ORDER BY score DESC LIMIT 1",SELECT posts.owneruserid FROM posts JOIN users ON posts.owneruserid = users.id WHERE users.reputation = (SELECT MAX(reputation) FROM users)
70,1223,Are there more male patients with creatinine not within the normal range than female? True or False?,thrombosis_prediction,challenging,SELECT CASE WHEN SUM(CASE WHEN T1.SEX = 'M' THEN 1 ELSE 0 END) > SUM(CASE WHEN T1.SEX = 'F' THEN 1 ELSE 0 END) THEN 'True' ELSE 'False' END FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE >= 1.5,7,"SELECT      patient.sex,      COUNT(laboratory.cre) AS Creatinine_not_within_normal_range FROM      patient  JOIN      laboratory ON patient.id = laboratory.id WHERE      laboratory.cre NOT BETWEEN 0.6 AND 1.2 GROUP BY      patient.sex
SELECT      (SELECT COUNT(*) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'male' AND laboratory.cre NOT BETWEEN 0.7 AND 1.2) >      (SELECT COUNT(*) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'female' AND laboratory.cre NOT BETWEEN 0.7 AND 1.2) AS result
SELECT      patient.sex,      COUNT(laboratory.cre) AS Creatinine_not_within_normal_range FROM      patient  JOIN      laboratory ON patient.id = laboratory.id WHERE      laboratory.cre NOT BETWEEN 0.7 AND 1.2 GROUP BY      patient.sex
SELECT      (SELECT COUNT(*) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'male' AND laboratory.cre NOT BETWEEN 0.7 AND 1.2) >      (SELECT COUNT(*) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'female' AND laboratory.cre NOT BETWEEN 0.7 AND 1.2) AS result
SELECT      patient.sex,      COUNT(laboratory.cre) AS Creatinine_not_within_normal_range FROM      patient  JOIN      laboratory ON patient.id = laboratory.id WHERE      laboratory.cre NOT BETWEEN 0.7 AND 1.2 GROUP BY      patient.sex
SELECT      patient.sex,      COUNT(laboratory.cre) AS Creatinine_not_within_normal_range FROM      patient  JOIN      laboratory ON patient.id = laboratory.id WHERE      laboratory.cre NOT BETWEEN 0.6 AND 1.2 GROUP BY      patient.sex
SELECT      patient.sex,      COUNT(laboratory.cre) AS Creatinine_not_within_normal_range FROM      patient  JOIN      laboratory ON patient.id = laboratory.id WHERE      laboratory.cre NOT BETWEEN 0.6 AND 1.2 GROUP BY      patient.sex","SELECT      patient.sex,      COUNT(laboratory.cre) AS Creatinine_not_within_normal_range FROM      patient  JOIN      laboratory ON patient.id = laboratory.id WHERE      laboratory.cre NOT BETWEEN 0.6 AND 1.2 GROUP BY      patient.sex"
71,1418,Mention the category of events which were held at MU 215.,student_club,simple,SELECT T2.category FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.location = 'MU 215',7,"SELECT DISTINCT budget.category  FROM budget  JOIN event ON budget.link_to_event = event.event_id  WHERE event.location = 'MU 215'
SELECT DISTINCT b.category  FROM budget AS b  JOIN event AS e ON b.link_to_event = e.event_id  WHERE e.location = 'MU 215'
SELECT budget.category FROM budget  JOIN event ON budget.link_to_event = event.event_id  WHERE event.location = 'MU 215'
SELECT budget.category  FROM budget  JOIN event ON budget.link_to_event = event.event_id  WHERE event.location = 'MU 215'
SELECT budget.category FROM budget  JOIN event ON budget.link_to_event = event.event_id  WHERE event.location = 'MU 215'
SELECT budget.category FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.location = 'MU 215'
SELECT budget.category  FROM budget  JOIN event ON budget.link_to_event = event.event_id  WHERE event.location = 'MU 215'",SELECT budget.category FROM budget  JOIN event ON budget.link_to_event = event.event_id  WHERE event.location = 'MU 215'
72,131,Which district has highest active loan?,financial,moderate,"SELECT T2.A3 FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T1.account_id = T3.account_id WHERE T3.status IN ('C', 'D') GROUP BY T2.A3 ORDER BY SUM(T3.amount) DESC LIMIT 1",7,"SELECT district.district_id, district.a2 AS district_name, COUNT(loan.loan_id) AS active_loans FROM district JOIN client ON district.district_id = client.district_id JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id JOIN loan ON account.account_id = loan.account_id WHERE loan.status = 'A' GROUP BY district.district_id, district.a2 ORDER BY active_loans DESC LIMIT 1
SELECT district.district_id, district.a2 AS district_name, COUNT(loan.loan_id) AS active_loans FROM district JOIN client ON district.district_id = client.district_id JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id JOIN loan ON account.account_id = loan.account_id WHERE loan.status = 'A' GROUP BY district.district_id, district.a2 ORDER BY active_loans DESC LIMIT 1
SELECT district.district_id, district.a2 AS district_name, COUNT(loan.loan_id) AS active_loans FROM district JOIN client ON district.district_id = client.district_id JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id JOIN loan ON account.account_id = loan.account_id WHERE loan.status = 'A' GROUP BY district.district_id, district.a2 ORDER BY active_loans DESC LIMIT 1
SELECT district.district_id, district.a2 AS district_name, COUNT(loan.loan_id) AS active_loans FROM district JOIN client ON district.district_id = client.district_id JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id JOIN loan ON account.account_id = loan.account_id WHERE loan.status = 'A' GROUP BY district.district_id, district.a2 ORDER BY active_loans DESC LIMIT 1
SELECT district.district_id, district.a2 AS district_name, COUNT(loan.loan_id) AS active_loans FROM district JOIN client ON district.district_id = client.district_id JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id JOIN loan ON account.account_id = loan.account_id WHERE loan.status = 'A' GROUP BY district.district_id, district.a2 ORDER BY active_loans DESC LIMIT 1
SELECT district.district_id, district.a2, COUNT(loan.loan_id) AS active_loans FROM district JOIN client ON district.district_id = client.district_id JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id JOIN loan ON account.account_id = loan.account_id WHERE loan.status = 'A' GROUP BY district.district_id ORDER BY active_loans DESC LIMIT 1
SELECT district.district_id, district.a2 AS district_name, COUNT(loan.loan_id) AS active_loans FROM district JOIN client ON district.district_id = client.district_id JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id JOIN loan ON account.account_id = loan.account_id WHERE loan.status = 'A' GROUP BY district.district_id, district.a2 ORDER BY active_loans DESC LIMIT 1","SELECT district.district_id, district.a2 AS district_name, COUNT(loan.loan_id) AS active_loans FROM district JOIN client ON district.district_id = client.district_id JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id JOIN loan ON account.account_id = loan.account_id WHERE loan.status = 'A' GROUP BY district.district_id, district.a2 ORDER BY active_loans DESC LIMIT 1"
73,896,Calculate the percentage whereby Hamilton was not at the 1st track of the the f1 circuit since 2010.,formula_1,challenging,SELECT CAST(COUNT(CASE WHEN T2.position <> 1 THEN T2.position END) AS REAL) * 100 / COUNT(T2.driverStandingsId) FROM races AS T1 INNER JOIN driverStandings AS T2 ON T2.raceId = T1.raceId INNER JOIN drivers AS T3 ON T3.driverId = T2.driverId WHERE T3.surname = 'Hamilton' AND T1.year >= 2010,7,"SELECT (     (         SELECT COUNT(*)          FROM results          INNER JOIN races ON results.raceid = races.raceid          INNER JOIN drivers ON results.driverid = drivers.driverid          WHERE drivers.driverid = 'hamilton' AND races.year >= 2010 AND results.positionorder > 1     ) /     (         SELECT COUNT(*)          FROM results          INNER JOIN races ON results.raceid = races.raceid          INNER JOIN drivers ON results.driverid = drivers.driverid          WHERE drivers.driverid = 'hamilton' AND races.year >= 2010     ) * 100 ) AS percentage
SELECT (     (         SELECT COUNT(*)          FROM results          INNER JOIN races ON results.raceid = races.raceid          INNER JOIN drivers ON results.driverid = drivers.driverid          WHERE drivers.driverid = 'hamilton' AND races.year >= 2010 AND results.positionorder > 1     ) /     (         SELECT COUNT(*)          FROM results          INNER JOIN races ON results.raceid = races.raceid          INNER JOIN drivers ON results.driverid = drivers.driverid          WHERE drivers.driverid = 'hamilton' AND races.year >= 2010     ) * 100 ) AS percentage
SELECT (     (         SELECT COUNT(*)          FROM results          INNER JOIN races ON results.raceid = races.raceid          INNER JOIN drivers ON results.driverid = drivers.driverid          WHERE drivers.driverid = 'hamilton' AND races.year >= 2010 AND results.positionorder > 1     ) /     (         SELECT COUNT(*)          FROM results          INNER JOIN races ON results.raceid = races.raceid          INNER JOIN drivers ON results.driverid = drivers.driverid          WHERE drivers.driverid = 'hamilton' AND races.year >= 2010     ) * 100 ) AS percentage
SELECT (     (         SELECT COUNT(*)          FROM results          INNER JOIN races ON results.raceid = races.raceid          INNER JOIN drivers ON results.driverid = drivers.driverid          WHERE drivers.driverid = 'hamilton' AND races.year >= 2010 AND results.positionorder > 1     ) /     (         SELECT COUNT(*)          FROM results          INNER JOIN races ON results.raceid = races.raceid          INNER JOIN drivers ON results.driverid = drivers.driverid          WHERE drivers.driverid = 'hamilton' AND races.year >= 2010     ) * 100 ) AS percentage
SELECT (     (         SELECT COUNT(*)          FROM results          INNER JOIN races ON results.raceid = races.raceid          INNER JOIN drivers ON results.driverid = drivers.driverid          WHERE drivers.driverid = 'hamilton' AND races.year >= 2010 AND results.positionorder > 1     ) /     (         SELECT COUNT(*)          FROM results          INNER JOIN races ON results.raceid = races.raceid          INNER JOIN drivers ON results.driverid = drivers.driverid          WHERE drivers.driverid = 'hamilton' AND races.year >= 2010     ) * 100 ) AS percentage
SELECT (     (         SELECT COUNT(*)          FROM results          INNER JOIN races ON results.raceid = races.raceid          INNER JOIN drivers ON results.driverid = drivers.driverid          WHERE drivers.driverid = 'hamilton' AND races.year >= 2010 AND results.positionorder > 1     ) /     (         SELECT COUNT(*)          FROM results          INNER JOIN races ON results.raceid = races.raceid          INNER JOIN drivers ON results.driverid = drivers.driverid          WHERE drivers.driverid = 'hamilton' AND races.year >= 2010     ) * 100 ) AS percentage
SELECT (     (         SELECT COUNT(*)          FROM results          INNER JOIN races ON results.raceid = races.raceid          INNER JOIN drivers ON results.driverid = drivers.driverid          WHERE drivers.driverid = 'hamilton' AND races.year >= 2010 AND results.positionorder > 1     ) /     (         SELECT COUNT(*)          FROM results          INNER JOIN races ON results.raceid = races.raceid          INNER JOIN drivers ON results.driverid = drivers.driverid          WHERE drivers.driverid = 'hamilton' AND races.year >= 2010     ) * 100 ) AS percentage",SELECT (     (         SELECT COUNT(*)          FROM results          INNER JOIN races ON results.raceid = races.raceid          INNER JOIN drivers ON results.driverid = drivers.driverid          WHERE drivers.driverid = 'hamilton' AND races.year >= 2010 AND results.positionorder > 1     ) /     (         SELECT COUNT(*)          FROM results          INNER JOIN races ON results.raceid = races.raceid          INNER JOIN drivers ON results.driverid = drivers.driverid          WHERE drivers.driverid = 'hamilton' AND races.year >= 2010     ) * 100 ) AS percentage
74,173,How often does account number 3 request an account statement to be released? What was the aim of debiting 3539 in total?,financial,challenging,"SELECT T1.frequency, T2.k_symbol FROM account AS T1 INNER JOIN (SELECT account_id, k_symbol, SUM(amount) AS total_amount FROM `order` GROUP BY account_id, k_symbol) AS T2 ON T1.account_id = T2.account_id WHERE T1.account_id = 3 AND T2.total_amount = 3539",7,"SELECT COUNT(*) FROM trans WHERE account_id = 3 AND type = 'withdrawal' AND k_symbol = 'bank'
SELECT COUNT(*) FROM trans WHERE account_id = 3 AND type = 'withdrawal' AND k_symbol = 'bank'
SELECT COUNT(*) FROM trans WHERE account_id = 3 AND type = 'withdrawal' AND k_symbol = 'bank'
SELECT COUNT(*) FROM trans WHERE account_id = 3 AND type = 'withdrawal' AND k_symbol = 'bank_statement'
SELECT COUNT(*) FROM trans WHERE account_id = 3 AND type = 'withdrawal' AND k_symbol = 'bank'
SELECT COUNT(*) FROM trans WHERE account_id = 3 AND type = 'withdrawal' AND k_symbol = 'bank'
SELECT COUNT(*) FROM trans WHERE account_id = 3 AND type = 'withdrawal' AND k_symbol = 'bank'",SELECT COUNT(*) FROM trans WHERE account_id = 3 AND type = 'withdrawal' AND k_symbol = 'bank'
75,125,"For loans contracts which are still running where client are in debt, list the district of the and the state the percentage unemployment rate increment from year 1995 to 1996.",financial,challenging,SELECT CAST((T3.A13 - T3.A12) AS REAL) * 100 / T3.A12 FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.status = 'D',7,"SELECT d.a2 AS district, d.a15 AS unemployment_rate_increment FROM loan AS l JOIN account AS a ON l.account_id = a.account_id JOIN disp AS dp ON a.account_id = dp.account_id JOIN client AS c ON dp.client_id = c.client_id JOIN district AS d ON c.district_id = d.district_id WHERE l.status = 'A' AND d.a15 > (SELECT d2.a15 FROM district AS d2 WHERE d2.a2 = d.a2 AND d2.a3 = '1995')
SELECT d.a2 AS District, d.a16 AS 'Unemployment Rate 1995', d.a15 AS 'Unemployment Rate 1996', ((d.a15 - d.a16) / d.a16 * 100) AS 'Unemployment Rate Increment %' FROM district AS d JOIN account AS a ON d.district_id = a.district_id JOIN loan AS l ON a.account_id = l.account_id WHERE l.status = 'A' ORDER BY ((d.a15 - d.a16) / d.a16 * 100) DESC
SELECT d.a2 AS District, d.a15 AS Unemployment_Rate_Increment FROM district AS d JOIN account AS a ON d.district_id = a.district_id JOIN loan AS l ON a.account_id = l.account_id WHERE l.status = 'A' GROUP BY d.district_id
SELECT d.a2 AS district, d.a15 AS unemployment_rate_increment FROM loan AS l JOIN account AS a ON l.account_id = a.account_id JOIN disp AS dp ON a.account_id = dp.account_id JOIN client AS c ON dp.client_id = c.client_id JOIN district AS d ON c.district_id = d.district_id WHERE l.status = 'A' AND d.a15 > (SELECT d2.a15 FROM district AS d2 WHERE d2.a2 = d.a2 AND d2.a3 = '1995')
SELECT d.a2 AS district, d.a15 AS unemployment_rate_increment FROM loan AS l JOIN account AS a ON l.account_id = a.account_id JOIN disp AS dp ON a.account_id = dp.account_id JOIN client AS c ON dp.client_id = c.client_id JOIN district AS d ON c.district_id = d.district_id WHERE l.status = 'A' AND d.a8 <> 0 AND d.a9 <> 0 ORDER BY d.a2, d.a15
SELECT d.a2 AS district, d.a15 AS unemployment_rate_increment FROM loan AS l JOIN account AS a ON l.account_id = a.account_id JOIN disp AS dp ON a.account_id = dp.account_id JOIN client AS c ON dp.client_id = c.client_id JOIN district AS d ON c.district_id = d.district_id WHERE l.status = 'A' AND d.a15 > (SELECT d2.a15 FROM district AS d2 WHERE d2.a2 = d.a2 AND d2.a3 = '1995')
SELECT d.a2 AS district, d.a15 AS unemployment_rate_increment FROM loan AS l JOIN account AS a ON l.account_id = a.account_id JOIN disp AS dp ON a.account_id = dp.account_id JOIN client AS c ON dp.client_id = c.client_id JOIN district AS d ON c.district_id = d.district_id WHERE l.status = 'A' AND d.a15 > (SELECT d2.a15 FROM district AS d2 WHERE d2.a2 = d.a2 AND d2.a3 = '1995')","SELECT d.a2 AS district, d.a15 AS unemployment_rate_increment FROM loan AS l JOIN account AS a ON l.account_id = a.account_id JOIN disp AS dp ON a.account_id = dp.account_id JOIN client AS c ON dp.client_id = c.client_id JOIN district AS d ON c.district_id = d.district_id WHERE l.status = 'A' AND d.a15 > (SELECT d2.a15 FROM district AS d2 WHERE d2.a2 = d.a2 AND d2.a3 = '1995')"
76,201,What is the percentage of carbon in double-bond molecules?,toxicology,moderate,SELECT CAST(COUNT(DISTINCT CASE WHEN T1.element = 'c' THEN T1.atom_id ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T1.atom_id) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '=',7,"SELECT (     SELECT COUNT(*)      FROM atom      WHERE element = 'C'      AND molecule_id IN (         SELECT molecule_id          FROM bond          WHERE bond_type = 'double'     ) ) / (     SELECT COUNT(*)      FROM atom      WHERE molecule_id IN (         SELECT molecule_id          FROM bond          WHERE bond_type = 'double'     ) ) * 100 AS percentage
SELECT (SELECT COUNT(*) FROM atom WHERE element = 'C' AND molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = 'double')) * 100.0 / (SELECT COUNT(*) FROM atom WHERE molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = 'double')) AS percentage
SELECT (     SELECT COUNT(*)      FROM atom      WHERE element = 'C'      AND molecule_id IN (         SELECT molecule_id          FROM bond          WHERE bond_type = 'double'     ) ) / (     SELECT COUNT(*)      FROM atom      WHERE molecule_id IN (         SELECT molecule_id          FROM bond          WHERE bond_type = 'double'     ) ) * 100 AS percentage
SELECT (     SELECT COUNT(*)      FROM atom      WHERE element = 'C'      AND molecule_id IN (         SELECT molecule_id          FROM bond          WHERE bond_type = 'double'     ) ) / (     SELECT COUNT(*)      FROM atom      WHERE molecule_id IN (         SELECT molecule_id          FROM bond          WHERE bond_type = 'double'     ) ) * 100 AS percentage
SELECT (     SELECT COUNT(*)      FROM atom      WHERE element = 'C'      AND molecule_id IN (         SELECT molecule_id          FROM bond          WHERE bond_type = 'double'     ) ) / (     SELECT COUNT(*)      FROM atom      WHERE molecule_id IN (         SELECT molecule_id          FROM bond          WHERE bond_type = 'double'     ) ) * 100 AS percentage
SELECT (SELECT COUNT(*) FROM atom WHERE element = 'C' AND molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = 'double')) * 100.0 / (SELECT COUNT(*) FROM atom WHERE molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = 'double')) AS percentage
SELECT (SELECT COUNT(*) FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id INNER JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.element = 'C' AND bond.bond_type = 'double') * 100.0 / (SELECT COUNT(*) FROM atom WHERE atom.element = 'C') AS percentage",SELECT (     SELECT COUNT(*)      FROM atom      WHERE element = 'C'      AND molecule_id IN (         SELECT molecule_id          FROM bond          WHERE bond_type = 'double'     ) ) / (     SELECT COUNT(*)      FROM atom      WHERE molecule_id IN (         SELECT molecule_id          FROM bond          WHERE bond_type = 'double'     ) ) * 100 AS percentage
77,1150,What is the percentage of female patient were born after 1930?,thrombosis_prediction,moderate,"SELECT CAST(SUM(CASE WHEN STRFTIME('%Y', Birthday) > '1930' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Patient WHERE SEX = 'F'",7,"SELECT (     SELECT COUNT(*)      FROM patient      WHERE sex = 'female' AND birthday > '1930-12-31' ) / (     SELECT COUNT(*)      FROM patient ) * 100 AS percentage
SELECT (     SELECT COUNT(*)      FROM patient      WHERE sex = 'female' AND birthday > '1930-12-31' ) / (     SELECT COUNT(*)      FROM patient ) * 100 AS percentage
SELECT (     SELECT COUNT(*)      FROM patient      WHERE sex = 'female' AND birthday > '1930-12-31' ) / (     SELECT COUNT(*)      FROM patient ) * 100 AS percentage
SELECT (     SELECT COUNT(*)      FROM patient      WHERE sex = 'female' AND birthday > '1930-12-31' ) / (     SELECT COUNT(*)      FROM patient ) * 100 AS percentage
SELECT (     SELECT COUNT(*)      FROM patient      WHERE sex = 'female' AND birthday > '1930-12-31' ) / (     SELECT COUNT(*)      FROM patient ) * 100 AS percentage
SELECT (     SELECT COUNT(*)      FROM patient      WHERE sex = 'female' AND birthday > '1930-12-31' ) / (     SELECT COUNT(*)      FROM patient ) * 100 AS percentage
SELECT (     SELECT COUNT(*)      FROM patient      WHERE sex = 'female' AND birthday > '1930-12-31' ) / (     SELECT COUNT(*)      FROM patient ) * 100 AS percentage",SELECT (     SELECT COUNT(*)      FROM patient      WHERE sex = 'female' AND birthday > '1930-12-31' ) / (     SELECT COUNT(*)      FROM patient ) * 100 AS percentage
78,284,Determine the bond type that is formed in the chemical compound containing element Carbon.,toxicology,moderate,SELECT DISTINCT T2.bond_type FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'c',7,"SELECT bond.bond_type  FROM bond  JOIN connected ON bond.bond_id = connected.bond_id  JOIN atom ON connected.atom_id = atom.atom_id  WHERE atom.element = 'Carbon'
SELECT bond.bond_type  FROM bond  JOIN connected ON bond.bond_id = connected.bond_id  JOIN atom ON connected.atom_id = atom.atom_id  WHERE atom.element = 'Carbon'
SELECT bond.bond_type  FROM bond  JOIN connected ON bond.bond_id = connected.bond_id  JOIN atom ON connected.atom_id = atom.atom_id  WHERE atom.element = 'Carbon'
SELECT bond.bond_type  FROM bond  JOIN connected ON bond.bond_id = connected.bond_id  JOIN atom ON connected.atom_id = atom.atom_id  WHERE atom.element = 'Carbon'
SELECT bond.bond_type  FROM bond  JOIN connected ON bond.bond_id = connected.bond_id  JOIN atom ON connected.atom_id = atom.atom_id  WHERE atom.element = 'Carbon'
SELECT bond.bond_type  FROM bond  JOIN connected ON bond.bond_id = connected.bond_id  JOIN atom ON connected.atom_id = atom.atom_id  WHERE atom.element = 'Carbon'
SELECT bond.bond_type  FROM bond  JOIN connected ON bond.bond_id = connected.bond_id  JOIN atom ON connected.atom_id = atom.atom_id  WHERE atom.element = 'Carbon'",SELECT bond.bond_type  FROM bond  JOIN connected ON bond.bond_id = connected.bond_id  JOIN atom ON connected.atom_id = atom.atom_id  WHERE atom.element = 'Carbon'
79,1236,"For all the female patient age 50 and above, who has abnormal red blood cell count. State if they were admitted to hospital.",thrombosis_prediction,challenging,"SELECT DISTINCT T1.ID, T1.Admission FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (T2.RBC <= 3.5 OR T2.RBC >= 6.0) AND STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) >= 50",7,"SELECT patient.id, patient.admission, laboratory.rbc, laboratory.hgb, laboratory.hct, laboratory.plt FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'female' AND DATE_PART('year', AGE(CURRENT_DATE, patient.birthday)) >= 50 AND (laboratory.rbc < 3000 OR laboratory.rbc > 9000) AND (laboratory.hgb < 100 OR laboratory.hgb > 200) AND (laboratory.hct < 20 OR laboratory.hct > 40) AND (laboratory.plt < 100000 OR laboratory.plt > 900000)
SELECT patient.id, patient.admission, laboratory.rbc  FROM patient  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE patient.sex = 'female'  AND DATE(patient.birthday) <= DATE('now','-50 years')  AND laboratory.rbc > 15  AND patient.admission IS NOT NULL
SELECT patient.id, patient.admission, laboratory.rbc, laboratory.hgb, laboratory.hct, laboratory.plt FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'female' AND DATE_PART('year', AGE(CURRENT_DATE, patient.birthday)) >= 50 AND (laboratory.rbc < 3000 OR laboratory.rbc > 9000) AND (laboratory.hgb < 120 OR laboratory.hgb > 200) AND (laboratory.hct < 30 OR laboratory.hct > 50) AND (laboratory.plt < 100000 OR laboratory.plt > 900000)
SELECT patient.id, patient.admission, laboratory.rbc FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'female' AND DATE_PART('year', AGE(CURRENT_DATE, patient.birthday)) >= 50 AND laboratory.rbc > 15 AND patient.admission IS NOT NULL
SELECT patient.id, patient.admission, laboratory.rbc, laboratory.hgb, laboratory.hct, laboratory.plt FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'female' AND DATE_PART('year', AGE(CURRENT_DATE, patient.birthday)) >= 50 AND (laboratory.rbc < 3000 OR laboratory.rbc > 9000) AND (laboratory.hgb < 120 OR laboratory.hgb > 200) AND (laboratory.hct < 30 OR laboratory.hct > 50) AND (laboratory.plt < 100000 OR laboratory.plt > 900000)
SELECT patient.id, patient.admission, laboratory.rbc, laboratory.hgb, laboratory.hct, laboratory.plt FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'female' AND DATE_PART('year', AGE(CURRENT_DATE, patient.birthday)) >= 50 AND (laboratory.rbc < 3000 OR laboratory.rbc > 9000) AND (laboratory.hgb < 100 OR laboratory.hgb > 200) AND (laboratory.hct < 20 OR laboratory.hct > 40) AND (laboratory.plt < 100000 OR laboratory.plt > 900000)
SELECT patient.id, patient.admission  FROM patient  JOIN laboratory ON patient.id = laboratory.id  WHERE patient.sex = 'female'  AND DATE(patient.birthday) <= DATE('now','-50 years')  AND laboratory.rbc <> 'normal'  AND patient.admission IS NOT NULL","SELECT patient.id, patient.admission, laboratory.rbc, laboratory.hgb, laboratory.hct, laboratory.plt FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'female' AND DATE_PART('year', AGE(CURRENT_DATE, patient.birthday)) >= 50 AND (laboratory.rbc < 3000 OR laboratory.rbc > 9000) AND (laboratory.hgb < 100 OR laboratory.hgb > 200) AND (laboratory.hct < 20 OR laboratory.hct > 40) AND (laboratory.plt < 100000 OR laboratory.plt > 900000)"
80,68,Which county reported the most number of school closure in the 1980s with school wonership code belonging to Youth Authority Facilities (CEA)?,california_schools,moderate,"SELECT County FROM schools WHERE strftime('%Y', ClosedDate) BETWEEN '1980' AND '1989' AND StatusType = 'Closed' AND SOC = 11 GROUP BY County ORDER BY COUNT(School) DESC LIMIT 1",7,"SELECT satscores.cname, COUNT(schools.cdscode) as total_schools FROM satscores JOIN schools ON satscores.cname = schools.county WHERE schools.charter = 'Y' AND schools.opendate BETWEEN '1980-01-01' AND '1989-12-31' GROUP BY satscores.cname ORDER BY total_schools DESC LIMIT 1
SELECT satscores.cname, COUNT(schools.cdscode) as num_schools FROM satscores JOIN schools ON satscores.cname = schools.county WHERE schools.charter = 'Y' AND schools.opendate >= '1980-01-01' AND schools.opendate < '1990-01-01' GROUP BY satscores.cname ORDER BY num_schools DESC LIMIT 1
SELECT satscores.cname, COUNT(schools.cdscode) as num_schools FROM satscores JOIN schools ON satscores.cname = schools.county WHERE schools.charter = 'Y' AND schools.opendate >= '1980-01-01' AND schools.opendate < '1990-01-01' GROUP BY satscores.cname ORDER BY num_schools DESC LIMIT 1
SELECT satscores.cname, COUNT(schools.cdscode) as num_schools FROM satscores JOIN schools ON satscores.cname = schools.county WHERE schools.charter = 'Y' AND schools.opendate >= '1980-01-01' AND schools.opendate < '1990-01-01' GROUP BY satscores.cname ORDER BY num_schools DESC LIMIT 1
SELECT satscores.cname, COUNT(schools.cdscode) as num_schools FROM satscores JOIN schools ON satscores.cname = schools.county WHERE schools.charter = 'Y' AND schools.opendate >= '1980-01-01' AND schools.opendate < '1990-01-01' GROUP BY satscores.cname ORDER BY num_schools DESC LIMIT 1
SELECT satscores.cname, COUNT(schools.cdscode) as num_schools FROM satscores JOIN schools ON satscores.cname = schools.county WHERE schools.charter = 'Y' AND schools.opendate >= '1980-01-01' AND schools.opendate < '1990-01-01' GROUP BY satscores.cname ORDER BY num_schools DESC LIMIT 1
SELECT satscores.cname, COUNT(schools.cdscode) as num_schools FROM satscores JOIN schools ON satscores.cname = schools.county WHERE schools.charter = 'Y' AND schools.opendate >= '1980-01-01' AND schools.opendate < '1990-01-01' GROUP BY satscores.cname ORDER BY num_schools DESC LIMIT 1","SELECT satscores.cname, COUNT(schools.cdscode) as num_schools FROM satscores JOIN schools ON satscores.cname = schools.county WHERE schools.charter = 'Y' AND schools.opendate >= '1980-01-01' AND schools.opendate < '1990-01-01' GROUP BY satscores.cname ORDER BY num_schools DESC LIMIT 1"
81,825,Identify the gender of the superhero who has the ability of Phoenix Force.,superhero,moderate,SELECT T4.gender FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id INNER JOIN gender AS T4 ON T1.gender_id = T4.id WHERE T3.power_name = 'Phoenix Force',7,"SELECT gender.gender FROM gender JOIN superhero ON gender.id = superhero.gender_id JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Phoenix Force'
SELECT gender.gender FROM gender JOIN superhero ON gender.id = superhero.gender_id JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Phoenix Force'
SELECT gender.gender FROM gender JOIN superhero ON gender.id = superhero.gender_id JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Phoenix Force'
SELECT gender.gender FROM gender JOIN superhero ON gender.id = superhero.gender_id JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Phoenix Force'
SELECT gender.gender FROM gender JOIN superhero ON gender.id = superhero.gender_id JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Phoenix Force'
SELECT gender.gender FROM gender JOIN superhero ON gender.id = superhero.gender_id JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Phoenix Force'
SELECT gender.gender FROM gender JOIN superhero ON gender.id = superhero.gender_id JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Phoenix Force'",SELECT gender.gender FROM gender JOIN superhero ON gender.id = superhero.gender_id JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Phoenix Force'
82,1173,"What is the most common illness that doctors identified among the patients whose lab work was done between 1/1/1985, and 12/31/1995?",thrombosis_prediction,challenging,SELECT T2.Diagnosis FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.`Examination Date` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY T2.Diagnosis ORDER BY COUNT(T2.Diagnosis) DESC LIMIT 1,7,"SELECT patient.diagnosis, COUNT(*) as count FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE (examination.date BETWEEN '1985-01-01' AND '1995-12-31') GROUP BY patient.diagnosis ORDER BY count DESC LIMIT 1
SELECT patient.diagnosis, COUNT(*) as count FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE (examination.date BETWEEN '1985-01-01' AND '1995-12-31') GROUP BY patient.diagnosis ORDER BY count DESC LIMIT 1
SELECT patient.diagnosis, COUNT(*) as count FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE (examination.date BETWEEN '1985-01-01' AND '1995-12-31') GROUP BY patient.diagnosis ORDER BY count DESC LIMIT 1
SELECT patient.diagnosis, COUNT(*) as count FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE (examination.date BETWEEN '1985-01-01' AND '1995-12-31') GROUP BY patient.diagnosis ORDER BY count DESC LIMIT 1
SELECT patient.diagnosis, COUNT(*) as count FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE (examination.date BETWEEN '1985-01-01' AND '1995-12-31') GROUP BY patient.diagnosis ORDER BY count DESC LIMIT 1
SELECT patient.diagnosis, COUNT(*) as count FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE (examination.date BETWEEN '1985-01-01' AND '1995-12-31') GROUP BY patient.diagnosis ORDER BY count DESC LIMIT 1
SELECT patient.diagnosis, COUNT(*) as count FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE (examination.date BETWEEN '1985-01-01' AND '1995-12-31') GROUP BY patient.diagnosis ORDER BY count DESC LIMIT 1","SELECT patient.diagnosis, COUNT(*) as count FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE (examination.date BETWEEN '1985-01-01' AND '1995-12-31') GROUP BY patient.diagnosis ORDER BY count DESC LIMIT 1"
83,1189,"What number of patients with a degree of thrombosis level 2 and ANA pattern of only S, have a level of anti-Cardiolip in antibody (IgM) 20% higher than average?",thrombosis_prediction,challenging,SELECT COUNT(*) FROM Examination WHERE Thrombosis = 2 AND `ANA Pattern` = 'S' AND `aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination WHERE Thrombosis = 2 AND `ANA Pattern` = 'S'),7,"SELECT COUNT(*) FROM patient  JOIN examination ON patient.id = examination.id  JOIN laboratory ON patient.id = laboratory.id  WHERE examination.thrombosis = 2  AND examination.`ana pattern` = 'S'  AND laboratory.igm > (SELECT AVG(laboratory.igm)*1.2 FROM laboratory)
SELECT COUNT(*) FROM patient  JOIN examination ON patient.id = examination.id  JOIN laboratory ON patient.id = laboratory.id  WHERE examination.thrombosis = 2  AND examination.`ana pattern` = 'S'  AND laboratory.igm > (SELECT AVG(laboratory.igm)*1.2 FROM laboratory)
SELECT COUNT(*) FROM patient  JOIN examination ON patient.id = examination.id  JOIN laboratory ON patient.id = laboratory.id  WHERE examination.thrombosis = 2  AND examination.`ana pattern` = 'S'  AND laboratory.igm > (SELECT AVG(laboratory.igm)*1.2 FROM laboratory)
SELECT COUNT(*) FROM patient  JOIN examination ON patient.id = examination.id  JOIN laboratory ON patient.id = laboratory.id  WHERE examination.thrombosis = 2  AND examination.`ana pattern` = 'S'  AND laboratory.igm > (SELECT AVG(laboratory.igm)*1.2 FROM laboratory)
SELECT COUNT(*) FROM patient  JOIN examination ON patient.id = examination.id  JOIN laboratory ON patient.id = laboratory.id  WHERE examination.thrombosis = 2  AND examination.`ana pattern` = 'S'  AND laboratory.igm > (SELECT AVG(laboratory.igm)*1.2 FROM laboratory)
SELECT COUNT(*) FROM patient  JOIN examination ON patient.id = examination.id  JOIN laboratory ON patient.id = laboratory.id  WHERE examination.thrombosis = 2  AND examination.`ana pattern` = 'S'  AND laboratory.igm > (SELECT AVG(laboratory.igm)*1.2 FROM laboratory)
SELECT COUNT(*) FROM patient  JOIN examination ON patient.id = examination.id  JOIN laboratory ON patient.id = laboratory.id  WHERE examination.thrombosis = 2  AND examination.`ana pattern` = 'S'  AND laboratory.igm > (SELECT AVG(laboratory.igm)*1.2 FROM laboratory)",SELECT COUNT(*) FROM patient  JOIN examination ON patient.id = examination.id  JOIN laboratory ON patient.id = laboratory.id  WHERE examination.thrombosis = 2  AND examination.`ana pattern` = 'S'  AND laboratory.igm > (SELECT AVG(laboratory.igm)*1.2 FROM laboratory)
84,1042,List the name of leagues in which the average goals by the home team is higher than the away team in the 2009/2010 season.,european_football_2,challenging,SELECT t1.name FROM League AS t1 INNER JOIN Match AS t2 ON t1.id = t2.league_id WHERE t2.season = '2009/2010' GROUP BY t1.name HAVING (CAST(SUM(t2.home_team_goal) AS REAL) / COUNT(DISTINCT t2.id)) - (CAST(SUM(t2.away_team_goal) AS REAL) / COUNT(DISTINCT t2.id)) > 0,7,"SELECT league.name FROM match JOIN league ON match.league_id = league.id WHERE match.season = '2009/2010' GROUP BY league.name HAVING AVG(match.home_team_goal) > AVG(match.away_team_goal)
SELECT l.name FROM league AS l JOIN match AS m ON l.id = m.league_id WHERE m.season = '2009/2010' GROUP BY l.name HAVING AVG(m.home_team_goal) > AVG(m.away_team_goal)
SELECT league.name FROM match JOIN league ON match.league_id = league.id WHERE match.season = '2009/2010' GROUP BY league.name HAVING AVG(match.home_team_goal) > AVG(match.away_team_goal)
SELECT l.name FROM league AS l JOIN match AS m ON l.id = m.league_id WHERE m.season = '2009/2010' GROUP BY l.name HAVING AVG(m.home_team_goal) > AVG(m.away_team_goal)
SELECT l.name FROM match AS m JOIN league AS l ON m.league_id = l.id WHERE m.season = '2009/2010' GROUP BY l.name HAVING AVG(m.home_team_goal) > AVG(m.away_team_goal)
SELECT l.name FROM match AS m JOIN league AS l ON m.league_id = l.id WHERE m.season = '2009/2010' GROUP BY l.name HAVING AVG(m.home_team_goal) > AVG(m.away_team_goal)
SELECT league.name FROM match JOIN league ON match.league_id = league.id WHERE match.season = '2009/2010' GROUP BY league.name HAVING AVG(match.home_team_goal) > AVG(match.away_team_goal)",SELECT league.name FROM match JOIN league ON match.league_id = league.id WHERE match.season = '2009/2010' GROUP BY league.name HAVING AVG(match.home_team_goal) > AVG(match.away_team_goal)
85,1201,What percentage of patients who were born in 1980 and were diagnosed with RA are women?,thrombosis_prediction,moderate,"SELECT CAST(SUM(CASE WHEN SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM Patient WHERE Diagnosis = 'RA' AND STRFTIME('%Y', Birthday) = '1980'",7,"SELECT (SELECT COUNT(*) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'female' AND strftime('%Y', patient.birthday) = '1980' AND laboratory.ra = 1) / (SELECT COUNT(*) FROM patient WHERE strftime('%Y', patient.birthday) = '1980' AND patient.diagnosis = 'RA') * 100 AS percentage
SELECT (SELECT COUNT(*) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'female' AND strftime('%Y', patient.birthday) = '1980' AND laboratory.ra = 1) / (SELECT COUNT(*) FROM patient WHERE strftime('%Y', patient.birthday) = '1980' AND patient.diagnosis = 'RA') * 100 AS percentage
SELECT (SELECT COUNT(*) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'female' AND strftime('%Y', patient.birthday) = '1980' AND laboratory.ra = 1) / (SELECT COUNT(*) FROM patient WHERE strftime('%Y', patient.birthday) = '1980' AND patient.diagnosis = 'RA') * 100 AS percentage
SELECT (SELECT COUNT(*) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'female' AND strftime('%Y', patient.birthday) = '1980' AND laboratory.ra = 1) / (SELECT COUNT(*) FROM patient WHERE strftime('%Y', patient.birthday) = '1980' AND patient.diagnosis = 'RA') * 100 AS percentage
SELECT (SELECT COUNT(*) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'female' AND strftime('%Y', patient.birthday) = '1980' AND laboratory.ra = 1) / (SELECT COUNT(*) FROM patient WHERE strftime('%Y', patient.birthday) = '1980' AND patient.diagnosis = 'RA') * 100 AS percentage
SELECT (SELECT COUNT(*) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'female' AND strftime('%Y', patient.birthday) = '1980' AND laboratory.ra = 1) / (SELECT COUNT(*) FROM patient WHERE strftime('%Y', patient.birthday) = '1980' AND patient.diagnosis = 'RA') * 100 AS percentage
SELECT (SELECT COUNT(*) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'female' AND strftime('%Y', patient.birthday) = '1980' AND laboratory.ra = 1) / (SELECT COUNT(*) FROM patient WHERE strftime('%Y', patient.birthday) = '1980' AND patient.diagnosis = 'RA') * 100 AS percentage","SELECT (SELECT COUNT(*) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'female' AND strftime('%Y', patient.birthday) = '1980' AND laboratory.ra = 1) / (SELECT COUNT(*) FROM patient WHERE strftime('%Y', patient.birthday) = '1980' AND patient.diagnosis = 'RA') * 100 AS percentage"
86,206,What elements are in the TR004_8_9 bond atoms?,toxicology,challenging,SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR004_8_9',7,"SELECT a.atom_id, a.molecule_id, a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = 'TR004_8_9'
SELECT a.atom_id, a.molecule_id, a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.molecule_id = (     SELECT m.molecule_id     FROM molecule m     WHERE m.label = 'TR004_8_9' )
SELECT a.atom_id, a.molecule_id, a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.molecule_id = (     SELECT m.molecule_id     FROM molecule m     WHERE m.label = 'TR004_8_9' )
SELECT a.atom_id, a.molecule_id, a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.molecule_id = (     SELECT molecule_id     FROM molecule     WHERE label = 'TR004_8_9' )
SELECT a.atom_id, a.molecule_id, a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.molecule_id = (     SELECT molecule_id     FROM molecule     WHERE label = 'TR004_8_9' )
SELECT a.atom_id, a.molecule_id, a.element  FROM atom a  JOIN connected c ON a.atom_id = c.atom_id  JOIN bond b ON c.bond_id = b.bond_id  JOIN molecule m ON a.molecule_id = m.molecule_id  WHERE m.label = 'TR004_8_9'
SELECT a.atom_id, a.molecule_id, a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.molecule_id = (     SELECT m.molecule_id     FROM molecule m     WHERE m.label = 'TR004_8_9' )","SELECT a.atom_id, a.molecule_id, a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.molecule_id = (     SELECT m.molecule_id     FROM molecule m     WHERE m.label = 'TR004_8_9' )"
87,1010,What is the lap record set by Lewis Hamilton in a Formula_1 race?,formula_1,simple,SELECT T1.time FROM lapTimes AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton',7,"SELECT MIN(time) FROM laptimes INNER JOIN drivers ON laptimes.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'
SELECT MIN(time) FROM laptimes INNER JOIN drivers ON laptimes.driverid = drivers.driverid WHERE drivers.surname = 'Hamilton'
SELECT time FROM laptimes INNER JOIN drivers ON laptimes.driverid = drivers.driverid INNER JOIN races ON laptimes.raceid = races.raceid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.name LIKE '%Formula_1%' ORDER BY laptimes.time ASC LIMIT 1
SELECT MIN(time) FROM laptimes INNER JOIN drivers ON laptimes.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'
SELECT time FROM laptimes INNER JOIN drivers ON laptimes.driverid = drivers.driverid INNER JOIN races ON laptimes.raceid = races.raceid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND races.name LIKE '%Formula_1%' ORDER BY laptimes.time ASC LIMIT 1
SELECT MIN(time) FROM laptimes INNER JOIN drivers ON laptimes.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'
SELECT MIN(time) FROM laptimes INNER JOIN drivers ON laptimes.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'",SELECT MIN(time) FROM laptimes INNER JOIN drivers ON laptimes.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'
88,1395,How many members did attend the event 'Community Theater' in 2019?,student_club,moderate,"SELECT COUNT(T2.link_to_member) FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'Community Theater' AND SUBSTR(T1.event_date, 1, 4) = '2019'",7,"SELECT COUNT(DISTINCT attendance.link_to_member)  FROM attendance  JOIN event ON attendance.link_to_event = event.event_id  WHERE event.event_name = 'Community 
SELECT COUNT(DISTINCT attendance.link_to_member)  FROM attendance  JOIN event ON attendance.link_to_event = event.event_id  WHERE event.event_name = 'Community 
SELECT COUNT(DISTINCT attendance.link_to_member)  FROM attendance  JOIN event ON attendance.link_to_event = event.event_id  WHERE event.event_name = 'Community 
SELECT COUNT(DISTINCT attendance.link_to_member)  FROM attendance  JOIN event ON attendance.link_to_event = event.event_id  WHERE event.event_name = 'Community 
SELECT COUNT(DISTINCT attendance.link_to_member)  FROM attendance  JOIN event ON attendance.link_to_event = event.event_id  WHERE event.event_name = 'Community 
SELECT COUNT(DISTINCT attendance.link_to_member)  FROM attendance  INNER JOIN event ON attendance.link_to_event = event.event_id  WHERE event.event_name = 'Community 
SELECT COUNT(DISTINCT attendance.link_to_member)  FROM attendance  JOIN event ON attendance.link_to_event = event.event_id  WHERE event.event_name = 'Community ",SELECT COUNT(DISTINCT attendance.link_to_member)  FROM attendance  JOIN event ON attendance.link_to_event = event.event_id  WHERE event.event_name = 'Community 
89,108,"For the client who applied the biggest loan, what was his/her first amount of transaction after opened the account?",financial,simple,"SELECT T3.amount FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN trans AS T3 ON T2.account_id = T3.account_id ORDER BY T1.amount DESC, T3.date ASC LIMIT 1",7,"SELECT t.amount FROM trans t JOIN (     SELECT l.account_id, MAX(l.amount) as max_loan_amount     FROM loan l     GROUP BY l.account_id     ORDER BY max_loan_amount DESC     LIMIT 1 ) big_loan ON t.account_id = big_loan.account_id WHERE t.type = 'withdrawal' ORDER BY t.date LIMIT 1
SELECT t.amount FROM trans t JOIN (     SELECT l.account_id, MAX(l.amount) as max_loan_amount     FROM loan l     GROUP BY l.account_id     ORDER BY max_loan_amount DESC     LIMIT 1 ) big_loan ON t.account_id = big_loan.account_id WHERE t.type = 'withdrawal' ORDER BY t.date LIMIT 1
SELECT t.amount FROM trans t JOIN (     SELECT l.account_id, MAX(l.amount) as max_loan_amount     FROM loan l     GROUP BY l.account_id     ORDER BY max_loan_amount DESC     LIMIT 1 ) big_loan ON t.account_id = big_loan.account_id WHERE t.type = 'withdrawal' ORDER BY t.date LIMIT 1
SELECT trans.amount FROM trans JOIN account ON trans.account_id = account.account_id JOIN loan ON account.account_id = loan.account_id JOIN disp ON account.account_id = disp.account_id JOIN client ON disp.client_id = client.client_id WHERE loan.amount = (SELECT MAX(loan.amount) FROM loan) ORDER BY trans.date LIMIT 1
SELECT trans.amount FROM trans JOIN account ON trans.account_id = account.account_id JOIN loan ON account.account_id = loan.account_id JOIN disp ON account.account_id = disp.account_id JOIN client ON disp.client_id = client.client_id WHERE loan.amount = (SELECT MAX(loan.amount) FROM loan) ORDER BY trans.date LIMIT 1
SELECT t.amount FROM trans t JOIN (     SELECT l.account_id, MAX(l.amount) as max_loan_amount     FROM loan l     GROUP BY l.account_id     ORDER BY max_loan_amount DESC     LIMIT 1 ) big_loan ON t.account_id = big_loan.account_id WHERE t.type = 'withdrawal' ORDER BY t.date LIMIT 1
SELECT trans.amount FROM trans JOIN account ON trans.account_id = account.account_id JOIN loan ON account.account_id = loan.account_id JOIN disp ON account.account_id = disp.account_id JOIN client ON disp.client_id = client.client_id WHERE loan.amount = (SELECT MAX(loan.amount) FROM loan) ORDER BY trans.date LIMIT 1","SELECT t.amount FROM trans t JOIN (     SELECT l.account_id, MAX(l.amount) as max_loan_amount     FROM loan l     GROUP BY l.account_id     ORDER BY max_loan_amount DESC     LIMIT 1 ) big_loan ON t.account_id = big_loan.account_id WHERE t.type = 'withdrawal' ORDER BY t.date LIMIT 1"
90,829,Which publisher created more superheroes: DC or Marvel Comics? Find the difference in the number of superheroes.,superhero,challenging,SELECT SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id,7,"SELECT publisher.publisher_name, COUNT(superhero.id) as superhero_count FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id GROUP BY publisher.publisher_name ORDER BY superhero_count DESC LIMIT 1
SELECT publisher.publisher_name, COUNT(superhero.id) as superheroes_count FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id GROUP BY publisher.publisher_name ORDER BY superheroes_count DESC LIMIT 1
SELECT publisher.publisher_name, COUNT(superhero.id) as superheroes_count FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id GROUP BY publisher.publisher_name ORDER BY superheroes_count DESC LIMIT 1
SELECT publisher.publisher_name, COUNT(superhero.id) as superheroes_count FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id GROUP BY publisher.publisher_name ORDER BY superheroes_count DESC LIMIT 1
SELECT publisher.publisher_name, COUNT(superhero.id) as superhero_count FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id GROUP BY publisher.publisher_name ORDER BY superhero_count DESC LIMIT 1
SELECT publisher.publisher_name, COUNT(superhero.id) as superhero_count FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id GROUP BY publisher.publisher_name ORDER BY superhero_count DESC LIMIT 1
SELECT publisher.publisher_name, COUNT(superhero.id) as superheroes_count FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id GROUP BY publisher.publisher_name ORDER BY superheroes_count DESC LIMIT 1","SELECT publisher.publisher_name, COUNT(superhero.id) as superheroes_count FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id GROUP BY publisher.publisher_name ORDER BY superheroes_count DESC LIMIT 1"
91,36,Under whose administration is the school with the highest number of students scoring 1500 or more on the SAT? Indicate their full names.,california_schools,challenging,"SELECT T2.AdmFName1, T2.AdmLName1, T2.AdmFName2, T2.AdmLName2, T2.AdmFName3, T2.AdmLName3 FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.NumGE1500 DESC LIMIT 1",7,"SELECT schools.admfname1, schools.admlname1, schools.admemail1, schools.admfname2, schools.admlname2, schools.admemail2, schools.admfname3, schools.admlname3, schools.admemail3 FROM schools JOIN satscores ON schools.cdscode = satscores.cds WHERE satscores.numge1500 >= 1500 ORDER BY satscores.enroll12 DESC LIMIT 1
SELECT schools.admfname1, schools.admlname1, schools.admemail1, schools.admfname2, schools.admlname2, schools.admemail2, schools.admfname3, schools.admlname3, schools.admemail3 FROM schools JOIN satscores ON schools.cdscode = satscores.cds WHERE satscores.numge1500 >= 1500 ORDER BY satscores.enroll12 DESC LIMIT 1
SELECT schools.admfname1, schools.admlname1, schools.admemail1, schools.admfname2, schools.admlname2, schools.admemail2, schools.admfname3, schools.admlname3, schools.admemail3 FROM schools JOIN satscores ON schools.cdscode = satscores.cds WHERE satscores.numge1500 >= 1500 ORDER BY satscores.enroll12 DESC LIMIT 1
SELECT schools.admfname1, schools.admlname1, schools.admemail1, schools.admfname2, schools.admlname2, schools.admemail2, schools.admfname3, schools.admlname3, schools.admemail3 FROM schools JOIN satscores ON schools.cdscode = satscores.cds WHERE satscores.numge1500 >= 1500 ORDER BY satscores.enroll12 DESC LIMIT 1
SELECT schools.admfname1, schools.admlname1, schools.admemail1, schools.admfname2, schools.admlname2, schools.admemail2, schools.admfname3, schools.admlname3, schools.admemail3 FROM schools JOIN satscores ON schools.cdscode = satscores.cds WHERE satscores.numge1500 >= 1500 ORDER BY satscores.enroll12 DESC LIMIT 1
SELECT schools.admfname1, schools.admlname1, schools.admemail1, schools.admfname2, schools.admlname2, schools.admemail2, schools.admfname3, schools.admlname3, schools.admemail3 FROM schools JOIN satscores ON schools.cdscode = satscores.cds WHERE satscores.numge1500 >= 1500 ORDER BY satscores.enroll12 DESC LIMIT 1
SELECT schools.admfname1, schools.admlname1, schools.admemail1, schools.admfname2, schools.admlname2, schools.admemail2, schools.admfname3, schools.admlname3, schools.admemail3 FROM schools JOIN satscores ON schools.cdscode = satscores.cds WHERE satscores.numge1500 >= 1500 ORDER BY satscores.enroll12 DESC LIMIT 1","SELECT schools.admfname1, schools.admlname1, schools.admemail1, schools.admfname2, schools.admlname2, schools.admemail2, schools.admfname3, schools.admlname3, schools.admemail3 FROM schools JOIN satscores ON schools.cdscode = satscores.cds WHERE satscores.numge1500 >= 1500 ORDER BY satscores.enroll12 DESC LIMIT 1"
92,415,What percentage of cards with format commander and legal status do not have a content warning?,card_games,challenging,SELECT CAST(SUM(CASE WHEN T1.hasContentWarning = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'commander' AND T2.status = 'Legal',7,"SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE format = 'commander' AND status != 'banned')) AS percentage FROM cards WHERE format = 'commander' AND status != 'banned' AND hascontentwarning = 0
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE format = 'commander' AND status != 'banned')) AS percentage FROM cards WHERE format = 'commander' AND status != 'banned' AND hascontentwarning = 0
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE format = 'commander' AND status != 'banned')) AS percentage FROM cards WHERE format = 'commander' AND status != 'banned' AND hascontentwarning = 0
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE format = 'commander' AND status != 'banned')) AS percentage FROM cards WHERE format = 'commander' AND status != 'banned' AND hascontentwarning = 0
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE format = 'commander' AND status != 'banned')) AS percentage FROM cards WHERE format = 'commander' AND status != 'banned' AND hascontentwarning = 0
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE format = 'commander' AND status IS NOT NULL AND hascontentwarning = 0)) AS percentage FROM cards WHERE format = 'commander' AND status IS NOT NULL AND hascontentwarning = 0
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE format = 'commander' AND status != 'banned')) AS percentage FROM cards WHERE format = 'commander' AND status != 'banned' AND hascontentwarning = 0",SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE format = 'commander' AND status != 'banned')) AS percentage FROM cards WHERE format = 'commander' AND status != 'banned' AND hascontentwarning = 0
93,290,Which toxic element can be found in the molecule TR151?,toxicology,challenging,SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR151',7,"SELECT element.atom_id, element.molecule_id, element.element  FROM element  INNER JOIN connected ON element.atom_id = connected.atom_id  INNER JOIN bond ON connected.bond_id = bond.bond_id  INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id  WHERE molecule.label = 'TR151'
SELECT element.atom_id, element.molecule_id, element.element  FROM element  JOIN connected ON element.atom_id = connected.atom_id  JOIN bond ON connected.bond_id = bond.bond_id  JOIN molecule ON element.molecule_id = molecule.molecule_id  WHERE molecule.label = 'TR151'
SELECT element.atom_id, element.molecule_id, element.element FROM element JOIN connected ON element.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR151' AND element.element IN ('toxic')
SELECT element.atom_id, element.molecule_id, element.element  FROM element  INNER JOIN connected ON element.atom_id = connected.atom_id  INNER JOIN bond ON connected.bond_id = bond.bond_id  INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id  WHERE molecule.label = 'TR151'
SELECT element.atom_id, element.molecule_id, element.element  FROM element  INNER JOIN connected ON element.atom_id = connected.atom_id  INNER JOIN bond ON connected.bond_id = bond.bond_id  INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id  WHERE molecule.label = 'TR151'
SELECT element.atom_id, element.molecule_id, element.element  FROM element  INNER JOIN connected ON element.atom_id = connected.atom_id  INNER JOIN bond ON connected.bond_id = bond.bond_id  INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id  WHERE molecule.label = 'TR151'
SELECT element.atom_id, element.molecule_id, element.element  FROM element  INNER JOIN connected ON element.atom_id = connected.atom_id  INNER JOIN bond ON connected.bond_id = bond.bond_id  INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id  WHERE molecule.label = 'TR151'","SELECT element.atom_id, element.molecule_id, element.element  FROM element  INNER JOIN connected ON element.atom_id = connected.atom_id  INNER JOIN bond ON connected.bond_id = bond.bond_id  INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id  WHERE molecule.label = 'TR151'"
94,1316,"Please list the phone numbers of the students from the Student_Club that has attended the event ""Women's Soccer"".",student_club,moderate,SELECT T3.phone FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T1.event_name = 'Women''s Soccer',7,"SELECT m.phone  FROM member AS m  JOIN attendance AS a ON m.member_id = a.link_to_member  JOIN event AS e ON a.link_to_event = e.event_id  WHERE e.event_name = 'Women\'s Soccer'
SELECT m.phone FROM member AS m JOIN attendance AS a ON m.member_id = a.link_to_member JOIN event AS e ON a.link_to_event = e.event_id WHERE e.event_name = 'Women's Soccer'
SELECT m.phone  FROM member AS m  JOIN attendance AS a ON m.member_id = a.link_to_member  JOIN event AS e ON a.link_to_event = e.event_id  WHERE e.event_name = 'Women\'s Soccer'
SELECT m.phone FROM member AS m JOIN attendance AS a ON m.member_id = a.link_to_member JOIN event AS e ON a.link_to_event = e.event_id WHERE e.event_name = 'Women's Soccer'
SELECT m.phone FROM member AS m JOIN attendance AS a ON m.member_id = a.link_to_member JOIN event AS e ON a.link_to_event = e.event_id WHERE e.event_name = 'Women's Soccer'
SELECT m.phone FROM member AS m JOIN attendance AS a ON m.member_id = a.link_to_member JOIN event AS e ON a.link_to_event = e.event_id WHERE e.event_name = 'Women\'s Soccer'
SELECT m.phone FROM member AS m JOIN attendance AS a ON a.link_to_member = m.member_id JOIN event AS e ON a.link_to_event = e.event_id WHERE e.event_name = 'Women's Soccer'",SELECT m.phone FROM member AS m JOIN attendance AS a ON m.member_id = a.link_to_member JOIN event AS e ON a.link_to_event = e.event_id WHERE e.event_name = 'Women's Soccer'
95,1308,"Among the patients who have a normal platelet level, how many of them have other symptoms observed?",thrombosis_prediction,moderate,SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.PLT > 100 AND T2.PLT < 400 AND T1.Diagnosis IS NOT NULL,7,"SELECT COUNT(*) FROM patient  INNER JOIN examination ON patient.id = examination.id  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.plt >= 150 AND laboratory.plt <= 300 AND examination.symptoms IS NOT NULL
SELECT COUNT(*) FROM patient  INNER JOIN examination ON patient.id = examination.id  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.plt >= 150 AND laboratory.plt <= 300 AND examination.symptoms IS NOT NULL
SELECT COUNT(*) FROM patient  INNER JOIN examination ON patient.id = examination.id  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.plt >= 150 AND laboratory.plt <= 300 AND examination.symptoms IS NOT NULL
SELECT COUNT(*) FROM patient  INNER JOIN examination ON patient.id = examination.id  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.plt >= 150 AND laboratory.plt <= 300 AND examination.symptoms IS NOT NULL
SELECT COUNT(*) FROM patient  INNER JOIN examination ON patient.id = examination.id  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.plt >= 150 AND laboratory.plt <= 300 AND examination.symptoms IS NOT NULL
SELECT COUNT(*) FROM patient  INNER JOIN examination ON patient.id = examination.id  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.plt >= 150 AND laboratory.plt <= 300 AND examination.symptoms IS NOT NULL
SELECT COUNT(*) FROM patient  INNER JOIN examination ON patient.id = examination.id  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.plt >= 150 AND laboratory.plt <= 300 AND examination.symptoms IS NOT NULL",SELECT COUNT(*) FROM patient  INNER JOIN examination ON patient.id = examination.id  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.plt >= 150 AND laboratory.plt <= 300 AND examination.symptoms IS NOT NULL
96,1109,"How was the build up play dribbling class for ""LEI"" on 2015/9/10?",european_football_2,moderate,"SELECT t2.buildUpPlayDribblingClass FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t1.team_short_name = 'LEI' AND SUBSTR(t2.`date`, 1, 10) = '2015-09-10'",7,"SELECT buildupplaydribblingclass  FROM team_attributes  INNER JOIN match ON team_attributes.team_api_id = match.home_team_api_id OR team_attributes.team_api_id = match.away_team_api_id  WHERE match.date = '2015-09-10' AND (team_attributes.team_api_id = match.home_team_api_id OR team_attributes.team_api_id = match.away_team_api_id) AND (team_attributes.team_api_id IN (SELECT team_api_id FROM team WHERE team_long_name = 'LEI'))
SELECT buildupplaydribblingclass  FROM team_attributes  INNER JOIN match ON team_attributes.team_api_id = match.home_team_api_id OR team_attributes.team_api_id = match.away_team_api_id  WHERE match.date = '2015-09-10' AND (team_attributes.team_api_id = match.home_team_api_id OR team_attributes.team_api_id = match.away_team_api_id) AND (team_attributes.team_api_id IN (SELECT team_api_id FROM team WHERE team_long_name = 'LEI'))
SELECT buildupplaydribblingclass  FROM team_attributes  INNER JOIN match ON team_attributes.team_api_id = match.home_team_api_id OR team_attributes.team_api_id = match.away_team_api_id  WHERE match.date = '2015-09-10' AND (team_attributes.team_api_id = match.home_team_api_id OR team_attributes.team_api_id = match.away_team_api_id) AND (team_attributes.team_api_id IN (SELECT team_api_id FROM team WHERE team_long_name = 'LEI'))
SELECT buildupplaydribblingclass  FROM team_attributes  JOIN match ON team_attributes.team_api_id = match.home_team_api_id OR team_attributes.team_api_id = match.away_team_api_id  JOIN team ON team_attributes.team_api_id = team.team_api_id  WHERE team.team_long_name = 'LEI' AND match.date = '2015-09-10'
SELECT buildupplaydribblingclass  FROM team_attributes  JOIN match ON team_attributes.team_api_id = match.home_team_api_id OR team_attributes.team_api_id = match.away_team_api_id  JOIN team ON team_attributes.team_api_id = team.team_api_id  WHERE team.team_long_name = 'LEI' AND match.date = '2015-09-10'
SELECT buildupplaydribblingclass  FROM team_attributes  INNER JOIN match ON team_attributes.team_api_id = match.home_team_api_id OR team_attributes.team_api_id = match.away_team_api_id  WHERE match.date = '2015-09-10' AND (team_attributes.team_api_id = match.home_team_api_id OR team_attributes.team_api_id = match.away_team_api_id) AND (team_attributes.team_api_id IN (SELECT team_api_id FROM team WHERE team_long_name = 'LEI'))
SELECT buildupplaydribblingclass  FROM team_attributes  JOIN match ON team_attributes.team_api_id = match.home_team_api_id OR team_attributes.team_api_id = match.away_team_api_id  JOIN team ON team_attributes.team_api_id = team.team_api_id  WHERE team.team_long_name = 'LEI' AND match.date = '2015-09-10'",SELECT buildupplaydribblingclass  FROM team_attributes  INNER JOIN match ON team_attributes.team_api_id = match.home_team_api_id OR team_attributes.team_api_id = match.away_team_api_id  WHERE match.date = '2015-09-10' AND (team_attributes.team_api_id = match.home_team_api_id OR team_attributes.team_api_id = match.away_team_api_id) AND (team_attributes.team_api_id IN (SELECT team_api_id FROM team WHERE team_long_name = 'LEI'))
97,1113,"For the team ""Hannover 96"", what was its defence aggression class on 2015/9/10?",european_football_2,moderate,SELECT t2.chanceCreationShootingClass FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t1.team_long_name = 'Hannover 96' AND t2.`date` LIKE '2015-09-10%',7,"SELECT team_attributes.defenceaggressionclass  FROM team_attributes  JOIN team ON team_attributes.team_api_id = team.team_api_id  WHERE team.team_long_name = 'Hannover 96' AND team_attributes.date = '2015-09-10'
SELECT team_attributes.defenceaggressionclass  FROM team_attributes  JOIN team ON team_attributes.team_api_id = team.team_api_id  WHERE team.team_long_name = 'Hannover 96' AND team_attributes.date = '2015-09-10'
SELECT team_attributes.defenceaggressionclass  FROM team_attributes  JOIN team ON team_attributes.team_api_id = team.team_api_id  WHERE team.team_long_name = ""Hannover 96"" AND team_attributes.date = ""2015-09-10""
SELECT team_attributes.defenceaggressionclass  FROM team_attributes  JOIN team ON team_attributes.team_api_id = team.team_api_id  WHERE team.team_long_name = 'Hannover 96' AND team_attributes.date = '2015-09-10'
SELECT team_attributes.defenceaggressionclass  FROM team_attributes  JOIN team ON team_attributes.team_api_id = team.team_api_id  WHERE team.team_long_name = 'Hannover 96' AND team_attributes.date = '2015-09-10'
SELECT team_attributes.defenceaggressionclass  FROM team_attributes  JOIN team ON team_attributes.team_api_id = team.team_api_id  WHERE team.team_long_name = 'Hannover 96' AND team_attributes.date = '2015-09-10'
SELECT team_attributes.defenceaggressionclass  FROM team_attributes  JOIN team ON team_attributes.team_api_id = team.team_api_id  WHERE team.team_long_name = 'Hannover 96' AND team_attributes.date = '2015-09-10'",SELECT team_attributes.defenceaggressionclass  FROM team_attributes  JOIN team ON team_attributes.team_api_id = team.team_api_id  WHERE team.team_long_name = 'Hannover 96' AND team_attributes.date = '2015-09-10'
98,634,"Among posts by Harvey Motulsky and Noah Snyder, which one has higher popularity?",codebase_community,challenging,SELECT T1.DisplayName FROM users AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.UserId INNER JOIN posts AS T3 ON T2.PostId = T3.Id WHERE T1.DisplayName = 'Harvey Motulsky' OR T1.DisplayName = 'Noah Snyder' GROUP BY T1.DisplayName ORDER BY SUM(T3.ViewCount) DESC LIMIT 1,7,"SELECT posts.id, posts.score, users.displayname FROM posts JOIN users ON posts.owneruserid = users.id WHERE users.displayname IN ('Harvey Motulsky', 'Noah Snyder') ORDER BY posts.score DESC LIMIT 1
SELECT posts.id, posts.score, users.displayname FROM posts JOIN users ON posts.owneruserid = users.id WHERE users.displayname IN ('Harvey Motulsky', 'Noah Snyder') ORDER BY posts.score DESC LIMIT 1
SELECT posts.id, posts.score, users.displayname FROM posts JOIN users ON posts.owneruserid = users.id WHERE users.displayname IN ('Harvey Motulsky', 'Noah Snyder') ORDER BY posts.score DESC LIMIT 1
SELECT posts.id, posts.score, users.displayname FROM posts JOIN users ON posts.owneruserid = users.id WHERE users.displayname IN ('Harvey Motulsky', 'Noah Snyder') ORDER BY posts.score DESC LIMIT 1
SELECT posts.id, posts.score, users.displayname FROM posts JOIN users ON posts.owneruserid = users.id WHERE users.displayname IN ('Harvey Motulsky', 'Noah Snyder') ORDER BY posts.score DESC LIMIT 1
SELECT posts.id, posts.score, users.displayname FROM posts JOIN users ON posts.owneruserid = users.id WHERE users.displayname IN ('Harvey Motulsky', 'Noah Snyder') ORDER BY posts.score DESC LIMIT 1
SELECT posts.id, posts.score, users.displayname FROM posts JOIN users ON posts.owneruserid = users.id WHERE users.displayname IN ('Harvey Motulsky', 'Noah Snyder') ORDER BY posts.score DESC LIMIT 1","SELECT posts.id, posts.score, users.displayname FROM posts JOIN users ON posts.owneruserid = users.id WHERE users.displayname IN ('Harvey Motulsky', 'Noah Snyder') ORDER BY posts.score DESC LIMIT 1"
99,1265,How many patients have a normal level of anti-ribonuclear protein and have been admitted to the hospital?,thrombosis_prediction,moderate,SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RNP = 'negative' OR T2.RNP = '0' AND T1.Admission = '+',7,"SELECT COUNT(*) FROM patient  INNER JOIN examination ON patient.id = examination.id  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE examination.diagnosis = 'admission' AND laboratory.rnp = 'normal level'
SELECT COUNT(*) FROM patient  INNER JOIN examination ON patient.id = examination.id  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE examination.diagnosis = 'hospital' AND laboratory.rnp = 'normal level' 
SELECT COUNT(*) FROM patient  INNER JOIN examination ON patient.id = examination.id  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE examination.diagnosis = 'admission' AND laboratory.rnp = 'normal level'
SELECT COUNT(*) FROM patient  INNER JOIN examination ON patient.id = examination.id  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE examination.diagnosis = 'admission' AND laboratory.rnp = 'normal level'
SELECT COUNT(*) FROM patient  INNER JOIN examination ON patient.id = examination.id  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE examination.diagnosis = 'admission' AND laboratory.rnp = 'normal level'
SELECT COUNT(DISTINCT patient.id)  FROM patient  JOIN examination ON patient.id = examination.id  JOIN laboratory ON patient.id = laboratory.id  WHERE examination.diagnosis = 'hospital'  AND laboratory.rnp = 'normal level' 
SELECT COUNT(patient.id)  FROM patient  INNER JOIN examination ON patient.id = examination.id  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE examination.diagnosis = 'hospital' AND laboratory.rnp = 'normal level' ",SELECT COUNT(*) FROM patient  INNER JOIN examination ON patient.id = examination.id  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE examination.diagnosis = 'admission' AND laboratory.rnp = 'normal level'
100,1076,"What is the difference of the average ball control score between Abdou Diallo and Aaron Appindangoye
?",european_football_2,challenging,SELECT CAST(SUM(CASE WHEN t1.player_name = 'Abdou Diallo' THEN t2.ball_control ELSE 0 END) AS REAL) / COUNT(CASE WHEN t1.player_name = 'Abdou Diallo' THEN t2.id ELSE NULL END) - CAST(SUM(CASE WHEN t1.player_name = 'Aaron Appindangoye' THEN t2.ball_control ELSE 0 END) AS REAL) / COUNT(CASE WHEN t1.player_name = 'Aaron Appindangoye' THEN t2.id ELSE NULL END) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id,7,"SELECT AVG(pa.ball_control) AS average_ball_control FROM player AS p JOIN player_attributes AS pa ON p.player_api_id = pa.player_api_id WHERE p.player_name IN ('Abdou Diallo', 'Aaron Appindangoye') GROUP BY p.player_name
SELECT AVG(pa.ball_control) AS average_ball_control FROM player AS p JOIN player_attributes AS pa ON p.player_api_id = pa.player_api_id WHERE p.player_name IN ('Abdou Diallo', 'Aaron Appindangoye') GROUP BY p.player_name
SELECT AVG(pa.ball_control) AS average_ball_control FROM player AS p JOIN player_attributes AS pa ON p.player_api_id = pa.player_api_id WHERE p.player_name IN ('Abdou Diallo', 'Aaron Appindangoye') GROUP BY p.player_name
SELECT AVG(pa.ball_control) AS average_ball_control FROM player AS p JOIN player_attributes AS pa ON p.player_api_id = pa.player_api_id WHERE p.player_name IN ('Abdou Diallo', 'Aaron Appindangoye') GROUP BY p.player_name
SELECT AVG(pa.ball_control) AS average_ball_control FROM player AS p JOIN player_attributes AS pa ON p.player_api_id = pa.player_api_id WHERE p.player_name IN ('Abdou Diallo', 'Aaron Appindangoye') GROUP BY p.player_name
SELECT AVG(pa.ball_control) AS average_ball_control FROM player AS p JOIN player_attributes AS pa ON p.player_api_id = pa.player_api_id WHERE p.player_name IN ('Abdou Diallo', 'Aaron Appindangoye') GROUP BY p.player_name
SELECT AVG(pa.ball_control) AS average_ball_control FROM player AS p JOIN player_attributes AS pa ON p.player_api_id = pa.player_api_id WHERE p.player_name IN ('Abdou Diallo', 'Aaron Appindangoye') GROUP BY p.player_name","SELECT AVG(pa.ball_control) AS average_ball_control FROM player AS p JOIN player_attributes AS pa ON p.player_api_id = pa.player_api_id WHERE p.player_name IN ('Abdou Diallo', 'Aaron Appindangoye') GROUP BY p.player_name"
101,477,"Which of these artists have designed a card in the set Coldsnap, Jeremy Jarvis, Aaron Miller or Chippy?",card_games,challenging,SELECT T1.artist FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE (T2.name = 'Coldsnap' AND T1.artist = 'Chippy') OR (T2.name = 'Coldsnap' AND T1.artist = 'Aaron Miller') OR (T2.name = 'Coldsnap' AND T1.artist = 'Jeremy Jarvis') GROUP BY T1.artist,7,"SELECT name  FROM cards  WHERE artist = 'Jeremy Jarvis' OR artist = 'Aaron Miller' OR artist = 'Chippy' AND setcode = 'COLD'
SELECT name FROM cards WHERE artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy') AND setcode = 'COLD'
SELECT name FROM cards WHERE artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy') AND setcode = 'COLD'
SELECT name  FROM cards  WHERE artist = 'Jeremy Jarvis' OR artist = 'Aaron Miller' OR artist = 'Chippy' AND setcode = 'COLD'
SELECT name FROM cards WHERE artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy') AND setcode = 'COLD'
SELECT name FROM cards WHERE artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy') AND setcode = 'COLD'
SELECT name FROM cards WHERE artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy') AND setcode = 'COLD'","SELECT name FROM cards WHERE artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy') AND setcode = 'COLD'"
102,1124,Who are the players that tend to be attacking when their mates were doing attack moves? List down their name.,european_football_2,moderate,SELECT DISTINCT t1.player_name FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t2.attacking_work_rate = 'high',7,"SELECT player.player_name FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id JOIN match ON player.player_api_id IN (match.home_player_1, match.home_player_2, match.home_player_3, match.home_player_4, match.home_player_5, match.home_player_6, match.home_player_7, match.home_player_8, match.home_player_9, match.home_player_10, match.home_player_11, match.away_player_1, match.away_player_2, match.away_player_3, match.away_player_4, match.away_player_5, match.away_player_6, match.away_player_7, match.away_player_8, match.away_player_9, match.away_player_10, match.away_player_11) WHERE player_attributes.attacking_work_rate = 'High' AND match.home_team_goal > match.away_team_goal
SELECT player.player_name FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.attacking_work_rate = 'High' AND player_attributes.defensive_work_rate = 'Low'
SELECT player.player_name FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.attacking_work_rate = 'High' AND player_attributes.defensive_work_rate = 'Low'
SELECT player.player_name FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id JOIN match ON (match.home_player_1 = player.player_api_id OR match.home_player_2 = player.player_api_id OR match.home_player_3 = player.player_api_id OR match.home_player_4 = player.player_api_id OR match.home_player_5 = player.player_api_id OR match.home_player_6 = player.player_api_id OR match.home_player_7 = player.player_api_id OR match.home_player_8 = player.player_api_id OR match.home_player_9 = player.player_api_id OR match.home_player_10 = player.player_api_id OR match.home_player_11 = player.player_api_id OR match.away_player_1 = player.player_api_id OR match.away_player_2 = player.player_api_id OR match.away_player_3 = player.player_api_id OR match.away_player_4 = player.player_api_id OR match.away_player_5 = player.player_api_id OR match
SELECT player.player_name FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.attacking_work_rate = 'High' AND player_attributes.defensive_work_rate = 'Low'
SELECT player.player_name FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.attacking_work_rate = 'High' AND player_attributes.defensive_work_rate = 'Low'
SELECT player.player_name FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.attacking_work_rate = 'High' AND player_attributes.defensive_work_rate = 'Low'",SELECT player.player_name FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.attacking_work_rate = 'High' AND player_attributes.defensive_work_rate = 'Low'
103,1117,What are the player api id of 10 heaviest players?,european_football_2,simple,SELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 10,7,"SELECT player_api_id FROM player ORDER BY weight DESC LIMIT 10
SELECT player_api_id FROM player ORDER BY weight DESC LIMIT 10
SELECT player_api_id FROM player ORDER BY weight DESC LIMIT 10
SELECT player_api_id FROM player ORDER BY weight DESC LIMIT 10
SELECT player_api_id FROM player ORDER BY weight DESC LIMIT 10
SELECT player_api_id FROM player ORDER BY weight DESC LIMIT 10
SELECT player_api_id FROM player ORDER BY weight DESC LIMIT 10",SELECT player_api_id FROM player ORDER BY weight DESC LIMIT 10
104,1464,Write the full names of students who received funds on the date of 9/9/2019 and include the amount received.,student_club,challenging,"SELECT DISTINCT T3.first_name, T3.last_name, T4.amount FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T3.member_id = T2.link_to_member INNER JOIN income AS T4 ON T4.link_to_member = T3.member_id WHERE T4.date_received = '2019-09-09'",7,"SELECT member.first_name, member.last_name, income.amount FROM member JOIN income ON member.member_id = income.link_to_member WHERE income.date_received = '2019-09-09'
SELECT member.first_name, member.last_name, income.amount FROM member JOIN income ON member.member_id = income.link_to_member WHERE income.date_received = '2019-09-09'
SELECT member.first_name, member.last_name, income.amount FROM member JOIN income ON member.member_id = income.link_to_member WHERE income.date_received = '2019-09-09'
SELECT member.first_name, member.last_name, income.amount FROM member JOIN income ON member.member_id = income.link_to_member WHERE income.date_received = '2019-09-09'
SELECT member.first_name, member.last_name, income.amount FROM member JOIN income ON member.member_id = income.link_to_member WHERE income.date_received = '2019-09-09'
SELECT member.first_name, member.last_name, income.amount FROM member JOIN income ON member.member_id = income.link_to_member WHERE income.date_received = '2019-09-09'
SELECT member.first_name, member.last_name, income.amount FROM member INNER JOIN income ON member.member_id = income.link_to_member WHERE income.date_received = '2019-09-09'","SELECT member.first_name, member.last_name, income.amount FROM member JOIN income ON member.member_id = income.link_to_member WHERE income.date_received = '2019-09-09'"
105,1458,Calculate the difference in the percentage of members in New Jersey and Vermont.,student_club,moderate,SELECT CAST((SUM(CASE WHEN T2.state = 'New Jersey' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.state = 'Vermont' THEN 1 ELSE 0 END)) AS REAL) * 100 / COUNT(T1.member_id) AS diff FROM member AS T1 INNER JOIN zip_code AS T2 ON T2.zip_code = T1.zip,7,"SELECT (     (         SELECT COUNT(*)          FROM member          WHERE state = 'New Jersey'      ) /      (         SELECT COUNT(*)          FROM member          WHERE state = 'Vermont'      ) * 100 ) AS percentage_difference
SELECT (     (         SELECT COUNT(*)          FROM member          WHERE state = 'New Jersey'      ) -      (         SELECT COUNT(*)          FROM member          WHERE state = 'Vermont'      ) ) /  (     (         SELECT COUNT(*)          FROM member          WHERE state IN ('New Jersey', 'Vermont')      ) / 100.0 )
SELECT (     (         SELECT COUNT(*)          FROM member          WHERE state = 'New Jersey'      ) -      (         SELECT COUNT(*)          FROM member          WHERE state = 'Vermont'      ) ) /  (     (         SELECT COUNT(*)          FROM member          WHERE state IN ('New Jersey', 'Vermont')      ) / 100.0 )
SELECT (     (         SELECT COUNT(*)          FROM member          WHERE state = 'New Jersey'      ) /      (         SELECT COUNT(*)          FROM member          WHERE state = 'Vermont'      ) * 100 ) AS percentage_difference
SELECT (     (         SELECT COUNT(*)          FROM member          WHERE state = 'New Jersey'      ) -      (         SELECT COUNT(*)          FROM member          WHERE state = 'Vermont'      ) ) /  (     (         SELECT COUNT(*)          FROM member          WHERE state IN ('New Jersey', 'Vermont')      ) / 100.0 )
SELECT (     (         SELECT COUNT(*)          FROM member          WHERE state = 'New Jersey'      ) -      (         SELECT COUNT(*)          FROM member          WHERE state = 'Vermont'      ) ) /  (     (         SELECT COUNT(*)          FROM member          WHERE state IN ('New Jersey', 'Vermont')      ) / 100.0 )
SELECT (     (         SELECT COUNT(*)          FROM member          WHERE state = 'New Jersey'      ) -      (         SELECT COUNT(*)          FROM member          WHERE state = 'Vermont'      ) ) /  (     (         SELECT COUNT(*)          FROM member          WHERE state IN ('New Jersey', 'Vermont')      ) / 100.0 )","SELECT (     (         SELECT COUNT(*)          FROM member          WHERE state = 'New Jersey'      ) -      (         SELECT COUNT(*)          FROM member          WHERE state = 'Vermont'      ) ) /  (     (         SELECT COUNT(*)          FROM member          WHERE state IN ('New Jersey', 'Vermont')      ) / 100.0 )"
106,473,Is the set of cards with Adarkar Valkyrie only available outside the United States?,card_games,moderate,"SELECT IIF(isForeignOnly = 1, 'YES', 'NO') FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE T1.name = 'Adarkar Valkyrie'",7,"SELECT * FROM cards WHERE name = 'Adarkar Valkyrie' AND availability NOT LIKE '%US%'
SELECT * FROM cards WHERE name = 'Adarkar Valkyrie' AND availability NOT LIKE '%US%'
SELECT * FROM cards WHERE name = 'Adarkar Valkyrie' AND availability NOT LIKE '%US%'
SELECT * FROM cards WHERE name = 'Adarkar Valkyrie' AND availability NOT LIKE '%US%'
SELECT * FROM cards WHERE name = 'Adarkar Valkyrie' AND availability NOT LIKE '%US%'
SELECT * FROM cards WHERE name = 'Adarkar Valkyrie' AND availability NOT LIKE '%US%'
SELECT * FROM cards WHERE name = 'Adarkar Valkyrie' AND availability NOT LIKE '%US%'",SELECT * FROM cards WHERE name = 'Adarkar Valkyrie' AND availability NOT LIKE '%US%'
107,87,"What are the valid e-mail addresses of the administrator of the school located in the San Bernardino county, City of San Bernardino City Unified that opened between 1/1/2009 to 12/31/2010 whose school types are public Intermediate/Middle Schools and Unified Schools?",california_schools,challenging,"SELECT T2.AdmEmail1, T2.AdmEmail2 FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'San Bernardino' AND T2.City = 'San Bernardino' AND T2.DOC = 54 AND strftime('%Y', T2.OpenDate) BETWEEN '2009' AND '2010' AND T2.SOC = 62",7,"SELECT schools.admemail1, schools.admemail2, schools.admemail3 FROM schools JOIN satscores ON schools.cdscode = satscores.cds JOIN frpm ON schools.cdscode = frpm.cdscode WHERE schools.city = 'San Bernardino' AND schools.county = 'San Bernardino County' AND schools.opendate BETWEEN '2009-01-01' AND '2010-12-31' AND (schools.school LIKE '%Intermediate%' OR schools.school LIKE '%Middle%' OR schools.school LIKE '%Unified%') AND schools.statustype = 'Administrator' AND frpm.educational_option_type = 'Public' AND frpm.nslp_provision_status = 'Yes' AND frpm.charter_school = 'Yes' AND frpm.charter_funding_type = 'Public' AND frpm.irc = 'Yes' AND (frpm.low_grade <= 5 AND frpm.high_grade >= 5) AND (frpm.enrollment_k_12 >= 5 AND frpm.frpm_count_k_12 >= 5) AND (frpm.percent_
SELECT schools.admemail1, schools.admemail2, schools.admemail3 FROM schools JOIN satscores ON schools.cdscode = satscores.cds JOIN frpm ON schools.cdscode = frpm.cdscode WHERE schools.county = 'San Bernardino' AND schools.city = 'San Bernardino City Unified' AND schools.opendate BETWEEN '2009-01-01' AND '2010-12-31' AND (schools.school LIKE '%Intermediate/Middle School%' OR schools.school LIKE '%Unified School%') AND frpm.educational_option_type = 'Public' AND satscores.rtype = 'Administrator' 
SELECT schools.admemail1, schools.admemail2, schools.admemail3 FROM schools JOIN satscores ON schools.cdscode = satscores.cds JOIN frpm ON schools.cdscode = frpm.cdscode WHERE schools.city = 'San Bernardino' AND schools.county = 'San Bernardino' AND schools.opendate BETWEEN '2009-01-01' AND '2010-12-31' AND (schools.school LIKE '%Intermediate%' OR schools.school LIKE '%Middle%' OR schools.school LIKE '%Unified%') AND schools.statustype = 'Administrator' AND frpm.educationaloptiontype = 'Public' AND frpm.nslpstatus = 'Yes' AND frpm.charter = 'No' AND frpm.frpmcountk12 >= 0 AND frpm.percenteligiblerpmk12 >= 0 AND frpm.frpmcountages517 >= 0 AND frpm.percenteligiblerpmages517 >= 0
SELECT schools.admemail1, schools.admemail2, schools.admemail3 FROM schools JOIN satscores ON schools.cdscode = satscores.cds JOIN frpm ON schools.cdscode = frpm.cdscode WHERE schools.city = 'San Bernardino' AND schools.county = 'San Bernardino' AND schools.opendate BETWEEN '2009-01-01' AND '2010-12-31' AND (schools.school LIKE '%Intermediate%' OR schools.school LIKE '%Middle%' OR schools.school LIKE '%Unified%') AND schools.statustype = 'Administrator' AND frpm.educational_option_type = 'Public' AND frpm.nslp_provision_status = 'Yes' AND schools.charter = 'Yes' AND schools.frpm_count_k_12 >= 0 AND schools.frpm_count_ages_5_17 >= 0
SELECT schools.admemail1, schools.admemail2, schools.admemail3 FROM schools JOIN satscores ON schools.cdscode = satscores.cds JOIN frpm ON schools.cdscode = frpm.cdscode WHERE schools.city = 'San Bernardino' AND schools.county = 'San Bernardino' AND schools.opendate BETWEEN '2009-01-01' AND '2010-12-31' AND (schools.school LIKE '%Intermediate%' OR schools.school LIKE '%Middle%' OR schools.school LIKE '%Unified%') AND schools.statustype = 'Administrator' AND frpm.educationaloptiontype = 'Public' AND frpm.nslpstatus = 'Yes' AND frpm.charter = 'Yes' AND frpm.frpmcountk12 >= 0 AND frpm.percenteligfreek12 >= 0 AND frpm.percenteligfrpmk12 >= 0
SELECT schools.admemail1, schools.admemail2, schools.admemail3 FROM schools JOIN satscores ON schools.cdscode = satscores.cds JOIN frpm ON schools.cdscode = frpm.cdscode WHERE schools.city = 'San Bernardino' AND schools.county = 'San Bernardino' AND schools.opendate BETWEEN '2009-01-01' AND '2010-12-31' AND (schools.school LIKE '%Intermediate%' OR schools.school LIKE '%Middle%' OR schools.school LIKE '%Unified%') AND schools.statustype = 'Administrator' AND frpm.educationaloptiontype = 'Public' AND frpm.nslpstatus = 'Yes' AND frpm.charter = 'No' AND frpm.frpmcountk12 >= 0 AND frpm.percenteligibilityfrpmk12 >= 0 AND frpm.frpmcountages517 >= 0 AND frpm.percenteligibilityfrpmages517 >= 0
SELECT schools.admemail1, schools.admemail2, schools.admemail3 FROM schools JOIN satscores ON schools.cdscode = satscores.cds JOIN frpm ON schools.cdscode = frpm.cdscode WHERE schools.county = 'San Bernardino' AND schools.city = 'San Bernardino City Unified' AND schools.opendate BETWEEN '2009-01-01' AND '2010-12-31' AND (schools.school LIKE '%Intermediate/Middle School%' OR schools.school LIKE '%Unified School%') AND frpm.educational_option_type = 'Public' AND satscores.rtype = 'Administrator' AND frpm.nslp_provision_status = 'Valid e-mail address'","SELECT schools.admemail1, schools.admemail2, schools.admemail3 FROM schools JOIN satscores ON schools.cdscode = satscores.cds JOIN frpm ON schools.cdscode = frpm.cdscode WHERE schools.city = 'San Bernardino' AND schools.county = 'San Bernardino County' AND schools.opendate BETWEEN '2009-01-01' AND '2010-12-31' AND (schools.school LIKE '%Intermediate%' OR schools.school LIKE '%Middle%' OR schools.school LIKE '%Unified%') AND schools.statustype = 'Administrator' AND frpm.educational_option_type = 'Public' AND frpm.nslp_provision_status = 'Yes' AND frpm.charter_school = 'Yes' AND frpm.charter_funding_type = 'Public' AND frpm.irc = 'Yes' AND (frpm.low_grade <= 5 AND frpm.high_grade >= 5) AND (frpm.enrollment_k_12 >= 5 AND frpm.frpm_count_k_12 >= 5) AND (frpm.percent_"
108,719,"Among the superheroes with the super power of ""Super Strength"", how many of them have a height of over 200cm?",superhero,moderate,SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Super Strength' AND T1.height_cm > 200,7,"SELECT COUNT(*) FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength' AND superhero.height_cm > 200
SELECT COUNT(*) FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength' AND superhero.height_cm > 200
SELECT COUNT(*) FROM superhero JOIN hero_power ON hero_power.hero_id = superhero.id JOIN superpower ON superpower.id = hero_power.power_id WHERE superpower.power_name = 'Super Strength' AND superhero.height_cm > 200
SELECT COUNT(*) FROM superhero  JOIN hero_power ON hero_power.hero_id = superhero.id  JOIN superpower ON superpower.id = hero_power.power_id  WHERE superpower.power_name = 'Super Strength' AND superhero.height_cm > 200
SELECT COUNT(*) FROM superhero JOIN hero_power ON hero_power.hero_id = superhero.id JOIN superpower ON superpower.id = hero_power.power_id WHERE superpower.power_name = 'Super Strength' AND superhero.height_cm > 200
SELECT COUNT(*) FROM superhero  INNER JOIN hero_power ON superhero.id = hero_power.hero_id  INNER JOIN superpower ON hero_power.power_id = superpower.id  WHERE superpower.power_name = 'Super Strength' AND superhero.height_cm > 200
SELECT COUNT(*) FROM superhero  INNER JOIN hero_power ON superhero.id = hero_power.hero_id  INNER JOIN superpower ON hero_power.power_id = superpower.id  WHERE superpower.power_name = 'Super Strength' AND superhero.height_cm > 200",SELECT COUNT(*) FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength' AND superhero.height_cm > 200
109,416,What percentage of cards without power are in French?,card_games,challenging,SELECT CAST(SUM(CASE WHEN T2.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.power IS NULL OR T1.power = '*',7,"SELECT (SELECT COUNT(*) FROM cards WHERE power IS NULL AND language = 'French') / (SELECT COUNT(*) FROM cards WHERE language = 'French') * 100
SELECT (SELECT COUNT(*) FROM cards WHERE power IS NULL AND language = 'French') / (SELECT COUNT(*) FROM cards WHERE language = 'French') * 100
SELECT (     SELECT COUNT(*)      FROM cards      WHERE power IS NULL AND language = 'French' ) / (     SELECT COUNT(*)      FROM cards      WHERE language = 'French' ) * 100 AS percentage
SELECT (SELECT COUNT(*) FROM cards WHERE power IS NULL AND language = 'French') / (SELECT COUNT(*) FROM cards WHERE language = 'French') * 100
SELECT (SELECT COUNT(*) FROM cards WHERE power IS NULL AND language = 'French') / (SELECT COUNT(*) FROM cards WHERE language = 'French') * 100
SELECT (     SELECT COUNT(*)      FROM cards      WHERE power IS NULL AND language = 'French' ) / (     SELECT COUNT(*)      FROM cards      WHERE language = 'French' ) * 100 AS percentage
SELECT (SELECT COUNT(*) FROM cards WHERE power IS NULL AND language = 'French') / (SELECT COUNT(*) FROM cards WHERE language = 'French') * 100 AS percentage",SELECT (SELECT COUNT(*) FROM cards WHERE power IS NULL AND language = 'French') / (SELECT COUNT(*) FROM cards WHERE language = 'French') * 100
110,944,How much faster in percentage is the champion than the driver who finished the race last in the 2008 Australian Grand Prix?,formula_1,challenging,"WITH time_in_seconds AS ( SELECT T1.positionOrder, CASE WHEN T1.positionOrder = 1 THEN (CAST(SUBSTR(T1.time, 1, 1) AS REAL) * 3600) + (CAST(SUBSTR(T1.time, 3, 2) AS REAL) * 60) + CAST(SUBSTR(T1.time, 6) AS REAL) ELSE CAST(SUBSTR(T1.time, 2) AS REAL) END AS time_seconds FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Australian Grand Prix' AND T1.time IS NOT NULL AND T2.year = 2008 ), champion_time AS ( SELECT time_seconds FROM time_in_seconds WHERE positionOrder = 1), last_driver_incremental AS ( SELECT time_seconds FROM time_in_seconds WHERE positionOrder = (SELECT MAX(positionOrder) FROM time_in_seconds) ) SELECT (CAST((SELECT time_seconds FROM last_driver_incremental) AS REAL) * 100) / (SELECT time_seconds + (SELECT time_seconds FROM last_driver_incremental) FROM champion_time)",7,"SELECT ((SELECT MAX(points) FROM driverstandings WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND circuitid IN (SELECT circuitid FROM circuits WHERE name = ""Australian Grand Prix"")) AND position = 1) - (SELECT MAX(points) FROM driverstandings WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND circuitid IN (SELECT circuitid FROM circuits WHERE name = ""Australian Grand Prix"")) AND position = (SELECT MAX(position) FROM driverstandings WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND circuitid IN (SELECT circuitid FROM circuits WHERE name = ""Australian Grand Prix"")))))*100 / (SELECT MAX(points) FROM driverstandings WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND circuitid IN (SELECT circuitid FROM circuits WHERE name = ""Australian Grand Prix"")) AND position = 1) AS percentage
SELECT ((SELECT MAX(points) FROM driverstandings WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND circuitid IN (SELECT circuitid FROM circuits WHERE name = ""Australian Grand Prix"")) AND position = 1) - (SELECT MAX(points) FROM driverstandings WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND circuitid IN (SELECT circuitid FROM circuits WHERE name = ""Australian Grand Prix"")) AND position = (SELECT MAX(position) FROM driverstandings WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND circuitid IN (SELECT circuitid FROM circuits WHERE name = ""Australian Grand Prix"")))))*100 / (SELECT MAX(points) FROM driverstandings WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND circuitid IN (SELECT circuitid FROM circuits WHERE name = ""Australian Grand Prix"")) AND position = 1) AS percentage_difference
SELECT ((SELECT MAX(points) FROM results WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND circuitid IN (SELECT circuitid FROM circuits WHERE name = ""Australian Grand Prix"")) AND position = 1) - (SELECT MAX(points) FROM results WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND circuitid IN (SELECT circuitid FROM circuits WHERE name = ""Australian Grand Prix"")) AND position = (SELECT COUNT(*) FROM results WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND circuitid IN (SELECT circuitid FROM circuits WHERE name = ""Australian Grand Prix"")))))*100 / (SELECT MAX(points) FROM results WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND circuitid IN (SELECT circuitid FROM circuits WHERE name = ""Australian Grand Prix"")) AND position = 1) AS percentage
SELECT ((SELECT MAX(points) FROM driverstandings WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND circuitid IN (SELECT circuitid FROM circuits WHERE name = ""Australian Grand Prix"")) AND position = 1) - (SELECT MAX(points) FROM driverstandings WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND circuitid IN (SELECT circuitid FROM circuits WHERE name = ""Australian Grand Prix"")) AND position = (SELECT MAX(position) FROM driverstandings WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND circuitid IN (SELECT circuitid FROM circuits WHERE name = ""Australian Grand Prix"")))))*100 / (SELECT MAX(points) FROM driverstandings WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND circuitid IN (SELECT circuitid FROM circuits WHERE name = ""Australian Grand Prix"")) AND position = 1) AS percentage
SELECT ((SELECT MAX(points) FROM results WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND circuitid IN (SELECT circuitid FROM circuits WHERE name = ""Australian Grand Prix"")) AND position = 1) - (SELECT MAX(points) FROM results WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND circuitid IN (SELECT circuitid FROM circuits WHERE name = ""Australian Grand Prix"")) AND position = (SELECT COUNT(*) FROM results WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND circuitid IN (SELECT circuitid FROM circuits WHERE name = ""Australian Grand Prix"")))))*100 / (SELECT MAX(points) FROM results WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND circuitid IN (SELECT circuitid FROM circuits WHERE name = ""Australian Grand Prix"")) AND position = 1) AS percentage
SELECT ((SELECT MAX(points) FROM results WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND circuitid IN (SELECT circuitid FROM circuits WHERE name = ""Australian Grand Prix"")) AND position = 1) - (SELECT MAX(points) FROM results WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND circuitid IN (SELECT circuitid FROM circuits WHERE name = ""Australian Grand Prix"")) AND position = (SELECT COUNT(*) FROM results WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND circuitid IN (SELECT circuitid FROM circuits WHERE name = ""Australian Grand Prix"")))))*100 / (SELECT MAX(points) FROM results WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND circuitid IN (SELECT circuitid FROM circuits WHERE name = ""Australian Grand Prix"")) AND position = 1) AS percentage
SELECT ((SELECT MAX(points) FROM driverstandings WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND circuitid IN (SELECT circuitid FROM circuits WHERE name = ""Australian Grand Prix"")) AND position = 1) - (SELECT MAX(points) FROM driverstandings WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND circuitid IN (SELECT circuitid FROM circuits WHERE name = ""Australian Grand Prix"")) AND position = (SELECT MAX(position) FROM driverstandings WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND circuitid IN (SELECT circuitid FROM circuits WHERE name = ""Australian Grand Prix"")))))*100 / (SELECT MAX(points) FROM driverstandings WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND circuitid IN (SELECT circuitid FROM circuits WHERE name = ""Australian Grand Prix"")) AND position = 1) AS percentage_difference","SELECT ((SELECT MAX(points) FROM results WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND circuitid IN (SELECT circuitid FROM circuits WHERE name = ""Australian Grand Prix"")) AND position = 1) - (SELECT MAX(points) FROM results WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND circuitid IN (SELECT circuitid FROM circuits WHERE name = ""Australian Grand Prix"")) AND position = (SELECT COUNT(*) FROM results WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND circuitid IN (SELECT circuitid FROM circuits WHERE name = ""Australian Grand Prix"")))))*100 / (SELECT MAX(points) FROM results WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND circuitid IN (SELECT circuitid FROM circuits WHERE name = ""Australian Grand Prix"")) AND position = 1) AS percentage"
111,791,Calculate the average height for each superhero.,superhero,simple,SELECT CAST(SUM(height_cm) AS REAL) / COUNT(id) FROM superhero,7,"SELECT alignment.alignment, AVG(superhero.height_cm) as average_height FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id GROUP BY alignment.alignment
SELECT alignment.alignment, AVG(superhero.height_cm) as average_height FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id GROUP BY alignment.alignment
SELECT alignment.alignment, AVG(superhero.height_cm) as average_height FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id GROUP BY alignment.alignment
SELECT alignment.alignment, AVG(superhero.height_cm) as average_height FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id GROUP BY alignment.alignment
SELECT alignment.alignment, AVG(superhero.height_cm) as average_height FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id GROUP BY alignment.alignment
SELECT alignment.alignment, AVG(superhero.height_cm) as average_height FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id GROUP BY alignment.alignment
SELECT alignment.alignment, AVG(superhero.height_cm) as average_height FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id GROUP BY alignment.alignment","SELECT alignment.alignment, AVG(superhero.height_cm) as average_height FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id GROUP BY alignment.alignment"
112,827,What is the average height of a non-human superhero in Dark Horse Comics?,superhero,moderate,SELECT AVG(T1.height_cm) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN race AS T3 ON T1.race_id = T3.id WHERE T2.publisher_name = 'Dark Horse Comics' AND T3.race != 'Human',7,"SELECT AVG(height_cm) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Dark Horse Comics') AND gender_id != (SELECT id FROM gender WHERE gender = 'Human')
SELECT AVG(height_cm) FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Dark Horse Comics' AND superhero.gender_id != (SELECT id FROM gender WHERE gender = 'Human')
SELECT AVG(height_cm) FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Dark Horse Comics' AND superhero.gender_id != (SELECT id FROM gender WHERE gender = 'Human')
SELECT AVG(height_cm) FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Dark Horse Comics' AND superhero.gender_id != (SELECT id FROM gender WHERE gender = 'Human')
SELECT AVG(height_cm) FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Dark Horse Comics' AND superhero.gender_id != (SELECT id FROM gender WHERE gender = 'Human')
SELECT AVG(height_cm) FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Dark Horse Comics' AND superhero.gender_id != (SELECT id FROM gender WHERE gender = 'Human')
SELECT AVG(height_cm) FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Dark Horse Comics' AND superhero.gender_id != (SELECT id FROM gender WHERE gender = 'Human')",SELECT AVG(height_cm) FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Dark Horse Comics' AND superhero.gender_id != (SELECT id FROM gender WHERE gender = 'Human')
113,769,Which superhero has the most durability published by Dark Horse Comics?,superhero,challenging,SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T3.id = T2.attribute_id INNER JOIN publisher AS T4 ON T4.id = T1.publisher_id WHERE T4.publisher_name = 'Dark Horse Comics' AND T3.attribute_name = 'Durability' ORDER BY T2.attribute_value DESC LIMIT 1,7,"SELECT superhero.superhero_name, COUNT(hero_power.power_id) as power_count FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Dark Horse Comics' GROUP BY superhero.superhero_name ORDER BY power_count DESC LIMIT 1
SELECT superhero.superhero_name, COUNT(hero_power.power_id) as power_count FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Dark Horse Comics' GROUP BY superhero.superhero_name ORDER BY power_count DESC LIMIT 1
SELECT superhero.superhero_name, COUNT(hero_power.power_id) as power_count FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Dark Horse Comics' GROUP BY superhero.superhero_name ORDER BY power_count DESC LIMIT 1
SELECT superhero.superhero_name, COUNT(hero_power.power_id) as power_count FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Dark Horse Comics' GROUP BY superhero.superhero_name ORDER BY power_count DESC LIMIT 1
SELECT superhero.superhero_name, COUNT(hero_power.power_id) as power_count FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Dark Horse Comics' GROUP BY superhero.superhero_name ORDER BY power_count DESC LIMIT 1
SELECT superhero.superhero_name, publisher.publisher_name, COUNT(hero_power.power_id) as power_count FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id JOIN hero_power ON superhero.id = hero_power.hero_id WHERE publisher.publisher_name = 'Dark Horse Comics' GROUP BY superhero.superhero_name ORDER BY power_count DESC LIMIT 1
SELECT superhero.superhero_name, COUNT(hero_power.power_id) as power_count FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Dark Horse Comics' GROUP BY superhero.superhero_name ORDER BY power_count DESC LIMIT 1","SELECT superhero.superhero_name, COUNT(hero_power.power_id) as power_count FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Dark Horse Comics' GROUP BY superhero.superhero_name ORDER BY power_count DESC LIMIT 1"
114,615,"Among the users who obtained the ""Organizer"" badges, calculate the percentage of users who are teenagers.",codebase_community,moderate,"SELECT CAST(SUM(IIF(T2.Age BETWEEN 13 AND 18, 1, 0)) AS REAL) * 100 / COUNT(T1.Id) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.`Name` = 'Organizer'",7,"SELECT (     SELECT COUNT(*)      FROM users      INNER JOIN badges ON users.id = badges.userid      WHERE users.age BETWEEN 13 AND 19 AND badges.name = 'Organizer' ) / (     SELECT COUNT(*)      FROM users      WHERE users.age BETWEEN 13 AND 19 ) * 100 AS percentage
SELECT (     SELECT COUNT(*)      FROM users      WHERE age BETWEEN 13 AND 19      AND id IN (         SELECT userid          FROM badges          WHERE name = 'Organizer'     ) ) / (     SELECT COUNT(*)      FROM badges      WHERE name = 'Organizer' ) * 100 AS percentage
SELECT (     SELECT COUNT(*)      FROM users      WHERE age BETWEEN 13 AND 19      AND id IN (         SELECT userid          FROM badges          WHERE name = 'Organizer'     ) ) / (     SELECT COUNT(*)      FROM badges      WHERE name = 'Organizer' ) * 100 AS percentage
SELECT (     SELECT COUNT(*)      FROM users      WHERE age BETWEEN 13 AND 19      AND id IN (         SELECT userid          FROM badges          WHERE name = 'Organizer'     ) ) / (     SELECT COUNT(*)      FROM badges      WHERE name = 'Organizer' ) * 100 AS percentage
SELECT (     SELECT COUNT(*)      FROM users      WHERE age BETWEEN 13 AND 19      AND id IN (         SELECT userid          FROM badges          WHERE name = 'Organizer'     ) ) / (     SELECT COUNT(*)      FROM badges      WHERE name = 'Organizer' ) * 100 AS percentage
SELECT (     SELECT COUNT(*)      FROM users      WHERE age BETWEEN 13 AND 19      AND id IN (         SELECT userid          FROM badges          WHERE name = 'Organizer'     ) ) / (     SELECT COUNT(*)      FROM badges      WHERE name = 'Organizer' ) * 100 AS percentage
SELECT (     SELECT COUNT(*)      FROM users      WHERE age BETWEEN 13 AND 19      AND id IN (         SELECT userid          FROM badges          WHERE name = 'Organizer'     ) ) / (     SELECT COUNT(*)      FROM badges      WHERE name = 'Organizer' ) * 100 AS percentage",SELECT (     SELECT COUNT(*)      FROM users      WHERE age BETWEEN 13 AND 19      AND id IN (         SELECT userid          FROM badges          WHERE name = 'Organizer'     ) ) / (     SELECT COUNT(*)      FROM badges      WHERE name = 'Organizer' ) * 100 AS percentage
115,575,What is the badge name that user 'SilentGhost' obtained?,codebase_community,simple,SELECT T2.Name FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'SilentGhost',7,"SELECT name FROM badges WHERE userid = (SELECT id FROM users WHERE displayname = 'SilentGhost')
SELECT name FROM badges WHERE userid = (SELECT id FROM users WHERE displayname = 'SilentGhost')
SELECT name FROM badges WHERE userid = (SELECT id FROM users WHERE displayname = 'SilentGhost')
SELECT name FROM badges WHERE userid = (SELECT id FROM users WHERE displayname = 'SilentGhost')
SELECT name FROM badges WHERE userid = (SELECT id FROM users WHERE displayname = 'SilentGhost')
SELECT name FROM badges WHERE userid = (SELECT id FROM users WHERE displayname = 'SilentGhost')
SELECT name FROM badges WHERE userid = (SELECT id FROM users WHERE displayname = 'SilentGhost')",SELECT name FROM badges WHERE userid = (SELECT id FROM users WHERE displayname = 'SilentGhost')
116,523,What is the annual average number of sets that were released between 1/1/2012 to 12/31/2015? Indicate the common langugage of the card.,card_games,challenging,"SELECT (CAST(SUM(T1.id) AS REAL) / COUNT(T1.id)) / 4, T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.id WHERE T1.releaseDate BETWEEN '2012-01-01' AND '2015-12-31' GROUP BY T1.releaseDate ORDER BY COUNT(T2.language) DESC LIMIT 1",7,"SELECT AVG(sets) AS annual_average FROM (     SELECT COUNT(*) AS sets, strftime('%Y', originalreleasedate) AS year     FROM cards     WHERE originalreleasedate BETWEEN '2012-01-01' AND '2015-12-31'     GROUP BY year )
SELECT AVG(sets.basesetsize) AS Annual_Average_Number_of_Sets FROM sets WHERE sets.releasedate BETWEEN '2012-01-01' AND '2015-12-31'
SELECT AVG(sets.basesetsize) AS AnnualAverageNumberOfSets FROM sets WHERE sets.releasedate BETWEEN '2012-01-01' AND '2015-12-31'
SELECT AVG(sets) AS annual_average FROM (     SELECT COUNT(*) AS sets     FROM sets     WHERE releasedate BETWEEN '2012-01-01' AND '2015-12-31'     GROUP BY strftime('%Y', releasedate) )
SELECT AVG(sets) AS annual_average FROM (     SELECT COUNT(*) AS sets, strftime('%Y', originalreleasedate) AS year     FROM cards     WHERE originalreleasedate BETWEEN '2012-01-01' AND '2015-12-31'     GROUP BY year )
SELECT AVG(sets) AS annual_average FROM (     SELECT COUNT(*) AS sets, strftime('%Y', originalreleasedate) AS year     FROM cards     WHERE originalreleasedate BETWEEN '2012-01-01' AND '2015-12-31'     GROUP BY year )
SELECT AVG(sets.basesetsize) AS Annual_Average_Number_of_Sets FROM sets WHERE sets.releasedate BETWEEN '2012-01-01' AND '2015-12-31'","SELECT AVG(sets) AS annual_average FROM (     SELECT COUNT(*) AS sets, strftime('%Y', originalreleasedate) AS year     FROM cards     WHERE originalreleasedate BETWEEN '2012-01-01' AND '2015-12-31'     GROUP BY year )"
117,319,How many elements are contained in bond_id TR001_3_4?,toxicology,challenging,SELECT COUNT(DISTINCT T1.element) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_3_4',7,"SELECT COUNT(*) FROM connected WHERE bond_id = 'TR001_3_4'
SELECT COUNT(*) FROM connected WHERE bond_id = 'TR001_3_4'
SELECT COUNT(*) FROM connected WHERE bond_id = 'TR001_3_4'
SELECT COUNT(*) FROM connected WHERE bond_id = 'TR001_3_4'
SELECT COUNT(*) FROM connected WHERE bond_id = 'TR001_3_4'
SELECT COUNT(*) FROM connected WHERE bond_id = 'TR001_3_4'
SELECT COUNT(*) FROM connected WHERE bond_id = 'TR001_3_4'",SELECT COUNT(*) FROM connected WHERE bond_id = 'TR001_3_4'
118,1094,How much higher in percentage is Ariel Borysiuk's overall rating than that of Paulin Puel?,european_football_2,challenging,SELECT (SUM(CASE WHEN t1.player_name = 'Ariel Borysiuk' THEN t2.overall_rating ELSE 0 END) * 1.0 - SUM(CASE WHEN t1.player_name = 'Paulin Puel' THEN t2.overall_rating ELSE 0 END)) * 100 / SUM(CASE WHEN t1.player_name = 'Paulin Puel' THEN t2.overall_rating ELSE 0 END) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id,7,"SELECT ((SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Ariel Borysiuk') LIMIT 1) - (SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Paulin Puel') LIMIT 1)) / (SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Paulin Puel') LIMIT 1) * 100 AS percentage_difference
SELECT ((SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Ariel Borysiuk') LIMIT 1) - (SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Paulin Puel') LIMIT 1)) / (SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Paulin Puel') LIMIT 1) * 100 as percentage_difference
SELECT ((SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT id FROM player WHERE player_name = 'Ariel Borysiuk') LIMIT 1) - (SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT id FROM player WHERE player_name = 'Paulin Puel') LIMIT 1)) / (SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT id FROM player WHERE player_name = 'Paulin Puel') LIMIT 1) * 100 AS percentage_difference
SELECT ((SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Ariel Borysiuk') LIMIT 1) - (SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Paulin Puel') LIMIT 1)) / (SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Paulin Puel') LIMIT 1) * 100 AS percentage_difference
SELECT ((SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Ariel Borysiuk') LIMIT 1) - (SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Paulin Puel') LIMIT 1)) / (SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Paulin Puel') LIMIT 1) * 100 as percentage_difference
SELECT (     SELECT overall_rating      FROM player      INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id     WHERE player_name = 'Ariel Borysiuk' ) - (     SELECT overall_rating      FROM player      INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id     WHERE player_name = 'Paulin Puel' ) * 100 /  (     SELECT overall_rating      FROM player      INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id     WHERE player_name = 'Paulin Puel' ) AS percentage_difference
SELECT ((SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Ariel Borysiuk') LIMIT 1) - (SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Paulin Puel') LIMIT 1)) / (SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Paulin Puel') LIMIT 1) * 100 AS percentage_difference",SELECT ((SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Ariel Borysiuk') LIMIT 1) - (SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Paulin Puel') LIMIT 1)) / (SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Paulin Puel') LIMIT 1) * 100 AS percentage_difference
119,212,Which element is the least numerous in non-carcinogenic molecules?,toxicology,challenging,"SELECT T.element FROM (SELECT T1.element, COUNT(DISTINCT T1.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '-' GROUP BY T1.element ORDER BY COUNT(DISTINCT T1.molecule_id) ASC LIMIT 1) t",7,"SELECT element, COUNT(*) as count FROM atom GROUP BY element ORDER BY count ASC LIMIT 1
SELECT element, COUNT(*) as count FROM atom GROUP BY element ORDER BY count ASC LIMIT 1
SELECT element, COUNT(*) as count FROM atom GROUP BY element ORDER BY count ASC LIMIT 1
SELECT element, COUNT(*) as count FROM atom GROUP BY element ORDER BY count ASC LIMIT 1
SELECT element, COUNT(*) as count FROM atom GROUP BY element ORDER BY count ASC LIMIT 1
SELECT element, COUNT(*) as count FROM atom GROUP BY element ORDER BY count ASC LIMIT 1
SELECT element, COUNT(*) as count FROM atom GROUP BY element ORDER BY count ASC LIMIT 1","SELECT element, COUNT(*) as count FROM atom GROUP BY element ORDER BY count ASC LIMIT 1"
120,513,"Among the sets whose expansion type is Commander, which set has the highest total number of cards including promotional and related supplemental products but excluding Alchemy modifications? Indicate the id of the set.",card_games,challenging,SELECT id FROM sets WHERE type = 'commander' ORDER BY totalSetSize DESC LIMIT 1,7,"SELECT sets.id FROM sets JOIN cards ON sets.id = cards.setcode WHERE sets.type = 'Commander' GROUP BY sets.id ORDER BY COUNT(cards.id) DESC LIMIT 1
SELECT sets.id FROM sets JOIN cards ON sets.id = cards.setcode WHERE sets.type = 'Commander' GROUP BY sets.id ORDER BY COUNT(cards.id) DESC LIMIT 1
SELECT sets.id FROM sets JOIN cards ON sets.id = cards.setcode WHERE sets.type = 'Commander' GROUP BY sets.id ORDER BY COUNT(cards.id) DESC LIMIT 1
SELECT sets.id FROM sets JOIN cards ON sets.id = cards.setcode WHERE sets.type = 'Commander' GROUP BY sets.id ORDER BY COUNT(cards.id) DESC LIMIT 1
SELECT sets.id FROM sets JOIN cards ON sets.id = cards.setcode WHERE sets.type = 'Commander' GROUP BY sets.id ORDER BY COUNT(cards.id) DESC LIMIT 1
SELECT sets.id FROM sets JOIN cards ON sets.id = cards.setcode WHERE sets.type = 'Commander' GROUP BY sets.id ORDER BY COUNT(cards.id) DESC LIMIT 1
SELECT sets.id FROM sets JOIN cards ON sets.id = cards.setcode WHERE sets.type = 'Commander' GROUP BY sets.id ORDER BY COUNT(cards.id) DESC LIMIT 1",SELECT sets.id FROM sets JOIN cards ON sets.id = cards.setcode WHERE sets.type = 'Commander' GROUP BY sets.id ORDER BY COUNT(cards.id) DESC LIMIT 1
121,598,What is the percentage difference of student badges given during 2010 and 2011?,codebase_community,challenging,"SELECT CAST(SUM(IIF(STRFTIME('%Y', Date) = '2010', 1, 0)) AS REAL) * 100 / COUNT(Id) - CAST(SUM(IIF(STRFTIME('%Y', Date) = '2011', 1, 0)) AS REAL) * 100 / COUNT(Id) FROM badges WHERE Name = 'Student'",7,"SELECT (     (         SELECT COUNT(*)          FROM badges          WHERE strftime('%Y', date) = '2011'     ) -      (         SELECT COUNT(*)          FROM badges          WHERE strftime('%Y', date) = '2010'     ) ) /  (     SELECT COUNT(*)      FROM badges      WHERE strftime('%Y', date) = '2010' ) * 100 AS percentage_difference
SELECT (     (         SELECT COUNT(*)          FROM badges          WHERE strftime('%Y', date) = '2011'     ) -      (         SELECT COUNT(*)          FROM badges          WHERE strftime('%Y', date) = '2010'     ) ) /  (     SELECT COUNT(*)      FROM badges      WHERE strftime('%Y', date) = '2010' ) * 100 AS percentage_difference
SELECT (     (         SELECT COUNT(*)          FROM badges          WHERE strftime('%Y', date) = '2011'     ) -      (         SELECT COUNT(*)          FROM badges          WHERE strftime('%Y', date) = '2010'     ) ) /  (     SELECT COUNT(*)      FROM badges      WHERE strftime('%Y', date) = '2010' ) * 100 AS percentage_difference
SELECT (     (         SELECT COUNT(*)          FROM badges          WHERE strftime('%Y', date) = '2011'     ) -      (         SELECT COUNT(*)          FROM badges          WHERE strftime('%Y', date) = '2010'     ) ) /  (     SELECT COUNT(*)      FROM badges      WHERE strftime('%Y', date) = '2010' ) * 100 AS percentage_difference
SELECT (     (         SELECT COUNT(*)          FROM badges          WHERE strftime('%Y', date) = '2011'     ) -      (         SELECT COUNT(*)          FROM badges          WHERE strftime('%Y', date) = '2010'     ) ) /  (     SELECT COUNT(*)      FROM badges      WHERE strftime('%Y', date) = '2010' ) * 100 AS percentage_difference
SELECT (     (         SELECT COUNT(*)          FROM badges          WHERE strftime('%Y', date) = '2011'     ) -      (         SELECT COUNT(*)          FROM badges          WHERE strftime('%Y', date) = '2010'     ) ) /  (     SELECT COUNT(*)      FROM badges      WHERE strftime('%Y', date) = '2010' ) * 100 AS percentage_difference
SELECT (     (         SELECT COUNT(*)          FROM badges          WHERE strftime('%Y', date) = '2011'     ) -      (         SELECT COUNT(*)          FROM badges          WHERE strftime('%Y', date) = '2010'     ) ) /  (     SELECT COUNT(*)      FROM badges      WHERE strftime('%Y', date) = '2010' ) * 100 AS percentage_difference","SELECT (     (         SELECT COUNT(*)          FROM badges          WHERE strftime('%Y', date) = '2011'     ) -      (         SELECT COUNT(*)          FROM badges          WHERE strftime('%Y', date) = '2010'     ) ) /  (     SELECT COUNT(*)      FROM badges      WHERE strftime('%Y', date) = '2010' ) * 100 AS percentage_difference"
122,330,Calculate the percentage of carcinogenic molecules with triple bonded Hidrogen atoms.,toxicology,challenging,SELECT CAST(SUM(CASE WHEN T1.label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T1.molecule_id = T3.molecule_id WHERE T3.bond_type = '#' AND T2.element = 'h',7,"SELECT (     SELECT COUNT(*)      FROM molecule      INNER JOIN bond ON molecule.molecule_id = bond.molecule_id      INNER JOIN connected ON bond.bond_id = connected.bond_id      INNER JOIN atom ON connected.atom_id = atom.atom_id      WHERE bond.bond_type = 'triple' AND atom.element = 'H' AND molecule.label = 'carcinogenic' ) / (     SELECT COUNT(*)      FROM molecule      WHERE molecule.label = 'carcinogenic' ) * 100 AS percentage
SELECT (     SELECT COUNT(*)      FROM molecule      INNER JOIN bond ON molecule.molecule_id = bond.molecule_id      INNER JOIN connected ON bond.bond_id = connected.bond_id      INNER JOIN atom ON connected.atom_id = atom.atom_id      WHERE bond.bond_type = 'triple' AND atom.element = 'H' AND molecule.label = 'carcinogenic' ) / (     SELECT COUNT(*)      FROM molecule      WHERE molecule.label = 'carcinogenic' ) * 100 AS percentage
SELECT (     SELECT COUNT(*)      FROM molecule      INNER JOIN bond ON molecule.molecule_id = bond.molecule_id      INNER JOIN connected ON bond.bond_id = connected.bond_id      INNER JOIN atom ON connected.atom_id = atom.atom_id      WHERE bond.bond_type = 'triple' AND atom.element = 'H' AND molecule.label = 'carcinogenic' ) / (     SELECT COUNT(*)      FROM molecule      WHERE molecule.label = 'carcinogenic' ) * 100 AS percentage
SELECT (SELECT COUNT(*) FROM molecule INNER JOIN bond ON molecule.molecule_id = bond.molecule_id INNER JOIN connected ON bond.bond_id = connected.bond_id INNER JOIN atom ON connected.atom_id = atom.atom_id WHERE bond.bond_type = 'triple' AND atom.element = 'H' AND molecule.label = 'carcinogenic') * 100.0 / (SELECT COUNT(*) FROM molecule WHERE molecule.label = 'carcinogenic') AS percentage
SELECT (     SELECT COUNT(*)      FROM molecule      INNER JOIN bond ON molecule.molecule_id = bond.molecule_id      INNER JOIN connected ON bond.bond_id = connected.bond_id      INNER JOIN atom ON connected.atom_id = atom.atom_id      WHERE bond.bond_type = 'triple' AND atom.element = 'H' AND molecule.label = 'carcinogenic' ) / (     SELECT COUNT(*)      FROM molecule      WHERE molecule.label = 'carcinogenic' ) * 100 AS percentage
SELECT (SELECT COUNT(*) FROM molecule INNER JOIN bond ON molecule.molecule_id = bond.molecule_id INNER JOIN connected ON bond.bond_id = connected.bond_id INNER JOIN atom ON connected.atom_id = atom.atom_id WHERE bond.bond_type = 'triple' AND atom.element = 'H' AND molecule.label = 'carcinogenic') * 100.0 / (SELECT COUNT(*) FROM molecule WHERE molecule.label = 'carcinogenic') AS percentage
SELECT (     SELECT COUNT(*)      FROM molecule      INNER JOIN bond ON molecule.molecule_id = bond.molecule_id      INNER JOIN connected ON bond.bond_id = connected.bond_id      INNER JOIN atom ON connected.atom_id = atom.atom_id      WHERE bond.bond_type = 'triple' AND atom.element = 'H' AND molecule.label = 'carcinogenic' ) / (     SELECT COUNT(*)      FROM molecule      WHERE molecule.label = 'carcinogenic' ) * 100 AS percentage",SELECT (     SELECT COUNT(*)      FROM molecule      INNER JOIN bond ON molecule.molecule_id = bond.molecule_id      INNER JOIN connected ON bond.bond_id = connected.bond_id      INNER JOIN atom ON connected.atom_id = atom.atom_id      WHERE bond.bond_type = 'triple' AND atom.element = 'H' AND molecule.label = 'carcinogenic' ) / (     SELECT COUNT(*)      FROM molecule      WHERE molecule.label = 'carcinogenic' ) * 100 AS percentage
123,716,"Among the comments with scores between 5 to 10, what is the percentage of the users with 0 up votes?",codebase_community,moderate,"SELECT CAST(SUM(IIF(T1.UpVotes = 0, 1, 0)) AS REAL) * 100/ COUNT(T1.Id) AS per FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T2.Score BETWEEN 5 AND 10",7,"SELECT (     SELECT COUNT(DISTINCT users.id)      FROM users      INNER JOIN comments ON users.id = comments.userid      WHERE comments.score BETWEEN 5 AND 10 AND users.upvotes = 0 ) / (     SELECT COUNT(DISTINCT users.id)      FROM users      INNER JOIN comments ON users.id = comments.userid      WHERE comments.score BETWEEN 5 AND 10 ) * 100 AS percentage
SELECT (     SELECT COUNT(DISTINCT users.id)      FROM users      INNER JOIN comments ON users.id = comments.userid      WHERE comments.score BETWEEN 5 AND 10 AND users.upvotes = 0 ) / (     SELECT COUNT(DISTINCT users.id)      FROM users      INNER JOIN comments ON users.id = comments.userid      WHERE comments.score BETWEEN 5 AND 10 ) * 100 AS percentage
SELECT (     SELECT COUNT(*)      FROM users      WHERE id IN (         SELECT userid          FROM comments          WHERE score BETWEEN 5 AND 10 AND upvotes = 0     ) ) / (     SELECT COUNT(*)      FROM users      WHERE id IN (         SELECT userid          FROM comments          WHERE score BETWEEN 5 AND 10     ) ) * 100 AS percentage
SELECT (     SELECT COUNT(DISTINCT users.id)      FROM users      INNER JOIN comments ON users.id = comments.userid      WHERE comments.score BETWEEN 5 AND 10 AND users.upvotes = 0 ) / (     SELECT COUNT(DISTINCT users.id)      FROM users      INNER JOIN comments ON users.id = comments.userid      WHERE comments.score BETWEEN 5 AND 10 ) * 100 AS percentage
SELECT (     SELECT COUNT(*)      FROM users      WHERE id IN (         SELECT userid          FROM comments          WHERE score BETWEEN 5 AND 10 AND upvotes = 0     ) ) / (     SELECT COUNT(*)      FROM users      WHERE id IN (         SELECT userid          FROM comments          WHERE score BETWEEN 5 AND 10     ) ) * 100 AS percentage
SELECT (     SELECT COUNT(DISTINCT users.id)      FROM users      INNER JOIN comments ON users.id = comments.userid      WHERE comments.score BETWEEN 5 AND 10 AND users.upvotes = 0 ) / (     SELECT COUNT(DISTINCT users.id)      FROM users      INNER JOIN comments ON users.id = comments.userid      WHERE comments.score BETWEEN 5 AND 10 ) * 100 AS percentage
SELECT (     SELECT COUNT(DISTINCT users.id)      FROM users      INNER JOIN comments ON users.id = comments.userid      WHERE comments.score BETWEEN 5 AND 10 AND users.upvotes = 0 ) / (     SELECT COUNT(DISTINCT users.id)      FROM users      INNER JOIN comments ON users.id = comments.userid      WHERE comments.score BETWEEN 5 AND 10 ) * 100 AS percentage",SELECT (     SELECT COUNT(DISTINCT users.id)      FROM users      INNER JOIN comments ON users.id = comments.userid      WHERE comments.score BETWEEN 5 AND 10 AND users.upvotes = 0 ) / (     SELECT COUNT(DISTINCT users.id)      FROM users      INNER JOIN comments ON users.id = comments.userid      WHERE comments.score BETWEEN 5 AND 10 ) * 100 AS percentage
124,247,List all the elements of atoms that can not bond with any other atoms.,toxicology,challenging,SELECT DISTINCT T.element FROM atom AS T WHERE T.element NOT IN ( SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id ),7,"SELECT a.atom_id, a.molecule_id, a.element  FROM atoms a  LEFT JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2  WHERE c.atom_id IS NULL AND c.atom_id2 IS NULL
SELECT a.atom_id, a.molecule_id, a.element  FROM atoms a  LEFT JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2  WHERE c.atom_id IS NULL AND c.atom_id2 IS NULL
SELECT atom.atom_id, atom.molecule_id, atom.element  FROM atom  LEFT JOIN connected ON atom.atom_id = connected.atom_id  WHERE connected.atom_id IS NULL
SELECT atom.atom_id, atom.molecule_id, atom.element  FROM atom  LEFT JOIN connected ON atom.atom_id = connected.atom_id OR atom.atom_id = connected.atom_id2  WHERE connected.atom_id IS NULL AND connected.atom_id2 IS NULL
SELECT a.atom_id, a.molecule_id, a.element  FROM atoms a  LEFT JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2  WHERE c.atom_id IS NULL AND c.atom_id2 IS NULL
SELECT a.atom_id, a.molecule_id, a.element  FROM atoms a  LEFT JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2  WHERE c.atom_id IS NULL AND c.atom_id2 IS NULL
SELECT atom.atom_id, atom.molecule_id, atom.element FROM atom LEFT JOIN connected ON atom.atom_id = connected.atom_id WHERE connected.atom_id IS NULL","SELECT a.atom_id, a.molecule_id, a.element  FROM atoms a  LEFT JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2  WHERE c.atom_id IS NULL AND c.atom_id2 IS NULL"
125,116,"For the client whose loan was approved first in 1993/7/5, what is the increase rate of his/her account balance from 1993/3/22 to 1998/12/27?",financial,challenging,"SELECT CAST((SUM(IIF(T3.date = '1998-12-27', T3.balance, 0)) - SUM(IIF(T3.date = '1993-03-22', T3.balance, 0))) AS REAL) * 100 / SUM(IIF(T3.date = '1993-03-22', T3.balance, 0)) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN trans AS T3 ON T3.account_id = T2.account_id WHERE T1.date = '1993-07-05'",7,"SELECT (t2.balance - t1.balance) / t1.balance * 100 as IncreaseRate FROM (     SELECT balance     FROM trans     WHERE account_id = (         SELECT account_id         FROM loan         WHERE date = '1993/7/5' AND status = 'A'     ) AND date = '1993/3/22' ) t1, (     SELECT balance     FROM trans     WHERE account_id = (         SELECT account_id         FROM loan         WHERE date = '1993/7/5' AND status = 'A'     ) AND date = '1998/12/27' ) t2
SELECT (t2.balance - t1.balance) / t1.balance * 100 as IncreaseRate FROM (     SELECT balance     FROM trans     WHERE account_id = (         SELECT account_id         FROM loan         WHERE date = '1993/7/5' AND status = 'A'     ) AND date = '1993/3/22' ) t1, (     SELECT balance     FROM trans     WHERE account_id = (         SELECT account_id         FROM loan         WHERE date = '1993/7/5' AND status = 'A'     ) AND date = '1998/12/27' ) t2
SELECT (t2.balance - t1.balance) / t1.balance * 100 as IncreaseRate FROM (     SELECT balance     FROM trans     WHERE account_id = (         SELECT account_id         FROM loan         WHERE date = '1993/7/5' AND status = 'A'     ) AND date = '1993/3/22' ) t1, (     SELECT balance     FROM trans     WHERE account_id = (         SELECT account_id         FROM loan         WHERE date = '1993/7/5' AND status = 'A'     ) AND date = '1998/12/27' ) t2
SELECT (t2.balance - t1.balance) / t1.balance * 100 AS increase_rate FROM (     SELECT balance     FROM trans     WHERE account_id = (         SELECT account_id         FROM loan         WHERE date = '1993/7/5' AND status = 'A'     ) AND date = '1993/3/22' ) AS t1, (     SELECT balance     FROM trans     WHERE account_id = (         SELECT account_id         FROM loan         WHERE date = '1993/7/5' AND status = 'A'     ) AND date = '1998/12/27' ) AS t2
SELECT      (t2.balance - t1.balance) / t1.balance * 100 AS increase_rate FROM      (SELECT          balance      FROM          trans      WHERE          account_id = (SELECT                            account_id                        FROM                            loan                        WHERE                            status = 'A'                            AND date = '19930705'                        ORDER BY                            loan_id                        LIMIT 1)          AND date = '19930322'      LIMIT 1) AS t1,     (SELECT          balance      FROM          trans      WHERE          account_id = (SELECT                            account_id                        FROM                            loan                        WHERE                            status = 'A'                            AND date = '19930705'                        ORDER BY                            loan_id                        LIMIT 1)          AND date = '19981227'      LIMIT 1) AS t2
SELECT (t2.balance - t1.balance) / t1.balance * 100 as IncreaseRate FROM (     SELECT balance     FROM trans     WHERE account_id = (         SELECT account_id         FROM loan         WHERE date = '1993/7/5' AND status = 'A'     ) AND date = '1993/3/22' ) t1, (     SELECT balance     FROM trans     WHERE account_id = (         SELECT account_id         FROM loan         WHERE date = '1993/7/5' AND status = 'A'     ) AND date = '1998/12/27' ) t2
SELECT (t2.balance - t1.balance) / t1.balance * 100 as IncreaseRate FROM (     SELECT balance     FROM trans     WHERE account_id = (         SELECT account_id         FROM loan         WHERE date = '1993/7/5' AND status = 'A'     ) AND date = '1993/3/22' ) t1, (     SELECT balance     FROM trans     WHERE account_id = (         SELECT account_id         FROM loan         WHERE date = '1993/7/5' AND status = 'A'     ) AND date = '1998/12/27' ) t2","SELECT (t2.balance - t1.balance) / t1.balance * 100 as IncreaseRate FROM (     SELECT balance     FROM trans     WHERE account_id = (         SELECT account_id         FROM loan         WHERE date = '1993/7/5' AND status = 'A'     ) AND date = '1993/3/22' ) t1, (     SELECT balance     FROM trans     WHERE account_id = (         SELECT account_id         FROM loan         WHERE date = '1993/7/5' AND status = 'A'     ) AND date = '1998/12/27' ) t2"
126,253,List the elements of all the triple bonds.,toxicology,challenging,SELECT DISTINCT T3.element FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T1.bond_type = '#',7,"SELECT a.atom_id, a.molecule_id, a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'triple' 
SELECT a.atom_id, a.molecule_id, a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'triple' 
SELECT a1.atom_id, a2.atom_id, b.bond_id FROM connected c JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'triple' 
SELECT a.atom_id, a.molecule_id, a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'triple' 
SELECT a.atom_id, a.molecule_id, a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'triple' 
SELECT a.atom_id, a.molecule_id, a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'triple'
SELECT a.atom_id, a.molecule_id, a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'triple' ","SELECT a.atom_id, a.molecule_id, a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'triple' "
127,1051,List all the football player with the highest potential score.,european_football_2,simple,SELECT DISTINCT(t1.player_name) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t2.potential = (SELECT MAX(potential) FROM Player_Attributes) ,7,"SELECT player.player_name, player_attributes.potential FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.potential = (SELECT MAX(potential) FROM player_attributes)
SELECT player.player_name, player_attributes.potential FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.potential = (SELECT MAX(potential) FROM player_attributes)
SELECT player.player_name, player_attributes.potential FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.potential = (SELECT MAX(potential) FROM player_attributes)
SELECT player.player_name, player_attributes.potential FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.potential = (SELECT MAX(potential) FROM player_attributes)
SELECT player.player_name, player_attributes.potential FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.potential = (SELECT MAX(potential) FROM player_attributes)
SELECT player.player_name, player_attributes.potential FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.potential = (SELECT MAX(potential) FROM player_attributes)
SELECT player.player_name, player_attributes.potential FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.potential = (SELECT MAX(potential) FROM player_attributes)","SELECT player.player_name, player_attributes.potential FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.potential = (SELECT MAX(potential) FROM player_attributes)"
128,1241,"For patients with abnormal platelet level, state the number of patients with lower than normal range. How is it compare to the number of patients with higher than normal range?",thrombosis_prediction,challenging,SELECT SUM(CASE WHEN T2.PLT <= 100 THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.PLT >= 400 THEN 1 ELSE 0 END) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID,7,"SELECT COUNT(*) as Lower_than_Normal,        (SELECT COUNT(*) FROM laboratory WHERE plt > (SELECT AVG(plt) FROM laboratory)) as Higher_than_Normal FROM laboratory WHERE plt < (SELECT AVG(plt) FROM laboratory)
SELECT COUNT(patient.id), laboratory.plt FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.plt < (SELECT AVG(laboratory.plt) - 2*STDDEV(laboratory.plt) FROM laboratory) OR laboratory.plt > (SELECT AVG(laboratory.plt) + 2*STDDEV(laboratory.plt) FROM laboratory) GROUP BY (laboratory.plt < (SELECT AVG(laboratory.plt) - 2*STDDEV(laboratory.plt) FROM laboratory)) ORDER BY COUNT(patient.id) DESC
SELECT COUNT(*) as Lower_than_normal,        (SELECT COUNT(*) FROM laboratory WHERE plt > (SELECT AVG(plt) FROM laboratory)) as Higher_than_normal FROM laboratory WHERE plt < (SELECT AVG(plt) FROM laboratory)
SELECT COUNT(*) as Lower_than_normal,         (SELECT COUNT(*) FROM laboratory WHERE plt < (SELECT AVG(plt) - 2*STDDEV(plt) FROM laboratory)) as Higher_than_normal FROM laboratory WHERE plt > (SELECT AVG(plt) + 2*STDDEV(plt) FROM laboratory) AND id IN (SELECT id FROM patient WHERE diagnosis IN (SELECT diagnosis FROM examination WHERE acl_igg = 'abnormal' OR acl_igm = 'abnormal' OR ana = 'abnormal' OR ana_pattern = 'abnormal' OR acl_iga = 'abnormal'))
SELECT COUNT(*) as Lower_than_Normal,        (SELECT COUNT(*) FROM laboratory WHERE plt > (SELECT AVG(plt) FROM laboratory)) as Higher_than_Normal FROM laboratory WHERE plt < (SELECT AVG(plt) FROM laboratory)
SELECT COUNT(*) as Lower_than_normal,         (SELECT COUNT(*) FROM laboratory WHERE plt < (SELECT AVG(plt) FROM laboratory) AND plt > (SELECT MIN(plt) FROM laboratory)) as Higher_than_normal FROM laboratory WHERE plt > (SELECT AVG(plt) FROM laboratory) AND plt < (SELECT MAX(plt) FROM laboratory)
SELECT      SUM(CASE WHEN lab.plt < 150 THEN 1 ELSE 0 END) AS low_range,     SUM(CASE WHEN lab.plt > 400 THEN 1 ELSE 0 END) AS high_range FROM      patient AS pat JOIN      laboratory AS lab ON pat.id = lab.id WHERE      lab.plt IS NOT NULL","SELECT COUNT(*) as Lower_than_Normal,        (SELECT COUNT(*) FROM laboratory WHERE plt > (SELECT AVG(plt) FROM laboratory)) as Higher_than_Normal FROM laboratory WHERE plt < (SELECT AVG(plt) FROM laboratory)"
129,256,Calculate the total atoms consisting of the element carbon and hydrogen.,toxicology,simple,SELECT COUNT(T.atom_id) FROM atom AS T WHERE T.element = 'c' OR T.element = 'h',7,"SELECT SUM(CASE WHEN element = 'carbon' THEN 1 ELSE 0 END) + SUM(CASE WHEN element = 'hydrogen' THEN 1 ELSE 0 END) AS total_atoms FROM atom
SELECT SUM(CASE WHEN element = 'carbon' THEN 1 ELSE 0 END) + SUM(CASE WHEN element = 'hydrogen' THEN 1 ELSE 0 END) as total_atoms FROM atom
SELECT SUM(CASE WHEN element = 'carbon' THEN 1 ELSE 0 END) + SUM(CASE WHEN element = 'hydrogen' THEN 1 ELSE 0 END) as total_atoms FROM atom
SELECT SUM(CASE WHEN element = 'carbon' THEN 1 ELSE 0 END) + SUM(CASE WHEN element = 'hydrogen' THEN 1 ELSE 0 END) as total_atoms FROM atom
SELECT SUM(CASE WHEN element = 'carbon' THEN 1 ELSE 0 END) + SUM(CASE WHEN element = 'hydrogen' THEN 1 ELSE 0 END) as total_atoms FROM atom
SELECT SUM(CASE WHEN element = 'carbon' THEN 1 ELSE 0 END) + SUM(CASE WHEN element = 'hydrogen' THEN 1 ELSE 0 END) AS total_atoms FROM atom
SELECT SUM(CASE WHEN element = 'carbon' THEN 1 ELSE 0 END) + SUM(CASE WHEN element = 'hydrogen' THEN 1 ELSE 0 END) AS total_atoms FROM atom",SELECT SUM(CASE WHEN element = 'carbon' THEN 1 ELSE 0 END) + SUM(CASE WHEN element = 'hydrogen' THEN 1 ELSE 0 END) as total_atoms FROM atom
130,775,What is the percentage of blue female superheroes among all female superheroes?,superhero,challenging,SELECT CAST(COUNT(CASE WHEN T3.colour = 'Blue' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN colour AS T3 ON T1.skin_colour_id = T3.id WHERE T2.gender = 'Female',7,"SELECT (     SELECT COUNT(*)      FROM superhero      WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female')      AND skin_colour_id = (SELECT id FROM colour WHERE colour = 'Blue') ) / (     SELECT COUNT(*)      FROM superhero      WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female') ) * 100 AS percentage
SELECT (     SELECT COUNT(*)      FROM superhero      WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female')      AND skin_colour_id = (SELECT id FROM colour WHERE colour = 'Blue') ) / (     SELECT COUNT(*)      FROM superhero      WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female') ) * 100 AS percentage
SELECT (     SELECT COUNT(*)      FROM superhero      WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female')      AND skin_colour_id = (SELECT id FROM colour WHERE colour = 'Blue') ) / (     SELECT COUNT(*)      FROM superhero      WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female') ) * 100 AS percentage
SELECT (     SELECT COUNT(*)      FROM superhero      WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female')      AND skin_colour_id = (SELECT id FROM colour WHERE colour = 'Blue') ) / (     SELECT COUNT(*)      FROM superhero      WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female') ) * 100 AS percentage
SELECT (     SELECT COUNT(*)      FROM superhero      WHERE gender_id IN (SELECT id FROM gender WHERE gender = 'Female')      AND skin_colour_id IN (SELECT id FROM colour WHERE colour = 'Blue') ) / (     SELECT COUNT(*)      FROM superhero      WHERE gender_id IN (SELECT id FROM gender WHERE gender = 'Female') ) * 100 AS Percentage
SELECT (     SELECT COUNT(*)      FROM superhero      WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female')      AND skin_colour_id = (SELECT id FROM colour WHERE colour = 'Blue') ) / (     SELECT COUNT(*)      FROM superhero      WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female') ) * 100 AS percentage
SELECT (     SELECT COUNT(*)      FROM superhero      WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female')      AND skin_colour_id = (SELECT id FROM colour WHERE colour = 'Blue') ) / (     SELECT COUNT(*)      FROM superhero      WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female') ) * 100 AS percentage",SELECT (     SELECT COUNT(*)      FROM superhero      WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female')      AND skin_colour_id = (SELECT id FROM colour WHERE colour = 'Blue') ) / (     SELECT COUNT(*)      FROM superhero      WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female') ) * 100 AS percentage
131,200,Find the triple-bonded molecules which are carcinogenic.,toxicology,simple,SELECT DISTINCT T2.molecule_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#' AND T2.label = '+',7,"SELECT m.molecule_id, m.label  FROM molecule AS m  JOIN connected AS c ON m.molecule_id = c.atom_id  JOIN bond AS b ON c.bond_id = b.bond_id  WHERE b.bond_type = 'triple' AND m.label = 'carcinogenic'
SELECT m.molecule_id, m.label  FROM molecule AS m  JOIN connected AS c ON m.molecule_id = c.atom_id  JOIN bond AS b ON c.bond_id = b.bond_id  WHERE b.bond_type = 'triple' AND m.label = 'carcinogenic'
SELECT m.molecule_id, m.label  FROM molecule AS m  JOIN connected AS c ON m.molecule_id = c.atom_id  JOIN bond AS b ON c.bond_id = b.bond_id  WHERE b.bond_type = 'triple' AND m.label = 'carcinogenic'
SELECT m.molecule_id, m.label  FROM molecule AS m  JOIN connected AS c ON m.molecule_id = c.atom_id  JOIN bond AS b ON c.bond_id = b.bond_id  WHERE b.bond_type = 'triple' AND m.label = 'carcinogenic'
SELECT m.molecule_id, m.label  FROM molecule AS m  JOIN connected AS c ON m.molecule_id = c.atom_id  JOIN bond AS b ON c.bond_id = b.bond_id  WHERE b.bond_type = 'triple' AND m.label = 'carcinogenic'
SELECT m.molecule_id, m.label  FROM molecule AS m  JOIN connected AS c ON m.molecule_id = c.atom_id  JOIN bond AS b ON c.bond_id = b.bond_id  WHERE b.bond_type = 'triple' AND m.label = 'carcinogenic'
SELECT m.molecule_id, m.label  FROM molecule AS m  JOIN connected AS c ON m.molecule_id = c.atom_id  JOIN bond AS b ON c.bond_id = b.bond_id  WHERE b.bond_type = 'triple' AND m.label = 'carcinogenic'","SELECT m.molecule_id, m.label  FROM molecule AS m  JOIN connected AS c ON m.molecule_id = c.atom_id  JOIN bond AS b ON c.bond_id = b.bond_id  WHERE b.bond_type = 'triple' AND m.label = 'carcinogenic'"
132,1275,"Among the patients who has a normal level of anti-centromere and a normal level of anti-SSB, how many of them are male?",thrombosis_prediction,moderate,"SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CENTROMEA IN ('negative', '0') AND T2.SSB IN ('negative', '0') AND T1.SEX = 'M'",7,"SELECT COUNT(*) FROM patient  INNER JOIN examination ON patient.id = examination.id  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE patient.sex = 'male'  AND examination.acl_igg = 'normal'  AND examination.acl_igm = 'normal'  AND laboratory.ssb = 'normal'  AND laboratory.ssa = 'normal'
SELECT COUNT(*) FROM patient  INNER JOIN examination ON patient.id = examination.id  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE patient.sex = 'male'  AND examination.acl_igg = 'normal'  AND examination.acl_igm = 'normal'  AND laboratory.ssb = 'normal'  AND laboratory.ssa = 'normal'
SELECT COUNT(*) FROM patient  INNER JOIN examination ON patient.id = examination.id  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE patient.sex = 'male'  AND examination.acl_igg = 'normal'  AND examination.acl_igm = 'normal'  AND laboratory.ssb = 'normal'  AND laboratory.centromea = 'normal'
SELECT COUNT(*) FROM patient  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE patient.sex = 'male'  AND laboratory.centromea = 'normal'  AND laboratory.ssb = 'normal'
SELECT COUNT(*) FROM patient  INNER JOIN examination ON patient.id = examination.id  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE patient.sex = 'male'  AND examination.acl_igg = 'normal'  AND examination.acl_igm = 'normal'  AND laboratory.ssb = 'normal'  AND laboratory.ssa = 'normal'
SELECT COUNT(*) FROM patient  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE patient.sex = 'male'  AND laboratory.centromea = 'normal'  AND laboratory.ssb = 'normal'
SELECT COUNT(*) FROM patient  INNER JOIN examination ON patient.id = examination.id  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE patient.sex = 'male'  AND examination.acl_igg = 'normal'  AND examination.acl_igm = 'normal'  AND laboratory.ssb = 'normal'  AND laboratory.ssa = 'normal'",SELECT COUNT(*) FROM patient  INNER JOIN examination ON patient.id = examination.id  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE patient.sex = 'male'  AND examination.acl_igg = 'normal'  AND examination.acl_igm = 'normal'  AND laboratory.ssb = 'normal'  AND laboratory.ssa = 'normal'
133,1482,"Which of the three segments—SME, LAM and KAM—has the biggest and lowest percentage increases in consumption paid in EUR between 2012 and 2013?",debit_card_specializing,challenging,"SELECT CAST((SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2013%', T2.Consumption, 0)) - SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2012%', T2.Consumption, 0))) AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2012%', T2.Consumption, 0)), CAST(SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2013%', T2.Consumption, 0)) - SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) , CAST(SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2013%', T2.Consumption, 0)) - SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID",7,"SELECT segment,        (SUM(CASE WHEN strftime('%Y', date) = '2013' THEN consumption END) -         SUM(CASE WHEN strftime('%Y', date) = '2012' THEN consumption END)) /         SUM(CASE WHEN strftime('%Y', date) = '2012' THEN consumption END) AS percentage_increase FROM yearmonth JOIN customers ON yearmonth.customerid = customers.customerid GROUP BY segment ORDER BY percentage_increase DESC LIMIT 1
SELECT segment,        (SUM(CASE WHEN strftime('%Y', date) = '2013' THEN consumption END) -         SUM(CASE WHEN strftime('%Y', date) = '2012' THEN consumption END)) /         SUM(CASE WHEN strftime('%Y', date) = '2012' THEN consumption END) AS percentage_increase FROM yearmonth JOIN customers ON yearmonth.customerid = customers.customerid GROUP BY segment ORDER BY percentage_increase DESC LIMIT 1
SELECT segment,        (SUM(CASE WHEN strftime('%Y', date) = '2013' THEN consumption END) -         SUM(CASE WHEN strftime('%Y', date) = '2012' THEN consumption END)) /         SUM(CASE WHEN strftime('%Y', date) = '2012' THEN consumption END) AS percentage_increase FROM yearmonth JOIN customers ON yearmonth.customerid = customers.customerid GROUP BY segment ORDER BY percentage_increase DESC LIMIT 1
SELECT segment,        (SUM(CASE WHEN strftime('%Y', date) = '2013' THEN consumption END) -         SUM(CASE WHEN strftime('%Y', date) = '2012' THEN consumption END)) /         SUM(CASE WHEN strftime('%Y', date) = '2012' THEN consumption END) AS percentage_increase FROM yearmonth JOIN customers ON yearmonth.customerid = customers.customerid GROUP BY segment ORDER BY percentage_increase DESC LIMIT 1
SELECT segment,         (SUM(CASE WHEN strftime('%Y', date) = '2013' THEN consumption END) -          SUM(CASE WHEN strftime('%Y', date) = '2012' THEN consumption END)) /          SUM(CASE WHEN strftime('%Y', date) = '2012' THEN consumption END) AS percentage_increase FROM yearmonth  JOIN customers ON yearmonth.customerid = customers.customerid GROUP BY segment ORDER BY percentage_increase DESC LIMIT 1
SELECT segment,        (SUM(CASE WHEN strftime('%Y', date) = '2013' THEN consumption END) -         SUM(CASE WHEN strftime('%Y', date) = '2012' THEN consumption END)) /         SUM(CASE WHEN strftime('%Y', date) = '2012' THEN consumption END) AS percentage_increase FROM yearmonth JOIN customers ON yearmonth.customerid = customers.customerid GROUP BY segment ORDER BY percentage_increase DESC LIMIT 1
SELECT segment,        (SUM(CASE WHEN strftime('%Y', date) = '2013' THEN consumption END) -         SUM(CASE WHEN strftime('%Y', date) = '2012' THEN consumption END)) /         SUM(CASE WHEN strftime('%Y', date) = '2012' THEN consumption END) AS percentage_increase FROM yearmonth JOIN customers ON yearmonth.customerid = customers.customerid GROUP BY segment ORDER BY percentage_increase DESC LIMIT 1","SELECT segment,        (SUM(CASE WHEN strftime('%Y', date) = '2013' THEN consumption END) -         SUM(CASE WHEN strftime('%Y', date) = '2012' THEN consumption END)) /         SUM(CASE WHEN strftime('%Y', date) = '2012' THEN consumption END) AS percentage_increase FROM yearmonth JOIN customers ON yearmonth.customerid = customers.customerid GROUP BY segment ORDER BY percentage_increase DESC LIMIT 1"
134,311,How many molecules without sulphur element is not having double bond?,toxicology,simple,SELECT COUNT(DISTINCT T1.molecule_id) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element <> 's' AND T2.bond_type <> '=',7,"SELECT COUNT(DISTINCT m.molecule_id)  FROM molecule AS m  LEFT JOIN atom AS a ON m.molecule_id = a.molecule_id  LEFT JOIN connected AS c ON a.atom_id = c.atom_id  LEFT JOIN bond AS b ON c.bond_id = b.bond_id  WHERE a.element != 'S' AND b.bond_type != 'double'
SELECT COUNT(DISTINCT m.molecule_id)  FROM molecule AS m  LEFT JOIN atom AS a ON m.molecule_id = a.molecule_id  LEFT JOIN connected AS c ON a.atom_id = c.atom_id  LEFT JOIN bond AS b ON c.bond_id = b.bond_id  WHERE a.element != 'S' AND b.bond_type != 'double'
SELECT COUNT(DISTINCT m.molecule_id)  FROM molecule AS m  LEFT JOIN atom AS a ON m.molecule_id = a.molecule_id  LEFT JOIN connected AS c ON a.atom_id = c.atom_id  LEFT JOIN bond AS b ON c.bond_id = b.bond_id  WHERE a.element != 'S' AND b.bond_type != 'double'
SELECT COUNT(DISTINCT m.molecule_id)  FROM molecule AS m  LEFT JOIN atom AS a ON m.molecule_id = a.molecule_id  LEFT JOIN connected AS c ON a.atom_id = c.atom_id  LEFT JOIN bond AS b ON c.bond_id = b.bond_id  WHERE a.element != 'S' AND b.bond_type != 'double'
SELECT COUNT(*) FROM molecule  LEFT JOIN atom ON molecule.molecule_id = atom.molecule_id  LEFT JOIN bond ON molecule.molecule_id = bond.molecule_id  LEFT JOIN connected ON (atom.atom_id = connected.atom_id OR atom.atom_id = connected.atom_id2)  WHERE atom.element != 'S' AND bond.bond_type != 'double'
SELECT COUNT(*) FROM molecule  LEFT JOIN atom ON molecule.molecule_id = atom.molecule_id  LEFT JOIN bond ON molecule.molecule_id = bond.molecule_id  LEFT JOIN connected ON (atom.atom_id = connected.atom_id OR atom.atom_id = connected.atom_id2)  WHERE atom.element != 'S' AND bond.bond_type != 'double'
SELECT COUNT(DISTINCT m.molecule_id)  FROM molecule AS m  LEFT JOIN atom AS a ON m.molecule_id = a.molecule_id  LEFT JOIN connected AS c ON a.atom_id = c.atom_id  LEFT JOIN bond AS b ON c.bond_id = b.bond_id  WHERE a.element != 'S' AND b.bond_type != 'double'",SELECT COUNT(DISTINCT m.molecule_id)  FROM molecule AS m  LEFT JOIN atom AS a ON m.molecule_id = a.molecule_id  LEFT JOIN connected AS c ON a.atom_id = c.atom_id  LEFT JOIN bond AS b ON c.bond_id = b.bond_id  WHERE a.element != 'S' AND b.bond_type != 'double'
135,23,List the names of schools with more than 30 difference in enrollements between K-12 and ages 5-17? Please also give the full street adress of the schools.,california_schools,moderate,"SELECT T1.School, T1.Street FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`Enrollment (K-12)` - T2.`Enrollment (Ages 5-17)` > 30",7,"SELECT s.school, s.street, s.city, s.zip, s.state, f.enrollment_k12, f.enrollment_ages517 FROM schools AS s JOIN (     SELECT cdscode, SUM(""enrollment (k-12)"") AS enrollment_k12, SUM(""enrollment (ages 5-17)"") AS enrollment_ages517     FROM frpm     WHERE ""academic year"" = 2014     GROUP BY cdscode     HAVING ABS(enrollment_k12 - enrollment_ages517) > 30 ) AS f ON s.cdscode = f.cdscode
SELECT s.school, s.street, s.city, s.zip, s.state, f.enrollment_k_12, f.enrollment_ages_5_17 FROM schools AS s JOIN (     SELECT cdscode, SUM(""enrollment (k-12)"") AS enrollment_k_12, SUM(""enrollment (ages 5-17)"") AS enrollment_ages_5_17     FROM frpm     WHERE ""academic year"" = '2013-14'     GROUP BY cdscode     HAVING ABS(enrollment_k_12 - enrollment_ages_5_17) > 30 ) AS f ON s.cdscode = f.cdscode
SELECT s.school, s.street, s.city, s.zip, s.state, f.enrollment_k_12, f.enrollment_ages_5_17 FROM schools AS s JOIN (     SELECT cdscode, SUM(""enrollment (k-12)"") AS enrollment_k_12, SUM(""enrollment (ages 5-17)"") AS enrollment_ages_5_17     FROM frpm     WHERE ""academic year"" = '2013-14'     GROUP BY cdscode     HAVING ABS(enrollment_k_12 - enrollment_ages_5_17) > 30 ) AS f ON s.cdscode = f.cdscode
SELECT s.school, s.street, s.city, s.zip, s.state, f.enrollment_k_12, f.enrollment_ages_5_17 FROM schools AS s JOIN (     SELECT cdscode, SUM(""enrollment (k-12)"") AS enrollment_k_12, SUM(""enrollment (ages 5-17)"") AS enrollment_ages_5_17     FROM frpm     WHERE ""academic year"" = '2013-14'     GROUP BY cdscode     HAVING ABS(enrollment_k_12 - enrollment_ages_5_17) > 30 ) AS f ON s.cdscode = f.cdscode
SELECT s.school, s.street, s.city, s.zip, s.state, f.enrollment_k12, f.enrollment_ages517 FROM schools AS s JOIN (     SELECT cdscode, SUM(""enrollment (k-12)"") AS enrollment_k12, SUM(""enrollment (ages 5-17)"") AS enrollment_ages517     FROM frpm     WHERE ""academic year"" = 2014     GROUP BY cdscode     HAVING ABS(enrollment_k12 - enrollment_ages517) > 30 ) AS f ON s.cdscode = f.cdscode
SELECT s.school, s.street, s.city, s.zip, s.state, f.enrollment_k_12, f.enrollment_ages_5_17 FROM schools AS s JOIN (     SELECT cdscode, SUM(""enrollment (k-12)"") AS enrollment_k_12, SUM(""enrollment (ages 5-17)"") AS enrollment_ages_5_17     FROM frpm     WHERE ""academic year"" = '2019-20'     GROUP BY cdscode     HAVING ABS(enrollment_k_12 - enrollment_ages_5_17) > 30 ) AS f ON s.cdscode = f.cdscode
SELECT schools.school, schools.street, schools.city, schools.zip, schools.state FROM schools JOIN (     SELECT frpm.cdscode, frpm.`enrollment (k-12)`, frpm.`enrollment (ages 5-17)`     FROM frpm     WHERE ABS(`enrollment (k-12)` - `enrollment (ages 5-17)`) > 30 ) AS diff_frpm ON schools.cdscode = diff_frpm.cdscode","SELECT s.school, s.street, s.city, s.zip, s.state, f.enrollment_k_12, f.enrollment_ages_5_17 FROM schools AS s JOIN (     SELECT cdscode, SUM(""enrollment (k-12)"") AS enrollment_k_12, SUM(""enrollment (ages 5-17)"") AS enrollment_ages_5_17     FROM frpm     WHERE ""academic year"" = '2013-14'     GROUP BY cdscode     HAVING ABS(enrollment_k_12 - enrollment_ages_5_17) > 30 ) AS f ON s.cdscode = f.cdscode"
136,981,"On what year did the youngest driver had his first qualifying race? Also state the name, date and time of the race.",formula_1,moderate,"SELECT T3.year, T3.name, T3.date, T3.time FROM qualifying AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId INNER JOIN races AS T3 on T1.raceId = T3.raceId WHERE T1.driverId = ( SELECT driverId FROM drivers ORDER BY dob DESC LIMIT 1 ) ORDER BY T3.date ASC LIMIT 1",7,"SELECT seasons.year, races.name, races.date, races.time FROM seasons JOIN races ON seasons.year = races.year JOIN qualifying ON races.raceid = qualifying.raceid JOIN drivers ON qualifying.driverid = drivers.driverid WHERE drivers.dob = (SELECT MAX(dob) FROM drivers) ORDER BY races.date ASC, races.time ASC LIMIT 1
SELECT seasons.year, races.name, races.date, races.time FROM seasons JOIN races ON seasons.year = races.year JOIN qualifying ON races.raceid = qualifying.raceid JOIN drivers ON qualifying.driverid = drivers.driverid WHERE drivers.dob = (SELECT MAX(dob) FROM drivers) ORDER BY races.date ASC, races.time ASC LIMIT 1
SELECT seasons.year, races.name, races.date, races.time FROM seasons JOIN races ON seasons.year = races.year JOIN qualifying ON races.raceid = qualifying.raceid JOIN drivers ON qualifying.driverid = drivers.driverid WHERE drivers.dob = (SELECT MAX(dob) FROM drivers) LIMIT 1
SELECT seasons.year, races.name, races.date, races.time FROM seasons JOIN races ON seasons.year = races.year JOIN qualifying ON races.raceid = qualifying.raceid JOIN drivers ON qualifying.driverid = drivers.driverid WHERE drivers.dob = (SELECT MAX(dob) FROM drivers) LIMIT 1
SELECT seasons.year, races.name, races.date, races.time FROM seasons JOIN races ON seasons.year = races.year JOIN qualifying ON races.raceid = qualifying.raceid JOIN drivers ON qualifying.driverid = drivers.driverid WHERE drivers.dob = (SELECT MAX(dob) FROM drivers) ORDER BY races.date ASC, races.time ASC LIMIT 1
SELECT seasons.year, races.name, races.date, races.time FROM seasons JOIN races ON seasons.year = races.year JOIN qualifying ON races.raceid = qualifying.raceid JOIN drivers ON qualifying.driverid = drivers.driverid WHERE drivers.dob = (SELECT MAX(dob) FROM drivers) LIMIT 1
SELECT seasons.year, races.name, races.date, races.time FROM seasons JOIN races ON seasons.year = races.year JOIN qualifying ON races.raceid = qualifying.raceid JOIN drivers ON qualifying.driverid = drivers.driverid WHERE drivers.dob = (SELECT MAX(dob) FROM drivers) LIMIT 1","SELECT seasons.year, races.name, races.date, races.time FROM seasons JOIN races ON seasons.year = races.year JOIN qualifying ON races.raceid = qualifying.raceid JOIN drivers ON qualifying.driverid = drivers.driverid WHERE drivers.dob = (SELECT MAX(dob) FROM drivers) LIMIT 1"
137,1339,Calculate the total average cost that Elijah Allen spent in the events on September and October.,student_club,challenging,"SELECT AVG(T2.cost) FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.last_name = 'Allen' AND T1.first_name = 'Elijah' AND (SUBSTR(T2.expense_date, 6, 2) = '09' OR SUBSTR(T2.expense_date, 6, 2) = '10')",7,"SELECT AVG(e.cost) as total_average_cost FROM expense e JOIN attendance a ON e.link_to_member = a.link_to_member JOIN event ev ON a.link_to_event = ev.event_id WHERE ev.event_date BETWEEN '2022-09-01' AND '2022-10-31' AND e.link_to_member = (SELECT member_id FROM member WHERE first_name = 'Elijah' AND last_name = 'Allen')
SELECT AVG(expense.cost) as total_average_cost FROM expense JOIN member ON expense.link_to_member = member.member_id JOIN event ON expense.link_to_budget = event.event_id WHERE member.first_name = 'Elijah' AND member.last_name = 'Allen' AND (strftime('%m', event.event_date) = '09' OR strftime('%m', event.event_date) = '10')
SELECT AVG(e.cost) as total_average_cost FROM expense e JOIN attendance a ON e.link_to_member = a.link_to_member JOIN event ev ON a.link_to_event = ev.event_id WHERE ev.event_date BETWEEN '2022-09-01' AND '2022-10-31' AND e.link_to_member = (SELECT member_id FROM member WHERE first_name = 'Elijah' AND last_name = 'Allen')
SELECT AVG(e.cost) as total_average_cost FROM expense e JOIN attendance a ON e.link_to_member = a.link_to_member JOIN event ev ON a.link_to_event = ev.event_id WHERE ev.event_date BETWEEN '2022-09-01' AND '2022-10-31' AND e.link_to_member = (SELECT member_id FROM member WHERE first_name = 'Elijah' AND last_name = 'Allen')
SELECT AVG(e.cost) as total_average_cost FROM expense e JOIN attendance a ON e.link_to_member = a.link_to_member JOIN event ev ON a.link_to_event = ev.event_id WHERE ev.event_date BETWEEN '2022-09-01' AND '2022-10-31' AND e.link_to_member = (SELECT member_id FROM member WHERE first_name = 'Elijah' AND last_name = 'Allen')
SELECT AVG(e.cost) as total_average_cost FROM expense e JOIN attendance a ON e.link_to_member = a.link_to_member JOIN event ev ON a.link_to_event = ev.event_id JOIN member m ON e.link_to_member = m.member_id WHERE m.first_name = 'Elijah' AND m.last_name = 'Allen' AND (ev.event_date BETWEEN '2022-09-01' AND '2022-10-31')
SELECT AVG(expense.cost) as total_average_cost FROM expense JOIN member ON expense.link_to_member = member.member_id JOIN event ON expense.link_to_budget = event.event_id WHERE member.first_name = 'Elijah' AND member.last_name = 'Allen' AND (strftime('%m', event.event_date) = '09' OR strftime('%m', event.event_date) = '10')",SELECT AVG(e.cost) as total_average_cost FROM expense e JOIN attendance a ON e.link_to_member = a.link_to_member JOIN event ev ON a.link_to_event = ev.event_id WHERE ev.event_date BETWEEN '2022-09-01' AND '2022-10-31' AND e.link_to_member = (SELECT member_id FROM member WHERE first_name = 'Elijah' AND last_name = 'Allen')
138,988,List down top 3 German drivers who has the shortest average pit stop duration and were born between 1980-1985.,formula_1,challenging,"SELECT T2.forename, T2.surname FROM pitStops AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId WHERE T2.nationality = 'German' AND STRFTIME('%Y', T2.dob) BETWEEN '1980' AND '1985' GROUP BY T2.forename, T2.surname ORDER BY AVG(T1.duration) LIMIT 3",7,"SELECT drivers.forename, drivers.surname, AVG(pitstops.duration) as avg_pit_stop_duration FROM drivers JOIN results ON drivers.driverid = results.driverid JOIN pitstops ON results.raceid = pitstops.raceid AND results.driverid = pitstops.driverid WHERE drivers.nationality = 'German' AND drivers.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY drivers.driverid ORDER BY avg_pit_stop_duration ASC LIMIT 3
SELECT drivers.forename, drivers.surname, AVG(pitstops.duration) as avg_pit_stop_duration FROM drivers JOIN results ON drivers.driverid = results.driverid JOIN pitstops ON results.raceid = pitstops.raceid AND results.driverid = pitstops.driverid WHERE drivers.nationality = 'German' AND drivers.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY drivers.driverid ORDER BY avg_pit_stop_duration ASC LIMIT 3
SELECT drivers.forename, drivers.surname, AVG(pitstops.duration) as avg_pit_stop_duration FROM drivers JOIN results ON drivers.driverid = results.driverid JOIN pitstops ON results.raceid = pitstops.raceid AND results.driverid = pitstops.driverid WHERE drivers.nationality = 'German' AND drivers.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY drivers.driverid ORDER BY avg_pit_stop_duration ASC LIMIT 3
SELECT drivers.forename, drivers.surname, AVG(pitstops.duration) as avg_pit_stop_duration FROM drivers JOIN results ON drivers.driverid = results.driverid JOIN pitstops ON results.raceid = pitstops.raceid AND results.driverid = pitstops.driverid WHERE drivers.nationality = 'German' AND drivers.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY drivers.driverid ORDER BY avg_pit_stop_duration ASC LIMIT 3
SELECT drivers.name, AVG(pitstops.duration) as avg_pit_stop_duration FROM drivers JOIN results ON drivers.driverid = results.driverid JOIN pitstops ON results.raceid = pitstops.raceid AND results.driverid = pitstops.driverid WHERE drivers.nationality = 'German' AND drivers.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY drivers.driverid ORDER BY avg_pit_stop_duration ASC LIMIT 3
SELECT drivers.forename, drivers.surname, AVG(pitstops.duration) as avg_pit_stop_duration FROM drivers JOIN results ON drivers.driverid = results.driverid JOIN pitstops ON results.raceid = pitstops.raceid AND results.driverid = pitstops.driverid WHERE drivers.nationality = 'German' AND drivers.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY drivers.driverid ORDER BY avg_pit_stop_duration ASC LIMIT 3
SELECT drivers.forename, drivers.surname, AVG(pitstops.duration) as avg_pit_stop_duration FROM drivers JOIN results ON drivers.driverid = results.driverid JOIN pitstops ON results.raceid = pitstops.raceid AND results.driverid = pitstops.driverid WHERE drivers.nationality = 'German' AND drivers.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY drivers.driverid ORDER BY avg_pit_stop_duration ASC LIMIT 3","SELECT drivers.forename, drivers.surname, AVG(pitstops.duration) as avg_pit_stop_duration FROM drivers JOIN results ON drivers.driverid = results.driverid JOIN pitstops ON results.raceid = pitstops.raceid AND results.driverid = pitstops.driverid WHERE drivers.nationality = 'German' AND drivers.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY drivers.driverid ORDER BY avg_pit_stop_duration ASC LIMIT 3"
139,28,"Consider the average difference between K-12 enrollment and 15-17 enrollment of schools that are locally funded, list the names and DOC type of schools which has a difference above this average.",california_schools,challenging,"SELECT T2.School, T2.DOC FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.FundingType = 'Locally funded' AND (T1.`Enrollment (K-12)` - T1.`Enrollment (Ages 5-17)`) > (SELECT AVG(T3.`Enrollment (K-12)` - T3.`Enrollment (Ages 5-17)`) FROM frpm AS T3 INNER JOIN schools AS T4 ON T3.CDSCode = T4.CDSCode WHERE T4.FundingType = 'Locally funded')",7,"SELECT schools.school, schools.doc, satscores.avgscrread, satscores.avgscrmath, satscores.avgscrwrite FROM schools JOIN satscores ON schools.ncesdist = satscores.dname JOIN frpm ON schools.ncesdist = frpm.district code WHERE frpm.enrollment (k-12) - frpm.enrollment (ages 5-17) > (     SELECT AVG(frpm.enrollment (k-12) - frpm.enrollment (ages 5-17))     FROM frpm     WHERE frpm.charter funding type = 'Locally Funded' ) ORDER BY satscores.avgscrread DESC, satscores.avgscrmath DESC, satscores.avgscrwrite DESC
SELECT s.school, s.doc, AVG(ABS(k.enrollment_k_12 - k.enrollment_ages_5_17)) as difference FROM schools as s JOIN (SELECT cdscode, ""enrollment (k-12)"" as enrollment_k_12, ""enrollment (ages 5-17)"" as enrollment_ages_5_17       FROM frpm       WHERE ""charter funding type"" = 'Locally Funded') as k ON s.cdscode = k.cdscode WHERE s.doc = 'Elementary' OR s.doc = 'Secondary' GROUP BY s.school, s.doc HAVING difference > (SELECT AVG(ABS(""enrollment (k-12)"" - ""enrollment (ages 5-17)""))                      FROM frpm                      WHERE ""charter funding type"" = 'Locally Funded')
SELECT s.school, s.doc, avg(abs(k.enrollment_k_12 - k.enrollment_ages_5_17)) as difference FROM schools as s JOIN (SELECT cdscode, enrollment_k_12, enrollment_ages_5_17       FROM satscores       WHERE charter_school_y_n = 'n' AND charter_funding_type = 'locally funded') as k ON s.cdscode = k.cdscode GROUP BY s.school, s.doc HAVING difference > (SELECT AVG(abs(enrollment_k_12 - enrollment_ages_5_17))                      FROM satscores                      WHERE charter_school_y_n = 'n' AND charter_funding_type = 'locally funded')
SELECT s.school, s.doc, AVG(ABS(k.enrollment_k_12 - k.enrollment_ages_5_17)) as difference FROM schools as s JOIN (SELECT cdscode, ""enrollment (k-12)"" as enrollment_k_12, ""enrollment (ages 5-17)"" as enrollment_ages_5_17       FROM frpm       WHERE ""charter funding type"" = 'Locally funded') as k ON s.cdscode = k.cdscode GROUP BY s.school, s.doc HAVING difference > (SELECT AVG(ABS(""enrollment (k-12)"" - ""enrollment (ages 5-17)""))                      FROM frpm                      WHERE ""charter funding type"" = 'Locally funded')
SELECT s.school, s.doc, AVG(ABS(s.`enrollment (k-12)` - s.`enrollment (ages 5-17)`)) as difference FROM schools s JOIN satscores ss ON s.cdscode = ss.cds WHERE s.`charter funding type` = 'Locally Funded' AND s.`educational option type` = 'K-12' GROUP BY s.school, s.doc HAVING difference > (SELECT AVG(ABS(enroll12 - numtsttakr)) FROM satscores WHERE rtype = 'K-12')
SELECT schools.school, schools.doc, satscores.avgscrread, satscores.avgscrmath, satscores.avgscrwrite FROM schools JOIN satscores ON schools.ncesdist = satscores.dname JOIN frpm ON schools.ncesdist = frpm.district code WHERE frpm.charter funding type = 'Locally Funded' AND ABS(frpm.`enrollment (k-12)` - frpm.`enrollment (ages 5-17)`) > (SELECT AVG(ABS(frpm.`enrollment (k-12)` - frpm.`enrollment (ages 5-17)`)) FROM frpm WHERE frpm.charter funding type = 'Locally Funded')
SELECT s.school, s.doc, AVG(ABS(s.`enrollment (k-12)` - s.`enrollment (ages 5-17)`)) as difference FROM schools s JOIN satscores ss ON s.school = ss.sname WHERE s.`charter funding type` = 'Locally Funded' AND ss.numtsttakr > (SELECT AVG(numtsttakr) FROM satscores) GROUP BY s.school, s.doc HAVING difference > (SELECT AVG(ABS(enroll12 - numge1500)) FROM satscores WHERE numtsttakr > (SELECT AVG(numtsttakr) FROM satscores)) ","SELECT schools.school, schools.doc, satscores.avgscrread, satscores.avgscrmath, satscores.avgscrwrite FROM schools JOIN satscores ON schools.ncesdist = satscores.dname JOIN frpm ON schools.ncesdist = frpm.district code WHERE frpm.enrollment (k-12) - frpm.enrollment (ages 5-17) > (     SELECT AVG(frpm.enrollment (k-12) - frpm.enrollment (ages 5-17))     FROM frpm     WHERE frpm.charter funding type = 'Locally Funded' ) ORDER BY satscores.avgscrread DESC, satscores.avgscrmath DESC, satscores.avgscrwrite DESC"
140,94,"List out the account numbers of female clients who are oldest and has lowest average salary, calculate the gap between this lowest average salary with the highest average salary?",financial,challenging,"SELECT T1.account_id , ( SELECT MAX(A11) - MIN(A11) FROM district ) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T1.account_id = T3.account_id INNER JOIN client AS T4 ON T3.client_id = T4.client_id WHERE T2.district_id = ( SELECT district_id FROM client WHERE gender = 'F' ORDER BY birth_date ASC LIMIT 1 ) ORDER BY T2.A11 DESC LIMIT 1",7,"SELECT client.client_id, account.account_id, AVG(trans.amount) as avg_salary FROM client JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id JOIN trans ON account.account_id = trans.account_id WHERE client.gender = 'Female' GROUP BY client.client_id, account.account_id ORDER BY avg_salary ASC LIMIT 1
SELECT client.client_id, account.account_id, AVG(trans.amount) as avg_salary FROM client JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id JOIN trans ON account.account_id = trans.account_id WHERE client.gender = 'Female' GROUP BY client.client_id, account.account_id ORDER BY avg_salary ASC LIMIT 1
SELECT client.client_id, account.account_id, AVG(trans.amount) as avg_salary FROM client JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id JOIN trans ON account.account_id = trans.account_id WHERE client.gender = 'Female' GROUP BY client.client_id, account.account_id ORDER BY avg_salary ASC LIMIT 1
SELECT client.client_id, account.account_id, AVG(trans.amount) as avg_salary FROM client JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id JOIN trans ON account.account_id = trans.account_id WHERE client.gender = 'Female' GROUP BY client.client_id, account.account_id ORDER BY avg_salary ASC LIMIT 1
SELECT client.client_id, account.account_id, AVG(trans.amount) as avg_salary FROM client JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id JOIN trans ON account.account_id = trans.account_id WHERE client.gender = 'Female' GROUP BY client.client_id, account.account_id ORDER BY avg_salary ASC LIMIT 1
SELECT client.client_id, account.account_id, AVG(trans.amount) as avg_salary FROM client JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id JOIN trans ON account.account_id = trans.account_id WHERE client.gender = 'Female' GROUP BY client.client_id, account.account_id ORDER BY avg_salary ASC LIMIT 1
SELECT client.client_id, account.account_id, AVG(trans.amount) as avg_salary FROM client JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id JOIN trans ON account.account_id = trans.account_id WHERE client.gender = 'Female' GROUP BY client.client_id, account.account_id ORDER BY avg_salary ASC LIMIT 1","SELECT client.client_id, account.account_id, AVG(trans.amount) as avg_salary FROM client JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id JOIN trans ON account.account_id = trans.account_id WHERE client.gender = 'Female' GROUP BY client.client_id, account.account_id ORDER BY avg_salary ASC LIMIT 1"
141,281,Tally the toxicology element of the 4th atom of each molecule that was carcinogenic.,toxicology,challenging,"SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND SUBSTR(T1.atom_id, -1) = '4' AND LENGTH(T1.atom_id) = 7",7,"SELECT COUNT(*) FROM atom  INNER JOIN connected ON atom.atom_id = connected.atom_id  INNER JOIN bond ON connected.bond_id = bond.bond_id  INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE atom.atom_id IN (     SELECT connected.atom_id FROM connected      INNER JOIN bond ON connected.bond_id = bond.bond_id      INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id      WHERE molecule.label = 'carcinogenic' AND atom.atom_id = connected.atom_id2      AND atom.element = 'toxicology' AND atom.atom_id % 1 = 0 ) AND atom.atom_id % 4 = 0
SELECT COUNT(*) FROM atom  INNER JOIN connected ON atom.atom_id = connected.atom_id  INNER JOIN bond ON connected.bond_id = bond.bond_id  INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE atom.element = 'toxicology' AND atom.atom_id IN  (SELECT atom_id FROM atom WHERE molecule_id IN  (SELECT molecule_id FROM molecule WHERE label = 'carcinogenic')  ORDER BY atom_id LIMIT 1 OFFSET 3)
SELECT COUNT(*) FROM atom  INNER JOIN connected ON atom.atom_id = connected.atom_id  INNER JOIN bond ON connected.bond_id = bond.bond_id  INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE atom.atom_id IN (     SELECT atom.atom_id FROM atom      INNER JOIN connected ON atom.atom_id = connected.atom_id      INNER JOIN bond ON connected.bond_id = bond.bond_id      INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id      WHERE molecule.label = 'carcinogenic' AND atom.atom_id = 4 ) AND atom.element = 'toxicology'
SELECT COUNT(*) FROM atom  INNER JOIN connected ON atom.atom_id = connected.atom_id  INNER JOIN bond ON connected.bond_id = bond.bond_id  INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE atom.atom_id IN (     SELECT connected.atom_id FROM connected      INNER JOIN bond ON connected.bond_id = bond.bond_id      INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id      WHERE molecule.label = 'carcinogenic' AND atom.atom_id = connected.atom_id2      AND atom.element = 'toxicology' AND atom.atom_id % 1 = 0 ) AND atom.atom_id % 4 = 0
SELECT COUNT(*) FROM atom  INNER JOIN connected ON atom.atom_id = connected.atom_id  INNER JOIN bond ON connected.bond_id = bond.bond_id  INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE atom.atom_id IN (     SELECT connected.atom_id FROM connected      INNER JOIN bond ON connected.bond_id = bond.bond_id      INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id      WHERE molecule.label = 'carcinogenic' AND atom.atom_id = connected.atom_id2      AND atom.element = 'toxicology'      LIMIT 1 OFFSET 3 )
SELECT COUNT(*) FROM atom  INNER JOIN connected ON atom.atom_id = connected.atom_id  INNER JOIN bond ON connected.bond_id = bond.bond_id  INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE atom.element = 'toxicology' AND atom.atom_id IN  (SELECT atom.atom_id FROM atom  INNER JOIN connected ON atom.atom_id = connected.atom_id  INNER JOIN bond ON connected.bond_id = bond.bond_id  INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE molecule.label = 'carcinogenic'  GROUP BY atom.molecule_id  HAVING COUNT(atom.atom_id) = 4)
SELECT COUNT(*) FROM atom  INNER JOIN connected ON atom.atom_id = connected.atom_id  INNER JOIN bond ON connected.bond_id = bond.bond_id  INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE atom.element = 'toxicology' AND atom.atom_id IN  (SELECT atom_id FROM atom WHERE molecule_id IN  (SELECT molecule_id FROM molecule WHERE label = 'carcinogenic')  ORDER BY atom_id LIMIT 1 OFFSET 3)",SELECT COUNT(*) FROM atom  INNER JOIN connected ON atom.atom_id = connected.atom_id  INNER JOIN bond ON connected.bond_id = bond.bond_id  INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE atom.atom_id IN (     SELECT connected.atom_id FROM connected      INNER JOIN bond ON connected.bond_id = bond.bond_id      INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id      WHERE molecule.label = 'carcinogenic' AND atom.atom_id = connected.atom_id2      AND atom.element = 'toxicology' AND atom.atom_id % 1 = 0 ) AND atom.atom_id % 4 = 0
142,730,List the superheroes from Marvel Comics who have the super power of 'Super Strength'.,superhero,challenging,SELECT superhero_name FROM superhero AS T1 WHERE EXISTS (SELECT 1 FROM hero_power AS T2 INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Super Strength' AND T1.id = T2.hero_id)AND EXISTS (SELECT 1 FROM publisher AS T4 WHERE T4.publisher_name = 'Marvel Comics' AND T1.publisher_id = T4.id),7,"SELECT superhero.superhero_name, superhero.full_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength' AND superhero.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')
SELECT superhero.superhero_name, superhero.full_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength' AND superhero.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')
SELECT superhero.superhero_name, superhero.full_name FROM superhero JOIN hero_power ON hero_power.hero_id = superhero.id JOIN superpower ON superpower.id = hero_power.power_id WHERE superpower.power_name = 'Super Strength' AND superhero.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')
SELECT superhero_name, full_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength' AND superhero.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')
SELECT superhero.superhero_name, superhero.full_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength' AND superhero.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')
SELECT superhero.superhero_name, superhero.full_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength' AND superhero.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')
SELECT superhero.superhero_name, superhero.full_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength' AND superhero.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')","SELECT superhero.superhero_name, superhero.full_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength' AND superhero.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')"
143,1041,"For the teams with normal build-up play dribbling class in 2014, List the names of the teams with less than average chance creation passing, in descending order of chance creation passing.",european_football_2,challenging,"SELECT t3.team_long_name FROM Team AS t3 INNER JOIN Team_Attributes AS t4 ON t3.team_api_id = t4.team_api_id WHERE t4.buildUpPlayDribblingClass = 'Normal' AND t4.chanceCreationPassing < ( SELECT CAST(SUM(t2.chanceCreationPassing) AS REAL) / COUNT(t1.id) FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t2.buildUpPlayDribblingClass = 'Normal' AND SUBSTR(t2.`date`, 1, 4) = '2014') ORDER BY t4.chanceCreationPassing DESC",7,"SELECT team.team_long_name FROM team JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id JOIN match ON team.team_api_id = match.home_team_api_id OR team.team_api_id = match.away_team_api_id WHERE team_attributes.buildupplaydribblingclass = 'normal' AND match.season = '2014' GROUP BY team.team_long_name HAVING AVG(team_attributes.chancecreationpassing) < (SELECT AVG(chancecreationpassing) FROM team_attributes) ORDER BY AVG(team_attributes.chancecreationpassing) DESC
SELECT team.team_long_name FROM team JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id JOIN match ON team.team_api_id = match.home_team_api_id OR team.team_api_id = match.away_team_api_id WHERE team_attributes.buildupplaydribblingclass = 'normal' AND match.season = '2014' GROUP BY team.team_long_name HAVING AVG(team_attributes.chancecreationpassing) < (SELECT AVG(chancecreationpassing) FROM team_attributes) ORDER BY AVG(team_attributes.chancecreationpassing) DESC
SELECT team.team_long_name FROM team JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id JOIN match ON team.team_api_id = match.home_team_api_id OR team.team_api_id = match.away_team_api_id WHERE team_attributes.buildupplaydribblingclass = 'normal' AND match.season = '2014' GROUP BY team.team_long_name HAVING AVG(team_attributes.chancecreationpassing) < (SELECT AVG(chancecreationpassing) FROM team_attributes) ORDER BY AVG(team_attributes.chancecreationpassing) DESC
SELECT team.team_long_name FROM team JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id JOIN match ON team.team_api_id = match.home_team_api_id OR team.team_api_id = match.away_team_api_id WHERE team_attributes.buildupplaydribblingclass = 'normal' AND match.season = '2014' GROUP BY team.team_long_name HAVING AVG(team_attributes.chancecreationpassing) < (SELECT AVG(chancecreationpassing) FROM team_attributes) ORDER BY AVG(team_attributes.chancecreationpassing) DESC
SELECT team.team_long_name FROM team JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id JOIN match ON team.team_api_id = match.home_team_api_id OR team.team_api_id = match.away_team_api_id WHERE team_attributes.buildupplaydribblingclass = 'normal' AND match.season = '2014' GROUP BY team.team_long_name HAVING AVG(team_attributes.chancecreationpassing) < (SELECT AVG(chancecreationpassing) FROM team_attributes) ORDER BY AVG(team_attributes.chancecreationpassing) DESC
SELECT team.team_long_name FROM team JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id JOIN match ON team.team_api_id = match.home_team_api_id OR team.team_api_id = match.away_team_api_id WHERE team_attributes.buildupplaydribblingclass = 'normal' AND match.season = '2014' GROUP BY team.team_long_name HAVING AVG(team_attributes.chancecreationpassing) < (SELECT AVG(chancecreationpassing) FROM team_attributes) ORDER BY AVG(team_attributes.chancecreationpassing) DESC
SELECT team.team_long_name FROM team JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id JOIN match ON team.team_api_id = match.home_team_api_id OR team.team_api_id = match.away_team_api_id WHERE team_attributes.buildupplaydribblingclass = 'normal' AND match.season = '2014' GROUP BY team.team_long_name HAVING AVG(team_attributes.chancecreationpassing) < (SELECT AVG(chancecreationpassing) FROM team_attributes) ORDER BY AVG(team_attributes.chancecreationpassing) DESC",SELECT team.team_long_name FROM team JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id JOIN match ON team.team_api_id = match.home_team_api_id OR team.team_api_id = match.away_team_api_id WHERE team_attributes.buildupplaydribblingclass = 'normal' AND match.season = '2014' GROUP BY team.team_long_name HAVING AVG(team_attributes.chancecreationpassing) < (SELECT AVG(chancecreationpassing) FROM team_attributes) ORDER BY AVG(team_attributes.chancecreationpassing) DESC
144,1016,"In the race a driver set the lap record for the Austrian Grand Prix Circuit, how long did he spent at the pit stop at that same race?",formula_1,challenging,"WITH fastest_lap_times AS ( SELECT T1.raceId, T1.driverId, T1.FastestLapTime, (CAST(SUBSTR(T1.FastestLapTime, 1, INSTR(T1.FastestLapTime, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, ':') + 1, INSTR(T1.FastestLapTime, '.') - INSTR(T1.FastestLapTime, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, '.') + 1) AS REAL) / 1000) as time_in_seconds FROM results AS T1 WHERE T1.FastestLapTime IS NOT NULL), lap_record_race AS ( SELECT T1.raceId, T1.driverId FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN circuits AS T3 on T2.circuitId = T3.circuitId INNER JOIN ( SELECT MIN(fastest_lap_times.time_in_seconds) as min_time_in_seconds FROM fastest_lap_times INNER JOIN races AS T2 on fastest_lap_times.raceId = T2.raceId INNER JOIN circuits AS T3 on T2.circuitId = T3.circuitId WHERE T2.name = 'Austrian Grand Prix') AS T4 ON (CAST(SUBSTR(T1.FastestLapTime, 1, INSTR(T1.FastestLapTime, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, ':') + 1, INSTR(T1.FastestLapTime, '.') - INSTR(T1.FastestLapTime, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, '.') + 1) AS REAL) / 1000) = T4.min_time_in_seconds WHERE T2.name = 'Austrian Grand Prix') SELECT T4.duration FROM lap_record_race INNER JOIN pitStops AS T4 on lap_record_race.raceId = T4.raceId AND lap_record_race.driverId = T4.driverId",7,"SELECT pitstops.duration  FROM pitstops  JOIN races ON pitstops.raceid = races.raceid  WHERE races.name = ""Austrian Grand Prix"" AND pitstops.driverid = (SELECT driverid FROM results WHERE raceid = races.raceid ORDER BY position ASC LIMIT 1)
SELECT pitstops.time, pitstops.duration, pitstops.milliseconds  FROM pitstops  JOIN races ON pitstops.raceid = races.raceid  WHERE races.name = ""Austrian Grand Prix""
SELECT pitstops.duration FROM pitstops INNER JOIN races ON pitstops.raceid = races.raceid WHERE races.name = ""Austrian Grand Prix"" AND pitstops.driverid = (SELECT driverid FROM results WHERE raceid = races.raceid ORDER BY position ASC LIMIT 1)
SELECT pitstops.duration  FROM pitstops  JOIN races ON pitstops.raceid = races.raceid  WHERE races.name = ""Austrian Grand Prix"" AND pitstops.driverid = (SELECT driverid FROM results WHERE raceid = races.raceid ORDER BY position ASC LIMIT 1)
SELECT pitstops.time, pitstops.duration, pitstops.milliseconds  FROM pitstops  JOIN races ON pitstops.raceid = races.raceid  WHERE races.name = ""Austrian Grand Prix""
SELECT pitstops.duration  FROM pitstops  JOIN races ON pitstops.raceid = races.raceid  WHERE races.name = ""Austrian Grand Prix"" AND pitstops.driverid = (     SELECT driverid      FROM results      JOIN races ON results.raceid = races.raceid      WHERE races.name = ""Austrian Grand Prix"" AND results.fastestlap = 1)
SELECT pitstops.duration FROM pitstops INNER JOIN races ON pitstops.raceid = races.raceid WHERE races.name = ""Austrian Grand Prix""","SELECT pitstops.duration  FROM pitstops  JOIN races ON pitstops.raceid = races.raceid  WHERE races.name = ""Austrian Grand Prix"" AND pitstops.driverid = (SELECT driverid FROM results WHERE raceid = races.raceid ORDER BY position ASC LIMIT 1)"
145,1242,"For laboratory examinations take in 1984, list all patients below 50 years old with normal platelet level.",thrombosis_prediction,challenging,"SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.PLT BETWEEN 100 AND 400 AND STRFTIME('%Y', T2.Date) - STRFTIME('%Y', T1.Birthday) < 50 AND STRFTIME('%Y', T2.Date) = '1984'",7,"SELECT patient.id, patient.birthday, patient.sex, laboratory.plt FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE strftime('%Y', 'now') - strftime('%Y', patient.birthday) < 50 AND laboratory.plt BETWEEN 10000 AND 30000
SELECT patient.id, patient.birthday, patient.sex, laboratory.plt  FROM patient  JOIN laboratory ON patient.id = laboratory.id  WHERE strftime('%Y', 'now') - strftime('%Y', patient.birthday) < 50  AND laboratory.examination_date LIKE '1984%'  AND laboratory.plt BETWEEN 10000 AND 30000
SELECT patient.id, patient.birthday, patient.sex, laboratory.plt  FROM patient  JOIN laboratory ON patient.id = laboratory.id  WHERE strftime('%Y', 'now') - strftime('%Y', patient.birthday) < 50  AND laboratory.examination_date LIKE '1984%'  AND laboratory.plt >= 120 AND laboratory.plt <= 300
SELECT patient.id, patient.birthday, patient.sex, laboratory.plt  FROM patient  JOIN laboratory ON patient.id = laboratory.id  WHERE strftime('%Y', 'now') - strftime('%Y', patient.birthday) < 50  AND patient.first_date LIKE '1984%'  AND laboratory.plt BETWEEN 10000 AND 30000
SELECT patient.id, patient.birthday, patient.sex, laboratory.plt  FROM patient  JOIN laboratory ON patient.id = laboratory.id  WHERE strftime('%Y', 'now') - strftime('%Y', patient.birthday) < 50  AND laboratory.examination_date LIKE '1984%'  AND laboratory.plt BETWEEN 10000 AND 30000
SELECT patient.id, patient.birthday, patient.sex, laboratory.plt  FROM patient  JOIN laboratory ON patient.id = laboratory.id  WHERE strftime('%Y', 'now') - strftime('%Y', patient.birthday) < 50  AND patient.first_date LIKE '1984%'  AND laboratory.plt BETWEEN 10000 AND 30000
SELECT patient.id, patient.birthday, patient.sex, laboratory.plt FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE strftime('%Y', 'now') - strftime('%Y', patient.birthday) < 50 AND laboratory.plt >= 120 AND laboratory.plt <= 300","SELECT patient.id, patient.birthday, patient.sex, laboratory.plt  FROM patient  JOIN laboratory ON patient.id = laboratory.id  WHERE strftime('%Y', 'now') - strftime('%Y', patient.birthday) < 50  AND laboratory.examination_date LIKE '1984%'  AND laboratory.plt BETWEEN 10000 AND 30000"
146,701,"Among all the posts posted by the most influential user, identify the percentage with a score above 50.",codebase_community,challenging,SELECT CAST(SUM(CASE WHEN T2.Score > 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Id) FROM users T1 INNER JOIN posts T2 ON T1.Id = T2.OwnerUserId INNER JOIN ( SELECT MAX(Reputation) AS max_reputation FROM users ) T3 ON T1.Reputation = T3.max_reputation,7,"SELECT (     SELECT COUNT(*)      FROM posts      WHERE owneruserid = (         SELECT id          FROM users          ORDER BY reputation DESC          LIMIT 1     ) AND score > 50 ) / (     SELECT COUNT(*)      FROM posts      WHERE owneruserid = (         SELECT id          FROM users          ORDER BY reputation DESC          LIMIT 1     ) ) * 100 AS percentage
SELECT (     SELECT COUNT(*)     FROM posts AS p     JOIN users AS u ON p.owneruserid = u.id     WHERE u.reputation = (SELECT MAX(reputation) FROM users)     AND p.score > 50 ) / (     SELECT COUNT(*)     FROM posts AS p     JOIN users AS u ON p.owneruserid = u.id     WHERE u.reputation = (SELECT MAX(reputation) FROM users) ) * 100 AS percentage
SELECT (     SELECT COUNT(*)     FROM posts AS p     JOIN users AS u ON p.owneruserid = u.id     WHERE u.reputation = (SELECT MAX(reputation) FROM users)     AND p.score > 50 ) / (     SELECT COUNT(*)     FROM posts AS p     JOIN users AS u ON p.owneruserid = u.id     WHERE u.reputation = (SELECT MAX(reputation) FROM users) ) * 100 AS percentage
SELECT (     SELECT COUNT(*)      FROM posts      WHERE owneruserid = (         SELECT id          FROM users          ORDER BY reputation DESC          LIMIT 1     ) AND score > 50 ) / (     SELECT COUNT(*)      FROM posts      WHERE owneruserid = (         SELECT id          FROM users          ORDER BY reputation DESC          LIMIT 1     ) ) * 100 AS percentage
SELECT (     SELECT COUNT(*)      FROM posts      WHERE owneruserid = (         SELECT id          FROM users          ORDER BY reputation DESC          LIMIT 1     ) AND score > 50 ) / (     SELECT COUNT(*)      FROM posts      WHERE owneruserid = (         SELECT id          FROM users          ORDER BY reputation DESC          LIMIT 1     ) ) * 100 AS percentage
SELECT (     SELECT COUNT(*)      FROM posts      WHERE owneruserid = (         SELECT id          FROM users          ORDER BY reputation DESC          LIMIT 1     ) AND score > 50 ) / (     SELECT COUNT(*)      FROM posts      WHERE owneruserid = (         SELECT id          FROM users          ORDER BY reputation DESC          LIMIT 1     ) ) * 100 AS percentage
SELECT (     SELECT COUNT(*)      FROM posts      WHERE owneruserid = (         SELECT id          FROM users          ORDER BY reputation DESC          LIMIT 1     ) AND score > 50 ) / (     SELECT COUNT(*)      FROM posts      WHERE owneruserid = (         SELECT id          FROM users          ORDER BY reputation DESC          LIMIT 1     ) ) * 100 AS percentage",SELECT (     SELECT COUNT(*)      FROM posts      WHERE owneruserid = (         SELECT id          FROM users          ORDER BY reputation DESC          LIMIT 1     ) AND score > 50 ) / (     SELECT COUNT(*)      FROM posts      WHERE owneruserid = (         SELECT id          FROM users          ORDER BY reputation DESC          LIMIT 1     ) ) * 100 AS percentage
147,1099,Which foot is preferred by Abdou Diallo?,european_football_2,simple,SELECT DISTINCT t2.preferred_foot FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.player_name = 'Abdou Diallo',7,"SELECT preferred_foot FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Abdou Diallo')
SELECT preferred_foot FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Abdou Diallo')
SELECT preferred_foot FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Abdou Diallo')
SELECT preferred_foot FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Abdou Diallo')
SELECT preferred_foot FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Abdou Diallo')
SELECT preferred_foot FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Abdou Diallo')
SELECT preferred_foot FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Abdou Diallo')",SELECT preferred_foot FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Abdou Diallo')
148,932,In which years did Lewis Hamilton participate in a Formula_1 race?,formula_1,simple,SELECT DISTINCT T1.year FROM races AS T1 INNER JOIN results AS T2 ON T2.raceId = T1.raceId INNER JOIN drivers AS T3 ON T3.driverId = T2.driverId WHERE T3.forename = 'Lewis' AND T3.surname = 'Hamilton',7,"SELECT DISTINCT r.year FROM races r JOIN results res ON r.raceid = res.raceid JOIN drivers d ON res.driverid = d.driverid WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'
SELECT DISTINCT r.year FROM races r JOIN results res ON r.raceid = res.raceid JOIN drivers d ON res.driverid = d.driverid WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'
SELECT DISTINCT r.year FROM races r JOIN results res ON r.raceid = res.raceid JOIN drivers d ON d.driverid = res.driverid WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'
SELECT DISTINCT r.year FROM races AS r JOIN results AS rs ON r.raceid = rs.raceid JOIN drivers AS d ON rs.driverid = d.driverid WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'
SELECT DISTINCT r.year FROM races r JOIN results res ON r.raceid = res.raceid JOIN drivers d ON res.driverid = d.driverid WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'
SELECT DISTINCT r.year FROM races r JOIN results res ON r.raceid = res.raceid JOIN drivers d ON res.driverid = d.driverid WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'
SELECT DISTINCT r.year FROM races r JOIN results res ON r.raceid = res.raceid JOIN drivers d ON res.driverid = d.driverid WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'",SELECT DISTINCT r.year FROM races r JOIN results res ON r.raceid = res.raceid JOIN drivers d ON res.driverid = d.driverid WHERE d.forename = 'Lewis' AND d.surname = 'Hamilton'
149,231,Which bond type accounted for the majority of the bonds found in molecule TR010 and state whether or not this molecule is carcinogenic?,toxicology,challenging,"SELECT T.bond_type FROM ( SELECT T1.bond_type, COUNT(T1.molecule_id) FROM bond AS T1  WHERE T1.molecule_id = 'TR010' GROUP BY T1.bond_type ORDER BY COUNT(T1.molecule_id) DESC LIMIT 1 ) AS T",7,"SELECT bond.bond_type, molecule.carcinogenic  FROM bond  INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id  WHERE molecule.label = 'TR010'  GROUP BY bond.bond_type  ORDER BY COUNT(*) DESC  LIMIT 1
SELECT bond.bond_type, molecule.carcinogenic  FROM bond  JOIN molecule ON bond.molecule_id = molecule.molecule_id  WHERE molecule.label = 'TR010'  GROUP BY bond.bond_type  ORDER BY COUNT(*) DESC  LIMIT 1
SELECT bond.bond_type, molecule.carcinogenic FROM bond INNER JOIN connected ON bond.bond_id = connected.bond_id INNER JOIN atom ON connected.atom_id = atom.atom_id INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR010' GROUP BY bond.bond_type ORDER BY COUNT(*) DESC LIMIT 1
SELECT bond.bond_type, molecule.carcinogenic  FROM bond  INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id  WHERE molecule.label = 'TR010'  GROUP BY bond.bond_type  ORDER BY COUNT(*) DESC  LIMIT 1
SELECT bond.bond_type, molecule.carcinogenic  FROM bond  INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id  WHERE molecule.label = 'TR010'  GROUP BY bond.bond_type  ORDER BY COUNT(*) DESC  LIMIT 1
SELECT bond.bond_type, molecule.carcinogenic  FROM bond  JOIN molecule ON bond.molecule_id = molecule.molecule_id  WHERE molecule.label = 'TR010'
SELECT bond.bond_type, molecule.carcinogenic  FROM bond  INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id  WHERE molecule.label = 'TR010'  GROUP BY bond.bond_type  ORDER BY COUNT(*) DESC  LIMIT 1","SELECT bond.bond_type, molecule.carcinogenic  FROM bond  INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id  WHERE molecule.label = 'TR010'  GROUP BY bond.bond_type  ORDER BY COUNT(*) DESC  LIMIT 1"
150,819,"In superheroes with missing weight data, calculate the difference between the number of superheroes with blue eyes and no eye color.",superhero,challenging,SELECT SUM(CASE WHEN T2.id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.id = 1 THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg = 0 OR T1.weight_kg is NULL,7,"SELECT COUNT(CASE WHEN colour.colour_name = 'blue' THEN 1 END) - COUNT(CASE WHEN colour.colour_name IS NULL THEN 1 END) AS difference FROM superhero LEFT JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.weight_kg IS NULL
SELECT COUNT(CASE WHEN colour.colour_name = 'blue' THEN 1 END) - COUNT(CASE WHEN colour.colour_name IS NULL THEN 1 END) AS difference FROM superhero LEFT JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.weight_kg IS NULL
SELECT COUNT(CASE WHEN eye_colour_id = (SELECT id FROM colour WHERE colour_name = 'Blue') THEN 1 END) -        COUNT(CASE WHEN eye_colour_id IS NULL OR eye_colour_id = (SELECT id FROM colour WHERE colour_name = 'No eye colour') THEN 1 END) AS difference FROM superhero WHERE weight_kg IS NULL
SELECT COUNT(CASE WHEN superhero.eye_colour_id = 1 THEN 1 END) - COUNT(CASE WHEN superhero.eye_colour_id = 0 THEN 1 END) AS difference FROM superhero WHERE superhero.weight_kg IS NULL
SELECT COUNT(CASE WHEN eye_colour_id = (SELECT id FROM colour WHERE colour_name = 'Blue') THEN 1 END) -        COUNT(CASE WHEN eye_colour_id IS NULL THEN 1 END) AS difference FROM superhero WHERE weight_kg IS NULL
SELECT COUNT(CASE WHEN colour.colour_name = 'blue' THEN 1 END) - COUNT(CASE WHEN colour.colour_name IS NULL THEN 1 END) AS difference FROM superhero LEFT JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.weight_kg IS NULL
SELECT COUNT(CASE WHEN eye_colour_id = (SELECT id FROM colour WHERE colour_name = 'Blue') THEN 1 END) -        COUNT(CASE WHEN eye_colour_id IS NULL OR eye_colour_id = (SELECT id FROM colour WHERE colour_name = 'No eye colour') THEN 1 END) AS difference FROM superhero WHERE weight_kg IS NULL",SELECT COUNT(CASE WHEN colour.colour_name = 'blue' THEN 1 END) - COUNT(CASE WHEN colour.colour_name IS NULL THEN 1 END) AS difference FROM superhero LEFT JOIN colour ON superhero.eye_colour_id = colour.id WHERE superhero.weight_kg IS NULL
151,1168,"The oldest SJS patient's medical laboratory work was completed on what date, and what age was the patient when they initially arrived at the hospital?",thrombosis_prediction,challenging,"SELECT T1.Date, STRFTIME('%Y', T2.`First Date`) - STRFTIME('%Y', T2.Birthday),T2.Birthday FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'SJS' AND T2.Birthday IS NOT NULL ORDER BY T2.Birthday ASC LIMIT 1",7,"SELECT patient.birthday, patient.first_date - patient.birthday as age FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE patient.admission = (SELECT MIN(patient.admission) FROM patient) AND patient.id IN (SELECT patient.id FROM patient WHERE patient.diagnosis = 'SJS') AND examination.date = (SELECT MIN(examination.date) FROM examination WHERE examination.id = patient.id) AND laboratory.date = (SELECT MIN(laboratory.date) FROM laboratory WHERE laboratory.id = patient.id)
SELECT patient.birthday, patient.first_date - patient.birthday as age FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE patient.first_date = (SELECT MIN(first_date) FROM patient) AND patient.id = (SELECT id FROM patient WHERE first_date = (SELECT MIN(first_date) FROM patient)) AND examination.id = (SELECT id FROM patient WHERE first_date = (SELECT MIN(first_date) FROM patient)) AND laboratory.id = (SELECT id FROM patient WHERE first_date = (SELECT MIN(first_date) FROM patient)) 
SELECT patient.birthday, patient.first_date - patient.birthday as age FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE patient.first_date = (SELECT MIN(first_date) FROM patient) AND patient.id = (SELECT id FROM patient WHERE first_date = (SELECT MIN(first_date) FROM patient)) AND examination.id = (SELECT id FROM patient WHERE first_date = (SELECT MIN(first_date) FROM patient)) AND laboratory.id = (SELECT id FROM patient WHERE first_date = (SELECT MIN(first_date) FROM patient)) 
SELECT patient.birthday, patient.first_date - patient.birthday as age FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE patient.first_date = (SELECT MIN(first_date) FROM patient) AND patient.id = (SELECT id FROM patient WHERE first_date = (SELECT MIN(first_date) FROM patient)) AND examination.id = (SELECT id FROM patient WHERE first_date = (SELECT MIN(first_date) FROM patient)) AND laboratory.id = (SELECT id FROM patient WHERE first_date = (SELECT MIN(first_date) FROM patient)) 
SELECT patient.birthday, patient.first_date - patient.birthday as age FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE patient.first_date = (SELECT MIN(first_date) FROM patient) AND patient.id = (SELECT id FROM patient WHERE first_date = (SELECT MIN(first_date) FROM patient)) AND examination.id = (SELECT id FROM patient WHERE first_date = (SELECT MIN(first_date) FROM patient)) AND laboratory.id = (SELECT id FROM patient WHERE first_date = (SELECT MIN(first_date) FROM patient)) 
SELECT patient.birthday, patient.first_date - patient.birthday as age FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE patient.first_date = (SELECT MIN(first_date) FROM patient) AND examination.id = (SELECT MIN(examination.id) FROM examination WHERE patient.id = examination.id) AND laboratory.id = (SELECT MIN(laboratory.id) FROM laboratory WHERE patient.id = laboratory.id)
SELECT patient.birthday, patient.first_date - patient.birthday as age FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE patient.first_date = (SELECT MIN(first_date) FROM patient) AND patient.id = (SELECT id FROM patient WHERE first_date = (SELECT MIN(first_date) FROM patient)) AND examination.id = (SELECT id FROM patient WHERE first_date = (SELECT MIN(first_date) FROM patient)) AND laboratory.id = (SELECT id FROM patient WHERE first_date = (SELECT MIN(first_date) FROM patient)) ","SELECT patient.birthday, patient.first_date - patient.birthday as age FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE patient.first_date = (SELECT MIN(first_date) FROM patient) AND patient.id = (SELECT id FROM patient WHERE first_date = (SELECT MIN(first_date) FROM patient)) AND examination.id = (SELECT id FROM patient WHERE first_date = (SELECT MIN(first_date) FROM patient)) AND laboratory.id = (SELECT id FROM patient WHERE first_date = (SELECT MIN(first_date) FROM patient)) "
152,1451,"Among the members who incurred expenses in more than one event, who paid the most amount?",student_club,challenging,SELECT T2.member_id FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN budget AS T3 ON T1.link_to_budget = T3.budget_id INNER JOIN event AS T4 ON T3.link_to_event = T4.event_id GROUP BY T2.member_id HAVING COUNT(DISTINCT T4.event_id) > 1 ORDER BY SUM(T1.cost) DESC LIMIT 1,7,"SELECT member.first_name, member.last_name, SUM(expense.cost) as total_cost FROM member JOIN expense ON member.member_id = expense.link_to_member GROUP BY member.member_id HAVING COUNT(DISTINCT expense.link_to_budget) > 1 ORDER BY total_cost DESC LIMIT 1
SELECT member.first_name, member.last_name, SUM(expense.cost) as total_cost FROM member JOIN expense ON member.member_id = expense.link_to_member GROUP BY member.member_id HAVING COUNT(DISTINCT expense.link_to_budget) > 1 ORDER BY total_cost DESC LIMIT 1
SELECT member.first_name, member.last_name, SUM(expense.cost) as total_cost FROM member JOIN expense ON member.member_id = expense.link_to_member GROUP BY member.member_id HAVING COUNT(DISTINCT expense.link_to_budget) > 1 ORDER BY total_cost DESC LIMIT 1
SELECT member.first_name, member.last_name, SUM(expense.cost) as total_cost FROM member JOIN expense ON member.member_id = expense.link_to_member GROUP BY member.member_id HAVING COUNT(DISTINCT expense.link_to_budget) > 1 ORDER BY total_cost DESC LIMIT 1
SELECT member.first_name, member.last_name, SUM(expense.cost) as total_cost FROM member JOIN expense ON member.member_id = expense.link_to_member GROUP BY member.member_id HAVING COUNT(DISTINCT expense.link_to_budget) > 1 ORDER BY total_cost DESC LIMIT 1
SELECT member.first_name, member.last_name, SUM(expense.cost) as total_cost FROM member JOIN expense ON member.member_id = expense.link_to_member GROUP BY member.member_id HAVING COUNT(DISTINCT expense.link_to_budget) > 1 ORDER BY total_cost DESC LIMIT 1
SELECT member.first_name, member.last_name, SUM(expense.cost) as total_cost FROM member JOIN expense ON member.member_id = expense.link_to_member GROUP BY member.member_id HAVING COUNT(DISTINCT expense.link_to_budget) > 1 ORDER BY total_cost DESC LIMIT 1","SELECT member.first_name, member.last_name, SUM(expense.cost) as total_cost FROM member JOIN expense ON member.member_id = expense.link_to_member GROUP BY member.member_id HAVING COUNT(DISTINCT expense.link_to_budget) > 1 ORDER BY total_cost DESC LIMIT 1"
153,1187,How many patients who were examined between 1987/7/6 and 1996/1/31 had a GPT level greater than 30 and an ALB level less than 4? List them by their ID.,thrombosis_prediction,moderate,SELECT DISTINCT ID FROM Laboratory WHERE Date BETWEEN '1987-07-06' AND '1996-01-31' AND GPT > 30 AND ALB < 4,7,"SELECT patient.id FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE patient.birthday BETWEEN '1987-7-6' AND '1996-1-31' AND laboratory.gpt > 30 AND laboratory.alb < 4 ORDER BY patient.id
SELECT patient.id FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE examination.date BETWEEN '1987-7-6' AND '1996-1-31' AND laboratory.gpt > 30 AND laboratory.alb < 4 ORDER BY patient.id
SELECT patient.id FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE patient.birthday BETWEEN '1987-7-6' AND '1996-1-31' AND laboratory.gpt > 30 AND laboratory.alb < 4 ORDER BY patient.id
SELECT patient.id FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE patient.birthday BETWEEN '1987-7-6' AND '1996-1-31' AND laboratory.gpt > 30 AND laboratory.alb < 4 ORDER BY patient.id
SELECT patient.id FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE patient.birthday BETWEEN '1987-7-6' AND '1996-1-31' AND laboratory.gpt > 30 AND laboratory.alb < 4 ORDER BY patient.id
SELECT patient.id FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE patient.birthday BETWEEN '1987-7-6' AND '1996-1-31' AND laboratory.gpt > 30 AND laboratory.alb < 4 ORDER BY patient.id
SELECT patient.id FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE patient.birthday BETWEEN '1987-7-6' AND '1996-1-31' AND laboratory.gpt > 30 AND laboratory.alb < 4 ORDER BY patient.id",SELECT patient.id FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE patient.birthday BETWEEN '1987-7-6' AND '1996-1-31' AND laboratory.gpt > 30 AND laboratory.alb < 4 ORDER BY patient.id
154,656,Describe the display name of the parent ID for child post with the highest score.,codebase_community,simple,SELECT DisplayName FROM users WHERE Id = ( SELECT OwnerUserId FROM posts WHERE ParentId IS NOT NULL ORDER BY Score DESC LIMIT 1 ),7,"SELECT posts.parentid, users.displayname FROM posts INNER JOIN users ON posts.owneruserid = users.id WHERE posts.score = (SELECT MAX(score) FROM posts) AND posts.posttypeid = 2
SELECT posts.parentid, users.displayname FROM posts INNER JOIN users ON posts.owneruserid = users.id WHERE posts.score = (SELECT MAX(score) FROM posts) AND posts.posttypeid = 2
SELECT posts.parentid, users.displayname  FROM posts  INNER JOIN users ON posts.owneruserid = users.id  WHERE posts.score = (SELECT MAX(score) FROM posts) AND posts.posttypeid = 2
SELECT posts.parentid, users.displayname FROM posts INNER JOIN users ON posts.owneruserid = users.id WHERE posts.score = (SELECT MAX(score) FROM posts) AND posts.posttypeid = 2
SELECT posts.parentid, users.displayname FROM posts INNER JOIN users ON posts.owneruserid = users.id WHERE posts.score = (SELECT MAX(score) FROM posts) AND posts.posttypeid = 2
SELECT posts.parentid, users.displayname  FROM posts  INNER JOIN users ON posts.owneruserid = users.id  WHERE posts.score = (SELECT MAX(score) FROM posts) AND posts.posttypeid = 2
SELECT posts.parentid, users.displayname FROM posts INNER JOIN users ON posts.owneruserid = users.id WHERE posts.score = (SELECT MAX(score) FROM posts) AND posts.posttypeid = 2","SELECT posts.parentid, users.displayname FROM posts INNER JOIN users ON posts.owneruserid = users.id WHERE posts.score = (SELECT MAX(score) FROM posts) AND posts.posttypeid = 2"
155,1031,"At present, calculate for the player's age who have a sprint speed of no less than 97 between 2013 to 2015.",european_football_2,challenging,"SELECT DISTINCT DATETIME() - T2.birthday age FROM Player_Attributes AS t1 INNER JOIN Player AS t2 ON t1.player_api_id = t2.player_api_id WHERE STRFTIME('%Y',t1.`date`) >= '2013' AND STRFTIME('%Y',t1.`date`) <= '2015' AND t1.sprint_speed >= 97",7,"SELECT player.player_name, player.birthday, player.height, player.weight, player_attributes.sprint_speed FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.sprint_speed >= 97 AND player_attributes.date BETWEEN '2013-01-01' AND '2015-12-31'
SELECT player.player_name, player.birthday, player.height, player.weight, player_attributes.sprint_speed FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.sprint_speed >= 97 AND player_attributes.date BETWEEN '2013-01-01' AND '2015-12-31'
SELECT player.player_name, player.birthday, player.height, player.weight, player_attributes.sprint_speed FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.sprint_speed >= 97 AND player_attributes.date BETWEEN '2013-01-01' AND '2015-12-31'
SELECT player.player_name, player.birthday, player.height, player.weight, player_attributes.sprint_speed FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.sprint_speed >= 97 AND player_attributes.date BETWEEN '2013-01-01' AND '2015-12-31'
SELECT player.player_name, player.birthday, player.height, player.weight, player_attributes.sprint_speed FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.sprint_speed >= 97 AND player_attributes.date BETWEEN '2013-01-01' AND '2015-12-31'
SELECT player.player_name, player.birthday, player.height, player.weight, player_attributes.sprint_speed FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.sprint_speed >= 97 AND player_attributes.date BETWEEN '2013-01-01' AND '2015-12-31'
SELECT player.player_name, player.birthday, player.height, player.weight, player_attributes.sprint_speed FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.sprint_speed >= 97 AND player_attributes.date BETWEEN '2013-01-01' AND '2015-12-31'","SELECT player.player_name, player.birthday, player.height, player.weight, player_attributes.sprint_speed FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.sprint_speed >= 97 AND player_attributes.date BETWEEN '2013-01-01' AND '2015-12-31'"
156,505,"Show the Simplified Chinese translation of the name of the set ""Mirrodin""?",card_games,moderate,SELECT translation FROM set_translations WHERE setCode IN ( SELECT code FROM sets WHERE name = 'Mirrodin' ) AND language = 'Chinese Simplified',7,"SELECT set_translations.translation FROM set_translations JOIN sets ON set_translations.setcode = sets.code WHERE sets.name = 'Mirrodin' AND set_translations.language = 'Simplified Chinese'
SELECT set_translations.translation  FROM set_translations  JOIN sets ON set_translations.setcode = sets.code  WHERE sets.name = 'Mirrodin' AND set_translations.language = 'Simplified Chinese'
SELECT set_translations.translation  FROM set_translations  JOIN sets ON set_translations.setcode = sets.code  WHERE sets.name = 'Mirrodin' AND set_translations.language = 'Simplified Chinese'
SELECT set_translations.translation FROM sets INNER JOIN set_translations ON sets.code = set_translations.setcode WHERE sets.name = 'Mirrodin' AND set_translations.language = 'Simplified Chinese'
SELECT set_translations.translation FROM set_translations INNER JOIN sets ON set_translations.setcode = sets.code WHERE sets.name = ""Mirrodin"" AND set_translations.language = ""Simplified Chinese""
SELECT set_translations.translation FROM set_translations JOIN sets ON set_translations.setcode = sets.code WHERE sets.name = 'Mirrodin' AND set_translations.language = 'Simplified Chinese'
SELECT set_translations.translation FROM sets INNER JOIN set_translations ON sets.code = set_translations.setcode WHERE sets.name = 'Mirrodin' AND set_translations.language = 'Simplified Chinese'",SELECT set_translations.translation FROM set_translations JOIN sets ON set_translations.setcode = sets.code WHERE sets.name = 'Mirrodin' AND set_translations.language = 'Simplified Chinese'
157,1107,When was the first time did Kevin Constant have his highest crossing score? Give the date.,european_football_2,moderate,"SELECT `date` FROM ( SELECT t2.crossing, t2.`date` FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_fifa_api_id = t2.player_fifa_api_id WHERE t1.player_name = 'Kevin Constant' ORDER BY t2.crossing DESC) ORDER BY date DESC LIMIT 1",7,"SELECT date FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name = 'Kevin Constant' ORDER BY player_attributes.crossing DESC LIMIT 1
SELECT date FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name = 'Kevin Constant' ORDER BY player_attributes.crossing DESC LIMIT 1
SELECT date FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Kevin Constant') ORDER BY crossing DESC LIMIT 1
SELECT date FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name = 'Kevin Constant' ORDER BY player_attributes.crossing DESC LIMIT 1
SELECT date FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name = 'Kevin Constant' ORDER BY player_attributes.crossing DESC LIMIT 1
SELECT date FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name = 'Kevin Constant' ORDER BY player_attributes.crossing DESC LIMIT 1
SELECT date FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name = 'Kevin Constant' ORDER BY player_attributes.crossing DESC LIMIT 1",SELECT date FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name = 'Kevin Constant' ORDER BY player_attributes.crossing DESC LIMIT 1
158,31,What is the eligible free rate of the 10th and 11th schools with the highest enrolment for students in grades 1 through 12?,california_schools,moderate,"SELECT CAST(`Free Meal Count (K-12)` AS REAL) / `Enrollment (K-12)` FROM frpm ORDER BY `Enrollment (K-12)` DESC LIMIT 9, 2",7,"NULL
SELECT      frpm.`percent (%) eligible frpm (k-12)`,      frpm.`percent (%) eligible free (k-12)` FROM      (SELECT          frpm.*,          ROW_NUMBER() OVER (ORDER BY frpm.`enrollment (k-12)` DESC) AS rn     FROM          frpm     WHERE          frpm.`low grade` = 1 AND frpm.`high grade` = 12) AS frpm WHERE      frpm.rn IN (10, 11)
NULL
NULL
NULL
NULL
NULL",NULL
159,394,How many white bordered cards are powerful?,card_games,simple,SELECT COUNT(id) FROM cards WHERE borderColor = 'white' AND cardKingdomId IS NOT NULL AND cardKingdomFoilId IS NOT NULL,7,"SELECT COUNT(*) FROM cards WHERE bordercolor = 'white' AND power > 0
SELECT COUNT(*) FROM cards WHERE bordercolor = 'white' AND power > 0
SELECT COUNT(*) FROM cards WHERE bordercolor = 'White' AND power > 0
SELECT COUNT(*) FROM cards WHERE bordercolor = 'white' AND power > 0
SELECT COUNT(*) FROM cards WHERE bordercolor = 'white' AND power > 0
SELECT COUNT(*) FROM cards WHERE bordercolor = 'white' AND power IS NOT NULL
SELECT COUNT(*) FROM cards WHERE bordercolor = 'white' AND power IS NOT NULL",SELECT COUNT(*) FROM cards WHERE bordercolor = 'white' AND power > 0
160,230,What are the elements of the toxicology and label of molecule TR060?,toxicology,challenging,"SELECT DISTINCT T1.element, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR060'",7,"SELECT m.label, t.toxicology  FROM molecule AS m  JOIN toxicology AS t ON m.molecule_id = t.molecule_id  WHERE m.label = 'TR060'
SELECT m.label, t.toxicology FROM molecule AS m JOIN (SELECT a.molecule_id, a.element, t.toxicology       FROM atom AS a       JOIN molecule_toxicology AS mt ON a.atom_id = mt.atom_id       JOIN toxicology AS t ON mt.toxicology_id = t.toxicology_id       WHERE a.element = 'TR060') AS t ON m.molecule_id = t.molecule_id WHERE m.label = 'TR060'
SELECT m.label, t.toxicology  FROM molecule AS m  JOIN toxicology AS t ON m.molecule_id = t.molecule_id  WHERE m.label = 'TR060'
SELECT m.label, t.toxicology FROM molecule AS m JOIN (SELECT a.molecule_id, a.element, t.toxicology       FROM atom AS a       JOIN toxicology AS t ON a.atom_id = t.atom_id       WHERE a.element = 'TR060') AS t ON m.molecule_id = t.molecule_id
SELECT m.label, t.toxicology  FROM molecule AS m  JOIN toxicology AS t ON m.molecule_id = t.molecule_id  WHERE m.label = 'TR060'
SELECT m.label, t.toxicology  FROM molecule AS m  JOIN toxicology AS t ON m.molecule_id = t.molecule_id  WHERE m.label = 'TR060'
SELECT m.label, t.toxicology  FROM molecule AS m  JOIN toxicology AS t ON m.molecule_id = t.molecule_id  WHERE m.label = 'TR060'","SELECT m.label, t.toxicology  FROM molecule AS m  JOIN toxicology AS t ON m.molecule_id = t.molecule_id  WHERE m.label = 'TR060'"
161,715,"In comments with score between 1 to 5, list down the display names of the users with 0 down votes.",codebase_community,simple,SELECT T2.DisplayName FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Score BETWEEN 1 AND 5 AND T2.DownVotes = 0,7,"SELECT DISTINCT users.displayname  FROM users  JOIN comments ON users.id = comments.userid  WHERE comments.score BETWEEN 1 AND 5 AND users.downvotes = 0
SELECT DISTINCT users.displayname FROM users JOIN comments ON users.id = comments.userid WHERE comments.score BETWEEN 1 AND 5 AND users.downvotes = 0
SELECT DISTINCT users.displayname  FROM users  JOIN comments ON users.id = comments.userid  WHERE comments.score BETWEEN 1 AND 5 AND users.downvotes = 0
SELECT DISTINCT users.displayname FROM users JOIN comments ON users.id = comments.userid WHERE comments.score BETWEEN 1 AND 5 AND users.downvotes = 0
SELECT DISTINCT users.displayname FROM users JOIN comments ON users.id = comments.userid WHERE comments.score BETWEEN 1 AND 5 AND users.downvotes = 0
SELECT DISTINCT users.displayname FROM users JOIN comments ON users.id = comments.userid WHERE comments.score BETWEEN 1 AND 5 AND users.downvotes = 0
SELECT DISTINCT users.displayname FROM users JOIN comments ON users.id = comments.userid WHERE comments.score BETWEEN 1 AND 5 AND users.downvotes = 0",SELECT DISTINCT users.displayname FROM users JOIN comments ON users.id = comments.userid WHERE comments.score BETWEEN 1 AND 5 AND users.downvotes = 0
162,207,What elements are in a double type bond?,toxicology,challenging,SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id WHERE T2.bond_type = '=',7,"SELECT a1.atom_id, a2.atom_id, b.bond_type  FROM connected c  JOIN atom a1 ON c.atom_id1 = a1.atom_id  JOIN atom a2 ON c.atom_id2 = a2.atom_id  JOIN bond b ON c.bond_id = b.bond_id  WHERE b.bond_type = 'double'
SELECT a1.atom_id, a2.atom_id, b.bond_type  FROM connected c  JOIN atom a1 ON c.atom_id1 = a1.atom_id  JOIN atom a2 ON c.atom_id2 = a2.atom_id  JOIN bond b ON c.bond_id = b.bond_id  WHERE b.bond_type = 'double'
SELECT a1.atom_id, a2.atom_id, b.bond_type  FROM connected c  JOIN atom a1 ON c.atom_id1 = a1.atom_id  JOIN atom a2 ON c.atom_id2 = a2.atom_id  JOIN bond b ON c.bond_id = b.bond_id  WHERE b.bond_type = 'double'
SELECT a1.atom_id, a2.atom_id, b.bond_type  FROM connected c  JOIN atom a1 ON c.atom_id1 = a1.atom_id  JOIN atom a2 ON c.atom_id2 = a2.atom_id  JOIN bond b ON c.bond_id = b.bond_id  WHERE b.bond_type = 'double'
SELECT a1.atom_id, a2.atom_id, b.bond_type  FROM connected c  JOIN atom a1 ON c.atom_id1 = a1.atom_id  JOIN atom a2 ON c.atom_id2 = a2.atom_id  JOIN bond b ON c.bond_id = b.bond_id  WHERE b.bond_type = 'double'
SELECT a1.atom_id, a2.atom_id, b.bond_type  FROM connected c  JOIN atom a1 ON c.atom_id1 = a1.atom_id  JOIN atom a2 ON c.atom_id2 = a2.atom_id  JOIN bond b ON c.bond_id = b.bond_id  WHERE b.bond_type = 'double'
SELECT a.atom_id, a.molecule_id, a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'double'","SELECT a1.atom_id, a2.atom_id, b.bond_type  FROM connected c  JOIN atom a1 ON c.atom_id1 = a1.atom_id  JOIN atom a2 ON c.atom_id2 = a2.atom_id  JOIN bond b ON c.bond_id = b.bond_id  WHERE b.bond_type = 'double'"
163,494,For all cards illustrated by Jim Pavelec. and describe the text of the ruling of these cards. Do these cards have missing or degraded properties and values.,card_games,challenging,"SELECT T2.text , CASE WHEN T1.hasContentWarning = 1 THEN 'YES' ELSE 'NO' END FROM cards AS T1 INNER JOIN rulings AS T2 ON T2.uuid = T1.uuid WHERE T1.artist = 'Jim Pavelec'",7,"SELECT cards.name, rulings.text, cards.hasfoil, cards.hasnonfoil FROM cards LEFT JOIN rulings ON cards.id = rulings.uuid WHERE cards.artist = 'Jim Pavelec'
SELECT cards.name, rulings.text, cards.hasfoil, cards.hasnonfoil FROM cards LEFT JOIN rulings ON cards.id = rulings.uuid WHERE cards.artist = 'Jim Pavelec'
SELECT cards.name, rulings.text, cards.hasfoil, cards.hasnonfoil FROM cards LEFT JOIN rulings ON cards.id = rulings.uuid WHERE cards.artist = 'Jim Pavelec'
SELECT cards.name, rulings.text, cards.hasfoil, cards.hasnonfoil FROM cards JOIN rulings ON cards.id = rulings.uuid WHERE cards.artist = 'Jim Pavelec' AND cards.hascontentwarning = '1' AND cards.hasalternativedecklimit = '1'
SELECT cards.name, rulings.text, cards.hasfoil, cards.hasnonfoil FROM cards LEFT JOIN rulings ON cards.id = rulings.uuid WHERE cards.artist = 'Jim Pavelec'
SELECT cards.name, rulings.text, cards.hasfoil, cards.hasnonfoil FROM cards LEFT JOIN rulings ON cards.id = rulings.uuid WHERE cards.artist = 'Jim Pavelec'
SELECT cards.name, rulings.text, cards.hasfoil, cards.hasnonfoil FROM cards LEFT JOIN rulings ON cards.id = rulings.uuid WHERE cards.artist = 'Jim Pavelec'","SELECT cards.name, rulings.text, cards.hasfoil, cards.hasnonfoil FROM cards LEFT JOIN rulings ON cards.id = rulings.uuid WHERE cards.artist = 'Jim Pavelec'"
164,240,"List all the elements of the toxicology of the molecule ""TR004"".",toxicology,challenging,SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR004',7,"SELECT atom.atom_id, atom.element, bond.bond_type  FROM atom  INNER JOIN connected ON atom.atom_id = connected.atom_id  INNER JOIN bond ON connected.bond_id = bond.bond_id  WHERE atom.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR004')
SELECT atom.atom_id, atom.element, bond.bond_type FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.molecule_id = (     SELECT molecule_id     FROM molecule     WHERE label = 'TR004' )
SELECT atom.atom_id, atom.element, bond.bond_type FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.molecule_id = (     SELECT molecule_id     FROM molecule     WHERE label = 'TR004' )
SELECT atom.atom_id, atom.element FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR004'
SELECT atom.atom_id, atom.element, bond.bond_type FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR004')
SELECT atom.atom_id, atom.element, bond.bond_type FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR004')
SELECT atom.atom_id, atom.element, bond.bond_type FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR004')","SELECT atom.atom_id, atom.element, bond.bond_type FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR004')"
165,818,"Among the bad superheroes, what is the percentage of female superheroes?",superhero,challenging,SELECT CAST(COUNT(CASE WHEN T3.gender = 'Female' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.alignment = 'Bad',7,"SELECT (SELECT COUNT(*) FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id WHERE gender.gender = 'Female' AND superhero.alignment_id = (SELECT id FROM alignment WHERE alignment = 'bad')) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE superhero.alignment_id = (SELECT id FROM alignment WHERE alignment = 'bad')) AS percentage
SELECT (SELECT COUNT(*) FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id WHERE gender.gender = 'Female' AND superhero.alignment_id = (SELECT id FROM alignment WHERE alignment = 'bad')) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE superhero.alignment_id = (SELECT id FROM alignment WHERE alignment = 'bad')) AS percentage_female_bad_superheroes
SELECT (SELECT COUNT(*) FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id WHERE gender.gender = 'Female' AND superhero.alignment_id = (SELECT id FROM alignment WHERE alignment = 'bad')) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE superhero.alignment_id = (SELECT id FROM alignment WHERE alignment = 'bad')) AS percentage_female_bad_superheroes
SELECT (SELECT COUNT(*) FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id WHERE gender.gender = 'Female' AND superhero.alignment_id = (SELECT id FROM alignment WHERE alignment = 'bad')) * 100 / (SELECT COUNT(*) FROM superhero WHERE superhero.alignment_id = (SELECT id FROM alignment WHERE alignment = 'bad')) AS percentage_female_bad_superheroes
SELECT (SELECT COUNT(*) FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id WHERE gender.gender = 'Female' AND superhero.alignment_id = (SELECT id FROM alignment WHERE alignment = 'bad')) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE superhero.alignment_id = (SELECT id FROM alignment WHERE alignment = 'bad')) AS percentage_female_bad_superheroes
SELECT (SELECT COUNT(*) FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id WHERE gender.gender = 'Female' AND superhero.alignment_id = (SELECT id FROM alignment WHERE alignment = 'bad')) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE superhero.alignment_id = (SELECT id FROM alignment WHERE alignment = 'bad')) AS percentage
SELECT (SELECT COUNT(*) FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id WHERE gender.gender = 'Female' AND superhero.alignment_id = (SELECT id FROM alignment WHERE alignment = 'bad')) * 100 / (SELECT COUNT(*) FROM superhero WHERE superhero.alignment_id = (SELECT id FROM alignment WHERE alignment = 'bad')) AS percentage",SELECT (SELECT COUNT(*) FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id WHERE gender.gender = 'Female' AND superhero.alignment_id = (SELECT id FROM alignment WHERE alignment = 'bad')) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE superhero.alignment_id = (SELECT id FROM alignment WHERE alignment = 'bad')) AS percentage_female_bad_superheroes
166,1507,Please list the disparate time of the transactions taken place in the gas stations from chain no. 11.,debit_card_specializing,simple,SELECT DISTINCT T1.Time FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.ChainID = 11,7,"SELECT t.time  FROM transactions_1k AS t  JOIN gasstations AS g ON t.gasstationid = g.gasstationid  WHERE g.chainid = 11
SELECT t.time  FROM transactions_1k AS t  JOIN gasstations AS g ON t.gasstationid = g.gasstationid  WHERE g.chainid = 11
SELECT t.time  FROM transactions_1k AS t  JOIN gasstations AS g ON t.gasstationid = g.gasstationid  WHERE g.chainid = 11
SELECT t.time  FROM transactions_1k AS t  JOIN gasstations AS g ON t.gasstationid = g.gasstationid  WHERE g.chainid = 11
SELECT t.time FROM transactions_1k AS t JOIN gasstations AS g ON t.gasstationid = g.gasstationid WHERE g.chainid = 11
SELECT t.time  FROM transactions_1k AS t  JOIN gasstations AS g ON t.gasstationid = g.gasstationid  WHERE g.chainid = 11
SELECT t.time  FROM transactions_1k AS t  JOIN gasstations AS g ON t.gasstationid = g.gasstationid  WHERE g.chainid = 11",SELECT t.time  FROM transactions_1k AS t  JOIN gasstations AS g ON t.gasstationid = g.gasstationid  WHERE g.chainid = 11
167,935,How many drivers managed to finish the race in the 2008 Australian Grand Prix?,formula_1,simple,SELECT COUNT(T2.driverId) FROM races AS T1 INNER JOIN results AS T2 ON T2.raceId = T1.raceId WHERE T1.name = 'Australian Grand Prix' AND T1.year = 2008 AND T2.time IS NOT NULL,7,"SELECT COUNT(*) FROM results WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND circuitid IN (SELECT circuitid FROM circuits WHERE country = 'Australia')) AND position != """"
SELECT COUNT(*) FROM results WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND circuitid IN (SELECT circuitid FROM circuits WHERE country = 'Australia')) AND position != """"
SELECT COUNT(*) FROM results WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND circuitid IN (SELECT circuitid FROM circuits WHERE country = 'Australia')) AND position != """"
SELECT COUNT(*) FROM results WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND circuitid IN (SELECT circuitid FROM circuits WHERE country = 'Australia')) AND position != """"
SELECT COUNT(*) FROM results WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND circuitid IN (SELECT circuitid FROM circuits WHERE country = 'Australia')) AND position != """"
SELECT COUNT(*) FROM results WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND circuitid IN (SELECT circuitid FROM circuits WHERE country = 'Australia')) AND position != """"
SELECT COUNT(*) FROM results WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND circuitid IN (SELECT circuitid FROM circuits WHERE country = 'Australia')) AND position != """"","SELECT COUNT(*) FROM results WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND circuitid IN (SELECT circuitid FROM circuits WHERE country = 'Australia')) AND position != """""
168,834,"Among all superheroes created by George Lucas, identify the percentage of female superheroes.",superhero,challenging,SELECT CAST(COUNT(CASE WHEN T3.gender = 'Female' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.publisher_name = 'George Lucas',7,"SELECT (     SELECT COUNT(*)      FROM superhero      WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female')      AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'George Lucas') ) / (     SELECT COUNT(*)      FROM superhero      WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'George Lucas') ) * 100 AS percentage_of_female_superheroes
SELECT (     SELECT COUNT(*)      FROM superhero      WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female')      AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'George Lucas') ) / (     SELECT COUNT(*)      FROM superhero      WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'George Lucas') ) * 100 AS percentage_of_female_superheroes
SELECT (     SELECT COUNT(*)      FROM superhero      WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female')      AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'George Lucas') ) / (     SELECT COUNT(*)      FROM superhero      WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'George Lucas') ) * 100 AS percentage_of_female_superheroes
SELECT (     SELECT COUNT(*)      FROM superhero      WHERE gender_id IN (SELECT id FROM gender WHERE gender = 'Female')      AND alignment_id IN (SELECT id FROM alignment WHERE alignment = 'Good')      AND publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'George Lucas') ) / (     SELECT COUNT(*)      FROM superhero      WHERE publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'George Lucas') ) * 100 AS percentage_female_superheroes
SELECT (SELECT COUNT(*) FROM superhero INNER JOIN gender ON superhero.gender_id = gender.id WHERE gender.gender = 'Female' AND superhero.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'George Lucas')) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE superhero.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'George Lucas')) AS percentage_female_superheroes
SELECT (     SELECT COUNT(*)      FROM superhero      WHERE gender_id IN (SELECT id FROM gender WHERE gender = 'Female')      AND alignment_id IN (SELECT id FROM alignment WHERE alignment = 'Good')      AND publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'George Lucas') ) / (     SELECT COUNT(*)      FROM superhero      WHERE publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'George Lucas') ) * 100 AS percentage_of_female_superheroes
SELECT (     SELECT COUNT(*)      FROM superhero      WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female')      AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'George Lucas') ) / (     SELECT COUNT(*)      FROM superhero      WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'George Lucas') ) * 100 AS percentage_of_female_superheroes",SELECT (     SELECT COUNT(*)      FROM superhero      WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female')      AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'George Lucas') ) / (     SELECT COUNT(*)      FROM superhero      WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'George Lucas') ) * 100 AS percentage_of_female_superheroes
169,1040,List the top 10 players' names whose heights are above 180 in descending order of average heading accuracy.,european_football_2,moderate,SELECT t1.player_name FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.height > 180 GROUP BY t1.id ORDER BY CAST(SUM(t2.heading_accuracy) AS REAL) / COUNT(t2.`player_fifa_api_id`) DESC LIMIT 10,7,"SELECT player.player_name, AVG(player_attributes.heading_accuracy) as avg_heading_accuracy FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.height > 180 GROUP BY player.player_api_id ORDER BY avg_heading_accuracy DESC LIMIT 10
SELECT player.player_name, AVG(player_attributes.heading_accuracy) as average_heading_accuracy FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.height > 180 GROUP BY player.player_api_id ORDER BY average_heading_accuracy DESC LIMIT 10
SELECT player.player_name, AVG(player_attributes.heading_accuracy) as average_heading_accuracy FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.height > 180 GROUP BY player.player_name ORDER BY average_heading_accuracy DESC LIMIT 10
SELECT player.player_name, AVG(player_attributes.heading_accuracy) as avg_heading_accuracy FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.height > 180 GROUP BY player.player_api_id ORDER BY avg_heading_accuracy DESC LIMIT 10
SELECT player.player_name, AVG(player_attributes.heading_accuracy) as average_heading_accuracy FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.height > 180 GROUP BY player.player_name ORDER BY average_heading_accuracy DESC LIMIT 10
SELECT player.player_name, AVG(player_attributes.heading_accuracy) as avg_heading_accuracy  FROM player  JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id  WHERE player.height > 180  GROUP BY player.player_api_id  ORDER BY avg_heading_accuracy DESC  LIMIT 10
SELECT player.player_name, AVG(player_attributes.heading_accuracy) as avg_heading_accuracy FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.height > 180 GROUP BY player.player_name ORDER BY avg_heading_accuracy DESC LIMIT 10","SELECT player.player_name, AVG(player_attributes.heading_accuracy) as avg_heading_accuracy FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.height > 180 GROUP BY player.player_api_id ORDER BY avg_heading_accuracy DESC LIMIT 10"
170,744,"Between DC and Marvel Comics, which publisher has published more superheroes? Find the difference in the number of superheroes they have published.",superhero,challenging,SELECT SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id,7,"SELECT publisher.publisher_name, COUNT(superhero.id) as superheroes_count FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name IN ('DC Comics', 'Marvel Comics') GROUP BY publisher.publisher_name ORDER BY superheroes_count DESC LIMIT 1
SELECT publisher.publisher_name, COUNT(superhero.id) as superheroes_count FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name IN ('DC Comics', 'Marvel Comics') GROUP BY publisher.publisher_name ORDER BY superheroes_count DESC LIMIT 1
SELECT publisher.publisher_name, COUNT(superhero.id) as superheroes_count FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name IN ('DC Comics', 'Marvel Comics') GROUP BY publisher.publisher_name ORDER BY superheroes_count DESC LIMIT 1
SELECT publisher.publisher_name, COUNT(superhero.id) as superhero_count FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id GROUP BY publisher.publisher_name ORDER BY superhero_count DESC LIMIT 2
SELECT publisher.publisher_name, COUNT(superhero.id) as superheroes_count FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name IN ('DC Comics', 'Marvel Comics') GROUP BY publisher.publisher_name ORDER BY superheroes_count DESC LIMIT 1
SELECT publisher.publisher_name, COUNT(superhero.id) as superheroes_count FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name IN ('DC Comics', 'Marvel Comics') GROUP BY publisher.publisher_name ORDER BY superheroes_count DESC LIMIT 1
SELECT publisher.publisher_name, COUNT(superhero.id) as superheroes_count FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name IN ('DC Comics', 'Marvel Comics') GROUP BY publisher.publisher_name ORDER BY superheroes_count DESC LIMIT 1","SELECT publisher.publisher_name, COUNT(superhero.id) as superheroes_count FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name IN ('DC Comics', 'Marvel Comics') GROUP BY publisher.publisher_name ORDER BY superheroes_count DESC LIMIT 1"
171,1457,Give the full name and contact number of members who had to spend more than average on each expense.,student_club,challenging,"SELECT DISTINCT T3.first_name, T3.last_name, T3.phone FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN member AS T3 ON T3.member_id = T1.link_to_member WHERE T1.cost > ( SELECT AVG(T1.cost) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN member AS T3 ON T3.member_id = T1.link_to_member )",7,"SELECT member.first_name, member.last_name, member.phone FROM member JOIN expense ON member.member_id = expense.link_to_member JOIN budget ON expense.link_to_budget = budget.budget_id WHERE expense.cost > (SELECT AVG(expense.cost) FROM expense) GROUP BY member.member_id
SELECT member.first_name, member.last_name, member.phone FROM member JOIN expense ON member.member_id = expense.link_to_member JOIN budget ON expense.link_to_budget = budget.budget_id WHERE expense.cost > (SELECT AVG(expense.cost) FROM expense) GROUP BY member.member_id
SELECT member.first_name, member.last_name, member.phone FROM member JOIN expense ON member.member_id = expense.link_to_member JOIN budget ON expense.link_to_budget = budget.budget_id WHERE expense.cost > (SELECT AVG(expense.cost) FROM expense) GROUP BY member.member_id
SELECT member.first_name, member.last_name, member.phone FROM member JOIN expense ON member.member_id = expense.link_to_member JOIN budget ON expense.link_to_budget = budget.budget_id WHERE expense.cost > (SELECT AVG(expense.cost) FROM expense) GROUP BY member.member_id
SELECT member.first_name, member.last_name, member.phone FROM member JOIN expense ON member.member_id = expense.link_to_member JOIN budget ON expense.link_to_budget = budget.budget_id WHERE expense.cost > (SELECT AVG(expense.cost) FROM expense) GROUP BY member.member_id
SELECT member.first_name, member.last_name, member.phone FROM member JOIN expense ON member.member_id = expense.link_to_member JOIN budget ON expense.link_to_budget = budget.budget_id WHERE expense.cost > (SELECT AVG(expense.cost) FROM expense) GROUP BY member.member_id
SELECT member.first_name, member.last_name, member.phone FROM member JOIN expense ON member.member_id = expense.link_to_member JOIN budget ON expense.link_to_budget = budget.budget_id WHERE expense.cost > (SELECT AVG(expense.cost) FROM expense) GROUP BY member.member_id","SELECT member.first_name, member.last_name, member.phone FROM member JOIN expense ON member.member_id = expense.link_to_member JOIN budget ON expense.link_to_budget = budget.budget_id WHERE expense.cost > (SELECT AVG(expense.cost) FROM expense) GROUP BY member.member_id"
172,1036,List the long name of teams with above-average build-up play passing in 2012.,european_football_2,challenging,"SELECT DISTINCT t4.team_long_name FROM Team_Attributes AS t3 INNER JOIN Team AS t4 ON t3.team_api_id = t4.team_api_id WHERE SUBSTR(t3.`date`, 1, 4) = '2012' AND t3.buildUpPlayPassing > ( SELECT CAST(SUM(t2.buildUpPlayPassing) AS REAL) / COUNT(t1.id) FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE STRFTIME('%Y',t2.`date`) = '2012')",7,"SELECT team.team_long_name FROM team JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id WHERE team_attributes.buildupplaypassing > (SELECT AVG(buildupplaypassing) FROM team_attributes) AND team_attributes.date LIKE '2012%'
SELECT team.team_long_name FROM team JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id WHERE team_attributes.buildupplaypassing > (SELECT AVG(buildupplaypassing) FROM team_attributes) AND team_attributes.date LIKE '2012%'
SELECT team.team_long_name FROM team JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id WHERE team_attributes.buildupplaypassing > (SELECT AVG(buildupplaypassing) FROM team_attributes) AND team_attributes.date LIKE '2012%'
SELECT team.team_long_name FROM team JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id WHERE team_attributes.buildupplaypassing > (SELECT AVG(buildupplaypassing) FROM team_attributes) AND team_attributes.date LIKE ""%2012%""
SELECT team.team_long_name FROM team JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id WHERE team_attributes.buildupplaypassing > (SELECT AVG(buildupplaypassing) FROM team_attributes) AND team_attributes.date LIKE ""%2012%""
SELECT team.team_long_name FROM team JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id WHERE team_attributes.buildupplaypassing > (SELECT AVG(buildupplaypassing) FROM team_attributes) AND team_attributes.date LIKE '2012%'
SELECT team.team_long_name FROM team JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id WHERE team_attributes.buildupplaypassing > (SELECT AVG(buildupplaypassing) FROM team_attributes) AND team_attributes.date LIKE '2012%'",SELECT team.team_long_name FROM team JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id WHERE team_attributes.buildupplaypassing > (SELECT AVG(buildupplaypassing) FROM team_attributes) AND team_attributes.date LIKE '2012%'
173,781,Provide the heights of the heroes whose eye colours are amber.,superhero,simple,SELECT T1.height_cm FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Amber',7,"SELECT height_cm  FROM superhero  INNER JOIN colour ON superhero.eye_colour_id = colour.id  WHERE colour.colour_name = 'Amber' AND superhero.alignment_id = (SELECT id FROM alignment WHERE alignment_name = 'Hero')
SELECT height_cm FROM superhero WHERE eye_colour_id IN (SELECT id FROM colour WHERE colour = 'amber')
SELECT height_cm FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour_name = 'Amber'
SELECT height_cm FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour_name = 'Amber'
SELECT height_cm FROM superhero WHERE eye_colour_id IN (SELECT id FROM colour WHERE colour = 'amber')
SELECT height_cm FROM superhero WHERE eye_colour_id IN (SELECT id FROM colour WHERE colour = 'amber')
SELECT height_cm FROM superhero WHERE eye_colour_id IN (SELECT id FROM colour WHERE colour = 'amber')",SELECT height_cm FROM superhero WHERE eye_colour_id IN (SELECT id FROM colour WHERE colour = 'amber')
174,479,"Among the cards with converted mana cost higher than 5 in the set Coldsnap, how many of them have unknown power?",card_games,moderate,SELECT SUM(CASE WHEN T1.power LIKE '*' OR T1.power IS NULL THEN 1 ELSE 0 END) FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE T2.name = 'Coldsnap' AND T1.convertedManaCost > 5,7,"SELECT COUNT(*) FROM cards WHERE convertedmanacost > 5 AND setcode = 'COLD' AND power = '?'
SELECT COUNT(*) FROM cards WHERE convertedmanacost > 5 AND setcode = 'COLD' AND power = '?'
SELECT COUNT(*) FROM cards WHERE convertedmanacost > 5 AND setcode = 'COLD' AND power = '?'
SELECT COUNT(*) FROM cards WHERE convertedmanacost > 5 AND setcode = 'COLD' AND power = '?'
SELECT COUNT(*) FROM cards WHERE convertedmanacost > 5 AND setcode = 'COLD' AND power = '?'
SELECT COUNT(*) FROM cards WHERE convertedmanacost > 5 AND setcode = 'COLD' AND power = '?'
SELECT COUNT(*) FROM cards WHERE convertedmanacost > 5 AND setcode = 'COLD' AND power = '?'",SELECT COUNT(*) FROM cards WHERE convertedmanacost > 5 AND setcode = 'COLD' AND power = '?'
175,115,"For the branch which located in the south Bohemia with biggest number of inhabitants, what is the percentage of the male clients?",financial,challenging,SELECT CAST(SUM(T1.gender = 'M') AS REAL) * 100 / COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A3 = 'south Bohemia' GROUP BY T2.A4 ORDER BY T2.A4 DESC LIMIT 1,7,"SELECT ROUND((SUM(CASE WHEN client.gender = 'M' THEN 1 ELSE 0 END) * 100.0) / COUNT(*)) AS percentage_male FROM account JOIN disp ON account.account_id = disp.account_id JOIN client ON disp.client_id = client.client_id JOIN district ON client.district_id = district.district_id WHERE district.a11 = 'south Bohemia' ORDER BY district.a4 DESC LIMIT 1
SELECT ROUND((SUM(CASE WHEN client.gender = 'M' THEN 1 ELSE 0 END) * 100.0) / COUNT(*)) AS percentage_male FROM account JOIN disp ON account.account_id = disp.account_id JOIN client ON disp.client_id = client.client_id JOIN district ON client.district_id = district.district_id WHERE district.a11 = 'south Bohemia' ORDER BY district.a4 DESC LIMIT 1
SELECT ROUND((SELECT COUNT(*) FROM client  INNER JOIN disp ON client.client_id = disp.client_id  INNER JOIN account ON disp.account_id = account.account_id  INNER JOIN district ON client.district_id = district.district_id  WHERE client.gender = 'M' AND district.a2 = 'south Bohemia'  GROUP BY account.district_id  ORDER BY SUM(account.a4) DESC  LIMIT 1) / (SELECT COUNT(*) FROM client  INNER JOIN disp ON client.client_id = disp.client_id  INNER JOIN account ON disp.account_id = account.account_id  INNER JOIN district ON client.district_id = district.district_id  WHERE district.a2 = 'south Bohemia'  GROUP BY account.district_id  ORDER BY SUM(account.a4) DESC  LIMIT 1) * 100, 2) AS percentage
SELECT ROUND((SUM(CASE WHEN client.gender = 'M' THEN 1 ELSE 0 END) * 100.0) / COUNT(*)) AS percentage_male FROM account JOIN disp ON account.account_id = disp.account_id JOIN client ON disp.client_id = client.client_id JOIN district ON client.district_id = district.district_id WHERE district.a11 = 'south Bohemia' ORDER BY district.a4 DESC LIMIT 1
SELECT ROUND((SUM(CASE WHEN client.gender = 'M' THEN 1 ELSE 0 END) * 100.0) / COUNT(*)) AS male_percentage FROM account JOIN disp ON account.account_id = disp.account_id JOIN client ON disp.client_id = client.client_id JOIN district ON client.district_id = district.district_id WHERE district.a11 = 'south Bohemia' ORDER BY district.a4 DESC LIMIT 1
SELECT ROUND((SUM(CASE WHEN client.gender = 'M' THEN 1 ELSE 0 END) * 100.0) / COUNT(*)) AS percentage_of_male_clients FROM account JOIN disp ON account.account_id = disp.account_id JOIN client ON disp.client_id = client.client_id JOIN district ON client.district_id = district.district_id WHERE district.a11 = 'south Bohemia' ORDER BY district.a4 DESC LIMIT 1
SELECT ROUND((SELECT COUNT(*) FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN account ON disp.account_id = account.account_id INNER JOIN district ON client.district_id = district.district_id WHERE client.gender = 'M' AND district.a2 = 'south Bohemia' GROUP BY account.account_id ORDER BY SUM(account.a4) DESC LIMIT 1) / (SELECT COUNT(*) FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN account ON disp.account_id = account.account_id INNER JOIN district ON client.district_id = district.district_id WHERE district.a2 = 'south Bohemia' GROUP BY account.account_id) * 100, 2) AS percentage",SELECT ROUND((SUM(CASE WHEN client.gender = 'M' THEN 1 ELSE 0 END) * 100.0) / COUNT(*)) AS percentage_male FROM account JOIN disp ON account.account_id = disp.account_id JOIN client ON disp.client_id = client.client_id JOIN district ON client.district_id = district.district_id WHERE district.a11 = 'south Bohemia' ORDER BY district.a4 DESC LIMIT 1
176,955,"What is the average time in seconds of champion for each year, before year 1975?",formula_1,challenging,"WITH time_in_seconds AS ( SELECT T2.year, T2.raceId, T1.positionOrder, CASE WHEN T1.positionOrder = 1 THEN (CAST(SUBSTR(T1.time, 1, 1) AS REAL) * 3600) + (CAST(SUBSTR(T1.time, 3, 2) AS REAL) * 60) + CAST(SUBSTR(T1.time, 6,2) AS REAL )   + CAST(SUBSTR(T1.time, 9) AS REAL)/1000 ELSE 0 END AS time_seconds FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.time IS NOT NULL ), champion_time AS ( SELECT year, raceId, time_seconds FROM time_in_seconds WHERE positionOrder = 1 ) SELECT year, AVG(time_seconds) FROM champion_time WHERE year < 1975 GROUP BY year HAVING AVG(time_seconds) IS NOT NULL",7,"SELECT seasons.year, AVG(results.time) as average_time FROM seasons JOIN races ON seasons.year = races.year JOIN results ON races.raceid = results.raceid WHERE seasons.year < 1975 AND results.position = 1 GROUP BY seasons.year
SELECT seasons.year, AVG(results.time) as average_time FROM seasons JOIN races ON seasons.year = races.year JOIN results ON races.raceid = results.raceid WHERE seasons.year < 1975 AND results.position = 1 GROUP BY seasons.year
SELECT seasons.year, AVG(results.time) as average_time FROM seasons JOIN races ON seasons.year = races.year JOIN results ON races.raceid = results.raceid WHERE seasons.year < 1975 AND results.position = 1 GROUP BY seasons.year
SELECT seasons.year, AVG(results.time) as average_time FROM seasons JOIN races ON seasons.year = races.year JOIN results ON races.raceid = results.raceid WHERE seasons.year < 1975 AND results.position = 1 GROUP BY seasons.year
SELECT seasons.year, AVG(results.time) as average_time FROM seasons JOIN races ON seasons.year = races.year JOIN results ON races.raceid = results.raceid WHERE seasons.year < 1975 AND results.position = 1 GROUP BY seasons.year
SELECT seasons.year, AVG(results.time) as average_time FROM seasons JOIN races ON seasons.year = races.year JOIN results ON races.raceid = results.raceid WHERE seasons.year < 1975 AND results.position = 1 GROUP BY seasons.year
SELECT seasons.year, AVG(results.time) as average_time FROM seasons JOIN races ON seasons.year = races.year JOIN results ON races.raceid = results.raceid WHERE seasons.year < 1975 AND results.position = 1 GROUP BY seasons.year","SELECT seasons.year, AVG(results.time) as average_time FROM seasons JOIN races ON seasons.year = races.year JOIN results ON races.raceid = results.raceid WHERE seasons.year < 1975 AND results.position = 1 GROUP BY seasons.year"
177,1047,What is the football player Francois Affolter header's finishing rate on 18/09/2014?,european_football_2,moderate,"SELECT t2.heading_accuracy FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.player_name = 'Francois Affolter' AND SUBSTR(t2.`date`, 1, 10) = '2014-09-18'",7,"SELECT player.player_name, player_attributes.finishing FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.player_name = 'Francois Affolter' AND player_attributes.date = '18/09/2014'
SELECT player.player_name, player_attributes.finishing FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.player_name = ""Francois Affolter"" AND player_attributes.date = ""18/09/2014""
SELECT player.player_name, player_attributes.finishing FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.player_name = 'Francois Affolter' AND player_attributes.date = '18/09/2014'
SELECT player.player_name, player_attributes.finishing FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.player_name = ""Francois Affolter"" AND player_attributes.date = ""18/09/2014""
SELECT player.player_name, player_attributes.finishing FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.player_name = ""Francois Affolter"" AND player_attributes.date = ""18/09/2014""
SELECT player.player_name, player_attributes.finishing FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.player_name = 'Francois Affolter' AND player_attributes.date = '18/09/2014'
SELECT player.player_name, player_attributes.finishing FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.player_name = 'Francois Affolter' AND player_attributes.date = '18/09/2014'","SELECT player.player_name, player_attributes.finishing FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.player_name = 'Francois Affolter' AND player_attributes.date = '18/09/2014'"
178,998,"In terms of number of points acquired, how many victories did the driver who ranked 91st acquired?",formula_1,simple,SELECT SUM(CASE WHEN points = 91 THEN wins ELSE 0 END) FROM driverStandings,7,"SELECT COUNT(*)  FROM results  WHERE driverid = (SELECT driverid FROM driverstandings WHERE position = 91)
SELECT COUNT(*) FROM results WHERE driverid = (SELECT driverid FROM driverstandings WHERE position = 91)
SELECT COUNT(*) FROM results WHERE driverid = (SELECT driverid FROM driverstandings WHERE position = 91)
SELECT COUNT(*) FROM results WHERE driverid = (SELECT driverid FROM driverstandings WHERE position = 91)
SELECT COUNT(*) FROM results WHERE driverid = (SELECT driverid FROM driverstandings WHERE position = 91)
SELECT COUNT(*) FROM results WHERE driverid = (SELECT driverid FROM driverstandings WHERE position = 91)
SELECT COUNT(*) FROM results WHERE driverid = (SELECT driverid FROM driverstandings WHERE position = 91)",SELECT COUNT(*) FROM results WHERE driverid = (SELECT driverid FROM driverstandings WHERE position = 91)
179,1435,"List the names of closed event as ""game"" that was closed from 3/15/2019 to 3/20/2020.",student_club,moderate,"SELECT DISTINCT event_name FROM event WHERE type = 'Game' AND date(SUBSTR(event_date, 1, 10)) BETWEEN '2019-03-15' AND '2020-03-20' AND status = 'Closed'",7,"SELECT event.event_name  FROM event  WHERE event.type = 'game'  AND event.status = 'closed'  AND event.event_date BETWEEN '2019-03-15' AND '2020-03-20'
SELECT event.event_name  FROM event  WHERE event.type = 'game'  AND event.status = 'closed'  AND event.event_date BETWEEN '2019-03-15' AND '2020-03-20'
SELECT event.event_name  FROM event  WHERE event.type = 'game'  AND event.status = 'closed'  AND event.event_date BETWEEN '2019-03-15' AND '2020-03-20'
SELECT event.event_name  FROM event  WHERE event.type = 'game'  AND event.status = 'closed'  AND event.event_date BETWEEN '2019-03-15' AND '2020-03-20'
SELECT event.event_name  FROM event  WHERE event.type = 'game'  AND event.status = 'closed'  AND event.event_date BETWEEN '2019-03-15' AND '2020-03-20'
SELECT event.event_name  FROM event  WHERE event.type = 'game'  AND event.status = 'closed'  AND event.event_date BETWEEN '2019-03-15' AND '2020-03-20'
SELECT event.event_name  FROM event  WHERE event.type = 'game'  AND event.status = 'closed'  AND event.event_date BETWEEN '2019-03-15' AND '2020-03-20'",SELECT event.event_name  FROM event  WHERE event.type = 'game'  AND event.status = 'closed'  AND event.event_date BETWEEN '2019-03-15' AND '2020-03-20'
180,408,How many unknown power cards contain info about the triggered ability,card_games,moderate,SELECT T2.text FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE (T1.power IS NULL OR T1.power = '*') AND T2.text LIKE '%triggered ability%',7,"SELECT COUNT(*) FROM cards WHERE power LIKE '%unknown%' AND text LIKE '%triggered ability%'
SELECT COUNT(*) FROM cards WHERE power LIKE '%unknown%' AND text LIKE '%triggered ability%'
SELECT COUNT(*) FROM cards WHERE power LIKE '%unknown%' AND text LIKE '%triggered ability%'
SELECT COUNT(*) FROM cards WHERE power = 'unknown' AND hascontentwarning = 'triggered ability'
SELECT COUNT(*) FROM cards WHERE power = 'unknown' AND hascontentwarning = 'triggered ability'
SELECT COUNT(*) FROM cards WHERE power LIKE '%unknown%' AND text LIKE '%triggered ability%'
SELECT COUNT(*) FROM cards WHERE power LIKE '%unknown%' AND text LIKE '%triggered ability%'",SELECT COUNT(*) FROM cards WHERE power LIKE '%unknown%' AND text LIKE '%triggered ability%'
181,1049,"How many matches in the 2015/2016 season were held in Scotland Premier League
?",european_football_2,simple,SELECT COUNT(t2.id) FROM League AS t1 INNER JOIN Match AS t2 ON t1.id = t2.league_id WHERE t2.season = '2015/2016' AND t1.name = 'Scotland Premier League',7,"SELECT COUNT(*) FROM match WHERE season = '2015/2016' AND (league_id IN (SELECT id FROM league WHERE name LIKE '%Premier League%'))
SELECT COUNT(*)  FROM match  WHERE season = '2015/2016' AND (league_id IN (SELECT id FROM league WHERE name LIKE '%Premier League%'))
SELECT COUNT(*) FROM match WHERE season = '2015/2016' AND (league_id IN (SELECT id FROM league WHERE name LIKE '%Premier League%'))
SELECT COUNT(*) FROM match WHERE season = '2015/2016' AND (league_id IN (SELECT id FROM league WHERE name LIKE '%Premier League%'))
SELECT COUNT(*) FROM match WHERE season = '2015/2016' AND (league_id IN (SELECT id FROM league WHERE name LIKE '%Premier League%'))
SELECT COUNT(*)  FROM match  WHERE season = '2015/2016' AND (league_id IN (SELECT id FROM league WHERE name LIKE '%Premier League%'))
SELECT COUNT(*)  FROM match  WHERE season = '2015/2016' AND (league_id IN (SELECT id FROM league WHERE name LIKE '%Premier League%'))",SELECT COUNT(*) FROM match WHERE season = '2015/2016' AND (league_id IN (SELECT id FROM league WHERE name LIKE '%Premier League%'))
182,1071,"List the football team that has a build up play speed of 31, build up plan dribbling of 53, and build up play passing of 32. Only indicate the short name of the team.",european_football_2,challenging,SELECT DISTINCT t1.team_short_name FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t2.buildUpPlaySpeed = 31 AND t2.buildUpPlayDribbling = 53 AND t2.buildUpPlayPassing = 32,7,"SELECT team.team_short_name  FROM team  JOIN team_attributes  ON team.team_api_id = team_attributes.team_api_id  WHERE team_attributes.buildupplayspeed = 31  AND team_attributes.buildupplaydribbling = 53  AND team_attributes.buildupplaypassing = 32
SELECT team.team_short_name  FROM team  JOIN team_attributes  ON team.team_api_id = team_attributes.team_api_id  WHERE team_attributes.buildupplayspeed = 31  AND team_attributes.buildupplaydribbling = 53  AND team_attributes.buildupplaypassing = 32
SELECT team.team_short_name  FROM team  JOIN team_attributes  ON team.team_api_id = team_attributes.team_api_id  WHERE team_attributes.buildupplayspeed = 31  AND team_attributes.buildupplaydribbling = 53  AND team_attributes.buildupplaypassing = 32
SELECT team.team_short_name  FROM team  JOIN team_attributes  ON team.team_api_id = team_attributes.team_api_id  WHERE team_attributes.buildupplayspeed = 31  AND team_attributes.buildupplaydribbling = 53  AND team_attributes.buildupplaypassing = 32
SELECT team.team_short_name FROM team JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id WHERE team_attributes.buildupplayspeed = 31 AND team_attributes.buildupplaydribbling = 53 AND team_attributes.buildupplaypassing = 32
SELECT team.team_short_name  FROM team  JOIN team_attributes  ON team.team_api_id = team_attributes.team_api_id  WHERE team_attributes.buildupplayspeed = 31  AND team_attributes.buildupplaydribbling = 53  AND team_attributes.buildupplaypassing = 32
SELECT team.team_short_name  FROM team  JOIN team_attributes  ON team.team_api_id = team_attributes.team_api_id  WHERE team_attributes.buildupplayspeed = 31  AND team_attributes.buildupplaydribbling = 53  AND team_attributes.buildupplaypassing = 32",SELECT team.team_short_name  FROM team  JOIN team_attributes  ON team.team_api_id = team_attributes.team_api_id  WHERE team_attributes.buildupplayspeed = 31  AND team_attributes.buildupplaydribbling = 53  AND team_attributes.buildupplaypassing = 32
183,616,What is the comment's rating score of the post which was created on 7/19/2010 7:19:56 PM,codebase_community,simple,SELECT T1.Score FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.CreationDate = '2010-07-19 19:19:56.0',7,"SELECT comments.score  FROM posts  JOIN comments ON posts.id = comments.postid  WHERE posts.creationdate = '2010-07-19 19:19:56'
SELECT comments.score  FROM posts  INNER JOIN comments ON posts.id = comments.postid  WHERE posts.creationdate = '2010-07-19 19:19:56'
SELECT comments.score  FROM posts  JOIN comments ON posts.id = comments.postid  WHERE posts.creationdate = '2010-07-19 19:19:56'
SELECT comments.score  FROM posts  INNER JOIN comments ON posts.id = comments.postid  WHERE posts.creationdate = '2010-07-19 19:19:56'
SELECT comments.score  FROM posts  JOIN comments ON posts.id = comments.postid  WHERE posts.creationdate = '2010-07-19 19:19:56'
SELECT comments.score  FROM posts  JOIN comments ON posts.id = comments.postid  WHERE posts.creationdate = '2010-07-19 19:19:56'
SELECT comments.score  FROM posts  INNER JOIN comments ON posts.id = comments.postid  WHERE posts.creationdate = '2010-07-19 19:19:56'",SELECT comments.score  FROM posts  JOIN comments ON posts.id = comments.postid  WHERE posts.creationdate = '2010-07-19 19:19:56'
184,990,What is the constructor reference name of the champion in the 2009 Singapore Grand Prix? Please give its website.,formula_1,challenging,"SELECT T3.constructorRef, T3.url FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN constructors AS T3 on T1.constructorId = T3.constructorId WHERE T2.name = 'Singapore Grand Prix' AND T2.year = 2009 AND T1.time LIKE '_:%:__.___'",7,"SELECT constructors.name, constructors.url FROM constructors INNER JOIN constructorresults ON constructors.constructorid = constructorresults.constructorid INNER JOIN races ON constructorresults.raceid = races.raceid WHERE races.year = 2009 AND races.name = ""Singapore Grand Prix""
SELECT constructors.name, constructors.url FROM constructors INNER JOIN constructorresults ON constructors.constructorid = constructorresults.constructorid INNER JOIN races ON constructorresults.raceid = races.raceid WHERE races.name = ""Singapore Grand Prix"" AND races.year = 2009
SELECT constructors.name, constructors.url FROM constructors INNER JOIN constructorresults ON constructors.constructorid = constructorresults.constructorid INNER JOIN races ON constructorresults.raceid = races.raceid WHERE races.year = 2009 AND races.name = ""Singapore Grand Prix""
SELECT constructors.name, constructors.url FROM constructors INNER JOIN constructorresults ON constructors.constructorid = constructorresults.constructorid INNER JOIN races ON constructorresults.raceid = races.raceid WHERE races.year = 2009 AND races.name = ""Singapore Grand Prix""
SELECT constructors.name, constructors.url FROM constructors INNER JOIN constructorresults ON constructors.constructorid = constructorresults.constructorid INNER JOIN races ON constructorresults.raceid = races.raceid WHERE races.year = 2009 AND races.name = ""Singapore Grand Prix""
SELECT constructors.name, constructors.url FROM constructors INNER JOIN constructorresults ON constructors.constructorid = constructorresults.constructorid INNER JOIN races ON constructorresults.raceid = races.raceid WHERE races.name = ""Singapore Grand Prix"" AND races.year = 2009
SELECT constructors.name, constructors.url FROM constructors JOIN constructorresults ON constructors.constructorid = constructorresults.constructorid JOIN races ON constructorresults.raceid = races.raceid WHERE races.name = ""2009 Singapore Grand Prix""","SELECT constructors.name, constructors.url FROM constructors INNER JOIN constructorresults ON constructors.constructorid = constructorresults.constructorid INNER JOIN races ON constructorresults.raceid = races.raceid WHERE races.year = 2009 AND races.name = ""Singapore Grand Prix"""
185,1472,"In 2012, who had the least consumption in LAM?",debit_card_specializing,moderate,"SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM' AND SUBSTR(T2.Date, 1, 4) = '2012' GROUP BY T1.CustomerID ORDER BY SUM(T2.Consumption) ASC LIMIT 1",7,"SELECT yearmonth.customerid, SUM(yearmonth.consumption) as total_consumption FROM yearmonth WHERE yearmonth.date LIKE '2012%' GROUP BY yearmonth.customerid ORDER BY total_consumption ASC LIMIT 1
SELECT yearmonth.customerid, customers.customerid, SUM(yearmonth.consumption) as total_consumption FROM yearmonth JOIN customers ON yearmonth.customerid = customers.customerid WHERE yearmonth.date LIKE '2012%' AND customers.segment = 'LAM' GROUP BY yearmonth.customerid ORDER BY total_consumption ASC LIMIT 1
SELECT yearmonth.customerid, customers.segment, SUM(yearmonth.consumption) AS total_consumption FROM yearmonth JOIN customers ON yearmonth.customerid = customers.customerid WHERE yearmonth.date LIKE '2012%' AND customers.segment = 'LAM' GROUP BY yearmonth.customerid, customers.segment ORDER BY total_consumption ASC LIMIT 1
SELECT yearmonth.customerid, customers.segment, SUM(yearmonth.consumption) as total_consumption FROM yearmonth JOIN customers ON yearmonth.customerid = customers.customerid WHERE yearmonth.date LIKE '2012%' AND customers.segment = 'LAM' GROUP BY yearmonth.customerid, customers.segment ORDER BY total_consumption ASC LIMIT 1
SELECT yearmonth.customerid, customers.segment, SUM(yearmonth.consumption) AS total_consumption FROM yearmonth JOIN customers ON yearmonth.customerid = customers.customerid WHERE yearmonth.date LIKE '2012%' AND customers.segment = 'LAM' GROUP BY yearmonth.customerid, customers.segment ORDER BY total_consumption ASC LIMIT 1
SELECT yearmonth.customerid, customers.segment, SUM(yearmonth.consumption) AS total_consumption FROM yearmonth JOIN customers ON yearmonth.customerid = customers.customerid WHERE yearmonth.date LIKE '2012%' AND customers.segment = 'LAM' GROUP BY yearmonth.customerid, customers.segment ORDER BY total_consumption ASC LIMIT 1
SELECT yearmonth.customerid, customers.segment, SUM(yearmonth.consumption) AS total_consumption FROM yearmonth JOIN customers ON yearmonth.customerid = customers.customerid WHERE yearmonth.date LIKE '2012%' AND customers.segment = 'LAM' GROUP BY yearmonth.customerid, customers.segment ORDER BY total_consumption ASC LIMIT 1","SELECT yearmonth.customerid, customers.segment, SUM(yearmonth.consumption) AS total_consumption FROM yearmonth JOIN customers ON yearmonth.customerid = customers.customerid WHERE yearmonth.date LIKE '2012%' AND customers.segment = 'LAM' GROUP BY yearmonth.customerid, customers.segment ORDER BY total_consumption ASC LIMIT 1"
186,954,Please calculate the race completion percentage of Japanese drivers from 2007 to 2009.,formula_1,challenging,"SELECT CAST(SUM(IIF(T1.time IS NOT NULL, 1, 0)) AS REAL) * 100 / COUNT(T1.raceId) FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN drivers AS T3 on T1.driverId = T3.driverId WHERE T3.nationality = 'Japanese' AND T2.year BETWEEN 2007 AND 2009",7,"SELECT COUNT(DISTINCT r.raceid) * 100.0 / (SELECT COUNT(*) FROM races WHERE year BETWEEN 2007 AND 2009) AS race_completion_percentage FROM results AS res INNER JOIN races AS r ON res.raceid = r.raceid INNER JOIN drivers AS d ON res.driverid = d.driverid WHERE d.nationality = 'Japanese' AND r.year BETWEEN 2007 AND 2009
SELECT COUNT(DISTINCT r.raceid) * 100.0 / (SELECT COUNT(*) FROM races WHERE year BETWEEN 2007 AND 2009) AS race_completion_percentage FROM results AS res JOIN drivers AS d ON res.driverid = d.driverid JOIN races AS r ON res.raceid = r.raceid WHERE d.nationality = 'Japanese' AND r.year BETWEEN 2007 AND 2009
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM races WHERE year BETWEEN 2007 AND 2009) AS race_completion_percentage FROM results INNER JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.nationality = 'Japanese' AND results.raceid IN (SELECT raceid FROM races WHERE year BETWEEN 2007 AND 2009)
SELECT COUNT(DISTINCT r.raceid) * 100.0 / (SELECT COUNT(*) FROM races WHERE year BETWEEN 2007 AND 2009) AS race_completion_percentage FROM results AS res JOIN drivers AS d ON res.driverid = d.driverid JOIN races AS r ON res.raceid = r.raceid WHERE d.nationality = 'Japanese' AND r.year BETWEEN 2007 AND 2009
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM races WHERE year BETWEEN 2007 AND 2009) AS race_completion_percentage FROM results INNER JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.nationality = 'Japanese' AND results.raceid IN (SELECT raceid FROM races WHERE year BETWEEN 2007 AND 2009)
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM races WHERE year BETWEEN 2007 AND 2009) AS race_completion_percentage FROM results JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.nationality = 'Japanese' AND results.raceid IN (SELECT raceid FROM races WHERE year BETWEEN 2007 AND 2009)
SELECT COUNT(DISTINCT r.raceid) * 100.0 / (SELECT COUNT(*) FROM races WHERE year BETWEEN 2007 AND 2009) AS race_completion_percentage FROM results AS res JOIN drivers AS d ON res.driverid = d.driverid JOIN races AS r ON res.raceid = r.raceid WHERE d.nationality = 'Japanese' AND r.year BETWEEN 2007 AND 2009",SELECT COUNT(DISTINCT r.raceid) * 100.0 / (SELECT COUNT(*) FROM races WHERE year BETWEEN 2007 AND 2009) AS race_completion_percentage FROM results AS res JOIN drivers AS d ON res.driverid = d.driverid JOIN races AS r ON res.raceid = r.raceid WHERE d.nationality = 'Japanese' AND r.year BETWEEN 2007 AND 2009
187,301,What is the bond type of TR007_4_19?,toxicology,simple,SELECT T.bond_type FROM bond AS T WHERE T.bond_id = 'TR007_4_19',7,"SELECT bond.bond_type  FROM bond  JOIN connected ON bond.bond_id = connected.bond_id  JOIN atom ON (atom.atom_id = connected.atom_id OR atom.atom_id = connected.atom_id2)  WHERE atom.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR007_4_19')
SELECT bond.bond_type  FROM bond  JOIN connected ON bond.bond_id = connected.bond_id  JOIN atom ON (atom.atom_id = connected.atom_id OR atom.atom_id = connected.atom_id2)  JOIN molecule ON bond.molecule_id = molecule.molecule_id  WHERE molecule.label = 'TR007_4_19?atom' AND atom.element = 'atom' 
SELECT bond.bond_type  FROM bond  JOIN connected ON bond.bond_id = connected.bond_id  JOIN atom ON (atom.atom_id = connected.atom_id OR atom.atom_id = connected.atom_id2)  JOIN molecule ON bond.molecule_id = molecule.molecule_id  WHERE molecule.label = 'TR007_4_19?atom' AND atom.element = 'atom' 
SELECT bond.bond_type  FROM bond  JOIN connected ON bond.bond_id = connected.bond_id  JOIN atom ON (atom.atom_id = connected.atom_id OR atom.atom_id = connected.atom_id2)  WHERE atom.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR007_4_19')
SELECT bond.bond_type  FROM bond  JOIN connected ON bond.bond_id = connected.bond_id  JOIN atom ON (atom.atom_id = connected.atom_id OR atom.atom_id = connected.atom_id2)  WHERE atom.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR007_4_19')
SELECT bond.bond_type  FROM bond  JOIN connected ON bond.bond_id = connected.bond_id  JOIN atom ON (atom.atom_id = connected.atom_id OR atom.atom_id = connected.atom_id2)  WHERE atom.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR007_4_19')
SELECT bond.bond_type  FROM bond  JOIN connected ON bond.bond_id = connected.bond_id  JOIN atom ON (atom.atom_id = connected.atom_id OR atom.atom_id = connected.atom_id2)  JOIN molecule ON bond.molecule_id = molecule.molecule_id  WHERE molecule.label = 'TR007_4_19?atom' AND atom.element = 'atom' ",SELECT bond.bond_type  FROM bond  JOIN connected ON bond.bond_id = connected.bond_id  JOIN atom ON (atom.atom_id = connected.atom_id OR atom.atom_id = connected.atom_id2)  WHERE atom.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR007_4_19')
188,798,"What is the publisher for Hawkman, Karate Kid and Speedy?",superhero,moderate,"SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')",7,"SELECT publisher.publisher_name  FROM superhero  JOIN publisher ON superhero.publisher_id = publisher.id  WHERE superhero.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')
SELECT publisher.publisher_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')
SELECT publisher.publisher_name  FROM superhero  JOIN publisher ON superhero.publisher_id = publisher.id  WHERE superhero.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')
SELECT publisher.publisher_name  FROM superhero  JOIN publisher ON superhero.publisher_id = publisher.id  WHERE superhero.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')
SELECT publisher.publisher_name  FROM superhero  JOIN publisher ON superhero.publisher_id = publisher.id  WHERE superhero.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')
SELECT publisher.publisher_name  FROM superhero  INNER JOIN publisher ON superhero.publisher_id = publisher.id  WHERE superhero.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')
SELECT publisher.publisher_name  FROM superhero  JOIN publisher ON superhero.publisher_id = publisher.id  WHERE superhero.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')","SELECT publisher.publisher_name  FROM superhero  JOIN publisher ON superhero.publisher_id = publisher.id  WHERE superhero.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')"
189,1481,"What is the difference in the annual average consumption of the customers with the least amount of consumption paid in CZK for 2013 between SME and LAM, LAM and KAM, and KAM and SME?",debit_card_specializing,challenging,"SELECT CAST(SUM(IIF(T1.Segment = 'SME', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'LAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) , CAST(SUM(IIF(T1.Segment = 'LAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'KAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) , CAST(SUM(IIF(T1.Segment = 'KAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'SME', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' AND T2.Consumption = ( SELECT MIN(Consumption) FROM yearmonth ) AND T2.Date BETWEEN 201301 AND 201312",7,"SELECT      (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'SME') AND strftime('%Y', date) = '2013') -      (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'LAM') AND strftime('%Y', date) = '2013') AS 'SME_LAM',     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'LAM') AND strftime('%Y', date) = '2013') -      (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'KAM') AND strftime('%Y', date) = '2013') AS 'LAM_KAM',     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'KAM') AND strftime('%Y', date) = '2013') -      (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'SME') AND strftime('%Y'
SELECT      (SELECT AVG(consumption)       FROM yearmonth       WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'SME') AND strftime('%Y', date) = '2013') -      (SELECT AVG(consumption)       FROM yearmonth       WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'LAM') AND strftime('%Y', date) = '2013') AS 'SME-LAM',      (SELECT AVG(consumption)       FROM yearmonth       WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'LAM') AND strftime('%Y', date) = '2013') -      (SELECT AVG(consumption)       FROM yearmonth       WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'KAM') AND strftime('%Y', date) = '2013') AS 'LAM-KAM',      (SELECT AVG(consumption)       FROM yearmonth       WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'KAM') AND strftime('%Y', date) = '2013') -      (SELECT AV
SELECT      (SELECT AVG(consumption)       FROM yearmonth       WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'SME') AND strftime('%Y', date) = '2013') -      (SELECT AVG(consumption)       FROM yearmonth       WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'LAM') AND strftime('%Y', date) = '2013') AS 'SME_LAM',      (SELECT AVG(consumption)       FROM yearmonth       WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'LAM') AND strftime('%Y', date) = '2013') -      (SELECT AVG(consumption)       FROM yearmonth       WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'KAM') AND strftime('%Y', date) = '2013') AS 'LAM_KAM',      (SELECT AVG(consumption)       FROM yearmonth       WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'KAM') AND strftime('%Y', date) = '2013') -      (SELECT AV
SELECT      (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'SME') AND strftime('%Y', date) = '2013') -      (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'LAM') AND strftime('%Y', date) = '2013') AS 'SME_LAM',     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'LAM') AND strftime('%Y', date) = '2013') -      (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'KAM') AND strftime('%Y', date) = '2013') AS 'LAM_KAM',     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'KAM') AND strftime('%Y', date) = '2013') -      (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'SME') AND strftime('%Y'
SELECT      (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'SME') AND strftime('%Y', date) = '2013') -      (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'LAM') AND strftime('%Y', date) = '2013') AS 'SME_LAM',     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'LAM') AND strftime('%Y', date) = '2013') -      (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'KAM') AND strftime('%Y', date) = '2013') AS 'LAM_KAM',     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'KAM') AND strftime('%Y', date) = '2013') -      (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'SME') AND strftime('%Y'
SELECT      (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'SME') AND strftime('%Y', date) = '2013') -      (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'LAM') AND strftime('%Y', date) = '2013') AS 'SME_LAM',     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'LAM') AND strftime('%Y', date) = '2013') -      (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'KAM') AND strftime('%Y', date) = '2013') AS 'LAM_KAM',     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'KAM') AND strftime('%Y', date) = '2013') -      (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'SME') AND strftime('%Y'
SELECT    (SELECT AVG(consumption)     FROM yearmonth     WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'SME') AND strftime('%Y', date) = '2013') -    (SELECT AVG(consumption)     FROM yearmonth     WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'LAM') AND strftime('%Y', date) = '2013') AS 'SME_LAM',      (SELECT AVG(consumption)     FROM yearmonth     WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'LAM') AND strftime('%Y', date) = '2013') -    (SELECT AVG(consumption)     FROM yearmonth     WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'KAM') AND strftime('%Y', date) = '2013') AS 'LAM_KAM',      (SELECT AVG(consumption)     FROM yearmonth     WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'KAM') AND strftime('%Y', date) = '2013') -    (","SELECT      (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'SME') AND strftime('%Y', date) = '2013') -      (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'LAM') AND strftime('%Y', date) = '2013') AS 'SME_LAM',     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'LAM') AND strftime('%Y', date) = '2013') -      (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'KAM') AND strftime('%Y', date) = '2013') AS 'LAM_KAM',     (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'KAM') AND strftime('%Y', date) = '2013') -      (SELECT AVG(consumption) FROM yearmonth WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'SME') AND strftime('%Y'"
190,1011,Which top 20 driver created the shortest lap time ever record in a Formula_1 race? Please give them full names.,formula_1,challenging,"WITH lap_times_in_seconds AS (SELECT driverId, (CASE WHEN SUBSTR(time, 1, INSTR(time, ':') - 1) <> '' THEN CAST(SUBSTR(time, 1, INSTR(time, ':') - 1) AS REAL) * 60 ELSE 0 END + CASE WHEN SUBSTR(time, INSTR(time, ':') + 1, INSTR(time, '.') - INSTR(time, ':') - 1) <> '' THEN CAST(SUBSTR(time, INSTR(time, ':') + 1, INSTR(time, '.') - INSTR(time, ':') - 1) AS REAL) ELSE 0 END + CASE WHEN SUBSTR(time, INSTR(time, '.') + 1) <> '' THEN CAST(SUBSTR(time, INSTR(time, '.') + 1) AS REAL) / 1000 ELSE 0 END) AS time_in_seconds FROM lapTimes) SELECT T2.forename, T2.surname, T1.driverId FROM (SELECT driverId, MIN(time_in_seconds) AS min_time_in_seconds FROM lap_times_in_seconds GROUP BY driverId) AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId ORDER BY T1.min_time_in_seconds ASC LIMIT 20",7,"SELECT d.forename, d.surname, MIN(l.time) as shortest_lap_time FROM drivers d JOIN laptimes l ON d.driverid = l.driverid JOIN races r ON l.raceid = r.raceid GROUP BY d.driverid ORDER BY shortest_lap_time ASC LIMIT 20
SELECT d.forename, d.surname, MIN(l.time) as shortest_lap_time FROM drivers d JOIN laptimes l ON d.driverid = l.driverid JOIN races r ON l.raceid = r.raceid GROUP BY d.driverid ORDER BY shortest_lap_time ASC LIMIT 20
SELECT d.forename, d.surname, MIN(l.time) as shortest_lap_time FROM drivers d JOIN laptimes l ON d.driverid = l.driverid JOIN races r ON l.raceid = r.raceid GROUP BY d.driverid ORDER BY shortest_lap_time ASC LIMIT 20
SELECT d.forename, d.surname, MIN(l.time) as shortest_lap_time FROM drivers d JOIN laptimes l ON d.driverid = l.driverid JOIN races r ON l.raceid = r.raceid GROUP BY d.driverid ORDER BY shortest_lap_time ASC LIMIT 20
SELECT d.forename, d.surname, MIN(l.time) as shortest_lap_time FROM drivers d JOIN laptimes l ON d.driverid = l.driverid JOIN races r ON l.raceid = r.raceid GROUP BY d.driverid ORDER BY shortest_lap_time ASC LIMIT 20
SELECT d.forename, d.surname, MIN(l.time) as shortest_lap_time FROM drivers d JOIN laptimes l ON d.driverid = l.driverid JOIN races r ON l.raceid = r.raceid GROUP BY d.driverid ORDER BY shortest_lap_time ASC LIMIT 20
SELECT d.forename, d.surname, MIN(l.time) as shortest_lap_time FROM drivers d JOIN laptimes l ON d.driverid = l.driverid JOIN races r ON l.raceid = r.raceid GROUP BY d.driverid ORDER BY shortest_lap_time ASC LIMIT 20","SELECT d.forename, d.surname, MIN(l.time) as shortest_lap_time FROM drivers d JOIN laptimes l ON d.driverid = l.driverid JOIN races r ON l.raceid = r.raceid GROUP BY d.driverid ORDER BY shortest_lap_time ASC LIMIT 20"
191,507,"For all the set of cards that has Brazil Portuguese translation, what is the percentage of them are only available online?",card_games,challenging,SELECT CAST(SUM(CASE WHEN isOnlineOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) FROM sets WHERE code IN ( SELECT setCode FROM set_translations WHERE language = 'Portuguese (Brazil)' ),7,"SELECT (SELECT COUNT(*) FROM cards WHERE isonlineonly = 1 AND EXISTS (SELECT 1 FROM foreign_data WHERE foreign_data.multiverseid = cards.multiverseid AND foreign_data.language = 'Portuguese' AND foreign_data.name = 'Brazil')) * 100.0 / (SELECT COUNT(*) FROM cards WHERE EXISTS (SELECT 1 FROM foreign_data WHERE foreign_data.multiverseid = cards.multiverseid AND foreign_data.language = 'Portuguese' AND foreign_data.name = 'Brazil')) AS percentage
SELECT (SELECT COUNT(*) FROM cards WHERE isonlineonly = 1 AND EXISTS (SELECT 1 FROM foreign_data WHERE foreign_data.multiverseid = cards.multiverseid AND foreign_data.language = 'Portuguese' AND foreign_data.name = 'Brazil')) * 100 / (SELECT COUNT(*) FROM cards WHERE EXISTS (SELECT 1 FROM foreign_data WHERE foreign_data.multiverseid = cards.multiverseid AND foreign_data.language = 'Portuguese' AND foreign_data.name = 'Brazil')) AS percentage
SELECT (     SELECT COUNT(*)      FROM cards      WHERE isonlineonly = 1 AND EXISTS (         SELECT 1          FROM foreign_data          WHERE foreign_data.multiverseid = cards.multiverseid AND foreign_data.language = 'Portuguese (Brazil)'     ) ) / (     SELECT COUNT(*)      FROM cards      WHERE EXISTS (         SELECT 1          FROM foreign_data          WHERE foreign_data.multiverseid = cards.multiverseid AND foreign_data.language = 'Portuguese (Brazil)'     ) ) * 100 AS percentage
SELECT (     SELECT COUNT(*)      FROM cards      WHERE isonlineonly = 1 AND EXISTS (         SELECT 1          FROM foreign_data          WHERE foreign_data.multiverseid = cards.multiverseid AND foreign_data.language = 'Portuguese (Brazil)'     ) ) / (     SELECT COUNT(*)      FROM cards      WHERE EXISTS (         SELECT 1          FROM foreign_data          WHERE foreign_data.multiverseid = cards.multiverseid AND foreign_data.language = 'Portuguese (Brazil)'     ) ) * 100 AS percentage
SELECT (SELECT COUNT(*) FROM cards WHERE isonlineonly = 1 AND EXISTS (SELECT 1 FROM foreign_data WHERE foreign_data.multiverseid = cards.multiverseid AND foreign_data.language = 'Portuguese' AND foreign_data.name = 'Brazil')) * 100 / (SELECT COUNT(*) FROM cards WHERE EXISTS (SELECT 1 FROM foreign_data WHERE foreign_data.multiverseid = cards.multiverseid AND foreign_data.language = 'Portuguese' AND foreign_data.name = 'Brazil')) AS percentage
SELECT (SELECT COUNT(*) FROM cards WHERE isonlineonly = 1 AND EXISTS (SELECT 1 FROM foreign_data WHERE foreign_data.multiverseid = cards.multiverseid AND foreign_data.language = 'Portuguese' AND foreign_data.name = 'Brazil')) * 100 / (SELECT COUNT(*) FROM cards WHERE EXISTS (SELECT 1 FROM foreign_data WHERE foreign_data.multiverseid = cards.multiverseid AND foreign_data.language = 'Portuguese' AND foreign_data.name = 'Brazil')) AS percentage
SELECT (     SELECT COUNT(*)      FROM cards      WHERE isonlineonly = 1 AND EXISTS (         SELECT 1          FROM foreign_data          WHERE foreign_data.multiverseid = cards.multiverseid AND foreign_data.language = 'Portuguese (Brazil)'     ) ) / (     SELECT COUNT(*)      FROM cards      WHERE EXISTS (         SELECT 1          FROM foreign_data          WHERE foreign_data.multiverseid = cards.multiverseid AND foreign_data.language = 'Portuguese (Brazil)'     ) ) * 100 AS percentage",SELECT (SELECT COUNT(*) FROM cards WHERE isonlineonly = 1 AND EXISTS (SELECT 1 FROM foreign_data WHERE foreign_data.multiverseid = cards.multiverseid AND foreign_data.language = 'Portuguese' AND foreign_data.name = 'Brazil')) * 100 / (SELECT COUNT(*) FROM cards WHERE EXISTS (SELECT 1 FROM foreign_data WHERE foreign_data.multiverseid = cards.multiverseid AND foreign_data.language = 'Portuguese' AND foreign_data.name = 'Brazil')) AS percentage
192,431,Which set is not available outside of the United States and has foil cards with Japanese writing on them? Please include the set ID in your response.,card_games,challenging,"SELECT T1.name, T1.id FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Japanese' AND T1.isFoilOnly = 1 AND T1.isForeignOnly = 0",7,"SELECT id FROM sets WHERE isforeignonly = 0 AND isfoilonly = 1 AND name LIKE '%foil%' AND name LIKE N'%日本%'
SELECT id FROM sets WHERE isforeignonly = 0 AND isfoilonly = 1 AND name LIKE '%foil%' AND name LIKE N'%日本%'
SELECT id FROM sets WHERE isforeignonly = 0 AND isfoilonly = 1 AND name LIKE '%foil%' AND name LIKE N'%日本%'
SELECT id FROM sets WHERE isforeignonly = 0 AND isfoilonly = 1 AND name LIKE '%foil%' AND name LIKE '%Japanese%'
SELECT id FROM sets WHERE isforeignonly = 0 AND isfoilonly = 1 AND name LIKE '%foil%' AND name LIKE N'%日本%'
SELECT id FROM sets WHERE isforeignonly = 0 AND isfoilonly = 1 AND name LIKE '%foil%' AND name LIKE N'%日本%'
SELECT id FROM sets WHERE isforeignonly = 0 AND isfoilonly = 1 AND name LIKE '%foil%' AND name LIKE N'%日本%'",SELECT id FROM sets WHERE isforeignonly = 0 AND isfoilonly = 1 AND name LIKE '%foil%' AND name LIKE N'%日本%'
193,1167,"For the year that concluded on December 31, 1998, how many male patients on average were tested in the lab each month?",thrombosis_prediction,moderate,"SELECT CAST(COUNT(T1.ID) AS REAL) / 12 FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T2.Date) = '1998' AND T1.SEX = 'M'",7,"SELECT AVG(COUNT(*)) FROM (SELECT strftime('%Y-%m', ""examination date"") as month FROM examination JOIN patient ON examination.id = patient.id WHERE strftime('%Y-%m-%d', ""examination date"") <= '1998-12-31' AND strftime('%Y-%m-%d', ""examination date"") >= '1998-01-01' AND sex = 'male' GROUP BY month)
SELECT AVG(COUNT(*)) FROM (SELECT strftime('%Y-%m', ""examination date"") as month FROM examination JOIN patient ON examination.id = patient.id WHERE strftime('%Y-%m-%d', ""examination date"") <= '1998-12-31' AND strftime('%Y-%m-%d', ""examination date"") >= '1998-01-01' AND sex = 'male' GROUP BY month)
SELECT AVG(COUNT(patient.id)) as average_male_patients_per_month FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'male' AND strftime('%Y-%m-%d', examination.date) BETWEEN '1998-01-01' AND '1998-12-31' GROUP BY strftime('%Y-%m', examination.date)
SELECT AVG(COUNT(*)) AS average_monthly_tests FROM (     SELECT strftime('%Y-%m', ""examination date"") AS month, COUNT(*)     FROM examination     JOIN patient ON examination.id = patient.id     WHERE patient.sex = 'male' AND strftime('%Y-%m-%d', ""examination date"") <= '1998-12-31'     GROUP BY month )
SELECT AVG(COUNT(*)) FROM (SELECT strftime('%Y-%m', ""examination date"") as month FROM examination JOIN patient ON examination.id = patient.id WHERE strftime('%Y-%m-%d', ""examination date"") <= '1998-12-31' AND strftime('%Y-%m-%d', ""examination date"") >= '1998-01-01' AND sex = 'male' GROUP BY month)
SELECT AVG(COUNT(*)) FROM (SELECT strftime('%Y-%m', ""examination date"") as month FROM examination JOIN patient ON examination.id = patient.id WHERE strftime('%Y-%m-%d', ""examination date"") <= '1998-12-31' AND strftime('%Y-%m-%d', ""examination date"") >= '1998-01-01' AND sex = 'male' GROUP BY month)
SELECT AVG(COUNT(*)) AS average_male_patients_per_month FROM (     SELECT strftime('%Y-%m', 'examination date') AS month, COUNT(*)     FROM examination     JOIN patient ON examination.id = patient.id     WHERE strftime('%Y-%m-%d', 'examination date') <= '1998-12-31'     AND strftime('%Y-%m-%d', 'examination date') >= '1998-01-01'     AND sex = 'male'     GROUP BY month ) AS subquery","SELECT AVG(COUNT(*)) FROM (SELECT strftime('%Y-%m', ""examination date"") as month FROM examination JOIN patient ON examination.id = patient.id WHERE strftime('%Y-%m-%d', ""examination date"") <= '1998-12-31' AND strftime('%Y-%m-%d', ""examination date"") >= '1998-01-01' AND sex = 'male' GROUP BY month)"
194,451,How many cards available in paper have a positive starting maximum hand size?,card_games,simple,SELECT SUM(CASE WHEN availability = 'paper' AND hAND = '3' THEN 1 ELSE 0 END) FROM cards,7,"SELECT COUNT(*) FROM cards WHERE availability = 'paper' AND hand > 0
SELECT COUNT(*) FROM cards WHERE availability = 'paper' AND hand > 0
SELECT COUNT(*) FROM cards WHERE availability = 'paper' AND hand > 0
SELECT COUNT(*) FROM cards WHERE availability = 'paper' AND hand > 0
SELECT COUNT(*) FROM cards WHERE availability = 'paper' AND hand > 0
SELECT COUNT(*) FROM cards WHERE availability = 'paper' AND hand > 0
SELECT COUNT(*) FROM cards WHERE availability = 'paper' AND hand > 0",SELECT COUNT(*) FROM cards WHERE availability = 'paper' AND hand > 0
195,1431,List the last name of the members of the club that attended the women's soccer event.,student_club,moderate,SELECT T3.last_name FROM attendance AS T1 INNER JOIN event AS T2 ON T2.event_id = T1.link_to_event INNER JOIN member AS T3 ON T1.link_to_member = T3.member_id WHERE T2.event_name = 'Women''s Soccer' AND T3.position = 'Member',7,"SELECT member.last_name FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women\'s Soccer Event'
SELECT member.last_name FROM member INNER JOIN attendance ON member.member_id = attendance.link_to_member INNER JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women\'s Soccer Event'
SELECT member.last_name FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women\'s Soccer Event'
SELECT member.last_name FROM member INNER JOIN attendance ON member.member_id = attendance.link_to_member INNER JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women\'s Soccer Event'
SELECT member.last_name FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women\'s Soccer Event'
SELECT member.last_name FROM member INNER JOIN attendance ON member.member_id = attendance.link_to_member INNER JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women\'s Soccer Event'
SELECT member.last_name FROM member INNER JOIN attendance ON member.member_id = attendance.link_to_member INNER JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women\'s Soccer Event'",SELECT member.last_name FROM member INNER JOIN attendance ON member.member_id = attendance.link_to_member INNER JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women\'s Soccer Event'
196,1191,What percentage of male patients who first presented to the hospital in 1981 were diagnosed with BEHCET?,thrombosis_prediction,challenging,"SELECT CAST(SUM(CASE WHEN Diagnosis = 'BEHCET' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM Patient WHERE STRFTIME('%Y', `First Date`) = '1981' AND SEX = 'M'",7,"SELECT (SELECT COUNT(*) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'male' AND strftime('%Y', patient.first_date) = '1981' AND laboratory.diagnosis = 'BEHCET') / (SELECT COUNT(*) FROM patient WHERE patient.sex = 'male' AND strftime('%Y', patient.first_date) = '1981') * 100 AS percentage
SELECT (SELECT COUNT(*) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'male' AND strftime('%Y', patient.first_date) = '1981' AND laboratory.diagnosis = 'BEHCET') / (SELECT COUNT(*) FROM patient WHERE patient.sex = 'male' AND strftime('%Y', patient.first_date) = '1981') * 100 AS percentage
SELECT (SELECT COUNT(*) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'male' AND strftime('%Y', patient.first_date) = '1981' AND laboratory.diagnosis = 'BEHCET') / (SELECT COUNT(*) FROM patient WHERE patient.sex = 'male' AND strftime('%Y', patient.first_date) = '1981') * 100 AS percentage
SELECT (SELECT COUNT(*) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'male' AND strftime('%Y', patient.first_date) = '1981' AND laboratory.diagnosis = 'BEHCET') / (SELECT COUNT(*) FROM patient WHERE patient.sex = 'male' AND strftime('%Y', patient.first_date) = '1981') * 100 AS percentage
SELECT (SELECT COUNT(*) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'male' AND strftime('%Y', patient.first_date) = '1981' AND laboratory.diagnosis = 'BEHCET') / (SELECT COUNT(*) FROM patient WHERE patient.sex = 'male' AND strftime('%Y', patient.first_date) = '1981') * 100 AS percentage
SELECT (SELECT COUNT(*) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'male' AND strftime('%Y', patient.first_date) = '1981' AND laboratory.diagnosis = 'BEHCET') / (SELECT COUNT(*) FROM patient WHERE patient.sex = 'male' AND strftime('%Y', patient.first_date) = '1981') * 100 AS percentage
SELECT (     SELECT COUNT(*)      FROM patient      INNER JOIN laboratory ON patient.id = laboratory.id      WHERE patient.sex = 'male'      AND strftime('%Y', patient.first_date) = '1981'      AND patient.diagnosis = 'BEHCET' ) / (     SELECT COUNT(*)      FROM patient      WHERE patient.sex = 'male'      AND strftime('%Y', patient.first_date) = '1981' ) * 100 AS percentage","SELECT (SELECT COUNT(*) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'male' AND strftime('%Y', patient.first_date) = '1981' AND laboratory.diagnosis = 'BEHCET') / (SELECT COUNT(*) FROM patient WHERE patient.sex = 'male' AND strftime('%Y', patient.first_date) = '1981') * 100 AS percentage"
197,1112,"What was the chance creation crossing class for ""Hull City"" on 2010/2/22?",european_football_2,moderate,"SELECT t2.chanceCreationCrossingClass FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t1.team_long_name = 'Hull City' AND SUBSTR(t2.`date`, 1, 10) = '2010-02-22'",7,"SELECT chancecreationcrossing, chancecreationcrossingclass  FROM team_attributes  JOIN team ON team_attributes.team_api_id = team.team_api_id  WHERE team.team_long_name = 'Hull City' AND team_attributes.date = '2010-2-22'
SELECT chancecreationcrossing FROM team_attributes JOIN team ON team_attributes.team_api_id = team.team_api_id WHERE team.team_long_name = 'Hull City' AND team_attributes.date = '2010-02-22'
SELECT chancecreationcrossing FROM team_attributes JOIN team ON team_attributes.team_api_id = team.team_api_id WHERE team.team_long_name = 'Hull City' AND team_attributes.date = '2010-2-22'
SELECT chancecreationcrossing FROM team_attributes JOIN team ON team_attributes.team_api_id = team.team_api_id WHERE team.team_long_name = 'Hull City' AND team_attributes.date = '2010-2-22'
SELECT chancecreationcrossing, chancecreationcrossingclass  FROM team_attributes  JOIN team ON team_attributes.team_api_id = team.team_api_id  WHERE team.team_long_name = 'Hull City' AND team_attributes.date = '2010-02-22'
SELECT chancecreationcrossing, chancecreationcrossingclass  FROM team_attributes  JOIN team ON team_attributes.team_api_id = team.team_api_id  WHERE team.team_long_name = 'Hull City' AND team_attributes.date = '2010-2-22'
SELECT chancecreationcrossing FROM team_attributes JOIN team ON team_attributes.team_api_id = team.team_api_id WHERE team.team_long_name = 'Hull City' AND team_attributes.date = '2010-2-22'",SELECT chancecreationcrossing FROM team_attributes JOIN team ON team_attributes.team_api_id = team.team_api_id WHERE team.team_long_name = 'Hull City' AND team_attributes.date = '2010-2-22'
198,812,List down at least five full names of superheroes with blue eyes.,superhero,simple,SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Blue' LIMIT 5,7,"SELECT s.full_name FROM superhero AS s JOIN colour AS c ON s.eye_colour_id = c.id WHERE c.colour_name = 'Blue' LIMIT 5
SELECT s.full_name  FROM superhero AS s  JOIN colour AS c ON s.eye_colour_id = c.id  WHERE c.colour_name = 'Blue'  LIMIT 5
SELECT s.full_name FROM superhero AS s JOIN colour AS c ON s.eye_colour_id = c.id WHERE c.colour_name = 'Blue' LIMIT 5
SELECT s.full_name FROM superhero AS s JOIN colour AS c ON s.eye_colour_id = c.id WHERE c.colour_name = 'Blue' LIMIT 5
SELECT s.full_name FROM superhero AS s JOIN colour AS c ON s.eye_colour_id = c.id WHERE c.colour_name = 'Blue' LIMIT 5
SELECT s.full_name FROM superhero AS s JOIN colour AS c ON s.eye_colour_id = c.id WHERE c.colour_name = 'Blue' LIMIT 5
SELECT s.full_name FROM superhero AS s JOIN colour AS c ON s.eye_colour_id = c.id WHERE c.colour_name = 'Blue' LIMIT 5",SELECT s.full_name FROM superhero AS s JOIN colour AS c ON s.eye_colour_id = c.id WHERE c.colour_name = 'Blue' LIMIT 5
199,1183,"For the patient who was diagnosed SLE on 1997/1/27, what was his/her original diagnose when he/she came to the hospital for the first time?",thrombosis_prediction,challenging,SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.ID = ( SELECT ID FROM Examination WHERE `Examination Date` = '1997-01-27' AND Diagnosis = 'SLE' ) AND T2.`Examination Date` = T1.`First Date`,7,"SELECT patient.diagnosis FROM patient INNER JOIN examination ON patient.id = examination.id WHERE patient.birthday = '1997/1/27' AND examination.`examination date` = (SELECT MIN(`examination date`) FROM examination WHERE id = patient.id AND `examination date` < patient.`first date`)
SELECT patient.diagnosis FROM patient INNER JOIN examination ON patient.id = examination.id WHERE patient.birthday = '1997/1/27' AND examination.`examination date` = patient.`first date`
SELECT patient.diagnosis FROM patient INNER JOIN examination ON patient.id = examination.id WHERE patient.birthday = '1997/1/27' AND examination.`examination date` = patient.`first date`
SELECT patient.diagnosis FROM patient INNER JOIN examination ON patient.id = examination.id WHERE patient.birthday = '1997/1/27' AND examination.`examination date` = patient.`first date`
SELECT patient.diagnosis FROM patient INNER JOIN examination ON patient.id = examination.id WHERE patient.birthday = '1997/1/27' AND examination.`examination date` = patient.`first date`
SELECT patient.diagnosis FROM patient INNER JOIN examination ON patient.id = examination.id WHERE patient.birthday = '1997/1/27' AND examination.`examination date` = patient.`first date`
SELECT patient.diagnosis FROM patient INNER JOIN examination ON patient.id = examination.id WHERE patient.birthday = '1997/1/27' AND examination.`examination date` = patient.`first date`",SELECT patient.diagnosis FROM patient INNER JOIN examination ON patient.id = examination.id WHERE patient.birthday = '1997/1/27' AND examination.`examination date` = patient.`first date`
200,1014,Please list the lap records for the circuits in Italy.,formula_1,challenging,"WITH fastest_lap_times AS (SELECT T1.raceId, T1.FastestLapTime, (CAST(SUBSTR(T1.FastestLapTime, 1, INSTR(T1.FastestLapTime, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, ':') + 1, INSTR(T1.FastestLapTime, '.') - INSTR(T1.FastestLapTime, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, '.') + 1) AS REAL) / 1000) as time_in_seconds FROM results AS T1 WHERE T1.FastestLapTime IS NOT NULL ) SELECT T1.FastestLapTime as lap_record FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN circuits AS T3 on T2.circuitId = T3.circuitId INNER JOIN (SELECT MIN(fastest_lap_times.time_in_seconds) as min_time_in_seconds FROM fastest_lap_times INNER JOIN races AS T2 on fastest_lap_times.raceId = T2.raceId INNER JOIN circuits AS T3 on T2.circuitId = T3.circuitId WHERE T3.country = 'Italy' ) AS T4 ON (CAST(SUBSTR(T1.FastestLapTime, 1, INSTR(T1.FastestLapTime, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, ':') + 1, INSTR(T1.FastestLapTime, '.') - INSTR(T1.FastestLapTime, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, '.') + 1) AS REAL) / 1000) = T4.min_time_in_seconds LIMIT 1",7,"SELECT l.time AS lap_record, c.name AS circuit_name FROM laptimes AS l JOIN races AS r ON l.raceid = r.raceid JOIN circuits AS c ON r.circuitid = c.circuitid WHERE c.country = 'Italy'
SELECT l.time AS lap_record, c.name AS circuit_name FROM laptimes AS l JOIN races AS r ON l.raceid = r.raceid JOIN circuits AS c ON r.circuitid = c.circuitid WHERE c.country = 'Italy'
SELECT circuits.name, circuits.country, laptimes.time FROM circuits JOIN races ON circuits.circuitid = races.circuitid JOIN laptimes ON races.raceid = laptimes.raceid WHERE circuits.country = 'Italy'
SELECT l.time AS lap_record, c.name AS circuit_name FROM laptimes AS l JOIN races AS r ON l.raceid = r.raceid JOIN circuits AS c ON r.circuitid = c.circuitid WHERE c.country = 'Italy'
SELECT l.time AS lap_record, c.name AS circuit_name FROM laptimes AS l JOIN races AS r ON l.raceid = r.raceid JOIN circuits AS c ON r.circuitid = c.circuitid WHERE c.country = 'Italy'
SELECT l.time AS lap_record, c.name AS circuit_name FROM laptimes AS l JOIN races AS r ON l.raceid = r.raceid JOIN circuits AS c ON r.circuitid = c.circuitid WHERE c.country = 'Italy'
SELECT l.time AS lap_record, c.name AS circuit_name FROM laptimes AS l JOIN races AS r ON l.raceid = r.raceid JOIN circuits AS c ON r.circuitid = c.circuitid WHERE c.country = 'Italy'","SELECT l.time AS lap_record, c.name AS circuit_name FROM laptimes AS l JOIN races AS r ON l.raceid = r.raceid JOIN circuits AS c ON r.circuitid = c.circuitid WHERE c.country = 'Italy'"
201,728,"Rank superheroes from Marvel Comics by their eye color popularity, starting with the most common color.",superhero,moderate,"SELECT colour.colour AS EyeColor, COUNT(superhero.id) AS Count, RANK() OVER (ORDER BY COUNT(superhero.id) DESC) AS PopularityRank FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics' GROUP BY colour.colour",7,"SELECT eye_colour_id, COUNT(*) as popularity FROM superhero GROUP BY eye_colour_id ORDER BY popularity DESC
SELECT eye_colour_id, COUNT(*) as popularity FROM superhero GROUP BY eye_colour_id ORDER BY popularity DESC
SELECT eye_colour_id, COUNT(*) as popularity FROM superhero GROUP BY eye_colour_id ORDER BY popularity DESC
SELECT eye_colour_id, COUNT(*) as popularity FROM superhero GROUP BY eye_colour_id ORDER BY popularity DESC
SELECT eye_colour_id, COUNT(*) as popularity FROM superhero GROUP BY eye_colour_id ORDER BY popularity DESC
SELECT eye_colour_id, COUNT(*) as popularity FROM superhero GROUP BY eye_colour_id ORDER BY popularity DESC
SELECT eye_colour_id, COUNT(*) as popularity FROM superhero GROUP BY eye_colour_id ORDER BY popularity DESC","SELECT eye_colour_id, COUNT(*) as popularity FROM superhero GROUP BY eye_colour_id ORDER BY popularity DESC"
202,1531,Who is the top spending customer and how much is the average price per single item purchased by this customer? What currency was being used?,debit_card_specializing,moderate,"SELECT T2.CustomerID, SUM(T2.Price / T2.Amount), T1.Currency FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.CustomerID = ( SELECT CustomerID FROM yearmonth ORDER BY Consumption DESC LIMIT 1 ) GROUP BY T2.CustomerID, T1.Currency",7,"SELECT t.customerid, c.currency, AVG(t.price/t.amount) AS average_price FROM transactions_1k AS t JOIN customers AS c ON t.customerid = c.customerid GROUP BY t.customerid, c.currency ORDER BY SUM(t.amount * t.price) DESC LIMIT 1
SELECT t.customerid, c.currency, AVG(t.price/t.amount) AS average_price FROM transactions_1k AS t JOIN customers AS c ON t.customerid = c.customerid GROUP BY t.customerid, c.currency ORDER BY SUM(t.amount * t.price) DESC LIMIT 1
SELECT t.customerid, c.currency, AVG(t.price / t.amount) AS average_price FROM transactions_1k AS t JOIN customers AS c ON t.customerid = c.customerid GROUP BY t.customerid, c.currency ORDER BY SUM(t.amount * t.price) DESC LIMIT 1
SELECT t.customerid, c.currency, AVG(t.price / t.amount) AS average_price FROM transactions_1k AS t JOIN customers AS c ON t.customerid = c.customerid GROUP BY t.customerid, c.currency ORDER BY SUM(t.amount * t.price) DESC LIMIT 1
SELECT t.customerid, c.currency, AVG(t.price/t.amount) AS average_price FROM transactions_1k AS t JOIN customers AS c ON t.customerid = c.customerid GROUP BY t.customerid, c.currency ORDER BY SUM(t.amount * t.price) DESC LIMIT 1
SELECT t.customerid, c.currency, AVG(t.price/t.amount) AS average_price FROM transactions_1k AS t JOIN customers AS c ON t.customerid = c.customerid GROUP BY t.customerid, c.currency ORDER BY SUM(t.amount * t.price) DESC LIMIT 1
SELECT t.customerid, c.currency, AVG(t.price/t.amount) AS average_price FROM transactions_1k AS t JOIN customers AS c ON t.customerid = c.customerid GROUP BY t.customerid, c.currency ORDER BY SUM(t.amount * t.price) DESC LIMIT 1","SELECT t.customerid, c.currency, AVG(t.price/t.amount) AS average_price FROM transactions_1k AS t JOIN customers AS c ON t.customerid = c.customerid GROUP BY t.customerid, c.currency ORDER BY SUM(t.amount * t.price) DESC LIMIT 1"
203,1254,How many patients with a normal Ig A level came to the hospital after 1990/1/1?,thrombosis_prediction,moderate,"SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGA BETWEEN 80 AND 500 AND  strftime('%Y',  T1.`First Date`) > '1990'",7,"SELECT COUNT(patient.id)  FROM patient  JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.igm = 'normal'  AND patient.first_date > '1990-01-01'
SELECT COUNT(DISTINCT patient.id)  FROM patient  JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.igm = 'normal'  AND patient.first_date > '1990-01-01'
SELECT COUNT(*) FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.igm = 'normal' AND patient.first_date > '1990-01-01'
SELECT COUNT(*) FROM patient  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.igm = 'normal'  AND patient.first_date > '1990-01-01'
SELECT COUNT(patient.id)  FROM patient  JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.igm = 'normal'  AND patient.first_date > '1990-01-01'
SELECT COUNT(*) FROM patient  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.igm = 'normal'  AND patient.first_date > '1990-01-01'
SELECT COUNT(*)  FROM patient  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.igm = 'normal'  AND patient.first_date > '1990-01-01'",SELECT COUNT(patient.id)  FROM patient  JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.igm = 'normal'  AND patient.first_date > '1990-01-01'
204,880,"Paul di Resta was in the No. 853 race, what percent faster did he finish in the 853rd race than the next race for the fastest lap speed?",formula_1,challenging,"SELECT (SUM(IIF(T2.raceId = 853, T2.fastestLapSpeed, 0)) - SUM(IIF(T2.raceId = 854, T2.fastestLapSpeed, 0))) * 100 / SUM(IIF(T2.raceId = 853, T2.fastestLapSpeed, 0)) FROM drivers AS T1 INNER JOIN results AS T2 ON T2.driverId = T1.driverId WHERE T1.forename = 'Paul' AND T1.surname = 'di Resta'",7,"SELECT ((SELECT ROUND(((r1.fastestlapspeed - r2.fastestlapspeed)/r2.fastestlapspeed * 100), 2)  FROM results r1  JOIN results r2 ON r1.raceid = r2.raceid + 1  WHERE r1.driverid = (SELECT driverid FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta' LIMIT 1)  AND r1.raceid = 853) AS speed_difference_percent)
SELECT ((SELECT ROUND(AVG(r1.fastestlapspeed), 2)  FROM results r1  WHERE r1.raceid = (SELECT r2.raceid FROM races r2 WHERE r2.round = 853)  AND r1.driverid = (SELECT d.driverid FROM drivers d WHERE d.forename = 'Paul' AND d.surname = 'di Resta')) /  (SELECT ROUND(AVG(r3.fastestlapspeed), 2)  FROM results r3  WHERE r3.raceid = (SELECT r4.raceid FROM races r4 WHERE r4.round = 854)  AND r3.driverid = (SELECT d2.driverid FROM drivers d2 WHERE d2.forename = 'Paul' AND d2.surname = 'di Resta'))) * 100 AS speed_difference
SELECT ((SELECT ROUND(((r1.fastestlapspeed - r2.fastestlapspeed) / r2.fastestlapspeed * 100), 2)  FROM results r1  JOIN results r2 ON r1.raceid = r2.raceid - 1  WHERE r1.driverid = (SELECT driverid FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta' LIMIT 1)  AND r1.raceid = 853) AS speed_difference_percent)
SELECT ((SELECT ROUND(AVG(r1.fastestlapspeed), 2)  FROM results r1  WHERE r1.raceid = (SELECT r2.raceid FROM races r2 WHERE r2.round = 853)  AND r1.driverid = (SELECT d.driverid FROM drivers d WHERE d.forename = 'Paul' AND d.surname = 'di Resta')) /  (SELECT ROUND(AVG(r3.fastestlapspeed), 2)  FROM results r3  WHERE r3.raceid = (SELECT r4.raceid FROM races r4 WHERE r4.round = 854)  AND r3.driverid = (SELECT d2.driverid FROM drivers d2 WHERE d2.forename = 'Paul' AND d2.surname = 'di Resta'))) * 100 AS percent_faster
SELECT ((SELECT ROUND(((r1.fastestlapspeed - r2.fastestlapspeed) / r2.fastestlapspeed * 100), 2)  FROM results r1  JOIN results r2 ON r1.raceid = r2.raceid - 1  WHERE r1.driverid = (SELECT driverid FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta' LIMIT 1)  AND r1.raceid = 853) AS speed_difference_percent)
SELECT ((SELECT ROUND(((r1.fastestlapspeed - r2.fastestlapspeed)/r2.fastestlapspeed * 100), 2)  FROM results r1  JOIN results r2 ON r1.raceid = r2.raceid + 1  WHERE r1.driverid = (SELECT driverid FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta' LIMIT 1)  AND r1.raceid = 853) AS speed_difference_percent)
SELECT ((SELECT ROUND(((r1.fastestlapspeed - r2.fastestlapspeed) / r2.fastestlapspeed * 100), 2)  FROM results r1  JOIN results r2 ON r1.raceid = r2.raceid - 1  WHERE r1.driverid = (SELECT driverid FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta' LIMIT 1)  AND r1.raceid = 853) AS speed_difference_percent) ","SELECT ((SELECT ROUND(((r1.fastestlapspeed - r2.fastestlapspeed)/r2.fastestlapspeed * 100), 2)  FROM results r1  JOIN results r2 ON r1.raceid = r2.raceid + 1  WHERE r1.driverid = (SELECT driverid FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta' LIMIT 1)  AND r1.raceid = 853) AS speed_difference_percent)"
205,931,What was the fastest lap speed among all drivers in the 2009 Spanish Grand Prix?,formula_1,moderate,SELECT T2.fastestLapSpeed FROM races AS T1 INNER JOIN results AS T2 ON T2.raceId = T1.raceId WHERE T1.name = 'Spanish Grand Prix' AND T1.year = 2009 AND T2.fastestLapSpeed IS NOT NULL ORDER BY T2.fastestLapSpeed DESC LIMIT 1,7,"SELECT MAX(fastestlapspeed) FROM results WHERE raceid IN (SELECT raceid FROM races WHERE year = 2009 AND circuitid IN (SELECT circuitid FROM circuits WHERE country = 'Spain'))
SELECT MAX(fastestlapspeed) FROM results WHERE raceid IN (SELECT raceid FROM races WHERE year = 2009 AND circuitid IN (SELECT circuitid FROM circuits WHERE country = 'Spain'))
SELECT MAX(fastestlapspeed) FROM results WHERE raceid IN (SELECT raceid FROM races WHERE year = 2009 AND circuitid IN (SELECT circuitid FROM circuits WHERE country = 'Spain'))
SELECT MAX(fastestlapspeed) FROM results WHERE raceid IN (SELECT raceid FROM races WHERE year = 2009 AND circuitid IN (SELECT circuitid FROM circuits WHERE country = 'Spain'))
SELECT MAX(fastestlapspeed) FROM results WHERE raceid IN (SELECT raceid FROM races WHERE year = 2009 AND circuitid IN (SELECT circuitid FROM circuits WHERE country = 'Spain'))
SELECT MAX(fastestlapspeed) FROM results WHERE raceid IN (SELECT raceid FROM races WHERE year = 2009 AND circuitid IN (SELECT circuitid FROM circuits WHERE country = 'Spain'))
SELECT MAX(fastestlapspeed) FROM results WHERE raceid IN (SELECT raceid FROM races WHERE year = 2009 AND circuitid IN (SELECT circuitid FROM circuits WHERE country = 'Spain'))",SELECT MAX(fastestlapspeed) FROM results WHERE raceid IN (SELECT raceid FROM races WHERE year = 2009 AND circuitid IN (SELECT circuitid FROM circuits WHERE country = 'Spain'))
206,1204,How long did it take after patient number 821298 arrived at the hospital for the first time before her evaluation began?,thrombosis_prediction,simple,"SELECT STRFTIME('%d', T3.`Examination Date`) - STRFTIME('%d', T1.`First Date`) FROM Patient AS T1 INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T1.ID = 821298",7,"SELECT strftime('%H:%M:%S', datetime(patient.first_date, 'unixepoch')) - strftime('%H:%M:%S', datetime(laboratory.date, 'unixepoch')) as time_difference FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.id = 821298
SELECT julianday('now') - julianday(patient.first_date) as days_passed FROM patient WHERE patient.id = 821298
SELECT strftime('%H:%M:%S', datetime(patient.first_date, 'unixepoch')) - strftime('%H:%M:%S', datetime(laboratory.date, 'unixepoch')) FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.id = 821298
SELECT julianday('now') - julianday(patient.first_date) as days_elapsed FROM patient WHERE patient.id = 821298
SELECT julianday('now') - julianday(patient.first_date) as days_passed FROM patient WHERE patient.id = 821298
SELECT julianday('now') - julianday(patient.first_date) as days_passed FROM patient WHERE patient.id = 821298
SELECT strftime('%H:%M:%S', datetime(patient.first_date, 'unixepoch')) - strftime('%H:%M:%S', datetime(laboratory.date, 'unixepoch')) as time_difference FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.id = 821298",SELECT julianday('now') - julianday(patient.first_date) as days_passed FROM patient WHERE patient.id = 821298
207,724,Please list the superhero names of all the superheroes that have blue eyes and blond hair.,superhero,challenging,SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Blue' AND T3.colour = 'Blond',7,"SELECT superhero_name  FROM superhero  INNER JOIN colour ON eye_colour_id = colour.id AND colour_name = 'blue'  INNER JOIN colour ON hair_colour_id = colour.id AND colour_name = 'blond'  WHERE eye_colour_id = (SELECT id FROM colour WHERE colour_name = 'blue')  AND hair_colour_id = (SELECT id FROM colour WHERE colour_name = 'blond')
SELECT superhero_name  FROM superhero  INNER JOIN colour ON eye_colour_id = colour.id AND colour_name = 'blue'  INNER JOIN colour ON hair_colour_id = colour.id AND colour_name = 'blond'  WHERE eye_colour_id = (SELECT id FROM colour WHERE colour_name = 'blue')  AND hair_colour_id = (SELECT id FROM colour WHERE colour_name = 'blond')
SELECT superhero_name  FROM superhero  INNER JOIN colour ON eye_colour_id = colour.id AND colour_name = 'blue'  INNER JOIN colour ON hair_colour_id = colour.id AND colour_name = 'blond'  WHERE eye_colour_id = (SELECT id FROM colour WHERE colour_name = 'blue')  AND hair_colour_id = (SELECT id FROM colour WHERE colour_name = 'blond')
SELECT superhero_name  FROM superhero  INNER JOIN colour ON eye_colour_id = colour.id AND colour_name = 'blue'  INNER JOIN colour ON hair_colour_id = colour.id AND colour_name = 'blond'  WHERE eye_colour_id = (SELECT id FROM colour WHERE colour_name = 'blue')  AND hair_colour_id = (SELECT id FROM colour WHERE colour_name = 'blond')
SELECT superhero.superhero_name FROM superhero INNER JOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id INNER JOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id WHERE eye_colour.colour = 'blue' AND hair_colour.colour = 'blond'
SELECT superhero_name  FROM superhero  INNER JOIN colour ON eye_colour_id = colour.id  INNER JOIN colour ON hair_colour_id = colour.id  WHERE colour.colour_name = 'blue' AND colour.colour_name = 'blond' 
SELECT superhero_name  FROM superhero  INNER JOIN colour ON eye_colour_id = colour.id AND colour.colour = 'blue'  INNER JOIN colour ON hair_colour_id = colour.id AND colour.colour = 'blond'  WHERE alignment_id IN (SELECT id FROM alignment WHERE alignment = 'good')  AND gender_id IN (SELECT id FROM gender WHERE gender = 'male')",SELECT superhero_name  FROM superhero  INNER JOIN colour ON eye_colour_id = colour.id AND colour_name = 'blue'  INNER JOIN colour ON hair_colour_id = colour.id AND colour_name = 'blond'  WHERE eye_colour_id = (SELECT id FROM colour WHERE colour_name = 'blue')  AND hair_colour_id = (SELECT id FROM colour WHERE colour_name = 'blond')
208,1461,List the last names of students under the Elementary Education major and include their phone numbers.,student_club,simple,"SELECT T1.last_name, T1.phone FROM member AS T1 INNER JOIN major AS T2 ON T2.major_id = T1.link_to_major WHERE T2.major_name = 'Elementary Education'",7,"SELECT member.last_name, member.phone FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Elementary Education'
SELECT member.last_name, member.phone FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Elementary Education'
SELECT member.last_name, member.phone FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Elementary Education'
SELECT member.last_name, member.phone FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Elementary Education'
SELECT member.last_name, member.phone FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Elementary Education'
SELECT member.last_name, member.phone FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Elementary Education'
SELECT member.last_name, member.phone FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Elementary Education'","SELECT member.last_name, member.phone FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Elementary Education'"
209,1139,"What was the final score for the match on September 24, 2008, in the Belgian Jupiler League between the home team and the away team?",european_football_2,challenging,"SELECT t2.home_team_goal, t2.away_team_goal FROM League AS t1 INNER JOIN Match AS t2 ON t1.id = t2.league_id WHERE t1.name = 'Belgium Jupiler League' AND t2.`date` LIKE '2008-09-24%'",7,"SELECT home_team_goal, away_team_goal FROM match WHERE date = '2008-09-24' AND (league_id = (SELECT id FROM league WHERE name = 'Belgian Jupiler League')) AND (home_team_api_id = (SELECT team_api_id FROM team WHERE team_long_name = 'Home Team') OR away_team_api_id = (SELECT team_api_id FROM team WHERE team_long_name = 'Away Team'))
SELECT home_team_goal, away_team_goal FROM match WHERE date = '2008-09-24' AND (league_id = (SELECT id FROM league WHERE name = 'Belgian Jupiler League')) AND (home_team_api_id = (SELECT team_api_id FROM team WHERE team_long_name = 'Home Team') OR away_team_api_id = (SELECT team_api_id FROM team WHERE team_long_name = 'Away Team'))
SELECT home_team_goal, away_team_goal FROM match WHERE date = '2008-09-24' AND (league_id = (SELECT id FROM league WHERE name = 'Belgian Jupiler League')) AND (home_team_api_id = (SELECT team_api_id FROM team WHERE team_long_name = 'Home Team') OR away_team_api_id = (SELECT team_api_id FROM team WHERE team_long_name = 'Away Team'))
SELECT home_team_goal, away_team_goal FROM match WHERE date = '2008-09-24' AND (league_id = (SELECT id FROM league WHERE name = 'Belgian Jupiler League')) AND (home_team_api_id = (SELECT team_api_id FROM team WHERE team_long_name = 'Home Team') OR away_team_api_id = (SELECT team_api_id FROM team WHERE team_long_name = 'Away Team'))
SELECT home_team_goal, away_team_goal FROM match WHERE date = '2008-09-24' AND (league_id = (SELECT id FROM league WHERE name = 'Belgian Jupiler League')) AND (home_team_api_id = (SELECT id FROM team WHERE team_long_name = 'Home Team') OR away_team_api_id = (SELECT id FROM team WHERE team_long_name = 'Away Team'))
SELECT home_team_goal, away_team_goal FROM match WHERE date = '2008-09-24' AND (league_id = (SELECT id FROM league WHERE name = 'Belgian Jupiler League')) AND (home_team_api_id = (SELECT team_api_id FROM team WHERE team_long_name = 'Home Team') OR away_team_api_id = (SELECT team_api_id FROM team WHERE team_long_name = 'Away Team'))
SELECT home_team_goal, away_team_goal FROM match WHERE date = '2008-09-24' AND (league_id = (SELECT id FROM league WHERE name = 'Belgian Jupiler League')) AND (home_team_api_id = (SELECT id FROM team WHERE team_long_name = 'Home Team') OR away_team_api_id = (SELECT id FROM team WHERE team_long_name = 'Away Team'))","SELECT home_team_goal, away_team_goal FROM match WHERE date = '2008-09-24' AND (league_id = (SELECT id FROM league WHERE name = 'Belgian Jupiler League')) AND (home_team_api_id = (SELECT team_api_id FROM team WHERE team_long_name = 'Home Team') OR away_team_api_id = (SELECT team_api_id FROM team WHERE team_long_name = 'Away Team'))"
210,968,What is reference name of Robert Kubica?,formula_1,simple,SELECT driverRef FROM drivers WHERE forename = 'Robert' AND surname = 'Kubica',7,"SELECT name FROM drivers WHERE surname = ""Kubica""
SELECT name FROM drivers WHERE surname = ""Kubica""
SELECT name FROM drivers WHERE surname = ""Kubica""
SELECT name FROM drivers WHERE surname = ""Kubica""
SELECT name FROM drivers WHERE surname = ""Kubica""
SELECT name FROM drivers WHERE surname = ""Kubica""
SELECT name FROM drivers WHERE surname = ""Kubica""","SELECT name FROM drivers WHERE surname = ""Kubica"""
211,962,"From 2000 to 2005, what percentage of drivers who were born before 1985 and the lap numbers were over 50?",formula_1,challenging,"SELECT CAST(SUM(IIF(STRFTIME('%Y', T3.dob) < '1985' AND T1.laps > 50, 1, 0)) AS REAL) * 100 / COUNT(*) FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN drivers AS T3 on T1.driverId = T3.driverId WHERE T2.year BETWEEN 2000 AND 2005",7,"SELECT (     SELECT COUNT(*)      FROM results      WHERE (         SELECT drivers.dob          FROM drivers          WHERE drivers.driverid = results.driverid          AND strftime('%Y', drivers.dob) < 1985     )      AND (         SELECT laptimes.lap          FROM laptimes          WHERE laptimes.driverid = results.driverid          AND laptimes.raceid = results.raceid          GROUP BY laptimes.raceid          HAVING AVG(laptimes.lap) > 50     )     AND (         SELECT seasons.year          FROM seasons          WHERE seasons.year BETWEEN 2000 AND 2005          AND seasons.year = (             SELECT races.year              FROM races              WHERE races.raceid = results.raceid         )     ) ) / (     SELECT COUNT(*)      FROM results      WHERE (         SELECT seasons.year          FROM seasons          WHERE seasons.year BETWEEN 2000 AND 2005          AND seasons.year = (             SELECT races.year              FROM races              WHERE
SELECT (     SELECT COUNT(*)      FROM results      WHERE (         SELECT drivers.dob          FROM drivers          WHERE drivers.driverid = results.driverid          AND strftime('%Y', drivers.dob) < 1985     )      AND (         SELECT laptimes.lap          FROM laptimes          WHERE laptimes.driverid = results.driverid          AND laptimes.raceid = results.raceid          GROUP BY laptimes.raceid          HAVING AVG(laptimes.lap) > 50     )     AND (         SELECT seasons.year          FROM seasons          WHERE seasons.year BETWEEN 2000 AND 2005          AND seasons.year = (             SELECT races.year              FROM races              WHERE races.raceid = results.raceid         )     ) ) / (     SELECT COUNT(*)      FROM results      WHERE (         SELECT seasons.year          FROM seasons          WHERE seasons.year BETWEEN 2000 AND 2005          AND seasons.year = (             SELECT races.year              FROM races              WHERE
SELECT (     SELECT COUNT(*)      FROM (         SELECT r.raceid, d.driverid, d.dob, l.lap         FROM results AS r         JOIN drivers AS d ON r.driverid = d.driverid         JOIN laptimes AS l ON r.raceid = l.raceid AND r.driverid = l.driverid         WHERE strftime('%Y', d.dob) < 1985 AND r.year BETWEEN 2000 AND 2005 AND l.lap > 50     ) ) / (     SELECT COUNT(*)      FROM (         SELECT r.raceid, d.driverid, d.dob         FROM results AS r         JOIN drivers AS d ON r.driverid = d.driverid         WHERE strftime('%Y', d.dob) < 1985 AND r.year BETWEEN 2000 AND 2005     ) ) * 100 AS percentage
SELECT (     SELECT COUNT(*)      FROM results      WHERE (         SELECT drivers.dob          FROM drivers          WHERE drivers.driverid = results.driverid          AND strftime('%Y', drivers.dob) < 1985     )     AND (         SELECT laptimes.lap          FROM laptimes          WHERE laptimes.driverid = results.driverid          AND laptimes.raceid = results.raceid          AND laptimes.lap > 50     )     AND (         SELECT seasons.year          FROM seasons          WHERE seasons.year BETWEEN 2000 AND 2005          AND seasons.year = (             SELECT races.year              FROM races              WHERE races.raceid = results.raceid         )     ) ) / (     SELECT COUNT(*)      FROM drivers      WHERE strftime('%Y', drivers.dob) < 1985 ) * 100 AS percentage
SELECT (     SELECT COUNT(*)      FROM results      WHERE (         SELECT drivers.dob          FROM drivers          WHERE drivers.driverid = results.driverid          AND strftime('%Y', drivers.dob) < 1985     )      AND (         SELECT laptimes.lap          FROM laptimes          WHERE laptimes.driverid = results.driverid          AND laptimes.raceid = results.raceid          AND laptimes.lap > 50     ) ) / (     SELECT COUNT(*)      FROM results      WHERE (         SELECT seasons.year          FROM races          INNER JOIN seasons          ON seasons.year = races.year          WHERE races.raceid = results.raceid          AND seasons.year BETWEEN 2000 AND 2005     ) ) * 100 AS percentage
SELECT (     SELECT COUNT(*)      FROM results      WHERE (         SELECT drivers.dob          FROM drivers          WHERE drivers.driverid = results.driverid          AND strftime('%Y', drivers.dob) < 1985     )      AND (         SELECT laptimes.lap          FROM laptimes          WHERE laptimes.driverid = results.driverid          AND laptimes.raceid = results.raceid          GROUP BY laptimes.raceid          HAVING AVG(laptimes.lap) > 50     )     AND (         SELECT seasons.year          FROM seasons          WHERE seasons.year BETWEEN 2000 AND 2005          AND seasons.year = (             SELECT races.year              FROM races              WHERE races.raceid = results.raceid         )     ) ) / (     SELECT COUNT(*)      FROM results      WHERE (         SELECT seasons.year          FROM seasons          WHERE seasons.year BETWEEN 2000 AND 2005          AND seasons.year = (             SELECT races.year              FROM races              WHERE
SELECT (     SELECT COUNT(*)      FROM (         SELECT r.raceid, d.driverid, d.dob, l.lap         FROM results r         JOIN drivers d ON r.driverid = d.driverid         JOIN laptimes l ON r.raceid = l.raceid AND r.driverid = l.driverid         WHERE strftime('%Y', d.dob) < 1985 AND r.year BETWEEN 2000 AND 2005 AND l.lap > 50     ) ) / (     SELECT COUNT(*)      FROM (         SELECT r.raceid, d.driverid, d.dob         FROM results r         JOIN drivers d ON r.driverid = d.driverid         WHERE strftime('%Y', d.dob) < 1985 AND r.year BETWEEN 2000 AND 2005     ) ) * 100 AS percentage","SELECT (     SELECT COUNT(*)      FROM results      WHERE (         SELECT drivers.dob          FROM drivers          WHERE drivers.driverid = results.driverid          AND strftime('%Y', drivers.dob) < 1985     )      AND (         SELECT laptimes.lap          FROM laptimes          WHERE laptimes.driverid = results.driverid          AND laptimes.raceid = results.raceid          GROUP BY laptimes.raceid          HAVING AVG(laptimes.lap) > 50     )     AND (         SELECT seasons.year          FROM seasons          WHERE seasons.year BETWEEN 2000 AND 2005          AND seasons.year = (             SELECT races.year              FROM races              WHERE races.raceid = results.raceid         )     ) ) / (     SELECT COUNT(*)      FROM results      WHERE (         SELECT seasons.year          FROM seasons          WHERE seasons.year BETWEEN 2000 AND 2005          AND seasons.year = (             SELECT races.year              FROM races              WHERE"
212,1102,"For the players who had a 77 points overall rating on 2016/6/23, who was the oldest? Give the name of the player.",european_football_2,moderate,"SELECT t1.player_name FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE SUBSTR(t2.`date`, 1, 10) = '2016-06-23' AND t2.overall_rating = 77 ORDER BY t1.birthday ASC LIMIT 1",7,"SELECT player.player_name  FROM player  JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id  WHERE player_attributes.overall_rating = 77 AND player_attributes.date = '2016-06-23'  ORDER BY player.birthday ASC  LIMIT 1
SELECT player.player_name  FROM player  JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id  WHERE player_attributes.overall_rating = 77 AND player_attributes.date = '2016-06-23'  ORDER BY player.birthday ASC  LIMIT 1
SELECT player.player_name  FROM player  JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id  WHERE player_attributes.overall_rating = 77 AND player_attributes.date = '2016-06-23'  ORDER BY player.birthday ASC  LIMIT 1
SELECT player.player_name  FROM player  JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id  WHERE player_attributes.overall_rating = 77 AND player_attributes.date = '2016-06-23'  ORDER BY player.birthday ASC  LIMIT 1
SELECT player.player_name  FROM player  INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id  WHERE player_attributes.overall_rating = 77 AND player_attributes.date = '2016-06-23'  ORDER BY player.birthday ASC  LIMIT 1
SELECT player.player_name  FROM player  JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id  WHERE player_attributes.overall_rating = 77 AND player_attributes.date = '2016-06-23'  ORDER BY player.birthday ASC  LIMIT 1
SELECT player.player_name  FROM player  JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id  WHERE player_attributes.overall_rating = 77 AND player_attributes.date = '2016-06-23'  ORDER BY player.birthday ASC  LIMIT 1",SELECT player.player_name  FROM player  JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id  WHERE player_attributes.overall_rating = 77 AND player_attributes.date = '2016-06-23'  ORDER BY player.birthday ASC  LIMIT 1
213,1025,Give the name of the league had the most goals in the 2016 season?,european_football_2,moderate,SELECT t2.name FROM Match AS t1 INNER JOIN League AS t2 ON t1.league_id = t2.id WHERE t1.season = '2015/2016' GROUP BY t2.name ORDER BY SUM(t1.home_team_goal + t1.away_team_goal) DESC LIMIT 1,7,"SELECT l.name FROM match AS m JOIN league AS l ON m.league_id = l.id WHERE m.season = '2016' GROUP BY l.name ORDER BY SUM(m.home_team_goal + m.away_team_goal) DESC LIMIT 1
SELECT l.name FROM match AS m JOIN league AS l ON m.league_id = l.id WHERE m.season = '2016' GROUP BY l.name ORDER BY SUM(m.home_team_goal + m.away_team_goal) DESC LIMIT 1
SELECT l.name FROM match AS m JOIN league AS l ON m.league_id = l.id WHERE m.season = '2016' GROUP BY l.name ORDER BY SUM(m.home_team_goal + m.away_team_goal) DESC LIMIT 1
SELECT l.name FROM match AS m JOIN league AS l ON m.league_id = l.id WHERE m.season = '2016' GROUP BY l.name ORDER BY SUM(m.home_team_goal + m.away_team_goal) DESC LIMIT 1
SELECT l.name FROM match AS m JOIN league AS l ON m.league_id = l.id WHERE m.season = '2016' GROUP BY l.name ORDER BY SUM(m.home_team_goal + m.away_team_goal) DESC LIMIT 1
SELECT l.name FROM match AS m JOIN league AS l ON m.league_id = l.id WHERE m.season = '2016' GROUP BY l.name ORDER BY SUM(m.home_team_goal + m.away_team_goal) DESC LIMIT 1
SELECT l.name FROM match AS m JOIN league AS l ON m.league_id = l.id WHERE m.season = '2016' GROUP BY l.name ORDER BY SUM(m.home_team_goal + m.away_team_goal) DESC LIMIT 1",SELECT l.name FROM match AS m JOIN league AS l ON m.league_id = l.id WHERE m.season = '2016' GROUP BY l.name ORDER BY SUM(m.home_team_goal + m.away_team_goal) DESC LIMIT 1
214,234,How many bonds which involved atom 12 does molecule TR009 have?,toxicology,moderate,SELECT COUNT(T2.bond_id) FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.molecule_id = 'TR009' AND T2.atom_id = T1.molecule_id || '_1' AND T2.atom_id2 = T1.molecule_id || '_2',7,"SELECT COUNT(*) FROM connected WHERE atom_id = 12 OR atom_id2 = 12
SELECT COUNT(*) FROM connected WHERE atom_id = 12 OR atom_id2 = 12
SELECT COUNT(*) FROM connected WHERE atom_id = 12 OR atom_id2 = 12
SELECT COUNT(*) FROM connected WHERE atom_id = 12 OR atom_id2 = 12
SELECT COUNT(*)  FROM connected  WHERE atom_id = 12 AND bond_id IN (SELECT bond_id FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR009'))
SELECT COUNT(*) FROM connected WHERE atom_id = 12 OR atom_id2 = 12
SELECT COUNT(*) FROM connected WHERE atom_id = 12 OR atom_id2 = 12",SELECT COUNT(*) FROM connected WHERE atom_id = 12 OR atom_id2 = 12
215,1460,"Write the full name of the member who spent money for water, veggie tray and supplies and include the cost of it.",student_club,challenging,"SELECT T2.first_name, T2.last_name, T1.cost FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.expense_description = 'Water, Veggie tray, supplies'",7,"SELECT member.first_name, member.last_name, SUM(expense.cost) as total_cost FROM member JOIN expense ON member.member_id = expense.link_to_member JOIN budget ON expense.link_to_budget = budget.budget_id WHERE budget.category IN ('water', 'veggie tray', 'supplies') GROUP BY member.member_id
SELECT member.first_name, member.last_name, SUM(expense.cost) as total_cost FROM member JOIN expense ON member.member_id = expense.link_to_member JOIN budget ON expense.link_to_budget = budget.budget_id WHERE budget.category IN ('water', 'veggie tray', 'supplies') GROUP BY member.member_id
SELECT member.first_name, member.last_name, expense.cost FROM member JOIN expense ON member.member_id = expense.link_to_member JOIN budget ON expense.link_to_budget = budget.budget_id WHERE budget.category IN ('water', 'veggie tray', 'supplies')
SELECT member.first_name, member.last_name, SUM(expense.cost) as total_cost FROM member JOIN expense ON member.member_id = expense.link_to_member JOIN budget ON expense.link_to_budget = budget.budget_id WHERE budget.category IN ('water', 'veggie tray', 'supplies') GROUP BY member.member_id
SELECT member.first_name, member.last_name, SUM(expense.cost) as total_cost FROM member JOIN expense ON member.member_id = expense.link_to_member JOIN budget ON expense.link_to_budget = budget.budget_id WHERE budget.category IN ('water', 'veggie tray', 'supplies') GROUP BY member.member_id
SELECT member.first_name, member.last_name, SUM(expense.cost) as total_cost FROM member JOIN expense ON member.member_id = expense.link_to_member JOIN budget ON expense.link_to_budget = budget.budget_id WHERE budget.category IN ('water', 'veggie tray', 'supplies') GROUP BY member.member_id
SELECT member.first_name, member.last_name, SUM(expense.cost) as total_cost FROM member JOIN expense ON member.member_id = expense.link_to_member JOIN budget ON expense.link_to_budget = budget.budget_id WHERE budget.category IN ('water', 'veggie tray', 'supplies') GROUP BY member.member_id","SELECT member.first_name, member.last_name, SUM(expense.cost) as total_cost FROM member JOIN expense ON member.member_id = expense.link_to_member JOIN budget ON expense.link_to_budget = budget.budget_id WHERE budget.category IN ('water', 'veggie tray', 'supplies') GROUP BY member.member_id"
216,1258,How many patients with a normal Rhuematoid Factor has a positive measure of degree of coagulation?,thrombosis_prediction,moderate,SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T3.ID = T2.ID WHERE (T2.RA = '-' OR T2.RA = '+-') AND T3.KCT = '+',7,"SELECT COUNT(*) FROM patient  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.rf = 'normal' AND patient.diagnosis = 'positive'
SELECT COUNT(*) FROM patient  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.rf = 'normal' AND patient.diagnosis = 'positive'
SELECT COUNT(*) FROM patient  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.rf = 'normal' AND patient.diagnosis = 'positive'
SELECT COUNT(*) FROM patient  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.rf = 'normal' AND patient.diagnosis = 'positive'
SELECT COUNT(*) FROM patient  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.rf = 'normal' AND patient.diagnosis = 'positive'
SELECT COUNT(*) FROM patient  JOIN examination ON patient.id = examination.id  JOIN laboratory ON patient.id = laboratory.id  WHERE examination.diagnosis = 'Rheumatoid Factor Normal'  AND laboratory.rf > 0
SELECT COUNT(*) FROM patient  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.rf = 'normal' AND patient.diagnosis = 'positive'",SELECT COUNT(*) FROM patient  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.rf = 'normal' AND patient.diagnosis = 'positive'
217,1185,"For the patient who was born on 1959/2/18, what is the decrease rate for his/her total cholesterol from November to December in 1981?",thrombosis_prediction,challenging,SELECT CAST((SUM(CASE WHEN T2.Date LIKE '1981-11-%' THEN T2.`T-CHO` ELSE 0 END) - SUM(CASE WHEN T2.Date LIKE '1981-12-%' THEN T2.`T-CHO` ELSE 0 END)) AS REAL) / SUM(CASE WHEN T2.Date LIKE '1981-12-%' THEN T2.`T-CHO` ELSE 0 END) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday = '1959-02-18',7,"SELECT (laboratory.t_cho - (SELECT t_cho FROM laboratory WHERE date LIKE ""1981-11%"" AND patient_id = patient.id)) / (SELECT t_cho FROM laboratory WHERE date LIKE ""1981-12%"" AND patient_id = patient.id) as decrease_rate FROM patient JOIN laboratory ON patient.id = laboratory.patient_id WHERE patient.birthday = ""1959-2-18""
SELECT (laboratory.t_cho - (SELECT t_cho FROM laboratory WHERE date LIKE ""1981-11%"" AND patient_id = patient.id)) / (SELECT t_cho FROM laboratory WHERE date LIKE ""1981-12%"" AND patient_id = patient.id) as decrease_rate FROM patient JOIN laboratory ON patient.id = laboratory.patient_id WHERE patient.birthday = ""1959-2-18""
SELECT (laboratory.t_cho - (SELECT t_cho FROM laboratory WHERE date LIKE ""1981-11%"" AND patient_id = patient.id)) / (SELECT t_cho FROM laboratory WHERE date LIKE ""1981-12%"" AND patient_id = patient.id) as decrease_rate FROM patient JOIN laboratory ON patient.id = laboratory.patient_id WHERE patient.birthday = ""1959-2-18""
SELECT (laboratory.t_cho - (SELECT t_cho FROM laboratory WHERE date LIKE ""1981-11%"" AND patient_id = patient.id)) / (SELECT t_cho FROM laboratory WHERE date LIKE ""1981-12%"" AND patient_id = patient.id) AS decrease_rate FROM patient JOIN laboratory ON patient.id = laboratory.patient_id WHERE patient.birthday = ""1959-2-18""
SELECT (laboratory.t_cho - (SELECT t_cho FROM laboratory WHERE date LIKE ""1981-11%"" AND patient_id = patient.id)) / (SELECT t_cho FROM laboratory WHERE date LIKE ""1981-12%"" AND patient_id = patient.id) AS decrease_rate FROM patient JOIN laboratory ON patient.id = laboratory.patient_id WHERE patient.birthday = ""1959-2-18""
SELECT (laboratory.t_cho - (SELECT t_cho FROM laboratory WHERE date LIKE ""1981-11%"" AND patient_id = patient.id)) / (SELECT t_cho FROM laboratory WHERE date LIKE ""1981-12%"" AND patient_id = patient.id) as decrease_rate FROM patient JOIN laboratory ON patient.id = laboratory.patient_id WHERE patient.birthday = ""1959-2-18""
SELECT (laboratory.t_cho - (SELECT t_cho FROM laboratory WHERE date LIKE ""1981-11%"" AND patient_id = patient.id)) / (SELECT t_cho FROM laboratory WHERE date LIKE ""1981-12%"" AND patient_id = patient.id) AS decrease_rate FROM patient JOIN laboratory ON patient.id = laboratory.patient_id WHERE patient.birthday = ""1959-2-18""","SELECT (laboratory.t_cho - (SELECT t_cho FROM laboratory WHERE date LIKE ""1981-11%"" AND patient_id = patient.id)) / (SELECT t_cho FROM laboratory WHERE date LIKE ""1981-12%"" AND patient_id = patient.id) as decrease_rate FROM patient JOIN laboratory ON patient.id = laboratory.patient_id WHERE patient.birthday = ""1959-2-18"""
218,37,"What is the complete address of the school with the lowest excellence rate? Indicate the Street, City, Zip and State.",california_schools,moderate,"SELECT T2.Street, T2.City, T2.State, T2.Zip FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY CAST(T1.NumGE1500 AS REAL) / T1.NumTstTakr ASC LIMIT 1",7,"SELECT schools.street, schools.city, schools.zip, schools.state  FROM schools  JOIN satscores ON schools.cdscode = satscores.cds  WHERE satscores.avgscrwrite = (SELECT MIN(avgscrwrite) FROM satscores)  
SELECT schools.street, schools.city, schools.zip, schools.state  FROM schools  JOIN satscores ON schools.cdscode = satscores.cds  WHERE satscores.avgscrwrite = (SELECT MIN(avgscrwrite) FROM satscores)
SELECT schools.street, schools.city, schools.zip, schools.state  FROM schools  JOIN satscores ON schools.cdscode = satscores.cds  WHERE satscores.avgscrwrite = (SELECT MIN(avgscrwrite) FROM satscores) LIMIT 1
SELECT schools.street, schools.city, schools.zip, schools.state  FROM schools  JOIN satscores ON schools.cdscode = satscores.cds  WHERE satscores.avgscrwrite = (SELECT MIN(avgscrwrite) FROM satscores)  
SELECT schools.street, schools.city, schools.zip, schools.state  FROM schools  JOIN satscores ON schools.cdscode = satscores.cds  WHERE satscores.avgscrwrite = (SELECT MIN(avgscrwrite) FROM satscores)
SELECT schools.street, schools.city, schools.zip, schools.state  FROM schools  JOIN satscores ON schools.cdscode = satscores.cds  WHERE satscores.avgscrwrite = (SELECT MIN(avgscrwrite) FROM satscores) LIMIT 1
SELECT schools.street, schools.city, schools.zip, schools.state  FROM schools  JOIN satscores ON schools.cdscode = satscores.cds  WHERE satscores.avgscrwrite = (SELECT MIN(avgscrwrite) FROM satscores)","SELECT schools.street, schools.city, schools.zip, schools.state  FROM schools  JOIN satscores ON schools.cdscode = satscores.cds  WHERE satscores.avgscrwrite = (SELECT MIN(avgscrwrite) FROM satscores)"
219,285,Name chemical elements that form a bond TR001_10_11.,toxicology,challenging,SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR001_10_11',7,"SELECT DISTINCT element  FROM atom  INNER JOIN connected ON atom.atom_id = connected.atom_id  INNER JOIN bond ON connected.bond_id = bond.bond_id  INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id  WHERE molecule.label = 'TR001_10_11'
SELECT DISTINCT element  FROM chemical_elements  WHERE molecule_id IN (     SELECT molecule_id      FROM bond      WHERE bond_id IN (         SELECT bond_id          FROM connected          WHERE atom_id IN (             SELECT atom_id              FROM atom              WHERE atom_id = 'TR001_10_11'         )     ) )
SELECT DISTINCT element  FROM chemical_elements  WHERE molecule_id IN (     SELECT molecule_id      FROM bond      WHERE bond_id IN (         SELECT bond_id          FROM connected          WHERE atom_id IN (             SELECT atom_id              FROM atom              WHERE atom_id = 'TR001_10_11'         )     ) )
SELECT DISTINCT element  FROM chemical_elements  WHERE molecule_id IN (     SELECT molecule_id      FROM bond      WHERE bond_id IN (         SELECT bond_id          FROM connected          WHERE atom_id IN (             SELECT atom_id              FROM atom              WHERE atom_id = 'TR001_10_11'         )     ) )
SELECT DISTINCT element  FROM chemical_elements  WHERE molecule_id IN (     SELECT molecule_id      FROM bond      WHERE bond_id IN (         SELECT bond_id          FROM connected          WHERE atom_id IN (             SELECT atom_id              FROM atom              WHERE atom_id = 'TR001_10_11'         )     ) )
SELECT DISTINCT element  FROM chemical_elements  WHERE molecule_id IN (     SELECT molecule_id      FROM bond      WHERE bond_id IN (         SELECT bond_id          FROM connected          WHERE atom_id IN (             SELECT atom_id              FROM atom              WHERE atom_id = 'TR001_10_11'         )     ) )
SELECT DISTINCT element  FROM chemical_elements  WHERE molecule_id IN (     SELECT molecule_id      FROM bond      WHERE bond_id IN (         SELECT bond_id          FROM connected          WHERE atom_id IN (             SELECT atom_id              FROM atom              WHERE atom_id = 'TR001_10_11'         )     ) )",SELECT DISTINCT element  FROM chemical_elements  WHERE molecule_id IN (     SELECT molecule_id      FROM bond      WHERE bond_id IN (         SELECT bond_id          FROM connected          WHERE atom_id IN (             SELECT atom_id              FROM atom              WHERE atom_id = 'TR001_10_11'         )     ) )
220,302,Name the elements that comprise the atoms of bond TR001_2_4.,toxicology,challenging,SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_2_4',7,"SELECT atom.atom_id, atom.molecule_id, element.name  FROM atom  JOIN connected ON atom.atom_id = connected.atom_id  JOIN bond ON connected.bond_id = bond.bond_id  JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE bond.bond_id = 'TR001_2_4' 
SELECT atom.atom_id, atom.molecule_id, element.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE bond.bond_id = 'TR001_2_4'
SELECT atom.atom_id, atom.molecule_id, element.name  FROM atom  JOIN connected ON atom.atom_id = connected.atom_id  JOIN bond ON connected.bond_id = bond.bond_id  JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE bond.bond_id = 'TR001_2_4' 
SELECT atom.atom_id, atom.molecule_id, element.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE bond.bond_id = 'TR001_2_4'
SELECT atom.atom_id, atom.molecule_id, element.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE bond.bond_id = 'TR001_2_4'
SELECT atom.atom_id, atom.molecule_id, element.element  FROM atom  JOIN connected ON atom.atom_id = connected.atom_id  JOIN bond ON connected.bond_id = bond.bond_id  JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE bond.bond_id = 'TR001_2_4' 
SELECT atom.atom_id, atom.molecule_id, element.name  FROM atom  INNER JOIN connected ON atom.atom_id = connected.atom_id  INNER JOIN bond ON connected.bond_id = bond.bond_id  INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE bond.bond_id = 'TR001_2_4' ","SELECT atom.atom_id, atom.molecule_id, element.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE bond.bond_id = 'TR001_2_4'"
221,1514,What kind of currency did the customer paid at 16:25:00 in 2012/8/24?,debit_card_specializing,simple,SELECT DISTINCT T3.Currency FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN customers AS T3 ON T1.CustomerID = T3.CustomerID WHERE T1.Date = '2012-08-24' AND T1.Time = '16:25:00',7,"SELECT customers.currency  FROM transactions_1k  JOIN customers ON transactions_1k.customerid = customers.customerid  WHERE transactions_1k.date = '2012-8-24' AND transactions_1k.time = '16:25:00'
SELECT customers.currency  FROM transactions_1k  JOIN customers ON transactions_1k.customerid = customers.customerid  WHERE transactions_1k.date = '2012-8-24' AND transactions_1k.time = '16:25:00'
SELECT customers.currency  FROM transactions_1k  INNER JOIN customers ON transactions_1k.customerid = customers.customerid  WHERE transactions_1k.date = '2012-8-24' AND transactions_1k.time = '16:25:00'
SELECT customers.currency  FROM transactions_1k  INNER JOIN customers ON transactions_1k.customerid = customers.customerid  WHERE transactions_1k.date = '2012-8-24' AND transactions_1k.time = '16:25:00'
SELECT customers.currency  FROM transactions_1k  INNER JOIN customers ON transactions_1k.customerid = customers.customerid  WHERE transactions_1k.date = '2012-8-24' AND transactions_1k.time = '16:25:00'
SELECT customers.currency  FROM transactions_1k  INNER JOIN customers ON transactions_1k.customerid = customers.customerid  WHERE transactions_1k.date = '2012-8-24' AND transactions_1k.time = '16:25:00'
SELECT customers.currency  FROM transactions_1k  INNER JOIN customers ON transactions_1k.customerid = customers.customerid  WHERE transactions_1k.date = '2012-8-24' AND transactions_1k.time = '16:25:00'",SELECT customers.currency  FROM transactions_1k  INNER JOIN customers ON transactions_1k.customerid = customers.customerid  WHERE transactions_1k.date = '2012-8-24' AND transactions_1k.time = '16:25:00'
222,734,What is the publisher's name of Blue Beetle II?,superhero,simple,SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name = 'Blue Beetle II',7,"SELECT publisher_name  FROM publisher  INNER JOIN superhero ON publisher.id = superhero.publisher_id  WHERE superhero_name = 'Blue Beetle II'
SELECT publisher_name  FROM publisher  INNER JOIN superhero ON publisher.id = superhero.publisher_id  WHERE superhero_name = 'Blue Beetle II'
SELECT publisher_name  FROM publisher  INNER JOIN superhero ON publisher.id = superhero.publisher_id  WHERE superhero_name = 'Blue Beetle II'
SELECT publisher_name  FROM publisher  INNER JOIN superhero ON publisher.id = superhero.publisher_id  WHERE superhero_name = 'Blue Beetle II'
SELECT publisher_name FROM publisher JOIN superhero ON publisher.id = superhero.publisher_id WHERE superhero_name = 'Blue Beetle II'
SELECT publisher_name FROM publisher INNER JOIN superhero ON publisher.id = superhero.publisher_id WHERE superhero_name = 'Blue Beetle II'
SELECT publisher_name FROM publisher JOIN superhero ON publisher.id = superhero.publisher_id WHERE superhero_name = 'Blue Beetle II'",SELECT publisher_name  FROM publisher  INNER JOIN superhero ON publisher.id = superhero.publisher_id  WHERE superhero_name = 'Blue Beetle II'
223,1260,Please list the ID of the patient whose RF is normal and who is older than 60.,thrombosis_prediction,simple,"SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RF < 20 AND STRFTIME('%Y', DATE('now')) - STRFTIME('%Y', T1.Birthday) > 60",7,"SELECT patient.id  FROM patient  JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.rf = 'normal'  AND DATE(NOW()) - DATE(patient.birthday) > 60
SELECT patient.id  FROM patient  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.rf = 'normal'  AND DATE(NOW()) - DATE(patient.birthday) > 60
SELECT patient.id  FROM patient  JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.rf = 'normal'  AND DATE(NOW()) - DATE(patient.birthday) > 60
SELECT patient.id  FROM patient  JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.rf = 'normal'  AND DATE(NOW()) - DATE(patient.birthday) > 60
SELECT patient.id  FROM patient  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.rf = 'normal'  AND (date('now') - patient.birthday) / 365 > 60
SELECT patient.id  FROM patient  JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.rf = 'normal'  AND DATE(NOW()) - DATE(patient.birthday) > 60
SELECT patient.id  FROM patient  JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.rf = 'normal'  AND DATE(NOW()) - DATE(patient.birthday) > 60",SELECT patient.id  FROM patient  JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.rf = 'normal'  AND DATE(NOW()) - DATE(patient.birthday) > 60
224,282,What is the ratio of Hydrogen elements in molecule ID TR006? List the ratio with its label.,toxicology,challenging,"WITH SubQuery AS (SELECT DISTINCT T1.atom_id, T1.element, T1.molecule_id, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR006') SELECT CAST(COUNT(CASE WHEN element = 'h' THEN atom_id ELSE NULL END) AS REAL) / (CASE WHEN COUNT(atom_id) = 0 THEN NULL ELSE COUNT(atom_id) END) AS ratio, label FROM SubQuery GROUP BY label",7,"SELECT      (SELECT COUNT(*) FROM atom WHERE element = 'Hydrogen' AND molecule_id = 'TR006') AS atom_count,     (SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR006') AS total_atoms,     CAST((SELECT COUNT(*) FROM atom WHERE element = 'Hydrogen' AND molecule_id = 'TR006') AS FLOAT) / CAST((SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR006') AS FLOAT) AS ratio
SELECT      (SELECT COUNT(*) FROM atom WHERE element = 'Hydrogen' AND molecule_id = 'TR006') AS atom_count,     (SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR006') AS total_atoms,     CAST((SELECT COUNT(*) FROM atom WHERE element = 'Hydrogen' AND molecule_id = 'TR006') AS FLOAT) / CAST((SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR006') AS FLOAT) AS ratio
SELECT      (SELECT COUNT(*) FROM atom WHERE element = 'Hydrogen' AND molecule_id = 'TR006') AS atom_count,     (SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR006') AS total_atoms,     CAST((SELECT COUNT(*) FROM atom WHERE element = 'Hydrogen' AND molecule_id = 'TR006') AS FLOAT) / CAST((SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR006') AS FLOAT) AS ratio
SELECT      (SELECT COUNT(*) FROM atom WHERE element = 'Hydrogen' AND molecule_id = 'TR006') AS 'atom_count',     (SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR006') AS 'total_atoms' FROM      atom WHERE      molecule_id = 'TR006'
SELECT      (SELECT COUNT(*) FROM atom WHERE element = 'Hydrogen' AND molecule_id = 'TR006') AS atom_count,     (SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR006') AS total_atoms,     CAST((SELECT COUNT(*) FROM atom WHERE element = 'Hydrogen' AND molecule_id = 'TR006') AS FLOAT) / CAST((SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR006') AS FLOAT) AS ratio
SELECT      (SELECT COUNT(*) FROM atom WHERE element = 'Hydrogen' AND molecule_id = 'TR006') AS atom_count,     (SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR006') AS total_atoms,     CAST((SELECT COUNT(*) FROM atom WHERE element = 'Hydrogen' AND molecule_id = 'TR006') AS FLOAT) / CAST((SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR006') AS FLOAT) AS ratio
SELECT      (SELECT COUNT(*) FROM atom WHERE element = 'Hydrogen' AND molecule_id = 'TR006') AS atom_count,     (SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR006') AS total_atoms,     CAST((SELECT COUNT(*) FROM atom WHERE element = 'Hydrogen' AND molecule_id = 'TR006') AS FLOAT) / CAST((SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR006') AS FLOAT) AS ratio","SELECT      (SELECT COUNT(*) FROM atom WHERE element = 'Hydrogen' AND molecule_id = 'TR006') AS atom_count,     (SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR006') AS total_atoms,     CAST((SELECT COUNT(*) FROM atom WHERE element = 'Hydrogen' AND molecule_id = 'TR006') AS FLOAT) / CAST((SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR006') AS FLOAT) AS ratio"
225,1401,Indicate the cost of posters for 'September Speaker' event.,student_club,moderate,SELECT T3.cost FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T1.event_name = 'September Speaker' AND T3.expense_description = 'Posters',7,"SELECT budget.spent FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'September Speaker' AND budget.category = 'posters'
SELECT budget.spent FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'September Speaker' AND budget.category = 'posters'
SELECT budget.spent FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'September Speaker' AND budget.category = 'posters'
SELECT budget.spent FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'September Speaker' AND budget.category = 'posters'
SELECT budget.spent FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'September Speaker' AND budget.category = 'posters'
SELECT budget.spent FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'September Speaker' AND budget.category = 'posters'
SELECT budget.spent FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'September Speaker' AND budget.category = 'posters'",SELECT budget.spent FROM budget INNER JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'September Speaker' AND budget.category = 'posters'
226,1433,Which countries have zip codes with post office boxes?,student_club,simple,SELECT DISTINCT county FROM zip_code WHERE type = 'PO Box' AND county IS NOT NULL,7,"SELECT DISTINCT zip_code.zip_code, zip_code.city, zip_code.state  FROM zip_code  JOIN member ON zip_code.zip_code = member.zip  WHERE zip_code.type = 'PO Box'
SELECT DISTINCT zip_code.zip_code, zip_code.city, zip_code.state FROM zip_code JOIN member ON zip_code.zip_code = member.zip JOIN event ON member.member_id = event.link_to_member JOIN expense ON member.member_id = expense.link_to_member JOIN budget ON event.event_id = budget.link_to_event JOIN attendance ON event.event_id = attendance.link_to_event WHERE zip_code.type = 'PO Box'
SELECT zip_code.zip_code, zip_code.city, zip_code.state FROM zip_code JOIN member ON zip_code.zip_code = member.zip JOIN event ON member.member_id = event.link_to_member JOIN expense ON member.member_id = expense.link_to_member JOIN budget ON event.event_id = budget.link_to_event JOIN attendance ON event.event_id = attendance.link_to_event JOIN major ON member.link_to_major = major.major_id WHERE zip_code.type = 'PO Box'
SELECT zip_code.zip_code, zip_code.city, zip_code.state FROM zip_code JOIN member ON zip_code.zip_code = member.zip JOIN event ON member.member_id = event.link_to_member JOIN attendance ON event.event_id = attendance.link_to_event JOIN expense ON member.member_id = expense.link_to_member JOIN budget ON event.event_id = budget.link_to_event WHERE zip_code.type = 'PO Box'
SELECT zip_code.zip_code, zip_code.city, zip_code.state FROM zip_code JOIN member ON zip_code.zip_code = member.zip JOIN event ON member.member_id = event.event_id WHERE zip_code.type = 'PO Box' AND event.type = 'post office box'
SELECT DISTINCT zip_code.zip_code, zip_code.city, zip_code.state FROM zip_code JOIN member ON zip_code.zip_code = member.zip JOIN event ON member.member_id = event.event_id JOIN attendance ON member.member_id = attendance.link_to_member AND event.event_id = attendance.link_to_event JOIN budget ON event.event_id = budget.link_to_event JOIN expense ON member.member_id = expense.link_to_member AND budget.budget_id = expense.link_to_budget JOIN income ON member.member_id = income.link_to_member WHERE zip_code.type = 'PO Box'
SELECT zip_code.zip_code, zip_code.city, zip_code.state FROM zip_code JOIN member ON zip_code.zip_code = member.zip JOIN event ON member.member_id = event.event_id WHERE zip_code.type = 'PO Box' AND event.type = 'post office box'","SELECT zip_code.zip_code, zip_code.city, zip_code.state FROM zip_code JOIN member ON zip_code.zip_code = member.zip JOIN event ON member.member_id = event.event_id WHERE zip_code.type = 'PO Box' AND event.type = 'post office box'"
227,334,What is the element with the atom ID of TR004_7 in molecule that is not carcinogenic?,toxicology,challenging,SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR004_7' AND T2.label = '-',7,"SELECT element.atom_id, element.molecule_id, element.element FROM element INNER JOIN molecule ON element.molecule_id = molecule.molecule_id WHERE element.atom_id = 'TR004_7' AND molecule.label != 'carcinogenic'
SELECT element.atom_id, element.molecule_id, element.element  FROM element  INNER JOIN molecule ON element.molecule_id = molecule.molecule_id  WHERE element.atom_id = 'TR004_7' AND molecule.label != 'carcinogenic'
SELECT element.atom_id, element.molecule_id, element.element FROM element INNER JOIN molecule ON element.molecule_id = molecule.molecule_id WHERE element.atom_id = 'TR004_7' AND molecule.label != 'carcinogenic'
SELECT element.atom_id, element.molecule_id, element.element  FROM element  INNER JOIN molecule ON element.molecule_id = molecule.molecule_id  WHERE element.atom_id = 'TR004_7' AND molecule.label != 'carcinogenic'
SELECT element.atom_id, element.molecule_id, element.element  FROM element  INNER JOIN molecule ON element.molecule_id = molecule.molecule_id  WHERE element.atom_id = 'TR004_7' AND molecule.label != 'carcinogenic'
SELECT element.atom_id, element.molecule_id, element.element  FROM element  INNER JOIN molecule ON element.molecule_id = molecule.molecule_id  WHERE element.atom_id = 'TR004_7' AND molecule.label != 'carcinogenic'
SELECT element.atom_id, element.molecule_id, element.element FROM element INNER JOIN molecule ON element.molecule_id = molecule.molecule_id WHERE element.atom_id = 'TR004_7' AND molecule.label != 'carcinogenic'","SELECT element.atom_id, element.molecule_id, element.element  FROM element  INNER JOIN molecule ON element.molecule_id = molecule.molecule_id  WHERE element.atom_id = 'TR004_7' AND molecule.label != 'carcinogenic'"
228,158,What is the district Id of the account that placed the order with the id 33333?,financial,simple,SELECT T3.district_id FROM `order` AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.order_id = 33333,7,"SELECT account.district_id  FROM account  JOIN disp ON account.account_id = disp.account_id  JOIN order ON disp.account_id = order.account_id  WHERE order.order_id = 33333
SELECT account.district_id  FROM account  JOIN disp ON account.account_id = disp.account_id  JOIN order ON disp.account_id = order.account_id  WHERE order.order_id = 33333
SELECT account.district_id  FROM account  INNER JOIN disp ON account.account_id = disp.account_id  INNER JOIN order ON disp.account_id = order.account_id  WHERE order.order_id = 33333
SELECT account.district_id  FROM account  JOIN disp ON account.account_id = disp.account_id  JOIN order ON disp.account_id = order.account_id  WHERE order.order_id = 33333
SELECT account.district_id  FROM account  JOIN disp ON account.account_id = disp.account_id  JOIN order ON disp.account_id = order.account_id  WHERE order.order_id = 33333
SELECT account.district_id  FROM account  JOIN disp ON account.account_id = disp.account_id  JOIN order ON disp.account_id = order.account_id  WHERE order.order_id = 33333
SELECT account.district_id  FROM account  JOIN disp ON account.account_id = disp.account_id  JOIN order ON disp.account_id = order.account_id  WHERE order.order_id = 33333",SELECT account.district_id  FROM account  JOIN disp ON account.account_id = disp.account_id  JOIN order ON disp.account_id = order.account_id  WHERE order.order_id = 33333
229,220,Please list top three elements of the toxicology of the molecule TR000 in alphabetical order.,toxicology,challenging,SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR000' ORDER BY T.element LIMIT 3,7,"SELECT a.element  FROM atom a  WHERE a.molecule_id = 'TR000'  ORDER BY a.element ASC  LIMIT 3
SELECT a.element  FROM atom a  WHERE a.molecule_id = 'TR000'  ORDER BY a.element ASC  LIMIT 3
SELECT a.element  FROM atom a  WHERE a.molecule_id = 'TR000'  ORDER BY a.element ASC  LIMIT 3
SELECT a.element  FROM atom a  WHERE a.molecule_id = 'TR000'  ORDER BY a.element ASC  LIMIT 3
SELECT a.element  FROM atom a  WHERE a.molecule_id = 'TR000'  ORDER BY a.element ASC  LIMIT 3
SELECT a.element  FROM atom a  WHERE a.molecule_id = 'TR000'  ORDER BY a.element ASC  LIMIT 3
SELECT a.element  FROM atom a  WHERE a.molecule_id = 'TR000'  ORDER BY a.element ASC  LIMIT 3",SELECT a.element  FROM atom a  WHERE a.molecule_id = 'TR000'  ORDER BY a.element ASC  LIMIT 3
230,1247,"Among the male patients who have a normal level of white blood cells, how many of them have an abnormal fibrinogen level?",thrombosis_prediction,challenging,SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.FG <= 150 OR T2.FG >= 450 AND T2.WBC > 3.5 AND T2.WBC < 9.0 AND T1.SEX = 'M',7,"SELECT COUNT(*) FROM patient  JOIN examination ON patient.id = examination.id  JOIN laboratory ON patient.id = laboratory.id  WHERE patient.sex = 'male'  AND examination.wbc = 'normal'  AND laboratory.fg = 'abnormal'
SELECT COUNT(*) FROM patient  JOIN examination ON patient.id = examination.id  JOIN laboratory ON patient.id = laboratory.id  WHERE patient.sex = 'male'  AND examination.wbc = 'normal'  AND laboratory.fg = 'abnormal'
SELECT COUNT(*) FROM patient  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE patient.sex = 'male'  AND laboratory.wbc >= 4.0 AND laboratory.wbc <= 10.0  AND (laboratory.fg < 1.4 OR laboratory.fg > 2.0)
SELECT COUNT(*) FROM patient  JOIN examination ON patient.id = examination.id  JOIN laboratory ON patient.id = laboratory.id  WHERE patient.sex = 'male'  AND examination.wbc = 'normal'  AND laboratory.fg = 'abnormal'
SELECT COUNT(*) FROM patient  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE patient.sex = 'male'  AND laboratory.wbc >= 4.0 AND laboratory.wbc <= 10.0  AND (laboratory.fg < 1.0 OR laboratory.fg > 10.0)
SELECT COUNT(*) FROM patient  JOIN examination ON patient.id = examination.id  JOIN laboratory ON patient.id = laboratory.id  WHERE patient.sex = 'male'  AND examination.wbc = 'normal'  AND laboratory.fg = 'abnormal'
SELECT COUNT(*) FROM patient  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE patient.sex = 'male'  AND laboratory.wbc >= 4.0 AND laboratory.wbc <= 10.0  AND (laboratory.fg < 1.4 OR laboratory.fg > 2.0)",SELECT COUNT(*) FROM patient  JOIN examination ON patient.id = examination.id  JOIN laboratory ON patient.id = laboratory.id  WHERE patient.sex = 'male'  AND examination.wbc = 'normal'  AND laboratory.fg = 'abnormal'
231,149,"Please list the account types that are not eligible for loans, and the average income of residents in the district where the account is located exceeds $8000 but is no more than $9000.",financial,challenging,SELECT T3.type FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T2.account_id = T3.account_id WHERE T3.type != 'OWNER' AND T1.A11 BETWEEN 8000 AND 9000,7,"SELECT DISTINCT a.type FROM card AS a INNER JOIN disp AS b ON a.disp_id = b.disp_id INNER JOIN account AS c ON b.account_id = c.account_id INNER JOIN district AS d ON c.district_id = d.district_id WHERE a.type NOT IN ('JUNIOR') AND d.a4 > 8000 AND d.a4 <= 9000
SELECT DISTINCT a.type FROM card AS a INNER JOIN disp AS b ON a.disp_id = b.disp_id INNER JOIN account AS c ON b.account_id = c.account_id INNER JOIN district AS d ON c.district_id = d.district_id WHERE a.type NOT IN (     SELECT DISTINCT type FROM card WHERE type LIKE '%loan%' ) AND d.a4 > 8000 AND d.a4 <= 9000
SELECT DISTINCT a.type  FROM card AS a  JOIN disp AS b ON a.disp_id = b.disp_id  JOIN account AS c ON b.account_id = c.account_id  JOIN district AS d ON c.district_id = d.district_id  WHERE d.a4 > 8000 AND d.a4 <= 9000 AND a.type NOT IN (SELECT type FROM card WHERE type = 'LOAN')
SELECT DISTINCT a.type FROM card AS a INNER JOIN disp AS b ON a.disp_id = b.disp_id INNER JOIN account AS c ON b.account_id = c.account_id INNER JOIN district AS d ON c.district_id = d.district_id WHERE a.type NOT IN (     SELECT DISTINCT type FROM card WHERE type LIKE '%loan%' ) AND d.a4 > 8000 AND d.a4 <= 9000
SELECT DISTINCT a.type  FROM card AS a  INNER JOIN disp AS b ON a.disp_id = b.disp_id  INNER JOIN account AS c ON b.account_id = c.account_id  INNER JOIN district AS d ON c.district_id = d.district_id  WHERE d.a4 > 8000 AND d.a4 <= 9000 AND a.type NOT IN (SELECT type FROM card WHERE loan_id IS NOT NULL)
SELECT DISTINCT a.type AS account_type FROM disp AS d JOIN account AS a ON d.account_id = a.account_id JOIN district AS di ON a.district_id = di.district_id WHERE di.a4 > 8000 AND di.a4 <= 9000 AND a.type NOT IN (     SELECT DISTINCT la.type     FROM loan AS l     JOIN account AS la ON l.account_id = la.account_id )
SELECT DISTINCT a.type  FROM card AS a  JOIN disp AS b ON a.disp_id = b.disp_id  JOIN account AS c ON b.account_id = c.account_id  JOIN district AS d ON c.district_id = d.district_id  WHERE d.a4 > 8000 AND d.a4 <= 9000 AND a.type NOT IN (SELECT type FROM card WHERE type = 'LOAN')",SELECT DISTINCT a.type FROM card AS a INNER JOIN disp AS b ON a.disp_id = b.disp_id INNER JOIN account AS c ON b.account_id = c.account_id INNER JOIN district AS d ON c.district_id = d.district_id WHERE a.type NOT IN (     SELECT DISTINCT type FROM card WHERE type LIKE '%loan%' ) AND d.a4 > 8000 AND d.a4 <= 9000
232,62,What is the total number of non-chartered schools in the county of Los Angeles with a percent (%) of eligible free meals for grades 1 through 12 that is less than 0.18%?,california_schools,challenging,SELECT COUNT(T2.School) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'Los Angeles' AND T2.Charter = 0 AND CAST(T1.`Free Meal Count (K-12)` AS REAL) * 100 / T1.`Enrollment (K-12)` < 0.18,7,"SELECT COUNT(*)  FROM schools  JOIN frpm ON schools.cdscode = frpm.cdscode  JOIN satscores ON schools.cdscode = satscores.cds  WHERE schools.county = 'Los Angeles'  AND schools.charter = 'n'  AND frpm.`percent (%) eligible free (k-12)` < 0.18
SELECT COUNT(*)  FROM schools  JOIN frpm ON schools.cdscode = frpm.cdscode  JOIN satscores ON schools.cdscode = satscores.cds  WHERE schools.county = 'Los Angeles'  AND schools.charter = 'n'  AND frpm.`percent (%) eligible free (k-12)` < 0.18
SELECT COUNT(*)  FROM schools  JOIN frpm ON schools.cdscode = frpm.cdscode  JOIN satscores ON schools.cdscode = satscores.cds  WHERE schools.county = 'Los Angeles'  AND schools.charter = 'n'  AND frpm.`percent (%) eligible free (k-12)` < 0.18
SELECT COUNT(*)  FROM schools  JOIN frpm ON schools.cdscode = frpm.cdscode  JOIN satscores ON schools.cdscode = satscores.cds  WHERE schools.county = 'Los Angeles'  AND schools.charter = 'n'  AND frpm.`percent (%) eligible free (k-12)` < 0.18
SELECT COUNT(*)  FROM schools  JOIN frpm ON schools.cdscode = frpm.cdscode  JOIN satscores ON schools.cdscode = satscores.cds  WHERE schools.county = 'Los Angeles'  AND schools.charter = 'n'  AND frpm.`percent (%) eligible free (k-12)` < 0.18
SELECT COUNT(*)  FROM schools  JOIN frpm ON schools.cdscode = frpm.cdscode  JOIN satscores ON schools.cdscode = satscores.cds  WHERE schools.county = 'Los Angeles'  AND schools.charter = 'n'  AND frpm.`percent (%) eligible free (k-12)` < 0.18
SELECT COUNT(*)  FROM schools  JOIN frpm ON schools.cdscode = frpm.cdscode  JOIN satscores ON schools.cdscode = satscores.cds  WHERE schools.county = 'Los Angeles'  AND schools.charter = 'n'  AND frpm.`percent (%) eligible free (k-12)` < 0.18",SELECT COUNT(*)  FROM schools  JOIN frpm ON schools.cdscode = frpm.cdscode  JOIN satscores ON schools.cdscode = satscores.cds  WHERE schools.county = 'Los Angeles'  AND schools.charter = 'n'  AND frpm.`percent (%) eligible free (k-12)` < 0.18
233,1257,"Among the patients whose creatinine level is abnormal, how many of them aren't 70 yet?",thrombosis_prediction,challenging,"SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE >= 1.5 AND STRFTIME('%Y', Date('now')) - STRFTIME('%Y', T1.Birthday) < 70",7,"SELECT COUNT(*) FROM patient  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.cre <> 'normal' AND DATEDIFF('year', patient.birthday, CURDATE()) <> 70
SELECT COUNT(*) FROM patient  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.cre <> 'normal' AND DATEDIFF('year', patient.birthday, CURDATE()) <> 70
SELECT COUNT(*) FROM patient  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.cre <> 'normal' AND DATEDIFF('year', patient.birthday, CURDATE()) <> 70
SELECT COUNT(*) FROM patient  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.cre <> 'normal' AND DATEDIFF('year', patient.birthday, CURDATE()) <> 70
SELECT COUNT(*) FROM patient  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.cre <> 'normal' AND DATE_PART('year', AGE(NOW(), patient.birthday)) <> 70
SELECT COUNT(*) FROM patient  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.cre <> 'normal' AND DATE_PART('year', AGE(NOW(), patient.birthday)) <> 70
SELECT COUNT(*) FROM patient  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.cre <> 'normal' AND DATE_PART('year', AGE(NOW(), patient.birthday)) <> 70","SELECT COUNT(*) FROM patient  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.cre <> 'normal' AND DATEDIFF('year', patient.birthday, CURDATE()) <> 70"
234,743,What is the percentage of superheroes who act in their own self-interest or make decisions based on their own moral code? Indicate how many of the said superheroes were published by Marvel Comics.,superhero,challenging,"SELECT (CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM superhero)), CAST(SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS REAL) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN alignment AS T3 ON T3.id = T1.alignment_id WHERE T3.alignment = 'Bad'",7,"SELECT      (SELECT COUNT(*)       FROM superhero       WHERE alignment_id = (SELECT id FROM alignment WHERE alignment_name = 'good')       AND id IN (SELECT hero_id FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'self-interest')       OR hero_id IN (SELECT hero_id FROM hero_power WHERE power_id = (SELECT id FROM superpower WHERE power_name = 'moral code')))      ) * 100.0 /      (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS percentage
SELECT      (SELECT COUNT(*)       FROM superhero       WHERE alignment_id = (SELECT id FROM alignment WHERE alignment_name = 'good')       AND id IN (SELECT hero_id FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'self-interest')                  OR hero_id IN (SELECT hero_id FROM hero_power WHERE power_id IN (SELECT id FROM superpower WHERE power_name = 'moral code')))     ) * 100.0 /      (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS percentage
SELECT      (SELECT COUNT(*)       FROM superhero       WHERE alignment_id = (SELECT id FROM alignment WHERE alignment_name = 'good')       AND id IN (SELECT hero_id FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'self-interest')       OR hero_id IN (SELECT hero_id FROM hero_power WHERE power_id IN (SELECT id FROM superpower WHERE power_name = 'makes decisions based on own moral code')))      ) * 100.0 /      (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS percentage
SELECT COUNT(CASE WHEN alignment.alignment = 'good' AND (hero_attribute.attribute_name = 'self-interest' OR hero_attribute.attribute_name = 'moral code') AND publisher.publisher_name = 'Marvel Comics' THEN 1 END) * 100.0 / COUNT(*) AS percentage,        COUNT(CASE WHEN publisher.publisher_name = 'Marvel Comics' THEN 1 END) AS total_marvel_heroes FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN publisher ON superhero.publisher_id = publisher.id
SELECT      (SELECT COUNT(*)       FROM superhero       WHERE alignment_id = (SELECT id FROM alignment WHERE alignment_name = 'good')       AND id IN (SELECT hero_id FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'self-interest')       OR hero_id IN (SELECT hero_id FROM hero_power WHERE power_id = (SELECT id FROM superpower WHERE power_name = 'moral code')))      ) * 100.0 /      (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS percentage
SELECT      (SELECT COUNT(*) FROM superhero WHERE alignment_id = 1) * 100.0 /      (SELECT COUNT(*) FROM superhero) AS percentage,     (SELECT COUNT(*) FROM superhero       WHERE alignment_id = 1 AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS marvel_count
SELECT      (SELECT COUNT(*)       FROM superhero       WHERE alignment_id = (SELECT id FROM alignment WHERE alignment_name = 'good')       AND id IN (SELECT hero_id FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'self-interest')       OR hero_id IN (SELECT hero_id FROM hero_power WHERE power_id IN (SELECT id FROM superpower WHERE power_name = 'moral code')))      ) * 100.0 /      (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS percentage",SELECT      (SELECT COUNT(*)       FROM superhero       WHERE alignment_id = (SELECT id FROM alignment WHERE alignment_name = 'good')       AND id IN (SELECT hero_id FROM hero_attribute WHERE attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'self-interest')       OR hero_id IN (SELECT hero_id FROM hero_power WHERE power_id = (SELECT id FROM superpower WHERE power_name = 'moral code')))      ) * 100.0 /      (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS percentage
235,310,"How many molecules have a double bond type and among these molecule, how many are labeled as carcinogenic compound?",toxicology,moderate,"SELECT COUNT(DISTINCT T2.molecule_id), SUM(CASE WHEN T2.label = '+' THEN 1 ELSE 0 END) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '='",7,"SELECT COUNT(molecule.molecule_id) as total_double_bond_molecules,         SUM(CASE WHEN molecule.label = 'carcinogenic' THEN 1 ELSE 0 END) as carcinogenic_double_bond_molecules FROM molecule INNER JOIN bond ON molecule.molecule_id = bond.molecule_id WHERE bond.bond_type = 'double'
SELECT      COUNT(molecule.molecule_id) AS total_double_bond_molecules,      SUM(CASE WHEN molecule.label = 'carcinogenic' THEN 1 ELSE 0 END) AS carcinogenic_double_bond_molecules FROM      molecule INNER JOIN      bond ON molecule.molecule_id = bond.molecule_id WHERE      bond.bond_type = 'double'
SELECT      COUNT(molecule.molecule_id) AS total_double_bond_molecules,      SUM(CASE WHEN molecule.label = 'carcinogenic' THEN 1 ELSE 0 END) AS carcinogenic_double_bond_molecules FROM      molecule INNER JOIN      bond ON molecule.molecule_id = bond.molecule_id WHERE      bond.bond_type = 'double'
SELECT COUNT(molecule.molecule_id) AS total_double_bond_molecules,         SUM(CASE WHEN molecule.label = 'carcinogenic' THEN 1 ELSE 0 END) AS carcinogenic_double_bond_molecules FROM molecule INNER JOIN bond ON molecule.molecule_id = bond.molecule_id WHERE bond.bond_type = 'double'
SELECT COUNT(molecule.molecule_id) AS total_double_bond_molecules,         SUM(CASE WHEN molecule.label = 'carcinogenic' THEN 1 ELSE 0 END) AS carcinogenic_double_bond_molecules FROM molecule INNER JOIN bond ON molecule.molecule_id = bond.molecule_id WHERE bond.bond_type = 'double'
SELECT      COUNT(molecule.molecule_id) AS total_double_bond_molecules,      SUM(CASE WHEN molecule.label = 'carcinogenic' THEN 1 ELSE 0 END) AS carcinogenic_double_bond_molecules FROM      molecule INNER JOIN      bond ON molecule.molecule_id = bond.molecule_id WHERE      bond.bond_type = 'double'
SELECT COUNT(molecule.molecule_id) AS total_double_bond_molecules,         SUM(CASE WHEN molecule.label = 'carcinogenic' THEN 1 ELSE 0 END) AS carcinogenic_double_bond_molecules FROM molecule INNER JOIN bond ON molecule.molecule_id = bond.molecule_id WHERE bond.bond_type = 'double'","SELECT      COUNT(molecule.molecule_id) AS total_double_bond_molecules,      SUM(CASE WHEN molecule.label = 'carcinogenic' THEN 1 ELSE 0 END) AS carcinogenic_double_bond_molecules FROM      molecule INNER JOIN      bond ON molecule.molecule_id = bond.molecule_id WHERE      bond.bond_type = 'double'"
236,1111,"State the chance creation passing class for ""PEC Zwolle"" on 2013/9/20.",european_football_2,moderate,"SELECT t2.chanceCreationPassingClass FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t1.team_long_name = 'PEC Zwolle' AND SUBSTR(t2.`date`, 1, 10) = '2013-09-20'",7,"SELECT chancecreationpassingclass FROM team_attributes INNER JOIN team ON team_attributes.team_api_id = team.team_api_id WHERE team.team_long_name = ""PEC Zwolle"" AND team_attributes.date = ""2013-09-20""
SELECT chancecreationpassingclass FROM team_attributes INNER JOIN team ON team_attributes.team_api_id = team.team_api_id WHERE team.team_long_name = 'PEC Zwolle' AND team_attributes.date = '2013-09-20'
SELECT chancecreationpassingclass FROM team_attributes INNER JOIN team ON team_attributes.team_api_id = team.team_api_id WHERE team.team_long_name = 'PEC Zwolle' AND team_attributes.date = '2013-09-20'
SELECT chancecreationpassingclass FROM team_attributes INNER JOIN team ON team_attributes.team_api_id = team.team_api_id WHERE team.team_long_name = 'PEC Zwolle' AND team_attributes.date = '2013-09-20'
SELECT chancecreationpassingclass FROM team_attributes INNER JOIN team ON team_attributes.team_api_id = team.team_api_id WHERE team.team_long_name = ""PEC Zwolle"" AND team_attributes.date = ""2013-09-20""
SELECT chancecreationpassingclass FROM team_attributes INNER JOIN team ON team_attributes.team_api_id = team.team_api_id WHERE team.team_long_name = 'PEC Zwolle' AND team_attributes.date = '2013-09-20'
SELECT chancecreationpassingclass FROM team_attributes INNER JOIN team ON team_attributes.team_api_id = team.team_api_id WHERE team.team_long_name = 'PEC Zwolle' AND team_attributes.date = '2013-09-20'",SELECT chancecreationpassingclass FROM team_attributes INNER JOIN team ON team_attributes.team_api_id = team.team_api_id WHERE team.team_long_name = 'PEC Zwolle' AND team_attributes.date = '2013-09-20'
237,735,How many superheroes with blonde hair are there?,superhero,simple,SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.hair_colour_id = T2.id WHERE T2.colour = 'Blond',7,"SELECT COUNT(*) FROM superhero INNER JOIN colour ON superhero.hair_colour_id = colour.id WHERE colour.colour_name = 'Blonde'
SELECT COUNT(*) FROM superhero INNER JOIN colour ON superhero.hair_colour_id = colour.id WHERE colour.colour_name = 'Blonde' AND superhero.alignment_id = (SELECT id FROM alignment WHERE alignment_name = 'Hero')
SELECT COUNT(*) FROM superhero INNER JOIN colour ON superhero.hair_colour_id = colour.id WHERE colour.colour_name = 'Blonde'
SELECT COUNT(*) FROM superhero INNER JOIN colour ON superhero.hair_colour_id = colour.id WHERE colour.colour_name = 'Blonde'
SELECT COUNT(*) FROM superhero INNER JOIN colour ON superhero.hair_colour_id = colour.id WHERE colour.colour_name = 'Blonde'
SELECT COUNT(*) FROM superhero INNER JOIN colour ON superhero.hair_colour_id = colour.id WHERE colour.colour_name = 'Blonde'
SELECT COUNT(*) FROM superhero INNER JOIN colour ON superhero.hair_colour_id = colour.id WHERE colour.colour_name = 'Blonde'",SELECT COUNT(*) FROM superhero INNER JOIN colour ON superhero.hair_colour_id = colour.id WHERE colour.colour_name = 'Blonde'
238,337,List the element and bond type included in the molecule with molecule ID of TR002.,toxicology,challenging,"SELECT DISTINCT T1.element, T2.bond_type FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR002'",7,"SELECT atom.atom_id, atom.element, bond.bond_type FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR002')
SELECT atom.atom_id, atom.element, bond.bond_type FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR002')
SELECT atom.atom_id, atom.element, bond.bond_type FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR002')
SELECT atom.atom_id, atom.element, bond.bond_type FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR002')
SELECT atom.atom_id, atom.element, bond.bond_type  FROM atom  JOIN connected ON atom.atom_id = connected.atom_id  JOIN bond ON connected.bond_id = bond.bond_id  WHERE atom.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR002')
SELECT atom.atom_id, atom.element, bond.bond_type FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR002')
SELECT atom.atom_id, atom.element, bond.bond_type FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR002')","SELECT atom.atom_id, atom.element, bond.bond_type FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR002')"
239,958,Which driver has the fastest lap time? Please give their forenames and surnames.,formula_1,moderate,"SELECT T2.forename, T2.surname, T1.fastestLapTime FROM results AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId WHERE T1.fastestLapTime IS NOT NULL ORDER BY T1.fastestLapTime ASC LIMIT 1",7,"SELECT drivers.forename, drivers.surname FROM drivers JOIN laptimes ON drivers.driverid = laptimes.driverid WHERE laptimes.time = (SELECT MIN(time) FROM laptimes) LIMIT 1
SELECT drivers.forename, drivers.surname FROM drivers JOIN laptimes ON drivers.driverid = laptimes.driverid WHERE laptimes.time = (SELECT MIN(time) FROM laptimes) LIMIT 1
SELECT drivers.forename, drivers.surname FROM drivers JOIN laptimes ON drivers.driverid = laptimes.driverid WHERE laptimes.time = (SELECT MIN(time) FROM laptimes) LIMIT 1
SELECT drivers.forename, drivers.surname FROM drivers JOIN laptimes ON drivers.driverid = laptimes.driverid WHERE laptimes.time = (SELECT MIN(time) FROM laptimes) LIMIT 1
SELECT drivers.forename, drivers.surname FROM drivers JOIN laptimes ON drivers.driverid = laptimes.driverid WHERE laptimes.time = (SELECT MIN(time) FROM laptimes) LIMIT 1
SELECT drivers.forename, drivers.surname FROM drivers JOIN laptimes ON drivers.driverid = laptimes.driverid WHERE laptimes.time = (SELECT MIN(time) FROM laptimes) LIMIT 1
SELECT drivers.forename, drivers.surname FROM drivers JOIN laptimes ON drivers.driverid = laptimes.driverid WHERE laptimes.time = (SELECT MIN(time) FROM laptimes) LIMIT 1","SELECT drivers.forename, drivers.surname FROM drivers JOIN laptimes ON drivers.driverid = laptimes.driverid WHERE laptimes.time = (SELECT MIN(time) FROM laptimes) LIMIT 1"
240,255,What proportion of single bonds are carcinogenic? Please provide your answer as a percentage with five decimal places.,toxicology,moderate,"SELECT ROUND(CAST(COUNT(CASE WHEN T2.label = '+' THEN T1.bond_id ELSE NULL END) AS REAL) * 100 / COUNT(T1.bond_id),5) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-'",7,"SELECT ROUND(     (SELECT COUNT(*) FROM bond WHERE bond_type = 'single' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'carcinogenic')) * 100.0 /     (SELECT COUNT(*) FROM bond WHERE bond_type = 'single'), 5 ) AS proportion
SELECT ROUND(     (SELECT COUNT(*) FROM bond WHERE bond_type = 'single' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'carcinogenic')) * 100.0 /     (SELECT COUNT(*) FROM bond WHERE bond_type = 'single'), 5 ) AS proportion
SELECT ROUND(     (SELECT COUNT(*) FROM bond WHERE bond_type = 'single' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'carcinogenic')) * 100.0 /     (SELECT COUNT(*) FROM bond WHERE bond_type = 'single'), 5 ) AS proportion
SELECT ROUND(     (SELECT COUNT(*) FROM bond WHERE bond_type = 'single' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'carcinogenic')) * 100.0 /     (SELECT COUNT(*) FROM bond WHERE bond_type = 'single'), 5 ) AS proportion
SELECT ROUND(     (SELECT COUNT(*) FROM bond WHERE bond_type = 'single' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'carcinogenic')) * 100.0 /     (SELECT COUNT(*) FROM bond WHERE bond_type = 'single'), 5 ) AS proportion
SELECT ROUND(     (SELECT COUNT(*) FROM bond WHERE bond_type = 'single' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'carcinogenic')) * 100.0 /     (SELECT COUNT(*) FROM bond WHERE bond_type = 'single'), 5 ) AS proportion
SELECT ROUND(     (SELECT COUNT(*) FROM bond WHERE bond_type = 'single' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'carcinogenic')) * 100.0 /     (SELECT COUNT(*) FROM bond WHERE bond_type = 'single'), 5 ) AS proportion","SELECT ROUND(     (SELECT COUNT(*) FROM bond WHERE bond_type = 'single' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'carcinogenic')) * 100.0 /     (SELECT COUNT(*) FROM bond WHERE bond_type = 'single'), 5 ) AS proportion"
241,169,What was the growth rate of the total amount of loans across all accounts for a male client between 1996 and 1997?,financial,challenging,"SELECT CAST((SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1997' THEN T1.amount ELSE 0 END) - SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1996' THEN T1.amount ELSE 0 END)) AS REAL) * 100 / SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1996' THEN T1.amount ELSE 0 END) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN disp AS T3 ON T3.account_id = T2.account_id INNER JOIN client AS T4 ON T4.client_id = T3.client_id WHERE T4.gender = 'M' AND T3.type = 'OWNER'",7,"SELECT (SUM(CASE WHEN strftime('%Y', date, 'unixepoch') = '1997' THEN amount ELSE 0 END) - SUM(CASE WHEN strftime('%Y', date, 'unixepoch') = '1996' THEN amount ELSE 0 END)) / SUM(CASE WHEN strftime('%Y', date, 'unixepoch') = '1996' THEN amount ELSE 0 END) * 100 AS growth_rate FROM loan INNER JOIN account ON loan.account_id = account.account_id INNER JOIN disp ON account.account_id = disp.account_id INNER JOIN client ON disp.client_id = client.client_id WHERE client.gender = 'Male' AND (strftime('%Y', date, 'unixepoch') = '1996' OR strftime('%Y', date, 'unixepoch') = '1997')
SELECT (SUM(CASE WHEN strftime('%Y', date, 'unixepoch') = '1997' THEN amount ELSE 0 END) - SUM(CASE WHEN strftime('%Y', date, 'unixepoch') = '1996' THEN amount ELSE 0 END)) / SUM(CASE WHEN strftime('%Y', date, 'unixepoch') = '1996' THEN amount ELSE 0 END) * 100 AS growth_rate FROM loan INNER JOIN account ON loan.account_id = account.account_id INNER JOIN disp ON account.account_id = disp.account_id INNER JOIN client ON disp.client_id = client.client_id WHERE client.gender = 'Male'
SELECT (SUM(l1.amount) - SUM(l2.amount)) / SUM(l2.amount) AS growth_rate FROM loan AS l1 JOIN account AS a ON l1.account_id = a.account_id JOIN disp AS d ON a.account_id = d.account_id JOIN client AS c ON d.client_id = c.client_id JOIN loan AS l2 ON l1.account_id = l2.account_id WHERE c.gender = 'Male' AND l1.date BETWEEN '1996-01-01' AND '1997-12-31' AND l2.date BETWEEN '1996-01-01' AND '1997-12-31' AND l1.date > l2.date
SELECT (SUM(CASE WHEN strftime('%Y', date, 'unixepoch') = '1997' THEN amount ELSE 0 END) - SUM(CASE WHEN strftime('%Y', date, 'unixepoch') = '1996' THEN amount ELSE 0 END)) / SUM(CASE WHEN strftime('%Y', date, 'unixepoch') = '1996' THEN amount ELSE 0 END) * 100 AS growth_rate FROM loan JOIN disp ON loan.account_id = disp.account_id JOIN client ON disp.client_id = client.client_id WHERE client.gender = 'Male'
SELECT (SUM(CASE WHEN strftime('%Y', date, 'unixepoch') = '1997' THEN amount ELSE 0 END) - SUM(CASE WHEN strftime('%Y', date, 'unixepoch') = '1996' THEN amount ELSE 0 END)) / SUM(CASE WHEN strftime('%Y', date, 'unixepoch') = '1996' THEN amount ELSE 0 END) * 100 AS growth_rate FROM loan INNER JOIN account ON loan.account_id = account.account_id INNER JOIN disp ON account.account_id = disp.account_id INNER JOIN client ON disp.client_id = client.client_id WHERE client.gender = 'Male'
SELECT (SUM(CASE WHEN strftime('%Y', date, 'unixepoch') = '1997' THEN amount ELSE 0 END) - SUM(CASE WHEN strftime('%Y', date, 'unixepoch') = '1996' THEN amount ELSE 0 END)) / SUM(CASE WHEN strftime('%Y', date, 'unixepoch') = '1996' THEN amount ELSE 0 END) * 100 AS growth_rate FROM loan INNER JOIN account ON loan.account_id = account.account_id INNER JOIN disp ON account.account_id = disp.account_id INNER JOIN client ON disp.client_id = client.client_id WHERE client.gender = 'Male'
SELECT (SUM(CASE WHEN strftime('%Y', date, 'unixepoch') = '1997' THEN amount ELSE 0 END) - SUM(CASE WHEN strftime('%Y', date, 'unixepoch') = '1996' THEN amount ELSE 0 END)) / SUM(CASE WHEN strftime('%Y', date, 'unixepoch') = '1996' THEN amount ELSE 0 END) * 100 AS growth_rate FROM loan INNER JOIN account ON loan.account_id = account.account_id INNER JOIN disp ON account.account_id = disp.account_id INNER JOIN client ON disp.client_id = client.client_id WHERE client.gender = 'Male' AND (strftime('%Y', date, 'unixepoch') = '1996' OR strftime('%Y', date, 'unixepoch') = '1997')","SELECT (SUM(CASE WHEN strftime('%Y', date, 'unixepoch') = '1997' THEN amount ELSE 0 END) - SUM(CASE WHEN strftime('%Y', date, 'unixepoch') = '1996' THEN amount ELSE 0 END)) / SUM(CASE WHEN strftime('%Y', date, 'unixepoch') = '1996' THEN amount ELSE 0 END) * 100 AS growth_rate FROM loan INNER JOIN account ON loan.account_id = account.account_id INNER JOIN disp ON account.account_id = disp.account_id INNER JOIN client ON disp.client_id = client.client_id WHERE client.gender = 'Male'"
242,263,What is the composition of element chlorine in percentage among the single bond molecules?,toxicology,challenging,"SELECT CAST(COUNT(CASE WHEN T.element = 'cl' THEN T.atom_id ELSE NULL END) AS REAL) * 100 / COUNT(T.atom_id) FROM ( SELECT T1.atom_id, T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type = '-' ) AS T",7,"SELECT      (SELECT          (SELECT COUNT(*)          FROM connected          WHERE atom_id IN              (SELECT atom_id              FROM atom              WHERE element = 'chlorine'              AND molecule_id = a.molecule_id)          AND bond_id IN              (SELECT bond_id              FROM bond              WHERE bond_type = 'single'              AND molecule_id = a.molecule_id)     ) /      (SELECT COUNT(*)      FROM connected      WHERE bond_id IN          (SELECT bond_id          FROM bond          WHERE bond_type = 'single'          AND molecule_id = a.molecule_id)     ) * 100 FROM      atom a WHERE      a.element = 'chlorine'
SELECT (SELECT COUNT(*) FROM atom WHERE element = 'chlorine') / (SELECT COUNT(*) FROM atom) * 100 AS percentage
SELECT      (SELECT          (SELECT COUNT(*)          FROM connected          INNER JOIN atom ON connected.atom_id = atom.atom_id          WHERE atom.element = 'chlorine'          AND connected.bond_id IN              (SELECT bond_id              FROM bond              WHERE bond_type = 'single')         ) /      (SELECT COUNT(*)      FROM connected      INNER JOIN bond ON connected.bond_id = bond.bond_id      WHERE bond_type = 'single')     * 100) AS percentage
SELECT      (SELECT          (SELECT COUNT(*)          FROM connected          INNER JOIN atom ON connected.atom_id = atom.atom_id          WHERE atom.element = 'chlorine'          AND connected.bond_id IN              (SELECT bond_id              FROM bond              WHERE bond_type = 'single')         ) * 100.0      /      (SELECT COUNT(*)      FROM connected      INNER JOIN bond ON connected.bond_id = bond.bond_id      WHERE bond_type = 'single')     ) AS percentage_chlorine
SELECT      (SELECT          (SELECT COUNT(*)          FROM connected          INNER JOIN atom ON connected.atom_id = atom.atom_id          WHERE atom.element = 'chlorine'          AND connected.bond_id IN              (SELECT bond_id              FROM bond              WHERE bond_type = 'single')         ) * 100.0      /      (SELECT COUNT(*)      FROM connected      INNER JOIN bond ON connected.bond_id = bond.bond_id      WHERE bond_type = 'single')     ) AS percentage_chlorine
SELECT (SELECT COUNT(*) FROM atom WHERE element = 'chlorine') / (SELECT COUNT(*) FROM atom) * 100 AS percentage
SELECT (SELECT COUNT(*) FROM atom WHERE element = 'chlorine') / (SELECT COUNT(*) FROM atom) * 100 AS percentage",SELECT (SELECT COUNT(*) FROM atom WHERE element = 'chlorine') / (SELECT COUNT(*) FROM atom) * 100 AS percentage
243,581,Who is the editor of the post titled 'Open source tools for visualizing multi-dimensional data?',codebase_community,moderate,SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Open source tools for visualizing multi-dimensional data?',7,"SELECT users.displayname  FROM users  JOIN posts ON users.id = posts.lasteditoruserid  WHERE posts.title = 'Open source tools for visualizing multi-dimensional data?'
SELECT users.displayname  FROM users  JOIN posts ON users.id = posts.lasteditoruserid  WHERE posts.title = 'Open source tools for visualizing multi-dimensional data?'badges : ['id', 'userid', 'name', 'date'] comments : ['id', 'postid', 'score', 'text', 'creationdate', 'userid', 'userdisplayname'] posthistory : ['id', 'posthistorytypeid', 'postid', 'revisionguid', 'creationdate', 'userid', 'text', 'comment', 'userdisplayname'] postlinks : ['id', 'creationdate', 'postid', 'relatedpostid', 'linktypeid'] posts : ['id', 'posttypeid', 'acceptedanswerid', 'creaiondate', 'score', 'viewcount', 'body', 'owneruserid', 'lasactivitydate', 'title', 'tags', 'answercount', 'commentcount', 'favoritecount', 'lasteditoruserid', 'lasteditdate', 'communityowneddate', 'parentid', 'closeddate', 'ownerdisplayname', 'lasteditordisplayname']
SELECT users.displayname  FROM posts  INNER JOIN users ON posts.lasteditoruserid = users.id  WHERE posts.title = 'Open source tools for visualizing multi-dimensional data?'badges : ['id', 'userid', 'name', 'date'] comments : ['id', 'postid', 'score', 'text', 'creationdate', 'userid', 'userdisplayname'] posthistory : ['id', 'posthistorytypeid', 'postid', 'revisionguid', 'creationdate', 'userid', 'text', 'comment', 'userdisplayname'] postlinks : ['id', 'creationdate', 'postid', 'relatedpostid', 'linktypeid'] posts : ['id', 'posttypeid', 'acceptedanswerid', 'creaiondate', 'score', 'viewcount', 'body', 'owneruserid', 'lasactivitydate', 'title', 'tags', 'answercount', 'commentcount', 'favoritecount', 'lasteditoruserid', 'lasteditdate', 'communityowneddate', 'parentid', 'closeddate', 'ownerdisplayname', 'lasteditordisplay
SELECT users.displayname  FROM users  INNER JOIN posts ON users.id = posts.lasteditoruserid  WHERE posts.title = 'Open source tools for visualizing multi-dimensional data?'badges : ['id', 'userid', 'name', 'date'] comments : ['id', 'postid', 'score', 'text', 'creationdate', 'userid', 'userdisplayname'] posthistory : ['id', 'posthistorytypeid', 'postid', 'revisionguid', 'creationdate', 'userid', 'text', 'comment', 'userdisplayname'] postlinks : ['id', 'creationdate', 'postid', 'relatedpostid', 'linktypeid'] posts : ['id', 'posttypeid', 'acceptedanswerid', 'creaiondate', 'score', 'viewcount', 'body', 'owneruserid', 'lasactivitydate', 'title', 'tags', 'answercount', 'commentcount', 'favoritecount', 'lasteditoruserid', 'lasteditdate', 'communityowneddate', 'parentid', 'closeddate', 'ownerdisplayname', 'lasteditordisplay
SELECT users.displayname  FROM users  JOIN posts ON users.id = posts.lasteditoruserid  WHERE posts.title = 'Open source tools for visualizing multi-dimensional data?'badges : ['id', 'userid', 'name', 'date'] comments : ['id', 'postid', 'score', 'text', 'creationdate', 'userid', 'userdisplayname'] posthistory : ['id', 'posthistorytypeid', 'postid', 'revisionguid', 'creationdate', 'userid', 'text', 'comment', 'userdisplayname'] postlinks : ['id', 'creationdate', 'postid', 'relatedpostid', 'linktypeid'] posts : ['id', 'posttypeid', 'acceptedanswerid', 'creaiondate', 'score', 'viewcount', 'body', 'owneruserid', 'lasactivitydate', 'title', 'tags', 'answercount', 'commentcount', 'favoritecount', 'lasteditoruserid', 'lasteditdate', 'communityowneddate', 'parentid', 'closeddate', 'ownerdisplayname', 'lasteditordisplayname']
SELECT users.displayname  FROM users  JOIN posts ON users.id = posts.lasteditoruserid  WHERE posts.title = 'Open source tools for visualizing multi-dimensional data?'badges : ['id', 'userid', 'name', 'date'] comments : ['id', 'postid', 'score', 'text', 'creationdate', 'userid', 'userdisplayname'] posthistory : ['id', 'posthistorytypeid', 'postid', 'revisionguid', 'creationdate', 'userid', 'text', 'comment', 'userdisplayname'] postlinks : ['id', 'creationdate', 'postid', 'relatedpostid', 'linktypeid'] posts : ['id', 'posttypeid', 'acceptedanswerid', 'creaiondate', 'score', 'viewcount', 'body', 'owneruserid', 'lasactivitydate', 'title', 'tags', 'answercount', 'commentcount', 'favoritecount', 'lasteditoruserid', 'lasteditdate', 'communityowneddate', 'parentid', 'closeddate', 'ownerdisplayname', 'lasteditordisplayname']
SELECT users.displayname  FROM users  JOIN posts ON users.id = posts.lasteditoruserid  WHERE posts.title = 'Open source tools for visualizing multi-dimensional data?'badges : ['id', 'userid', 'name', 'date'] comments : ['id', 'postid', 'score', 'text', 'creationdate', 'userid', 'userdisplayname'] posthistory : ['id', 'posthistorytypeid', 'postid', 'revisionguid', 'creationdate', 'userid', 'text', 'comment', 'userdisplayname'] postlinks : ['id', 'creationdate', 'postid', 'relatedpostid', 'linktypeid'] posts : ['id', 'posttypeid', 'acceptedanswerid', 'creaiondate', 'score', 'viewcount', 'body', 'owneruserid', 'lasactivitydate', 'title', 'tags', 'answercount', 'commentcount', 'favoritecount', 'lasteditoruserid', 'lasteditdate', 'communityowneddate', 'parentid', 'closeddate', 'ownerdisplayname', 'lasteditordisplayname']","SELECT users.displayname  FROM users  JOIN posts ON users.id = posts.lasteditoruserid  WHERE posts.title = 'Open source tools for visualizing multi-dimensional data?'badges : ['id', 'userid', 'name', 'date'] comments : ['id', 'postid', 'score', 'text', 'creationdate', 'userid', 'userdisplayname'] posthistory : ['id', 'posthistorytypeid', 'postid', 'revisionguid', 'creationdate', 'userid', 'text', 'comment', 'userdisplayname'] postlinks : ['id', 'creationdate', 'postid', 'relatedpostid', 'linktypeid'] posts : ['id', 'posttypeid', 'acceptedanswerid', 'creaiondate', 'score', 'viewcount', 'body', 'owneruserid', 'lasactivitydate', 'title', 'tags', 'answercount', 'commentcount', 'favoritecount', 'lasteditoruserid', 'lasteditdate', 'communityowneddate', 'parentid', 'closeddate', 'ownerdisplayname', 'lasteditordisplayname']"
244,486,What is the percentage of the cards with a converted mana cost of 7 in the set Coldsnap?,card_games,moderate,SELECT CAST(SUM(CASE WHEN T1.convertedManaCost = 7 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE T2.name = 'Coldsnap',7,"SELECT (SELECT COUNT(*) FROM cards WHERE convertedmanacost = 7 AND setcode = 'COLD') * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'COLD') AS percentage
SELECT (SELECT COUNT(*) FROM cards WHERE convertedmanacost = 7 AND setcode = 'COLD') * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'COLD') AS percentage
SELECT (SELECT COUNT(*) FROM cards WHERE convertedmanacost = 7 AND setcode = 'COLD') * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'COLD') AS percentage
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'COLD')) as percentage FROM cards WHERE convertedmanacost = 7
SELECT (SELECT COUNT(*) FROM cards WHERE convertedmanacost = 7 AND setcode = 'COLD') * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'COLD') AS percentage
SELECT (SELECT COUNT(*) FROM cards WHERE convertedmanacost = 7 AND setcode = 'COLD') * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'COLD') AS percentage
SELECT (SELECT COUNT(*) FROM cards WHERE convertedmanacost = 7 AND setcode = 'COLD') * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'COLD') AS percentage",SELECT (SELECT COUNT(*) FROM cards WHERE convertedmanacost = 7 AND setcode = 'COLD') * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'COLD') AS percentage
245,928,Which driver ranked the first in the Canadian Grand Prix in 2007? Please give his reference name.,formula_1,moderate,"SELECT T3.forename, T3.surname, T3.driverRef FROM races AS T1 INNER JOIN results AS T2 ON T2.raceId = T1.raceId INNER JOIN drivers AS T3 ON T3.driverId = T2.driverId WHERE T1.name = 'Canadian Grand Prix' AND T2.rank = 1 AND T1.year = 2007",7,"SELECT drivers.driverref FROM drivers INNER JOIN results ON drivers.driverid = results.driverid INNER JOIN races ON results.raceid = races.raceid WHERE races.name = ""Canadian Grand Prix"" AND races.year = 2007 AND results.position = 1
SELECT drivers.driverref FROM drivers INNER JOIN results ON drivers.driverid = results.driverid INNER JOIN races ON results.raceid = races.raceid WHERE races.name = ""Canadian Grand Prix"" AND races.year = 2007 AND results.position = 1
SELECT drivers.driverref FROM drivers INNER JOIN results ON drivers.driverid = results.driverid INNER JOIN races ON results.raceid = races.raceid WHERE races.name = ""Canadian Grand Prix"" AND races.year = 2007 AND results.position = 1
SELECT drivers.driverref FROM drivers INNER JOIN results ON drivers.driverid = results.driverid INNER JOIN races ON results.raceid = races.raceid WHERE races.name = ""Canadian Grand Prix"" AND races.year = 2007 AND results.position = 1
SELECT drivers.driverref FROM drivers INNER JOIN results ON drivers.driverid = results.driverid INNER JOIN races ON results.raceid = races.raceid WHERE races.name = ""Canadian Grand Prix"" AND races.year = 2007 AND results.position = 1
SELECT drivers.driverref FROM drivers JOIN results ON drivers.driverid = results.driverid JOIN races ON results.raceid = races.raceid WHERE races.name = ""Canadian Grand Prix"" AND races.year = 2007 AND results.position = 1
SELECT drivers.driverref FROM drivers INNER JOIN results ON drivers.driverid = results.driverid INNER JOIN races ON results.raceid = races.raceid WHERE races.name = ""Canadian Grand Prix"" AND races.year = 2007 AND results.position = 1","SELECT drivers.driverref FROM drivers INNER JOIN results ON drivers.driverid = results.driverid INNER JOIN races ON results.raceid = races.raceid WHERE races.name = ""Canadian Grand Prix"" AND races.year = 2007 AND results.position = 1"
246,1006,"Among all the lap records set on various circuits, what is the time for the fastest one?",formula_1,challenging,"SELECT time FROM lapTimes ORDER BY (CASE WHEN INSTR(time, ':') <> INSTR(SUBSTR(time, INSTR(time, ':') + 1), ':') + INSTR(time, ':') THEN CAST(SUBSTR(time, 1, INSTR(time, ':') - 1) AS REAL) * 3600 ELSE 0 END) + (CAST(SUBSTR(time, INSTR(time, ':') - 2 * (INSTR(time, ':') = INSTR(SUBSTR(time, INSTR(time, ':') + 1), ':') + INSTR(time, ':')), INSTR(time, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(time, INSTR(time, ':') + 1, INSTR(time, '.') - INSTR(time, ':') - 1) AS REAL)) + (CAST(SUBSTR(time, INSTR(time, '.') + 1) AS REAL) / 1000) ASC LIMIT 1",7,"SELECT MIN(time) FROM laptimes
SELECT MIN(time) FROM laptimes
SELECT MIN(time) FROM laptimes
SELECT MIN(time) FROM laptimes
SELECT MIN(time) FROM laptimes
SELECT MIN(time) FROM laptimes
SELECT MIN(time) FROM laptimes",SELECT MIN(time) FROM laptimes
247,1500,"Please list the product description of the products consumed in September, 2013.",debit_card_specializing,simple,SELECT T3.Description FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN products AS T3 ON T1.ProductID = T3.ProductID WHERE T2.Date = '201309',7,"SELECT products.description FROM transactions_1k JOIN products ON transactions_1k.productid = products.productid WHERE strftime('%Y-%m', transactions_1k.date) = '2013-09'
SELECT products.description FROM transactions_1k JOIN products ON transactions_1k.productid = products.productid WHERE strftime('%Y-%m', transactions_1k.date) = '2013-09'
SELECT products.description FROM transactions_1k INNER JOIN products ON transactions_1k.productid = products.productid WHERE strftime('%Y-%m', date) = '2013-09'
SELECT products.description  FROM transactions_1k  JOIN products ON transactions_1k.productid = products.productid  WHERE strftime('%Y-%m', transactions_1k.date) = '2013-09'
SELECT products.description  FROM transactions_1k  JOIN products ON transactions_1k.productid = products.productid  WHERE strftime('%Y-%m', transactions_1k.date) = '2013-09'
SELECT products.description FROM transactions_1k JOIN products ON transactions_1k.productid = products.productid WHERE strftime('%Y-%m', transactions_1k.date) = '2013-09'
SELECT products.description FROM transactions_1k JOIN products ON transactions_1k.productid = products.productid WHERE strftime('%Y-%m', transactions_1k.date) = '2013-09'","SELECT products.description FROM transactions_1k JOIN products ON transactions_1k.productid = products.productid WHERE strftime('%Y-%m', transactions_1k.date) = '2013-09'"
248,1295,"Among the patients whose total bilirubin is over the normal range, how many of them have a peripheral pattern observed in the sheet of ANA examination?",thrombosis_prediction,challenging,SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.`T-BIL` >= 2 AND T3.`ANA Pattern` LIKE '%P%',7,"SELECT COUNT(*) FROM patient  INNER JOIN (SELECT * FROM laboratory WHERE t_bil > (SELECT avg(t_bil) + 2*stddev(t_bil) FROM laboratory)) AS lab_over_normal  ON patient.id = lab_over_normal.id  INNER JOIN (SELECT * FROM examination WHERE ana_pattern = 'peripheral') AS ana_exam  ON patient.id = ana_exam.id
SELECT COUNT(*) FROM patient  INNER JOIN laboratory ON patient.id = laboratory.id  INNER JOIN examination ON patient.id = examination.id  WHERE laboratory.t_bil > 'normal range' AND examination.ana_pattern = 'peripheral'
SELECT COUNT(*) FROM patient  INNER JOIN laboratory ON patient.id = laboratory.id  INNER JOIN examination ON patient.id = examination.id  WHERE laboratory.t_bil > 'normal range' AND examination.ana_pattern = 'peripheral'
SELECT COUNT(*) FROM patient  INNER JOIN (SELECT * FROM laboratory WHERE t_bil > (SELECT avg(t_bil) + 2*stddev(t_bil) FROM laboratory)) AS lab_over_normal  ON patient.id = lab_over_normal.id  INNER JOIN (SELECT * FROM examination WHERE ana_pattern = 'peripheral') AS ana_exam  ON patient.id = ana_exam.id
SELECT COUNT(*) FROM patient  INNER JOIN (SELECT * FROM laboratory WHERE t_bil > (SELECT avg(t_bil) + 2*stddev(t_bil) FROM laboratory)) AS lab_over_normal  ON patient.id = lab_over_normal.id  INNER JOIN (SELECT * FROM examination WHERE ana_pattern = 'peripheral') AS ana_exam  ON patient.id = ana_exam.id
SELECT COUNT(*) FROM patient  JOIN examination ON patient.id = examination.id  JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.t_bil > 'normal range' AND examination.ana_pattern = 'peripheral'
SELECT COUNT(*) FROM patient  INNER JOIN laboratory ON patient.id = laboratory.id  INNER JOIN examination ON patient.id = examination.id  WHERE laboratory.t_bil > 'normal range' AND examination.ana_pattern = 'peripheral'",SELECT COUNT(*) FROM patient  INNER JOIN (SELECT * FROM laboratory WHERE t_bil > (SELECT avg(t_bil) + 2*stddev(t_bil) FROM laboratory)) AS lab_over_normal  ON patient.id = lab_over_normal.id  INNER JOIN (SELECT * FROM examination WHERE ana_pattern = 'peripheral') AS ana_exam  ON patient.id = ana_exam.id
249,1211,Provide the ID and age of patient with lactate dehydrogenase (LDH) between 100-300 index above the normal range.,thrombosis_prediction,moderate,"SELECT DISTINCT T1.ID, STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.LDH > 600 AND T2.LDH < 800",7,"SELECT patient.id, patient.age  FROM patient  JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.ldh > 100 AND laboratory.ldh < 300
SELECT patient.id, patient.age  FROM patient  JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.ldh > 100 AND laboratory.ldh < 300
SELECT patient.id, patient.age FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.ldh > 100 AND laboratory.ldh < 300
SELECT patient.id, patient.age FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.ldh > 100 AND laboratory.ldh < 300
SELECT patient.id, patient.age FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.ldh > 100 AND laboratory.ldh < 300
SELECT patient.id, patient.age FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.ldh > 100 AND laboratory.ldh < 300
SELECT patient.id, patient.age FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.ldh > 100 AND laboratory.ldh < 300","SELECT patient.id, patient.age FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.ldh > 100 AND laboratory.ldh < 300"
