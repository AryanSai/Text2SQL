Unnamed: 0,Qid,Question,Db_Id,Difficulty,Query Gold,Repeated,Query Generated,Most Frequent Query,Execution Accuracy
0,306,Which molecules have triple bonds and list all the elements they contain.,toxicology,challenging,"SELECT DISTINCT T1.molecule_id, T2.element FROM bond AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#'",7,"SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = 'triple' GROUP BY m.molecule_id
SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = 'triple'
SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = 'triple' GROUP BY m.molecule_id
SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = 'triple' GROUP BY m.molecule_id
SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = 'triple' GROUP BY m.molecule_id
SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = 'triple' GROUP BY m.molecule_id
SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = 'triple' GROUP BY m.molecule_id",SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = 'triple' GROUP BY m.molecule_id,0.0
1,1261,How many patients with a normal RF don't have thrombosis?,thrombosis_prediction,simple,SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RF < 20 AND T1.Thrombosis = 0,7,"SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.rf = 'normal' AND examination.thrombosis = 'no'
SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.rf = 'normal' AND examination.thrombosis = 'no'
SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.rf = 'normal' AND examination.thrombosis = 'no'
SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.rf = 'normal' AND examination.thrombosis = 'no'
SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.rf = 'normal' AND examination.thrombosis = 'no'
SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.rf = 'normal' AND examination.thrombosis = 'no'
SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.rf = 'normal' AND examination.thrombosis = 'no'",SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.rf = 'normal' AND examination.thrombosis = 'no',0.0
2,601,What is the score and the link type ID for post ID 395?,codebase_community,simple,"SELECT T1.Score, T2.LinkTypeId FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId WHERE T2.PostId = 395",7,"SELECT score, linktypeid FROM postlinks WHERE postid = 395
SELECT score, linktypeid FROM postlinks WHERE postid = 395
SELECT score, linktypeid FROM postlinks WHERE postid = 395
SELECT score, linktypeid FROM postlinks WHERE postid = 395
SELECT score, linktypeid FROM postlinks WHERE postid = 395
SELECT score, linktypeid FROM postlinks WHERE postid = 395
SELECT score, linktypeid FROM postlinks WHERE postid = 395","SELECT score, linktypeid FROM postlinks WHERE postid = 395",0.0
3,245,What is the average number of bonds the atoms with the element iodine have?,toxicology,moderate,SELECT CAST(COUNT(T2.bond_id) AS REAL) / COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element = 'i',7,"SELECT AVG(bond_count) FROM (     SELECT COUNT(b.bond_id) AS bond_count     FROM atom a     JOIN connected c ON a.atom_id = c.atom_id     JOIN bond b ON c.bond_id = b.bond_id     WHERE a.element = 'iodine'     GROUP BY a.atom_id )
SELECT AVG(bond_count) FROM (     SELECT COUNT(b.bond_id) AS bond_count     FROM atom a     JOIN connected c ON a.atom_id = c.atom_id     JOIN bond b ON c.bond_id = b.bond_id     WHERE a.element = 'iodine'     GROUP BY a.atom_id )
SELECT AVG(bond_count) FROM (     SELECT COUNT(b.bond_id) AS bond_count     FROM atom a     JOIN connected c ON a.atom_id = c.atom_id     JOIN bond b ON c.bond_id = b.bond_id     WHERE a.element = 'iodine'     GROUP BY a.atom_id )
SELECT AVG(bond_count) FROM (     SELECT COUNT(b.bond_id) AS bond_count     FROM atom a     JOIN connected c ON a.atom_id = c.atom_id     JOIN bond b ON c.bond_id = b.bond_id     WHERE a.element = 'iodine'     GROUP BY a.atom_id )
SELECT AVG(bond_count) FROM (   SELECT COUNT(b.bond_id) AS bond_count   FROM atom a   JOIN connected c ON a.atom_id = c.atom_id   JOIN bond b ON c.bond_id = b.bond_id   WHERE a.element = 'iodine'   GROUP BY a.atom_id )
SELECT AVG(bond_count) FROM (     SELECT COUNT(b.bond_id) AS bond_count     FROM atom a     JOIN connected c ON a.atom_id = c.atom_id     JOIN bond b ON c.bond_id = b.bond_id     WHERE a.element = 'iodine'     GROUP BY a.atom_id )
SELECT AVG(bond_count) FROM (   SELECT COUNT(b.bond_id) AS bond_count   FROM atom a   JOIN connected c ON a.atom_id = c.atom_id   JOIN bond b ON c.bond_id = b.bond_id   WHERE a.element = 'iodine'   GROUP BY a.atom_id )",SELECT AVG(bond_count) FROM (     SELECT COUNT(b.bond_id) AS bond_count     FROM atom a     JOIN connected c ON a.atom_id = c.atom_id     JOIN bond b ON c.bond_id = b.bond_id     WHERE a.element = 'iodine'     GROUP BY a.atom_id ),0.0
4,215,How many atoms with iodine and with sulfur type elements are there in single bond molecules?,toxicology,challenging,"SELECT COUNT(DISTINCT CASE WHEN T1.element = 'i' THEN T1.atom_id ELSE NULL END) AS iodine_nums , COUNT(DISTINCT CASE WHEN T1.element = 's' THEN T1.atom_id ELSE NULL END) AS sulfur_nums FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '-'",7,"SELECT COUNT(*) FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id JOIN connected ON atom.atom_id = connected.atom_id WHERE atom.element IN ('iodine', 'sulfur') AND bond.bond_type = 'single'
SELECT COUNT(*) FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id JOIN connected ON atom.atom_id = connected.atom_id WHERE atom.element IN ('iodine', 'sulfur') AND bond.bond_type = 'single'
SELECT COUNT(*) FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id JOIN connected ON atom.atom_id = connected.atom_id WHERE atom.element IN ('iodine', 'sulfur') AND bond.bond_type = 'single'
SELECT COUNT(*) FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.element IN ('iodine', 'sulfur') AND bond.bond_type = 'single' AND EXISTS (     SELECT 1     FROM atom AS atom2     JOIN connected AS connected2 ON atom2.atom_id = connected2.atom_id2     WHERE connected2.atom_id = atom.atom_id     AND atom2.element IN ('iodine', 'sulfur') )
SELECT COUNT(*) FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id JOIN connected ON atom.atom_id = connected.atom_id WHERE atom.element IN ('iodine', 'sulfur') AND bond.bond_type = 'single'
SELECT COUNT(*) FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id JOIN connected ON atom.atom_id = connected.atom_id WHERE atom.element IN ('iodine', 'sulfur') AND bond.bond_type = 'single' AND EXISTS (SELECT 1 FROM atom AS a2 WHERE a2.atom_id = connected.atom_id2 AND a2.element IN ('iodine', 'sulfur'))
SELECT COUNT(*) FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id JOIN connected ON atom.atom_id = connected.atom_id WHERE atom.element IN ('iodine', 'sulfur') AND bond.bond_type = 'single' AND EXISTS (     SELECT 1     FROM atom AS a2     JOIN connected AS c2 ON a2.atom_id = c2.atom_id2     WHERE c2.bond_id = bond.bond_id     AND a2.element IN ('iodine', 'sulfur') )","SELECT COUNT(*) FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id JOIN connected ON atom.atom_id = connected.atom_id WHERE atom.element IN ('iodine', 'sulfur') AND bond.bond_type = 'single'",0.0
5,1299,"Among the patients with the normal level of triglyceride, how many of them have other symptoms observed?",thrombosis_prediction,simple,SELECT COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG < 200 AND T1.Symptoms IS NOT NULL,7,"SELECT COUNT(*) FROM examination JOIN patient ON examination.id = patient.id JOIN laboratory ON examination.id = laboratory.id WHERE laboratory.tg = 'normal' AND examination.symptoms IS NOT NULL
SELECT COUNT(*) FROM examination JOIN patient ON examination.id = patient.id JOIN laboratory ON examination.id = laboratory.id WHERE laboratory.tg = 'normal' AND examination.symptoms IS NOT NULL
SELECT COUNT(*) FROM examination JOIN patient ON examination.id = patient.id JOIN laboratory ON examination.id = laboratory.id WHERE laboratory.tg = 'normal' AND examination.symptoms IS NOT NULL
SELECT COUNT(*) FROM examination JOIN patient ON examination.id = patient.id JOIN laboratory ON examination.id = laboratory.id WHERE laboratory.tg = 'normal' AND examination.symptoms IS NOT NULL
SELECT COUNT(*) FROM examination JOIN patient ON examination.id = patient.id JOIN laboratory ON examination.id = laboratory.id WHERE laboratory.tg = 'normal' AND examination.symptoms IS NOT NULL
SELECT COUNT(*) FROM examination JOIN patient ON examination.id = patient.id JOIN laboratory ON examination.id = laboratory.id WHERE laboratory.tg = 'normal' AND examination.symptoms IS NOT NULL
SELECT COUNT(*) FROM examination JOIN patient ON examination.id = patient.id JOIN laboratory ON examination.id = laboratory.id WHERE laboratory.tg = 'normal' AND examination.symptoms IS NOT NULL",SELECT COUNT(*) FROM examination JOIN patient ON examination.id = patient.id JOIN laboratory ON examination.id = laboratory.id WHERE laboratory.tg = 'normal' AND examination.symptoms IS NOT NULL,0.0
6,842,Calculate the average height of all neutral superheroes.,superhero,simple,SELECT AVG(T1.height_cm) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Neutral',7,"SELECT AVG(height_cm) FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'neutral'
SELECT AVG(height_cm) FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'neutral'
SELECT AVG(height_cm) FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'neutral'
SELECT AVG(height_cm) FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'neutral'
SELECT AVG(height_cm) FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'neutral'
SELECT AVG(height_cm) FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'neutral'
SELECT AVG(height_cm) FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'neutral'",SELECT AVG(height_cm) FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'neutral',0.0
7,1149,Are there more in-patient or outpatient who were male? What is the deviation in percentage?,thrombosis_prediction,moderate,SELECT CAST(SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN Admission = '-' THEN 1 ELSE 0 END) FROM Patient WHERE SEX = 'M',7,"NULL
NULL
NULL
SELECT COUNT(*) FROM patient WHERE admission = 'in-patient' AND sex = 'male') AS in_patient_male,     (SELECT COUNT(*) FROM patient WHERE admission = 'outpatient' AND sex = 'male') AS outpatient_male,     ABS((in_patient_male - outpatient_male) / ((in_patient_male + outpatient_male) / 2.0)) * 100 AS deviation_percentage
SELECT COUNT(*) FROM patient WHERE sex = 'male' AND admission = 'in-patient') AS in_patient_male,     (SELECT COUNT(*) FROM patient WHERE sex = 'male' AND admission = 'outpatient') AS outpatient_male,     ABS((in_patient_male - outpatient_male) / ((in_patient_male + outpatient_male) / 2.0)) * 100 AS deviation_percentage
NULL
NULL",,0.0
8,521,"Among the cards whose version of frame style is 1997, what is the status of the card illustrated by D. Alexander Gregory in legacy play format that has sensitive content or Wizards of the Coast?",card_games,challenging,SELECT DISTINCT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T2.uuid = T1.uuid WHERE T1.frameVersion = 1997 AND T1.hasContentWarning = 1 AND T1.artist = 'D. Alexander Gregory' AND T2.format = 'legacy',7,"SELECT status FROM cards JOIN legalities ON cards.id = legalities.id WHERE frameversion = '1997' AND artist = 'D. Alexander Gregory' AND format = 'legacy' AND (hascontentwarning = 1 OR artist = 'Wizards of the Coast')
SELECT status FROM cards JOIN legalities ON cards.id = legalities.id WHERE frameversion = '1997' AND artist = 'D. Alexander Gregory' AND format = 'legacy' AND (hascontentwarning = 1 OR artist = 'Wizards of the Coast')
SELECT status FROM cards JOIN legalities ON cards.id = legalities.id WHERE frameversion = '1997' AND artist = 'D. Alexander Gregory' AND format = 'legacy' AND (hascontentwarning = 1 OR artist = 'Wizards of the Coast')
SELECT status FROM cards JOIN legalities ON cards.id = legalities.id WHERE frameversion = '1997' AND artist = 'D. Alexander Gregory' AND format = 'legacy' AND (hascontentwarning = 1 OR artist = 'Wizards of the Coast')
SELECT status FROM cards JOIN legalities ON cards.id = legalities.id WHERE frameversion = '1997' AND artist = 'D. Alexander Gregory' AND format = 'legacy' AND (hascontentwarning = 1 OR artist = 'Wizards of the Coast')
SELECT status FROM cards JOIN legalities ON cards.id = legalities.id WHERE frameversion = '1997' AND artist = 'D. Alexander Gregory' AND format = 'legacy' AND (hascontentwarning = 1 OR artist = 'Wizards of the Coast')
SELECT status FROM cards JOIN legalities ON cards.id = legalities.id WHERE frameversion = '1997' AND artist = 'D. Alexander Gregory' AND format = 'legacy' AND (hascontentwarning = 1 OR artist = 'Wizards of the Coast')",SELECT status FROM cards JOIN legalities ON cards.id = legalities.id WHERE frameversion = '1997' AND artist = 'D. Alexander Gregory' AND format = 'legacy' AND (hascontentwarning = 1 OR artist = 'Wizards of the Coast'),0.0
9,1526,"For the customer who paid 634.8 in 2012/8/25, what was the consumption decrease rate from Year 2012 to 2013?",debit_card_specializing,challenging,"SELECT CAST(SUM(IIF(SUBSTR(Date, 1, 4) = '2012', Consumption, 0)) - SUM(IIF(SUBSTR(Date, 1, 4) = '2013', Consumption, 0)) AS FLOAT) / SUM(IIF(SUBSTR(Date, 1, 4) = '2012', Consumption, 0)) FROM yearmonth WHERE CustomerID = ( SELECT T1.CustomerID FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-25' AND T1.Price = 634.8 )",7,"SELECT ((SUM(consumption) FILTER (WHERE strftime('%Y', date) = '2012') - SUM(consumption) FILTER (WHERE strftime('%Y', date) = '2013')) / SUM(consumption) FILTER (WHERE strftime('%Y', date) = '2012')) AS consumption_decrease_rate FROM transactions_1k WHERE customerid = (SELECT customerid FROM transactions_1k WHERE amount = 634.8 AND date = '2012-08-25') AND strftime('%Y', date) IN ('2012', '2013')
SELECT ((SUM(consumption) FILTER (WHERE strftime('%Y', date) = '2012') - SUM(consumption) FILTER (WHERE strftime('%Y', date) = '2013')) / SUM(consumption) FILTER (WHERE strftime('%Y', date) = '2012')) AS consumption_decrease_rate FROM transactions_1k WHERE customerid = (SELECT customerid FROM transactions_1k WHERE amount = 634.8 AND date = '2012-08-25') GROUP BY customerid
SELECT ((SUM(consumption) FILTER (WHERE strftime('%Y', date) = '2012') - SUM(consumption) FILTER (WHERE strftime('%Y', date) = '2013')) / SUM(consumption) FILTER (WHERE strftime('%Y', date) = '2012')) AS consumption_decrease_rate FROM transactions_1k WHERE customerid = (SELECT customerid FROM transactions_1k WHERE amount = 634.8 AND date = '2012-08-25') GROUP BY customerid
SELECT ((SUM(consumption) FILTER (WHERE strftime('%Y', date) = '2012') - SUM(consumption) FILTER (WHERE strftime('%Y', date) = '2013')) / SUM(consumption) FILTER (WHERE strftime('%Y', date) = '2012')) AS consumption_decrease_rate FROM transactions_1k WHERE customerid = (SELECT customerid FROM transactions_1k WHERE amount = 634.8 AND date = '2012-08-25') GROUP BY customerid
SELECT ((SUM(consumption) FILTER (WHERE strftime('%Y', date) = '2012') - SUM(consumption) FILTER (WHERE strftime('%Y', date) = '2013')) / SUM(consumption) FILTER (WHERE strftime('%Y', date) = '2012')) AS consumption_decrease_rate FROM transactions_1k WHERE customerid = (SELECT customerid FROM transactions_1k WHERE amount = 634.8 AND date = '2012-08-25') GROUP BY customerid
SELECT ((SUM(consumption) FILTER (WHERE strftime('%Y', date) = '2012') - SUM(consumption) FILTER (WHERE strftime('%Y', date) = '2013')) / SUM(consumption) FILTER (WHERE strftime('%Y', date) = '2012')) AS consumption_decrease_rate FROM transactions_1k WHERE customerid = (SELECT customerid FROM transactions_1k WHERE amount = 634.8 AND date = '2012-08-25') GROUP BY customerid
SELECT ((SUM(consumption) FILTER (WHERE strftime('%Y', date) = '2012') - SUM(consumption) FILTER (WHERE strftime('%Y', date) = '2013')) / SUM(consumption) FILTER (WHERE strftime('%Y', date) = '2012')) AS consumption_decrease_rate FROM transactions_1k WHERE customerid = (SELECT customerid FROM transactions_1k WHERE amount = 634.8 AND date = '2012-08-25') GROUP BY customerid","SELECT ((SUM(consumption) FILTER (WHERE strftime('%Y', date) = '2012') - SUM(consumption) FILTER (WHERE strftime('%Y', date) = '2013')) / SUM(consumption) FILTER (WHERE strftime('%Y', date) = '2012')) AS consumption_decrease_rate FROM transactions_1k WHERE customerid = (SELECT customerid FROM transactions_1k WHERE amount = 634.8 AND date = '2012-08-25') GROUP BY customerid",0.0
10,776,Provide the hero name and race of Charles Chandler.,superhero,simple,"SELECT T1.superhero_name, T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.full_name = 'Charles Chandler'",7,"SELECT superhero.superhero_name, race.race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.full_name = 'Charles Chandler'
SELECT superhero.superhero_name, race.race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.full_name = 'Charles Chandler'
SELECT superhero.superhero_name, race.race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.full_name = 'Charles Chandler'
SELECT superhero.superhero_name, race.race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.full_name = 'Charles Chandler'
SELECT superhero.superhero_name, race.race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.full_name = 'Charles Chandler'
SELECT superhero.superhero_name, race.race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.full_name = 'Charles Chandler'
SELECT superhero.superhero_name, race.race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.full_name = 'Charles Chandler'","SELECT superhero.superhero_name, race.race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.full_name = 'Charles Chandler'",1.0
11,1114,What was the average overall rating for Marko Arnautovic from 2007/2/22 to 2016/4/21?,european_football_2,challenging,"SELECT CAST(SUM(t2.overall_rating) AS REAL) / COUNT(t2.id) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_fifa_api_id = t2.player_fifa_api_id WHERE t1.player_name = 'Marko Arnautovic' AND SUBSTR(t2.`date`, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21'",7,"SELECT AVG(overall_rating) FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name = 'Marko Arnautovic' AND player_attributes.date BETWEEN '2007-02-22' AND '2016-04-21'
SELECT AVG(overall_rating) FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name = 'Marko Arnautovic' AND player_attributes.date BETWEEN '2007-02-22' AND '2016-04-21'
SELECT AVG(overall_rating) FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name = 'Marko Arnautovic' AND player_attributes.date BETWEEN '2007-02-22' AND '2016-04-21'
SELECT AVG(overall_rating) FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name = 'Marko Arnautovic' AND player_attributes.date BETWEEN '2007-02-22' AND '2016-04-21'
SELECT AVG(overall_rating) FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name = 'Marko Arnautovic' AND player_attributes.date BETWEEN '2007-02-22' AND '2016-04-21'
SELECT AVG(overall_rating) FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name = 'Marko Arnautovic' AND player_attributes.date BETWEEN '2007-02-22' AND '2016-04-21'
SELECT AVG(overall_rating) FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name = 'Marko Arnautovic' AND player_attributes.date BETWEEN '2007-02-22' AND '2016-04-21'",SELECT AVG(overall_rating) FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name = 'Marko Arnautovic' AND player_attributes.date BETWEEN '2007-02-22' AND '2016-04-21',0.0
12,1403,Indicate the name of the closed event whose cost has exceeded the budget the most.,student_club,moderate,SELECT T2.event_name FROM budget AS T1 INNER JOIN event AS T2 ON T2.event_id = T1.link_to_event WHERE T1.event_status = 'Closed' AND T1.remaining < 0 ORDER BY T1.remaining LIMIT 1,7,"SELECT event_name, SUM(cost) - amount AS excess_cost FROM event JOIN budget ON event.event_id = budget.link_to_event JOIN expense ON budget.budget_id = expense.link_to_budget WHERE status = 'closed' GROUP BY event.event_id ORDER BY excess_cost DESC LIMIT 1
SELECT e.event_name FROM event e JOIN budget b ON e.event_id = b.link_to_event JOIN expense ex ON b.budget_id = ex.link_to_budget WHERE e.status = 'closed' GROUP BY e.event_id HAVING SUM(ex.cost) > b.amount ORDER BY SUM(ex.cost) - b.amount DESC LIMIT 1
SELECT e.event_name FROM event e JOIN budget b ON e.event_id = b.link_to_event JOIN expense ex ON b.budget_id = ex.link_to_budget WHERE e.status = 'closed' GROUP BY e.event_id HAVING SUM(ex.cost) > b.amount ORDER BY SUM(ex.cost) - b.amount DESC LIMIT 1
SELECT e.event_name FROM event e JOIN budget b ON e.event_id = b.link_to_event JOIN expense ex ON b.budget_id = ex.link_to_budget WHERE e.status = 'closed' GROUP BY e.event_id HAVING SUM(ex.cost) > b.amount ORDER BY SUM(ex.cost) - b.amount DESC LIMIT 1
SELECT e.event_name FROM event e JOIN budget b ON e.event_id = b.link_to_event JOIN expense ex ON b.budget_id = ex.link_to_budget WHERE e.status = 'closed' GROUP BY e.event_id HAVING SUM(ex.cost) > b.amount ORDER BY SUM(ex.cost) - b.amount DESC LIMIT 1
SELECT e.event_name FROM event e JOIN budget b ON e.event_id = b.link_to_event JOIN expense ex ON b.budget_id = ex.link_to_budget WHERE e.status = 'closed' GROUP BY e.event_id HAVING SUM(ex.cost) > b.amount ORDER BY SUM(ex.cost) - b.amount DESC LIMIT 1
SELECT e.event_name FROM event e JOIN budget b ON e.event_id = b.link_to_event JOIN expense ex ON b.budget_id = ex.link_to_budget WHERE e.status = 'closed' GROUP BY e.event_id HAVING SUM(ex.cost) > b.amount ORDER BY SUM(ex.cost) - b.amount DESC LIMIT 1",SELECT e.event_name FROM event e JOIN budget b ON e.event_id = b.link_to_event JOIN expense ex ON b.budget_id = ex.link_to_budget WHERE e.status = 'closed' GROUP BY e.event_id HAVING SUM(ex.cost) > b.amount ORDER BY SUM(ex.cost) - b.amount DESC LIMIT 1,0.0
13,733,How many gold-eyed superheroes did Marvel Comics publish?,superhero,moderate,SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN colour AS T3 ON T1.eye_colour_id = T3.id WHERE T2.publisher_name = 'Marvel Comics' AND T3.colour = 'Gold',7,"SELECT COUNT(*) FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE colour.colour = 'gold' AND publisher.publisher_name = 'Marvel Comics'
SELECT COUNT(*) FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE colour.colour = 'gold' AND publisher.publisher_name = 'Marvel Comics'
SELECT COUNT(*) FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE colour.colour = 'gold' AND publisher.publisher_name = 'Marvel Comics'
SELECT COUNT(*) FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE colour.colour = 'gold' AND publisher.publisher_name = 'Marvel Comics'
SELECT COUNT(*) FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE colour.colour = 'gold' AND publisher.publisher_name = 'Marvel Comics'
SELECT COUNT(*) FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE colour.colour = 'gold' AND publisher.publisher_name = 'Marvel Comics'
SELECT COUNT(*) FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE colour.colour = 'gold' AND publisher.publisher_name = 'Marvel Comics'",SELECT COUNT(*) FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE colour.colour = 'gold' AND publisher.publisher_name = 'Marvel Comics',0.0
14,298,Calculate the percentage of molecules containing carcinogenic compounds that element is hydrogen.,toxicology,moderate,SELECT CAST(COUNT(CASE WHEN T1.element = 'h' AND T2.label = '+' THEN T2.molecule_id ELSE NULL END) AS REAL) * 100 / COUNT(T2.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id,7,"SELECT COUNT(DISTINCT molecule_id) FROM atom)) AS percentage_carcinogenic FROM     atom a JOIN     connected c ON a.atom_id = c.atom_id JOIN     bond b ON c.bond_id = b.bond_id JOIN     molecule m ON a.molecule_id = m.molecule_id WHERE     a.element = 'hydrogen' AND m.label = 'carcinogenic'
SELECT COUNT(DISTINCT molecule_id) FROM atom)) AS percentage_carcinogenic FROM     atom a JOIN     connected c ON a.atom_id = c.atom_id JOIN     bond b ON c.bond_id = b.bond_id JOIN     molecule m ON a.molecule_id = m.molecule_id WHERE     a.element = 'hydrogen' AND m.label = 'carcinogenic'
SELECT COUNT(DISTINCT molecule_id) FROM atom)) AS percentage_carcinogenic FROM     atom a JOIN     connected c ON a.atom_id = c.atom_id JOIN     bond b ON c.bond_id = b.bond_id JOIN     molecule m ON a.molecule_id = m.molecule_id WHERE     a.element = 'hydrogen' AND m.label = 'carcinogenic'
SELECT COUNT(DISTINCT molecule_id) FROM atom)) AS percentage_carcinogenic FROM     atom a JOIN     connected c ON a.atom_id = c.atom_id JOIN     bond b ON c.bond_id = b.bond_id JOIN     molecule m ON a.molecule_id = m.molecule_id WHERE     a.element = 'hydrogen' AND m.label = 'carcinogenic'
SELECT COUNT(DISTINCT molecule_id) FROM atom)) AS percentage_carcinogenic FROM     atom a JOIN     connected c ON a.atom_id = c.atom_id JOIN     bond b ON c.bond_id = b.bond_id JOIN     molecule m ON a.molecule_id = m.molecule_id WHERE     a.element = 'hydrogen' AND m.label = 'carcinogenic'
SELECT COUNT(DISTINCT molecule_id) FROM atom)) AS percentage_carcinogenic FROM     atom a JOIN     connected c ON a.atom_id = c.atom_id JOIN     bond b ON c.bond_id = b.bond_id JOIN     molecule m ON a.molecule_id = m.molecule_id WHERE     a.element = 'hydrogen' AND m.label = 'carcinogenic'
SELECT COUNT(DISTINCT molecule_id) FROM atom)) AS percentage FROM     atom a JOIN     connected c ON a.atom_id = c.atom_id JOIN     bond b ON c.bond_id = b.bond_id JOIN     molecule m ON a.molecule_id = m.molecule_id WHERE     a.element = 'hydrogen' AND m.label = 'carcinogenic'",SELECT COUNT(DISTINCT molecule_id) FROM atom)) AS percentage_carcinogenic FROM     atom a JOIN     connected c ON a.atom_id = c.atom_id JOIN     bond b ON c.bond_id = b.bond_id JOIN     molecule m ON a.molecule_id = m.molecule_id WHERE     a.element = 'hydrogen' AND m.label = 'carcinogenic',0.0
15,268,What are the elements for bond id TR001_10_11?,toxicology,challenging,SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR001_10_11',7,"SELECT element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_id = 'TR001_10_11'
SELECT element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_id = 'TR001_10_11'
SELECT element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_id = 'TR001_10_11'
SELECT element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_id = 'TR001_10_11'
SELECT element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_id = 'TR001_10_11'
SELECT element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_id = 'TR001_10_11'
SELECT element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_id = 'TR001_10_11'",SELECT element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_id = 'TR001_10_11',1.0
16,1448,Find the name and date of events with expenses for pizza that were more than fifty dollars but less than a hundred dollars.,student_club,challenging,"SELECT T1.event_name, T1.event_date FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T3.expense_description = 'Pizza' AND T3.cost > 50 AND T3.cost < 100",7,"SELECT event.event_name, event.event_date FROM event JOIN budget ON event.event_id = budget.link_to_event JOIN expense ON budget.budget_id = expense.link_to_budget WHERE expense.expense_description LIKE '%pizza%' AND expense.cost > 50 AND expense.cost < 100
SELECT e.event_name, e.event_date FROM event e JOIN budget b ON e.event_id = b.link_to_event JOIN expense ex ON b.budget_id = ex.link_to_budget WHERE ex.expense_description LIKE '%pizza%' AND ex.cost > 50 AND ex.cost < 100
SELECT e.event_name, e.event_date FROM event e JOIN budget b ON e.event_id = b.link_to_event JOIN expense ex ON b.budget_id = ex.link_to_budget WHERE ex.expense_description LIKE '%pizza%' AND ex.cost > 50 AND ex.cost < 100
SELECT e.event_name, e.event_date FROM event e JOIN budget b ON e.event_id = b.link_to_event JOIN expense ex ON b.budget_id = ex.link_to_budget WHERE ex.expense_description LIKE '%pizza%' AND ex.cost > 50 AND ex.cost < 100
SELECT e.event_name, e.event_date FROM event e JOIN budget b ON e.event_id = b.link_to_event JOIN expense ex ON b.budget_id = ex.link_to_budget WHERE ex.expense_description LIKE '%pizza%' AND ex.cost > 50 AND ex.cost < 100
SELECT event.event_name, event.event_date FROM event JOIN budget ON event.event_id = budget.link_to_event JOIN expense ON budget.budget_id = expense.link_to_budget WHERE expense.expense_description = 'pizza' AND expense.cost > 50 AND expense.cost < 100
SELECT e.event_name, e.event_date FROM event e JOIN budget b ON e.event_id = b.link_to_event JOIN expense ex ON b.budget_id = ex.link_to_budget WHERE ex.expense_description LIKE '%pizza%' AND ex.cost > 50 AND ex.cost < 100","SELECT e.event_name, e.event_date FROM event e JOIN budget b ON e.event_id = b.link_to_event JOIN expense ex ON b.budget_id = ex.link_to_budget WHERE ex.expense_description LIKE '%pizza%' AND ex.cost > 50 AND ex.cost < 100",1.0
17,835,"Among all superheroes in Marvel Comics, identify the percentage of 'good' superheroes.",superhero,challenging,SELECT CAST(COUNT(CASE WHEN T3.alignment = 'Good' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T2.publisher_name = 'Marvel Comics',7,"SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero)) AS percentage_good_superheroes FROM superhero WHERE alignment_id IN (SELECT id FROM alignment WHERE alignment = 'good')
SELECT (COUNT(s.id) * 100.0 / (SELECT COUNT(*) FROM superhero)) AS percentage_good_superheroes FROM superhero s JOIN alignment a ON s.alignment_id = a.id WHERE a.alignment = 'good'
NULL
NULL
SELECT (COUNT(s.id) * 100.0 / (SELECT COUNT(*) FROM superhero)) AS percentage_good_superheroes FROM superhero s JOIN alignment a ON s.alignment_id = a.id WHERE a.alignment = 'good'
NULL
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero)) AS percentage_good_superheroes FROM superhero WHERE alignment_id IN (SELECT id FROM alignment WHERE alignment = 'good')",,0.0
18,773,"Which superhero has the same eyes, hair and skin colour? Indicate the publisher of the superhero.",superhero,challenging,"SELECT T1.superhero_name, T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.eye_colour_id = T1.hair_colour_id AND T1.eye_colour_id = T1.skin_colour_id",7,"SELECT publisher_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.eye_colour_id = superhero.hair_colour_id AND superhero.hair_colour_id = superhero.skin_colour_id
SELECT s.superhero_name, p.publisher_name FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE EXISTS (     SELECT 1     FROM superhero s2     WHERE s2.eye_colour_id = s.eye_colour_id     AND s2.hair_colour_id = s.hair_colour_id     AND s2.skin_colour_id = s.skin_colour_id     AND s2.id <> s.id )
SELECT s.superhero_name, p.publisher_name FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE EXISTS (     SELECT 1     FROM superhero s2     WHERE s2.eye_colour_id = s.eye_colour_id     AND s2.hair_colour_id = s.hair_colour_id     AND s2.skin_colour_id = s.skin_colour_id     AND s2.id <> s.id )
SELECT publisher_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.eye_colour_id = superhero.hair_colour_id AND superhero.hair_colour_id = superhero.skin_colour_id
SELECT publisher_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.eye_colour_id = superhero.hair_colour_id AND superhero.hair_colour_id = superhero.skin_colour_id
SELECT s.superhero_name, p.publisher_name FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE EXISTS (     SELECT 1     FROM superhero s2     WHERE s2.eye_colour_id = s.eye_colour_id     AND s2.hair_colour_id = s.hair_colour_id     AND s2.skin_colour_id = s.skin_colour_id     AND s2.id <> s.id )
SELECT publisher_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.eye_colour_id = superhero.hair_colour_id AND superhero.hair_colour_id = superhero.skin_colour_id",SELECT publisher_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.eye_colour_id = superhero.hair_colour_id AND superhero.hair_colour_id = superhero.skin_colour_id,0.0
19,498,"What's the French name of the set of cards with ""Tendo Ice Bridge"" is in?",card_games,moderate,SELECT T2.translation FROM cards AS T1 INNER JOIN set_translations AS T2 ON T2.setCode = T1.setCode WHERE T1.name = 'Tendo Ice Bridge' AND T2.language = 'French' AND T2.translation IS NOT NULL,7,"SELECT translation FROM set_translations WHERE setcode = (   SELECT setcode   FROM cards   WHERE name = ""Tendo Ice Bridge"" ) AND language = ""French""
SELECT translation FROM set_translations JOIN cards ON set_translations.setcode = cards.setcode JOIN sets ON set_translations.setcode = sets.code WHERE cards.name = ""Tendo Ice Bridge"" AND set_translations.language = ""French""
SELECT translation FROM set_translations JOIN sets ON set_translations.setcode = sets.code JOIN cards ON sets.code = cards.setcode WHERE cards.name = ""Tendo Ice Bridge"" AND set_translations.language = ""French""
SELECT translation FROM set_translations JOIN sets ON set_translations.setcode = sets.code JOIN cards ON sets.code = cards.setcode WHERE cards.name = ""Tendo Ice Bridge"" AND set_translations.language = ""French""
SELECT translation FROM set_translations JOIN cards ON set_translations.setcode = cards.setcode JOIN sets ON set_translations.setcode = sets.code WHERE cards.name = ""Tendo Ice Bridge"" AND set_translations.language = ""French""
SELECT translation FROM set_translations JOIN cards ON set_translations.setcode = cards.setcode JOIN sets ON set_translations.setcode = sets.code WHERE cards.name = ""Tendo Ice Bridge"" AND set_translations.language = ""French""
SELECT translation FROM set_translations JOIN sets ON set_translations.setcode = sets.code JOIN cards ON sets.code = cards.setcode WHERE cards.name = ""Tendo Ice Bridge"" AND set_translations.language = ""French""","SELECT translation FROM set_translations JOIN cards ON set_translations.setcode = cards.setcode JOIN sets ON set_translations.setcode = sets.code WHERE cards.name = ""Tendo Ice Bridge"" AND set_translations.language = ""French""",1.0
20,1195,What is the average blood albumin level for female patients with a PLT greater than 400 who have been diagnosed with SLE?,thrombosis_prediction,moderate,SELECT AVG(T2.ALB) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.PLT > 400 AND T1.Diagnosis = 'SLE' AND T1.SEX = 'F',7,"SELECT AVG(laboratory.alb) FROM laboratory JOIN patient ON laboratory.id = patient.id JOIN examination ON laboratory.id = examination.id WHERE patient.sex = 'female' AND laboratory.plt > 400 AND examination.diagnosis = 'SLE'
SELECT AVG(laboratory.alb) FROM laboratory JOIN patient ON laboratory.id = patient.id JOIN examination ON laboratory.id = examination.id WHERE patient.sex = 'female' AND laboratory.plt > 400 AND examination.diagnosis = 'SLE'
SELECT AVG(laboratory.alb) FROM laboratory JOIN patient ON laboratory.id = patient.id JOIN examination ON laboratory.id = examination.id WHERE patient.sex = 'female' AND laboratory.plt > 400 AND examination.diagnosis = 'SLE'
SELECT AVG(laboratory.alb) FROM laboratory JOIN patient ON laboratory.id = patient.id JOIN examination ON laboratory.id = examination.id WHERE patient.sex = 'female' AND laboratory.plt > 400 AND examination.diagnosis = 'SLE'
SELECT AVG(laboratory.alb) FROM laboratory JOIN patient ON laboratory.id = patient.id JOIN examination ON laboratory.id = examination.id WHERE patient.sex = 'female' AND laboratory.plt > 400 AND examination.diagnosis = 'SLE'
SELECT AVG(laboratory.alb) FROM laboratory JOIN patient ON laboratory.id = patient.id JOIN examination ON laboratory.id = examination.id WHERE patient.sex = 'female' AND laboratory.plt > 400 AND examination.diagnosis = 'SLE'
SELECT AVG(laboratory.alb) FROM laboratory JOIN patient ON laboratory.id = patient.id WHERE patient.sex = 'female' AND laboratory.plt > 400 AND patient.diagnosis = 'SLE'",SELECT AVG(laboratory.alb) FROM laboratory JOIN patient ON laboratory.id = patient.id JOIN examination ON laboratory.id = examination.id WHERE patient.sex = 'female' AND laboratory.plt > 400 AND examination.diagnosis = 'SLE',0.0
21,942,What is the average fastest lap time in seconds for Lewis Hamilton in all the Formula_1 races?,formula_1,moderate,"SELECT AVG(CAST(SUBSTR(T2.fastestLapTime, 1, INSTR(T2.fastestLapTime, ':') - 1) AS INTEGER) * 60 + CAST(SUBSTR(T2.fastestLapTime, INSTR(T2.fastestLapTime, ':') + 1) AS REAL)) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.surname = 'Hamilton' AND T1.forename = 'Lewis'",7,"SELECT AVG(milliseconds) AS average_fastest_lap_time FROM laptimes JOIN drivers ON laptimes.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND position = 1
SELECT AVG(milliseconds) AS average_fastest_lap_time FROM laptimes JOIN drivers ON laptimes.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND position = 1
SELECT AVG(milliseconds) AS average_fastest_lap_time FROM laptimes JOIN drivers ON laptimes.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND position = 1
SELECT AVG(milliseconds) AS average_fastest_lap_time FROM laptimes JOIN drivers ON laptimes.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND position = 1
SELECT AVG(milliseconds) AS average_fastest_lap_time FROM laptimes JOIN drivers ON laptimes.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND position = 1
SELECT AVG(milliseconds) AS average_fastest_lap_time FROM laptimes JOIN drivers ON laptimes.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND position = 1
SELECT AVG(milliseconds) AS average_fastest_lap_time FROM laptimes JOIN drivers ON laptimes.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND position = 1",SELECT AVG(milliseconds) AS average_fastest_lap_time FROM laptimes JOIN drivers ON laptimes.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND position = 1,0.0
22,0,What is the highest eligible free rate for K-12 students in the schools in Alameda County?,california_schools,simple,SELECT `Free Meal Count (K-12)` / `Enrollment (K-12)` FROM frpm WHERE `County Name` = 'Alameda' ORDER BY (CAST(`Free Meal Count (K-12)` AS REAL) / `Enrollment (K-12)`) DESC LIMIT 1,7,"SELECT MAX(""percent (%) eligible frpm (k-12)"") AS highest_free_rate FROM schools JOIN frpm ON schools.cdscode = frpm.cdscode WHERE schools.county = 'Alameda County' AND frpm.low_grade <= 12 AND frpm.high_grade >= 12
SELECT MAX(""percent (%) eligible frpm (k-12)"") AS highest_free_rate FROM schools JOIN frpm ON schools.cdscode = frpm.cdscode WHERE schools.county = 'Alameda County' AND frpm.low_grade <= 12 AND frpm.high_grade >= 12
SELECT MAX(""percent (%) eligible frpm (k-12)"") AS highest_free_rate FROM schools JOIN frpm ON schools.cdscode = frpm.cdscode WHERE schools.county = 'Alameda County' AND frpm.low_grade <= 12 AND frpm.high_grade >= 12
SELECT MAX(""percent (%) eligible frpm (k-12)"") AS highest_free_rate FROM schools JOIN frpm ON schools.cdscode = frpm.cdscode WHERE schools.county = 'Alameda County' AND frpm.low_grade <= 12 AND frpm.high_grade >= 12
SELECT MAX(""percent (%) eligible frpm (k-12)"") AS highest_free_rate FROM schools JOIN frpm ON schools.cdscode = frpm.cdscode WHERE schools.county = 'Alameda County' AND frpm.low_grade <= 12 AND frpm.high_grade >= 12
SELECT MAX(`percent (%) eligible frpm (k-12)`) AS `highest_eligible_free_rate` FROM schools JOIN frpm ON schools.cdscode = frpm.cdscode WHERE schools.county = 'Alameda County' AND frpm.low_grade <= 12 AND frpm.high_grade >= 12
SELECT MAX(""percent (%) eligible frpm (k-12)"") AS highest_free_rate FROM schools JOIN frpm ON schools.cdscode = frpm.cdscode WHERE schools.county = 'Alameda County' AND frpm.low_grade <= 12 AND frpm.high_grade >= 12","SELECT MAX(""percent (%) eligible frpm (k-12)"") AS highest_free_rate FROM schools JOIN frpm ON schools.cdscode = frpm.cdscode WHERE schools.county = 'Alameda County' AND frpm.low_grade <= 12 AND frpm.high_grade >= 12",0.0
23,249,What are the elements of the atoms of TR144_8_19?,toxicology,challenging,SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR144_8_19',7,"SELECT element FROM atoms WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR144_8_19')
SELECT element FROM atoms WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR144_8_19')
SELECT element FROM atoms WHERE molecule_id IN (     SELECT molecule_id     FROM molecule     WHERE label = 'TR144_8_19' )
SELECT element FROM atoms WHERE molecule_id IN (     SELECT molecule_id     FROM molecule     WHERE label = 'TR144_8_19' )
SELECT element FROM atoms WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR144_8_19')
SELECT element FROM atoms WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR144_8_19')
SELECT element FROM atoms WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR144_8_19')",SELECT element FROM atoms WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR144_8_19'),0.0
24,304,List all carcinogenic molecules and their elements.,toxicology,challenging,"SELECT DISTINCT T2.molecule_id, T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'",7,"SELECT a.element, m.label FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.label = 'carcinogenic'
SELECT a.element, m.label FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.label = 'carcinogenic'
SELECT a.element, m.label FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.label = 'carcinogenic'
SELECT atom.element, molecule.label FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = 'carcinogenic'
SELECT a.atom_id, a.element, m.molecule_id, m.label FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.label = 'carcinogenic'
SELECT atom.atom_id, atom.element, molecule.label FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'carcinogenic'
SELECT atom.element, molecule.label FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = 'carcinogenic'","SELECT a.element, m.label FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.label = 'carcinogenic'",0.0
25,509,What is the unique id of the set that has the highest number of cards?,card_games,simple,SELECT id FROM sets ORDER BY baseSetSize DESC LIMIT 1,7,"SELECT id FROM sets WHERE basesetsize = (SELECT MAX(basesetsize) FROM sets)
SELECT id FROM sets WHERE basesetsize = (SELECT MAX(basesetsize) FROM sets)
SELECT id FROM sets WHERE basesetsize = (SELECT MAX(basesetsize) FROM sets)
SELECT id FROM sets WHERE basesetsize = (SELECT MAX(basesetsize) FROM sets)
SELECT id FROM sets WHERE basesetsize = (SELECT MAX(basesetsize) FROM sets)
SELECT id FROM sets WHERE basesetsize = (SELECT MAX(basesetsize) FROM sets)
SELECT id FROM sets WHERE basesetsize = (SELECT MAX(basesetsize) FROM sets)",SELECT id FROM sets WHERE basesetsize = (SELECT MAX(basesetsize) FROM sets),1.0
26,1359,"How many times was the budget in Advertisement for ""Yearly Kickoff"" meeting more than ""October Meeting""?",student_club,challenging,SELECT CAST(SUM(CASE WHEN T2.event_name = 'Yearly Kickoff' THEN T1.amount ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.event_name = 'October Meeting' THEN T1.amount ELSE 0 END) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Advertisement' AND T2.type = 'Meeting',7,"SELECT COUNT(*) FROM budget WHERE category = 'Advertisement' AND amount > (     SELECT amount     FROM budget     JOIN event ON budget.link_to_event = event.event_id     WHERE event.event_name = 'October Meeting' ) AND link_to_event = (     SELECT event_id     FROM event     WHERE event_name = 'Yearly Kickoff' )
SELECT COUNT(*) FROM budget WHERE category = 'Advertisement' AND amount > (SELECT amount               FROM budget               JOIN event ON budget.link_to_event = event.event_id               WHERE event.event_name = 'October Meeting') AND link_to_event = (SELECT event_id                      FROM event                      WHERE event_name = 'Yearly Kickoff')
SELECT COUNT(*) FROM budget WHERE category = 'Advertisement' AND amount > (     SELECT amount     FROM budget     JOIN event ON budget.link_to_event = event.event_id     WHERE event.event_name = 'October Meeting' ) AND link_to_event = (     SELECT event_id     FROM event     WHERE event_name = 'Yearly Kickoff' )
SELECT COUNT(*) FROM budget WHERE category = 'Advertisement' AND amount > (     SELECT amount     FROM budget     JOIN event ON budget.link_to_event = event.event_id     WHERE event.event_name = 'October Meeting' ) AND link_to_event = (     SELECT event_id     FROM event     WHERE event_name = 'Yearly Kickoff' )
SELECT COUNT(*) FROM budget WHERE category = 'Advertisement' AND amount > (     SELECT amount     FROM budget     JOIN event ON budget.link_to_event = event.event_id     WHERE event.event_name = 'October Meeting' ) AND link_to_event = (     SELECT event_id     FROM event     WHERE event_name = 'Yearly Kickoff' )
SELECT COUNT(*) FROM budget WHERE category = 'Advertisement' AND amount > (     SELECT amount     FROM budget     JOIN event ON budget.link_to_event = event.event_id     WHERE event.event_name = 'October Meeting' ) AND link_to_event = (     SELECT event_id     FROM event     WHERE event_name = 'Yearly Kickoff' )
SELECT COUNT(*) FROM budget WHERE category = 'Advertisement' AND amount > (     SELECT amount     FROM budget     JOIN event ON budget.link_to_event = event.event_id     WHERE event.event_name = 'October Meeting' ) AND link_to_event = (     SELECT event_id     FROM event     WHERE event_name = 'Yearly Kickoff' )",SELECT COUNT(*) FROM budget WHERE category = 'Advertisement' AND amount > (     SELECT amount     FROM budget     JOIN event ON budget.link_to_event = event.event_id     WHERE event.event_name = 'October Meeting' ) AND link_to_event = (     SELECT event_id     FROM event     WHERE event_name = 'Yearly Kickoff' ),0.0
27,1474,"Which customers, paying in CZK, consumed the most gas in 2011?",debit_card_specializing,moderate,SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' AND T2.Date BETWEEN 201101 AND 201112 GROUP BY T1.CustomerID ORDER BY SUM(T2.Consumption) DESC LIMIT 1,7,"SELECT customers.customerid, SUM(transactions_1k.amount) as total_gas_consumed FROM transactions_1k JOIN customers ON transactions_1k.customerid = customers.customerid JOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid WHERE customers.currency = 'CZK' AND strftime('%Y', transactions_1k.date) = '2011' GROUP BY customers.customerid ORDER BY total_gas_consumed DESC
SELECT customers.customerid, SUM(transactions_1k.amount) as total_gas_consumed FROM transactions_1k JOIN customers ON transactions_1k.customerid = customers.customerid JOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid WHERE customers.currency = 'CZK' AND strftime('%Y', transactions_1k.date) = '2011' GROUP BY customers.customerid ORDER BY total_gas_consumed DESC
SELECT customers.customerid, SUM(transactions_1k.amount) as total_gas_consumed FROM transactions_1k JOIN customers ON transactions_1k.customerid = customers.customerid JOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid WHERE customers.currency = 'CZK' AND strftime('%Y', transactions_1k.date) = '2011' GROUP BY customers.customerid ORDER BY total_gas_consumed DESC
SELECT customers.customerid, SUM(transactions_1k.amount) as total_gas_consumed FROM transactions_1k JOIN customers ON transactions_1k.customerid = customers.customerid JOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid WHERE customers.currency = 'CZK' AND strftime('%Y', transactions_1k.date) = '2011' GROUP BY customers.customerid ORDER BY total_gas_consumed DESC
SELECT customers.customerid, SUM(transactions_1k.amount) as total_gas_consumed FROM transactions_1k JOIN customers ON transactions_1k.customerid = customers.customerid JOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid WHERE customers.currency = 'CZK' AND strftime('%Y', transactions_1k.date) = '2011' GROUP BY customers.customerid ORDER BY total_gas_consumed DESC
SELECT customers.customerid, SUM(transactions_1k.amount) as total_gas_consumed FROM transactions_1k JOIN customers ON transactions_1k.customerid = customers.customerid JOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid WHERE customers.currency = 'CZK' AND strftime('%Y', transactions_1k.date) = '2011' GROUP BY customers.customerid ORDER BY total_gas_consumed DESC
SELECT customers.customerid, SUM(transactions_1k.amount) as total_gas_consumed FROM transactions_1k JOIN customers ON transactions_1k.customerid = customers.customerid JOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid WHERE customers.currency = 'CZK' AND strftime('%Y', transactions_1k.date) = '2011' GROUP BY customers.customerid ORDER BY total_gas_consumed DESC","SELECT customers.customerid, SUM(transactions_1k.amount) as total_gas_consumed FROM transactions_1k JOIN customers ON transactions_1k.customerid = customers.customerid JOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid WHERE customers.currency = 'CZK' AND strftime('%Y', transactions_1k.date) = '2011' GROUP BY customers.customerid ORDER BY total_gas_consumed DESC",0.0
28,506,"For all the set of cards that has Japanese translation, what is the percentage of them are only available in non-foil?",card_games,challenging,SELECT CAST(SUM(CASE WHEN isNonFoilOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) FROM sets WHERE code IN ( SELECT setCode FROM set_translations WHERE language = 'Japanese' ),7,"SELECT (COUNT(c.id) * 100.0 / (SELECT COUNT(*) FROM cards c JOIN foreign_data fd ON c.id = fd.id WHERE fd.language = 'Japanese')) AS percentage FROM cards c JOIN foreign_data fd ON c.id = fd.id WHERE fd.language = 'Japanese' AND c.hasnonfoil = 1 AND c.hasfoil = 0
SELECT (COUNT(c.id) * 100.0 / (SELECT COUNT(*) FROM cards c JOIN foreign_data f ON c.id = f.id WHERE f.language = 'Japanese')) AS percentage_non_foil FROM cards c JOIN foreign_data f ON c.id = f.id WHERE f.language = 'Japanese' AND c.hasnonfoil = 1 AND c.hasfoil = 0
SELECT (COUNT(c.id) * 100.0 / (SELECT COUNT(*) FROM cards c JOIN foreign_data fd ON c.id = fd.id WHERE fd.language = 'Japanese')) AS percentage_non_foil FROM cards c JOIN foreign_data fd ON c.id = fd.id WHERE fd.language = 'Japanese' AND c.hasnonfoil = 1 AND c.hasfoil = 0
SELECT (COUNT(cards.id) * 100.0 / (SELECT COUNT(*) FROM cards WHERE id IN (SELECT id FROM foreign_data WHERE language = 'Japanese'))) AS percentage_non_foil FROM cards WHERE hasnonfoil = 1 AND id IN (SELECT id FROM foreign_data WHERE language = 'Japanese')
SELECT (COUNT(c.id) * 100.0 / (SELECT COUNT(*) FROM cards c JOIN foreign_data f ON c.id = f.id WHERE f.language = 'Japanese')) AS percentage_non_foil FROM cards c JOIN foreign_data f ON c.id = f.id WHERE f.language = 'Japanese' AND c.hasnonfoil = 1 AND c.hasfoil = 0
SELECT (COUNT(c.id) * 100.0 / (SELECT COUNT(*) FROM cards c JOIN foreign_data f ON c.id = f.id WHERE f.language = 'Japanese')) AS percentage_non_foil FROM cards c JOIN foreign_data f ON c.id = f.id WHERE f.language = 'Japanese' AND c.hasnonfoil = 1 AND c.hasfoil = 0
SELECT (COUNT(c.id) * 100.0 / (SELECT COUNT(*) FROM cards c JOIN foreign_data f ON c.id = f.id WHERE f.language = 'Japanese')) AS percentage_non_foil FROM cards c JOIN foreign_data f ON c.id = f.id WHERE f.language = 'Japanese' AND c.hasnonfoil = 1 AND c.hasfoil = 0",SELECT (COUNT(c.id) * 100.0 / (SELECT COUNT(*) FROM cards c JOIN foreign_data f ON c.id = f.id WHERE f.language = 'Japanese')) AS percentage_non_foil FROM cards c JOIN foreign_data f ON c.id = f.id WHERE f.language = 'Japanese' AND c.hasnonfoil = 1 AND c.hasfoil = 0,0.0
29,362,"What is the description about the ruling of card ""Condemn""?",card_games,simple,SELECT T2.text FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Condemn',7,"SELECT text FROM rulings WHERE id = (SELECT id FROM cards WHERE name = ""Condemn"")
SELECT text FROM rulings WHERE id = (SELECT id FROM cards WHERE name = ""Condemn"")
SELECT text FROM rulings WHERE id = (SELECT id FROM cards WHERE name = ""Condemn"")
SELECT text FROM rulings WHERE id = (SELECT id FROM cards WHERE name = ""Condemn"")
SELECT text FROM rulings WHERE id = (SELECT id FROM cards WHERE name = ""Condemn"")
SELECT text FROM rulings WHERE id = (SELECT id FROM cards WHERE name = ""Condemn"")
SELECT text FROM rulings WHERE id = (SELECT id FROM cards WHERE name = ""Condemn"")","SELECT text FROM rulings WHERE id = (SELECT id FROM cards WHERE name = ""Condemn"")",0.0
30,1180,Was the patient a man or a women whose ALT glutamic pylvic transaminase status got 9 on 1992-6-12?,thrombosis_prediction,moderate,SELECT T1.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GPT = 9.0 AND T2.Date = '1992-06-12',7,"SELECT * FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'man' AND laboratory.date = '1992-6-12' AND laboratory.alp = 9
SELECT * FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'man' AND laboratory.date = '1992-6-12' AND laboratory.alp = 9
SELECT * FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'man' AND laboratory.date = '1992-6-12' AND laboratory.alp = 9
SELECT * FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'man' AND laboratory.date = '1992-6-12' AND laboratory.alp = 9
SELECT * FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'man' AND laboratory.date = '1992-6-12' AND laboratory.alp = 9
SELECT * FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'man' AND laboratory.date = '1992-6-12' AND laboratory.alp = 9
SELECT * FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'man' AND laboratory.date = '1992-6-12' AND laboratory.alp = 9",SELECT * FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'man' AND laboratory.date = '1992-6-12' AND laboratory.alp = 9,0.0
31,586,Which user added a bounty amount of 50 to the post title mentioning variance?,codebase_community,challenging,"SELECT T3.DisplayName, T1.Title FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId INNER JOIN users AS T3 ON T3.Id = T2.UserId WHERE T2.BountyAmount = 50 AND T1.Title LIKE '%variance%'",7,"SELECT u.id, u.displayname FROM users u JOIN votes v ON u.id = v.userid JOIN posts p ON v.postid = p.id WHERE v.bountyamount = 50 AND p.title LIKE '%variance%'
SELECT users.id, users.displayname FROM users JOIN votes ON users.id = votes.userid JOIN posts ON votes.postid = posts.id WHERE votes.bountyamount = 50 AND posts.title LIKE '%variance%' AND posts.title LIKE '%badges%'
SELECT users.id, users.displayname FROM users JOIN votes ON users.id = votes.userid JOIN posts ON votes.postid = posts.id WHERE votes.bountyamount = 50 AND posts.title LIKE '%variance%' AND posts.title LIKE '%badges%'
SELECT users.id, users.displayname FROM users JOIN votes ON users.id = votes.userid JOIN posts ON votes.postid = posts.id WHERE votes.bountyamount = 50 AND posts.title LIKE '%variance%' AND posts.title LIKE '%badges%'
SELECT users.id, users.displayname FROM users JOIN votes ON users.id = votes.userid JOIN posts ON votes.postid = posts.id WHERE votes.bountyamount = 50 AND posts.title LIKE '%variance%' AND posts.title LIKE '%badges%'
SELECT users.id, users.displayname FROM users JOIN votes ON users.id = votes.userid JOIN posts ON votes.postid = posts.id WHERE votes.bountyamount = 50 AND posts.title LIKE '%variance%' AND posts.title LIKE '%badges%'
SELECT users.id, users.displayname FROM votes JOIN posts ON votes.postid = posts.id JOIN users ON votes.userid = users.id WHERE votes.bountyamount = 50 AND posts.title LIKE '%variance%' AND posts.title LIKE '%badges%'","SELECT users.id, users.displayname FROM users JOIN votes ON users.id = votes.userid JOIN posts ON votes.postid = posts.id WHERE votes.bountyamount = 50 AND posts.title LIKE '%variance%' AND posts.title LIKE '%badges%'",0.0
32,1169,What is the ratio of male to female patients among all those with abnormal uric acid counts?,thrombosis_prediction,challenging,SELECT CAST(SUM(CASE WHEN T2.UA <= 8.0 AND T1.SEX = 'M' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.UA <= 6.5 AND T1.SEX = 'F' THEN 1 ELSE 0 END) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID,7,"SELECT CAST(SUM(CASE WHEN p.sex = 'male' THEN 1 ELSE 0 END) AS FLOAT) / CAST(SUM(CASE WHEN p.sex = 'female' THEN 1 ELSE 0 END) AS FLOAT) AS male_to_female_ratio FROM patient p JOIN examination e ON p.id = e.id JOIN laboratory l ON p.id = l.id WHERE l.ua <> 'normal'
SELECT COUNT(*) FROM patient WHERE sex = 'male' AND id IN (SELECT id FROM laboratory WHERE ua IS NOT NULL)) /     (SELECT COUNT(*) FROM patient WHERE sex = 'female' AND id IN (SELECT id FROM laboratory WHERE ua IS NOT NULL)) AS male_to_female_ratio
SELECT COUNT(*) FROM patient WHERE sex = 'male' AND id IN (SELECT id FROM laboratory WHERE ua IS NOT NULL)) /     (SELECT COUNT(*) FROM patient WHERE sex = 'female' AND id IN (SELECT id FROM laboratory WHERE ua IS NOT NULL)) AS male_to_female_ratio
SELECT COUNT(*) FROM patient WHERE sex = 'male' AND id IN (SELECT id FROM laboratory WHERE ua IS NOT NULL)) /     (SELECT COUNT(*) FROM patient WHERE sex = 'female' AND id IN (SELECT id FROM laboratory WHERE ua IS NOT NULL)) AS male_to_female_ratio
SELECT COUNT(DISTINCT p.id) AS male_patients,         COUNT(DISTINCT p2.id) AS female_patients,         (COUNT(DISTINCT p.id) * 1.0) / COUNT(DISTINCT p2.id) AS ratio FROM patient p JOIN laboratory l ON p.id = l.id JOIN examination e ON p.id = e.id WHERE l.ua <> 'normal' AND p.sex = 'male'
SELECT CAST(COUNT(p.id) AS FLOAT) / NULLIF(COUNT(CASE WHEN p.sex = 'female' THEN 1 END), 0) AS male_to_female_ratio FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.ua IS NOT NULL
SELECT COUNT(*) FROM patient WHERE sex = 'male' AND id IN (SELECT id FROM laboratory WHERE ua IS NOT NULL)) /     (SELECT COUNT(*) FROM patient WHERE sex = 'female' AND id IN (SELECT id FROM laboratory WHERE ua IS NOT NULL)) AS male_to_female_ratio",SELECT COUNT(*) FROM patient WHERE sex = 'male' AND id IN (SELECT id FROM laboratory WHERE ua IS NOT NULL)) /     (SELECT COUNT(*) FROM patient WHERE sex = 'female' AND id IN (SELECT id FROM laboratory WHERE ua IS NOT NULL)) AS male_to_female_ratio,0.0
33,1210,What is the average index of the lactate dehydrogenase (LDH) for all patients with lactate dehydrogenase (LDH) within the normal range.,thrombosis_prediction,simple,SELECT AVG(LDH) FROM Laboratory WHERE LDH < 500,7,"SELECT AVG(ldh) AS average_index FROM laboratory JOIN patient ON laboratory.id = patient.id WHERE ldh BETWEEN normal_range_min AND normal_range_max
SELECT AVG(ldh) FROM laboratory JOIN patient ON laboratory.id = patient.id WHERE ldh BETWEEN normal_range_min AND normal_range_max
SELECT AVG(ldh) FROM laboratory JOIN patient ON laboratory.id = patient.id WHERE ldh BETWEEN normal_range_min AND normal_range_max
SELECT AVG(laboratory.ldh) FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.ldh BETWEEN 110 AND 220
SELECT AVG(ldh) FROM laboratory JOIN patient ON laboratory.id = patient.id WHERE ldh BETWEEN normal_range_min AND normal_range_max
SELECT AVG(ldh) AS average_index FROM laboratory JOIN patient ON laboratory.id = patient.id WHERE ldh BETWEEN normal_range_min AND normal_range_max
SELECT AVG(ldh) AS average_index FROM laboratory JOIN patient ON laboratory.id = patient.id WHERE ldh BETWEEN normal_range_min AND normal_range_max",SELECT AVG(ldh) AS average_index FROM laboratory JOIN patient ON laboratory.id = patient.id WHERE ldh BETWEEN normal_range_min AND normal_range_max,0.0
34,987,What is the average fastest lap time of the top 10 drivers in the 2006 United States Grand Prix?,formula_1,simple,SELECT AVG(T1.fastestLapTime) FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId WHERE T1.rank < 11 AND T2.year = 2006 AND T2.name = 'United States Grand Prix',7,"SELECT AVG(milliseconds) AS average_fastest_lap_time FROM (     SELECT milliseconds     FROM laptimes     JOIN results ON laptimes.raceid = results.raceid AND laptimes.driverid = results.driverid     JOIN races ON results.raceid = races.raceid     WHERE races.year = 2006 AND races.name = 'United States Grand Prix'     ORDER BY results.position     LIMIT 10 ) AS top_10_drivers
SELECT AVG(milliseconds) AS average_fastest_lap_time FROM (     SELECT milliseconds     FROM laptimes     JOIN results ON laptimes.raceid = results.raceid AND laptimes.driverid = results.driverid     JOIN races ON results.raceid = races.raceid     WHERE races.year = 2006 AND races.name = 'United States Grand Prix'     ORDER BY results.position     LIMIT 10 ) AS top_10_drivers
SELECT AVG(milliseconds) AS average_fastest_lap_time FROM (     SELECT milliseconds     FROM laptimes     WHERE driverid IN (         SELECT driverid         FROM driverstandings         WHERE raceid IN (             SELECT raceid             FROM races             WHERE year = 2006 AND name = 'United States Grand Prix'         )         ORDER BY position         LIMIT 10     )     AND lap = 1 ) AS fastest_laps
SELECT AVG(fastestlaptime) AS average_fastest_lap_time FROM (     SELECT fastestlaptime     FROM results     INNER JOIN races ON results.raceid = races.raceid     WHERE races.year = 2006 AND races.name = 'United States Grand Prix'     ORDER BY position     LIMIT 10 ) AS top_drivers
SELECT AVG(milliseconds) AS average_fastest_lap_time FROM (     SELECT milliseconds     FROM laptimes     WHERE driverid IN (         SELECT driverid         FROM driverstandings         WHERE raceid IN (             SELECT raceid             FROM races             WHERE year = 2006 AND name = 'United States Grand Prix'         )         ORDER BY position         LIMIT 10     )     AND lap = 1 ) AS fastest_laps
SELECT AVG(milliseconds) AS average_fastest_lap_time FROM laptimes WHERE driverid IN (     SELECT driverid     FROM driverstandings     WHERE raceid = (         SELECT raceid         FROM races         WHERE year = 2006 AND name = 'United States Grand Prix'     )     ORDER BY position     LIMIT 10 )
SELECT AVG(milliseconds) AS average_fastest_lap_time FROM (     SELECT milliseconds     FROM laptimes     WHERE driverid IN (         SELECT driverid         FROM driverstandings         WHERE raceid IN (             SELECT raceid             FROM races             WHERE year = 2006 AND name = 'United States Grand Prix'         )         ORDER BY position         LIMIT 10     ) AND lap = 1 ) AS fastest_laps",SELECT AVG(milliseconds) AS average_fastest_lap_time FROM (     SELECT milliseconds     FROM laptimes     JOIN results ON laptimes.raceid = results.raceid AND laptimes.driverid = results.driverid     JOIN races ON results.raceid = races.raceid     WHERE races.year = 2006 AND races.name = 'United States Grand Prix'     ORDER BY results.position     LIMIT 10 ) AS top_10_drivers,0.0
35,1148,What is the percentage of players that are under 180 cm who have an overall strength of more than 70?,european_football_2,moderate,SELECT CAST(COUNT(CASE WHEN t2.overall_rating > 70 THEN t1.id ELSE NULL END) AS REAL) * 100 / COUNT(t1.id) percent FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.height < 180,7,"SELECT (COUNT(player.id) * 100.0 / (SELECT COUNT(*) FROM player)) AS percentage FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.height < 180 AND player_attributes.strength > 70
SELECT (COUNT(DISTINCT player.id) * 100.0 / (SELECT COUNT(DISTINCT player.id) FROM player WHERE player.height < 180)) AS percentage FROM player JOIN player_attributes ON player.id = player_attributes.player_api_id WHERE player.height < 180 AND player_attributes.strength > 70
SELECT (COUNT(player.id) * 100.0 / (SELECT COUNT(*) FROM player)) AS percentage FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.height < 180 AND player_attributes.strength > 70
SELECT (COUNT(player.id) * 100.0 / (SELECT COUNT(*) FROM player)) AS percentage FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.height < 180 AND player_attributes.strength > 70
SELECT (COUNT(player.id) * 100.0 / (SELECT COUNT(*) FROM player)) AS percentage FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.height < 180 AND player_attributes.strength > 70
SELECT (COUNT(player.id) * 100.0 / (SELECT COUNT(*) FROM player)) AS percentage FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.height < 180 AND player_attributes.strength > 70
SELECT (COUNT(player.id) * 100.0 / (SELECT COUNT(*) FROM player)) AS percentage FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.height < 180 AND player_attributes.strength > 70",SELECT (COUNT(player.id) * 100.0 / (SELECT COUNT(*) FROM player)) AS percentage FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.height < 180 AND player_attributes.strength > 70,0.0
36,218,What percentage of carcinogenic-type molecules does not contain fluorine?,toxicology,challenging,SELECT CAST(COUNT(DISTINCT CASE WHEN T1.element <> 'f' THEN T2.molecule_id ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T2.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+',7,"SELECT COUNT(DISTINCT molecule_id) FROM molecule WHERE label = 'carcinogenic-type')) AS percentage FROM     molecule m LEFT JOIN     atom a ON m.molecule_id = a.molecule_id WHERE     m.label = 'carcinogenic-type'     AND a.element <> 'fluorine'
SELECT COUNT(DISTINCT molecule_id) FROM molecule WHERE label = 'carcinogenic-type')) AS percentage FROM     molecule m LEFT JOIN     atom a ON m.molecule_id = a.molecule_id WHERE     m.label = 'carcinogenic-type'     AND a.element <> 'fluorine'
SELECT COUNT(*) FROM molecule WHERE label = 'carcinogenic-type')) AS percentage FROM     molecule m     JOIN atom a ON m.molecule_id = a.molecule_id     LEFT JOIN connected c ON a.atom_id = c.atom_id     LEFT JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE     m.label = 'carcinogenic-type'     AND a.element != 'fluorine'     AND (a2.element IS NULL OR a2.element != 'fluorine')
SELECT COUNT(DISTINCT molecule_id) FROM molecule WHERE label = 'carcinogenic-type')) AS percentage FROM     molecule m LEFT JOIN     atom a ON m.molecule_id = a.molecule_id WHERE     m.label = 'carcinogenic-type'     AND a.element <> 'fluorine'
SELECT COUNT(DISTINCT molecule_id) FROM molecule WHERE label = 'carcinogenic-type')) AS percentage FROM     molecule m LEFT JOIN     atom a ON m.molecule_id = a.molecule_id WHERE     m.label = 'carcinogenic-type'     AND a.element <> 'fluorine'
SELECT COUNT(*) FROM molecule WHERE label = 'carcinogenic-type')) AS percentage FROM     molecule m     JOIN atom a ON m.molecule_id = a.molecule_id     LEFT JOIN connected c ON a.atom_id = c.atom_id     LEFT JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE     m.label = 'carcinogenic-type'     AND a.element != 'fluorine'     AND (a2.element IS NULL OR a2.element != 'fluorine')
SELECT COUNT(*) FROM molecule WHERE label = 'carcinogenic-type')) AS percentage FROM     molecule m     JOIN atom a ON m.molecule_id = a.molecule_id     LEFT JOIN connected c ON a.atom_id = c.atom_id     LEFT JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE     m.label = 'carcinogenic-type'     AND a.element <> 'fluorine'     AND (a2.element IS NULL OR a2.element <> 'fluorine')",SELECT COUNT(DISTINCT molecule_id) FROM molecule WHERE label = 'carcinogenic-type')) AS percentage FROM     molecule m LEFT JOIN     atom a ON m.molecule_id = a.molecule_id WHERE     m.label = 'carcinogenic-type'     AND a.element <> 'fluorine',0.0
37,397,"What is the mana cost of cards with a normal layout, a 2003 frame version, with a black border color, and available in paper and mtgo?",card_games,moderate,"SELECT manaCost FROM cards WHERE availability = 'mtgo,paper' AND borderColor = 'black' AND frameVersion = 2003 AND layout = 'normal'",7,"SELECT convertedmanacost FROM cards JOIN sets ON cards.setcode = sets.code WHERE layout = 'normal' AND sets.frameversion = '2003' AND bordercolor = 'black' AND availability LIKE '%paper%' AND availability LIKE '%mtgo%'
SELECT convertedmanacost FROM cards JOIN sets ON cards.setcode = sets.code WHERE layout = 'normal' AND sets.frameversion = '2003' AND bordercolor = 'black' AND availability LIKE '%paper%' AND availability LIKE '%mtgo%'
SELECT convertedmanacost FROM cards JOIN sets ON cards.setcode = sets.code WHERE layout = 'normal' AND sets.frameversion = '2003' AND bordercolor = 'black' AND availability LIKE '%paper%' AND availability LIKE '%mtgo%'
SELECT convertedmanacost FROM cards JOIN sets ON cards.setcode = sets.code WHERE layout = 'normal' AND sets.frameversion = '2003' AND bordercolor = 'black' AND availability LIKE '%paper%' AND availability LIKE '%mtgo%'
SELECT convertedmanacost FROM cards JOIN sets ON cards.setcode = sets.code WHERE layout = 'normal' AND sets.frameversion = '2003' AND bordercolor = 'black' AND availability LIKE '%paper%' AND availability LIKE '%mtgo%'
SELECT convertedmanacost FROM cards JOIN sets ON cards.setcode = sets.code WHERE layout = 'normal' AND sets.frameversion = '2003' AND bordercolor = 'black' AND availability LIKE '%paper%' AND availability LIKE '%mtgo%'
SELECT convertedmanacost FROM cards JOIN sets ON cards.setcode = sets.code WHERE layout = 'normal' AND sets.frameversion = '2003' AND bordercolor = 'black' AND availability LIKE '%paper%' AND availability LIKE '%mtgo%'",SELECT convertedmanacost FROM cards JOIN sets ON cards.setcode = sets.code WHERE layout = 'normal' AND sets.frameversion = '2003' AND bordercolor = 'black' AND availability LIKE '%paper%' AND availability LIKE '%mtgo%',0.0
38,83,"Of the schools that offers a magnet program serving a grade span of Kindergarten to 8th grade, how many offers Multiple Provision Types? List the number of cities that offers a Kindergarten to 8th grade span and indicate how many schools are there serving such grade span for each city.",california_schools,challenging,"SELECT T2.City, COUNT(T2.CDSCode) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.Magnet = 1 AND T2.GSoffered = 'K-8' AND T1.`NSLP Provision Status` = 'Multiple Provision Types' GROUP BY T2.City",7,"SELECT COUNT(DISTINCT schools.cdscode) AS 'Number of Schools with Multiple Provision Types', COUNT(DISTINCT schools.city) AS 'Number of Cities', schools.city, COUNT(schools.cdscode) AS 'Number of Schools' FROM schools JOIN satscores ON schools.cdscode = satscores.cds JOIN frpm ON schools.cdscode = frpm.cdscode WHERE schools.magnet = 1 AND schools.lowgrade <= 5 AND schools.highgrade >= 8 GROUP BY schools.city
SELECT COUNT(DISTINCT schools.cdscode) AS 'Number of Schools with Multiple Provision Types', COUNT(DISTINCT schools.city) AS 'Number of Cities', schools.city, COUNT(schools.cdscode) AS 'Number of Schools' FROM schools JOIN satscores ON schools.cdscode = satscores.cds JOIN frpm ON schools.cdscode = frpm.cdscode WHERE schools.magnet = 'Yes' AND schools.lowgrade = 'Kindergarten' AND schools.highgrade = '8th grade' GROUP BY schools.city
SELECT COUNT(DISTINCT schools.cdscode) AS 'Number of Schools with Multiple Provision Types', COUNT(DISTINCT schools.city) AS 'Number of Cities', schools.city, COUNT(schools.cdscode) AS 'Number of Schools' FROM schools JOIN satscores ON schools.cdscode = satscores.cds JOIN frpm ON schools.cdscode = frpm.cdscode WHERE schools.magnet = 1 AND schools.lowgrade <= 5 AND schools.highgrade >= 8 GROUP BY schools.city
SELECT COUNT(DISTINCT schools.cdscode) AS 'Number of Schools with Multiple Provision Types', COUNT(DISTINCT schools.city) AS 'Number of Cities', schools.city, COUNT(schools.cdscode) AS 'Number of Schools' FROM schools JOIN satscores ON schools.cdscode = satscores.cds JOIN frpm ON schools.cdscode = frpm.cdscode WHERE schools.magnet = 'Yes' AND schools.lowgrade = 'Kindergarten' AND schools.highgrade = '8th grade' GROUP BY schools.city
SELECT COUNT(DISTINCT schools.cdscode) AS 'Number of Schools with Multiple Provision Types', COUNT(DISTINCT schools.city) AS 'Number of Cities', schools.city, COUNT(schools.cdscode) AS 'Number of Schools' FROM schools JOIN satscores ON schools.cdscode = satscores.cds JOIN frpm ON schools.cdscode = frpm.cdscode WHERE schools.magnet = 1 AND schools.lowgrade <= 5 AND schools.highgrade >= 8 GROUP BY schools.city
SELECT COUNT(DISTINCT schools.cdscode) AS 'Number of Schools with Multiple Provision Types', COUNT(DISTINCT schools.city) AS 'Number of Cities', schools.city, COUNT(schools.cdscode) AS 'Number of Schools' FROM schools JOIN satscores ON schools.cdscode = satscores.cds JOIN frpm ON schools.cdscode = frpm.cdscode WHERE schools.magnet = 1 AND schools.lowgrade <= 5 AND schools.highgrade >= 8 GROUP BY schools.city
SELECT COUNT(DISTINCT schools.cdscode) AS 'Number of Schools with Multiple Provision Types', COUNT(DISTINCT schools.city) AS 'Number of Cities', schools.city, COUNT(schools.cdscode) AS 'Number of Schools' FROM schools JOIN satscores ON schools.cdscode = satscores.cds JOIN frpm ON schools.cdscode = frpm.cdscode WHERE schools.magnet = 1 AND schools.lowgrade <= 5 AND schools.highgrade >= 8","SELECT COUNT(DISTINCT schools.cdscode) AS 'Number of Schools with Multiple Provision Types', COUNT(DISTINCT schools.city) AS 'Number of Cities', schools.city, COUNT(schools.cdscode) AS 'Number of Schools' FROM schools JOIN satscores ON schools.cdscode = satscores.cds JOIN frpm ON schools.cdscode = frpm.cdscode WHERE schools.magnet = 1 AND schools.lowgrade <= 5 AND schools.highgrade >= 8 GROUP BY schools.city",0.0
39,1194,"What sex is the patient who in a medical examination was diagnosed with PSS and in a laboratory examination had a blood level of C-reactive protein de 2+, createnine 1 and LDH 123?",thrombosis_prediction,challenging,SELECT T1.SEX FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T3.ID = T2.ID WHERE T2.Diagnosis = 'PSS' AND T3.CRP = '2+' AND T3.CRE = 1.0 AND T3.LDH = 123,7,"SELECT p.sex FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.diagnosis = 'PSS' AND l.crp = '2+' AND l.cre = '1' AND l.ldh = '123'
SELECT p.sex FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.diagnosis = 'PSS' AND l.crp = '2+' AND l.cre = '1' AND l.ldh = '123'
SELECT p.sex FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.diagnosis = 'PSS' AND l.crp = '2+' AND l.cre = '1' AND l.ldh = '123'
SELECT patient.sex FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.diagnosis = 'PSS' AND laboratory.crp = '2+' AND laboratory.cre = '1' AND laboratory.ldh = '123'
SELECT patient.sex FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.diagnosis = 'PSS' AND laboratory.crp = '2+' AND laboratory.cre = '1' AND laboratory.ldh = '123'
SELECT patient.sex FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.diagnosis = 'PSS' AND laboratory.crp = '2+' AND laboratory.cre = '1' AND laboratory.ldh = '123'
SELECT patient.sex FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.diagnosis = 'PSS' AND laboratory.crp = '2+' AND laboratory.cre = '1' AND laboratory.ldh = '123'",SELECT patient.sex FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.diagnosis = 'PSS' AND laboratory.crp = '2+' AND laboratory.cre = '1' AND laboratory.ldh = '123',1.0
40,814,List the skin colour of the superheroes with 100 attribute value.,superhero,moderate,SELECT DISTINCT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.skin_colour_id = T2.id INNER JOIN hero_attribute AS T3 ON T1.id = T3.hero_id WHERE T3.attribute_value = 100,7,"SELECT c.colour FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id JOIN colour c ON s.skin_colour_id = c.id WHERE a.attribute_name = 'attribute' AND ha.attribute_value = 100
SELECT colour.colour FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id JOIN colour ON superhero.skin_colour_id = colour.id WHERE attribute.attribute_name = '100' AND hero_attribute.attribute_value = 100
SELECT colour.colour FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id JOIN colour ON superhero.skin_colour_id = colour.id WHERE attribute.attribute_name = 'attribute' AND hero_attribute.attribute_value = 100
SELECT colour.colour FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id JOIN colour ON superhero.skin_colour_id = colour.id WHERE attribute.attribute_name = '100' AND hero_attribute.attribute_value = 100
SELECT colour.colour FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id JOIN colour ON superhero.skin_colour_id = colour.id WHERE attribute.attribute_name = 'attribute' AND hero_attribute.attribute_value = 100
SELECT colour.colour FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id JOIN colour ON superhero.skin_colour_id = colour.id WHERE attribute.attribute_name = 'attribute' AND hero_attribute.attribute_value = 100
SELECT colour.colour FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id JOIN colour ON superhero.skin_colour_id = colour.id WHERE attribute.attribute_name = 'attribute' AND hero_attribute.attribute_value = 100",SELECT colour.colour FROM superhero JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id JOIN colour ON superhero.skin_colour_id = colour.id WHERE attribute.attribute_name = 'attribute' AND hero_attribute.attribute_value = 100,0.0
41,1429,What is the name of the social event that was attended by the vice president of the Student_Club located at 900 E. Washington St.?,student_club,challenging,SELECT T2.event_name FROM attendance AS T1 INNER JOIN event AS T2 ON T2.event_id = T1.link_to_event INNER JOIN member AS T3 ON T1.link_to_member = T3.member_id WHERE T3.position = 'Vice President' AND T2.location = '900 E. Washington St.' AND T2.type = 'Social',7,"SELECT event_name FROM event JOIN attendance ON event.event_id = attendance.link_to_event JOIN member ON attendance.link_to_member = member.member_id WHERE member.position = 'vice president' AND member.link_to_major = (SELECT major_id FROM major WHERE major_name = 'Student_Club' AND major_id IN (SELECT link_to_major FROM member WHERE zip = (SELECT zip_code FROM zip_code WHERE city = '900 E. Washington St.')))
SELECT event_name FROM event JOIN attendance ON event.event_id = attendance.link_to_event JOIN member ON attendance.link_to_member = member.member_id WHERE member.position = 'vice president' AND member.link_to_major = (SELECT major_id FROM major WHERE major_name = 'Student_Club' AND major_id IN (SELECT link_to_major FROM member WHERE zip = (SELECT zip_code FROM zip_code WHERE city = '900 E. Washington St.')))
SELECT event_name FROM event JOIN attendance ON event.event_id = attendance.link_to_event JOIN member ON attendance.link_to_member = member.member_id WHERE member.position = 'vice president' AND member.link_to_major = (SELECT major_id FROM major WHERE major_name = 'Student_Club' AND major_id IN (SELECT link_to_major FROM member WHERE zip = (SELECT zip_code FROM zip_code WHERE city = '900 E. Washington St.')))
SELECT event.event_name FROM event JOIN attendance ON event.event_id = attendance.link_to_event JOIN member ON attendance.link_to_member = member.member_id WHERE member.position = 'vice president' AND member.link_to_major = (SELECT major_id FROM major WHERE major_name = 'Student_Club' AND major_id IN (SELECT link_to_major FROM member WHERE zip = (SELECT zip_code FROM zip_code WHERE address = '900 E. Washington St.')))
SELECT event_name FROM event JOIN attendance ON event.event_id = attendance.link_to_event JOIN member ON attendance.link_to_member = member.member_id WHERE member.position = 'vice president' AND member.link_to_major = (SELECT major_id FROM major WHERE major_name = 'Student_Club' AND major_id IN (SELECT link_to_major FROM member WHERE zip = (SELECT zip_code FROM zip_code WHERE city = '900 E. Washington St.')))
SELECT event.event_name FROM event JOIN attendance ON event.event_id = attendance.link_to_event JOIN member ON attendance.link_to_member = member.member_id WHERE member.position = 'vice president' AND member.link_to_major IN (     SELECT major.major_id     FROM major     JOIN member ON major.major_id = member.link_to_major     JOIN zip_code ON member.zip = zip_code.zip_code     WHERE zip_code.city = '900 E. Washington St.' )
SELECT event_name FROM event JOIN attendance ON event.event_id = attendance.link_to_event JOIN member ON attendance.link_to_member = member.member_id WHERE member.position = 'vice president' AND member.link_to_major = (SELECT major_id FROM major WHERE major_name = 'Student_Club' AND major_id IN (SELECT link_to_major FROM member WHERE zip = (SELECT zip_code FROM zip_code WHERE city = '900 E. Washington St.')))",SELECT event_name FROM event JOIN attendance ON event.event_id = attendance.link_to_event JOIN member ON attendance.link_to_member = member.member_id WHERE member.position = 'vice president' AND member.link_to_major = (SELECT major_id FROM major WHERE major_name = 'Student_Club' AND major_id IN (SELECT link_to_major FROM member WHERE zip = (SELECT zip_code FROM zip_code WHERE city = '900 E. Washington St.'))),0.0
42,821,List down Ajax's superpowers.,superhero,simple,SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Ajax',7,"SELECT superpower.power_name FROM hero_power JOIN superhero ON hero_power.hero_id = superhero.id JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.superhero_name = 'Ajax'
SELECT superpower.power_name FROM hero_power JOIN superhero ON hero_power.hero_id = superhero.id JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.superhero_name = 'Ajax'
SELECT superpower.power_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.superhero_name = 'Ajax'
SELECT sp.power_name FROM superpower sp JOIN hero_power hp ON sp.id = hp.power_id JOIN superhero sh ON hp.hero_id = sh.id WHERE sh.superhero_name = 'Ajax'
SELECT superpower.power_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.superhero_name = 'Ajax'
SELECT superpower.power_name FROM hero_power JOIN superhero ON hero_power.hero_id = superhero.id JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.superhero_name = 'Ajax'
SELECT superpower.power_name FROM hero_power JOIN superhero ON hero_power.hero_id = superhero.id JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.superhero_name = 'Ajax'",SELECT superpower.power_name FROM hero_power JOIN superhero ON hero_power.hero_id = superhero.id JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.superhero_name = 'Ajax',1.0
43,1192,List all patients who were followed up at the outpatient clinic who underwent a laboratory test in October 1991 and had a total blood bilirubin level within the normal range.,thrombosis_prediction,challenging,SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.`T-BIL` < 2.0 AND T2.Date LIKE '1991-10-%',7,"SELECT p.id, p.sex, p.birthday, p.description, p.first_date, p.admission, p.diagnosis FROM patient p JOIN examination e ON p.id = e.id JOIN laboratory l ON p.id = l.id WHERE e.examination_date BETWEEN '1991-10-01' AND '1991-10-31' AND l.t_bil BETWEEN 0.2 AND 1.2 AND e.diagnosis LIKE '%outpatient clinic%'
SELECT p.id, p.sex, p.birthday, p.description, p.first_date, p.admission, p.diagnosis FROM patient p JOIN examination e ON p.id = e.id JOIN laboratory l ON p.id = l.id WHERE e.examination_date BETWEEN '1991-10-01' AND '1991-10-31' AND l.t_bil BETWEEN 0.2 AND 1.2 AND p.admission = 'outpatient clinic'
SELECT p.id, p.sex, p.birthday, p.description, p.first_date, p.admission, p.diagnosis FROM patient p JOIN examination e ON p.id = e.id JOIN laboratory l ON p.id = l.id WHERE e.examination_date BETWEEN '1991-10-01' AND '1991-10-31' AND l.t_bil BETWEEN 0.3 AND 1.2 AND e.diagnosis LIKE '%outpatient clinic%'
SELECT p.id, p.sex, p.birthday, p.description, p.first_date, p.admission, p.diagnosis FROM patient p JOIN examination e ON p.id = e.id JOIN laboratory l ON p.id = l.id WHERE e.examination_date BETWEEN '1991-10-01' AND '1991-10-31' AND l.t_bil BETWEEN 0.3 AND 1.2 AND p.admission = 'outpatient clinic'
SELECT p.id, p.sex, p.birthday, p.description, p.first_date, p.admission, p.diagnosis FROM patient p JOIN examination e ON p.id = e.id JOIN laboratory l ON p.id = l.id WHERE e.examination_date BETWEEN '1991-10-01' AND '1991-10-31' AND l.t_bil BETWEEN 0.2 AND 1.2 AND p.admission = 'outpatient clinic'
SELECT p.id, p.sex, p.birthday, p.description, p.first_date, p.admission, p.diagnosis FROM patient p JOIN examination e ON p.id = e.id JOIN laboratory l ON p.id = l.id WHERE e.examination_date BETWEEN '1991-10-01' AND '1991-10-31' AND l.t_bil BETWEEN 0.2 AND 1.2 AND p.admission = 'outpatient clinic'
SELECT p.id, p.sex, p.birthday, p.description, p.first_date, p.admission, p.diagnosis FROM patient p JOIN examination e ON p.id = e.id JOIN laboratory l ON p.id = l.id WHERE e.examination_date BETWEEN '1991-10-01' AND '1991-10-31' AND l.t_bil BETWEEN 0.2 AND 1.2 AND p.admission = 'outpatient clinic'","SELECT p.id, p.sex, p.birthday, p.description, p.first_date, p.admission, p.diagnosis FROM patient p JOIN examination e ON p.id = e.id JOIN laboratory l ON p.id = l.id WHERE e.examination_date BETWEEN '1991-10-01' AND '1991-10-31' AND l.t_bil BETWEEN 0.2 AND 1.2 AND p.admission = 'outpatient clinic'",0.0
44,1315,"How many students of the Student_Club have attended the event ""Women's Soccer""?",student_club,simple,SELECT COUNT(T1.event_id) FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'Women''s Soccer',7,"SELECT COUNT(*) FROM attendance JOIN event ON attendance.link_to_event = event.event_id JOIN member ON attendance.link_to_member = member.member_id WHERE event.event_name = ""Women's Soccer"" AND member.position = ""Student_Club""
SELECT COUNT(*) FROM attendance JOIN event ON attendance.link_to_event = event.event_id JOIN member ON attendance.link_to_member = member.member_id WHERE event.event_name = ""Women's Soccer"" AND member.position = ""Student_Club""
SELECT COUNT(*) FROM attendance JOIN event ON attendance.link_to_event = event.event_id JOIN member ON attendance.link_to_member = member.member_id WHERE event.event_name = ""Women's Soccer"" AND member.position = ""Student_Club""
SELECT COUNT(*) FROM attendance JOIN event ON attendance.link_to_event = event.event_id JOIN member ON attendance.link_to_member = member.member_id WHERE event.event_name = ""Women's Soccer"" AND member.position = ""Student_Club""
SELECT COUNT(*) FROM attendance JOIN event ON attendance.link_to_event = event.event_id JOIN member ON attendance.link_to_member = member.member_id WHERE event.event_name = ""Women's Soccer"" AND member.position = ""Student_Club""
SELECT COUNT(*) FROM attendance JOIN event ON attendance.link_to_event = event.event_id JOIN member ON attendance.link_to_member = member.member_id WHERE event.event_name = ""Women's Soccer"" AND member.position = ""Student_Club""
SELECT COUNT(*) FROM attendance JOIN event ON attendance.link_to_event = event.event_id JOIN member ON attendance.link_to_member = member.member_id WHERE event.event_name = ""Women's Soccer"" AND member.position = ""Student_Club""","SELECT COUNT(*) FROM attendance JOIN event ON attendance.link_to_event = event.event_id JOIN member ON attendance.link_to_member = member.member_id WHERE event.event_name = ""Women's Soccer"" AND member.position = ""Student_Club""",0.0
45,788,How many percent of female heroes were published by Marvel Comics?,superhero,challenging,SELECT CAST(COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T3.gender = 'Female',7,"SELECT (COUNT(s.id) * 100.0 / (SELECT COUNT(id) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female'))) AS percentage FROM superhero s WHERE s.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') AND s.gender_id = (SELECT id FROM gender WHERE gender = 'Female')
SELECT (COUNT(s.id) * 100.0 / (SELECT COUNT(id) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female'))) AS percentage FROM superhero s WHERE s.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') AND s.gender_id = (SELECT id FROM gender WHERE gender = 'Female')
SELECT (COUNT(s.id) * 100.0 / (SELECT COUNT(id) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female'))) AS percentage FROM superhero s WHERE s.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') AND s.gender_id = (SELECT id FROM gender WHERE gender = 'Female')
SELECT (COUNT(s.id) * 100.0 / (SELECT COUNT(id) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female'))) AS percentage FROM superhero s WHERE s.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') AND s.gender_id = (SELECT id FROM gender WHERE gender = 'Female')
SELECT (COUNT(s.id) * 100.0 / (SELECT COUNT(id) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female'))) AS percentage FROM superhero s WHERE s.gender_id = (SELECT id FROM gender WHERE gender = 'Female') AND s.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')
SELECT (COUNT(s.id) * 100.0 / (SELECT COUNT(id) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female'))) AS percentage FROM superhero s WHERE s.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') AND s.gender_id = (SELECT id FROM gender WHERE gender = 'Female')
SELECT (COUNT(s.id) * 100.0 / (SELECT COUNT(id) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female'))) AS percentage FROM superhero s WHERE s.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') AND s.gender_id = (SELECT id FROM gender WHERE gender = 'Female')",SELECT (COUNT(s.id) * 100.0 / (SELECT COUNT(id) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female'))) AS percentage FROM superhero s WHERE s.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') AND s.gender_id = (SELECT id FROM gender WHERE gender = 'Female'),0.0
46,307,Name the atoms' elements that form bond TR000_2_3.,toxicology,challenging,SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR000_2_3',7,"SELECT TR000_2_3.atom.element FROM TR000_2_3.atom JOIN TR000_2_3.connected ON TR000_2_3.atom.atom_id = TR000_2_3.connected.atom_id JOIN TR000_2_3.bond ON TR000_2_3.connected.bond_id = TR000_2_3.bond.bond_id WHERE TR000_2_3.bond.bond_type = 'TR000_2_3'
SELECT TR000_2_3.atom.element FROM TR000_2_3.atom JOIN TR000_2_3.connected ON TR000_2_3.atom.atom_id = TR000_2_3.connected.atom_id JOIN TR000_2_3.bond ON TR000_2_3.connected.bond_id = TR000_2_3.bond.bond_id WHERE TR000_2_3.bond.bond_type = 'TR000_2_3'
SELECT TR000_2_3.atom.element FROM TR000_2_3.atom JOIN TR000_2_3.connected ON TR000_2_3.atom.atom_id = TR000_2_3.connected.atom_id JOIN TR000_2_3.bond ON TR000_2_3.connected.bond_id = TR000_2_3.bond.bond_id WHERE TR000_2_3.bond.bond_type = 'TR000_2_3'
SELECT TR000_2_3.atom.element FROM TR000_2_3.atom JOIN TR000_2_3.connected ON TR000_2_3.atom.atom_id = TR000_2_3.connected.atom_id JOIN TR000_2_3.bond ON TR000_2_3.connected.bond_id = TR000_2_3.bond.bond_id WHERE TR000_2_3.bond.bond_type = 'TR000_2_3'
SELECT TR000_2_3.atom.element FROM TR000_2_3.atom JOIN TR000_2_3.connected ON TR000_2_3.atom.atom_id = TR000_2_3.connected.atom_id JOIN TR000_2_3.bond ON TR000_2_3.connected.bond_id = TR000_2_3.bond.bond_id WHERE TR000_2_3.bond.bond_type = 'TR000_2_3'
SELECT TR000_2_3.atom.element FROM TR000_2_3.atom JOIN TR000_2_3.connected ON TR000_2_3.atom.atom_id = TR000_2_3.connected.atom_id JOIN TR000_2_3.bond ON TR000_2_3.connected.bond_id = TR000_2_3.bond.bond_id WHERE TR000_2_3.bond.bond_type = 'TR000_2_3'
SELECT element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'TR000_2_3'",SELECT TR000_2_3.atom.element FROM TR000_2_3.atom JOIN TR000_2_3.connected ON TR000_2_3.atom.atom_id = TR000_2_3.connected.atom_id JOIN TR000_2_3.bond ON TR000_2_3.connected.bond_id = TR000_2_3.bond.bond_id WHERE TR000_2_3.bond.bond_type = 'TR000_2_3',0.0
47,1057,Calculate the average home team goal in the 2010/2011 season in the country of Poland.,european_football_2,moderate,SELECT CAST(SUM(t2.home_team_goal) AS REAL) / COUNT(t2.id) FROM Country AS t1 INNER JOIN Match AS t2 ON t1.id = t2.country_id WHERE t1.name = 'Poland' AND t2.season = '2010/2011',7,"SELECT AVG(home_team_goal) FROM match JOIN league ON match.league_id = league.id JOIN country ON league.country_id = country.id WHERE season = '2010/2011' AND country.name = 'Poland'
SELECT AVG(home_team_goal) FROM match JOIN league ON match.league_id = league.id JOIN country ON league.country_id = country.id WHERE season = '2010/2011' AND country.name = 'Poland'
SELECT AVG(home_team_goal) FROM match JOIN league ON match.league_id = league.id JOIN country ON league.country_id = country.id WHERE season = '2010/2011' AND country.name = 'Poland'
SELECT AVG(home_team_goal) FROM match JOIN league ON match.league_id = league.id JOIN country ON league.country_id = country.id WHERE season = '2010/2011' AND country.name = 'Poland'
SELECT AVG(home_team_goal) FROM match JOIN league ON match.league_id = league.id JOIN country ON league.country_id = country.id WHERE season = '2010/2011' AND country.name = 'Poland'
SELECT AVG(home_team_goal) FROM match JOIN league ON match.league_id = league.id JOIN country ON league.country_id = country.id WHERE season = '2010/2011' AND country.name = 'Poland'
SELECT AVG(home_team_goal) FROM match JOIN league ON match.league_id = league.id JOIN country ON league.country_id = country.id WHERE season = '2010/2011' AND country.name = 'Poland'",SELECT AVG(home_team_goal) FROM match JOIN league ON match.league_id = league.id JOIN country ON league.country_id = country.id WHERE season = '2010/2011' AND country.name = 'Poland',1.0
48,1264,"Among the patients have blood clots in veins, how many of them have a normal level of complement 4?",thrombosis_prediction,moderate,SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.C4 > 10 AND T1.Diagnosis = 'APS',7,"SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE examination.diagnosis LIKE '%blood clots%' AND laboratory.c4 = 'normal'
SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE examination.diagnosis LIKE '%blood clots%' AND laboratory.c4 = 'normal'
SELECT COUNT(*) FROM laboratory JOIN patient ON laboratory.id = patient.id WHERE patient.diagnosis LIKE '%blood clots%' AND laboratory.c4 = 'normal'
SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE examination.diagnosis LIKE '%blood clots%' AND laboratory.c4 = 'normal'
SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE examination.diagnosis LIKE '%blood clots%' AND laboratory.c4 = 'normal'
SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE examination.diagnosis LIKE '%blood clots%' AND laboratory.c4 = 'normal'
SELECT COUNT(*) FROM laboratory JOIN patient ON laboratory.id = patient.id WHERE patient.diagnosis LIKE '%blood clots%' AND laboratory.c4 = 'normal'",SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE examination.diagnosis LIKE '%blood clots%' AND laboratory.c4 = 'normal',0.0
49,1115,What percentage is Landon Donovan's overall rating higher than Jordan Bowery on 2013/7/12?,european_football_2,challenging,"SELECT (SUM(CASE WHEN t1.player_name = 'Landon Donovan' THEN t2.overall_rating ELSE 0 END) * 1.0 - SUM(CASE WHEN t1.player_name = 'Jordan Bowery' THEN t2.overall_rating ELSE 0 END)) * 100 / SUM(CASE WHEN t1.player_name = 'Landon Donovan' THEN t2.overall_rating ELSE 0 END) LvsJ_percent FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_fifa_api_id = t2.player_fifa_api_id WHERE SUBSTR(t2.`date`, 1, 10) = '2013-07-12'",7,"SELECT ((pa_donovan.overall_rating - pa_bowery.overall_rating) / pa_donovan.overall_rating * 100) AS percentage_higher FROM player_attributes AS pa_donovan JOIN player_attributes AS pa_bowery ON pa_donovan.player_api_id != pa_bowery.player_api_id JOIN player AS p_donovan ON pa_donovan.player_api_id = p_donovan.player_api_id JOIN player AS p_bowery ON pa_bowery.player_api_id = p_bowery.player_api_id WHERE p_donovan.player_name = 'Landon Donovan' AND p_bowery.player_name = 'Jordan Bowery' AND pa_donovan.date = '2013/7/12' AND pa_bowery.date = '2013/7/12'
SELECT ((pa1.overall_rating - pa2.overall_rating) * 100.0 / pa2.overall_rating) AS percentage_higher FROM player_attributes AS pa1 JOIN player_attributes AS pa2 ON pa1.date = pa2.date JOIN player AS p1 ON pa1.player_api_id = p1.player_api_id JOIN player AS p2 ON pa2.player_api_id = p2.player_api_id WHERE p1.player_name = 'Landon Donovan' AND p2.player_name = 'Jordan Bowery' AND pa1.date = '2013-07-12'
SELECT ((pa1.overall_rating - pa2.overall_rating) * 100.0 / pa2.overall_rating) AS percentage_higher FROM player_attributes pa1 JOIN player_attributes pa2 ON pa1.player_api_id <> pa2.player_api_id JOIN player p1 ON pa1.player_api_id = p1.player_api_id JOIN player p2 ON pa2.player_api_id = p2.player_api_id WHERE p1.player_name = 'Landon Donovan' AND p2.player_name = 'Jordan Bowery' AND pa1.date = '2013/7/12' AND pa2.date = '2013/7/12'
SELECT ((pa1.overall_rating - pa2.overall_rating) / pa1.overall_rating * 100) AS percentage_higher FROM player_attributes AS pa1 JOIN player_attributes AS pa2 ON pa1.player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Landon Donovan') AND pa2.player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Jordan Bowery') WHERE pa1.date = '2013/7/12' AND pa2.date = '2013/7/12'
SELECT ((pa1.overall_rating - pa2.overall_rating) / pa2.overall_rating * 100) AS percentage_higher FROM player_attributes pa1 JOIN player_attributes pa2 ON pa1.player_api_id <> pa2.player_api_id JOIN player p1 ON pa1.player_api_id = p1.player_api_id JOIN player p2 ON pa2.player_api_id = p2.player_api_id WHERE p1.player_name = 'Landon Donovan' AND p2.player_name = 'Jordan Bowery' AND pa1.date = '2013-07-12'
SELECT ((pa1.overall_rating - pa2.overall_rating) * 100.0 / pa2.overall_rating) AS percentage_higher FROM player_attributes pa1 JOIN player_attributes pa2 ON pa1.player_api_id <> pa2.player_api_id JOIN player p1 ON pa1.player_api_id = p1.player_api_id JOIN player p2 ON pa2.player_api_id = p2.player_api_id WHERE p1.player_name = 'Landon Donovan' AND p2.player_name = 'Jordan Bowery' AND pa1.date = '2013-07-12' AND pa2.date = '2013-07-12'
SELECT ((pa1.overall_rating - pa2.overall_rating) * 100.0 / pa2.overall_rating) AS percentage_higher FROM player_attributes AS pa1 JOIN player_attributes AS pa2 ON pa1.date = pa2.date JOIN player AS p1 ON pa1.player_api_id = p1.player_api_id JOIN player AS p2 ON pa2.player_api_id = p2.player_api_id WHERE p1.player_name = 'Landon Donovan' AND p2.player_name = 'Jordan Bowery' AND pa1.date = '2013-07-12'",SELECT ((pa1.overall_rating - pa2.overall_rating) * 100.0 / pa2.overall_rating) AS percentage_higher FROM player_attributes AS pa1 JOIN player_attributes AS pa2 ON pa1.date = pa2.date JOIN player AS p1 ON pa1.player_api_id = p1.player_api_id JOIN player AS p2 ON pa2.player_api_id = p2.player_api_id WHERE p1.player_name = 'Landon Donovan' AND p2.player_name = 'Jordan Bowery' AND pa1.date = '2013-07-12',0.0
50,592,How many users are awarded with more than 5 badges?,codebase_community,simple,"SELECT COUNT(UserId) FROM ( SELECT UserId, COUNT(Name) AS num FROM badges GROUP BY UserId ) T WHERE T.num > 5",7,"SELECT COUNT(*) FROM users WHERE (SELECT COUNT(*) FROM badges WHERE badges.userid = users.id) > 5
SELECT COUNT(*) FROM users WHERE (SELECT COUNT(*) FROM badges WHERE badges.userid = users.id) > 5
SELECT COUNT(DISTINCT u.id) FROM users u JOIN badges b ON u.id = b.userid GROUP BY u.id HAVING COUNT(b.id) > 5
SELECT COUNT(DISTINCT u.id) FROM users u JOIN badges b ON u.id = b.userid GROUP BY u.id HAVING COUNT(b.id) > 5
SELECT COUNT(DISTINCT u.id) FROM users u JOIN (     SELECT userid     FROM badges     GROUP BY userid     HAVING COUNT(id) > 5 ) b ON u.id = b.userid
SELECT COUNT(DISTINCT u.id) FROM users u JOIN (     SELECT userid     FROM badges     GROUP BY userid     HAVING COUNT(id) > 5 ) b ON u.id = b.userid
SELECT COUNT(DISTINCT u.id) FROM users u JOIN badges b ON u.id = b.userid GROUP BY u.id HAVING COUNT(b.id) > 5",SELECT COUNT(DISTINCT u.id) FROM users u JOIN badges b ON u.id = b.userid GROUP BY u.id HAVING COUNT(b.id) > 5,1.0
51,1232,"Provide ID, sex and age of patient who has blood glucose (GLU) not within normal range but with total cholesterol(T-CHO) within normal range.",thrombosis_prediction,challenging,"SELECT DISTINCT T1.ID, T1.SEX , STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GLU >= 180 AND T2.`T-CHO` < 250",7,"SELECT p.id, p.sex, (YEAR(CURRENT_DATE) - YEAR(p.birthday)) AS age FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.glu NOT BETWEEN normal_min_glu AND normal_max_glu AND l.t_cho BETWEEN normal_min_t_cho AND normal_max_t_cho
SELECT p.id, p.sex, (YEAR(CURRENT_DATE) - YEAR(p.birthday)) AS age FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.glu NOT BETWEEN normal_min_value AND normal_max_value AND l.t-cho BETWEEN normal_min_value AND normal_max_value
SELECT p.id, p.sex, (YEAR(CURRENT_DATE) - YEAR(p.birthday)) AS age FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.glu NOT BETWEEN normal_min_glu AND normal_max_glu AND l.t_cho BETWEEN normal_min_t_cho AND normal_max_t_cho
SELECT p.id, p.sex, (YEAR(CURRENT_DATE) - YEAR(p.birthday)) AS age FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.glu NOT BETWEEN normal_min_glu AND normal_max_glu AND l.t_cho BETWEEN normal_min_t_cho AND normal_max_t_cho
SELECT p.id, p.sex, (YEAR(CURRENT_DATE) - YEAR(p.birthday)) AS age FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.glu NOT BETWEEN normal_min_glu AND normal_max_glu AND l.t_cho BETWEEN normal_min_t_cho AND normal_max_t_cho
SELECT p.id, p.sex, (YEAR(CURRENT_DATE) - YEAR(p.birthday)) AS age FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.glu NOT BETWEEN normal_min_glu AND normal_max_glu AND l.t_cho BETWEEN normal_min_t_cho AND normal_max_t_cho
SELECT p.id, p.sex, (YEAR(CURRENT_DATE) - YEAR(p.birthday)) AS age FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.glu NOT BETWEEN normal_min_glu AND normal_max_glu AND l.t_cho BETWEEN normal_min_t_cho AND normal_max_t_cho","SELECT p.id, p.sex, (YEAR(CURRENT_DATE) - YEAR(p.birthday)) AS age FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.glu NOT BETWEEN normal_min_glu AND normal_max_glu AND l.t_cho BETWEEN normal_min_t_cho AND normal_max_t_cho",0.0
52,487,What is the percentage of incredibly powerful cards in the set Coldsnap?,card_games,challenging,SELECT CAST(SUM(CASE WHEN T1.cardKingdomFoilId IS NOT NULL AND T1.cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE T2.name = 'Coldsnap',7,"SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'Coldsnap') AS percentage FROM cards WHERE setcode = 'Coldsnap' AND (power IS NOT NULL OR toughness IS NOT NULL)
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'Coldsnap') AS percentage FROM cards WHERE setcode = 'Coldsnap' AND (power IS NOT NULL OR toughness IS NOT NULL)
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'Coldsnap') AS percentage_powerful_cards FROM cards WHERE setcode = 'Coldsnap' AND text LIKE '%incredibly powerful%'
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'Coldsnap') AS percentage_of_powerful_cards FROM cards WHERE setcode = 'Coldsnap' AND text LIKE '%incredibly powerful%'
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'Coldsnap') AS percentage_powerful_cards FROM cards WHERE setcode = 'Coldsnap' AND text LIKE '%incredibly powerful%'
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'Coldsnap') AS percentage_powerful_cards FROM cards WHERE setcode = 'Coldsnap' AND text LIKE '%incredibly powerful%'
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'Coldsnap') AS percentage_of_powerful_cards FROM cards WHERE setcode = 'Coldsnap' AND text LIKE '%incredibly powerful%'",SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'Coldsnap') AS percentage_powerful_cards FROM cards WHERE setcode = 'Coldsnap' AND text LIKE '%incredibly powerful%',0.0
53,1070,Which country is the league Italy Serie A from?,european_football_2,simple,SELECT t1.name FROM Country AS t1 INNER JOIN League AS t2 ON t1.id = t2.country_id WHERE t2.name = 'Italy Serie A',7,"SELECT country.name FROM league JOIN country ON league.country_id = country.id WHERE league.name = 'Italy Serie A'
SELECT country.name FROM league JOIN country ON league.country_id = country.id WHERE league.name = 'Italy Serie A'
SELECT country.name FROM league JOIN country ON league.country_id = country.id WHERE league.name = 'Italy Serie A'
SELECT country.name FROM league JOIN country ON league.country_id = country.id WHERE league.name = 'Italy Serie A'
SELECT country.name FROM league JOIN country ON league.country_id = country.id WHERE league.name = 'Italy Serie A'
SELECT country.name FROM league JOIN country ON league.country_id = country.id WHERE league.name = 'Italy Serie A'
SELECT country.name FROM league JOIN country ON league.country_id = country.id WHERE league.name = 'Italy Serie A'",SELECT country.name FROM league JOIN country ON league.country_id = country.id WHERE league.name = 'Italy Serie A',1.0
54,639,"Based on posts posted by Community, calculate the percentage of posts that use the R language.",codebase_community,challenging,"SELECT CAST(SUM(IIF(T3.TagName = 'r', 1, 0)) AS REAL) * 100 / COUNT(T1.Id) FROM users AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.UserId INNER JOIN tags AS T3 ON T3.ExcerptPostId = T2.PostId WHERE T1.DisplayName = 'Community'",7,"NULL
NULL
NULL
NULL
NULL
NULL
NULL",,0.0
55,994,"Which constructor scored most points from Monaco Grand Prix between 1980 and 2010? List the score, name and nationality of this team.",formula_1,challenging,"SELECT SUM(T1.points), T2.name, T2.nationality FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId INNER JOIN races AS T3 ON T3.raceid = T1.raceid WHERE T3.name = 'Monaco Grand Prix' AND T3.year BETWEEN 1980 AND 2010 GROUP BY T2.name ORDER BY SUM(T1.points) DESC LIMIT 1",7,"SELECT c.name, c.nationality, cr.points FROM constructorresults cr JOIN races r ON cr.raceid = r.raceid JOIN constructors c ON cr.constructorid = c.constructorid JOIN circuits ci ON r.circuitid = ci.circuitid WHERE ci.name = 'Monaco Grand Prix' AND r.year BETWEEN 1980 AND 2010 ORDER BY cr.points DESC LIMIT 1
SELECT c.name, c.nationality, cr.points FROM constructorresults cr JOIN races r ON cr.raceid = r.raceid JOIN constructors c ON cr.constructorid = c.constructorid JOIN circuits ci ON r.circuitid = ci.circuitid WHERE ci.name = 'Monaco Grand Prix' AND r.year BETWEEN 1980 AND 2010 ORDER BY cr.points DESC LIMIT 1
SELECT c.name, c.nationality, cr.points FROM constructorresults cr JOIN races r ON cr.raceid = r.raceid JOIN constructors c ON cr.constructorid = c.constructorid JOIN circuits ci ON r.circuitid = ci.circuitid WHERE ci.name = 'Monaco Grand Prix' AND r.year BETWEEN 1980 AND 2010 ORDER BY cr.points DESC LIMIT 1
SELECT c.name, c.nationality, cr.points FROM constructorresults cr JOIN races r ON cr.raceid = r.raceid JOIN constructors c ON cr.constructorid = c.constructorid JOIN circuits ci ON r.circuitid = ci.circuitid WHERE ci.name = 'Monaco Grand Prix' AND r.year BETWEEN 1980 AND 2010 ORDER BY cr.points DESC LIMIT 1
SELECT c.name, c.nationality, cr.points FROM constructorresults cr JOIN races r ON cr.raceid = r.raceid JOIN constructors c ON cr.constructorid = c.constructorid JOIN circuits ci ON r.circuitid = ci.circuitid WHERE ci.name = 'Monaco Grand Prix' AND r.year BETWEEN 1980 AND 2010 ORDER BY cr.points DESC LIMIT 1
SELECT c.name, c.nationality, cr.points FROM constructorresults cr JOIN races r ON cr.raceid = r.raceid JOIN constructors c ON cr.constructorid = c.constructorid JOIN circuits ci ON r.circuitid = ci.circuitid WHERE ci.name = 'Monaco Grand Prix' AND r.year BETWEEN 1980 AND 2010 ORDER BY cr.points DESC LIMIT 1
SELECT c.name, c.nationality, cr.points FROM constructorresults cr JOIN races r ON cr.raceid = r.raceid JOIN constructors c ON cr.constructorid = c.constructorid JOIN circuits ci ON r.circuitid = ci.circuitid WHERE ci.name = 'Monaco Grand Prix' AND r.year BETWEEN 1980 AND 2010 ORDER BY cr.points DESC LIMIT 1","SELECT c.name, c.nationality, cr.points FROM constructorresults cr JOIN races r ON cr.raceid = r.raceid JOIN constructors c ON cr.constructorid = c.constructorid JOIN circuits ci ON r.circuitid = ci.circuitid WHERE ci.name = 'Monaco Grand Prix' AND r.year BETWEEN 1980 AND 2010 ORDER BY cr.points DESC LIMIT 1",0.0
56,1026,Which home team had lost the fewest matches in the 2016 season?,european_football_2,moderate,SELECT teamDetails.team_long_name FROM Match AS matchData INNER JOIN Team AS teamDetails ON matchData.home_team_api_id = teamDetails.team_api_id WHERE matchData.season = '2015/2016' AND matchData.home_team_goal - matchData.away_team_goal < 0 GROUP BY matchData.home_team_api_id ORDER BY COUNT(*) ASC LIMIT 1,7,"SELECT team.team_long_name FROM match JOIN team ON match.home_team_api_id = team.team_api_id WHERE match.season = '2016' AND match.home_team_goal < match.away_team_goal GROUP BY team.team_long_name ORDER BY COUNT(*) ASC LIMIT 1
SELECT team.team_long_name FROM match JOIN team ON match.home_team_api_id = team.team_api_id WHERE match.season = '2016' AND match.home_team_goal < match.away_team_goal GROUP BY team.team_long_name ORDER BY COUNT(*) ASC LIMIT 1
SELECT team.team_long_name FROM match JOIN team ON match.home_team_api_id = team.team_api_id WHERE match.season = '2016' AND match.home_team_goal < match.away_team_goal GROUP BY team.team_long_name ORDER BY COUNT(*) ASC LIMIT 1
SELECT team.team_long_name FROM match JOIN team ON match.home_team_api_id = team.team_api_id WHERE match.season = '2016' AND match.home_team_goal < match.away_team_goal GROUP BY team.team_long_name ORDER BY COUNT(*) ASC LIMIT 1
SELECT team.team_long_name FROM match JOIN team ON match.home_team_api_id = team.team_api_id WHERE match.season = '2016' AND match.home_team_goal < match.away_team_goal GROUP BY team.team_long_name ORDER BY COUNT(*) ASC LIMIT 1
SELECT team.team_long_name FROM match JOIN team ON match.home_team_api_id = team.team_api_id WHERE match.season = '2016' AND match.home_team_goal < match.away_team_goal GROUP BY team.team_long_name ORDER BY COUNT(*) ASC LIMIT 1
SELECT team.team_long_name FROM match JOIN team ON match.home_team_api_id = team.team_api_id WHERE match.season = '2016' AND match.home_team_goal < match.away_team_goal GROUP BY team.team_long_name ORDER BY COUNT(*) ASC LIMIT 1",SELECT team.team_long_name FROM match JOIN team ON match.home_team_api_id = team.team_api_id WHERE match.season = '2016' AND match.home_team_goal < match.away_team_goal GROUP BY team.team_long_name ORDER BY COUNT(*) ASC LIMIT 1,0.0
57,1023,"Among the players with an overall rating between 60 to 65, how many players whose going to be in all of your attack moves instead of defensing?",european_football_2,moderate,SELECT COUNT(id) FROM Player_Attributes WHERE overall_rating BETWEEN 60 AND 65 AND defensive_work_rate = 'low',7,"SELECT COUNT(*) FROM player_attributes WHERE overall_rating BETWEEN 60 AND 65 AND attacking_work_rate = 'High' AND defensive_work_rate = 'Low'
SELECT COUNT(*) FROM player_attributes WHERE overall_rating BETWEEN 60 AND 65 AND attacking_work_rate <> 'defensive_work_rate'
SELECT COUNT(*) FROM player_attributes WHERE overall_rating BETWEEN 60 AND 65 AND attacking_work_rate = 'High' AND defensive_work_rate = 'Low'
SELECT COUNT(*) FROM player_attributes WHERE overall_rating BETWEEN 60 AND 65 AND attacking_work_rate = 'High' AND defensive_work_rate = 'Low'
SELECT COUNT(*) FROM player_attributes WHERE overall_rating BETWEEN 60 AND 65 AND attacking_work_rate = 'High' AND defensive_work_rate = 'Low'
SELECT COUNT(*) FROM player_attributes WHERE overall_rating BETWEEN 60 AND 65 AND attacking_work_rate = 'High' AND defensive_work_rate = 'Low'
SELECT COUNT(*) FROM player_attributes WHERE overall_rating BETWEEN 60 AND 65 AND attacking_work_rate = 'High' AND defensive_work_rate = 'Low'",SELECT COUNT(*) FROM player_attributes WHERE overall_rating BETWEEN 60 AND 65 AND attacking_work_rate = 'High' AND defensive_work_rate = 'Low',0.0
58,371,What is the percentage of cards whose language is French among the Story Spotlight cards?,card_games,challenging,SELECT CAST(SUM(CASE WHEN T2.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.isStorySpotlight = 1,7,"SELECT (COUNT(c.id) * 100.0 / (SELECT COUNT(*) FROM cards WHERE isstoryspotlight = 1)) AS percentage FROM cards c JOIN foreign_data f ON c.id = f.id WHERE f.language = 'French' AND c.isstoryspotlight = 1
SELECT (COUNT(cards.id) * 100.0 / (SELECT COUNT(*) FROM cards WHERE isstoryspotlight = 1)) AS percentage FROM cards JOIN foreign_data ON cards.id = foreign_data.id WHERE foreign_data.language = 'French' AND cards.isstoryspotlight = 1
SELECT (COUNT(c.id) * 100.0 / (SELECT COUNT(*) FROM cards WHERE isstoryspotlight = 1)) AS percentage FROM cards c JOIN foreign_data f ON c.id = f.id WHERE f.language = 'French' AND c.isstoryspotlight = 1
SELECT (COUNT(cards.id) * 100.0 / (SELECT COUNT(*) FROM cards WHERE isstoryspotlight = 1)) AS percentage FROM cards JOIN foreign_data ON cards.id = foreign_data.id WHERE foreign_data.language = 'French' AND cards.isstoryspotlight = 1
SELECT (COUNT(cards.id) * 100.0 / (SELECT COUNT(*) FROM cards WHERE isstoryspotlight = 1)) AS percentage FROM cards JOIN foreign_data ON cards.id = foreign_data.id WHERE foreign_data.language = 'French' AND cards.isstoryspotlight = 1
SELECT (COUNT(c.id) * 100.0 / (SELECT COUNT(*) FROM cards WHERE isstoryspotlight = 1)) AS percentage FROM cards c JOIN foreign_data f ON c.id = f.id WHERE f.language = 'French' AND c.isstoryspotlight = 1
SELECT (COUNT(cards.id) * 100.0 / (SELECT COUNT(*) FROM cards WHERE isstoryspotlight = 1)) AS percentage FROM cards JOIN foreign_data ON cards.id = foreign_data.id WHERE foreign_data.language = 'French' AND cards.isstoryspotlight = 1",SELECT (COUNT(cards.id) * 100.0 / (SELECT COUNT(*) FROM cards WHERE isstoryspotlight = 1)) AS percentage FROM cards JOIN foreign_data ON cards.id = foreign_data.id WHERE foreign_data.language = 'French' AND cards.isstoryspotlight = 1,0.0
59,772,"List the eyes, hair and skin colour of all female superheroes published by Dark Horse Comics.",superhero,challenging,"SELECT T1.eye_colour_id, T1.hair_colour_id, T1.skin_colour_id FROM superhero AS T1 INNER JOIN publisher AS T2 ON T2.id = T1.publisher_id INNER JOIN gender AS T3 ON T3.id = T1.gender_id WHERE T2.publisher_name = 'Dark Horse Comics' AND T3.gender = 'Female'",7,"SELECT s.eye_colour_id, s.hair_colour_id, s.skin_colour_id FROM superhero s JOIN gender g ON s.gender_id = g.id JOIN publisher p ON s.publisher_id = p.id WHERE g.gender = 'female' AND p.publisher_name = 'Dark Horse Comics'
SELECT s.eye_colour_id, s.hair_colour_id, s.skin_colour_id FROM superhero s JOIN gender g ON s.gender_id = g.id JOIN publisher p ON s.publisher_id = p.id WHERE g.gender = 'female' AND p.publisher_name = 'Dark Horse Comics'
SELECT s.eye_colour_id, s.hair_colour_id, s.skin_colour_id FROM superhero s JOIN gender g ON s.gender_id = g.id JOIN publisher p ON s.publisher_id = p.id WHERE g.gender = 'female' AND p.publisher_name = 'Dark Horse Comics'
SELECT s.eye_colour_id, s.hair_colour_id, s.skin_colour_id FROM superhero s JOIN gender g ON s.gender_id = g.id JOIN publisher p ON s.publisher_id = p.id WHERE g.gender = 'female' AND p.publisher_name = 'Dark Horse Comics'
SELECT e.colour AS eye_colour, h.colour AS hair_colour, s.colour AS skin_colour FROM superhero sh JOIN colour e ON sh.eye_colour_id = e.id JOIN colour h ON sh.hair_colour_id = h.id JOIN colour s ON sh.skin_colour_id = s.id JOIN gender g ON sh.gender_id = g.id JOIN publisher p ON sh.publisher_id = p.id WHERE g.gender = 'female' AND p.publisher_name = 'Dark Horse Comics'
SELECT e.colour AS eye_colour, h.colour AS hair_colour, s.colour AS skin_colour FROM superhero sh JOIN colour e ON sh.eye_colour_id = e.id JOIN colour h ON sh.hair_colour_id = h.id JOIN colour s ON sh.skin_colour_id = s.id JOIN gender g ON sh.gender_id = g.id JOIN publisher p ON sh.publisher_id = p.id WHERE g.gender = 'female' AND p.publisher_name = 'Dark Horse Comics'
SELECT s.eye_colour_id, s.hair_colour_id, s.skin_colour_id FROM superhero s JOIN gender g ON s.gender_id = g.id JOIN publisher p ON s.publisher_id = p.id WHERE g.gender = 'female' AND p.publisher_name = 'Dark Horse Comics'","SELECT s.eye_colour_id, s.hair_colour_id, s.skin_colour_id FROM superhero s JOIN gender g ON s.gender_id = g.id JOIN publisher p ON s.publisher_id = p.id WHERE g.gender = 'female' AND p.publisher_name = 'Dark Horse Comics'",0.0
60,232,Please list top three molecules that have single bonds between two atoms and are not carcinogenic in alphabetical order.,toxicology,moderate,SELECT DISTINCT T2.molecule_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' AND T2.label = '-' ORDER BY T2.molecule_id LIMIT 3,7,"SELECT molecule.label FROM molecule JOIN connected ON molecule.molecule_id = connected.molecule_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'single' AND molecule.label NOT LIKE '%carcinogenic%' GROUP BY molecule.label ORDER BY molecule.label ASC LIMIT 3
SELECT molecule.label FROM molecule JOIN connected ON molecule.molecule_id = connected.molecule_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'single' AND molecule.label NOT LIKE '%carcinogenic%' GROUP BY molecule.label HAVING COUNT(DISTINCT connected.atom_id, connected.atom_id2) = 2 ORDER BY molecule.label LIMIT 3
SELECT molecule.label FROM molecule JOIN connected ON molecule.molecule_id = connected.molecule_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'single' AND molecule.label NOT LIKE '%carcinogenic%' GROUP BY molecule.label ORDER BY molecule.label ASC LIMIT 3
SELECT molecule.label FROM molecule JOIN connected ON molecule.molecule_id = connected.molecule_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'single' AND molecule.label NOT LIKE '%carcinogenic%' GROUP BY molecule.label ORDER BY molecule.label ASC LIMIT 3
SELECT molecule.label FROM molecule JOIN connected ON molecule.molecule_id = connected.molecule_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'single' AND molecule.label NOT LIKE '%carcinogenic%' GROUP BY molecule.label HAVING COUNT(DISTINCT connected.atom_id, connected.atom_id2) = 2 ORDER BY molecule.label LIMIT 3
SELECT molecule.label FROM molecule JOIN connected ON molecule.molecule_id = connected.molecule_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'single' AND molecule.label NOT LIKE '%carcinogenic%' GROUP BY molecule.label HAVING COUNT(DISTINCT connected.atom_id, connected.atom_id2) = 2 ORDER BY molecule.label LIMIT 3
SELECT molecule.label FROM molecule JOIN connected ON molecule.molecule_id = connected.molecule_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'single' AND molecule.label NOT LIKE '%carcinogenic%' GROUP BY molecule.label ORDER BY molecule.label ASC LIMIT 3",SELECT molecule.label FROM molecule JOIN connected ON molecule.molecule_id = connected.molecule_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'single' AND molecule.label NOT LIKE '%carcinogenic%' GROUP BY molecule.label ORDER BY molecule.label ASC LIMIT 3,0.0
61,1297,"For the patients whose total cholesterol is higher than normal, how many of them have a negative measure of degree of coagulation?",thrombosis_prediction,moderate,SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.`T-CHO` >= 250 AND T3.KCT = '-',7,"SELECT COUNT(*) FROM patients JOIN laboratory ON patients.id = laboratory.id WHERE laboratory.t_cho > (SELECT AVG(t_cho) FROM laboratory) AND laboratory.aptt < 0
SELECT COUNT(*) FROM patients JOIN laboratory ON patients.id = laboratory.id WHERE laboratory.t_cho > (SELECT AVG(t_cho) FROM laboratory) AND laboratory.aptt < 0
SELECT COUNT(*) FROM patients JOIN laboratory ON patients.id = laboratory.id WHERE laboratory.t_cho > (SELECT AVG(t_cho) FROM laboratory) AND laboratory.aptt < 0
SELECT COUNT(*) FROM patients JOIN laboratory ON patients.id = laboratory.id WHERE laboratory.t_cho > (SELECT AVG(t_cho) FROM laboratory) AND laboratory.aptt < 0
SELECT COUNT(*) FROM patients JOIN laboratory ON patients.id = laboratory.id WHERE laboratory.t_cho > (SELECT AVG(t_cho) FROM laboratory) AND laboratory.aptt < 0
SELECT COUNT(*) FROM patients JOIN laboratory ON patients.id = laboratory.id WHERE laboratory.t_cho > (SELECT AVG(t_cho) FROM laboratory) AND laboratory.aptt < 0
SELECT COUNT(*) FROM patients JOIN laboratory ON patients.id = laboratory.id WHERE laboratory.t_cho > (SELECT AVG(t_cho) FROM laboratory) AND laboratory.aptt < 0",SELECT COUNT(*) FROM patients JOIN laboratory ON patients.id = laboratory.id WHERE laboratory.t_cho > (SELECT AVG(t_cho) FROM laboratory) AND laboratory.aptt < 0,0.0
62,171,What was the difference in the number of crimes committed in East and North Bohemia in 1996?,financial,moderate,"SELECT SUM(IIF(A3 = 'east Bohemia', A16, 0)) - SUM(IIF(A3 = 'north Bohemia', A16, 0)) FROM district",7,"SELECT COUNT(*) FROM trans WHERE district_id IN (SELECT district_id FROM district WHERE a2 = 'East Bohemia' OR a2 = 'North Bohemia') AND date LIKE '1996%') -     (SELECT COUNT(*) FROM trans WHERE district_id IN (SELECT district_id FROM district WHERE a2 = 'East Bohemia') AND date LIKE '1996%')     AS difference_in_crimes
SELECT t.account_id      FROM trans t      WHERE strftime('%Y', t.date) = '1996'      UNION ALL      SELECT o.account_id      FROM order o      WHERE strftime('%Y', o.date) = '1996'      UNION ALL      SELECT l.account_id      FROM loan l      WHERE strftime('%Y', l.date) = '1996') crimes JOIN     account a ON crimes.account_id = a.account_id JOIN     district d ON a.district_id = d.district_id
SELECT COUNT(*) FROM trans WHERE district_id IN (SELECT district_id FROM district WHERE a2 = 'East Bohemia' OR a2 = 'North Bohemia') AND date LIKE '1996%') -     (SELECT COUNT(*) FROM trans WHERE district_id IN (SELECT district_id FROM district WHERE a2 = 'East Bohemia') AND date LIKE '1996%')     AS difference_in_crimes
SELECT COUNT(*) FROM trans WHERE district_id IN (SELECT district_id FROM district WHERE a2 = 'East Bohemia' OR a2 = 'North Bohemia') AND strftime('%Y', date) = '1996')     -     (SELECT COUNT(*) FROM trans WHERE district_id IN (SELECT district_id FROM district WHERE a2 = 'East Bohemia') AND strftime('%Y', date) = '1996')     AS difference
SELECT t.account_id, d.a3      FROM trans t      JOIN account a ON t.account_id = a.account_id      JOIN district d ON a.district_id = d.district_id      WHERE strftime('%Y', t.date) = '1996'      UNION ALL      SELECT o.account_id, d.a3      FROM order o      JOIN account a ON o.account_id = a.account_id      JOIN district d ON a.district_id = d.district_id      WHERE strftime('%Y', o.date) = '1996'      UNION ALL      SELECT l.account_id, d.a3      FROM loan l      JOIN account a ON l.account_id = a.account_id      JOIN district d ON a.district_id = d.district_id      WHERE strftime('%Y', l.
SELECT COUNT(*) FROM trans WHERE district_id IN (SELECT district_id FROM district WHERE a2 = 'East Bohemia' OR a2 = 'North Bohemia') AND date LIKE '1996%') -     (SELECT COUNT(*) FROM trans WHERE district_id IN (SELECT district_id FROM district WHERE a2 = 'East Bohemia') AND date LIKE '1996%')     AS difference_in_crimes
SELECT COUNT(*) FROM trans WHERE district_id IN (SELECT district_id FROM district WHERE a2 = 'East Bohemia' OR a2 = 'North Bohemia') AND date LIKE '1996%') -     (SELECT COUNT(*) FROM trans WHERE district_id IN (SELECT district_id FROM district WHERE a2 = 'East Bohemia') AND date LIKE '1996%') AS difference_in_crimes",SELECT COUNT(*) FROM trans WHERE district_id IN (SELECT district_id FROM district WHERE a2 = 'East Bohemia' OR a2 = 'North Bohemia') AND date LIKE '1996%') -     (SELECT COUNT(*) FROM trans WHERE district_id IN (SELECT district_id FROM district WHERE a2 = 'East Bohemia') AND date LIKE '1996%')     AS difference_in_crimes,0.0
63,679,Which post has the highest score? Please give its id and title's name.,codebase_community,simple,"SELECT T1.Id, T2.Title FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId ORDER BY T2.Score DESC LIMIT 1",7,"SELECT id, title FROM posts ORDER BY score DESC LIMIT 1
SELECT id, title FROM posts ORDER BY score DESC LIMIT 1
SELECT id, title FROM posts ORDER BY score DESC LIMIT 1
SELECT id, title FROM posts ORDER BY score DESC LIMIT 1
SELECT id, title FROM posts ORDER BY score DESC LIMIT 1
SELECT id, title FROM posts ORDER BY score DESC LIMIT 1
SELECT id, title FROM posts ORDER BY score DESC LIMIT 1","SELECT id, title FROM posts ORDER BY score DESC LIMIT 1",0.0
64,1437,Which members who were approved from 1/10/2019 to 11/19/2019? Please identify the member who attended the event and the link to their event.,student_club,challenging,"SELECT DISTINCT T1.link_to_member, T3.link_to_event FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN attendance AS T3 ON T2.member_id = T3.link_to_member WHERE date(SUBSTR(T1.expense_date, 1, 10)) BETWEEN '2019-01-10' AND '2019-11-19' AND T1.approved = 'true'",7,"SELECT member.first_name, member.last_name, attendance.link_to_event FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN expense ON member.member_id = expense.link_to_member WHERE expense.approved = 1 AND expense.expense_date BETWEEN '2019-10-01' AND '2019-11-19'
SELECT member.first_name, member.last_name, attendance.link_to_event FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN expense ON member.member_id = expense.link_to_member WHERE expense.approved = 1 AND expense.expense_date BETWEEN '2019-10-01' AND '2019-11-19'
SELECT member.first_name, member.last_name, attendance.link_to_event FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN expense ON member.member_id = expense.link_to_member WHERE expense.approved = 1 AND expense.expense_date BETWEEN '2019-10-01' AND '2019-11-19'
SELECT member.first_name, member.last_name, attendance.link_to_event FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN expense ON member.member_id = expense.link_to_member WHERE expense.approved = 1 AND expense.expense_date BETWEEN '2019-10-01' AND '2019-11-19'
SELECT member.first_name, member.last_name, attendance.link_to_event FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN expense ON member.member_id = expense.link_to_member WHERE expense.approved = 1 AND expense.expense_date BETWEEN '2019-10-01' AND '2019-11-19'
SELECT member.first_name, member.last_name, attendance.link_to_event FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN expense ON member.member_id = expense.link_to_member WHERE expense.approved = 1 AND expense.expense_date BETWEEN '2019-10-01' AND '2019-11-19'
SELECT member.member_id, member.first_name, member.last_name, attendance.link_to_event FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN expense ON member.member_id = expense.link_to_member WHERE expense.approved = 1 AND expense.expense_date BETWEEN '2019-10-01' AND '2019-11-19'","SELECT member.first_name, member.last_name, attendance.link_to_event FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN expense ON member.member_id = expense.link_to_member WHERE expense.approved = 1 AND expense.expense_date BETWEEN '2019-10-01' AND '2019-11-19'",0.0
65,328,"List all the elements with double bond, consisted in molecule TR024.",toxicology,challenging,SELECT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR024' AND T2.bond_type = '=',7,"SELECT atom.element FROM atom JOIN bond ON atom.bond_id = bond.bond_id JOIN connected ON atom.atom_id = connected.atom_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE bond.bond_type = 'double bond' AND molecule.label = 'TR024'
SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE b.bond_type = 'double bond' AND m.label = 'TR024'
SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE b.bond_type = 'double bond' AND m.label = 'TR024'
SELECT a.atom_id, a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE b.bond_type = 'double bond' AND m.label = 'TR024'
SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE b.bond_type = 'double bond' AND m.label = 'TR024'
SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE b.bond_type = 'double bond' AND m.label = 'TR024'
SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE b.bond_type = 'double bond' AND m.label = 'TR024'",SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE b.bond_type = 'double bond' AND m.label = 'TR024',0.0
66,1243,"For all patients who are older than 55 years old, what is the percentage of female who has abnormal prothrombin time (PT)?",thrombosis_prediction,challenging,"SELECT CAST(SUM(CASE WHEN T2.PT >= 14 AND T1.SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) > 55",7,"SELECT (COUNT(DISTINCT p.id) * 100.0 / (SELECT COUNT(DISTINCT p.id) FROM patient p WHERE p.birthday < DATE('now', '-55 years'))) AS percentage_female_abnormal_pt FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.birthday < DATE('now', '-55 years') AND p.sex = 'female' AND l.pt NOT IN (SELECT AVG(pt) FROM laboratory)
SELECT (COUNT(DISTINCT p.id) * 100.0 / (SELECT COUNT(DISTINCT p.id) FROM patient p WHERE p.birthday < DATE('now', '-55 years'))) AS percentage_female_abnormal_pt FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.birthday < DATE('now', '-55 years') AND p.sex = 'female' AND l.pt NOT IN (SELECT AVG(pt) FROM laboratory)
SELECT (COUNT(DISTINCT p.id) * 100.0 / (SELECT COUNT(DISTINCT p.id) FROM patient p WHERE p.birthday < DATE('now', '-55 years'))) AS percentage_female_abnormal_pt FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.birthday < DATE('now', '-55 years') AND p.sex = 'female' AND l.pt NOT IN (SELECT AVG(pt) FROM laboratory)
SELECT (COUNT(DISTINCT p.id) * 100.0 / (SELECT COUNT(DISTINCT p.id) FROM patient p WHERE p.birthday < DATE('now', '-55 years'))) AS percentage_female_abnormal_pt FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.birthday < DATE('now', '-55 years') AND p.sex = 'female' AND l.pt NOT IN (SELECT AVG(pt) FROM laboratory)
SELECT COUNT(DISTINCT p.id) * 100.0 / (SELECT COUNT(DISTINCT p.id) FROM patient p WHERE p.birthday < DATE('now', '-55 years')) AS percentage FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'female' AND p.birthday < DATE('now', '-55 years') AND l.pt NOT BETWEEN 11.0 AND 13.5
SELECT (COUNT(DISTINCT p.id) * 100.0 / (SELECT COUNT(DISTINCT p.id) FROM patient p WHERE p.birthday < DATE('now', '-55 years'))) AS percentage_female_abnormal_pt FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.birthday < DATE('now', '-55 years') AND p.sex = 'female' AND l.pt NOT IN (SELECT AVG(pt) FROM laboratory)
SELECT (COUNT(DISTINCT p.id) * 100.0 / (SELECT COUNT(DISTINCT p.id) FROM patient p WHERE p.birthday < DATE('now', '-55 years'))) AS percentage_female_abnormal_pt FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.birthday < DATE('now', '-55 years') AND p.sex = 'female' AND l.pt NOT IN (SELECT AVG(pt) FROM laboratory)","SELECT (COUNT(DISTINCT p.id) * 100.0 / (SELECT COUNT(DISTINCT p.id) FROM patient p WHERE p.birthday < DATE('now', '-55 years'))) AS percentage_female_abnormal_pt FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.birthday < DATE('now', '-55 years') AND p.sex = 'female' AND l.pt NOT IN (SELECT AVG(pt) FROM laboratory)",0.0
67,1292,What is the anti Cardiolipin antibody concentration of the female patient with the highest uric acid level in the normal range?,thrombosis_prediction,challenging,"SELECT T3.`aCL IgG`, T3.`aCL IgM`, T3.`aCL IgA` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T3.ID = T2.ID WHERE T1.SEX = 'F' AND T2.UA > 6.5 ORDER BY T2.UA DESC LIMIT 1",7,"SELECT acl_igg FROM examination JOIN patient ON examination.id = patient.id JOIN laboratory ON examination.id = laboratory.id WHERE patient.sex = 'female' AND laboratory.ua = (SELECT MAX(ua) FROM laboratory WHERE ua <= 7.0) ORDER BY laboratory.ua DESC LIMIT 1
SELECT acl_igg FROM examination JOIN patient ON examination.id = patient.id JOIN laboratory ON examination.id = laboratory.id WHERE patient.sex = 'female' AND laboratory.ua = (SELECT MAX(ua) FROM laboratory WHERE ua <= 6.0) ORDER BY laboratory.ua DESC LIMIT 1
SELECT acl_igg FROM examination JOIN patient ON examination.id = patient.id JOIN laboratory ON examination.id = laboratory.id WHERE patient.sex = 'female' AND laboratory.ua = (SELECT MAX(ua) FROM laboratory WHERE ua <= 6.0) ORDER BY laboratory.ua DESC LIMIT 1
SELECT acl_igg, acl_igm, acl_iga FROM examination JOIN patient ON examination.id = patient.id JOIN laboratory ON examination.id = laboratory.id WHERE patient.sex = 'female' AND laboratory.ua = (SELECT MAX(ua) FROM laboratory WHERE ua <= 7.0) ORDER BY laboratory.ua DESC LIMIT 1
SELECT acl_igg FROM examination JOIN patient ON examination.id = patient.id JOIN laboratory ON examination.id = laboratory.id WHERE patient.sex = 'female' AND laboratory.ua = (SELECT MAX(ua) FROM laboratory WHERE ua <= 6.0) ORDER BY laboratory.ua DESC LIMIT 1
SELECT acl_igg FROM examination JOIN patient ON examination.id = patient.id JOIN laboratory ON examination.id = laboratory.id WHERE patient.sex = 'female' AND laboratory.ua = (SELECT MAX(ua) FROM laboratory WHERE ua <= 7.0) ORDER BY laboratory.ua DESC LIMIT 1
SELECT acl_igg FROM examination JOIN patient ON examination.id = patient.id JOIN laboratory ON examination.id = laboratory.id WHERE patient.sex = 'female' AND laboratory.ua = (SELECT MAX(ua) FROM laboratory WHERE ua <= normal_range_upper_limit) LIMIT 1",SELECT acl_igg FROM examination JOIN patient ON examination.id = patient.id JOIN laboratory ON examination.id = laboratory.id WHERE patient.sex = 'female' AND laboratory.ua = (SELECT MAX(ua) FROM laboratory WHERE ua <= 6.0) ORDER BY laboratory.ua DESC LIMIT 1,0.0
68,198,On average how many carcinogenic molecules are single bonded?,toxicology,challenging,"SELECT AVG(single_bond_count) FROM (SELECT T3.molecule_id, COUNT(T1.bond_type) AS single_bond_count FROM bond AS T1  INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN molecule AS T3 ON T3.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' AND T3.label = '+' GROUP BY T3.molecule_id) AS subquery",7,"SELECT AVG(COUNT(b.bond_id)) AS avg_carcinogenic_bonds FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = 'single' AND m.label = 'carcinogenic'
SELECT AVG(COUNT(b.bond_id)) AS avg_carcinogenic_bonds FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE a.element = 'carbon' AND b.bond_type = 'single' AND m.label = 'carcinogenic'
SELECT AVG(COUNT(b.bond_id)) AS avg_carcinogenic_bonds FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE a.element = 'carbon' AND b.bond_type = 'single' AND m.label = 'carcinogenic'
SELECT AVG(COUNT(b.bond_id)) AS avg_carcinogenic_bonds FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE a.element = 'carbon' AND b.bond_type = 'single' AND m.label = 'carcinogenic'
SELECT AVG(COUNT(b.bond_id)) AS avg_carcinogenic_bonds FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = 'single' AND m.label = 'carcinogenic'
SELECT AVG(COUNT(b.bond_id)) AS avg_carcinogenic_bonds FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE a.element = 'carbon' AND b.bond_type = 'single' AND m.label = 'carcinogenic'
SELECT AVG(COUNT(b.bond_id)) AS avg_carcinogenic_bonds FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = 'single' AND m.label = 'carcinogenic'",SELECT AVG(COUNT(b.bond_id)) AS avg_carcinogenic_bonds FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE a.element = 'carbon' AND b.bond_type = 'single' AND m.label = 'carcinogenic',0.0
69,660,What is the owner user id of the most valuable post?,codebase_community,simple,SELECT OwnerUserId FROM posts WHERE FavoriteCount = ( SELECT MAX(FavoriteCount) FROM posts ),7,"SELECT owneruserid FROM posts ORDER BY score DESC LIMIT 1
SELECT owneruserid FROM posts ORDER BY score DESC LIMIT 1
SELECT owneruserid FROM posts ORDER BY score DESC LIMIT 1
SELECT owneruserid FROM posts ORDER BY score DESC LIMIT 1
SELECT owneruserid FROM posts ORDER BY score DESC LIMIT 1
SELECT owneruserid FROM posts ORDER BY score DESC LIMIT 1
SELECT owneruserid FROM posts ORDER BY score DESC LIMIT 1",SELECT owneruserid FROM posts ORDER BY score DESC LIMIT 1,1.0
70,1223,Are there more male patients with creatinine not within the normal range than female? True or False?,thrombosis_prediction,challenging,SELECT CASE WHEN SUM(CASE WHEN T1.SEX = 'M' THEN 1 ELSE 0 END) > SUM(CASE WHEN T1.SEX = 'F' THEN 1 ELSE 0 END) THEN 'True' ELSE 'False' END FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE >= 1.5,7,"SELECT COUNT(*) FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'male' AND (laboratory.cre < 0.7 OR laboratory.cre > 1.3) AND NOT EXISTS (     SELECT 1     FROM patient AS p2     JOIN laboratory AS l2 ON p2.id = l2.id     WHERE p2.sex = 'female' AND (l2.cre < 0.7 OR l2.cre > 1.3)     AND COUNT(*) > COUNT(*) )
SELECT COUNT(*) FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'male' AND (laboratory.cre < 0.7 OR laboratory.cre > 1.3) AND NOT EXISTS (     SELECT 1     FROM patient AS p     JOIN laboratory AS l ON p.id = l.id     WHERE p.sex = 'female' AND (l.cre < 0.7 OR l.cre > 1.3)     HAVING COUNT(*) > COUNT(*) )
SELECT COUNT(*) FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'male' AND (laboratory.cre < 0.7 OR laboratory.cre > 1.3) AND NOT EXISTS (     SELECT 1     FROM patient AS p2     JOIN laboratory AS l2 ON p2.id = l2.id     WHERE p2.sex = 'female' AND (l2.cre < 0.7 OR l2.cre > 1.3)     AND COUNT(*) > COUNT(*) )
SELECT COUNT(*) AS male_count FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'male' AND (laboratory.cre < 0.7 OR laboratory.cre > 1.3)  UNION ALL  SELECT COUNT(*) AS female_count FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'female' AND (laboratory.cre < 0.7 OR laboratory.cre > 1.3)
SELECT COUNT(*) AS male_count FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'male' AND (laboratory.cre < 0.6 OR laboratory.cre > 1.2)  UNION ALL  SELECT COUNT(*) AS female_count FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'female' AND (laboratory.cre < 0.6 OR laboratory.cre > 1.2)
SELECT COUNT(*) AS male_count FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'male' AND (laboratory.cre < 0.7 OR laboratory.cre > 1.3)  UNION ALL  SELECT COUNT(*) AS female_count FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'female' AND (laboratory.cre < 0.7 OR laboratory.cre > 1.3)
SELECT COUNT(p.id) AS male_count, COUNT(f.id) AS female_count FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'male' AND (l.cre < 0.7 OR l.cre > 1.3)  UNION ALL  SELECT COUNT(p.id) AS male_count, COUNT(f.id) AS female_count FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'female' AND (l.cre < 0.7 OR l.cre > 1.3)  ",SELECT COUNT(*) FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'male' AND (laboratory.cre < 0.7 OR laboratory.cre > 1.3) AND NOT EXISTS (     SELECT 1     FROM patient AS p2     JOIN laboratory AS l2 ON p2.id = l2.id     WHERE p2.sex = 'female' AND (l2.cre < 0.7 OR l2.cre > 1.3)     AND COUNT(*) > COUNT(*) ),0.0
71,1418,Mention the category of events which were held at MU 215.,student_club,simple,SELECT T2.category FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.location = 'MU 215',7,"SELECT e.category FROM event e WHERE e.location = 'MU 215'
SELECT e.category FROM event e WHERE e.location = 'MU 215'
SELECT e.category FROM event e WHERE e.location = 'MU 215'
SELECT e.category FROM event e WHERE e.location = 'MU 215'
SELECT e.type FROM event e WHERE e.location = 'MU 215'
SELECT e.type FROM event e WHERE e.location = 'MU 215'
SELECT e.category FROM event e WHERE e.location = 'MU 215'",SELECT e.category FROM event e WHERE e.location = 'MU 215',0.0
72,131,Which district has highest active loan?,financial,moderate,"SELECT T2.A3 FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T1.account_id = T3.account_id WHERE T3.status IN ('C', 'D') GROUP BY T2.A3 ORDER BY SUM(T3.amount) DESC LIMIT 1",7,"SELECT district.district_id, COUNT(loan.loan_id) AS active_loans FROM district JOIN client ON district.district_id = client.district_id JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id JOIN loan ON account.account_id = loan.account_id WHERE loan.status = 'active' GROUP BY district.district_id ORDER BY active_loans DESC LIMIT 1
SELECT district.district_id, COUNT(loan.loan_id) AS active_loans FROM district JOIN client ON district.district_id = client.district_id JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id JOIN loan ON account.account_id = loan.account_id WHERE loan.status = 'active' GROUP BY district.district_id ORDER BY active_loans DESC LIMIT 1
SELECT district.district_id, COUNT(loan.loan_id) AS active_loans FROM district JOIN client ON district.district_id = client.district_id JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id JOIN loan ON account.account_id = loan.account_id WHERE loan.status = 'active' GROUP BY district.district_id ORDER BY active_loans DESC LIMIT 1
SELECT district.district_id, COUNT(loan.loan_id) AS active_loans FROM district JOIN client ON district.district_id = client.district_id JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id JOIN loan ON account.account_id = loan.account_id WHERE loan.status = 'active' GROUP BY district.district_id ORDER BY active_loans DESC LIMIT 1
SELECT district.district_id, COUNT(loan.loan_id) as active_loans FROM district JOIN client ON district.district_id = client.district_id JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id JOIN loan ON account.account_id = loan.account_id WHERE loan.status = 'active' GROUP BY district.district_id ORDER BY active_loans DESC LIMIT 1
SELECT district.district_id, COUNT(loan.loan_id) AS active_loans FROM district JOIN client ON district.district_id = client.district_id JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id JOIN loan ON account.account_id = loan.account_id WHERE loan.status = 'active' GROUP BY district.district_id ORDER BY active_loans DESC LIMIT 1
SELECT d.district_id, COUNT(l.loan_id) as active_loans FROM district d JOIN client c ON d.district_id = c.district_id JOIN disp dp ON c.client_id = dp.client_id JOIN account a ON dp.account_id = a.account_id JOIN loan l ON a.account_id = l.account_id WHERE l.status = 'active' GROUP BY d.district_id ORDER BY active_loans DESC LIMIT 1","SELECT district.district_id, COUNT(loan.loan_id) AS active_loans FROM district JOIN client ON district.district_id = client.district_id JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id JOIN loan ON account.account_id = loan.account_id WHERE loan.status = 'active' GROUP BY district.district_id ORDER BY active_loans DESC LIMIT 1",0.0
73,896,Calculate the percentage whereby Hamilton was not at the 1st track of the the f1 circuit since 2010.,formula_1,challenging,SELECT CAST(COUNT(CASE WHEN T2.position <> 1 THEN T2.position END) AS REAL) * 100 / COUNT(T2.driverStandingsId) FROM races AS T1 INNER JOIN driverStandings AS T2 ON T2.raceId = T1.raceId INNER JOIN drivers AS T3 ON T3.driverId = T2.driverId WHERE T3.surname = 'Hamilton' AND T1.year >= 2010,7,"SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM races WHERE year >= 2010)) AS percentage FROM races WHERE circuitid != (SELECT circuitid FROM circuits ORDER BY circuitid LIMIT 1) AND raceid IN (SELECT raceid FROM results WHERE driverid = (SELECT driverid FROM drivers WHERE forename = 'Hamilton')) AND year >= 2010
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM races WHERE circuitid != 1 AND year >= 2010)) AS percentage FROM results JOIN races ON results.raceid = races.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.surname = 'Hamilton' AND races.circuitid != 1 AND races.year >= 2010
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM races WHERE circuitid = 1 AND year >= 2010)) AS percentage FROM races WHERE raceid IN (SELECT raceid FROM results WHERE driverid = (SELECT driverid FROM drivers WHERE forename = 'Hamilton')) AND circuitid != 1 AND year >= 2010
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM races WHERE circuitid != 1 AND year >= 2010)) AS percentage FROM results JOIN races ON results.raceid = races.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.surname = 'Hamilton' AND races.circuitid != 1 AND races.year >= 2010
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM races WHERE circuitid = 1 AND year >= 2010)) AS percentage FROM races WHERE raceid IN (SELECT raceid FROM results WHERE driverid = (SELECT driverid FROM drivers WHERE forename = 'Hamilton')) AND circuitid != 1 AND year >= 2010
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM races WHERE year >= 2010)) AS percentage FROM races WHERE circuitid != (SELECT circuitid FROM circuits ORDER BY circuitid LIMIT 1) AND raceid IN (SELECT raceid FROM results WHERE driverid = (SELECT driverid FROM drivers WHERE forename = 'Hamilton')) AND year >= 2010
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM races WHERE circuitid != 1 AND year >= 2010)) AS percentage FROM results JOIN races ON results.raceid = races.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.surname = 'Hamilton' AND races.circuitid != 1 AND races.year >= 2010",SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM races WHERE circuitid != 1 AND year >= 2010)) AS percentage FROM results JOIN races ON results.raceid = races.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.surname = 'Hamilton' AND races.circuitid != 1 AND races.year >= 2010,0.0
74,173,How often does account number 3 request an account statement to be released? What was the aim of debiting 3539 in total?,financial,challenging,"SELECT T1.frequency, T2.k_symbol FROM account AS T1 INNER JOIN (SELECT account_id, k_symbol, SUM(amount) AS total_amount FROM `order` GROUP BY account_id, k_symbol) AS T2 ON T1.account_id = T2.account_id WHERE T1.account_id = 3 AND T2.total_amount = 3539",7,"SELECT COUNT(*) AS statement_requests FROM order_ WHERE account_id = 3 AND k_symbol = 'account_statement'
SELECT COUNT(*) AS statement_requests FROM order_ WHERE account_id = 3 AND k_symbol = 'account_statement'
SELECT COUNT(*) AS statement_requests FROM order_ WHERE account_id = 3 AND k_symbol = 'account_statement'
NULL
SELECT COUNT(*) AS statement_requests FROM order_ WHERE account_id = 3 AND k_symbol = 'account_statement'
SELECT COUNT(*) AS statement_requests FROM order_ WHERE account_id = 3 AND k_symbol = 'account_statement'
SELECT COUNT(*) AS statement_requests FROM order_ WHERE account_id = 3 AND k_symbol = 'account_statement'",SELECT COUNT(*) AS statement_requests FROM order_ WHERE account_id = 3 AND k_symbol = 'account_statement',0.0
75,125,"For loans contracts which are still running where client are in debt, list the district of the and the state the percentage unemployment rate increment from year 1995 to 1996.",financial,challenging,SELECT CAST((T3.A13 - T3.A12) AS REAL) * 100 / T3.A12 FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.status = 'D',7,"SELECT district.district_id, district.a2 AS state,        ((SUM(CASE WHEN unemployment.year = 1996 THEN unemployment.rate END) -          SUM(CASE WHEN unemployment.year = 1995 THEN unemployment.rate END)) /         SUM(CASE WHEN unemployment.year = 1995 THEN unemployment.rate END)) * 100 AS percentage_increment FROM loan JOIN account ON loan.account_id = account.account_id JOIN client ON account.client_id = client.client_id JOIN district ON client.district_id = district.district_id JOIN unemployment ON district.district_id = unemployment.district_id WHERE loan.status = 'running' AND account.balance > 0 GROUP BY district.district_id, district.a2
SELECT d.district_id, d.a2 AS state, ((SUM(CASE WHEN strftime('%Y', l.date) = '1996' THEN 1 ELSE 0 END) - SUM(CASE WHEN strftime('%Y', l.date) = '1995' THEN 1 ELSE 0 END)) * 100.0 / SUM(CASE WHEN strftime('%Y', l.date) = '1995' THEN 1 ELSE 0 END)) AS unemployment_rate_increment FROM loan l JOIN account a ON l.account_id = a.account_id JOIN disp dsp ON a.account_id = dsp.account_id JOIN client c ON dsp.client_id = c.client_id JOIN district d ON c.district_id = d.district_id WHERE l.status = 'running' AND (SELECT SUM(amount) FROM trans WHERE trans.account_id = l.account_id AND trans.type = 'debit') > (SELECT SUM(amount) FROM trans WHERE trans.account_id = l.account_id AND trans.type = 'credit') GROUP BY d.district_id, d.a2
SELECT d.district_id, d.a2 AS state, ((SUM(CASE WHEN e.year = 1996 THEN e.unemployment_rate ELSE 0 END) - SUM(CASE WHEN e.year = 1995 THEN e.unemployment_rate ELSE 0 END)) / SUM(CASE WHEN e.year = 1995 THEN e.unemployment_rate ELSE 0 END)) * 100 AS percentage_increment FROM district d JOIN client c ON d.district_id = c.district_id JOIN disp dp ON c.client_id = dp.client_id JOIN account a ON dp.account_id = a.account_id JOIN loan l ON a.account_id = l.account_id JOIN unemployment_rate e ON d.a2 = e.state WHERE l.status = 'running' AND a.balance > 0 GROUP BY d.district_id, d.a2
SELECT d.district_id, d.a2 AS state, ((SUM(CASE WHEN strftime('%Y', l.date) = '1996' THEN l.amount ELSE 0 END) - SUM(CASE WHEN strftime('%Y', l.date) = '1995' THEN l.amount ELSE 0 END)) / SUM(CASE WHEN strftime('%Y', l.date) = '1995' THEN l.amount ELSE 0 END)) * 100 AS percentage_unemployment_rate_increment FROM loan l JOIN account a ON l.account_id = a.account_id JOIN disp dsp ON a.account_id = dsp.account_id JOIN client c ON dsp.client_id = c.client_id JOIN district d ON c.district_id = d.district_id WHERE l.status = 'running' AND l.amount > (SELECT SUM(payments) FROM loan WHERE account_id = l.account_id) GROUP BY d.district_id, d.a2
SELECT d.district_id, d.a2 AS state, ((SUM(CASE WHEN t.date BETWEEN '1996-01-01' AND '1996-12-31' THEN t.amount ELSE 0 END) - SUM(CASE WHEN t.date BETWEEN '1995-01-01' AND '1995-12-31' THEN t.amount ELSE 0 END)) / SUM(CASE WHEN t.date BETWEEN '1995-01-01' AND '1995-12-31' THEN t.amount ELSE 0 END)) * 100 AS unemployment_rate_increment FROM loan l JOIN account a ON l.account_id = a.account_id JOIN client c ON c.client_id = a.client_id JOIN district d ON d.district_id = c.district_id JOIN trans t ON t.account_id = a.account_id WHERE l.status = 'running' AND t.amount > t.balance GROUP BY d.district_id, d.a2
SELECT d.district_id, d.a2 AS state, ((SUM(CASE WHEN strftime('%Y', l.date) = '1996' THEN l.amount ELSE 0 END) - SUM(CASE WHEN strftime('%Y', l.date) = '1995' THEN l.amount ELSE 0 END)) / SUM(CASE WHEN strftime('%Y', l.date) = '1995' THEN l.amount ELSE 0 END)) * 100 AS percentage_unemployment_rate_increment FROM loan l JOIN account a ON l.account_id = a.account_id JOIN disp dsp ON a.account_id = dsp.account_id JOIN client c ON dsp.client_id = c.client_id JOIN district d ON c.district_id = d.district_id WHERE l.status = 'running' AND l.amount > (SELECT SUM(payments) FROM loan WHERE account_id = l.account_id) GROUP BY d.district_id, d.a2
SELECT d.district_id, d.a2 AS state, ((SUM(CASE WHEN strftime('%Y', l.date) = '1996' THEN l.amount ELSE 0 END) - SUM(CASE WHEN strftime('%Y', l.date) = '1995' THEN l.amount ELSE 0 END)) / SUM(CASE WHEN strftime('%Y', l.date) = '1995' THEN l.amount ELSE 0 END)) * 100 AS percentage_unemployment_rate_increment FROM loan l JOIN account a ON l.account_id = a.account_id JOIN disp dsp ON a.account_id = dsp.account_id JOIN client c ON dsp.client_id = c.client_id JOIN district d ON c.district_id = d.district_id WHERE l.status = 'running' AND l.amount > (SELECT SUM(payments) FROM loan WHERE account_id = l.account_id) GROUP BY d.district_id, d.a2","SELECT d.district_id, d.a2 AS state, ((SUM(CASE WHEN strftime('%Y', l.date) = '1996' THEN l.amount ELSE 0 END) - SUM(CASE WHEN strftime('%Y', l.date) = '1995' THEN l.amount ELSE 0 END)) / SUM(CASE WHEN strftime('%Y', l.date) = '1995' THEN l.amount ELSE 0 END)) * 100 AS percentage_unemployment_rate_increment FROM loan l JOIN account a ON l.account_id = a.account_id JOIN disp dsp ON a.account_id = dsp.account_id JOIN client c ON dsp.client_id = c.client_id JOIN district d ON c.district_id = d.district_id WHERE l.status = 'running' AND l.amount > (SELECT SUM(payments) FROM loan WHERE account_id = l.account_id) GROUP BY d.district_id, d.a2",0.0
76,201,What is the percentage of carbon in double-bond molecules?,toxicology,moderate,SELECT CAST(COUNT(DISTINCT CASE WHEN T1.element = 'c' THEN T1.atom_id ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T1.atom_id) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '=',7,"SELECT (SUM(a.element = 'carbon') * 100.0 / COUNT(a.element)) AS carbon_percentage FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'double-bond'
SELECT (SUM(atom.element = 'carbon') * 100.0 / COUNT(*)) AS percentage_carbon FROM atom JOIN bond ON atom.bond_id = bond.bond_id JOIN connected ON atom.atom_id = connected.atom_id WHERE bond.bond_type = 'double-bond'
SELECT (SUM(a.element = 'carbon') * 100.0 / COUNT(a.element)) AS carbon_percentage FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'double-bond'
SELECT (SUM(atom.element = 'carbon') * 100.0 / COUNT(*)) AS percentage_carbon FROM atom JOIN bond ON atom.bond_id = bond.bond_id JOIN connected ON atom.atom_id = connected.atom_id WHERE bond.bond_type = 'double-bond'
SELECT (SUM(a.element = 'carbon') * 100.0 / COUNT(*)) AS carbon_percentage FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'double-bond'
SELECT (SUM(a.element = 'carbon') * 100.0 / COUNT(a.element)) AS carbon_percentage FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'double-bond'
SELECT (SUM(a.element = 'carbon') * 100.0 / COUNT(a.element)) AS carbon_percentage FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'double-bond'",SELECT (SUM(a.element = 'carbon') * 100.0 / COUNT(a.element)) AS carbon_percentage FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'double-bond',0.0
77,1150,What is the percentage of female patient were born after 1930?,thrombosis_prediction,moderate,"SELECT CAST(SUM(CASE WHEN STRFTIME('%Y', Birthday) > '1930' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Patient WHERE SEX = 'F'",7,"SELECT (COUNT(p.id) * 100.0 / (SELECT COUNT(*) FROM patient WHERE sex = 'female' AND birthday > '1930-01-01')) AS percentage FROM patient p WHERE p.sex = 'female' AND p.birthday > '1930-01-01'
SELECT (COUNT(p.id) * 100.0 / (SELECT COUNT(*) FROM patient WHERE sex = 'female' AND birthday > '1930-01-01')) AS percentage FROM patient p WHERE p.sex = 'female' AND p.birthday > '1930-01-01'
SELECT (COUNT(p.id) * 100.0 / (SELECT COUNT(*) FROM patient WHERE sex = 'female' AND birthday > '1930-01-01')) AS percentage FROM patient p WHERE p.sex = 'female' AND p.birthday > '1930-01-01'
SELECT (COUNT(p.id) * 100.0 / (SELECT COUNT(*) FROM patient WHERE sex = 'female' AND birthday > '1930-01-01')) AS percentage FROM patient p WHERE p.sex = 'female' AND p.birthday > '1930-01-01'
SELECT (COUNT(p.id) * 100.0 / (SELECT COUNT(*) FROM patient WHERE sex = 'female' AND birthday > '1930-01-01')) AS percentage FROM patient p WHERE p.sex = 'female' AND p.birthday > '1930-01-01'
SELECT (COUNT(p.id) * 100.0 / (SELECT COUNT(*) FROM patient WHERE sex = 'female' AND birthday > '1930-01-01')) AS percentage FROM patient p WHERE p.sex = 'female' AND p.birthday > '1930-01-01'
SELECT (COUNT(p.id) * 100.0 / (SELECT COUNT(*) FROM patient WHERE sex = 'female' AND strftime('%Y', birthday) > '1930')) AS percentage FROM patient p WHERE sex = 'female' AND strftime('%Y', birthday) > '1930'",SELECT (COUNT(p.id) * 100.0 / (SELECT COUNT(*) FROM patient WHERE sex = 'female' AND birthday > '1930-01-01')) AS percentage FROM patient p WHERE p.sex = 'female' AND p.birthday > '1930-01-01',0.0
78,284,Determine the bond type that is formed in the chemical compound containing element Carbon.,toxicology,moderate,SELECT DISTINCT T2.bond_type FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'c',7,"SELECT bond.bond_type FROM bond JOIN connected ON bond.bond_id = connected.bond_id JOIN atom ON connected.atom_id = atom.atom_id WHERE atom.element = 'Carbon'
SELECT bond.bond_type FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.element = 'Carbon'
SELECT bond.bond_type FROM bond JOIN connected ON bond.bond_id = connected.bond_id JOIN atom ON connected.atom_id = atom.atom_id WHERE atom.element = 'Carbon'
SELECT bond.bond_type FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.element = 'Carbon'
SELECT bond.bond_type FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.element = 'Carbon'
SELECT bond.bond_type FROM bond JOIN connected ON bond.bond_id = connected.bond_id JOIN atom ON connected.atom_id = atom.atom_id WHERE atom.element = 'Carbon'
SELECT bond.bond_type FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.element = 'Carbon'",SELECT bond.bond_type FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.element = 'Carbon',0.0
79,1236,"For all the female patient age 50 and above, who has abnormal red blood cell count. State if they were admitted to hospital.",thrombosis_prediction,challenging,"SELECT DISTINCT T1.ID, T1.Admission FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (T2.RBC <= 3.5 OR T2.RBC >= 6.0) AND STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) >= 50",7,"SELECT p.id, p.admission FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'female' AND p.birthday <= date('now', '-50 years') AND l.rbc <> 'normal'
SELECT p.id, p.admission FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'female' AND p.birthday <= date('now', '-50 years') AND l.rbc <> 'normal'
SELECT p.id, p.admission FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'female' AND p.birthday <= date('now', '-50 years') AND l.rbc <> 'normal'
SELECT p.id, p.admission FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'female' AND p.birthday <= DATE('now', '-50 years') AND l.rbc <> 'normal'
SELECT p.id, p.admission FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'female' AND p.birthday <= date('now', '-50 years') AND l.rbc <> 'normal'
SELECT p.id, p.admission FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'female' AND p.birthday <= DATE('now', '-50 years') AND l.rbc <> 'normal'
SELECT p.id, p.admission FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'female' AND p.birthday <= date('now', '-50 years') AND l.rbc <> 'normal'","SELECT p.id, p.admission FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'female' AND p.birthday <= date('now', '-50 years') AND l.rbc <> 'normal'",0.0
80,68,Which county reported the most number of school closure in the 1980s with school wonership code belonging to Youth Authority Facilities (CEA)?,california_schools,moderate,"SELECT County FROM schools WHERE strftime('%Y', ClosedDate) BETWEEN '1980' AND '1989' AND StatusType = 'Closed' AND SOC = 11 GROUP BY County ORDER BY COUNT(School) DESC LIMIT 1",7,"SELECT county_name, COUNT(*) as closure_count FROM schools WHERE cdscode IN (SELECT cdscode FROM school_closure WHERE academic_year BETWEEN '1980-01-01' AND '1990-12-31' AND cdscode IN (SELECT cdscode FROM ownership WHERE ownership_code = 'CEA')) GROUP BY county_name ORDER BY closure_count DESC LIMIT 1
SELECT county_name, COUNT(*) as closure_count FROM schools WHERE cdscode IN (SELECT cdscode FROM school_closure WHERE academic_year BETWEEN '1980-01-01' AND '1990-12-31' AND cdscode IN (SELECT cdscode FROM ownership WHERE ownership_code = 'CEA')) GROUP BY county_name ORDER BY closure_count DESC LIMIT 1
SELECT county_name, COUNT(*) as closure_count FROM schools WHERE cdscode IN (SELECT cdscode FROM school_closure WHERE academic_year BETWEEN '1980-01-01' AND '1990-12-31' AND cdscode IN (SELECT cdscode FROM ownership WHERE ownership_code = 'CEA')) GROUP BY county_name ORDER BY closure_count DESC LIMIT 1
SELECT county_name, COUNT(*) as closure_count FROM schools WHERE cdscode IN (SELECT cdscode FROM school_closure WHERE academic_year BETWEEN '1980-01-01' AND '1990-12-31' AND cdscode IN (SELECT cdscode FROM ownership WHERE ownership_code = 'CEA')) GROUP BY county_name ORDER BY closure_count DESC LIMIT 1
SELECT county_name, COUNT(*) as closure_count FROM schools WHERE cdscode IN (SELECT cdscode FROM school_closure WHERE academic_year BETWEEN '1980-01-01' AND '1990-12-31' AND cdscode IN (SELECT cdscode FROM ownership WHERE ownership_code = 'CEA')) GROUP BY county_name ORDER BY closure_count DESC LIMIT 1
SELECT county_name, COUNT(*) as closure_count FROM schools WHERE cdscode IN (SELECT cdscode FROM school_closure WHERE academic_year BETWEEN '1980-01-01' AND '1990-12-31' AND cdscode IN (SELECT cdscode FROM ownership WHERE ownership_code = 'CEA')) GROUP BY county_name ORDER BY closure_count DESC LIMIT 1
SELECT county_name, COUNT(*) as closure_count FROM schools WHERE cdscode IN (SELECT cdscode FROM school_closure WHERE academic_year BETWEEN '1980-01-01' AND '1990-12-31' AND cdscode IN (SELECT cdscode FROM ownership WHERE ownership_code = 'CEA')) GROUP BY county_name ORDER BY closure_count DESC LIMIT 1","SELECT county_name, COUNT(*) as closure_count FROM schools WHERE cdscode IN (SELECT cdscode FROM school_closure WHERE academic_year BETWEEN '1980-01-01' AND '1990-12-31' AND cdscode IN (SELECT cdscode FROM ownership WHERE ownership_code = 'CEA')) GROUP BY county_name ORDER BY closure_count DESC LIMIT 1",0.0
81,825,Identify the gender of the superhero who has the ability of Phoenix Force.,superhero,moderate,SELECT T4.gender FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id INNER JOIN gender AS T4 ON T1.gender_id = T4.id WHERE T3.power_name = 'Phoenix Force',7,"SELECT gender.gender FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Phoenix Force'
SELECT gender.gender FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Phoenix Force'
SELECT gender.gender FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Phoenix Force'
SELECT gender.gender FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Phoenix Force'
SELECT gender.gender FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Phoenix Force'
SELECT gender.gender FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Phoenix Force'
SELECT gender.gender FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Phoenix Force'",SELECT gender.gender FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Phoenix Force',1.0
82,1173,"What is the most common illness that doctors identified among the patients whose lab work was done between 1/1/1985, and 12/31/1995?",thrombosis_prediction,challenging,SELECT T2.Diagnosis FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.`Examination Date` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY T2.Diagnosis ORDER BY COUNT(T2.Diagnosis) DESC LIMIT 1,7,"SELECT diagnosis, COUNT(*) as count FROM examination JOIN patient ON examination.id = patient.id JOIN laboratory ON examination.id = laboratory.id WHERE laboratory.date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY diagnosis ORDER BY count DESC LIMIT 1
SELECT diagnosis, COUNT(*) as count FROM examination JOIN patient ON examination.id = patient.id JOIN laboratory ON examination.id = laboratory.id WHERE laboratory.date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY diagnosis ORDER BY count DESC LIMIT 1
SELECT diagnosis, COUNT(*) as count FROM examination JOIN patient ON examination.id = patient.id JOIN laboratory ON examination.id = laboratory.id WHERE laboratory.date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY diagnosis ORDER BY count DESC LIMIT 1
SELECT diagnosis, COUNT(*) as count FROM examination JOIN patient ON examination.id = patient.id JOIN laboratory ON examination.id = laboratory.id WHERE laboratory.date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY diagnosis ORDER BY count DESC LIMIT 1
SELECT diagnosis, COUNT(*) as count FROM examination JOIN patient ON examination.id = patient.id JOIN laboratory ON examination.id = laboratory.id WHERE laboratory.date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY diagnosis ORDER BY count DESC LIMIT 1
SELECT diagnosis, COUNT(*) as count FROM examination JOIN patient ON examination.id = patient.id JOIN laboratory ON examination.id = laboratory.id WHERE laboratory.date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY diagnosis ORDER BY count DESC LIMIT 1
SELECT diagnosis, COUNT(*) as count FROM examination JOIN patient ON examination.id = patient.id JOIN laboratory ON examination.id = laboratory.id WHERE laboratory.date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY diagnosis ORDER BY count DESC LIMIT 1","SELECT diagnosis, COUNT(*) as count FROM examination JOIN patient ON examination.id = patient.id JOIN laboratory ON examination.id = laboratory.id WHERE laboratory.date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY diagnosis ORDER BY count DESC LIMIT 1",0.0
83,1189,"What number of patients with a degree of thrombosis level 2 and ANA pattern of only S, have a level of anti-Cardiolip in antibody (IgM) 20% higher than average?",thrombosis_prediction,challenging,SELECT COUNT(*) FROM Examination WHERE Thrombosis = 2 AND `ANA Pattern` = 'S' AND `aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination WHERE Thrombosis = 2 AND `ANA Pattern` = 'S'),7,"SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE examination.thrombosis = 2 AND examination.ana = 'S' AND laboratory.igm > (SELECT AVG(igm) * 1.2 FROM laboratory)
SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE examination.thrombosis = 2 AND examination.ana = 'S' AND laboratory.igm > (SELECT AVG(igm) * 1.2 FROM laboratory)
SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE examination.thrombosis = 2 AND examination.ana = 'S' AND laboratory.igm > (SELECT AVG(igm) * 1.2 FROM laboratory)
SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE examination.thrombosis = 2 AND examination.ana = 'S' AND laboratory.igm > (SELECT AVG(igm) * 1.2 FROM laboratory)
SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE examination.thrombosis = 2 AND examination.ana = 'S' AND laboratory.igm > (SELECT AVG(igm) * 1.2 FROM laboratory)
SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE examination.thrombosis = 2 AND examination.ana = 'S' AND laboratory.igm > (SELECT AVG(igm) * 1.2 FROM laboratory)
SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE examination.thrombosis = 2 AND examination.ana = 'S' AND laboratory.igm > (SELECT AVG(igm) * 1.2 FROM laboratory)",SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE examination.thrombosis = 2 AND examination.ana = 'S' AND laboratory.igm > (SELECT AVG(igm) * 1.2 FROM laboratory),0.0
84,1042,List the name of leagues in which the average goals by the home team is higher than the away team in the 2009/2010 season.,european_football_2,challenging,SELECT t1.name FROM League AS t1 INNER JOIN Match AS t2 ON t1.id = t2.league_id WHERE t2.season = '2009/2010' GROUP BY t1.name HAVING (CAST(SUM(t2.home_team_goal) AS REAL) / COUNT(DISTINCT t2.id)) - (CAST(SUM(t2.away_team_goal) AS REAL) / COUNT(DISTINCT t2.id)) > 0,7,"SELECT l.name FROM league l JOIN match m ON l.id = m.league_id WHERE m.season = '2009/2010' GROUP BY l.name HAVING AVG(m.home_team_goal) > AVG(m.away_team_goal)
SELECT l.name FROM league l JOIN match m ON l.id = m.league_id WHERE m.season = '2009/2010' GROUP BY l.name HAVING AVG(m.home_team_goal) > AVG(m.away_team_goal)
SELECT l.name FROM league l JOIN match m ON l.id = m.league_id WHERE m.season = '2009/2010' GROUP BY l.name HAVING AVG(m.home_team_goal) > AVG(m.away_team_goal)
SELECT l.name FROM league l JOIN match m ON l.id = m.league_id WHERE m.season = '2009/2010' GROUP BY l.name HAVING AVG(m.home_team_goal) > AVG(m.away_team_goal)
SELECT l.name FROM league l JOIN match m ON l.id = m.league_id WHERE m.season = '2009/2010' GROUP BY l.name HAVING AVG(m.home_team_goal) > AVG(m.away_team_goal)
SELECT l.name FROM league l JOIN match m ON l.id = m.league_id WHERE m.season = '2009/2010' GROUP BY l.name HAVING AVG(m.home_team_goal) > AVG(m.away_team_goal)
SELECT l.name FROM league l JOIN match m ON l.id = m.league_id WHERE m.season = '2009/2010' GROUP BY l.name HAVING AVG(m.home_team_goal) > AVG(m.away_team_goal)",SELECT l.name FROM league l JOIN match m ON l.id = m.league_id WHERE m.season = '2009/2010' GROUP BY l.name HAVING AVG(m.home_team_goal) > AVG(m.away_team_goal),1.0
85,1201,What percentage of patients who were born in 1980 and were diagnosed with RA are women?,thrombosis_prediction,moderate,"SELECT CAST(SUM(CASE WHEN SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM Patient WHERE Diagnosis = 'RA' AND STRFTIME('%Y', Birthday) = '1980'",7,"SELECT (COUNT(DISTINCT patient.id) * 100.0 /         (SELECT COUNT(DISTINCT patient.id)          FROM patient          JOIN laboratory ON patient.id = laboratory.id          WHERE strftime('%Y', patient.birthday) = '1980' AND patient.diagnosis = 'RA' AND laboratory.ra = 1)) AS percentage FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE strftime('%Y', patient.birthday) = '1980' AND patient.diagnosis = 'RA' AND patient.sex = 'female' AND laboratory.ra = 1
SELECT (COUNT(DISTINCT p.id) * 100.0 / (SELECT COUNT(DISTINCT p.id) FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.birthday LIKE '1980%' AND l.ra = 1)) AS percentage FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.birthday LIKE '1980%' AND l.ra = 1 AND p.sex = 'female'
SELECT (COUNT(DISTINCT patient.id) * 100.0 / (SELECT COUNT(DISTINCT patient.id) FROM patient WHERE strftime('%Y', birthday) = '1980' AND id IN (SELECT patient_id FROM laboratory WHERE ra = 1))) AS percentage_women FROM patient WHERE strftime('%Y', birthday) = '1980' AND sex = 'female' AND id IN (SELECT patient_id FROM laboratory WHERE ra = 1)
SELECT (COUNT(DISTINCT patient.id) * 100.0 /         (SELECT COUNT(DISTINCT patient.id)          FROM patient          JOIN laboratory ON patient.id = laboratory.id          WHERE strftime('%Y', patient.birthday) = '1980' AND patient.diagnosis = 'RA' AND laboratory.ra = 1)) AS percentage FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE strftime('%Y', patient.birthday) = '1980' AND patient.diagnosis = 'RA' AND patient.sex = 'female' AND laboratory.ra = 1
SELECT (COUNT(DISTINCT patient.id) * 100.0 /         (SELECT COUNT(DISTINCT patient.id)          FROM patient          JOIN laboratory ON patient.id = laboratory.id          WHERE strftime('%Y', patient.birthday) = '1980' AND patient.diagnosis = 'RA' AND laboratory.ra = 1)) AS percentage FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE strftime('%Y', patient.birthday) = '1980' AND patient.diagnosis = 'RA' AND patient.sex = 'Women' AND laboratory.ra = 1
SELECT (COUNT(DISTINCT patient.id) * 100.0 / (SELECT COUNT(DISTINCT patient.id) FROM patient WHERE strftime('%Y', birthday) = '1980' AND diagnosis = 'RA')) AS percentage_women FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE strftime('%Y', birthday) = '1980' AND diagnosis = 'RA' AND sex = 'female'
SELECT (COUNT(DISTINCT patient.id) * 100.0 / (SELECT COUNT(DISTINCT patient.id) FROM patient WHERE strftime('%Y', birthday) = '1980' AND id IN (SELECT patient_id FROM laboratory WHERE ra = 1))) AS percentage_women FROM patient WHERE strftime('%Y', birthday) = '1980' AND sex = 'female' AND id IN (SELECT patient_id FROM laboratory WHERE ra = 1)","SELECT (COUNT(DISTINCT patient.id) * 100.0 /         (SELECT COUNT(DISTINCT patient.id)          FROM patient          JOIN laboratory ON patient.id = laboratory.id          WHERE strftime('%Y', patient.birthday) = '1980' AND patient.diagnosis = 'RA' AND laboratory.ra = 1)) AS percentage FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE strftime('%Y', patient.birthday) = '1980' AND patient.diagnosis = 'RA' AND patient.sex = 'female' AND laboratory.ra = 1",0.0
86,206,What elements are in the TR004_8_9 bond atoms?,toxicology,challenging,SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR004_8_9',7,"SELECT element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'TR004_8_9'
SELECT element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'TR004_8_9'
SELECT element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_id = 'TR004_8_9'
SELECT element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'TR004_8_9'
SELECT element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'TR004_8_9'
SELECT element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_id = 'TR004_8_9'
SELECT element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'TR004_8_9'",SELECT element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'TR004_8_9',0.0
87,1010,What is the lap record set by Lewis Hamilton in a Formula_1 race?,formula_1,simple,SELECT T1.time FROM lapTimes AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton',7,"SELECT MIN(milliseconds) AS lap_record FROM laptimes JOIN drivers ON laptimes.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'
SELECT MIN(milliseconds) AS lap_record FROM laptimes JOIN drivers ON laptimes.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'
SELECT MIN(milliseconds) AS lap_record FROM laptimes JOIN drivers ON laptimes.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'
SELECT MIN(milliseconds) AS lap_record FROM laptimes JOIN drivers ON laptimes.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'
SELECT MIN(milliseconds) AS lap_record FROM laptimes JOIN drivers ON laptimes.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'
SELECT MIN(milliseconds) AS lap_record FROM laptimes JOIN drivers ON laptimes.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'
SELECT MIN(milliseconds) AS lap_record FROM laptimes JOIN drivers ON laptimes.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'",SELECT MIN(milliseconds) AS lap_record FROM laptimes JOIN drivers ON laptimes.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton',0.0
88,1395,How many members did attend the event 'Community Theater' in 2019?,student_club,moderate,"SELECT COUNT(T2.link_to_member) FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'Community Theater' AND SUBSTR(T1.event_date, 1, 4) = '2019'",7,"SELECT COUNT(*) FROM attendance JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Community 
SELECT COUNT(*) FROM attendance JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Community 
SELECT COUNT(*) FROM attendance JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Community 
SELECT COUNT(*) FROM attendance JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Community 
SELECT COUNT(*) FROM attendance JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Community 
SELECT COUNT(*) FROM attendance JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Community 
SELECT COUNT(*) FROM attendance JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Community ",SELECT COUNT(*) FROM attendance JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Community ,0.0
89,108,"For the client who applied the biggest loan, what was his/her first amount of transaction after opened the account?",financial,simple,"SELECT T3.amount FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN trans AS T3 ON T2.account_id = T3.account_id ORDER BY T1.amount DESC, T3.date ASC LIMIT 1",7,"SELECT t.amount FROM trans t JOIN account a ON t.account_id = a.account_id JOIN loan l ON a.account_id = l.account_id WHERE l.amount = (SELECT MAX(amount) FROM loan) ORDER BY t.date LIMIT 1
SELECT t.amount FROM trans t JOIN account a ON t.account_id = a.account_id JOIN loan l ON a.account_id = l.account_id WHERE l.amount = (SELECT MAX(amount) FROM loan) ORDER BY t.date LIMIT 1
SELECT t.amount FROM trans t JOIN account a ON t.account_id = a.account_id JOIN loan l ON a.account_id = l.account_id WHERE l.amount = (SELECT MAX(amount) FROM loan) ORDER BY t.date ASC LIMIT 1
SELECT t.amount FROM trans t JOIN account a ON t.account_id = a.account_id JOIN loan l ON a.account_id = l.account_id WHERE l.amount = (SELECT MAX(amount) FROM loan) ORDER BY t.date LIMIT 1
SELECT t.amount FROM trans t JOIN account a ON t.account_id = a.account_id JOIN loan l ON a.account_id = l.account_id WHERE l.amount = (SELECT MAX(amount) FROM loan) ORDER BY t.date LIMIT 1
SELECT t.amount FROM trans t JOIN account a ON t.account_id = a.account_id JOIN loan l ON a.account_id = l.account_id WHERE l.amount = (SELECT MAX(amount) FROM loan) ORDER BY t.date LIMIT 1
SELECT t.amount FROM trans t JOIN account a ON t.account_id = a.account_id JOIN loan l ON a.account_id = l.account_id WHERE l.amount = (SELECT MAX(amount) FROM loan) ORDER BY t.date LIMIT 1",SELECT t.amount FROM trans t JOIN account a ON t.account_id = a.account_id JOIN loan l ON a.account_id = l.account_id WHERE l.amount = (SELECT MAX(amount) FROM loan) ORDER BY t.date LIMIT 1,1.0
90,829,Which publisher created more superheroes: DC or Marvel Comics? Find the difference in the number of superheroes.,superhero,challenging,SELECT SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id,7,"SELECT publisher_name, COUNT(*) as superhero_count FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id GROUP BY publisher_name ORDER BY superhero_count DESC
SELECT publisher_name, COUNT(superhero_id) AS superhero_count FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id GROUP BY publisher_name ORDER BY superhero_count DESC
SELECT publisher_name, COUNT(superhero_id) AS superhero_count FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id GROUP BY publisher_name ORDER BY superhero_count DESC
SELECT publisher_name, COUNT(*) as superhero_count FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id GROUP BY publisher_name ORDER BY superhero_count DESC
SELECT publisher_name, COUNT(superhero_id) AS superhero_count FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id GROUP BY publisher_name ORDER BY superhero_count DESC
SELECT publisher_name, COUNT(superhero_id) AS superhero_count FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id GROUP BY publisher_name ORDER BY superhero_count DESC
SELECT publisher_name, COUNT(superhero_id) AS superhero_count FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id GROUP BY publisher_name ORDER BY superhero_count DESC","SELECT publisher_name, COUNT(superhero_id) AS superhero_count FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id GROUP BY publisher_name ORDER BY superhero_count DESC",0.0
91,36,Under whose administration is the school with the highest number of students scoring 1500 or more on the SAT? Indicate their full names.,california_schools,challenging,"SELECT T2.AdmFName1, T2.AdmLName1, T2.AdmFName2, T2.AdmLName2, T2.AdmFName3, T2.AdmLName3 FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.NumGE1500 DESC LIMIT 1",7,"SELECT admfname1, admlname1 FROM schools JOIN satscores ON schools.cdscode = satscores.cds WHERE satscores.numge1500 IS NOT NULL ORDER BY satscores.numge1500 DESC LIMIT 1
SELECT admfname1, admlname1 FROM schools JOIN satscores ON schools.ncesschool = satscores.sname WHERE satscores.numge1500 IS NOT NULL ORDER BY satscores.numge1500 DESC LIMIT 1
SELECT admfname1, admlname1 FROM schools JOIN satscores ON schools.cdscode = satscores.cds WHERE satscores.numge1500 IS NOT NULL ORDER BY satscores.numge1500 DESC LIMIT 1
SELECT s.admfname1 || ' ' || s.admlname1 AS full_name FROM schools s JOIN satscores ss ON s.cdscode = ss.cds WHERE ss.numge1500 IS NOT NULL ORDER BY ss.numge1500 DESC LIMIT 1
SELECT admfname1, admlname1 FROM schools JOIN satscores ON schools.ncesschool = satscores.sname WHERE satscores.numge1500 IS NOT NULL ORDER BY satscores.numge1500 DESC LIMIT 1
SELECT s.admfname1 || ' ' || s.admlname1 AS full_name FROM schools s JOIN satscores ss ON s.cdscode = ss.cds WHERE ss.numge1500 IS NOT NULL ORDER BY ss.numge1500 DESC LIMIT 1
SELECT admfname1, admlname1 FROM schools JOIN satscores ON schools.ncesschool = satscores.sname WHERE satscores.numge1500 IS NOT NULL ORDER BY satscores.numge1500 DESC LIMIT 1","SELECT admfname1, admlname1 FROM schools JOIN satscores ON schools.ncesschool = satscores.sname WHERE satscores.numge1500 IS NOT NULL ORDER BY satscores.numge1500 DESC LIMIT 1",0.0
92,415,What percentage of cards with format commander and legal status do not have a content warning?,card_games,challenging,SELECT CAST(SUM(CASE WHEN T1.hasContentWarning = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'commander' AND T2.status = 'Legal',7,"SELECT (COUNT(c.id) * 100.0 / (SELECT COUNT(*) FROM cards c JOIN legalities l ON c.id = l.id WHERE l.format = 'commander' AND l.status = 'legal' AND c.hascontentwarning = 0)) AS percentage FROM cards c JOIN legalities l ON c.id = l.id WHERE l.format = 'commander' AND l.status = 'legal' AND c.hascontentwarning = 0
SELECT (COUNT(c.id) * 100.0 / (SELECT COUNT(*) FROM cards c JOIN legalities l ON c.id = l.id WHERE l.format = 'commander' AND l.status = 'legal' AND c.hascontentwarning = 0)) AS percentage FROM cards c JOIN legalities l ON c.id = l.id WHERE l.format = 'commander' AND l.status = 'legal' AND c.hascontentwarning = 0
SELECT (COUNT(c.id) * 100.0 / (SELECT COUNT(*) FROM cards c JOIN legalities l ON c.id = l.id WHERE l.format = 'commander' AND l.status = 'legal' AND c.hascontentwarning = 0)) AS percentage FROM cards c JOIN legalities l ON c.id = l.id WHERE l.format = 'commander' AND l.status = 'legal' AND c.hascontentwarning = 0
SELECT (COUNT(c.id) * 100.0 / (SELECT COUNT(*) FROM cards c JOIN legalities l ON c.id = l.id WHERE l.format = 'commander' AND l.status = 'legal' AND c.hascontentwarning = 0)) AS percentage FROM cards c JOIN legalities l ON c.id = l.id WHERE l.format = 'commander' AND l.status = 'legal' AND c.hascontentwarning = 0
SELECT (COUNT(c.id) * 100.0 / (SELECT COUNT(*) FROM cards c JOIN legalities l ON c.id = l.id WHERE l.format = 'commander' AND l.status = 'legal')) AS percentage FROM cards c JOIN legalities l ON c.id = l.id WHERE l.format = 'commander' AND l.status = 'legal' AND c.hascontentwarning = 0
SELECT (COUNT(c.id) * 100.0 / (SELECT COUNT(*) FROM cards c JOIN legalities l ON c.id = l.id WHERE l.format = 'commander' AND l.status = 'legal' AND c.hascontentwarning = 0)) AS percentage FROM cards c JOIN legalities l ON c.id = l.id WHERE l.format = 'commander' AND l.status = 'legal' AND c.hascontentwarning = 0
SELECT (COUNT(c.id) * 100.0 / (SELECT COUNT(*) FROM cards c JOIN legalities l ON c.id = l.id WHERE l.format = 'commander' AND l.status = 'legal' AND c.hascontentwarning = 0)) AS percentage FROM cards c JOIN legalities l ON c.id = l.id WHERE l.format = 'commander' AND l.status = 'legal' AND c.hascontentwarning = 0",SELECT (COUNT(c.id) * 100.0 / (SELECT COUNT(*) FROM cards c JOIN legalities l ON c.id = l.id WHERE l.format = 'commander' AND l.status = 'legal' AND c.hascontentwarning = 0)) AS percentage FROM cards c JOIN legalities l ON c.id = l.id WHERE l.format = 'commander' AND l.status = 'legal' AND c.hascontentwarning = 0,0.0
93,290,Which toxic element can be found in the molecule TR151?,toxicology,challenging,SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR151',7,"SELECT element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR151' AND element IN ('Hg', 'Pb', 'As', 'Sb', 'Se', 'Te', 'Cd', 'Cr', 'Ni')
SELECT element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR151' AND element IN ('Hg', 'As', 'Cd', 'Pb', 'Cr', 'Ni')
SELECT element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR151' AND element IN ('Hg', 'Pb', 'As', 'Sb', 'Se', 'Te', 'Cd', 'Cr', 'Ni')
SELECT element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR151' AND element IN ('Hg', 'Pb', 'As', 'Sb', 'Se', 'Te', 'Cd', 'Cr', 'Ni')
SELECT element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR151' AND element IN ('Hg', 'Pb', 'As', 'Sb', 'Se', 'Te', 'Cd', 'Cr', 'Ni')
SELECT element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR151' AND element IN ('Hg', 'As', 'Cd', 'Pb', 'Cr', 'Ni')
SELECT element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR151' AND element IN ('Hg', 'As', 'Pb', 'Cd', 'Cr', 'Ni')","SELECT element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR151' AND element IN ('Hg', 'Pb', 'As', 'Sb', 'Se', 'Te', 'Cd', 'Cr', 'Ni')",0.0
94,1316,"Please list the phone numbers of the students from the Student_Club that has attended the event ""Women's Soccer"".",student_club,moderate,SELECT T3.phone FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T1.event_name = 'Women''s Soccer',7,"SELECT m.phone FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_name = ""Women's Soccer"" AND m.link_to_major = ""Student_Club""
SELECT m.phone FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_name = ""Women's Soccer"" AND m.link_to_major = ""Student_Club""
SELECT m.phone FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_name = ""Women's Soccer"" AND m.link_to_major = ""Student_Club""
SELECT m.phone FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_name = ""Women's Soccer"" AND m.link_to_major = ""Student_Club""
SELECT m.phone FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_name = ""Women's Soccer"" AND m.link_to_major = ""Student_Club""
SELECT m.phone FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_name = ""Women's Soccer"" AND m.link_to_major = ""Student_Club""
SELECT m.phone FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_name = ""Women's Soccer"" AND m.link_to_major = ""Student_Club""","SELECT m.phone FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN event e ON a.link_to_event = e.event_id WHERE e.event_name = ""Women's Soccer"" AND m.link_to_major = ""Student_Club""",0.0
95,1308,"Among the patients who have a normal platelet level, how many of them have other symptoms observed?",thrombosis_prediction,moderate,SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.PLT > 100 AND T2.PLT < 400 AND T1.Diagnosis IS NOT NULL,7,"SELECT COUNT(*) FROM examination JOIN patient ON examination.id = patient.id JOIN laboratory ON examination.id = laboratory.id WHERE laboratory.plt = 'normal' AND examination.symptoms IS NOT NULL
SELECT COUNT(*) FROM examination JOIN patient ON examination.id = patient.id JOIN laboratory ON examination.id = laboratory.id WHERE laboratory.plt = 'normal' AND examination.symptoms IS NOT NULL
SELECT COUNT(*) FROM examination JOIN patient ON examination.id = patient.id JOIN laboratory ON examination.id = laboratory.id WHERE laboratory.plt = 'normal' AND examination.symptoms IS NOT NULL
SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.plt = 'normal' AND examination.symptoms IS NOT NULL
SELECT COUNT(*) FROM examination JOIN patient ON examination.id = patient.id JOIN laboratory ON examination.id = laboratory.id WHERE laboratory.plt = 'normal' AND examination.symptoms IS NOT NULL
SELECT COUNT(*) FROM examination JOIN patient ON examination.id = patient.id JOIN laboratory ON examination.id = laboratory.id WHERE laboratory.plt = 'normal' AND examination.symptoms IS NOT NULL
SELECT COUNT(*) FROM examination JOIN patient ON examination.id = patient.id JOIN laboratory ON examination.id = laboratory.id WHERE laboratory.plt = 'normal' AND examination.symptoms IS NOT NULL",SELECT COUNT(*) FROM examination JOIN patient ON examination.id = patient.id JOIN laboratory ON examination.id = laboratory.id WHERE laboratory.plt = 'normal' AND examination.symptoms IS NOT NULL,0.0
96,1109,"How was the build up play dribbling class for ""LEI"" on 2015/9/10?",european_football_2,moderate,"SELECT t2.buildUpPlayDribblingClass FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t1.team_short_name = 'LEI' AND SUBSTR(t2.`date`, 1, 10) = '2015-09-10'",7,"SELECT team_attributes.buildupplaydribblingclass FROM team_attributes JOIN team ON team_attributes.team_api_id = team.team_api_id JOIN league ON team.team_fifa_api_id = league.id JOIN country ON league.country_id = country.id WHERE country.name = ""LEI"" AND team_attributes.date = ""2015/9/10""
SELECT team_attributes.buildupplaydribblingclass FROM team_attributes JOIN team ON team_attributes.team_api_id = team.team_api_id JOIN league ON team.team_fifa_api_id = league.id JOIN country ON league.country_id = country.id WHERE country.name = ""LEI"" AND team_attributes.date = ""2015/9/10""
SELECT team_attributes.buildupplaydribblingclass FROM team_attributes JOIN team ON team_attributes.team_api_id = team.team_api_id JOIN league ON team.team_fifa_api_id = league.id JOIN country ON league.country_id = country.id WHERE country.name = ""LEI"" AND team_attributes.date = ""2015/9/10""
SELECT team_attributes.buildupplaydribblingclass FROM team_attributes JOIN team ON team_attributes.team_api_id = team.team_api_id JOIN league ON team.team_fifa_api_id = league.id JOIN country ON league.country_id = country.id WHERE country.name = ""LEI"" AND team_attributes.date = ""2015/9/10""
SELECT team_attributes.buildupplaydribblingclass FROM team_attributes JOIN team ON team_attributes.team_api_id = team.team_api_id JOIN league ON team.team_fifa_api_id = league.id JOIN country ON league.country_id = country.id WHERE country.name = ""LEI"" AND team_attributes.date = ""2015/9/10""
SELECT team_attributes.buildupplaydribblingclass FROM team_attributes JOIN team ON team_attributes.team_api_id = team.team_api_id JOIN league ON team.team_fifa_api_id = league.id JOIN country ON league.country_id = country.id WHERE country.name = ""LEI"" AND team_attributes.date = ""2015/9/10""
SELECT team_attributes.buildupplaydribblingclass FROM team_attributes JOIN team ON team_attributes.team_api_id = team.team_api_id JOIN league ON team.team_fifa_api_id = league.id JOIN country ON league.country_id = country.id WHERE country.name = ""LEI"" AND team_attributes.date = ""2015/9/10""","SELECT team_attributes.buildupplaydribblingclass FROM team_attributes JOIN team ON team_attributes.team_api_id = team.team_api_id JOIN league ON team.team_fifa_api_id = league.id JOIN country ON league.country_id = country.id WHERE country.name = ""LEI"" AND team_attributes.date = ""2015/9/10""",0.0
97,1113,"For the team ""Hannover 96"", what was its defence aggression class on 2015/9/10?",european_football_2,moderate,SELECT t2.chanceCreationShootingClass FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t1.team_long_name = 'Hannover 96' AND t2.`date` LIKE '2015-09-10%',7,"SELECT defenceaggressionclass FROM team_attributes JOIN team ON team_attributes.team_api_id = team.id WHERE team.team_long_name = ""Hannover 96"" AND team_attributes.date = ""2015/9/10""
SELECT defenceaggressionclass FROM team_attributes JOIN team ON team_attributes.team_api_id = team.id WHERE team.team_long_name = ""Hannover 96"" AND team_attributes.date = ""2015/9/10""
SELECT defenceaggressionclass FROM team_attributes JOIN team ON team_attributes.team_api_id = team.id WHERE team.team_long_name = ""Hannover 96"" AND team_attributes.date = ""2015/9/10""
SELECT defenceaggressionclass FROM team_attributes JOIN team ON team_attributes.team_api_id = team.id WHERE team.team_long_name = ""Hannover 96"" AND team_attributes.date = ""2015/9/10""
SELECT defenceaggressionclass FROM team_attributes JOIN team ON team_attributes.team_api_id = team.id WHERE team.team_long_name = ""Hannover 96"" AND team_attributes.date = ""2015/9/10""
SELECT defenceaggressionclass FROM team_attributes JOIN team ON team_attributes.team_api_id = team.id WHERE team.team_long_name = ""Hannover 96"" AND team_attributes.date = ""2015/9/10""
SELECT defenceaggressionclass FROM team_attributes JOIN team ON team_attributes.team_api_id = team.id WHERE team.team_long_name = ""Hannover 96"" AND team_attributes.date = ""2015/9/10""","SELECT defenceaggressionclass FROM team_attributes JOIN team ON team_attributes.team_api_id = team.id WHERE team.team_long_name = ""Hannover 96"" AND team_attributes.date = ""2015/9/10""",0.0
98,634,"Among posts by Harvey Motulsky and Noah Snyder, which one has higher popularity?",codebase_community,challenging,SELECT T1.DisplayName FROM users AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.UserId INNER JOIN posts AS T3 ON T2.PostId = T3.Id WHERE T1.DisplayName = 'Harvey Motulsky' OR T1.DisplayName = 'Noah Snyder' GROUP BY T1.DisplayName ORDER BY SUM(T3.ViewCount) DESC LIMIT 1,7,"SELECT p.id, p.ownerdisplayname, p.score FROM posts p WHERE p.ownerdisplayname IN ('Harvey Motulsky', 'Noah Snyder') ORDER BY p.score DESC LIMIT 1
SELECT p.id, p.ownerdisplayname, p.score FROM posts p WHERE p.ownerdisplayname IN ('Harvey Motulsky', 'Noah Snyder') ORDER BY p.score DESC LIMIT 1
SELECT p.id, p.ownerdisplayname, p.score FROM posts p WHERE p.ownerdisplayname IN ('Harvey Motulsky', 'Noah Snyder') ORDER BY p.score DESC LIMIT 1
SELECT p.id, p.ownerdisplayname, p.score FROM posts p WHERE p.ownerdisplayname IN ('Harvey Motulsky', 'Noah Snyder') ORDER BY p.score DESC LIMIT 1
SELECT p.id, p.ownerdisplayname, p.score FROM posts p WHERE p.ownerdisplayname IN ('Harvey Motulsky', 'Noah Snyder') ORDER BY p.score DESC LIMIT 1
SELECT p.id, p.ownerdisplayname, p.score FROM posts p WHERE p.ownerdisplayname IN ('Harvey Motulsky', 'Noah Snyder') ORDER BY p.score DESC LIMIT 1
SELECT p.id, p.ownerdisplayname, p.score FROM posts p WHERE p.ownerdisplayname IN ('Harvey Motulsky', 'Noah Snyder') ORDER BY p.score DESC LIMIT 1","SELECT p.id, p.ownerdisplayname, p.score FROM posts p WHERE p.ownerdisplayname IN ('Harvey Motulsky', 'Noah Snyder') ORDER BY p.score DESC LIMIT 1",0.0
99,1265,How many patients have a normal level of anti-ribonuclear protein and have been admitted to the hospital?,thrombosis_prediction,moderate,SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RNP = 'negative' OR T2.RNP = '0' AND T1.Admission = '+',7,"SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.rnp = 'normal' AND patient.admission = 'yes'
SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.rnp = 'normal' AND patient.admission = 'yes'
SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.rnp = 'normal' AND patient.admission = 'yes'
SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.rnp = 'normal' AND patient.admission = 'yes'
SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.rnp = 'normal' AND patient.admission = 'yes'
SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.rnp = 'normal' AND patient.admission = 'yes'
SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.rnp = 'normal' AND patient.admission = 'yes'",SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.rnp = 'normal' AND patient.admission = 'yes',0.0
100,1076,"What is the difference of the average ball control score between Abdou Diallo and Aaron Appindangoye
?",european_football_2,challenging,SELECT CAST(SUM(CASE WHEN t1.player_name = 'Abdou Diallo' THEN t2.ball_control ELSE 0 END) AS REAL) / COUNT(CASE WHEN t1.player_name = 'Abdou Diallo' THEN t2.id ELSE NULL END) - CAST(SUM(CASE WHEN t1.player_name = 'Aaron Appindangoye' THEN t2.ball_control ELSE 0 END) AS REAL) / COUNT(CASE WHEN t1.player_name = 'Aaron Appindangoye' THEN t2.id ELSE NULL END) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id,7,"NULL
SELECT player_api_id FROM player WHERE player_name = 'Aaron Appindangoye') JOIN     player p2 ON pa2.player_api_id = p2.player_api_id WHERE     p1.player_name = 'Abdou Diallo'
NULL
NULL
NULL
NULL
NULL",,0.0
101,477,"Which of these artists have designed a card in the set Coldsnap, Jeremy Jarvis, Aaron Miller or Chippy?",card_games,challenging,SELECT T1.artist FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE (T2.name = 'Coldsnap' AND T1.artist = 'Chippy') OR (T2.name = 'Coldsnap' AND T1.artist = 'Aaron Miller') OR (T2.name = 'Coldsnap' AND T1.artist = 'Jeremy Jarvis') GROUP BY T1.artist,7,"SELECT artist FROM cards WHERE setcode = 'Coldsnap' AND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')
SELECT artist FROM cards WHERE setcode = 'Coldsnap' AND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')
SELECT artist FROM cards WHERE setcode = 'Coldsnap' AND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')
SELECT artist FROM cards WHERE setcode = 'Coldsnap' AND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')
SELECT artist FROM cards WHERE setcode = 'Coldsnap' AND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')
SELECT artist FROM cards WHERE setcode = 'Coldsnap' AND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')
SELECT artist FROM cards WHERE setcode = 'Coldsnap' AND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')","SELECT artist FROM cards WHERE setcode = 'Coldsnap' AND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')",0.0
102,1124,Who are the players that tend to be attacking when their mates were doing attack moves? List down their name.,european_football_2,moderate,SELECT DISTINCT t1.player_name FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t2.attacking_work_rate = 'high',7,"SELECT player.player_name FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id JOIN match ON player_attributes.player_api_id IN (match.home_player_1, match.home_player_2, ..., match.home_player_11, match.away_player_1, match.away_player_2, ..., match.away_player_11) WHERE player_attributes.attacking_work_rate = 'high' AND EXISTS (     SELECT 1     FROM player_attributes AS pa2     JOIN match AS m2 ON pa2.player_api_id IN (m2.home_player_1, m2.home_player_2, ..., m2.home_player_11, m2.away_player_1, m2.away_player_2, ..., m2.away_player_11)     WHERE m2.match_api_id = match.match_api_id     AND pa2.player_api_id != player_attributes.player_api_id     AND pa2.attacking_work_rate = 'high' )
SELECT p.player_name FROM player p JOIN player_attributes pa ON p.player_api_id = pa.player_api_id JOIN match m ON p.player_api_id IN (m.home_player_1, m.home_player_2, ..., m.home_player_11, m.away_player_1, m.away_player_2, ..., m.away_player_11) WHERE pa.attacking_work_rate = 'high' AND EXISTS (     SELECT 1     FROM match m2     WHERE m2.match_api_id = m.match_api_id     AND m2.home_team_api_id = m.home_team_api_id     AND (         (m2.home_player_1 IN (m.home_player_1, m.home_player_2, ..., m.home_player_11) AND m2.home_player_1 <> p.player_api_id)         OR (m2.away_player_1 IN (m.away_player_1, m.away_player_2, ..., m.away_player_11) AND m2.away_player_1 <> p.player_api_id
SELECT p.player_name FROM player_attributes pa JOIN player p ON pa.player_api_id = p.player_api_id JOIN match m ON pa.player_api_id IN (m.home_player_1, m.home_player_2, ..., m.home_player_11, m.away_player_1, m.away_player_2, ..., m.away_player_11) WHERE pa.attacking_work_rate = 'high' AND EXISTS (     SELECT 1     FROM player_attributes pa2     JOIN match m2 ON pa2.player_api_id IN (m2.home_player_1, m2.home_player_2, ..., m2.home_player_11, m2.away_player_1, m2.away_player_2, ..., m2.away_player_11)     WHERE pa2.player_api_id <> pa.player_api_id     AND m2.match_api_id = m.match_api_id     AND pa2.attacking_work_rate = 'high' )
SELECT p.player_name FROM player p JOIN player_attributes pa ON p.player_api_id = pa.player_api_id JOIN match m ON p.player_api_id IN (m.home_player_1, m.home_player_2, ..., m.home_player_11, m.away_player_1, m.away_player_2, ..., m.away_player_11) WHERE pa.attacking_work_rate = 'high' AND EXISTS (     SELECT 1     FROM match m2     WHERE m2.match_api_id = m.match_api_id     AND m2.home_team_api_id = m.home_team_api_id     AND (         (m2.home_player_1 IN (m.home_player_1, m.home_player_2, ..., m.home_player_11) AND m2.home_player_1 <> p.player_api_id)         OR (m2.away_player_1 IN (m.away_player_1, m.away_player_2, ..., m.away_player_11) AND m2.away_player_1 <> p.player_api_id
SELECT player.player_name FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id JOIN match ON player_attributes.player_api_id IN (match.home_player_1, match.home_player_2, ..., match.home_player_11, match.away_player_1, match.away_player_2, ..., match.away_player_11) WHERE player_attributes.attacking_work_rate = 'high' AND EXISTS (     SELECT 1     FROM player_attributes AS pa2     JOIN match AS m2 ON pa2.player_api_id IN (m2.home_player_1, m2.home_player_2, ..., m2.home_player_11, m2.away_player_1, m2.away_player_2, ..., m2.away_player_11)     WHERE m2.match_api_id = match.match_api_id     AND pa2.player_api_id != player_attributes.player_api_id     AND pa2.attacking_work_rate = 'high' )
SELECT p.player_name FROM player p JOIN player_attributes pa ON p.player_api_id = pa.player_api_id JOIN match m ON p.player_api_id IN (m.home_player_1, m.home_player_2, ..., m.home_player_11, m.away_player_1, m.away_player_2, ..., m.away_player_11) WHERE pa.attacking_work_rate = 'high' AND EXISTS (     SELECT 1     FROM match m2     WHERE m2.match_api_id = m.match_api_id     AND (         (m2.home_team_api_id = m.home_team_api_id AND m2.home_player_1 <> p.player_api_id AND m2.home_player_1 IN (SELECT player_api_id FROM player_attributes WHERE attacking_work_rate = 'high'))         OR         (m2.away_team_api_id = m.home_team_api_id AND m2.away_player_1 <> p.player_api_id AND m2.away_player_1 IN (SELECT player_api_id FROM player_attributes WHERE attacking_work
SELECT player.player_name FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id JOIN match ON player_attributes.player_api_id IN (match.home_player_1, match.home_player_2, ..., match.home_player_11, match.away_player_1, match.away_player_2, ..., match.away_player_11) WHERE player_attributes.attacking_work_rate = 'high' AND EXISTS (     SELECT 1     FROM player_attributes AS pa2     JOIN match AS m2 ON pa2.player_api_id IN (m2.home_player_1, m2.home_player_2, ..., m2.home_player_11, m2.away_player_1, m2.away_player_2, ..., m2.away_player_11)     WHERE m2.match_api_id = match.match_api_id     AND pa2.player_api_id != player_attributes.player_api_id     AND pa2.attacking_work_rate = 'high' )","SELECT player.player_name FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id JOIN match ON player_attributes.player_api_id IN (match.home_player_1, match.home_player_2, ..., match.home_player_11, match.away_player_1, match.away_player_2, ..., match.away_player_11) WHERE player_attributes.attacking_work_rate = 'high' AND EXISTS (     SELECT 1     FROM player_attributes AS pa2     JOIN match AS m2 ON pa2.player_api_id IN (m2.home_player_1, m2.home_player_2, ..., m2.home_player_11, m2.away_player_1, m2.away_player_2, ..., m2.away_player_11)     WHERE m2.match_api_id = match.match_api_id     AND pa2.player_api_id != player_attributes.player_api_id     AND pa2.attacking_work_rate = 'high' )",0.0
103,1117,What are the player api id of 10 heaviest players?,european_football_2,simple,SELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 10,7,"SELECT player_fifa_api_id FROM player ORDER BY weight DESC LIMIT 10
SELECT player_fifa_api_id FROM player ORDER BY weight DESC LIMIT 10
SELECT player_fifa_api_id FROM player ORDER BY weight DESC LIMIT 10
SELECT player_fifa_api_id FROM player ORDER BY weight DESC LIMIT 10
SELECT player_fifa_api_id FROM player ORDER BY weight DESC LIMIT 10
SELECT player_fifa_api_id FROM player ORDER BY weight DESC LIMIT 10
SELECT player_fifa_api_id FROM player ORDER BY weight DESC LIMIT 10",SELECT player_fifa_api_id FROM player ORDER BY weight DESC LIMIT 10,0.0
104,1464,Write the full names of students who received funds on the date of 9/9/2019 and include the amount received.,student_club,challenging,"SELECT DISTINCT T3.first_name, T3.last_name, T4.amount FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T3.member_id = T2.link_to_member INNER JOIN income AS T4 ON T4.link_to_member = T3.member_id WHERE T4.date_received = '2019-09-09'",7,"SELECT member.first_name, member.last_name, income.amount FROM income JOIN member ON income.link_to_member = member.member_id WHERE income.date_received = '2019-09-09'
SELECT member.first_name, member.last_name, income.amount FROM income JOIN member ON income.link_to_member = member.member_id WHERE income.date_received = '2019-09-09'
SELECT member.first_name, member.last_name, income.amount FROM income JOIN member ON income.link_to_member = member.member_id WHERE income.date_received = '2019-09-09'
SELECT member.first_name, member.last_name, income.amount FROM income JOIN member ON income.link_to_member = member.member_id WHERE income.date_received = '2019-09-09'
SELECT member.first_name, member.last_name, income.amount FROM member JOIN income ON member.member_id = income.link_to_member JOIN budget ON income.income_id = budget.income_id JOIN event ON budget.link_to_event = event.event_id WHERE event.event_date = '2019-09-09'
SELECT member.first_name, member.last_name, income.amount FROM income JOIN member ON income.link_to_member = member.member_id WHERE income.date_received = '2019-09-09'
SELECT member.first_name, member.last_name, income.amount FROM income JOIN member ON income.link_to_member = member.member_id WHERE income.date_received = '2019-09-09'","SELECT member.first_name, member.last_name, income.amount FROM income JOIN member ON income.link_to_member = member.member_id WHERE income.date_received = '2019-09-09'",1.0
105,1458,Calculate the difference in the percentage of members in New Jersey and Vermont.,student_club,moderate,SELECT CAST((SUM(CASE WHEN T2.state = 'New Jersey' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.state = 'Vermont' THEN 1 ELSE 0 END)) AS REAL) * 100 / COUNT(T1.member_id) AS diff FROM member AS T1 INNER JOIN zip_code AS T2 ON T2.zip_code = T1.zip,7,"SELECT COUNT(DISTINCT member_id) FROM member)) -     (COUNT(DISTINCT m2.member_id) * 100.0 / (SELECT COUNT(DISTINCT member_id) FROM member)) AS percentage_difference FROM     member m1     JOIN zip_code z1 ON m1.zip = z1.zip_code     JOIN member m2     JOIN zip_code z2 ON m2.zip = z2.zip_code WHERE     z1.state = 'New Jersey'     AND z2.state = 'Vermont'
SELECT COUNT(DISTINCT member_id) FROM member)) -     (COUNT(DISTINCT m2.member_id) * 100.0 / (SELECT COUNT(DISTINCT member_id) FROM member)) AS percentage_difference FROM     member m1     JOIN zip_code z1 ON m1.zip = z1.zip_code     JOIN member m2     JOIN zip_code z2 ON m2.zip = z2.zip_code WHERE     z1.state = 'New Jersey'     AND z2.state = 'Vermont'
SELECT COUNT(DISTINCT member_id) FROM member)) -     (COUNT(DISTINCT m2.member_id) * 100.0 / (SELECT COUNT(DISTINCT member_id) FROM member)) AS percentage_difference FROM     member m1     JOIN zip_code z1 ON m1.zip = z1.zip_code     JOIN member m2     JOIN zip_code z2 ON m2.zip = z2.zip_code WHERE     z1.state = 'New Jersey'     AND z2.state = 'Vermont'
SELECT COUNT(DISTINCT member_id) FROM member)) -     (COUNT(DISTINCT m2.member_id) * 100.0 / (SELECT COUNT(DISTINCT member_id) FROM member)) AS percentage_difference FROM     member m1     JOIN zip_code z1 ON m1.zip = z1.zip_code     JOIN member m2     JOIN zip_code z2 ON m2.zip = z2.zip_code WHERE     z1.state = 'New Jersey'     AND z2.state = 'Vermont'
SELECT COUNT(DISTINCT member_id) FROM member)) -     (COUNT(DISTINCT m2.member_id) * 100.0 / (SELECT COUNT(DISTINCT member_id) FROM member)) AS percentage_difference FROM     member m1     JOIN zip_code z1 ON m1.zip = z1.zip_code     JOIN member m2     JOIN zip_code z2 ON m2.zip = z2.zip_code WHERE     z1.state = 'New Jersey'     AND z2.state = 'Vermont'
SELECT COUNT(DISTINCT member_id) FROM member)) -     (COUNT(DISTINCT m2.member_id) * 100.0 / (SELECT COUNT(DISTINCT member_id) FROM member)) AS percentage_difference FROM     member m1     JOIN zip_code z1 ON m1.zip = z1.zip_code     JOIN member m2     JOIN zip_code z2 ON m2.zip = z2.zip_code WHERE     z1.state = 'New Jersey'     AND z2.state = 'Vermont'
SELECT COUNT(DISTINCT member_id) FROM member)) -     (COUNT(DISTINCT m2.member_id) * 100.0 / (SELECT COUNT(DISTINCT member_id) FROM member)) AS percentage_difference FROM     member m1     JOIN zip_code z1 ON m1.zip = z1.zip_code     JOIN member m2     JOIN zip_code z2 ON m2.zip = z2.zip_code WHERE     z1.state = 'New Jersey'     AND z2.state = 'Vermont'",SELECT COUNT(DISTINCT member_id) FROM member)) -     (COUNT(DISTINCT m2.member_id) * 100.0 / (SELECT COUNT(DISTINCT member_id) FROM member)) AS percentage_difference FROM     member m1     JOIN zip_code z1 ON m1.zip = z1.zip_code     JOIN member m2     JOIN zip_code z2 ON m2.zip = z2.zip_code WHERE     z1.state = 'New Jersey'     AND z2.state = 'Vermont',0.0
106,473,Is the set of cards with Adarkar Valkyrie only available outside the United States?,card_games,moderate,"SELECT IIF(isForeignOnly = 1, 'YES', 'NO') FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE T1.name = 'Adarkar Valkyrie'",7,"SELECT cards.availability FROM cards JOIN sets ON cards.setcode = sets.code WHERE cards.name = 'Adarkar Valkyrie' AND sets.code NOT IN (SELECT code FROM sets WHERE name = 'United States')
SELECT cards.id, cards.name, sets.name AS set_name, sets.code, sets.isonlineonly FROM cards JOIN sets ON cards.setcode = sets.code WHERE cards.name = 'Adarkar Valkyrie' AND sets.code NOT LIKE '%US%'
SELECT availability FROM cards JOIN sets ON cards.setcode = sets.code WHERE cards.name = 'Adarkar Valkyrie' AND sets.code NOT IN (SELECT code FROM sets WHERE name = 'United States')
SELECT availability FROM cards JOIN sets ON cards.setcode = sets.code WHERE cards.name = 'Adarkar Valkyrie' AND sets.code NOT IN (SELECT code FROM sets WHERE name = 'United States')
SELECT availability FROM cards JOIN sets ON cards.setcode = sets.code WHERE cards.name = 'Adarkar Valkyrie' AND sets.code NOT IN (SELECT code FROM sets WHERE name = 'United States')
SELECT availability FROM cards JOIN sets ON cards.setcode = sets.code WHERE cards.name = 'Adarkar Valkyrie' AND sets.code NOT IN (SELECT code FROM sets WHERE name = 'United States')
SELECT availability FROM cards JOIN sets ON cards.setcode = sets.code WHERE cards.name = 'Adarkar Valkyrie' AND sets.code NOT IN (SELECT code FROM sets WHERE name = 'United States')",SELECT availability FROM cards JOIN sets ON cards.setcode = sets.code WHERE cards.name = 'Adarkar Valkyrie' AND sets.code NOT IN (SELECT code FROM sets WHERE name = 'United States'),0.0
107,87,"What are the valid e-mail addresses of the administrator of the school located in the San Bernardino county, City of San Bernardino City Unified that opened between 1/1/2009 to 12/31/2010 whose school types are public Intermediate/Middle Schools and Unified Schools?",california_schools,challenging,"SELECT T2.AdmEmail1, T2.AdmEmail2 FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'San Bernardino' AND T2.City = 'San Bernardino' AND T2.DOC = 54 AND strftime('%Y', T2.OpenDate) BETWEEN '2009' AND '2010' AND T2.SOC = 62",7,"SELECT admemail1, admemail2, admemail3 FROM schools WHERE county = 'San Bernardino' AND city = 'San Bernardino City' AND district = 'City Unified' AND opendate BETWEEN '2009-01-01' AND '2010-12-31' AND (schooltype = 'public Intermediate/Middle Schools' OR schooltype = 'Unified Schools')
SELECT admemail1, admemail2, admemail3 FROM schools WHERE county = 'San Bernardino' AND city = 'San Bernardino City' AND district = 'City Unified' AND opendate BETWEEN '2009-01-01' AND '2010-12-31' AND (schooltype = 'public Intermediate/Middle Schools' OR schooltype = 'Unified Schools')
SELECT admemail1, admemail2, admemail3 FROM schools WHERE county = 'San Bernardino' AND city = 'San Bernardino City' AND district = 'City Unified' AND opendate BETWEEN '2009-01-01' AND '2010-12-31' AND (schooltype = 'public Intermediate/Middle Schools' OR schooltype = 'Unified Schools')
SELECT admemail1, admemail2, admemail3 FROM schools WHERE county = 'San Bernardino' AND city = 'San Bernardino City' AND district = 'City Unified' AND opendate BETWEEN '2009-01-01' AND '2010-12-31' AND (schooltype = 'public Intermediate/Middle Schools' OR schooltype = 'Unified Schools')
SELECT admemail1, admemail2, admemail3 FROM schools WHERE county = 'San Bernardino' AND city = 'San Bernardino City' AND district = 'City Unified' AND opendate BETWEEN '2009-01-01' AND '2010-12-31' AND (schooltype = 'public Intermediate/Middle Schools' OR schooltype = 'Unified Schools')
SELECT admemail1, admemail2, admemail3 FROM schools WHERE county = 'San Bernardino' AND city = 'San Bernardino City' AND district = 'City Unified' AND opendate BETWEEN '2009-01-01' AND '2010-12-31' AND (schooltype = 'public Intermediate/Middle Schools' OR schooltype = 'Unified Schools')
SELECT admemail1, admemail2, admemail3 FROM schools WHERE county = 'San Bernardino' AND city = 'San Bernardino City' AND district = 'City Unified' AND opendate BETWEEN '2009-01-01' AND '2010-12-31' AND (schooltype = 'public Intermediate/Middle Schools' OR schooltype = 'Unified Schools')","SELECT admemail1, admemail2, admemail3 FROM schools WHERE county = 'San Bernardino' AND city = 'San Bernardino City' AND district = 'City Unified' AND opendate BETWEEN '2009-01-01' AND '2010-12-31' AND (schooltype = 'public Intermediate/Middle Schools' OR schooltype = 'Unified Schools')",0.0
108,719,"Among the superheroes with the super power of ""Super Strength"", how many of them have a height of over 200cm?",superhero,moderate,SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Super Strength' AND T1.height_cm > 200,7,"SELECT COUNT(*) FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength' AND superhero.height_cm > 200
SELECT COUNT(*) FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength' AND superhero.height_cm > 200
SELECT COUNT(*) FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength' AND superhero.height_cm > 200
SELECT COUNT(*) FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength' AND superhero.height_cm > 200
SELECT COUNT(*) FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength' AND superhero.height_cm > 200
SELECT COUNT(*) FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength' AND superhero.height_cm > 200
SELECT COUNT(*) FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength' AND superhero.height_cm > 200",SELECT COUNT(*) FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength' AND superhero.height_cm > 200,1.0
109,416,What percentage of cards without power are in French?,card_games,challenging,SELECT CAST(SUM(CASE WHEN T2.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.power IS NULL OR T1.power = '*',7,"SELECT (COUNT(cards.id) * 100.0 / (SELECT COUNT(*) FROM cards WHERE power IS NULL)) AS percentage FROM cards JOIN foreign_data ON cards.id = foreign_data.id WHERE power IS NULL AND foreign_data.language = 'French'
SELECT (COUNT(cards.id) * 100.0 / (SELECT COUNT(*) FROM cards WHERE power IS NULL)) AS percentage FROM cards JOIN foreign_data ON cards.id = foreign_data.id WHERE power IS NULL AND foreign_data.language = 'French'
SELECT (COUNT(cards.id) * 100.0 / (SELECT COUNT(*) FROM cards WHERE power IS NULL)) AS percentage FROM cards JOIN foreign_data ON cards.id = foreign_data.id WHERE power IS NULL AND foreign_data.language = 'French'
SELECT (COUNT(c.id) * 100.0 / (SELECT COUNT(*) FROM cards WHERE power IS NULL)) AS percentage FROM cards c JOIN foreign_data fd ON c.id = fd.id WHERE fd.language = 'French' AND c.power IS NULL
SELECT COUNT(cards.id) * 100.0 / (SELECT COUNT(*) FROM cards WHERE power IS NULL AND language = 'French') AS percentage
SELECT (COUNT(cards.id) * 100.0 / (SELECT COUNT(*) FROM cards WHERE power IS NULL)) AS percentage FROM cards JOIN foreign_data ON cards.id = foreign_data.id WHERE power IS NULL AND foreign_data.language = 'French'
SELECT (COUNT(cards.id) * 100.0 / (SELECT COUNT(*) FROM cards WHERE power IS NULL)) AS percentage FROM cards JOIN foreign_data ON cards.id = foreign_data.id WHERE power IS NULL AND foreign_data.language = 'French'",SELECT (COUNT(cards.id) * 100.0 / (SELECT COUNT(*) FROM cards WHERE power IS NULL)) AS percentage FROM cards JOIN foreign_data ON cards.id = foreign_data.id WHERE power IS NULL AND foreign_data.language = 'French',0.0
110,944,How much faster in percentage is the champion than the driver who finished the race last in the 2008 Australian Grand Prix?,formula_1,challenging,"WITH time_in_seconds AS ( SELECT T1.positionOrder, CASE WHEN T1.positionOrder = 1 THEN (CAST(SUBSTR(T1.time, 1, 1) AS REAL) * 3600) + (CAST(SUBSTR(T1.time, 3, 2) AS REAL) * 60) + CAST(SUBSTR(T1.time, 6) AS REAL) ELSE CAST(SUBSTR(T1.time, 2) AS REAL) END AS time_seconds FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Australian Grand Prix' AND T1.time IS NOT NULL AND T2.year = 2008 ), champion_time AS ( SELECT time_seconds FROM time_in_seconds WHERE positionOrder = 1), last_driver_incremental AS ( SELECT time_seconds FROM time_in_seconds WHERE positionOrder = (SELECT MAX(positionOrder) FROM time_in_seconds) ) SELECT (CAST((SELECT time_seconds FROM last_driver_incremental) AS REAL) * 100) / (SELECT time_seconds + (SELECT time_seconds FROM last_driver_incremental) FROM champion_time)",7,"SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE name = '2008 Australian Grand Prix') ORDER BY position DESC LIMIT 1) -     (SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE name = '2008 Australian Grand Prix') ORDER BY position ASC LIMIT 1)) /     (SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE name = '2008 Australian Grand Prix') ORDER BY position DESC LIMIT 1) * 100 AS percentage_faster
SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE name = '2008 Australian Grand Prix') ORDER BY position DESC LIMIT 1) -     (SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE name = '2008 Australian Grand Prix') ORDER BY position ASC LIMIT 1)) /     (SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE name = '2008 Australian Grand Prix') ORDER BY position DESC LIMIT 1) * 100 AS percentage_faster
SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE name = '2008 Australian Grand Prix') ORDER BY position DESC LIMIT 1) -     (SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE name = '2008 Australian Grand Prix') ORDER BY position ASC LIMIT 1)) /     (SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE name = '2008 Australian Grand Prix') ORDER BY position DESC LIMIT 1) * 100 AS percentage_faster
SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE name = '2008 Australian Grand Prix') ORDER BY position DESC LIMIT 1) -     (SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE name = '2008 Australian Grand Prix') ORDER BY position ASC LIMIT 1)) /     (SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE name = '2008 Australian Grand Prix') ORDER BY position DESC LIMIT 1) * 100 AS percentage_faster
SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE name = '2008 Australian Grand Prix') ORDER BY position DESC LIMIT 1) -     (SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE name = '2008 Australian Grand Prix') ORDER BY position ASC LIMIT 1)) /     (SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE name = '2008 Australian Grand Prix') ORDER BY position DESC LIMIT 1) * 100 AS percentage_faster
SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE name = '2008 Australian Grand Prix') ORDER BY position DESC LIMIT 1) -     (SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE name = '2008 Australian Grand Prix') ORDER BY position ASC LIMIT 1)) /     (SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE name = '2008 Australian Grand Prix') ORDER BY position DESC LIMIT 1) * 100 AS percentage_faster
SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE name = '2008 Australian Grand Prix') ORDER BY position DESC LIMIT 1) -     (SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE name = '2008 Australian Grand Prix') ORDER BY position ASC LIMIT 1)) /     (SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE name = '2008 Australian Grand Prix') ORDER BY position DESC LIMIT 1) * 100 AS percentage_faster",SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE name = '2008 Australian Grand Prix') ORDER BY position DESC LIMIT 1) -     (SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE name = '2008 Australian Grand Prix') ORDER BY position ASC LIMIT 1)) /     (SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE name = '2008 Australian Grand Prix') ORDER BY position DESC LIMIT 1) * 100 AS percentage_faster,0.0
111,791,Calculate the average height for each superhero.,superhero,simple,SELECT CAST(SUM(height_cm) AS REAL) / COUNT(id) FROM superhero,7,"SELECT alignment, AVG(height_cm) AS average_height FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id GROUP BY alignment
SELECT alignment, AVG(height_cm) AS average_height FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id GROUP BY alignment
SELECT alignment, AVG(height_cm) AS average_height FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id GROUP BY alignment
SELECT alignment, AVG(height_cm) AS average_height FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id GROUP BY alignment
SELECT alignment, AVG(height_cm) AS average_height FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id GROUP BY alignment
SELECT alignment, AVG(height_cm) AS average_height FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id GROUP BY alignment
SELECT alignment, AVG(height_cm) AS average_height FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id GROUP BY alignment","SELECT alignment, AVG(height_cm) AS average_height FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id GROUP BY alignment",0.0
112,827,What is the average height of a non-human superhero in Dark Horse Comics?,superhero,moderate,SELECT AVG(T1.height_cm) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN race AS T3 ON T1.race_id = T3.id WHERE T2.publisher_name = 'Dark Horse Comics' AND T3.race != 'Human',7,"SELECT AVG(height_cm) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id JOIN race ON superhero.race_id = race.id WHERE publisher.publisher_name = 'Dark Horse Comics' AND race.race != 'Human'
SELECT AVG(height_cm) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Dark Horse Comics' AND superhero.race_id NOT IN (SELECT id FROM race WHERE race = 'human') AND superhero.alignment_id NOT IN (SELECT id FROM alignment WHERE alignment = 'good' OR alignment = 'neutral')
SELECT AVG(height_cm) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Dark Horse Comics' AND superhero.race_id NOT IN (SELECT id FROM race WHERE race = 'human') AND superhero.alignment_id NOT IN (SELECT id FROM alignment WHERE alignment = 'good' OR alignment = 'neutral')
SELECT AVG(height_cm) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id JOIN race ON superhero.race_id = race.id WHERE publisher.publisher_name = 'Dark Horse Comics' AND race.race != 'Human'
SELECT AVG(height_cm) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id JOIN race ON superhero.race_id = race.id WHERE publisher.publisher_name = 'Dark Horse Comics' AND race.race != 'Human'
SELECT AVG(height_cm) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id JOIN race ON superhero.race_id = race.id WHERE publisher.publisher_name = 'Dark Horse Comics' AND race.race != 'human'
SELECT AVG(height_cm) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id JOIN race ON superhero.race_id = race.id WHERE publisher.publisher_name = 'Dark Horse Comics' AND race.race != 'human'",SELECT AVG(height_cm) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id JOIN race ON superhero.race_id = race.id WHERE publisher.publisher_name = 'Dark Horse Comics' AND race.race != 'Human',1.0
113,769,Which superhero has the most durability published by Dark Horse Comics?,superhero,challenging,SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T3.id = T2.attribute_id INNER JOIN publisher AS T4 ON T4.id = T1.publisher_id WHERE T4.publisher_name = 'Dark Horse Comics' AND T3.attribute_name = 'Durability' ORDER BY T2.attribute_value DESC LIMIT 1,7,"SELECT superhero_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE publisher.publisher_name = 'Dark Horse Comics' AND attribute.attribute_name = 'durability' ORDER BY hero_attribute.attribute_value DESC LIMIT 1
SELECT superhero_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE publisher.publisher_name = 'Dark Horse Comics' AND attribute.attribute_name = 'durability' ORDER BY hero_attribute.attribute_value DESC LIMIT 1
SELECT superhero_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE publisher.publisher_name = 'Dark Horse Comics' AND attribute.attribute_name = 'durability' ORDER BY hero_attribute.attribute_value DESC LIMIT 1
SELECT superhero_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE publisher.publisher_name = 'Dark Horse Comics' AND attribute.attribute_name = 'durability' ORDER BY hero_attribute.attribute_value DESC LIMIT 1
SELECT superhero_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE publisher.publisher_name = 'Dark Horse Comics' AND attribute.attribute_name = 'durability' ORDER BY hero_attribute.attribute_value DESC LIMIT 1
SELECT superhero_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE publisher.publisher_name = 'Dark Horse Comics' AND attribute.attribute_name = 'durability' ORDER BY hero_attribute.attribute_value DESC LIMIT 1
SELECT superhero_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE publisher.publisher_name = 'Dark Horse Comics' AND attribute.attribute_name = 'durability' ORDER BY hero_attribute.attribute_value DESC LIMIT 1",SELECT superhero_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE publisher.publisher_name = 'Dark Horse Comics' AND attribute.attribute_name = 'durability' ORDER BY hero_attribute.attribute_value DESC LIMIT 1,0.0
114,615,"Among the users who obtained the ""Organizer"" badges, calculate the percentage of users who are teenagers.",codebase_community,moderate,"SELECT CAST(SUM(IIF(T2.Age BETWEEN 13 AND 18, 1, 0)) AS REAL) * 100 / COUNT(T1.Id) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.`Name` = 'Organizer'",7,"SELECT COUNT(u.id) * 100.0 / (SELECT COUNT(*) FROM users WHERE id IN (SELECT userid FROM badges WHERE name = 'Organizer')) AS percentage_teenagers FROM users u JOIN badges b ON u.id = b.userid WHERE b.name = 'Organizer' AND u.age BETWEEN 13 AND 19
SELECT COUNT(u.id) * 100.0 / (SELECT COUNT(*) FROM users WHERE id IN (SELECT userid FROM badges WHERE name = 'Organizer')) AS percentage_teenagers FROM users u JOIN badges b ON u.id = b.userid WHERE b.name = 'Organizer' AND u.age BETWEEN 13 AND 19
SELECT COUNT(u.id) * 100.0 / (SELECT COUNT(*) FROM users WHERE id IN (SELECT userid FROM badges WHERE name = 'Organizer')) AS percentage_teenagers FROM users u JOIN badges b ON u.id = b.userid WHERE b.name = 'Organizer' AND u.age BETWEEN 13 AND 19
SELECT COUNT(u.id) * 100.0 / (SELECT COUNT(*) FROM users WHERE id IN (SELECT userid FROM badges WHERE name = 'Organizer')) AS percentage_teenagers FROM users u JOIN badges b ON u.id = b.userid WHERE b.name = 'Organizer' AND u.age BETWEEN 13 AND 19
SELECT COUNT(u.id) * 100.0 / (SELECT COUNT(*) FROM users WHERE id IN (SELECT userid FROM badges WHERE name = 'Organizer')) AS percentage_teenagers FROM users u JOIN badges b ON u.id = b.userid WHERE b.name = 'Organizer' AND u.age BETWEEN 13 AND 19
SELECT (COUNT(u.id) * 100.0 / (SELECT COUNT(*) FROM users WHERE id IN (SELECT userid FROM badges WHERE name = 'Organizer'))) AS percentage FROM users u WHERE u.id IN (SELECT userid FROM badges WHERE name = 'Organizer') AND u.age BETWEEN 13 AND 19
SELECT COUNT(u.id) * 100.0 / (SELECT COUNT(*) FROM users WHERE id IN (SELECT userid FROM badges WHERE name = 'Organizer')) AS percentage_teenagers FROM users u JOIN badges b ON u.id = b.userid WHERE u.age BETWEEN 13 AND 19 AND b.name = 'Organizer'",SELECT COUNT(u.id) * 100.0 / (SELECT COUNT(*) FROM users WHERE id IN (SELECT userid FROM badges WHERE name = 'Organizer')) AS percentage_teenagers FROM users u JOIN badges b ON u.id = b.userid WHERE b.name = 'Organizer' AND u.age BETWEEN 13 AND 19,1.0
115,575,What is the badge name that user 'SilentGhost' obtained?,codebase_community,simple,SELECT T2.Name FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'SilentGhost',7,"SELECT name FROM badges WHERE userid = (SELECT id FROM users WHERE displayname = 'SilentGhost')
SELECT name FROM badges WHERE userid = (SELECT id FROM users WHERE displayname = 'SilentGhost')
SELECT name FROM badges WHERE userid = (SELECT id FROM users WHERE displayname = 'SilentGhost')
SELECT name FROM badges WHERE userid = (SELECT id FROM users WHERE displayname = 'SilentGhost')
SELECT name FROM badges WHERE userid = (SELECT id FROM users WHERE displayname = 'SilentGhost')
SELECT name FROM badges WHERE userid = (SELECT id FROM users WHERE displayname = 'SilentGhost')
SELECT name FROM badges WHERE userid = (SELECT id FROM users WHERE displayname = 'SilentGhost')",SELECT name FROM badges WHERE userid = (SELECT id FROM users WHERE displayname = 'SilentGhost'),1.0
116,523,What is the annual average number of sets that were released between 1/1/2012 to 12/31/2015? Indicate the common langugage of the card.,card_games,challenging,"SELECT (CAST(SUM(T1.id) AS REAL) / COUNT(T1.id)) / 4, T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.id WHERE T1.releaseDate BETWEEN '2012-01-01' AND '2015-12-31' GROUP BY T1.releaseDate ORDER BY COUNT(T2.language) DESC LIMIT 1",7,"SELECT AVG(basesetsize) AS annual_average_sets FROM sets WHERE releasedate BETWEEN '2012-01-01' AND '2015-12-31'
SELECT AVG(basesetsize) AS annual_average_sets FROM sets WHERE releasedate BETWEEN '2012-01-01' AND '2015-12-31'
SELECT AVG(basesetsize) AS annual_average_sets FROM sets WHERE releasedate BETWEEN '2012-01-01' AND '2015-12-31'
SELECT AVG(basesetsize) AS annual_average_sets FROM sets WHERE releasedate BETWEEN '2012-01-01' AND '2015-12-31'
SELECT AVG(basesetsize) AS annual_average_sets FROM sets WHERE releasedate BETWEEN '2012-01-01' AND '2015-12-31'
SELECT AVG(basesetsize) AS annual_average_sets FROM sets WHERE releasedate BETWEEN '2012-01-01' AND '2015-12-31'
SELECT AVG(basesetsize) AS annual_average_sets FROM sets WHERE releasedate BETWEEN '2012-01-01' AND '2015-12-31'",SELECT AVG(basesetsize) AS annual_average_sets FROM sets WHERE releasedate BETWEEN '2012-01-01' AND '2015-12-31',0.0
117,319,How many elements are contained in bond_id TR001_3_4?,toxicology,challenging,SELECT COUNT(DISTINCT T1.element) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_3_4',7,"SELECT COUNT(*) FROM connected WHERE bond_id = 'TR001_3_4'
SELECT COUNT(*) FROM connected WHERE bond_id = 'TR001_3_4'
SELECT COUNT(*) FROM connected WHERE bond_id = 'TR001_3_4'
SELECT COUNT(*) FROM atom JOIN connected ON atom.atom_id = connected.atom_id WHERE connected.bond_id = 'TR001_3_4'
SELECT COUNT(*) FROM connected WHERE bond_id = 'TR001_3_4'
SELECT COUNT(*) FROM connected WHERE bond_id = 'TR001_3_4'
SELECT COUNT(*) FROM connected WHERE bond_id = 'TR001_3_4'",SELECT COUNT(*) FROM connected WHERE bond_id = 'TR001_3_4',0.0
118,1094,How much higher in percentage is Ariel Borysiuk's overall rating than that of Paulin Puel?,european_football_2,challenging,SELECT (SUM(CASE WHEN t1.player_name = 'Ariel Borysiuk' THEN t2.overall_rating ELSE 0 END) * 1.0 - SUM(CASE WHEN t1.player_name = 'Paulin Puel' THEN t2.overall_rating ELSE 0 END)) * 100 / SUM(CASE WHEN t1.player_name = 'Paulin Puel' THEN t2.overall_rating ELSE 0 END) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id,7,"SELECT ((SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Ariel Borysiuk')) - (SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Paulin Puel'))) / (SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Paulin Puel')) * 100 AS percentage_higher
SELECT ((SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Ariel Borysiuk')) - (SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Paulin Puel'))) / (SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Paulin Puel')) * 100 AS percentage_higher
SELECT ((SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Ariel Borysiuk')) - (SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Paulin Puel'))) / (SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Paulin Puel')) * 100 AS percentage_higher
SELECT ((SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Ariel Borysiuk')) - (SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Paulin Puel'))) / (SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Paulin Puel')) * 100 AS percentage_higher
SELECT ((SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Ariel Borysiuk')) - (SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Paulin Puel'))) / (SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Paulin Puel')) * 100 AS percentage_higher
SELECT ((SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Ariel Borysiuk')) - (SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Paulin Puel'))) / (SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Paulin Puel')) * 100 AS percentage_higher
SELECT ((SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Ariel Borysiuk')) - (SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Paulin Puel'))) / (SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Paulin Puel')) * 100 AS percentage_higher",SELECT ((SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Ariel Borysiuk')) - (SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Paulin Puel'))) / (SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Paulin Puel')) * 100 AS percentage_higher,0.0
119,212,Which element is the least numerous in non-carcinogenic molecules?,toxicology,challenging,"SELECT T.element FROM (SELECT T1.element, COUNT(DISTINCT T1.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '-' GROUP BY T1.element ORDER BY COUNT(DISTINCT T1.molecule_id) ASC LIMIT 1) t",7,"SELECT element, COUNT(*) as count FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'non-carcinogenic' GROUP BY element ORDER BY count ASC LIMIT 1
SELECT element, COUNT(*) as count FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'non-carcinogenic' GROUP BY element ORDER BY count ASC LIMIT 1
SELECT element, COUNT(*) as count FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'non-carcinogenic' GROUP BY element ORDER BY count ASC LIMIT 1
SELECT element, COUNT(*) as count FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'non-carcinogenic' GROUP BY element ORDER BY count ASC LIMIT 1
SELECT element, COUNT(*) as count FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'non-carcinogenic' GROUP BY element ORDER BY count ASC LIMIT 1
SELECT element, COUNT(*) as count FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'non-carcinogenic' GROUP BY element ORDER BY count ASC LIMIT 1
SELECT element, COUNT(*) as count FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'non-carcinogenic' GROUP BY element ORDER BY count ASC LIMIT 1","SELECT element, COUNT(*) as count FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'non-carcinogenic' GROUP BY element ORDER BY count ASC LIMIT 1",0.0
120,513,"Among the sets whose expansion type is Commander, which set has the highest total number of cards including promotional and related supplemental products but excluding Alchemy modifications? Indicate the id of the set.",card_games,challenging,SELECT id FROM sets WHERE type = 'commander' ORDER BY totalSetSize DESC LIMIT 1,7,"SELECT id FROM sets WHERE type = 'Commander' ORDER BY totalsetsize DESC LIMIT 1
SELECT id FROM sets WHERE type = 'Commander' ORDER BY totalsetsize DESC LIMIT 1
SELECT id FROM sets WHERE type = 'Commander' ORDER BY totalsetsize DESC LIMIT 1
SELECT id FROM sets WHERE type = 'Commander' ORDER BY totalsetsize DESC LIMIT 1
SELECT id FROM sets WHERE type = 'Commander' ORDER BY totalsetsize DESC LIMIT 1
SELECT id FROM sets WHERE type = 'Commander' ORDER BY totalsetsize DESC LIMIT 1
SELECT id FROM sets WHERE type = 'Commander' ORDER BY totalsetsize DESC LIMIT 1",SELECT id FROM sets WHERE type = 'Commander' ORDER BY totalsetsize DESC LIMIT 1,0.0
121,598,What is the percentage difference of student badges given during 2010 and 2011?,codebase_community,challenging,"SELECT CAST(SUM(IIF(STRFTIME('%Y', Date) = '2010', 1, 0)) AS REAL) * 100 / COUNT(Id) - CAST(SUM(IIF(STRFTIME('%Y', Date) = '2011', 1, 0)) AS REAL) * 100 / COUNT(Id) FROM badges WHERE Name = 'Student'",7,"NULL
NULL
NULL
NULL
NULL
NULL
NULL",,0.0
122,330,Calculate the percentage of carcinogenic molecules with triple bonded Hidrogen atoms.,toxicology,challenging,SELECT CAST(SUM(CASE WHEN T1.label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T1.molecule_id = T3.molecule_id WHERE T3.bond_type = '#' AND T2.element = 'h',7,"SELECT (COUNT(DISTINCT a.molecule_id) * 100.0 / (SELECT COUNT(DISTINCT molecule_id) FROM molecule)) AS percentage_carcinogenic FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id WHERE a.element = 'Hidrogen' AND b.bond_type = 'triple' AND m.label = 'carcinogenic'
SELECT (COUNT(DISTINCT a.molecule_id) * 100.0 / (SELECT COUNT(DISTINCT molecule_id) FROM molecule)) AS percentage_carcinogenic FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id WHERE a.element = 'Hidrogen' AND b.bond_type = 'triple' AND m.label = 'carcinogenic'
SELECT (COUNT(DISTINCT a.molecule_id) * 100.0 / (SELECT COUNT(DISTINCT molecule_id) FROM molecule)) AS percentage_carcinogenic FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id WHERE a.element = 'Hidrogen' AND b.bond_type = 'triple' AND m.label = 'carcinogenic'
SELECT (COUNT(DISTINCT a.molecule_id) * 100.0 / (SELECT COUNT(DISTINCT molecule_id) FROM molecule)) AS percentage_carcinogenic FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id WHERE a.element = 'Hidrogen' AND b.bond_type = 'triple' AND m.label = 'carcinogenic'
SELECT (COUNT(DISTINCT a.molecule_id) * 100.0 / (SELECT COUNT(DISTINCT molecule_id) FROM molecule)) AS percentage FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id WHERE a.element = 'Hidrogen' AND b.bond_type = 'triple' AND a.atom_id IN (SELECT atom_id2 FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE bond_type = 'triple')) AND a.molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'carcinogenic')
SELECT COUNT(DISTINCT molecule_id) FROM molecule)) AS percentage_carcinogenic FROM     atom a JOIN     bond b ON a.molecule_id = b.molecule_id JOIN     connected c ON a.atom_id = c.atom_id WHERE     a.element = 'Hidrogen' AND b.bond_type = 'triple' AND m.label = 'carcinogenic'
SELECT (COUNT(DISTINCT a.molecule_id) * 100.0 / (SELECT COUNT(DISTINCT molecule_id) FROM molecule)) AS percentage_carcinogenic FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id WHERE a.element = 'Hidrogen' AND b.bond_type = 'triple' AND m.label = 'carcinogenic'",SELECT (COUNT(DISTINCT a.molecule_id) * 100.0 / (SELECT COUNT(DISTINCT molecule_id) FROM molecule)) AS percentage_carcinogenic FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id WHERE a.element = 'Hidrogen' AND b.bond_type = 'triple' AND m.label = 'carcinogenic',0.0
123,716,"Among the comments with scores between 5 to 10, what is the percentage of the users with 0 up votes?",codebase_community,moderate,"SELECT CAST(SUM(IIF(T1.UpVotes = 0, 1, 0)) AS REAL) * 100/ COUNT(T1.Id) AS per FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T2.Score BETWEEN 5 AND 10",7,"SELECT (COUNT(DISTINCT c.userid) * 100.0 / (SELECT COUNT(*) FROM comments c WHERE c.score BETWEEN 5 AND 10)) AS percentage FROM comments c JOIN votes v ON c.userid = v.userid WHERE c.score BETWEEN 5 AND 10 AND v.votetypeid = 1 AND v.postid = c.id
SELECT (COUNT(DISTINCT c.userid) * 100.0 / (SELECT COUNT(DISTINCT c.userid) FROM comments c WHERE c.score BETWEEN 5 AND 10 AND c.userid IN (SELECT v.userid FROM votes v WHERE v.votetypeid = 1))) AS percentage_of_users_with_0_up_votes FROM comments c WHERE c.score BETWEEN 5 AND 10 AND c.userid NOT IN (SELECT v.userid FROM votes v WHERE v.votetypeid = 2)
SELECT (COUNT(DISTINCT c.userid) * 100.0 / (SELECT COUNT(*) FROM comments c WHERE c.score BETWEEN 5 AND 10)) AS percentage FROM comments c JOIN votes v ON c.userid = v.userid WHERE c.score BETWEEN 5 AND 10 AND v.votetypeid = 1
SELECT (COUNT(DISTINCT c.userid) * 100.0 / (SELECT COUNT(*) FROM comments c WHERE c.score BETWEEN 5 AND 10)) AS percentage FROM comments c JOIN votes v ON c.userid = v.userid WHERE c.score BETWEEN 5 AND 10 AND v.votetypeid = 1 AND v.postid = c.id
SELECT (COUNT(DISTINCT c.userid) * 100.0 / (SELECT COUNT(*) FROM comments c WHERE c.score BETWEEN 5 AND 10)) AS percentage FROM comments c JOIN votes v ON c.userid = v.userid WHERE c.score BETWEEN 5 AND 10 AND v.votetypeid = 1 AND v.postid = c.id
SELECT (COUNT(DISTINCT c.userid) * 100.0 / (SELECT COUNT(*) FROM comments c WHERE c.score BETWEEN 5 AND 10)) AS percentage FROM comments c JOIN votes v ON c.userid = v.userid WHERE c.score BETWEEN 5 AND 10 AND v.votetypeid = 1 AND v.postid = c.id
SELECT (COUNT(DISTINCT c.userid) * 100.0 / (SELECT COUNT(*) FROM comments c WHERE c.score BETWEEN 5 AND 10)) AS percentage FROM comments c JOIN votes v ON c.userid = v.userid WHERE c.score BETWEEN 5 AND 10 AND v.votetypeid = 1 AND v.postid = c.id",SELECT (COUNT(DISTINCT c.userid) * 100.0 / (SELECT COUNT(*) FROM comments c WHERE c.score BETWEEN 5 AND 10)) AS percentage FROM comments c JOIN votes v ON c.userid = v.userid WHERE c.score BETWEEN 5 AND 10 AND v.votetypeid = 1 AND v.postid = c.id,0.0
124,247,List all the elements of atoms that can not bond with any other atoms.,toxicology,challenging,SELECT DISTINCT T.element FROM atom AS T WHERE T.element NOT IN ( SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id ),7,"SELECT a.element FROM atoms a LEFT JOIN connected c ON a.atom_id = c.atom_id WHERE c.bond_id IS NULL
SELECT a.atom_id, a.element FROM atoms a LEFT JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 WHERE c.bond_id IS NULL
SELECT a.atom_id, a.element FROM atoms a LEFT JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 WHERE c.bond_id IS NULL
SELECT a.atom_id, a.element FROM atoms a LEFT JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 WHERE c.bond_id IS NULL
SELECT a.atom_id, a.element FROM atoms a LEFT JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 WHERE c.bond_id IS NULL
SELECT a.atom_id, a.element FROM atoms a LEFT JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 WHERE c.bond_id IS NULL
SELECT a.atom_id, a.element FROM atoms a LEFT JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 WHERE c.bond_id IS NULL","SELECT a.atom_id, a.element FROM atoms a LEFT JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 WHERE c.bond_id IS NULL",0.0
125,116,"For the client whose loan was approved first in 1993/7/5, what is the increase rate of his/her account balance from 1993/3/22 to 1998/12/27?",financial,challenging,"SELECT CAST((SUM(IIF(T3.date = '1998-12-27', T3.balance, 0)) - SUM(IIF(T3.date = '1993-03-22', T3.balance, 0))) AS REAL) * 100 / SUM(IIF(T3.date = '1993-03-22', T3.balance, 0)) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN trans AS T3 ON T3.account_id = T2.account_id WHERE T1.date = '1993-07-05'",7,"SELECT balance FROM trans WHERE account_id = (         SELECT account_id FROM loan WHERE date = (SELECT MIN(date) FROM loan WHERE status = 'approved' AND strftime('%Y', date) = '1993' AND strftime('%m', date) = '07' AND strftime('%d', date) = '05')         AND date = '1998-12-27'     ) - (SELECT balance FROM trans WHERE account_id = (         SELECT account_id FROM loan WHERE date = (SELECT MIN(date) FROM loan WHERE status = 'approved' AND strftime('%Y', date) = '1993' AND strftime('%m', date) = '07' AND strftime('%d', date) = '05')         AND date = '1993-03-22'     ))     ) / (SELECT balance FROM trans WHERE account_id = (         SELECT account_id FROM loan WHERE date = (SELECT MIN(date) FROM loan WHERE status = 'approved' AND strftime('%Y', date) = '1993' AND strftime('%m', date) = '07' AND strftime('%
SELECT ((SELECT balance FROM trans WHERE account_id = (     SELECT account_id FROM loan WHERE date = (         SELECT MIN(date) FROM loan WHERE status = 'approved' AND strftime('%Y-%m-%d', date) >= '1993-07-05' AND strftime('%Y-%m-%d', date) < '1994-07-05'     ) AND date = (         SELECT MIN(date) FROM trans WHERE account_id = loan.account_id AND strftime('%Y-%m-%d', date) >= '1993-03-22' AND strftime('%Y-%m-%d', date) < '1993-03-23'     ) ) AND strftime('%Y-%m-%d', date) >= '1998-12-27' AND strftime('%Y-%m-%d', date) < '1998-12-28') - (SELECT balance FROM trans WHERE account_id = (     SELECT account_id FROM loan WHERE date = (         SELECT MIN(date) FROM loan WHERE status = 'approved' AND strftime('%Y-%m-%d', date) >=
SELECT balance FROM trans WHERE account_id = (         SELECT account_id FROM loan WHERE date = (             SELECT MIN(date) FROM loan WHERE status = 'approved' AND strftime('%Y', date) = '1993' AND strftime('%m', date) = '07' AND strftime('%d', date) = '05'         )     ) AND date = '1998-12-27') -     (SELECT balance FROM trans WHERE account_id = (         SELECT account_id FROM loan WHERE date = (             SELECT MIN(date) FROM loan WHERE status = 'approved' AND strftime('%Y', date) = '1993' AND strftime('%m', date) = '07' AND strftime('%d', date) = '05'         )     ) AND date = '1993-03-22')) /     (SELECT balance FROM trans WHERE account_id = (         SELECT account_id FROM loan WHERE date = (             SELECT MIN(date) FROM loan WHERE status = 'approved' AND strftime('%Y', date) = '1993' AND strftime('%m', date
SELECT ((t2.balance - t1.balance) / t1.balance) * 100 AS increase_rate FROM trans AS t1 JOIN trans AS t2 ON t1.account_id = t2.account_id JOIN loan ON t1.account_id = loan.account_id JOIN client ON t1.account_id = client.account_id WHERE t1.date = '1993-03-22' AND t2.date = '1998-12-27' AND loan.date = (SELECT MIN(date) FROM loan WHERE status = 'approved' AND strftime('%Y', date) = '1993' AND strftime('%m', date) = '07' AND strftime('%d', date) = '05') LIMIT 1
SELECT balance FROM trans WHERE account_id = (         SELECT account_id FROM loan WHERE date = (SELECT MIN(date) FROM loan WHERE status = 'approved' AND strftime('%Y', date) = '1993' AND strftime('%m', date) = '07' AND strftime('%d', date) = '05')         AND date = '1998-12-27'     ) -     (SELECT balance FROM trans WHERE account_id = (         SELECT account_id FROM loan WHERE date = (SELECT MIN(date) FROM loan WHERE status = 'approved' AND strftime('%Y', date) = '1993' AND strftime('%m', date) = '07' AND strftime('%d', date) = '05')         AND date = '1993-03-22'     ))) /     (SELECT balance FROM trans WHERE account_id = (         SELECT account_id FROM loan WHERE date = (SELECT MIN(date) FROM loan WHERE status = 'approved' AND strftime('%Y', date) = '1993' AND strftime('%m', date) = '07' AND strftime('
SELECT ((SELECT balance FROM trans WHERE account_id = (     SELECT account_id FROM loan WHERE date = (         SELECT MIN(date) FROM loan WHERE status = 'approved' AND strftime('%Y', date) = '1993' AND strftime('%m', date) = '07' AND strftime('%d', date) = '05'     ) ) AND date = '1998-12-27') - (     SELECT balance FROM trans WHERE account_id = (         SELECT account_id FROM loan WHERE date = (             SELECT MIN(date) FROM loan WHERE status = 'approved' AND strftime('%Y', date) = '1993' AND strftime('%m', date) = '07' AND strftime('%d', date) = '05'         )     ) AND date = '1993-03-22')) / (     SELECT balance FROM trans WHERE account_id = (         SELECT account_id FROM loan WHERE date = (             SELECT MIN(date) FROM loan WHERE status = 'approved' AND strftime('%Y', date) = '1993' AND strftime('%m', date)
SELECT ((t2.balance - t1.balance) / t1.balance) * 100 AS increase_rate FROM trans AS t1 JOIN trans AS t2 ON t1.account_id = t2.account_id JOIN loan ON t1.account_id = loan.account_id JOIN client ON t1.account_id = client.account_id WHERE t1.date = '1993-03-22' AND t2.date = '1998-12-27' AND loan.date = (SELECT MIN(date) FROM loan WHERE status = 'approved' AND strftime('%Y', date) = '1993' AND strftime('%m', date) = '07' AND strftime('%d', date) = '05') LIMIT 1","SELECT ((t2.balance - t1.balance) / t1.balance) * 100 AS increase_rate FROM trans AS t1 JOIN trans AS t2 ON t1.account_id = t2.account_id JOIN loan ON t1.account_id = loan.account_id JOIN client ON t1.account_id = client.account_id WHERE t1.date = '1993-03-22' AND t2.date = '1998-12-27' AND loan.date = (SELECT MIN(date) FROM loan WHERE status = 'approved' AND strftime('%Y', date) = '1993' AND strftime('%m', date) = '07' AND strftime('%d', date) = '05') LIMIT 1",0.0
126,253,List the elements of all the triple bonds.,toxicology,challenging,SELECT DISTINCT T3.element FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T1.bond_type = '#',7,"SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'triple'
SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'triple'
SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'triple'
SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'triple'
SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'triple'
SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'triple'
SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'triple'",SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'triple',0.0
127,1051,List all the football player with the highest potential score.,european_football_2,simple,SELECT DISTINCT(t1.player_name) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t2.potential = (SELECT MAX(potential) FROM Player_Attributes) ,7,"SELECT player.player_name FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player_attributes.potential = (SELECT MAX(potential) FROM player_attributes) 
SELECT player.player_name FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player_attributes.potential = (SELECT MAX(potential) FROM player_attributes) 
SELECT player.player_name FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.potential = (SELECT MAX(potential) FROM player_attributes)
SELECT player.player_name FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player_attributes.potential = (SELECT MAX(potential) FROM player_attributes) 
SELECT player.player_name FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player_attributes.potential = (SELECT MAX(potential) FROM player_attributes) 
SELECT player.player_name, player_attributes.potential FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.potential = (SELECT MAX(potential) FROM player_attributes)
SELECT player.player_name FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player_attributes.potential = (SELECT MAX(potential) FROM player_attributes) ORDER BY player_attributes.potential DESC",SELECT player.player_name FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player_attributes.potential = (SELECT MAX(potential) FROM player_attributes) ,1.0
128,1241,"For patients with abnormal platelet level, state the number of patients with lower than normal range. How is it compare to the number of patients with higher than normal range?",thrombosis_prediction,challenging,SELECT SUM(CASE WHEN T2.PLT <= 100 THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.PLT >= 400 THEN 1 ELSE 0 END) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID,7,"SELECT COUNT(*) FROM laboratory WHERE plt < 150) AS lower_than_normal,     (SELECT COUNT(*) FROM laboratory WHERE plt > 450) AS higher_than_normal
SELECT COUNT(*) FROM laboratory WHERE plt < (SELECT AVG(plt) FROM laboratory)) AS 'Higher_Than_Normal_Range' FROM     laboratory WHERE     plt < (SELECT AVG(plt) FROM laboratory)
SELECT COUNT(DISTINCT p2.id) FROM patient p2 WHERE p2.id IN (SELECT l.id FROM laboratory l WHERE l.plt > (SELECT AVG(plt) FROM laboratory))) AS higher_than_normal FROM     patient p WHERE     p.id IN (SELECT l.id FROM laboratory l WHERE l.plt < (SELECT AVG(plt) FROM laboratory))
SELECT COUNT(*) FROM laboratory WHERE plt < (SELECT AVG(plt) FROM laboratory)) AS higher_than_normal_range FROM     laboratory WHERE     plt < (SELECT AVG(plt) FROM laboratory)
SELECT COUNT(DISTINCT p2.id) FROM patient p2 WHERE p2.id IN (SELECT l.id FROM laboratory l WHERE l.plt < (SELECT AVG(plt) FROM laboratory))) AS higher_than_normal FROM     patient p WHERE     p.id IN (SELECT l.id FROM laboratory l WHERE l.plt < (SELECT AVG(plt) FROM laboratory))
SELECT COUNT(DISTINCT p.id) FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.plt < normal_range) AS higher_than_normal FROM     patient p JOIN     laboratory l ON p.id = l.id WHERE     l.plt < normal_range
SELECT COUNT(*) FROM laboratory WHERE plt < 150) AS higher_than_normal_range FROM     laboratory WHERE     plt < 150","SELECT COUNT(*) FROM laboratory WHERE plt < 150) AS lower_than_normal,     (SELECT COUNT(*) FROM laboratory WHERE plt > 450) AS higher_than_normal",0.0
129,256,Calculate the total atoms consisting of the element carbon and hydrogen.,toxicology,simple,SELECT COUNT(T.atom_id) FROM atom AS T WHERE T.element = 'c' OR T.element = 'h',7,"SELECT COUNT(*) as total_atoms FROM atom WHERE element IN ('carbon', 'hydrogen')
SELECT COUNT(*) as total_atoms FROM atom WHERE element IN ('carbon', 'hydrogen')
SELECT COUNT(*) FROM atom WHERE element IN ('carbon', 'hydrogen')
SELECT COUNT(*) as total_atoms FROM atom WHERE element IN ('carbon', 'hydrogen')
SELECT COUNT(*) as total_atoms FROM atom WHERE element IN ('carbon', 'hydrogen')
SELECT COUNT(*) FROM atom WHERE element IN ('carbon', 'hydrogen')
SELECT COUNT(*) as total_atoms FROM atom WHERE element IN ('carbon', 'hydrogen')","SELECT COUNT(*) as total_atoms FROM atom WHERE element IN ('carbon', 'hydrogen')",0.0
130,775,What is the percentage of blue female superheroes among all female superheroes?,superhero,challenging,SELECT CAST(COUNT(CASE WHEN T3.colour = 'Blue' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN colour AS T3 ON T1.skin_colour_id = T3.id WHERE T2.gender = 'Female',7,"SELECT (COUNT(s.id) * 100.0 / (SELECT COUNT(id) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female'))) AS percentage FROM superhero s JOIN colour c ON s.eye_colour_id = c.id OR s.hair_colour_id = c.id OR s.skin_colour_id = c.id JOIN gender g ON s.gender_id = g.id WHERE c.colour = 'Blue' AND g.gender = 'Female'
SELECT (COUNT(s.id) * 100.0 / (SELECT COUNT(id) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female'))) AS percentage FROM superhero s JOIN colour c ON s.eye_colour_id = c.id OR s.hair_colour_id = c.id OR s.skin_colour_id = c.id JOIN gender g ON s.gender_id = g.id WHERE c.colour = 'Blue' AND g.gender = 'Female'
SELECT (COUNT(s.id) * 100.0 / (SELECT COUNT(id) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female'))) AS percentage FROM superhero s JOIN colour c ON s.eye_colour_id = c.id OR s.hair_colour_id = c.id OR s.skin_colour_id = c.id JOIN gender g ON s.gender_id = g.id WHERE c.colour = 'Blue' AND g.gender = 'Female'
SELECT (COUNT(s.id) * 100.0 / (SELECT COUNT(id) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female'))) AS percentage FROM superhero s JOIN colour c ON s.eye_colour_id = c.id OR s.hair_colour_id = c.id OR s.skin_colour_id = c.id JOIN gender g ON s.gender_id = g.id WHERE c.colour = 'Blue' AND g.gender = 'Female'
SELECT (COUNT(s.id) * 100.0 / (SELECT COUNT(id) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female'))) AS percentage FROM superhero s JOIN colour c ON s.eye_colour_id = c.id OR s.hair_colour_id = c.id OR s.skin_colour_id = c.id JOIN gender g ON s.gender_id = g.id WHERE c.colour = 'Blue' AND g.gender = 'Female'
SELECT (COUNT(s.id) * 100.0 / (SELECT COUNT(id) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female'))) AS percentage FROM superhero s JOIN colour c ON s.eye_colour_id = c.id OR s.hair_colour_id = c.id OR s.skin_colour_id = c.id JOIN gender g ON s.gender_id = g.id WHERE c.colour = 'Blue' AND g.gender = 'Female'
SELECT (COUNT(s.id) * 100.0 / (SELECT COUNT(id) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female'))) AS percentage FROM superhero s JOIN colour c ON s.eye_colour_id = c.id OR s.hair_colour_id = c.id OR s.skin_colour_id = c.id JOIN gender g ON s.gender_id = g.id WHERE c.colour = 'Blue' AND g.gender = 'Female'",SELECT (COUNT(s.id) * 100.0 / (SELECT COUNT(id) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female'))) AS percentage FROM superhero s JOIN colour c ON s.eye_colour_id = c.id OR s.hair_colour_id = c.id OR s.skin_colour_id = c.id JOIN gender g ON s.gender_id = g.id WHERE c.colour = 'Blue' AND g.gender = 'Female',0.0
131,200,Find the triple-bonded molecules which are carcinogenic.,toxicology,simple,SELECT DISTINCT T2.molecule_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#' AND T2.label = '+',7,"SELECT molecule.molecule_id, molecule.label FROM molecule JOIN bond ON molecule.molecule_id = bond.molecule_id JOIN connected ON bond.bond_id = connected.bond_id WHERE bond.bond_type = 'triple-bonded' AND molecule.label = 'carcinogenic'
SELECT molecule.molecule_id, molecule.label FROM molecule JOIN bond ON molecule.molecule_id = bond.molecule_id JOIN connected ON bond.bond_id = connected.bond_id WHERE bond.bond_type = 'triple-bonded' AND molecule.label = 'carcinogenic'
SELECT molecule.molecule_id, molecule.label FROM molecule JOIN bond ON molecule.molecule_id = bond.molecule_id JOIN connected ON bond.bond_id = connected.bond_id WHERE bond.bond_type = 'triple-bonded' AND molecule.label = 'carcinogenic'
SELECT molecule.molecule_id, molecule.label FROM molecule JOIN bond ON molecule.molecule_id = bond.molecule_id JOIN connected ON bond.bond_id = connected.bond_id WHERE bond.bond_type = 'triple-bonded' AND molecule.label = 'carcinogenic'
SELECT m.molecule_id, m.label FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id WHERE b.bond_type = 'triple' AND m.label = 'carcinogenic'
SELECT m.molecule_id, m.label FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id WHERE b.bond_type = 'triple' AND m.label = 'carcinogenic'
SELECT molecule.molecule_id, molecule.label FROM molecule JOIN bond ON molecule.molecule_id = bond.molecule_id JOIN connected ON bond.bond_id = connected.bond_id WHERE bond.bond_type = 'triple-bonded' AND molecule.label = 'carcinogenic'","SELECT molecule.molecule_id, molecule.label FROM molecule JOIN bond ON molecule.molecule_id = bond.molecule_id JOIN connected ON bond.bond_id = connected.bond_id WHERE bond.bond_type = 'triple-bonded' AND molecule.label = 'carcinogenic'",0.0
132,1275,"Among the patients who has a normal level of anti-centromere and a normal level of anti-SSB, how many of them are male?",thrombosis_prediction,moderate,"SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CENTROMEA IN ('negative', '0') AND T2.SSB IN ('negative', '0') AND T1.SEX = 'M'",7,"SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'male' AND laboratory.ssb = 'normal' AND laboratory.centromea = 'normal'
SELECT COUNT(*) FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.centromea = 'normal' AND laboratory.ssb = 'normal' AND patient.sex = 'male'
SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'male' AND laboratory.ssb = 'normal' AND laboratory.centromea = 'normal'
SELECT COUNT(*) FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.centromea = 'normal' AND laboratory.ssb = 'normal' AND patient.sex = 'male'
SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'male' AND laboratory.ssb = 'normal' AND laboratory.centromea = 'normal'
SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'male' AND laboratory.ssb = 'normal' AND laboratory.centromea = 'normal'
SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'male' AND laboratory.ssb = 'normal' AND laboratory.centromea = 'normal'",SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'male' AND laboratory.ssb = 'normal' AND laboratory.centromea = 'normal',0.0
133,1482,"Which of the three segments—SME, LAM and KAM—has the biggest and lowest percentage increases in consumption paid in EUR between 2012 and 2013?",debit_card_specializing,challenging,"SELECT CAST((SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2013%', T2.Consumption, 0)) - SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2012%', T2.Consumption, 0))) AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2012%', T2.Consumption, 0)), CAST(SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2013%', T2.Consumption, 0)) - SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) , CAST(SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2013%', T2.Consumption, 0)) - SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID",7,"SELECT segment,        ((SUM(amount * price) FILTER (WHERE strftime('%Y-%m', date) = '2013-12') -          SUM(amount * price) FILTER (WHERE strftime('%Y-%m', date) = '2012-12')) /         SUM(amount * price) FILTER (WHERE strftime('%Y-%m', date) = '2012-12')) * 100 AS percentage_increase FROM transactions_1k JOIN customers ON transactions_1k.customerid = customers.customerid JOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid WHERE currency = 'EUR' AND segment IN ('SME', 'LAM', 'KAM') GROUP BY segment ORDER BY percentage_increase DESC, percentage_increase ASC LIMIT 2
SELECT segment,        ((SUM(amount * price) FILTER (WHERE strftime('%Y-%m', date) = '2013-12') -          SUM(amount * price) FILTER (WHERE strftime('%Y-%m', date) = '2012-12')) /         SUM(amount * price) FILTER (WHERE strftime('%Y-%m', date) = '2012-12')) * 100 AS percentage_increase FROM transactions_1k JOIN customers ON transactions_1k.customerid = customers.customerid JOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid WHERE currency = 'EUR' GROUP BY segment ORDER BY percentage_increase DESC, percentage_increase ASC LIMIT 1
SELECT segment,        ((SUM(CASE WHEN strftime('%Y-%m', date) = '2013-01' THEN amount * price ELSE 0 END) -          SUM(CASE WHEN strftime('%Y-%m', date) = '2012-01' THEN amount * price ELSE 0 END)) /         SUM(CASE WHEN strftime('%Y-%m', date) = '2012-01' THEN amount * price ELSE 0 END)) * 100 AS percentage_increase FROM transactions_1k JOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid WHERE currency = 'EUR' AND strftime('%Y', date) IN ('2012', '2013') GROUP BY segment ORDER BY percentage_increase DESC, percentage_increase ASC
SELECT segment,        ((SUM(amount * price) FILTER (WHERE strftime('%Y-%m', date) = '2013-12') -          SUM(amount * price) FILTER (WHERE strftime('%Y-%m', date) = '2012-12')) /         SUM(amount * price) FILTER (WHERE strftime('%Y-%m', date) = '2012-12')) * 100 AS percentage_increase FROM transactions_1k JOIN customers ON transactions_1k.customerid = customers.customerid JOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid WHERE currency = 'EUR' AND strftime('%Y-%m', date) BETWEEN '2012-01' AND '2013-12' GROUP BY segment ORDER BY percentage_increase DESC, percentage_increase ASC LIMIT 1
SELECT segment,        ((SUM(amount * price) FILTER (WHERE strftime('%Y-%m', date) = '2013-12') -          SUM(amount * price) FILTER (WHERE strftime('%Y-%m', date) = '2012-12')) /         SUM(amount * price) FILTER (WHERE strftime('%Y-%m', date) = '2012-12')) * 100 AS percentage_increase FROM transactions_1k JOIN customers ON transactions_1k.customerid = customers.customerid JOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid WHERE currency = 'EUR' AND segment IN ('SME', 'LAM', 'KAM') GROUP BY segment ORDER BY percentage_increase DESC, percentage_increase ASC LIMIT 2
SELECT segment,        ((SUM(CASE WHEN strftime('%Y', date) = '2013' THEN amount * price ELSE 0 END) -          SUM(CASE WHEN strftime('%Y', date) = '2012' THEN amount * price ELSE 0 END)) /         SUM(CASE WHEN strftime('%Y', date) = '2012' THEN amount * price ELSE 0 END)) * 100 AS percentage_increase FROM transactions_1k JOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid WHERE currency = 'EUR' AND strftime('%Y', date) IN ('2012', '2013') GROUP BY segment ORDER BY percentage_increase DESC, percentage_increase ASC LIMIT 1
SELECT segment,        ((SUM(amount * price) FILTER (WHERE strftime('%Y-%m', date) = '2013-12') -          SUM(amount * price) FILTER (WHERE strftime('%Y-%m', date) = '2012-12')) /         SUM(amount * price) FILTER (WHERE strftime('%Y-%m', date) = '2012-12')) * 100 AS percentage_increase FROM transactions_1k JOIN customers ON transactions_1k.customerid = customers.customerid JOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid WHERE currency = 'EUR' AND segment IN ('SME', 'LAM', 'KAM') GROUP BY segment ORDER BY percentage_increase DESC, percentage_increase ASC LIMIT 2","SELECT segment,        ((SUM(amount * price) FILTER (WHERE strftime('%Y-%m', date) = '2013-12') -          SUM(amount * price) FILTER (WHERE strftime('%Y-%m', date) = '2012-12')) /         SUM(amount * price) FILTER (WHERE strftime('%Y-%m', date) = '2012-12')) * 100 AS percentage_increase FROM transactions_1k JOIN customers ON transactions_1k.customerid = customers.customerid JOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid WHERE currency = 'EUR' AND segment IN ('SME', 'LAM', 'KAM') GROUP BY segment ORDER BY percentage_increase DESC, percentage_increase ASC LIMIT 2",0.0
134,311,How many molecules without sulphur element is not having double bond?,toxicology,simple,SELECT COUNT(DISTINCT T1.molecule_id) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element <> 's' AND T2.bond_type <> '=',7,"SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m LEFT JOIN atom a ON m.molecule_id = a.molecule_id LEFT JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 LEFT JOIN bond b ON c.bond_id = b.bond_id WHERE a.element <> 'S' AND b.bond_type <> 'double' OR b.bond_id IS NULL
SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m LEFT JOIN atom a ON m.molecule_id = a.molecule_id LEFT JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 LEFT JOIN bond b ON c.bond_id = b.bond_id WHERE a.element <> 'sulphur' AND b.bond_type <> 'double' OR b.bond_type IS NULL
SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m LEFT JOIN atom a ON m.molecule_id = a.molecule_id LEFT JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 LEFT JOIN bond b ON c.bond_id = b.bond_id WHERE a.element <> 'S' AND b.bond_type <> 'double' OR b.bond_id IS NULL
SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m LEFT JOIN atom a ON m.molecule_id = a.molecule_id LEFT JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 LEFT JOIN bond b ON c.bond_id = b.bond_id WHERE a.element <> 'sulphur' AND b.bond_type <> 'double' OR b.bond_id IS NULL
SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m LEFT JOIN atom a ON m.molecule_id = a.molecule_id LEFT JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 LEFT JOIN bond b ON c.bond_id = b.bond_id WHERE a.element <> 'sulphur' AND (b.bond_type IS NULL OR b.bond_type <> 'double')
SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m LEFT JOIN atom a ON m.molecule_id = a.molecule_id LEFT JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 LEFT JOIN bond b ON c.bond_id = b.bond_id WHERE a.element <> 'sulphur' AND (b.bond_type IS NULL OR b.bond_type <> 'double')
SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m LEFT JOIN atom a ON m.molecule_id = a.molecule_id LEFT JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 LEFT JOIN bond b ON c.bond_id = b.bond_id WHERE a.element <> 'sulphur' AND (b.bond_type IS NULL OR b.bond_type <> 'double')",SELECT COUNT(DISTINCT m.molecule_id) FROM molecule m LEFT JOIN atom a ON m.molecule_id = a.molecule_id LEFT JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 LEFT JOIN bond b ON c.bond_id = b.bond_id WHERE a.element <> 'sulphur' AND (b.bond_type IS NULL OR b.bond_type <> 'double'),0.0
135,23,List the names of schools with more than 30 difference in enrollements between K-12 and ages 5-17? Please also give the full street adress of the schools.,california_schools,moderate,"SELECT T1.School, T1.Street FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`Enrollment (K-12)` - T2.`Enrollment (Ages 5-17)` > 30",7,"SELECT school, street || ', ' || city || ', ' || state || ' ' || zip FROM schools JOIN satscores ON schools.school = satscores.sname WHERE ABS(satscores.enroll12 - (SELECT ""enrollment (ages 5-17)"" FROM satscores WHERE schools.school = satscores.sname)) > 30
SELECT school, street || ', ' || city || ', ' || state || ' ' || zip FROM schools JOIN satscores ON schools.school = satscores.sname WHERE ABS(satscores.enroll12 - (SELECT ""enrollment (ages 5-17)"" FROM satscores WHERE satscores.sname = schools.school)) > 30
SELECT school, street || ', ' || city || ', ' || state || ' ' || zip FROM schools JOIN satscores ON schools.school = satscores.sname WHERE ABS(satscores.enroll12 - (SELECT ""enrollment (ages 5-17)"" FROM satscores WHERE satscores.sname = schools.school)) > 30
SELECT school, street || ', ' || city || ', ' || state || ' ' || zip FROM schools JOIN satscores ON schools.school = satscores.sname WHERE ABS(satscores.enroll12 - (SELECT ""enrollment (ages 5-17)"" FROM satscores WHERE satscores.sname = schools.school)) > 30
SELECT school, street || ', ' || city || ', ' || state || ' ' || zip FROM schools JOIN satscores ON schools.school = satscores.sname WHERE ABS(satscores.enroll12 - (SELECT ""enrollment (ages 5-17)"" FROM satscores WHERE satscores.sname = schools.school)) > 30
SELECT school, street || ', ' || city || ', ' || state || ' ' || zip FROM schools JOIN satscores ON schools.school = satscores.sname WHERE ABS(satscores.enroll12 - (SELECT ""enrollment (ages 5-17)"" FROM satscores WHERE satscores.sname = schools.school)) > 30
SELECT school, street || ', ' || city || ', ' || state || ' ' || zip FROM schools JOIN satscores ON schools.school = satscores.sname WHERE ABS(satscores.enroll12 - (SELECT ""enrollment (ages 5-17)"" FROM satscores WHERE satscores.sname = schools.school)) > 30","SELECT school, street || ', ' || city || ', ' || state || ' ' || zip FROM schools JOIN satscores ON schools.school = satscores.sname WHERE ABS(satscores.enroll12 - (SELECT ""enrollment (ages 5-17)"" FROM satscores WHERE satscores.sname = schools.school)) > 30",0.0
136,981,"On what year did the youngest driver had his first qualifying race? Also state the name, date and time of the race.",formula_1,moderate,"SELECT T3.year, T3.name, T3.date, T3.time FROM qualifying AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId INNER JOIN races AS T3 on T1.raceId = T3.raceId WHERE T1.driverId = ( SELECT driverId FROM drivers ORDER BY dob DESC LIMIT 1 ) ORDER BY T3.date ASC LIMIT 1",7,"SELECT r.year, d.forename, d.surname, ra.name, ra.date, ra.time FROM drivers d JOIN results res ON d.driverid = res.driverid JOIN races ra ON res.raceid = ra.raceid WHERE d.dob = (SELECT MAX(dob) FROM drivers) ORDER BY r.year LIMIT 1
SELECT r.year, d.forename, d.surname, ra.name, ra.date, ra.time FROM drivers d JOIN results res ON d.driverid = res.driverid JOIN races ra ON res.raceid = ra.raceid WHERE d.dob = (SELECT MAX(dob) FROM drivers) ORDER BY r.year LIMIT 1
SELECT r.year, d.forename, d.surname, ra.name, ra.date, ra.time FROM drivers d JOIN results res ON d.driverid = res.driverid JOIN races ra ON res.raceid = ra.raceid WHERE d.dob = (SELECT MAX(dob) FROM drivers) ORDER BY r.year LIMIT 1
SELECT r.year, d.forename, d.surname, ra.name, ra.date, ra.time FROM drivers d JOIN results res ON d.driverid = res.driverid JOIN races ra ON res.raceid = ra.raceid WHERE d.dob = (SELECT MAX(dob) FROM drivers) ORDER BY r.year LIMIT 1
SELECT r.year, d.forename, d.surname, ra.name, ra.date, ra.time FROM drivers d JOIN results res ON d.driverid = res.driverid JOIN races ra ON res.raceid = ra.raceid WHERE d.dob = (SELECT MAX(dob) FROM drivers) ORDER BY r.year LIMIT 1
SELECT r.year, d.forename, d.surname, ra.name, ra.date, ra.time FROM drivers d JOIN results res ON d.driverid = res.driverid JOIN races ra ON res.raceid = ra.raceid WHERE d.dob = (SELECT MAX(dob) FROM drivers) ORDER BY r.year ASC LIMIT 1
SELECT r.year, d.forename, d.surname, ra.name, ra.date, ra.time FROM drivers d JOIN results res ON d.driverid = res.driverid JOIN races ra ON res.raceid = ra.raceid WHERE d.dob = (SELECT MAX(dob) FROM drivers) ORDER BY r.year ASC LIMIT 1","SELECT r.year, d.forename, d.surname, ra.name, ra.date, ra.time FROM drivers d JOIN results res ON d.driverid = res.driverid JOIN races ra ON res.raceid = ra.raceid WHERE d.dob = (SELECT MAX(dob) FROM drivers) ORDER BY r.year LIMIT 1",0.0
137,1339,Calculate the total average cost that Elijah Allen spent in the events on September and October.,student_club,challenging,"SELECT AVG(T2.cost) FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.last_name = 'Allen' AND T1.first_name = 'Elijah' AND (SUBSTR(T2.expense_date, 6, 2) = '09' OR SUBSTR(T2.expense_date, 6, 2) = '10')",7,"SELECT AVG(e.cost) AS total_average_cost FROM expense e JOIN attendance a ON e.link_to_member = a.link_to_member JOIN member m ON a.link_to_member = m.member_id JOIN budget b ON e.link_to_budget = b.budget_id JOIN event ev ON b.link_to_event = ev.event_id WHERE m.first_name = 'Elijah' AND m.last_name = 'Allen' AND strftime('%m', ev.event_date) IN ('09', '10')
SELECT AVG(e.cost) AS total_average_cost FROM expense e JOIN attendance a ON e.link_to_member = a.link_to_member JOIN member m ON a.link_to_member = m.member_id JOIN budget b ON e.link_to_budget = b.budget_id JOIN event ev ON b.link_to_event = ev.event_id WHERE m.first_name = 'Elijah' AND m.last_name = 'Allen' AND strftime('%m', ev.event_date) IN ('09', '10')
SELECT AVG(e.cost) AS total_average_cost FROM expense e JOIN attendance a ON e.link_to_event = a.link_to_event JOIN member m ON a.link_to_member = m.member_id JOIN event ev ON e.link_to_event = ev.event_id WHERE m.first_name = 'Elijah' AND m.last_name = 'Allen' AND (strftime('%m', ev.event_date) = '09' OR strftime('%m', ev.event_date) = '10')
SELECT AVG(cost) AS total_average_cost FROM expense JOIN attendance ON expense.link_to_member = attendance.link_to_member JOIN member ON attendance.link_to_member = member.member_id JOIN budget ON expense.link_to_budget = budget.budget_id JOIN event ON budget.link_to_event = event.event_id WHERE member.first_name = 'Elijah' AND member.last_name = 'Allen' AND strftime('%m', event.event_date) IN ('09', '10')
SELECT AVG(e.cost) AS total_average_cost FROM expense e JOIN attendance a ON e.link_to_member = a.link_to_member JOIN member m ON a.link_to_member = m.member_id JOIN budget b ON e.link_to_budget = b.budget_id JOIN event ev ON b.link_to_event = ev.event_id WHERE m.first_name = 'Elijah' AND m.last_name = 'Allen' AND strftime('%m', ev.event_date) IN ('09', '10')
SELECT AVG(cost) AS total_average_cost FROM expense JOIN attendance ON expense.link_to_member = attendance.link_to_member JOIN member ON attendance.link_to_member = member.member_id JOIN budget ON expense.link_to_budget = budget.budget_id JOIN event ON budget.link_to_event = event.event_id WHERE member.first_name = 'Elijah' AND member.last_name = 'Allen' AND strftime('%m', event.event_date) IN ('09', '10')
SELECT AVG(e.cost) AS total_average_cost FROM expense e JOIN attendance a ON e.link_to_member = a.link_to_member JOIN member m ON a.link_to_member = m.member_id JOIN budget b ON e.link_to_budget = b.budget_id JOIN event ev ON b.link_to_event = ev.event_id WHERE m.first_name = 'Elijah' AND m.last_name = 'Allen' AND strftime('%m', ev.event_date) IN ('09', '10')","SELECT AVG(e.cost) AS total_average_cost FROM expense e JOIN attendance a ON e.link_to_member = a.link_to_member JOIN member m ON a.link_to_member = m.member_id JOIN budget b ON e.link_to_budget = b.budget_id JOIN event ev ON b.link_to_event = ev.event_id WHERE m.first_name = 'Elijah' AND m.last_name = 'Allen' AND strftime('%m', ev.event_date) IN ('09', '10')",1.0
138,988,List down top 3 German drivers who has the shortest average pit stop duration and were born between 1980-1985.,formula_1,challenging,"SELECT T2.forename, T2.surname FROM pitStops AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId WHERE T2.nationality = 'German' AND STRFTIME('%Y', T2.dob) BETWEEN '1980' AND '1985' GROUP BY T2.forename, T2.surname ORDER BY AVG(T1.duration) LIMIT 3",7,"SELECT d.forename, d.surname, AVG(p.duration) AS average_pit_stop_duration FROM drivers d JOIN pitstops p ON d.driverid = p.driverid WHERE d.nationality = 'German' AND d.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY d.driverid ORDER BY average_pit_stop_duration ASC LIMIT 3
SELECT d.forename, d.surname, AVG(p.duration) AS avg_pit_stop_duration FROM drivers d JOIN pitstops p ON d.driverid = p.driverid WHERE d.nationality = 'German' AND d.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY d.driverid ORDER BY avg_pit_stop_duration ASC LIMIT 3
SELECT d.forename, d.surname, AVG(p.duration) AS avg_pit_stop_duration FROM drivers d JOIN pitstops p ON d.driverid = p.driverid WHERE d.nationality = 'German' AND d.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY d.driverid ORDER BY avg_pit_stop_duration ASC LIMIT 3
SELECT d.forename, d.surname, AVG(p.duration) AS avg_pit_stop_duration FROM drivers d JOIN pitstops p ON d.driverid = p.driverid WHERE d.nationality = 'German' AND d.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY d.driverid ORDER BY avg_pit_stop_duration ASC LIMIT 3
SELECT d.forename, d.surname, AVG(p.duration) AS average_pit_stop_duration FROM drivers d JOIN pitstops p ON d.driverid = p.driverid WHERE d.nationality = 'German' AND d.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY d.driverid ORDER BY average_pit_stop_duration ASC LIMIT 3
SELECT d.forename, d.surname, AVG(p.duration) AS avg_pit_stop_duration FROM drivers d JOIN pitstops p ON d.driverid = p.driverid WHERE d.nationality = 'German' AND d.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY d.driverid ORDER BY avg_pit_stop_duration ASC LIMIT 3
SELECT d.forename, d.surname, AVG(p.duration) AS avg_pit_stop_duration FROM drivers d JOIN pitstops p ON d.driverid = p.driverid WHERE d.nationality = 'German' AND d.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY d.driverid ORDER BY avg_pit_stop_duration ASC LIMIT 3","SELECT d.forename, d.surname, AVG(p.duration) AS avg_pit_stop_duration FROM drivers d JOIN pitstops p ON d.driverid = p.driverid WHERE d.nationality = 'German' AND d.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY d.driverid ORDER BY avg_pit_stop_duration ASC LIMIT 3",0.0
139,28,"Consider the average difference between K-12 enrollment and 15-17 enrollment of schools that are locally funded, list the names and DOC type of schools which has a difference above this average.",california_schools,challenging,"SELECT T2.School, T2.DOC FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.FundingType = 'Locally funded' AND (T1.`Enrollment (K-12)` - T1.`Enrollment (Ages 5-17)`) > (SELECT AVG(T3.`Enrollment (K-12)` - T3.`Enrollment (Ages 5-17)`) FROM frpm AS T3 INNER JOIN schools AS T4 ON T3.CDSCode = T4.CDSCode WHERE T4.FundingType = 'Locally funded')",7,"SELECT s.school, s.doctype FROM schools s JOIN satscores sa ON s.cdscode = sa.cds JOIN frpm f ON s.cdscode = f.cdscode WHERE s.fundingtype = 'locally funded' AND ABS(f.""enrollment (k-12)"" - f.""enrollment (ages 5-17)"") > (     SELECT AVG(ABS(""enrollment (k-12)"" - ""enrollment (ages 5-17)""))     FROM frpm     WHERE fundingtype = 'locally funded' ) 
SELECT s.school, s.doctype FROM schools s JOIN satscores sa ON s.cdscode = sa.cds WHERE s.fundingtype = 'locally funded' AND ABS(sa.enroll12 - sa.numtsttakr) > (     SELECT AVG(ABS(sa1.enroll12 - sa1.numtsttakr))     FROM satscores sa1     JOIN schools s1 ON sa1.cds = s1.cdscode     WHERE s1.fundingtype = 'locally funded' )
SELECT s.school, s.doctype FROM schools s JOIN satscores sa ON s.cdscode = sa.cds WHERE s.fundingtype = 'locally funded' AND ABS(sa.enroll12 - sa.numtsttakr) > (     SELECT AVG(ABS(sa1.enroll12 - sa1.numtsttakr))     FROM satscores sa1     JOIN schools s1 ON sa1.cds = s1.cdscode     WHERE s1.fundingtype = 'locally funded' ) 
SELECT s.school, s.doctype FROM schools s JOIN satscores sa ON s.cdscode = sa.cds WHERE s.fundingtype = 'locally funded' AND ABS(sa.enroll12 - sa.numtsttakr) > (     SELECT AVG(ABS(sa1.enroll12 - sa1.numtsttakr))     FROM satscores sa1     JOIN schools s1 ON sa1.cds = s1.cdscode     WHERE s1.fundingtype = 'locally funded' ) 
SELECT s.school, s.doctype FROM schools s JOIN satscores sa ON s.cdscode = sa.cds WHERE s.fundingtype = 'locally funded' AND ABS(sa.enroll12 - sa.numtsttakr) > (     SELECT AVG(ABS(sa.enroll12 - sa.numtsttakr))     FROM satscores sa     JOIN schools s ON sa.cds = s.cdscode     WHERE s.fundingtype = 'locally funded' ) 
SELECT s.school, s.doctype FROM schools s JOIN satscores sa ON s.cdscode = sa.cds WHERE s.fundingtype = 'locally funded' AND ABS(sa.enroll12 - sa.numtsttakr) > (     SELECT AVG(ABS(sa1.enroll12 - sa1.numtsttakr))     FROM satscores sa1     JOIN schools s1 ON sa1.cds = s1.cdscode     WHERE s1.fundingtype = 'locally funded' ) 
SELECT s.school, s.doctype FROM schools s JOIN satscores sa ON s.cdscode = sa.cds WHERE s.fundingtype = 'locally funded' AND ABS(sa.enroll12 - sa.numtsttakr) > (     SELECT AVG(ABS(sa1.enroll12 - sa1.numtsttakr))     FROM satscores sa1     JOIN schools s1 ON sa1.cds = s1.cdscode     WHERE s1.fundingtype = 'locally funded' )","SELECT s.school, s.doctype FROM schools s JOIN satscores sa ON s.cdscode = sa.cds WHERE s.fundingtype = 'locally funded' AND ABS(sa.enroll12 - sa.numtsttakr) > (     SELECT AVG(ABS(sa1.enroll12 - sa1.numtsttakr))     FROM satscores sa1     JOIN schools s1 ON sa1.cds = s1.cdscode     WHERE s1.fundingtype = 'locally funded' ) ",0.0
140,94,"List out the account numbers of female clients who are oldest and has lowest average salary, calculate the gap between this lowest average salary with the highest average salary?",financial,challenging,"SELECT T1.account_id , ( SELECT MAX(A11) - MIN(A11) FROM district ) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T1.account_id = T3.account_id INNER JOIN client AS T4 ON T3.client_id = T4.client_id WHERE T2.district_id = ( SELECT district_id FROM client WHERE gender = 'F' ORDER BY birth_date ASC LIMIT 1 ) ORDER BY T2.A11 DESC LIMIT 1",7,"SELECT c.client_id AS account_number,        (SELECT AVG(t.amount) FROM trans t WHERE t.account_id = a.account_id) AS average_salary,        (SELECT AVG(t.amount) FROM trans t WHERE t.account_id = (SELECT account_id FROM account ORDER BY account_id DESC LIMIT 1)) -        (SELECT AVG(t.amount) FROM trans t WHERE t.account_id = (SELECT account_id FROM account ORDER BY account_id ASC LIMIT 1)) AS salary_gap FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id WHERE c.gender = 'female' ORDER BY c.birth_date DESC LIMIT 1
SELECT a.account_id, (MAX(avg_salary) - MIN(avg_salary)) AS salary_gap FROM (     SELECT account_id, AVG(amount) AS avg_salary     FROM loan     JOIN account ON loan.account_id = account.account_id     JOIN client ON account.client_id = client.client_id     WHERE client.gender = 'F'     GROUP BY account_id     ORDER BY client.birth_date ASC, avg_salary ASC     LIMIT 1 ) AS a
SELECT a.account_id, (MAX(avg_salary) - MIN(avg_salary)) AS salary_gap FROM (     SELECT account_id, AVG(amount) AS avg_salary     FROM loan     JOIN account ON loan.account_id = account.account_id     JOIN client ON account.client_id = client.client_id     WHERE client.gender = 'F'     GROUP BY account_id     ORDER BY client.birth_date ASC     LIMIT 1 ) a
SELECT a.account_id, (MAX(avg_salary) - MIN(avg_salary)) AS salary_gap FROM (     SELECT account_id, AVG(amount) AS avg_salary     FROM loan     JOIN account ON loan.account_id = account.account_id     JOIN client ON account.client_id = client.client_id     WHERE client.gender = 'F'     GROUP BY account_id     ORDER BY client.birth_date ASC, avg_salary ASC     LIMIT 1 ) AS a
SELECT c.client_id AS account_number,        (SELECT AVG(t.amount) FROM trans t WHERE t.account_id = a.account_id) AS average_salary,        (SELECT AVG(t.amount) FROM trans t WHERE t.account_id = (SELECT account_id FROM account ORDER BY account_id DESC LIMIT 1)) -        (SELECT AVG(t.amount) FROM trans t WHERE t.account_id = (SELECT account_id FROM account ORDER BY account_id ASC LIMIT 1)) AS salary_gap FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id WHERE c.gender = 'F' ORDER BY c.birth_date DESC, average_salary ASC LIMIT 1
SELECT a.account_id, (MAX(avg_salary) - MIN(avg_salary)) AS salary_gap FROM (     SELECT l.account_id, AVG(l.amount / l.duration) AS avg_salary     FROM loan l     JOIN client c ON l.account_id = c.client_id     WHERE c.gender = 'female'     GROUP BY l.account_id     ORDER BY c.birth_date ASC, avg_salary ASC     LIMIT 1 ) a
SELECT a.account_id, (MAX(avg_salary) - MIN(avg_salary)) AS salary_gap FROM (     SELECT l.account_id, AVG(l.amount / l.duration) AS avg_salary     FROM loan l     JOIN client c ON l.account_id = c.client_id     WHERE c.gender = 'female'     GROUP BY l.account_id     ORDER BY c.birth_date ASC, avg_salary ASC     LIMIT 1 ) AS a","SELECT a.account_id, (MAX(avg_salary) - MIN(avg_salary)) AS salary_gap FROM (     SELECT account_id, AVG(amount) AS avg_salary     FROM loan     JOIN account ON loan.account_id = account.account_id     JOIN client ON account.client_id = client.client_id     WHERE client.gender = 'F'     GROUP BY account_id     ORDER BY client.birth_date ASC, avg_salary ASC     LIMIT 1 ) AS a",0.0
141,281,Tally the toxicology element of the 4th atom of each molecule that was carcinogenic.,toxicology,challenging,"SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND SUBSTR(T1.atom_id, -1) = '4' AND LENGTH(T1.atom_id) = 7",7,"SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.label = 'carcinogenic' GROUP BY m.molecule_id HAVING COUNT(*) >= 4 LIMIT 1 OFFSET 3
SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.label = 'carcinogenic' GROUP BY m.molecule_id HAVING COUNT(*) >= 4 LIMIT 1 OFFSET 3
SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = 'carcinogenic' GROUP BY a.molecule_id HAVING COUNT(*) >= 4 LIMIT 1 OFFSET 3
SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = 'carcinogenic' GROUP BY a.molecule_id HAVING COUNT(a.atom_id) >= 4 LIMIT 1 OFFSET 3
SELECT a.element FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = 'carcinogenic' GROUP BY a.molecule_id HAVING COUNT(*) >= 4 LIMIT 1 OFFSET 3
SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.label = 'carcinogenic' GROUP BY m.molecule_id HAVING COUNT(*) >= 4 LIMIT 1 OFFSET 3
SELECT a.element FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE m.label = 'carcinogenic' GROUP BY a.molecule_id HAVING COUNT(*) >= 4 LIMIT 1 OFFSET 3",SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.label = 'carcinogenic' GROUP BY m.molecule_id HAVING COUNT(*) >= 4 LIMIT 1 OFFSET 3,0.0
142,730,List the superheroes from Marvel Comics who have the super power of 'Super Strength'.,superhero,challenging,SELECT superhero_name FROM superhero AS T1 WHERE EXISTS (SELECT 1 FROM hero_power AS T2 INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Super Strength' AND T1.id = T2.hero_id)AND EXISTS (SELECT 1 FROM publisher AS T4 WHERE T4.publisher_name = 'Marvel Comics' AND T1.publisher_id = T4.id),7,"SELECT superhero.superhero_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength' AND superhero.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')
SELECT superhero_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength' AND publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')
SELECT superhero.superhero_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength' AND superhero.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')
SELECT superhero.superhero_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength' AND superhero.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')
SELECT superhero_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE superpower.power_name = 'Super Strength' AND publisher.publisher_name = 'Marvel Comics'
SELECT superhero.superhero_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength' AND publisher.publisher_name = 'Marvel Comics'
SELECT superhero.superhero_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength' AND publisher.publisher_name = 'Marvel Comics'",SELECT superhero.superhero_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength' AND superhero.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics'),1.0
143,1041,"For the teams with normal build-up play dribbling class in 2014, List the names of the teams with less than average chance creation passing, in descending order of chance creation passing.",european_football_2,challenging,"SELECT t3.team_long_name FROM Team AS t3 INNER JOIN Team_Attributes AS t4 ON t3.team_api_id = t4.team_api_id WHERE t4.buildUpPlayDribblingClass = 'Normal' AND t4.chanceCreationPassing < ( SELECT CAST(SUM(t2.chanceCreationPassing) AS REAL) / COUNT(t1.id) FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t2.buildUpPlayDribblingClass = 'Normal' AND SUBSTR(t2.`date`, 1, 4) = '2014') ORDER BY t4.chanceCreationPassing DESC",7,"SELECT team.team_long_name FROM team JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id WHERE team_attributes.buildupplaydribblingclass = 'Normal' AND team_attributes.date LIKE '2014%' AND team_attributes.chancecreationpassing < (SELECT AVG(chancecreationpassing) FROM team_attributes) ORDER BY team_attributes.chancecreationpassing DESC
SELECT team.team_long_name FROM team JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id WHERE team_attributes.buildupplaydribblingclass = 'Normal' AND team_attributes.date LIKE '2014%' AND team_attributes.chancecreationpassing < (SELECT AVG(chancecreationpassing) FROM team_attributes) ORDER BY team_attributes.chancecreationpassing DESC
SELECT t.team_long_name FROM team AS t JOIN team_attributes AS ta ON t.team_api_id = ta.team_api_id WHERE ta.date LIKE '2014%' AND ta.buildupplaydribblingclass = 'Normal' AND ta.chancecreationpassing < (SELECT AVG(chancecreationpassing) FROM team_attributes WHERE date LIKE '2014%') ORDER BY ta.chancecreationpassing DESC
SELECT t.team_long_name FROM team AS t JOIN team_attributes AS ta ON t.team_api_id = ta.team_api_id WHERE ta.date LIKE '2014%' AND ta.buildupplaydribblingclass = 'normal' AND ta.chancecreationpassing < (SELECT AVG(chancecreationpassing) FROM team_attributes WHERE date LIKE '2014%') ORDER BY ta.chancecreationpassing DESC
SELECT team.team_long_name FROM team JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id WHERE team_attributes.buildupplaydribblingclass = 'Normal' AND team_attributes.date LIKE '2014%' AND team_attributes.chancecreationpassing < (SELECT AVG(chancecreationpassing) FROM team_attributes) ORDER BY team_attributes.chancecreationpassing DESC
SELECT t.team_long_name FROM team AS t JOIN team_attributes AS ta ON t.team_api_id = ta.team_api_id WHERE ta.date LIKE '2014%' AND ta.buildupplaydribblingclass = 'Normal' AND ta.chancecreationpassing < (SELECT AVG(chancecreationpassing) FROM team_attributes WHERE date LIKE '2014%') ORDER BY ta.chancecreationpassing DESC
SELECT t.team_long_name FROM team AS t JOIN team_attributes AS ta ON t.team_api_id = ta.team_api_id WHERE ta.date LIKE '2014%' AND ta.buildupplaydribblingclass = 'Normal' AND ta.chancecreationpassing < (SELECT AVG(chancecreationpassing) FROM team_attributes WHERE date LIKE '2014%') ORDER BY ta.chancecreationpassing DESC",SELECT team.team_long_name FROM team JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id WHERE team_attributes.buildupplaydribblingclass = 'Normal' AND team_attributes.date LIKE '2014%' AND team_attributes.chancecreationpassing < (SELECT AVG(chancecreationpassing) FROM team_attributes) ORDER BY team_attributes.chancecreationpassing DESC,0.0
144,1016,"In the race a driver set the lap record for the Austrian Grand Prix Circuit, how long did he spent at the pit stop at that same race?",formula_1,challenging,"WITH fastest_lap_times AS ( SELECT T1.raceId, T1.driverId, T1.FastestLapTime, (CAST(SUBSTR(T1.FastestLapTime, 1, INSTR(T1.FastestLapTime, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, ':') + 1, INSTR(T1.FastestLapTime, '.') - INSTR(T1.FastestLapTime, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, '.') + 1) AS REAL) / 1000) as time_in_seconds FROM results AS T1 WHERE T1.FastestLapTime IS NOT NULL), lap_record_race AS ( SELECT T1.raceId, T1.driverId FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN circuits AS T3 on T2.circuitId = T3.circuitId INNER JOIN ( SELECT MIN(fastest_lap_times.time_in_seconds) as min_time_in_seconds FROM fastest_lap_times INNER JOIN races AS T2 on fastest_lap_times.raceId = T2.raceId INNER JOIN circuits AS T3 on T2.circuitId = T3.circuitId WHERE T2.name = 'Austrian Grand Prix') AS T4 ON (CAST(SUBSTR(T1.FastestLapTime, 1, INSTR(T1.FastestLapTime, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, ':') + 1, INSTR(T1.FastestLapTime, '.') - INSTR(T1.FastestLapTime, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, '.') + 1) AS REAL) / 1000) = T4.min_time_in_seconds WHERE T2.name = 'Austrian Grand Prix') SELECT T4.duration FROM lap_record_race INNER JOIN pitStops AS T4 on lap_record_race.raceId = T4.raceId AND lap_record_race.driverId = T4.driverId",7,"SELECT duration FROM pitstops JOIN races ON pitstops.raceid = races.raceid JOIN circuits ON races.circuitid = circuits.circuitid WHERE circuits.name = 'Austrian Grand Prix Circuit' AND races.name = (SELECT name FROM races WHERE circuitid = circuits.circuitid ORDER BY laptimes.milliseconds LIMIT 1)
SELECT duration FROM pitstops WHERE raceid = (SELECT raceid FROM races WHERE name = 'Austrian Grand Prix' AND circuitid = (SELECT circuitid FROM circuits WHERE name = 'Austrian Grand Prix Circuit'))
SELECT duration FROM pitstops JOIN races ON pitstops.raceid = races.raceid JOIN circuits ON races.circuitid = circuits.circuitid WHERE circuits.name = 'Austrian Grand Prix Circuit' AND races.name = 'Austrian Grand Prix' AND pitstops.driverid = (     SELECT driverid FROM laptimes     JOIN races ON laptimes.raceid = races.raceid     JOIN circuits ON races.circuitid = circuits.circuitid     WHERE circuits.name = 'Austrian Grand Prix Circuit'     AND races.name = 'Austrian Grand Prix'     ORDER BY milliseconds ASC     LIMIT 1 )
SELECT duration FROM pitstops JOIN races ON pitstops.raceid = races.raceid JOIN circuits ON races.circuitid = circuits.circuitid WHERE circuits.name = 'Austrian Grand Prix Circuit' AND races.name = 'Austrian Grand Prix' AND pitstops.driverid = (     SELECT driverid FROM laptimes     JOIN races ON laptimes.raceid = races.raceid     JOIN circuits ON races.circuitid = circuits.circuitid     WHERE circuits.name = 'Austrian Grand Prix Circuit'     AND races.name = 'Austrian Grand Prix'     ORDER BY milliseconds ASC     LIMIT 1 )
SELECT duration FROM pitstops WHERE raceid = (SELECT raceid FROM races WHERE name = 'Austrian Grand Prix' AND circuitid = (SELECT circuitid FROM circuits WHERE name = 'Austrian Grand Prix Circuit'))
SELECT duration FROM pitstops JOIN races ON pitstops.raceid = races.raceid JOIN circuits ON races.circuitid = circuits.circuitid WHERE circuits.name = 'Austrian Grand Prix Circuit' AND races.name = (SELECT name FROM races WHERE circuitid = circuits.circuitid ORDER BY laptimes.milliseconds ASC LIMIT 1)
SELECT duration FROM pitstops WHERE raceid = (SELECT raceid FROM races WHERE name = 'Austrian Grand Prix' AND circuitid = (SELECT circuitid FROM circuits WHERE name = 'Austrian Grand Prix Circuit'))",SELECT duration FROM pitstops WHERE raceid = (SELECT raceid FROM races WHERE name = 'Austrian Grand Prix' AND circuitid = (SELECT circuitid FROM circuits WHERE name = 'Austrian Grand Prix Circuit')),0.0
145,1242,"For laboratory examinations take in 1984, list all patients below 50 years old with normal platelet level.",thrombosis_prediction,challenging,"SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.PLT BETWEEN 100 AND 400 AND STRFTIME('%Y', T2.Date) - STRFTIME('%Y', T1.Birthday) < 50 AND STRFTIME('%Y', T2.Date) = '1984'",7,"SELECT p.id, p.sex, p.birthday, p.description, p.first_date, p.admission, p.diagnosis FROM patient p JOIN laboratory l ON p.id = l.id JOIN examination e ON p.id = e.id WHERE strftime('%Y', e.examination_date) = '1984' AND (julianday('now') - julianday(p.birthday))/365.25 < 50 AND l.tp = 'normal'
SELECT p.id, p.sex, p.birthday, p.description, p.first_date, p.admission, p.diagnosis FROM patient p JOIN laboratory l ON p.id = l.id JOIN examination e ON p.id = e.id WHERE strftime('%Y', e.examination_date) = '1984' AND (julianday('now') - julianday(p.birthday)) / 365.25 < 50 AND l.tp = 'normal platelet level'
SELECT p.id, p.sex, p.birthday, p.description, p.first_date, p.admission, p.diagnosis FROM patient p JOIN laboratory l ON p.id = l.id JOIN examination e ON p.id = e.id WHERE strftime('%Y', e.examination_date) = '1984' AND (julianday('now') - julianday(p.birthday)) / 365.25 < 50 AND l.tp = 'normal platelet level'
SELECT p.id, p.sex, p.birthday, p.description, p.first_date, p.admission, p.diagnosis FROM patient p JOIN laboratory l ON p.id = l.id JOIN examination e ON p.id = e.id WHERE strftime('%Y', e.examination_date) = '1984' AND (julianday('now') - julianday(p.birthday))/365.25 < 50 AND l.tp = 'normal'
SELECT p.id, p.sex, p.birthday, p.description, p.first_date, p.admission, p.diagnosis FROM patient p JOIN laboratory l ON p.id = l.id JOIN examination e ON p.id = e.id WHERE strftime('%Y', e.examination_date) = '1984' AND (julianday('now') - julianday(p.birthday)) / 365.25 < 50 AND l.tp = 'normal'
SELECT p.id, p.sex, p.birthday, p.description, p.first_date, p.admission, p.diagnosis FROM patient p JOIN laboratory l ON p.id = l.id JOIN examination e ON p.id = e.id WHERE strftime('%Y', e.examination_date) = '1984' AND (julianday('now') - julianday(p.birthday)) / 365.25 < 50 AND l.tp = 'normal platelet level'
SELECT p.id, p.sex, p.birthday, p.description, p.first_date, p.admission, p.diagnosis FROM patient p JOIN laboratory l ON p.id = l.id JOIN examination e ON p.id = e.id WHERE strftime('%Y', e.examination_date) = '1984' AND (julianday('now') - julianday(p.birthday))/365.25 < 50 AND l.tp = 'normal'","SELECT p.id, p.sex, p.birthday, p.description, p.first_date, p.admission, p.diagnosis FROM patient p JOIN laboratory l ON p.id = l.id JOIN examination e ON p.id = e.id WHERE strftime('%Y', e.examination_date) = '1984' AND (julianday('now') - julianday(p.birthday))/365.25 < 50 AND l.tp = 'normal'",0.0
146,701,"Among all the posts posted by the most influential user, identify the percentage with a score above 50.",codebase_community,challenging,SELECT CAST(SUM(CASE WHEN T2.Score > 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Id) FROM users T1 INNER JOIN posts T2 ON T1.Id = T2.OwnerUserId INNER JOIN ( SELECT MAX(Reputation) AS max_reputation FROM users ) T3 ON T1.Reputation = T3.max_reputation,7,"SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM comments WHERE userid = (SELECT userid FROM users ORDER BY reputation DESC LIMIT 1)) AS percentage_above_50 FROM comments WHERE score > 50 AND userid = (SELECT userid FROM users ORDER BY reputation DESC LIMIT 1)
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM comments WHERE userid = (SELECT userid FROM users ORDER BY reputation DESC LIMIT 1)) AS percentage_above_50 FROM comments WHERE score > 50 AND userid = (SELECT userid FROM users ORDER BY reputation DESC LIMIT 1)
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM comments WHERE userid = (SELECT userid FROM users ORDER BY reputation DESC LIMIT 1)) AS percentage_above_50 FROM comments WHERE score > 50 AND userid = (SELECT userid FROM users ORDER BY reputation DESC LIMIT 1)
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM comments WHERE userid = (SELECT userid FROM users ORDER BY reputation DESC LIMIT 1)) AS percentage_above_50 FROM comments WHERE score > 50 AND userid = (SELECT userid FROM users ORDER BY reputation DESC LIMIT 1)
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM comments WHERE userid = (SELECT userid FROM users ORDER BY reputation DESC LIMIT 1)) AS percentage_above_50 FROM comments WHERE score > 50 AND userid = (SELECT userid FROM users ORDER BY reputation DESC LIMIT 1)
SELECT COUNT(*) FROM comments c2 WHERE c2.userid = (SELECT userid FROM users ORDER BY reputation DESC LIMIT 1))) AS percentage FROM     comments c WHERE     c.userid = (SELECT userid FROM users ORDER BY reputation DESC LIMIT 1)     AND c.score > 50
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM comments WHERE userid = (SELECT userid FROM users ORDER BY reputation DESC LIMIT 1)) AS percentage_above_50 FROM comments WHERE score > 50 AND userid = (SELECT userid FROM users ORDER BY reputation DESC LIMIT 1)",SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM comments WHERE userid = (SELECT userid FROM users ORDER BY reputation DESC LIMIT 1)) AS percentage_above_50 FROM comments WHERE score > 50 AND userid = (SELECT userid FROM users ORDER BY reputation DESC LIMIT 1),0.0
147,1099,Which foot is preferred by Abdou Diallo?,european_football_2,simple,SELECT DISTINCT t2.preferred_foot FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.player_name = 'Abdou Diallo',7,"SELECT preferred_foot FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name = 'Abdou Diallo'
SELECT preferred_foot FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name = 'Abdou Diallo'
SELECT preferred_foot FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name = 'Abdou Diallo'
SELECT preferred_foot FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name = 'Abdou Diallo'
SELECT preferred_foot FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name = 'Abdou Diallo'
SELECT preferred_foot FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name = 'Abdou Diallo'
SELECT preferred_foot FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name = 'Abdou Diallo'",SELECT preferred_foot FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name = 'Abdou Diallo',1.0
148,932,In which years did Lewis Hamilton participate in a Formula_1 race?,formula_1,simple,SELECT DISTINCT T1.year FROM races AS T1 INNER JOIN results AS T2 ON T2.raceId = T1.raceId INNER JOIN drivers AS T3 ON T3.driverId = T2.driverId WHERE T3.forename = 'Lewis' AND T3.surname = 'Hamilton',7,"SELECT DISTINCT races.year FROM races JOIN results ON races.raceid = results.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.surname = 'Hamilton' AND drivers.forename = 'Lewis'
SELECT DISTINCT races.year FROM races JOIN results ON races.raceid = results.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.surname = 'Hamilton' AND drivers.forename = 'Lewis'
SELECT DISTINCT year FROM races JOIN results ON races.raceid = results.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.surname = 'Hamilton' AND drivers.forename = 'Lewis'
SELECT DISTINCT year FROM races JOIN results ON races.raceid = results.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.surname = 'Hamilton' AND drivers.forename = 'Lewis'
SELECT DISTINCT year FROM races JOIN results ON races.raceid = results.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.surname = 'Hamilton' AND drivers.forename = 'Lewis'
SELECT DISTINCT year FROM races JOIN results ON races.raceid = results.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.surname = 'Hamilton' AND drivers.forename = 'Lewis'
SELECT DISTINCT year FROM races JOIN results ON races.raceid = results.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.surname = 'Hamilton' AND drivers.forename = 'Lewis'",SELECT DISTINCT year FROM races JOIN results ON races.raceid = results.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.surname = 'Hamilton' AND drivers.forename = 'Lewis',1.0
149,231,Which bond type accounted for the majority of the bonds found in molecule TR010 and state whether or not this molecule is carcinogenic?,toxicology,challenging,"SELECT T.bond_type FROM ( SELECT T1.bond_type, COUNT(T1.molecule_id) FROM bond AS T1  WHERE T1.molecule_id = 'TR010' GROUP BY T1.bond_type ORDER BY COUNT(T1.molecule_id) DESC LIMIT 1 ) AS T",7,"SELECT bond_type, COUNT(*) as bond_count FROM bond JOIN connected ON bond.bond_id = connected.bond_id JOIN atom ON connected.atom_id = atom.atom_id WHERE atom.molecule_id = 'TR010' GROUP BY bond_type ORDER BY bond_count DESC LIMIT 1
SELECT bond_type, COUNT(*) as bond_count FROM bond JOIN connected ON bond.bond_id = connected.bond_id JOIN atom ON connected.atom_id = atom.atom_id WHERE atom.molecule_id = 'TR010' GROUP BY bond_type ORDER BY bond_count DESC LIMIT 1
SELECT bond_type, COUNT(*) as bond_count FROM bond JOIN connected ON bond.bond_id = connected.bond_id JOIN atom ON connected.atom_id = atom.atom_id WHERE atom.molecule_id = 'TR010' GROUP BY bond_type ORDER BY bond_count DESC LIMIT 1
SELECT bond_type, COUNT(*) as bond_count FROM bond JOIN connected ON bond.bond_id = connected.bond_id JOIN atom ON connected.atom_id = atom.atom_id WHERE atom.molecule_id = 'TR010' GROUP BY bond_type ORDER BY bond_count DESC LIMIT 1
SELECT bond_type, COUNT(*) as bond_count FROM bond JOIN connected ON bond.bond_id = connected.bond_id JOIN atom ON connected.atom_id = atom.atom_id WHERE atom.molecule_id = 'TR010' GROUP BY bond_type ORDER BY bond_count DESC LIMIT 1
SELECT bond_type, COUNT(*) as bond_count FROM bond JOIN connected ON bond.bond_id = connected.bond_id JOIN atom ON connected.atom_id = atom.atom_id WHERE atom.molecule_id = 'TR010' GROUP BY bond_type ORDER BY bond_count DESC LIMIT 1
SELECT bond_type, COUNT(*) as bond_count FROM bond JOIN connected ON bond.bond_id = connected.bond_id JOIN atom ON connected.atom_id = atom.atom_id WHERE atom.molecule_id = 'TR010' GROUP BY bond_type ORDER BY bond_count DESC LIMIT 1","SELECT bond_type, COUNT(*) as bond_count FROM bond JOIN connected ON bond.bond_id = connected.bond_id JOIN atom ON connected.atom_id = atom.atom_id WHERE atom.molecule_id = 'TR010' GROUP BY bond_type ORDER BY bond_count DESC LIMIT 1",0.0
150,819,"In superheroes with missing weight data, calculate the difference between the number of superheroes with blue eyes and no eye color.",superhero,challenging,SELECT SUM(CASE WHEN T2.id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.id = 1 THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg = 0 OR T1.weight_kg is NULL,7,"SELECT (COUNT(CASE WHEN eye_colour_id IS NULL THEN 1 END) - COUNT(CASE WHEN eye_colour_id = (SELECT id FROM colour WHERE colour = 'blue') THEN 1 END)) AS difference FROM superhero WHERE weight_kg IS NULL
SELECT (SELECT COUNT(*) FROM superhero WHERE eye_colour_id IS NULL) - (SELECT COUNT(*) FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'blue')) FROM superhero WHERE weight_kg IS NULL
SELECT (COUNT(CASE WHEN eye_colour_id IS NULL THEN 1 END) - COUNT(CASE WHEN eye_colour_id = (SELECT id FROM colour WHERE colour = 'blue') THEN 1 END)) AS difference FROM superhero WHERE weight_kg IS NULL
SELECT (COUNT(CASE WHEN eye_colour_id IS NULL THEN 1 END) - COUNT(CASE WHEN eye_colour_id = (SELECT id FROM colour WHERE colour = 'blue') THEN 1 END)) AS difference FROM superhero WHERE weight_kg IS NULL
SELECT (COUNT(CASE WHEN eye_colour_id IS NULL THEN 1 END) - COUNT(CASE WHEN eye_colour_id = (SELECT id FROM colour WHERE colour = 'blue') THEN 1 END)) AS difference FROM superhero WHERE weight_kg IS NULL
SELECT (COUNT(CASE WHEN eye_colour_id IS NULL THEN 1 END) - COUNT(CASE WHEN eye_colour_id = (SELECT id FROM colour WHERE colour = 'blue') THEN 1 END)) AS difference FROM superhero WHERE weight_kg IS NULL
SELECT (COUNT(CASE WHEN eye_colour_id IS NULL THEN 1 END) - COUNT(CASE WHEN eye_colour_id = (SELECT id FROM colour WHERE colour = 'blue') THEN 1 END)) AS difference FROM superhero WHERE weight_kg IS NULL",SELECT (COUNT(CASE WHEN eye_colour_id IS NULL THEN 1 END) - COUNT(CASE WHEN eye_colour_id = (SELECT id FROM colour WHERE colour = 'blue') THEN 1 END)) AS difference FROM superhero WHERE weight_kg IS NULL,0.0
151,1168,"The oldest SJS patient's medical laboratory work was completed on what date, and what age was the patient when they initially arrived at the hospital?",thrombosis_prediction,challenging,"SELECT T1.Date, STRFTIME('%Y', T2.`First Date`) - STRFTIME('%Y', T2.Birthday),T2.Birthday FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'SJS' AND T2.Birthday IS NOT NULL ORDER BY T2.Birthday ASC LIMIT 1",7,"SELECT patient.birthday, patient.first_date, laboratory.date FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.diagnosis = 'SJS' ORDER BY patient.birthday ASC LIMIT 1
SELECT patient.birthday, patient.first_date, laboratory.date FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.diagnosis = 'SJS' ORDER BY patient.birthday ASC LIMIT 1
SELECT patient.birthday, patient.first_date, laboratory.date FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.diagnosis = 'SJS' ORDER BY patient.birthday ASC LIMIT 1
SELECT patient.birthday, patient.first_date, laboratory.date FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.diagnosis = 'SJS' ORDER BY patient.birthday ASC LIMIT 1
SELECT patient.birthday, patient.first_date, laboratory.date FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.diagnosis = 'SJS' ORDER BY patient.birthday ASC LIMIT 1
SELECT patient.birthday, patient.first_date, laboratory.date FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.diagnosis = 'SJS' ORDER BY patient.birthday ASC LIMIT 1
SELECT patient.birthday, patient.first_date, laboratory.date FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.diagnosis = 'SJS' ORDER BY patient.birthday ASC LIMIT 1","SELECT patient.birthday, patient.first_date, laboratory.date FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.diagnosis = 'SJS' ORDER BY patient.birthday ASC LIMIT 1",0.0
152,1451,"Among the members who incurred expenses in more than one event, who paid the most amount?",student_club,challenging,SELECT T2.member_id FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN budget AS T3 ON T1.link_to_budget = T3.budget_id INNER JOIN event AS T4 ON T3.link_to_event = T4.event_id GROUP BY T2.member_id HAVING COUNT(DISTINCT T4.event_id) > 1 ORDER BY SUM(T1.cost) DESC LIMIT 1,7,"SELECT m.first_name, m.last_name, SUM(e.cost) AS total_expenses FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN expense e ON m.member_id = e.link_to_member GROUP BY m.member_id HAVING COUNT(DISTINCT a.link_to_event) > 1 ORDER BY total_expenses DESC LIMIT 1
SELECT m.first_name, m.last_name, SUM(e.cost) AS total_expenses FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN expense e ON m.member_id = e.link_to_member GROUP BY m.member_id HAVING COUNT(DISTINCT a.link_to_event) > 1 ORDER BY total_expenses DESC LIMIT 1
SELECT m.first_name, m.last_name, SUM(e.cost) AS total_expenses FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN expense e ON m.member_id = e.link_to_member GROUP BY m.member_id HAVING COUNT(DISTINCT a.link_to_event) > 1 ORDER BY total_expenses DESC LIMIT 1
SELECT m.first_name, m.last_name, SUM(e.cost) AS total_expenses FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN expense e ON m.member_id = e.link_to_member GROUP BY m.member_id HAVING COUNT(DISTINCT a.link_to_event) > 1 ORDER BY total_expenses DESC LIMIT 1
SELECT m.first_name, m.last_name, SUM(e.cost) AS total_expenses FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN expense e ON m.member_id = e.link_to_member GROUP BY m.member_id HAVING COUNT(DISTINCT a.link_to_event) > 1 ORDER BY total_expenses DESC LIMIT 1
SELECT m.first_name, m.last_name, SUM(e.cost) AS total_expense FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN expense e ON m.member_id = e.link_to_member GROUP BY m.member_id HAVING COUNT(DISTINCT a.link_to_event) > 1 ORDER BY total_expense DESC LIMIT 1
SELECT m.first_name, m.last_name, SUM(e.cost) AS total_expenses FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN expense e ON m.member_id = e.link_to_member GROUP BY m.member_id HAVING COUNT(DISTINCT a.link_to_event) > 1 ORDER BY total_expenses DESC LIMIT 1","SELECT m.first_name, m.last_name, SUM(e.cost) AS total_expenses FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN expense e ON m.member_id = e.link_to_member GROUP BY m.member_id HAVING COUNT(DISTINCT a.link_to_event) > 1 ORDER BY total_expenses DESC LIMIT 1",0.0
153,1187,How many patients who were examined between 1987/7/6 and 1996/1/31 had a GPT level greater than 30 and an ALB level less than 4? List them by their ID.,thrombosis_prediction,moderate,SELECT DISTINCT ID FROM Laboratory WHERE Date BETWEEN '1987-07-06' AND '1996-01-31' AND GPT > 30 AND ALB < 4,7,"SELECT p.id FROM patient p JOIN examination e ON p.id = e.id JOIN laboratory l ON p.id = l.id WHERE e.examination_date BETWEEN '1987-07-06' AND '1996-01-31' AND l.gpt > 30 AND l.alb < 4
SELECT p.id FROM patient p JOIN examination e ON p.id = e.id JOIN laboratory l ON p.id = l.id WHERE e.examination_date BETWEEN '1987-07-06' AND '1996-01-31' AND l.gpt > 30 AND l.alb < 4
SELECT p.id FROM patient p JOIN examination e ON p.id = e.id JOIN laboratory l ON p.id = l.id WHERE e.examination_date BETWEEN '1987-07-06' AND '1996-01-31' AND l.gpt > 30 AND l.alb < 4
SELECT p.id FROM patient p JOIN examination e ON p.id = e.id JOIN laboratory l ON p.id = l.id WHERE e.examination_date BETWEEN '1987-07-06' AND '1996-01-31' AND l.gpt > 30 AND l.alb < 4
SELECT p.id FROM patient p JOIN examination e ON p.id = e.id JOIN laboratory l ON p.id = l.id WHERE e.examination_date BETWEEN '1987-07-06' AND '1996-01-31' AND l.gpt > 30 AND l.alb < 4
SELECT p.id FROM patient p JOIN examination e ON p.id = e.id JOIN laboratory l ON p.id = l.id WHERE e.examination_date BETWEEN '1987-07-06' AND '1996-01-31' AND l.gpt > 30 AND l.alb < 4
SELECT p.id FROM patient p JOIN examination e ON p.id = e.id JOIN laboratory l ON p.id = l.id WHERE e.examination_date BETWEEN '1987-07-06' AND '1996-01-31' AND l.gpt > 30 AND l.alb < 4",SELECT p.id FROM patient p JOIN examination e ON p.id = e.id JOIN laboratory l ON p.id = l.id WHERE e.examination_date BETWEEN '1987-07-06' AND '1996-01-31' AND l.gpt > 30 AND l.alb < 4,0.0
154,656,Describe the display name of the parent ID for child post with the highest score.,codebase_community,simple,SELECT DisplayName FROM users WHERE Id = ( SELECT OwnerUserId FROM posts WHERE ParentId IS NOT NULL ORDER BY Score DESC LIMIT 1 ),7,"SELECT u.displayname FROM posts p JOIN posts c ON p.id = c.parentid JOIN users u ON p.owneruserid = u.id WHERE c.score = (SELECT MAX(score) FROM comments) ORDER BY c.score DESC LIMIT 1
SELECT u.displayname FROM posts p JOIN posts c ON p.id = c.parentid JOIN users u ON p.owneruserid = u.id WHERE c.score = (SELECT MAX(score) FROM comments) ORDER BY c.score DESC LIMIT 1
SELECT u.displayname FROM posts p JOIN posts c ON p.id = c.parentid WHERE c.score = (SELECT MAX(score) FROM posts WHERE parentid = p.id) AND p.id = c.postid AND u.id = p.owneruserid
SELECT u.displayname FROM posts p JOIN posts c ON p.id = c.parentid WHERE c.score = (SELECT MAX(score) FROM posts WHERE parentid = p.id) AND p.id = c.postid AND u.id = p.owneruserid
SELECT u.displayname FROM posts p JOIN posts c ON p.id = c.parentid JOIN users u ON p.owneruserid = u.id WHERE c.score = (SELECT MAX(score) FROM comments) ORDER BY c.score DESC LIMIT 1
SELECT u.displayname FROM posts p JOIN posts c ON p.id = c.parentid WHERE c.score = (SELECT MAX(score) FROM posts WHERE parentid = p.id) JOIN users u ON p.owneruserid = u.id
SELECT u.displayname FROM posts p JOIN posts c ON p.id = c.parentid JOIN users u ON p.owneruserid = u.id WHERE c.score = (SELECT MAX(score) FROM comments) ORDER BY c.score DESC LIMIT 1",SELECT u.displayname FROM posts p JOIN posts c ON p.id = c.parentid JOIN users u ON p.owneruserid = u.id WHERE c.score = (SELECT MAX(score) FROM comments) ORDER BY c.score DESC LIMIT 1,0.0
155,1031,"At present, calculate for the player's age who have a sprint speed of no less than 97 between 2013 to 2015.",european_football_2,challenging,"SELECT DISTINCT DATETIME() - T2.birthday age FROM Player_Attributes AS t1 INNER JOIN Player AS t2 ON t1.player_api_id = t2.player_api_id WHERE STRFTIME('%Y',t1.`date`) >= '2013' AND STRFTIME('%Y',t1.`date`) <= '2015' AND t1.sprint_speed >= 97",7,"SELECT strftime('%Y', player.birthday) AS age FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id JOIN match ON player.player_api_id IN (match.home_player_1, match.home_player_2, ..., match.away_player_11) WHERE player_attributes.sprint_speed >= 97 AND match.date BETWEEN '2013-01-01' AND '2015-12-31'
SELECT EXTRACT(YEAR FROM p.birthday) AS age FROM player p JOIN player_attributes pa ON p.player_api_id = pa.player_api_id WHERE pa.sprint_speed >= 97 AND pa.date BETWEEN '2013-01-01' AND '2015-12-31'
SELECT EXTRACT(YEAR FROM p.birthday) AS age FROM player p JOIN player_attributes pa ON p.player_api_id = pa.player_api_id WHERE pa.sprint_speed >= 97 AND pa.date BETWEEN '2013-01-01' AND '2015-12-31'
SELECT strftime('%Y', player.birthday) AS age FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id JOIN match ON player.player_api_id = match.home_player_1 OR player.player_api_id = match.home_player_2 OR player.player_api_id = match.home_player_3 OR player.player_api_id = match.home_player_4 OR player.player_api_id = match.home_player_5 OR player.player_api_id = match.home_player_6 OR player.player_api_id = match.home_player_7 OR player.player_api_id = match.home_player_8 OR player.player_api_id = match.home_player_9 OR player.player_api_id = match.home_player_10 OR player.player_api_id = match.home_player_11 OR player.player_api_id = match.away_player_1 OR player.player_api_id = match.away_player_2 OR player.player_api_id = match.away_player_3 OR player.player_api_id = match.away_player_4 OR player.player_api_id = match
SELECT EXTRACT(YEAR FROM p.birthday) AS age FROM player p JOIN player_attributes pa ON p.player_api_id = pa.player_api_id WHERE pa.sprint_speed >= 97 AND pa.date BETWEEN '2013-01-01' AND '2015-12-31'
SELECT EXTRACT(YEAR FROM p.birthday) AS age FROM player p JOIN player_attributes pa ON p.player_api_id = pa.player_api_id WHERE pa.sprint_speed >= 97 AND pa.date BETWEEN '2013-01-01' AND '2015-12-31'
SELECT strftime('%Y', player.birthday) AS age FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id JOIN match ON player.player_api_id IN (match.home_player_1, match.home_player_2, ..., match.away_player_11) WHERE player_attributes.sprint_speed >= 97 AND match.date BETWEEN '2013-01-01' AND '2015-12-31'",SELECT EXTRACT(YEAR FROM p.birthday) AS age FROM player p JOIN player_attributes pa ON p.player_api_id = pa.player_api_id WHERE pa.sprint_speed >= 97 AND pa.date BETWEEN '2013-01-01' AND '2015-12-31',0.0
156,505,"Show the Simplified Chinese translation of the name of the set ""Mirrodin""?",card_games,moderate,SELECT translation FROM set_translations WHERE setCode IN ( SELECT code FROM sets WHERE name = 'Mirrodin' ) AND language = 'Chinese Simplified',7,"SELECT translation FROM set_translations WHERE setcode = 'Mirrodin' AND language = 'Simplified Chinese'
SELECT translation FROM set_translations WHERE setcode = 'Mirrodin' AND language = 'Simplified Chinese'
SELECT translation FROM set_translations WHERE setcode = 'Mirrodin' AND language = 'Simplified Chinese'
SELECT translation FROM set_translations WHERE setcode = 'Mirrodin' AND language = 'Simplified Chinese'
SELECT translation FROM set_translations WHERE setcode = 'Mirrodin' AND language = 'Simplified Chinese'
SELECT translation FROM set_translations WHERE setcode = 'Mirrodin' AND language = 'Simplified Chinese'
SELECT translation FROM set_translations WHERE setcode = 'Mirrodin' AND language = 'Simplified Chinese'",SELECT translation FROM set_translations WHERE setcode = 'Mirrodin' AND language = 'Simplified Chinese',0.0
157,1107,When was the first time did Kevin Constant have his highest crossing score? Give the date.,european_football_2,moderate,"SELECT `date` FROM ( SELECT t2.crossing, t2.`date` FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_fifa_api_id = t2.player_fifa_api_id WHERE t1.player_name = 'Kevin Constant' ORDER BY t2.crossing DESC) ORDER BY date DESC LIMIT 1",7,"SELECT date FROM player_attributes WHERE player_api_id = (SELECT id FROM player WHERE player_name = 'Kevin Constant') ORDER BY crossing DESC LIMIT 1
SELECT date FROM player_attributes WHERE player_api_id = (SELECT id FROM player WHERE player_name = 'Kevin Constant') AND crossing = (SELECT MAX(crossing) FROM player_attributes WHERE player_api_id = (SELECT id FROM player WHERE player_name = 'Kevin Constant'))
SELECT date FROM player_attributes WHERE player_api_id = (SELECT id FROM player WHERE player_name = 'Kevin Constant') AND crossing = (SELECT MAX(crossing) FROM player_attributes WHERE player_api_id = (SELECT id FROM player WHERE player_name = 'Kevin Constant'))
SELECT date FROM player_attributes WHERE player_api_id = (SELECT id FROM player WHERE player_name = 'Kevin Constant') AND crossing = (SELECT MAX(crossing) FROM player_attributes WHERE player_api_id = (SELECT id FROM player WHERE player_name = 'Kevin Constant'))
SELECT date FROM player_attributes WHERE player_api_id = (SELECT id FROM player WHERE player_name = 'Kevin Constant') AND crossing = (SELECT MAX(crossing) FROM player_attributes WHERE player_api_id = (SELECT id FROM player WHERE player_name = 'Kevin Constant'))
SELECT date FROM player_attributes WHERE player_api_id = (SELECT id FROM player WHERE player_name = 'Kevin Constant') AND crossing = (SELECT MAX(crossing) FROM player_attributes WHERE player_api_id = (SELECT id FROM player WHERE player_name = 'Kevin Constant'))
SELECT date FROM player_attributes WHERE player_api_id = (SELECT id FROM player WHERE player_name = 'Kevin Constant') AND crossing = (SELECT MAX(crossing) FROM player_attributes WHERE player_api_id = (SELECT id FROM player WHERE player_name = 'Kevin Constant'))",SELECT date FROM player_attributes WHERE player_api_id = (SELECT id FROM player WHERE player_name = 'Kevin Constant') AND crossing = (SELECT MAX(crossing) FROM player_attributes WHERE player_api_id = (SELECT id FROM player WHERE player_name = 'Kevin Constant')),0.0
158,31,What is the eligible free rate of the 10th and 11th schools with the highest enrolment for students in grades 1 through 12?,california_schools,moderate,"SELECT CAST(`Free Meal Count (K-12)` AS REAL) / `Enrollment (K-12)` FROM frpm ORDER BY `Enrollment (K-12)` DESC LIMIT 9, 2",7,"SELECT ""percent (%) eligible free (ages 5-17)"" FROM satscores JOIN schools ON satscores.cds = schools.cdscode WHERE ""low grade"" <= 1 AND ""high grade"" >= 12 ORDER BY ""enrollment (k-12)"" DESC LIMIT 2 OFFSET 9
SELECT ""percent (%) eligible free (ages 5-17)"" FROM satscores JOIN schools ON satscores.cds = schools.cdscode WHERE ""low grade"" <= 1 AND ""high grade"" >= 12 ORDER BY ""enrollment (k-12)"" DESC LIMIT 2 OFFSET 9
SELECT ""percent (%) eligible free (ages 5-17)"" FROM satscores JOIN schools ON satscores.cds = schools.cdscode WHERE ""low grade"" <= 1 AND ""high grade"" >= 12 ORDER BY ""enrollment (k-12)"" DESC LIMIT 2 OFFSET 9
SELECT ""percent (%) eligible free (ages 5-17)"" FROM satscores JOIN schools ON satscores.cds = schools.cdscode WHERE ""low grade"" <= 1 AND ""high grade"" >= 12 ORDER BY ""enrollment (k-12)"" DESC LIMIT 2 OFFSET 9
SELECT ""percent (%) eligible free (ages 5-17)"" FROM satscores JOIN schools ON satscores.cds = schools.cdscode WHERE ""low grade"" <= 1 AND ""high grade"" >= 12 ORDER BY ""enrollment (k-12)"" DESC LIMIT 2 OFFSET 9
SELECT ""percent (%) eligible free (ages 5-17)"" FROM satscores JOIN schools ON satscores.cds = schools.cdscode WHERE ""low grade"" <= 1 AND ""high grade"" >= 12 ORDER BY ""enrollment (k-12)"" DESC LIMIT 2 OFFSET 9
SELECT ""percent (%) eligible free (ages 5-17)"" FROM satscores JOIN schools ON satscores.cds = schools.cdscode WHERE ""low grade"" <= 1 AND ""high grade"" >= 12 ORDER BY ""enrollment (k-12)"" DESC LIMIT 2 OFFSET 9","SELECT ""percent (%) eligible free (ages 5-17)"" FROM satscores JOIN schools ON satscores.cds = schools.cdscode WHERE ""low grade"" <= 1 AND ""high grade"" >= 12 ORDER BY ""enrollment (k-12)"" DESC LIMIT 2 OFFSET 9",0.0
159,394,How many white bordered cards are powerful?,card_games,simple,SELECT COUNT(id) FROM cards WHERE borderColor = 'white' AND cardKingdomId IS NOT NULL AND cardKingdomFoilId IS NOT NULL,7,"SELECT COUNT(*) FROM cards WHERE bordercolor = 'white' AND power IS NOT NULL
SELECT COUNT(*) FROM cards WHERE bordercolor = 'white' AND power IS NOT NULL
SELECT COUNT(*) FROM cards WHERE bordercolor = 'white' AND power IS NOT NULL
SELECT COUNT(*) FROM cards WHERE bordercolor = 'white' AND power IS NOT NULL
SELECT COUNT(*) FROM cards WHERE bordercolor = 'white' AND power IS NOT NULL
SELECT COUNT(*) FROM cards WHERE bordercolor = 'white' AND power IS NOT NULL
SELECT COUNT(*) FROM cards WHERE bordercolor = 'white' AND power IS NOT NULL",SELECT COUNT(*) FROM cards WHERE bordercolor = 'white' AND power IS NOT NULL,0.0
160,230,What are the elements of the toxicology and label of molecule TR060?,toxicology,challenging,"SELECT DISTINCT T1.element, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR060'",7,"SELECT a.element, m.label FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.molecule_id = 'TR060'
SELECT a.element, m.label FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.molecule_id = 'TR060'
SELECT element, label FROM molecule JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE molecule.molecule_id = 'TR060'
SELECT a.element, m.label FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.molecule_id = 'TR060'
SELECT element, label FROM molecule JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE molecule.molecule_id = 'TR060'
SELECT a.element, m.label FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.molecule_id = 'TR060'
SELECT element, label FROM molecule JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE molecule.molecule_id = 'TR060'","SELECT a.element, m.label FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.molecule_id = 'TR060'",1.0
161,715,"In comments with score between 1 to 5, list down the display names of the users with 0 down votes.",codebase_community,simple,SELECT T2.DisplayName FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Score BETWEEN 1 AND 5 AND T2.DownVotes = 0,7,"SELECT userdisplayname FROM comments WHERE score BETWEEN 1 AND 5 AND userid IN (     SELECT userid     FROM users     WHERE downvotes = 0 )
SELECT userdisplayname FROM comments WHERE score BETWEEN 1 AND 5 AND userid IN (     SELECT userid     FROM users     WHERE downvotes = 0 )
SELECT userdisplayname FROM comments WHERE score BETWEEN 1 AND 5 AND userid IN (     SELECT userid     FROM users     WHERE downvotes = 0 )
SELECT userdisplayname FROM comments WHERE score BETWEEN 1 AND 5 AND userid IN (     SELECT userid     FROM users     WHERE downvotes = 0 )
SELECT userdisplayname FROM comments WHERE score BETWEEN 1 AND 5 AND userid IN (     SELECT userid     FROM users     WHERE downvotes = 0 )
SELECT userdisplayname FROM comments WHERE score BETWEEN 1 AND 5 AND userid IN (     SELECT userid     FROM users     WHERE downvotes = 0 )
SELECT userdisplayname FROM comments WHERE score BETWEEN 1 AND 5 AND userid IN (     SELECT userid     FROM users     WHERE downvotes = 0 )",SELECT userdisplayname FROM comments WHERE score BETWEEN 1 AND 5 AND userid IN (     SELECT userid     FROM users     WHERE downvotes = 0 ),0.0
162,207,What elements are in a double type bond?,toxicology,challenging,SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id WHERE T2.bond_type = '=',7,"SELECT element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'double'
SELECT element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'double'
SELECT element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'double'
SELECT element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'double'
SELECT element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'double'
SELECT element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'double'
SELECT element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'double'",SELECT element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'double',0.0
163,494,For all cards illustrated by Jim Pavelec. and describe the text of the ruling of these cards. Do these cards have missing or degraded properties and values.,card_games,challenging,"SELECT T2.text , CASE WHEN T1.hasContentWarning = 1 THEN 'YES' ELSE 'NO' END FROM cards AS T1 INNER JOIN rulings AS T2 ON T2.uuid = T1.uuid WHERE T1.artist = 'Jim Pavelec'",7,"SELECT cards.text, cards.id, rulings.text AS ruling_text,        CASE          WHEN cards.artist IS NULL OR cards.artist = '' THEN 1          ELSE 0        END AS missing_artist,        CASE          WHEN cards.rarity IS NULL OR cards.rarity = '' THEN 1          ELSE 0        END AS missing_rarity FROM cards LEFT JOIN rulings ON cards.id = rulings.id WHERE cards.artist = 'Jim Pavelec.'
SELECT cards.text, cards.id, rulings.text AS ruling_text,        CASE          WHEN cards.artist IS NULL OR cards.artist = '' THEN 1          ELSE 0        END AS missing_artist,        CASE          WHEN cards.rarity IS NULL OR cards.rarity = '' THEN 1          ELSE 0        END AS missing_rarity FROM cards LEFT JOIN rulings ON cards.id = rulings.id WHERE cards.artist = 'Jim Pavelec.'
SELECT cards.text, cards.id, rulings.text AS ruling_text,        CASE          WHEN cards.artist IS NULL OR cards.artist = '' THEN 1          ELSE 0        END AS missing_artist,        CASE          WHEN cards.availability IS NULL OR cards.availability = '' THEN 1          ELSE 0        END AS missing_availability FROM cards JOIN rulings ON cards.id = rulings.id WHERE cards.artist = 'Jim Pavelec.'
SELECT cards.text, cards.id, rulings.text AS ruling_text,        CASE          WHEN cards.artist IS NULL OR cards.artist = '' THEN 1          ELSE 0        END AS missing_artist,        CASE          WHEN cards.rarity IS NULL OR cards.rarity = '' THEN 1          ELSE 0        END AS missing_rarity FROM cards LEFT JOIN rulings ON cards.id = rulings.id WHERE cards.artist = 'Jim Pavelec.'
SELECT cards.text, cards.id, rulings.text AS ruling_text,        CASE          WHEN cards.artist IS NULL OR cards.artist = '' THEN 1          ELSE 0        END AS missing_artist,        CASE          WHEN cards.rarity IS NULL OR cards.rarity = '' THEN 1          ELSE 0        END AS missing_rarity FROM cards LEFT JOIN rulings ON cards.id = rulings.id WHERE cards.artist = 'Jim Pavelec.'
SELECT cards.text, cards.id, rulings.text AS ruling_text,        CASE          WHEN cards.artist IS NULL OR cards.artist = '' THEN 1          ELSE 0        END AS missing_artist,        CASE          WHEN cards.rarity IS NULL OR cards.rarity = '' THEN 1          ELSE 0        END AS missing_rarity FROM cards LEFT JOIN rulings ON cards.id = rulings.id WHERE cards.artist = 'Jim Pavelec.'
SELECT cards.text, cards.id, rulings.text AS ruling_text,        CASE          WHEN cards.artist IS NULL OR cards.artist = '' THEN 1          ELSE 0        END AS missing_artist,        CASE          WHEN cards.rarity IS NULL OR cards.rarity = '' THEN 1          ELSE 0        END AS missing_rarity FROM cards LEFT JOIN rulings ON cards.id = rulings.id WHERE cards.artist = 'Jim Pavelec.'","SELECT cards.text, cards.id, rulings.text AS ruling_text,        CASE          WHEN cards.artist IS NULL OR cards.artist = '' THEN 1          ELSE 0        END AS missing_artist,        CASE          WHEN cards.rarity IS NULL OR cards.rarity = '' THEN 1          ELSE 0        END AS missing_rarity FROM cards LEFT JOIN rulings ON cards.id = rulings.id WHERE cards.artist = 'Jim Pavelec.'",0.0
164,240,"List all the elements of the toxicology of the molecule ""TR004"".",toxicology,challenging,SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR004',7,"SELECT atom.element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR004'
SELECT a.element FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = 'TR004'
SELECT a.element FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = 'TR004'
SELECT a.element FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = 'TR004'
SELECT atom.element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR004'
SELECT atom.element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR004'
SELECT atom.element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR004'",SELECT atom.element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR004',0.0
165,818,"Among the bad superheroes, what is the percentage of female superheroes?",superhero,challenging,SELECT CAST(COUNT(CASE WHEN T3.gender = 'Female' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.alignment = 'Bad',7,"SELECT (COUNT(s.id) * 100.0 / (SELECT COUNT(*) FROM superhero s JOIN alignment a ON s.alignment_id = a.id WHERE a.alignment = 'bad')) AS percentage FROM superhero s JOIN gender g ON s.gender_id = g.id JOIN alignment a ON s.alignment_id = a.id WHERE g.gender = 'female' AND a.alignment = 'bad'
SELECT (COUNT(s.id) * 100.0 / (SELECT COUNT(*) FROM superhero s JOIN alignment a ON s.alignment_id = a.id WHERE a.alignment = 'bad')) AS percentage FROM superhero s JOIN gender g ON s.gender_id = g.id JOIN alignment a ON s.alignment_id = a.id WHERE g.gender = 'female' AND a.alignment = 'bad'
SELECT (COUNT(s.id) * 100.0 / (SELECT COUNT(*) FROM superhero s JOIN alignment a ON s.alignment_id = a.id WHERE a.alignment = 'bad')) AS percentage_female_superheroes FROM superhero s JOIN gender g ON s.gender_id = g.id JOIN alignment a ON s.alignment_id = a.id WHERE g.gender = 'female' AND a.alignment = 'bad'
SELECT (COUNT(s.id) * 100.0 / (SELECT COUNT(*) FROM superhero s WHERE s.alignment_id IN (SELECT id FROM alignment WHERE alignment = 'bad') AND s.gender_id IN (SELECT id FROM gender WHERE gender = 'female'))) AS percentage_female_bad_superheroes FROM superhero s WHERE s.alignment_id IN (SELECT id FROM alignment WHERE alignment = 'bad') AND s.gender_id IN (SELECT id FROM gender WHERE gender = 'female')
SELECT (COUNT(s.id) * 100.0 / (SELECT COUNT(*) FROM superhero s JOIN alignment a ON s.alignment_id = a.id WHERE a.alignment = 'bad')) AS percentage_female_bad_superheroes FROM superhero s JOIN gender g ON s.gender_id = g.id JOIN alignment a ON s.alignment_id = a.id WHERE g.gender = 'female' AND a.alignment = 'bad'
SELECT (COUNT(s.id) * 100.0 / (SELECT COUNT(*) FROM superhero s JOIN alignment a ON s.alignment_id = a.id WHERE a.alignment = 'bad')) AS percentage FROM superhero s JOIN gender g ON s.gender_id = g.id JOIN alignment a ON s.alignment_id = a.id WHERE g.gender = 'female' AND a.alignment = 'bad'
SELECT (COUNT(s.id) * 100.0 / (SELECT COUNT(*) FROM superhero s JOIN alignment a ON s.alignment_id = a.id WHERE a.alignment = 'bad')) AS percentage FROM superhero s JOIN gender g ON s.gender_id = g.id JOIN alignment a ON s.alignment_id = a.id WHERE g.gender = 'female' AND a.alignment = 'bad'",SELECT (COUNT(s.id) * 100.0 / (SELECT COUNT(*) FROM superhero s JOIN alignment a ON s.alignment_id = a.id WHERE a.alignment = 'bad')) AS percentage FROM superhero s JOIN gender g ON s.gender_id = g.id JOIN alignment a ON s.alignment_id = a.id WHERE g.gender = 'female' AND a.alignment = 'bad',0.0
166,1507,Please list the disparate time of the transactions taken place in the gas stations from chain no. 11.,debit_card_specializing,simple,SELECT DISTINCT T1.Time FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.ChainID = 11,7,"SELECT time FROM transactions_1k WHERE gasstationid IN (SELECT gasstationid FROM gasstations WHERE chainid = 11)
SELECT time FROM transactions_1k WHERE gasstationid IN (SELECT gasstationid FROM gasstations WHERE chainid = 11)
SELECT time FROM transactions_1k WHERE gasstationid IN (SELECT gasstationid FROM gasstations WHERE chainid = 11)
SELECT time FROM transactions_1k WHERE gasstationid IN (SELECT gasstationid FROM gasstations WHERE chainid = 11)
SELECT time FROM transactions_1k WHERE gasstationid IN (SELECT gasstationid FROM gasstations WHERE chainid = 11)
SELECT time FROM transactions_1k JOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid WHERE gasstations.chainid = 11
SELECT time FROM transactions_1k WHERE gasstationid IN (SELECT gasstationid FROM gasstations WHERE chainid = 11)",SELECT time FROM transactions_1k WHERE gasstationid IN (SELECT gasstationid FROM gasstations WHERE chainid = 11),1.0
167,935,How many drivers managed to finish the race in the 2008 Australian Grand Prix?,formula_1,simple,SELECT COUNT(T2.driverId) FROM races AS T1 INNER JOIN results AS T2 ON T2.raceId = T1.raceId WHERE T1.name = 'Australian Grand Prix' AND T1.year = 2008 AND T2.time IS NOT NULL,7,"SELECT COUNT(*) FROM results JOIN races ON results.raceid = races.raceid WHERE races.year = 2008 AND races.name = 'Australian Grand Prix' AND results.position IS NOT NULL
SELECT COUNT(*) FROM results JOIN races ON results.raceid = races.raceid WHERE races.year = 2008 AND races.name = 'Australian Grand Prix' AND results.statusid = 1
SELECT COUNT(*) FROM results WHERE raceid IN (     SELECT raceid FROM races     WHERE year = 2008 AND name = 'Australian Grand Prix' ) AND statusid = (     SELECT statusid FROM status     WHERE status = 'Finished' )
SELECT COUNT(*) FROM results JOIN races ON results.raceid = races.raceid WHERE races.year = 2008 AND races.name = 'Australian Grand Prix' AND results.statusid = 1
SELECT COUNT(*) FROM results WHERE raceid IN (     SELECT raceid FROM races     WHERE year = 2008 AND name = 'Australian Grand Prix' ) AND statusid = (     SELECT statusid FROM status     WHERE status = 'Finished' )
SELECT COUNT(*) FROM results JOIN races ON results.raceid = races.raceid WHERE races.year = 2008 AND races.name = 'Australian Grand Prix' AND results.statusid = 1
SELECT COUNT(*) FROM results JOIN races ON results.raceid = races.raceid WHERE races.year = 2008 AND races.name = 'Australian Grand Prix' AND results.statusid = 1",SELECT COUNT(*) FROM results JOIN races ON results.raceid = races.raceid WHERE races.year = 2008 AND races.name = 'Australian Grand Prix' AND results.statusid = 1,0.0
168,834,"Among all superheroes created by George Lucas, identify the percentage of female superheroes.",superhero,challenging,SELECT CAST(COUNT(CASE WHEN T3.gender = 'Female' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.publisher_name = 'George Lucas',7,"SELECT id FROM publisher WHERE publisher_name = 'George Lucas')
SELECT id FROM publisher WHERE publisher_name = 'George Lucas')
SELECT id FROM publisher WHERE publisher_name = 'George Lucas')
SELECT id FROM publisher WHERE publisher_name = 'George Lucas')
SELECT (COUNT(s.id) * 100.0 / (SELECT COUNT(*) FROM superhero s WHERE s.full_name LIKE '%George Lucas%')) AS percentage_female_superheroes FROM superhero s JOIN gender g ON s.gender_id = g.id WHERE g.gender = 'Female' AND s.full_name LIKE '%George Lucas%'
SELECT id FROM publisher WHERE publisher_name = 'George Lucas')
SELECT (COUNT(s.id) * 100.0 / (SELECT COUNT(*) FROM superhero s WHERE s.full_name LIKE '%George Lucas%')) AS percentage_female_superheroes FROM superhero s JOIN gender g ON s.gender_id = g.id WHERE g.gender = 'Female' AND s.full_name LIKE '%George Lucas%'",SELECT id FROM publisher WHERE publisher_name = 'George Lucas'),0.0
169,1040,List the top 10 players' names whose heights are above 180 in descending order of average heading accuracy.,european_football_2,moderate,SELECT t1.player_name FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.height > 180 GROUP BY t1.id ORDER BY CAST(SUM(t2.heading_accuracy) AS REAL) / COUNT(t2.`player_fifa_api_id`) DESC LIMIT 10,7,"SELECT player.player_name FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.height > 180 ORDER BY player_attributes.heading_accuracy DESC LIMIT 10
SELECT player.player_name FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.height > 180 ORDER BY player_attributes.heading_accuracy DESC LIMIT 10
SELECT p.player_name FROM player p JOIN player_attributes pa ON p.player_api_id = pa.player_api_id WHERE p.height > 180 ORDER BY pa.heading_accuracy DESC LIMIT 10
SELECT player.player_name FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.height > 180 ORDER BY player_attributes.heading_accuracy DESC LIMIT 10
SELECT player.player_name FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.height > 180 ORDER BY player_attributes.heading_accuracy DESC LIMIT 10
SELECT player.player_name FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.height > 180 ORDER BY player_attributes.heading_accuracy DESC LIMIT 10
SELECT player.player_name FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.height > 180 ORDER BY player_attributes.heading_accuracy DESC LIMIT 10",SELECT player.player_name FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.height > 180 ORDER BY player_attributes.heading_accuracy DESC LIMIT 10,0.0
170,744,"Between DC and Marvel Comics, which publisher has published more superheroes? Find the difference in the number of superheroes they have published.",superhero,challenging,SELECT SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id,7,"SELECT publisher_name, COUNT(superhero_id) AS superhero_count FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id GROUP BY publisher_name ORDER BY superhero_count DESC
SELECT publisher_name, COUNT(superhero_id) AS superhero_count FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id GROUP BY publisher_name ORDER BY superhero_count DESC
SELECT publisher_name, COUNT(superhero_id) as superhero_count FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id GROUP BY publisher_name ORDER BY superhero_count DESC
SELECT publisher_name, COUNT(superhero_id) AS superhero_count FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id GROUP BY publisher_name ORDER BY superhero_count DESC
SELECT publisher_name, COUNT(superhero_id) AS superhero_count FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id GROUP BY publisher_name ORDER BY superhero_count DESC
SELECT publisher_name, COUNT(superhero_id) AS superhero_count FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id GROUP BY publisher_name ORDER BY superhero_count DESC
SELECT publisher_name, COUNT(superhero_id) AS superhero_count FROM publisher JOIN superhero ON publisher.id = superhero.publisher_id GROUP BY publisher_name ORDER BY superhero_count DESC","SELECT publisher_name, COUNT(superhero_id) AS superhero_count FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id GROUP BY publisher_name ORDER BY superhero_count DESC",0.0
171,1457,Give the full name and contact number of members who had to spend more than average on each expense.,student_club,challenging,"SELECT DISTINCT T3.first_name, T3.last_name, T3.phone FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN member AS T3 ON T3.member_id = T1.link_to_member WHERE T1.cost > ( SELECT AVG(T1.cost) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN member AS T3 ON T3.member_id = T1.link_to_member )",7,"SELECT m.first_name, m.last_name, m.phone FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN expense e ON m.member_id = e.link_to_member JOIN budget b ON e.link_to_budget = b.budget_id JOIN events ev ON b.link_to_event = ev.event_id WHERE e.cost > (SELECT AVG(cost) FROM expense) GROUP BY m.member_id
SELECT m.first_name, m.last_name, m.phone FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN expense e ON m.member_id = e.link_to_member JOIN budget b ON e.link_to_budget = b.budget_id JOIN events ev ON b.link_to_event = ev.event_id WHERE e.cost > (SELECT AVG(cost) FROM expense) GROUP BY m.member_id
SELECT m.first_name, m.last_name, m.phone FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN expense e ON m.member_id = e.link_to_member JOIN budget b ON e.link_to_budget = b.budget_id JOIN events ev ON b.link_to_event = ev.event_id WHERE e.cost > (SELECT AVG(cost) FROM expense) GROUP BY m.member_id
SELECT m.first_name, m.last_name, m.phone FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN expense e ON m.member_id = e.link_to_member JOIN budget b ON e.link_to_budget = b.budget_id JOIN events ev ON b.link_to_event = ev.event_id WHERE e.cost > (SELECT AVG(cost) FROM expense) GROUP BY m.member_id
SELECT m.first_name, m.last_name, m.phone FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN expense e ON m.member_id = e.link_to_member JOIN budget b ON e.link_to_budget = b.budget_id JOIN events ev ON b.link_to_event = ev.event_id WHERE e.cost > (SELECT AVG(cost) FROM expense) GROUP BY m.member_id
SELECT m.first_name, m.last_name, m.phone FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN expense e ON m.member_id = e.link_to_member JOIN budget b ON e.link_to_budget = b.budget_id JOIN events ev ON b.link_to_event = ev.event_id WHERE e.cost > (SELECT AVG(cost) FROM expense) GROUP BY m.member_id
SELECT m.first_name, m.last_name, m.phone FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN expense e ON m.member_id = e.link_to_member JOIN budget b ON e.link_to_budget = b.budget_id JOIN events ev ON b.link_to_event = ev.event_id WHERE e.cost > (SELECT AVG(cost) FROM expense) GROUP BY m.member_id","SELECT m.first_name, m.last_name, m.phone FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN expense e ON m.member_id = e.link_to_member JOIN budget b ON e.link_to_budget = b.budget_id JOIN events ev ON b.link_to_event = ev.event_id WHERE e.cost > (SELECT AVG(cost) FROM expense) GROUP BY m.member_id",0.0
172,1036,List the long name of teams with above-average build-up play passing in 2012.,european_football_2,challenging,"SELECT DISTINCT t4.team_long_name FROM Team_Attributes AS t3 INNER JOIN Team AS t4 ON t3.team_api_id = t4.team_api_id WHERE SUBSTR(t3.`date`, 1, 4) = '2012' AND t3.buildUpPlayPassing > ( SELECT CAST(SUM(t2.buildUpPlayPassing) AS REAL) / COUNT(t1.id) FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE STRFTIME('%Y',t2.`date`) = '2012')",7,"SELECT t.team_long_name FROM team AS t JOIN team_attributes AS ta ON t.team_api_id = ta.team_api_id WHERE ta.date LIKE '2012%' AND ta.buildupplaypassing > (SELECT AVG(buildupplaypassing) FROM team_attributes WHERE date LIKE '2012%')
SELECT team.team_long_name FROM team JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id WHERE team_attributes.date LIKE '2012%' AND team_attributes.buildupplaypassing > (SELECT AVG(buildupplaypassing) FROM team_attributes WHERE date LIKE '2012%')
SELECT team.team_long_name FROM team JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id WHERE team_attributes.date LIKE '2012%' AND team_attributes.buildupplaypassing > (SELECT AVG(buildupplaypassing) FROM team_attributes WHERE date LIKE '2012%')
SELECT team.team_long_name FROM team JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id WHERE team_attributes.date LIKE '2012%' AND team_attributes.buildupplaypassing > (     SELECT AVG(buildupplaypassing)     FROM team_attributes     WHERE date LIKE '2012%' )
SELECT team.team_long_name FROM team JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id WHERE team_attributes.date LIKE '2012%' AND team_attributes.buildupplaypassing > (     SELECT AVG(buildupplaypassing)     FROM team_attributes     WHERE date LIKE '2012%' )
SELECT team.team_long_name FROM team JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id WHERE team_attributes.date LIKE '2012%' AND team_attributes.buildupplaypassing > (SELECT AVG(buildupplaypassing) FROM team_attributes WHERE date LIKE '2012%')
SELECT t.team_long_name FROM team t JOIN team_attributes ta ON t.team_api_id = ta.team_api_id WHERE ta.date LIKE '2012%' AND ta.buildupplaypassing > (SELECT AVG(buildupplaypassing) FROM team_attributes WHERE date LIKE '2012%')",SELECT team.team_long_name FROM team JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id WHERE team_attributes.date LIKE '2012%' AND team_attributes.buildupplaypassing > (SELECT AVG(buildupplaypassing) FROM team_attributes WHERE date LIKE '2012%'),1.0
173,781,Provide the heights of the heroes whose eye colours are amber.,superhero,simple,SELECT T1.height_cm FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Amber',7,"SELECT height_cm FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'amber'
SELECT height_cm FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'amber'
SELECT height_cm FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'amber'
SELECT height_cm FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'amber'
SELECT height_cm FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'amber'
SELECT height_cm FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'amber'
SELECT height_cm FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'amber'",SELECT height_cm FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'amber',0.0
174,479,"Among the cards with converted mana cost higher than 5 in the set Coldsnap, how many of them have unknown power?",card_games,moderate,SELECT SUM(CASE WHEN T1.power LIKE '*' OR T1.power IS NULL THEN 1 ELSE 0 END) FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE T2.name = 'Coldsnap' AND T1.convertedManaCost > 5,7,"SELECT COUNT(*) FROM cards WHERE convertedmanacost > 5 AND setcode = 'Coldsnap' AND power IS NULL
SELECT COUNT(*) FROM cards WHERE convertedmanacost > 5 AND setcode = 'Coldsnap' AND power IS NULL
SELECT COUNT(*) FROM cards WHERE convertedmanacost > 5 AND setcode = 'Coldsnap' AND power IS NULL
SELECT COUNT(*) FROM cards WHERE convertedmanacost > 5 AND setcode = 'Coldsnap' AND power IS NULL
SELECT COUNT(*) FROM cards WHERE convertedmanacost > 5 AND setcode = 'Coldsnap' AND power IS NULL
SELECT COUNT(*) FROM cards WHERE convertedmanacost > 5 AND setcode = 'Coldsnap' AND power IS NULL
SELECT COUNT(*) FROM cards WHERE convertedmanacost > 5 AND setcode = 'Coldsnap' AND power IS NULL",SELECT COUNT(*) FROM cards WHERE convertedmanacost > 5 AND setcode = 'Coldsnap' AND power IS NULL,0.0
175,115,"For the branch which located in the south Bohemia with biggest number of inhabitants, what is the percentage of the male clients?",financial,challenging,SELECT CAST(SUM(T1.gender = 'M') AS REAL) * 100 / COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A3 = 'south Bohemia' GROUP BY T2.A4 ORDER BY T2.A4 DESC LIMIT 1,7,"SELECT (COUNT(c.client_id) * 100.0 / (SELECT COUNT(*) FROM client WHERE district_id = (SELECT district_id FROM district WHERE a2 = 'south Bohemia' ORDER BY a16 DESC LIMIT 1) AND gender = 'M')) AS percentage_male_clients FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id WHERE district_id = (SELECT district_id FROM district WHERE a2 = 'south Bohemia' ORDER BY a16 DESC LIMIT 1) AND gender = 'M'
SELECT (COUNT(c.client_id) * 100.0 / (SELECT COUNT(*) FROM client WHERE district_id = (SELECT district_id FROM district WHERE a2 = 'south Bohemia' ORDER BY a16 DESC LIMIT 1) AND gender = 'M')) AS percentage_male_clients FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id WHERE district_id = (SELECT district_id FROM district WHERE a2 = 'south Bohemia' ORDER BY a16 DESC LIMIT 1) AND gender = 'M'
SELECT (COUNT(c.client_id) * 100.0 / (SELECT COUNT(*) FROM client WHERE district_id = (SELECT district_id FROM district WHERE a2 = 'south Bohemia' AND (a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16) IN (SELECT a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16 FROM district ORDER BY a10 DESC LIMIT 1))) FROM client c JOIN disp d ON c.client_id = d.client_id WHERE c.gender = 'M'
SELECT (COUNT(c.client_id) * 100.0 / (SELECT COUNT(*) FROM client WHERE district_id = (SELECT district_id FROM district WHERE a2 = 'south Bohemia' ORDER BY a16 DESC LIMIT 1) AND gender = 'M')) AS percentage_male_clients FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id WHERE district_id = (SELECT district_id FROM district WHERE a2 = 'south Bohemia' ORDER BY a16 DESC LIMIT 1) AND gender = 'M'
SELECT (     SELECT COUNT(*)     FROM client     WHERE district_id = (         SELECT district_id         FROM district         WHERE a2 = 'south Bohemia'         ORDER BY a16 DESC         LIMIT 1     ) AND gender = 'male' ) * 100.0 / (     SELECT COUNT(*)     FROM client     WHERE district_id = (         SELECT district_id         FROM district         WHERE a2 = 'south Bohemia'         ORDER BY a16 DESC         LIMIT 1     ) )
SELECT (     SELECT COUNT(*)     FROM client     WHERE district_id = (         SELECT district_id         FROM district         WHERE a2 = 'south Bohemia'         ORDER BY a16 DESC         LIMIT 1     ) AND gender = 'M' ) * 100.0 / (     SELECT COUNT(*)     FROM client     WHERE district_id = (         SELECT district_id         FROM district         WHERE a2 = 'south Bohemia'         ORDER BY a16 DESC         LIMIT 1     ) )
SELECT (COUNT(c.client_id) * 100.0 / (SELECT COUNT(*) FROM client WHERE district_id = (SELECT district_id FROM district WHERE a2 = 'south Bohemia' AND (SELECT COUNT(*) FROM client WHERE district_id = district_id) = (SELECT MAX(COUNT(*)) FROM client GROUP BY district_id)))) AS percentage_male_clients FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id WHERE c.gender = 'M' AND a.district_id = (SELECT district_id FROM district WHERE a2 = 'south Bohemia' AND (SELECT COUNT(*) FROM client WHERE district_id = district_id) = (SELECT MAX(COUNT(*)) FROM client GROUP BY district_id))",SELECT (COUNT(c.client_id) * 100.0 / (SELECT COUNT(*) FROM client WHERE district_id = (SELECT district_id FROM district WHERE a2 = 'south Bohemia' ORDER BY a16 DESC LIMIT 1) AND gender = 'M')) AS percentage_male_clients FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id WHERE district_id = (SELECT district_id FROM district WHERE a2 = 'south Bohemia' ORDER BY a16 DESC LIMIT 1) AND gender = 'M',0.0
176,955,"What is the average time in seconds of champion for each year, before year 1975?",formula_1,challenging,"WITH time_in_seconds AS ( SELECT T2.year, T2.raceId, T1.positionOrder, CASE WHEN T1.positionOrder = 1 THEN (CAST(SUBSTR(T1.time, 1, 1) AS REAL) * 3600) + (CAST(SUBSTR(T1.time, 3, 2) AS REAL) * 60) + CAST(SUBSTR(T1.time, 6,2) AS REAL )   + CAST(SUBSTR(T1.time, 9) AS REAL)/1000 ELSE 0 END AS time_seconds FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.time IS NOT NULL ), champion_time AS ( SELECT year, raceId, time_seconds FROM time_in_seconds WHERE positionOrder = 1 ) SELECT year, AVG(time_seconds) FROM champion_time WHERE year < 1975 GROUP BY year HAVING AVG(time_seconds) IS NOT NULL",7,"SELECT races.year, AVG(laptimes.milliseconds) AS average_time_in_seconds FROM races JOIN laptimes ON races.raceid = laptimes.raceid JOIN driverstandings ON laptimes.driverid = driverstandings.driverid WHERE races.year < 1975 AND driverstandings.position = 1 GROUP BY races.year
SELECT races.year, AVG(laptimes.milliseconds) AS average_time_in_seconds FROM races JOIN laptimes ON races.raceid = laptimes.raceid JOIN driverstandings ON laptimes.driverid = driverstandings.driverid WHERE races.year < 1975 AND driverstandings.position = 1 GROUP BY races.year
SELECT races.year, AVG(laptimes.milliseconds) AS average_time_in_seconds FROM races JOIN driverstandings ON races.raceid = driverstandings.raceid JOIN laptimes ON driverstandings.raceid = laptimes.raceid AND driverstandings.position = 1 WHERE races.year < 1975 GROUP BY races.year
SELECT races.year, AVG(laptimes.milliseconds) AS average_time_in_seconds FROM races JOIN laptimes ON races.raceid = laptimes.raceid JOIN driverstandings ON laptimes.driverid = driverstandings.driverid WHERE races.year < 1975 AND driverstandings.position = 1 GROUP BY races.year
SELECT races.year, AVG(laptimes.milliseconds) AS average_time_in_seconds FROM races JOIN driverstandings ON races.raceid = driverstandings.raceid JOIN laptimes ON races.raceid = laptimes.raceid AND driverstandings.position = 1 WHERE races.year < 1975 GROUP BY races.year
SELECT races.year, AVG(laptimes.milliseconds) AS average_time_in_seconds FROM races JOIN driverstandings ON races.raceid = driverstandings.raceid JOIN laptimes ON races.raceid = laptimes.raceid AND driverstandings.position = 1 WHERE races.year < 1975 GROUP BY races.year
SELECT races.year, AVG(laptimes.milliseconds) AS average_time_in_seconds FROM races JOIN driverstandings ON races.raceid = driverstandings.raceid JOIN laptimes ON races.raceid = laptimes.raceid AND driverstandings.position = 1 WHERE races.year < 1975 GROUP BY races.year","SELECT races.year, AVG(laptimes.milliseconds) AS average_time_in_seconds FROM races JOIN laptimes ON races.raceid = laptimes.raceid JOIN driverstandings ON laptimes.driverid = driverstandings.driverid WHERE races.year < 1975 AND driverstandings.position = 1 GROUP BY races.year",0.0
177,1047,What is the football player Francois Affolter header's finishing rate on 18/09/2014?,european_football_2,moderate,"SELECT t2.heading_accuracy FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.player_name = 'Francois Affolter' AND SUBSTR(t2.`date`, 1, 10) = '2014-09-18'",7,"SELECT finishing FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id JOIN match ON player_attributes.player_api_id IN (match.home_player_1, match.home_player_2, ..., match.away_player_11) WHERE player.player_name = 'Francois Affolter' AND match.date = '2014-09-18'
SELECT finishing FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id JOIN match ON player_attributes.player_api_id = match.home_player_1 OR player_attributes.player_api_id = match.away_player_1 WHERE player.player_name = 'Francois Affolter' AND match.date = '2014-09-18'
SELECT finishing FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id JOIN match ON player_attributes.player_api_id IN (match.home_player_1, match.home_player_2, ..., match.away_player_11) WHERE player.player_name = 'Francois Affolter' AND match.date = '2014-09-18'
SELECT finishing FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id JOIN match ON player_attributes.player_api_id IN (match.home_player_1, match.home_player_2, ..., match.away_player_11) WHERE player.player_name = 'Francois Affolter' AND match.date = '2014-09-18'
SELECT finishing FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id JOIN match ON player_attributes.player_api_id IN (match.home_player_1, match.home_player_2, ..., match.away_player_11) WHERE player.player_name = 'Francois Affolter' AND match.date = '2014-09-18'
SELECT finishing FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id JOIN match ON player_attributes.player_api_id IN (match.home_player_1, match.home_player_2, ..., match.away_player_11) WHERE player.player_name = 'Francois Affolter' AND match.date = '2014-09-18'
SELECT finishing FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id JOIN match ON player_attributes.player_api_id IN (match.home_player_1, match.home_player_2, ..., match.away_player_11) WHERE player.player_name = 'Francois Affolter' AND match.date = '2014-09-18'","SELECT finishing FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id JOIN match ON player_attributes.player_api_id IN (match.home_player_1, match.home_player_2, ..., match.away_player_11) WHERE player.player_name = 'Francois Affolter' AND match.date = '2014-09-18'",0.0
178,998,"In terms of number of points acquired, how many victories did the driver who ranked 91st acquired?",formula_1,simple,SELECT SUM(CASE WHEN points = 91 THEN wins ELSE 0 END) FROM driverStandings,7,"SELECT wins FROM driverstandings WHERE position = 91 AND driverstandingsid = (     SELECT driverstandingsid     FROM driverstandings     ORDER BY points DESC     LIMIT 1 OFFSET 90 )
SELECT COUNT(*) AS victories FROM results WHERE driverid = (     SELECT driverid     FROM driverstandings     WHERE position = 91     ORDER BY points DESC     LIMIT 1 ) AND position = 1
SELECT COUNT(*) AS victories FROM results WHERE driverid = (     SELECT driverid     FROM driverstandings     WHERE position = 91     ORDER BY points DESC     LIMIT 1 ) AND position = 1
SELECT COUNT(*) AS victories FROM driverstandings WHERE position = 91
SELECT wins FROM driverstandings WHERE position = 91 AND driverstandingsid = (     SELECT driverstandingsid     FROM driverstandings     ORDER BY points DESC     LIMIT 1 OFFSET 90 )
SELECT COUNT(*) AS victories FROM results WHERE driverid = (     SELECT driverid     FROM driverstandings     WHERE position = 91     ORDER BY points DESC     LIMIT 1 ) AND position = 1
SELECT COUNT(*) AS victories FROM results WHERE driverid = (     SELECT driverid     FROM driverstandings     WHERE position = 91     ORDER BY points DESC     LIMIT 1 ) AND position = 1",SELECT COUNT(*) AS victories FROM results WHERE driverid = (     SELECT driverid     FROM driverstandings     WHERE position = 91     ORDER BY points DESC     LIMIT 1 ) AND position = 1,0.0
179,1435,"List the names of closed event as ""game"" that was closed from 3/15/2019 to 3/20/2020.",student_club,moderate,"SELECT DISTINCT event_name FROM event WHERE type = 'Game' AND date(SUBSTR(event_date, 1, 10)) BETWEEN '2019-03-15' AND '2020-03-20' AND status = 'Closed'",7,"SELECT event_name FROM event JOIN major ON event.event_id = major.major_id JOIN zip_code ON event.location = zip_code.zip_code JOIN attendance ON event.event_id = attendance.link_to_event JOIN budget ON event.event_id = budget.link_to_event JOIN expense ON budget.budget_id = expense.link_to_budget JOIN income ON attendance.link_to_member = income.link_to_member JOIN member ON attendance.link_to_member = member.member_id WHERE event.type = 'game' AND event.status = 'closed' AND event.event_date BETWEEN '2019-03-15' AND '2020-03-20'
SELECT event_name FROM event JOIN major ON event.event_id = major.major_id JOIN zip_code ON event.location = zip_code.zip_code JOIN attendance ON event.event_id = attendance.link_to_event JOIN budget ON event.event_id = budget.link_to_event JOIN expense ON budget.budget_id = expense.link_to_budget JOIN income ON attendance.link_to_member = income.link_to_member JOIN member ON attendance.link_to_member = member.member_id WHERE event.type = 'game' AND event.status = 'closed' AND event.event_date BETWEEN '2019-03-15' AND '2020-03-20'
SELECT event_name FROM event JOIN major ON event.event_id = major.major_id JOIN attendance ON event.event_id = attendance.link_to_event JOIN budget ON event.event_id = budget.link_to_event JOIN expense ON budget.budget_id = expense.link_to_budget JOIN income ON attendance.link_to_member = income.link_to_member JOIN member ON attendance.link_to_member = member.member_id WHERE event.type = 'game' AND event.status = 'closed' AND event.event_date BETWEEN '2019-03-15' AND '2020-03-20'
SELECT event_name FROM event JOIN major ON event.event_id = major.major_id JOIN zip_code ON event.location = zip_code.zip_code JOIN attendance ON event.event_id = attendance.link_to_event JOIN budget ON event.event_id = budget.link_to_event JOIN expense ON budget.budget_id = expense.link_to_budget JOIN income ON attendance.link_to_member = income.link_to_member JOIN member ON attendance.link_to_member = member.member_id WHERE event.type = 'game' AND event.status = 'closed' AND event.event_date BETWEEN '2019-03-15' AND '2020-03-20'
SELECT event_name FROM event JOIN major ON event.event_id = major.major_id JOIN zip_code ON event.location = zip_code.zip_code JOIN attendance ON event.event_id = attendance.link_to_event JOIN budget ON event.event_id = budget.link_to_event JOIN expense ON budget.budget_id = expense.link_to_budget JOIN income ON attendance.link_to_member = income.link_to_member JOIN member ON attendance.link_to_member = member.member_id WHERE event.type = 'game' AND event.status = 'closed' AND event.event_date BETWEEN '2019-03-15' AND '2020-03-20'
SELECT event_name FROM event JOIN major ON event.major_id = major.major_id WHERE event_name = 'game' AND event_date BETWEEN '2019-03-15' AND '2020-03-20' AND status = 'closed'
SELECT event_name FROM event JOIN major ON event.event_id = major.major_id JOIN zip_code ON event.location = zip_code.zip_code JOIN attendance ON event.event_id = attendance.link_to_event JOIN budget ON event.event_id = budget.link_to_event JOIN expense ON budget.budget_id = expense.link_to_budget JOIN income ON attendance.link_to_member = income.link_to_member JOIN member ON attendance.link_to_member = member.member_id WHERE event.type = 'game' AND event.status = 'closed' AND event.event_date BETWEEN '2019-03-15' AND '2020-03-20'",SELECT event_name FROM event JOIN major ON event.event_id = major.major_id JOIN zip_code ON event.location = zip_code.zip_code JOIN attendance ON event.event_id = attendance.link_to_event JOIN budget ON event.event_id = budget.link_to_event JOIN expense ON budget.budget_id = expense.link_to_budget JOIN income ON attendance.link_to_member = income.link_to_member JOIN member ON attendance.link_to_member = member.member_id WHERE event.type = 'game' AND event.status = 'closed' AND event.event_date BETWEEN '2019-03-15' AND '2020-03-20',0.0
180,408,How many unknown power cards contain info about the triggered ability,card_games,moderate,SELECT T2.text FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE (T1.power IS NULL OR T1.power = '*') AND T2.text LIKE '%triggered ability%',7,"SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.id = foreign_data.id LEFT JOIN legalities ON cards.id = legalities.id LEFT JOIN sets ON cards.setcode = sets.code LEFT JOIN set_translations ON sets.code = set_translations.setcode LEFT JOIN rulings ON cards.id = rulings.id WHERE cards.text LIKE '%triggered ability%' AND cards.artist IS NULL
SELECT COUNT(*) FROM cards WHERE text LIKE '%triggered ability%' AND name IS NULL
SELECT COUNT(*) FROM cards WHERE text LIKE '%triggered ability%' AND name IS NULL
SELECT COUNT(*) FROM cards WHERE text LIKE '%triggered ability%' AND name IS NULL
SELECT COUNT(*) FROM cards WHERE triggered_ability IS NULL
SELECT COUNT(*) FROM cards WHERE triggered_ability IS NULL
SELECT COUNT(*) FROM cards WHERE triggered_ability IS NULL",SELECT COUNT(*) FROM cards WHERE text LIKE '%triggered ability%' AND name IS NULL,0.0
181,1049,"How many matches in the 2015/2016 season were held in Scotland Premier League
?",european_football_2,simple,SELECT COUNT(t2.id) FROM League AS t1 INNER JOIN Match AS t2 ON t1.id = t2.league_id WHERE t2.season = '2015/2016' AND t1.name = 'Scotland Premier League',7,"SELECT COUNT(*) FROM match JOIN league ON match.league_id = league.id JOIN country ON league.country_id = country.id WHERE match.season = '2015/2016' AND country.name = 'Scotland' AND league.name = 'Premier League'
SELECT COUNT(*) FROM match JOIN league ON match.league_id = league.id JOIN country ON league.country_id = country.id WHERE match.season = '2015/2016' AND country.name = 'Scotland' AND league.name = 'Premier League'
SELECT COUNT(*) FROM match JOIN league ON match.league_id = league.id JOIN country ON league.country_id = country.id WHERE match.season = '2015/2016' AND country.name = 'Scotland' AND league.name = 'Premier League'
SELECT COUNT(*) FROM match JOIN league ON match.league_id = league.id JOIN country ON league.country_id = country.id WHERE match.season = '2015/2016' AND country.name = 'Scotland' AND league.name = 'Premier League'
SELECT COUNT(*) FROM match JOIN league ON match.league_id = league.id JOIN country ON league.country_id = country.id WHERE match.season = '2015/2016' AND country.name = 'Scotland' AND league.name = 'Premier League'
SELECT COUNT(*) FROM match JOIN league ON match.league_id = league.id JOIN country ON league.country_id = country.id WHERE match.season = '2015/2016' AND league.name = 'Scotland Premier League'
SELECT COUNT(*) FROM match JOIN league ON match.league_id = league.id JOIN country ON league.country_id = country.id WHERE match.season = '2015/2016' AND country.name = 'Scotland' AND league.name = 'Premier League'",SELECT COUNT(*) FROM match JOIN league ON match.league_id = league.id JOIN country ON league.country_id = country.id WHERE match.season = '2015/2016' AND country.name = 'Scotland' AND league.name = 'Premier League',0.0
182,1071,"List the football team that has a build up play speed of 31, build up plan dribbling of 53, and build up play passing of 32. Only indicate the short name of the team.",european_football_2,challenging,SELECT DISTINCT t1.team_short_name FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t2.buildUpPlaySpeed = 31 AND t2.buildUpPlayDribbling = 53 AND t2.buildUpPlayPassing = 32,7,"SELECT team.team_short_name FROM team JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id WHERE team_attributes.buildupplayspeed = 31 AND team_attributes.buildupplaydribbling = 53 AND team_attributes.buildupplaypassing = 32
SELECT team.team_short_name FROM team JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id WHERE team_attributes.buildupplayspeed = 31 AND team_attributes.buildupplaydribbling = 53 AND team_attributes.buildupplaypassing = 32
SELECT team.team_short_name FROM team JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id WHERE team_attributes.buildupplayspeed = 31 AND team_attributes.buildupplaydribbling = 53 AND team_attributes.buildupplaypassing = 32
SELECT team.team_short_name FROM team JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id WHERE team_attributes.buildupplayspeed = 31 AND team_attributes.buildupplaydribbling = 53 AND team_attributes.buildupplaypassing = 32
SELECT team.team_short_name FROM team JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id WHERE team_attributes.buildupplayspeed = 31 AND team_attributes.buildupplaydribbling = 53 AND team_attributes.buildupplaypassing = 32
SELECT team.team_short_name FROM team JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id WHERE team_attributes.buildupplayspeed = 31 AND team_attributes.buildupplaydribbling = 53 AND team_attributes.buildupplaypassing = 32
SELECT team.team_short_name FROM team JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id WHERE team_attributes.buildupplayspeed = 31 AND team_attributes.buildupplaydribbling = 53 AND team_attributes.buildupplaypassing = 32",SELECT team.team_short_name FROM team JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id WHERE team_attributes.buildupplayspeed = 31 AND team_attributes.buildupplaydribbling = 53 AND team_attributes.buildupplaypassing = 32,1.0
183,616,What is the comment's rating score of the post which was created on 7/19/2010 7:19:56 PM,codebase_community,simple,SELECT T1.Score FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.CreationDate = '2010-07-19 19:19:56.0',7,"SELECT comments.score FROM comments JOIN posts ON comments.postid = posts.id WHERE posts.creaiondate = '2010-07-19 19:19:56'
SELECT comments.score FROM comments JOIN posts ON comments.postid = posts.id WHERE posts.creaiondate = '2010-07-19 19:19:56'
SELECT comments.score FROM comments JOIN posts ON comments.postid = posts.id WHERE posts.creaiondate = '2010-07-19 19:19:56'
SELECT comments.score FROM comments JOIN posts ON comments.postid = posts.id WHERE posts.creaiondate = '2010-07-19 19:19:56'
SELECT comments.score FROM comments JOIN posts ON comments.postid = posts.id WHERE posts.creaiondate = '2010-07-19 19:19:56'
SELECT comments.score FROM comments JOIN posts ON comments.postid = posts.id WHERE posts.creaiondate = '2010-07-19 19:19:56'
SELECT comments.score FROM comments JOIN posts ON comments.postid = posts.id WHERE posts.creaiondate = '2010-07-19 19:19:56'",SELECT comments.score FROM comments JOIN posts ON comments.postid = posts.id WHERE posts.creaiondate = '2010-07-19 19:19:56',0.0
184,990,What is the constructor reference name of the champion in the 2009 Singapore Grand Prix? Please give its website.,formula_1,challenging,"SELECT T3.constructorRef, T3.url FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN constructors AS T3 on T1.constructorId = T3.constructorId WHERE T2.name = 'Singapore Grand Prix' AND T2.year = 2009 AND T1.time LIKE '_:%:__.___'",7,"SELECT constructors.name FROM constructorresults JOIN races ON constructorresults.raceid = races.raceid JOIN constructors ON constructorresults.constructorid = constructors.constructorid WHERE races.year = 2009 AND races.name = 'Singapore Grand Prix'
SELECT constructors.name FROM constructorresults JOIN races ON constructorresults.raceid = races.raceid JOIN constructors ON constructorresults.constructorid = constructors.constructorid WHERE races.year = 2009 AND races.name = 'Singapore Grand Prix'
SELECT constructors.name FROM constructorresults JOIN races ON constructorresults.raceid = races.raceid JOIN constructors ON constructorresults.constructorid = constructors.constructorid WHERE races.year = 2009 AND races.name = 'Singapore Grand Prix'
SELECT constructors.name FROM constructorresults JOIN races ON constructorresults.raceid = races.raceid JOIN constructors ON constructorresults.constructorid = constructors.constructorid WHERE races.year = 2009 AND races.name = 'Singapore Grand Prix'
SELECT constructors.name FROM constructorresults JOIN races ON constructorresults.raceid = races.raceid JOIN constructors ON constructorresults.constructorid = constructors.constructorid WHERE races.year = 2009 AND races.name = 'Singapore Grand Prix'
SELECT constructors.name FROM constructorresults JOIN races ON constructorresults.raceid = races.raceid JOIN constructors ON constructorresults.constructorid = constructors.constructorid WHERE races.year = 2009 AND races.name = 'Singapore Grand Prix'
SELECT constructors.name FROM constructorresults JOIN races ON constructorresults.raceid = races.raceid JOIN constructors ON constructorresults.constructorid = constructors.constructorid WHERE races.year = 2009 AND races.name = 'Singapore Grand Prix'",SELECT constructors.name FROM constructorresults JOIN races ON constructorresults.raceid = races.raceid JOIN constructors ON constructorresults.constructorid = constructors.constructorid WHERE races.year = 2009 AND races.name = 'Singapore Grand Prix',0.0
185,1472,"In 2012, who had the least consumption in LAM?",debit_card_specializing,moderate,"SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM' AND SUBSTR(T2.Date, 1, 4) = '2012' GROUP BY T1.CustomerID ORDER BY SUM(T2.Consumption) ASC LIMIT 1",7,"SELECT customerid, MIN(consumption) AS least_consumption FROM yearmonth JOIN transactions_1k ON yearmonth.customerid = transactions_1k.customerid JOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid WHERE gasstations.segment = 'LAM' AND strftime('%Y', yearmonth.date) = '2012'
SELECT customerid, MIN(consumption) AS least_consumption FROM transactions_1k JOIN customers ON transactions_1k.customerid = customers.customerid JOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid JOIN yearmonth ON transactions_1k.customerid = yearmonth.customerid WHERE gasstations.segment = 'LAM' AND strftime('%Y', transactions_1k.date) = '2012'
SELECT customerid, MIN(consumption) as least_consumption FROM yearmonth JOIN transactions_1k ON yearmonth.customerid = transactions_1k.customerid JOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid WHERE gasstations.segment = 'LAM' AND strftime('%Y', yearmonth.date) = '2012'
SELECT customerid FROM transactions_1k WHERE date LIKE '2012%' GROUP BY customerid ORDER BY SUM(amount) ASC LIMIT 1
SELECT customerid, MIN(consumption) FROM yearmonth WHERE strftime('%Y', date) = '2012' AND customerid IN (SELECT customerid FROM customers WHERE segment = 'LAM') GROUP BY customerid
SELECT customerid, MIN(consumption) AS least_consumption FROM yearmonth JOIN customers ON yearmonth.customerid = customers.customerid WHERE strftime('%Y', date) = '2012' AND segment = 'LAM' GROUP BY customerid ORDER BY least_consumption ASC LIMIT 1
SELECT customerid, MIN(consumption) AS least_consumption FROM yearmonth JOIN transactions_1k ON yearmonth.customerid = transactions_1k.customerid JOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid WHERE gasstations.segment = 'LAM' AND strftime('%Y', yearmonth.date) = '2012'","SELECT customerid, MIN(consumption) AS least_consumption FROM yearmonth JOIN transactions_1k ON yearmonth.customerid = transactions_1k.customerid JOIN gasstations ON transactions_1k.gasstationid = gasstations.gasstationid WHERE gasstations.segment = 'LAM' AND strftime('%Y', yearmonth.date) = '2012'",0.0
186,954,Please calculate the race completion percentage of Japanese drivers from 2007 to 2009.,formula_1,challenging,"SELECT CAST(SUM(IIF(T1.time IS NOT NULL, 1, 0)) AS REAL) * 100 / COUNT(T1.raceId) FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN drivers AS T3 on T1.driverId = T3.driverId WHERE T3.nationality = 'Japanese' AND T2.year BETWEEN 2007 AND 2009",7,"NULL
NULL
NULL
NULL
NULL
NULL
NULL",,0.0
187,301,What is the bond type of TR007_4_19?,toxicology,simple,SELECT T.bond_type FROM bond AS T WHERE T.bond_id = 'TR007_4_19',7,"SELECT bond_type FROM bond JOIN connected ON bond.bond_id = connected.bond_id JOIN atom ON connected.atom_id = atom.atom_id WHERE atom.atom_id = 'TR007_4_19'
SELECT bond_type FROM bond JOIN connected ON bond.bond_id = connected.bond_id JOIN atom ON connected.atom_id = atom.atom_id WHERE atom.atom_id = 'TR007_4_19'
SELECT bond_type FROM bond JOIN connected ON bond.bond_id = connected.bond_id JOIN atom ON connected.atom_id = atom.atom_id WHERE atom.atom_id = 'TR007_4_19'
SELECT bond_type FROM bond JOIN connected ON bond.bond_id = connected.bond_id JOIN atom ON connected.atom_id = atom.atom_id WHERE atom.atom_id = 'TR007_4_19'
SELECT bond_type FROM bond JOIN connected ON bond.bond_id = connected.bond_id JOIN atom ON connected.atom_id = atom.atom_id WHERE atom.atom_id = 'TR007_4_19'
SELECT bond_type FROM bond JOIN connected ON bond.bond_id = connected.bond_id JOIN atom ON connected.atom_id = atom.atom_id WHERE atom.atom_id = 'TR007_4_19'
SELECT bond_type FROM bond JOIN connected ON bond.bond_id = connected.bond_id JOIN atom ON connected.atom_id = atom.atom_id WHERE atom.atom_id = 'TR007_4_19'",SELECT bond_type FROM bond JOIN connected ON bond.bond_id = connected.bond_id JOIN atom ON connected.atom_id = atom.atom_id WHERE atom.atom_id = 'TR007_4_19',0.0
188,798,"What is the publisher for Hawkman, Karate Kid and Speedy?",superhero,moderate,"SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')",7,"SELECT publisher_name FROM publisher JOIN superhero ON publisher.id = superhero.publisher_id WHERE superhero.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')
SELECT publisher_name FROM publisher JOIN superhero ON publisher.id = superhero.publisher_id WHERE superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')
SELECT publisher_name FROM publisher JOIN superhero ON publisher.id = superhero.publisher_id WHERE superhero.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')
SELECT publisher_name FROM publisher JOIN superhero ON publisher.id = superhero.publisher_id WHERE superhero.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')
SELECT publisher_name FROM publisher JOIN superhero ON publisher.id = superhero.publisher_id WHERE superhero.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')
SELECT publisher_name FROM publisher JOIN superhero ON publisher.id = superhero.publisher_id WHERE superhero.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')
SELECT publisher_name FROM publisher JOIN superhero ON publisher.id = superhero.publisher_id WHERE superhero.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')","SELECT publisher_name FROM publisher JOIN superhero ON publisher.id = superhero.publisher_id WHERE superhero.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')",1.0
189,1481,"What is the difference in the annual average consumption of the customers with the least amount of consumption paid in CZK for 2013 between SME and LAM, LAM and KAM, and KAM and SME?",debit_card_specializing,challenging,"SELECT CAST(SUM(IIF(T1.Segment = 'SME', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'LAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) , CAST(SUM(IIF(T1.Segment = 'LAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'KAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) , CAST(SUM(IIF(T1.Segment = 'KAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'SME', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' AND T2.Consumption = ( SELECT MIN(Consumption) FROM yearmonth ) AND T2.Date BETWEEN 201301 AND 201312",7,"SELECT MIN(amount) FROM transactions_1k WHERE strftime('%Y', date) = '2013' AND currency = 'CZK')
SELECT MIN(amount) FROM transactions_1k WHERE strftime('%Y', date) = '2013' AND customerid = t.customerid)
SELECT MIN(amount) FROM transactions_1k WHERE strftime('%Y', date) = '2013' AND currency = 'CZK')
SELECT MIN(amount) FROM transactions_1k WHERE strftime('%Y', date) = '2013' AND currency = 'CZK')
SELECT MIN(amount) FROM transactions_1k WHERE strftime('%Y', date) = '2013' AND currency = 'CZK')
SELECT MIN(amount) FROM transactions_1k WHERE strftime('%Y', date) = '2013' AND currency = 'CZK')
SELECT MIN(amount) FROM transactions_1k WHERE strftime('%Y', date) = '2013') GROUP BY     c.segment UNION ALL SELECT     (AVG(t.amount) - AVG(l.amount)) AS difference FROM     transactions_1k AS t JOIN     customers AS c ON t.customerid = c.customerid JOIN     yearmonth AS y ON t.customerid = y.customerid AND strftime('%Y', y.date) = '2013' WHERE     c.segment = 'LAM' AND t.amount = (SELECT MIN(amount) FROM transactions_1k WHERE strftime('%Y', date) = '2013') GROUP BY     c.segment UNION ALL SELECT     (AVG(","SELECT MIN(amount) FROM transactions_1k WHERE strftime('%Y', date) = '2013' AND currency = 'CZK')",0.0
190,1011,Which top 20 driver created the shortest lap time ever record in a Formula_1 race? Please give them full names.,formula_1,challenging,"WITH lap_times_in_seconds AS (SELECT driverId, (CASE WHEN SUBSTR(time, 1, INSTR(time, ':') - 1) <> '' THEN CAST(SUBSTR(time, 1, INSTR(time, ':') - 1) AS REAL) * 60 ELSE 0 END + CASE WHEN SUBSTR(time, INSTR(time, ':') + 1, INSTR(time, '.') - INSTR(time, ':') - 1) <> '' THEN CAST(SUBSTR(time, INSTR(time, ':') + 1, INSTR(time, '.') - INSTR(time, ':') - 1) AS REAL) ELSE 0 END + CASE WHEN SUBSTR(time, INSTR(time, '.') + 1) <> '' THEN CAST(SUBSTR(time, INSTR(time, '.') + 1) AS REAL) / 1000 ELSE 0 END) AS time_in_seconds FROM lapTimes) SELECT T2.forename, T2.surname, T1.driverId FROM (SELECT driverId, MIN(time_in_seconds) AS min_time_in_seconds FROM lap_times_in_seconds GROUP BY driverId) AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId ORDER BY T1.min_time_in_seconds ASC LIMIT 20",7,"SELECT d.forename, d.surname FROM drivers d JOIN laptimes l ON d.driverid = l.driverid ORDER BY l.milliseconds LIMIT 20
SELECT d.forename, d.surname FROM drivers d JOIN laptimes l ON d.driverid = l.driverid ORDER BY l.milliseconds ASC LIMIT 20
SELECT d.forename, d.surname, MIN(l.milliseconds) AS shortest_lap_time FROM drivers d JOIN laptimes l ON d.driverid = l.driverid GROUP BY d.driverid ORDER BY shortest_lap_time LIMIT 20
SELECT d.forename, d.surname FROM drivers d JOIN laptimes l ON d.driverid = l.driverid ORDER BY l.milliseconds ASC LIMIT 20
SELECT d.forename, d.surname FROM drivers d JOIN laptimes l ON d.driverid = l.driverid ORDER BY l.milliseconds ASC LIMIT 20
SELECT d.forename, d.surname, MIN(l.milliseconds) AS shortest_lap_time FROM drivers d JOIN laptimes l ON d.driverid = l.driverid GROUP BY d.driverid ORDER BY shortest_lap_time LIMIT 20
SELECT d.forename, d.surname FROM drivers d JOIN laptimes l ON d.driverid = l.driverid ORDER BY l.milliseconds ASC LIMIT 20","SELECT d.forename, d.surname FROM drivers d JOIN laptimes l ON d.driverid = l.driverid ORDER BY l.milliseconds ASC LIMIT 20",0.0
191,507,"For all the set of cards that has Brazil Portuguese translation, what is the percentage of them are only available online?",card_games,challenging,SELECT CAST(SUM(CASE WHEN isOnlineOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) FROM sets WHERE code IN ( SELECT setCode FROM set_translations WHERE language = 'Portuguese (Brazil)' ),7,"SELECT (COUNT(c.id) * 100.0 / (SELECT COUNT(*) FROM cards c JOIN foreign_data fd ON c.id = fd.id WHERE fd.language = 'Brazilian Portuguese')) AS percentage_online_only FROM cards c JOIN foreign_data fd ON c.id = fd.id WHERE fd.language = 'Brazilian Portuguese' AND c.isonlineonly = 1
SELECT (COUNT(c.id) * 100.0 / (SELECT COUNT(*) FROM cards c JOIN foreign_data fd ON c.id = fd.id WHERE fd.language = 'Brazilian Portuguese')) AS percentage_online_only FROM cards c JOIN foreign_data fd ON c.id = fd.id WHERE fd.language = 'Brazilian Portuguese' AND c.isonlineonly = 1
SELECT (COUNT(cards.id) * 100.0 / (SELECT COUNT(*) FROM cards WHERE cards.id IN (SELECT id FROM foreign_data WHERE language = 'Brazilian Portuguese'))) AS percentage_online_only FROM cards WHERE cards.id IN (SELECT id FROM foreign_data WHERE language = 'Brazilian Portuguese') AND cards.isonlineonly = 1
SELECT (COUNT(cards.id) * 100.0 / (SELECT COUNT(*) FROM cards WHERE cards.id IN (SELECT id FROM foreign_data WHERE language = 'Brazilian Portuguese'))) AS percentage_online_only FROM cards WHERE cards.id IN (SELECT id FROM foreign_data WHERE language = 'Brazilian Portuguese') AND cards.isonlineonly = 1
SELECT (COUNT(c.id) * 100.0 / (SELECT COUNT(*) FROM cards c JOIN foreign_data fd ON c.id = fd.id WHERE fd.language = 'Brazilian Portuguese')) AS percentage_online_only FROM cards c JOIN foreign_data fd ON c.id = fd.id WHERE fd.language = 'Brazilian Portuguese' AND c.isonlineonly = 1
SELECT (COUNT(cards.id) * 100.0 / (SELECT COUNT(*) FROM cards WHERE cards.id IN (SELECT id FROM foreign_data WHERE language = 'Brazilian Portuguese'))) AS percentage_online_only FROM cards WHERE cards.id IN (SELECT id FROM foreign_data WHERE language = 'Brazilian Portuguese') AND cards.isonlineonly = 1
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE id IN (SELECT id FROM foreign_data WHERE language = 'Brazilian Portuguese')) AS percentage_online_only FROM cards WHERE id IN (SELECT id FROM foreign_data WHERE language = 'Brazilian Portuguese') AND isonlineonly = 1",SELECT (COUNT(c.id) * 100.0 / (SELECT COUNT(*) FROM cards c JOIN foreign_data fd ON c.id = fd.id WHERE fd.language = 'Brazilian Portuguese')) AS percentage_online_only FROM cards c JOIN foreign_data fd ON c.id = fd.id WHERE fd.language = 'Brazilian Portuguese' AND c.isonlineonly = 1,0.0
192,431,Which set is not available outside of the United States and has foil cards with Japanese writing on them? Please include the set ID in your response.,card_games,challenging,"SELECT T1.name, T1.id FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Japanese' AND T1.isFoilOnly = 1 AND T1.isForeignOnly = 0",7,"SELECT id FROM sets WHERE availability != 'United States' AND hasfoil = 1 AND EXISTS (SELECT 1 FROM cards WHERE cards.setcode = sets.code AND EXISTS (SELECT 1 FROM foreign_data WHERE foreign_data.multiverseid = cards.multiverseid AND foreign_data.language = 'Japanese'))
SELECT id FROM sets WHERE isforeignonly = 1 AND code != 'US' AND id IN (SELECT setcode FROM cards WHERE hasfoil = 1 AND id IN (SELECT multiverseid FROM foreign_data WHERE language = 'Japanese'))
SELECT id FROM sets WHERE availability != 'United States' AND EXISTS (SELECT 1 FROM cards WHERE cards.setcode = sets.code AND hasfoil = 1 AND EXISTS (SELECT 1 FROM foreign_data WHERE foreign_data.multiverseid = cards.multiverseid AND language = 'Japanese'))
SELECT id FROM sets WHERE availability != 'United States' AND hasfoil = 1 AND EXISTS (SELECT 1 FROM cards WHERE cards.setcode = sets.code AND EXISTS (SELECT 1 FROM foreign_data WHERE foreign_data.multiverseid = cards.multiverseid AND foreign_data.language = 'Japanese'))
SELECT id FROM sets WHERE availability != 'United States' AND hasfoil = 1 AND EXISTS (SELECT 1 FROM cards WHERE cards.setcode = sets.code AND EXISTS (SELECT 1 FROM foreign_data WHERE foreign_data.multiverseid = cards.multiverseid AND language = 'Japanese'))
SELECT id FROM sets WHERE availability != 'United States' AND EXISTS (     SELECT 1 FROM cards     WHERE cards.setcode = sets.code     AND hasfoil = 1     AND EXISTS (         SELECT 1 FROM foreign_data         WHERE foreign_data.multiverseid = cards.multiverseid         AND language = 'Japanese'     ) )
SELECT id FROM sets WHERE isforeignonly = 1 AND code != 'US' AND id IN (     SELECT DISTINCT setcode     FROM cards     WHERE hasfoil = 1     AND id IN (         SELECT DISTINCT id         FROM foreign_data         WHERE language = 'Japanese'     ) )",SELECT id FROM sets WHERE availability != 'United States' AND hasfoil = 1 AND EXISTS (SELECT 1 FROM cards WHERE cards.setcode = sets.code AND EXISTS (SELECT 1 FROM foreign_data WHERE foreign_data.multiverseid = cards.multiverseid AND foreign_data.language = 'Japanese')),0.0
193,1167,"For the year that concluded on December 31, 1998, how many male patients on average were tested in the lab each month?",thrombosis_prediction,moderate,"SELECT CAST(COUNT(T1.ID) AS REAL) / 12 FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T2.Date) = '1998' AND T1.SEX = 'M'",7,"SELECT AVG(COUNT(DISTINCT examination.id)) AS average_tests_per_month FROM examination JOIN patient ON examination.id = patient.id JOIN laboratory ON examination.id = laboratory.id WHERE strftime('%Y-%m-%d', examination.examination_date) BETWEEN '1998-01-01' AND '1998-12-31' AND patient.sex = 'male'
SELECT AVG(COUNT(DISTINCT examination.id)) AS average_tests_per_month FROM examination JOIN patient ON examination.id = patient.id JOIN laboratory ON examination.id = laboratory.id WHERE strftime('%Y', examination.date) = '1998' AND strftime('%m', examination.date) IN ('01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12') AND patient.sex = 'male'
SELECT AVG(COUNT(DISTINCT examination.id)) AS average_tests_per_month FROM examination JOIN patient ON examination.id = patient.id JOIN laboratory ON examination.id = laboratory.id WHERE strftime('%Y', examination.date) = '1998' AND strftime('%m', examination.date) IN ('01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12') AND patient.sex = 'male'
SELECT AVG(COUNT(DISTINCT examination.id)) AS average_tests_per_month FROM examination JOIN patient ON examination.id = patient.id JOIN laboratory ON examination.id = laboratory.id WHERE strftime('%Y-%m-%d', examination.examination_date) BETWEEN '1998-01-01' AND '1998-12-31' AND patient.sex = 'male'
SELECT AVG(COUNT(DISTINCT p.id)) AS average_male_patients_tested FROM examination e JOIN patient p ON e.id = p.id JOIN laboratory l ON e.id = l.id WHERE e.examination_date BETWEEN '1998-01-01' AND '1998-12-31' AND p.sex = 'male' GROUP BY strftime('%m', e.examination_date)
SELECT AVG(COUNT(DISTINCT examination.id)) AS average_tests_per_month FROM examination JOIN patient ON examination.id = patient.id JOIN laboratory ON examination.id = laboratory.id WHERE strftime('%Y-%m-%d', examination.date) BETWEEN '1998-01-01' AND '1998-12-31' AND patient.sex = 'male'
SELECT AVG(COUNT(DISTINCT examination.id)) AS average_tests FROM examination JOIN patient ON examination.id = patient.id JOIN laboratory ON examination.id = laboratory.id WHERE strftime('%Y', examination.date) = '1998' AND strftime('%m', examination.date) = '12' AND strftime('%d', examination.date) = '31' AND patient.sex = 'male'","SELECT AVG(COUNT(DISTINCT examination.id)) AS average_tests_per_month FROM examination JOIN patient ON examination.id = patient.id JOIN laboratory ON examination.id = laboratory.id WHERE strftime('%Y-%m-%d', examination.examination_date) BETWEEN '1998-01-01' AND '1998-12-31' AND patient.sex = 'male'",0.0
194,451,How many cards available in paper have a positive starting maximum hand size?,card_games,simple,SELECT SUM(CASE WHEN availability = 'paper' AND hAND = '3' THEN 1 ELSE 0 END) FROM cards,7,"SELECT COUNT(*) FROM cards WHERE availability = 'paper' AND hand > 0
SELECT COUNT(*) FROM cards WHERE availability = 'paper' AND hand > 0
SELECT COUNT(*) FROM cards WHERE availability = 'paper' AND hand > 0
SELECT COUNT(*) FROM cards WHERE availability = 'paper' AND hand > 0
SELECT COUNT(*) FROM cards WHERE availability = 'paper' AND hand > 0
SELECT COUNT(*) FROM cards WHERE availability = 'paper' AND hand > 0
SELECT COUNT(*) FROM cards WHERE availability = 'paper' AND hand > 0",SELECT COUNT(*) FROM cards WHERE availability = 'paper' AND hand > 0,0.0
195,1431,List the last name of the members of the club that attended the women's soccer event.,student_club,moderate,SELECT T3.last_name FROM attendance AS T1 INNER JOIN event AS T2 ON T2.event_id = T1.link_to_event INNER JOIN member AS T3 ON T1.link_to_member = T3.member_id WHERE T2.event_name = 'Women''s Soccer' AND T3.position = 'Member',7,"SELECT member.last_name FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'women\'s soccer event'
SELECT member.last_name FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'women\'s soccer event'
SELECT member.last_name FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'women\'s soccer event'
SELECT member.last_name FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'women\'s soccer event'
SELECT member.last_name FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'women\'s soccer event'
SELECT member.last_name FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'women\'s soccer event'
SELECT member.last_name FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'women\'s soccer event'",SELECT member.last_name FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'women\'s soccer event',0.0
196,1191,What percentage of male patients who first presented to the hospital in 1981 were diagnosed with BEHCET?,thrombosis_prediction,challenging,"SELECT CAST(SUM(CASE WHEN Diagnosis = 'BEHCET' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM Patient WHERE STRFTIME('%Y', `First Date`) = '1981' AND SEX = 'M'",7,"SELECT (COUNT(p.id) * 100.0 / (SELECT COUNT(*) FROM patient WHERE sex = 'male' AND first_date LIKE '1981%')) AS percentage FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'male' AND p.first_date LIKE '1981%' AND l.diagnosis = 'BEHCET'
SELECT (COUNT(p.id) * 100.0 / (SELECT COUNT(*) FROM patient WHERE sex = 'Male' AND strftime('%Y', first_date) = '1981')) AS percentage FROM patient p JOIN examination e ON p.id = e.id WHERE p.sex = 'Male' AND strftime('%Y', p.first_date) = '1981' AND e.diagnosis = 'BEHCET'
SELECT (COUNT(p.id) * 100.0 / (SELECT COUNT(*) FROM patient WHERE sex = 'male' AND first_date LIKE '1981%')) AS percentage FROM patient p JOIN examination e ON p.id = e.id WHERE p.sex = 'male' AND p.first_date LIKE '1981%' AND e.diagnosis = 'BEHCET'
SELECT (COUNT(p.id) * 100.0 / (SELECT COUNT(*) FROM patient WHERE sex = 'male' AND strftime('%Y', first_date) = '1981')) AS percentage FROM patient p JOIN examination e ON p.id = e.id WHERE p.sex = 'male' AND strftime('%Y', p.first_date) = '1981' AND e.diagnosis = 'BEHCET'
SELECT (COUNT(p.id) * 100.0 / (SELECT COUNT(id) FROM patient WHERE sex = 'Male' AND first_date LIKE '1981%')) AS percentage FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'Male' AND p.first_date LIKE '1981%' AND l.diagnosis = 'BEHCET'
SELECT (COUNT(p.id) * 100.0 / (SELECT COUNT(*) FROM patient WHERE sex = 'male' AND first_date LIKE '1981%')) AS percentage FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'male' AND p.first_date LIKE '1981%' AND l.diagnosis = 'BEHCET'
SELECT (COUNT(p.id) * 100.0 / (SELECT COUNT(*) FROM patient WHERE sex = 'male' AND strftime('%Y', first_date) = '1981')) AS percentage FROM patient p JOIN examination e ON p.id = e.id WHERE p.sex = 'male' AND strftime('%Y', p.first_date) = '1981' AND e.diagnosis = 'BEHCET'",SELECT (COUNT(p.id) * 100.0 / (SELECT COUNT(*) FROM patient WHERE sex = 'male' AND first_date LIKE '1981%')) AS percentage FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'male' AND p.first_date LIKE '1981%' AND l.diagnosis = 'BEHCET',0.0
197,1112,"What was the chance creation crossing class for ""Hull City"" on 2010/2/22?",european_football_2,moderate,"SELECT t2.chanceCreationCrossingClass FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t1.team_long_name = 'Hull City' AND SUBSTR(t2.`date`, 1, 10) = '2010-02-22'",7,"SELECT team_attributes.chancecreationcrossing, team_attributes.chancecreationcrossingclass FROM team_attributes JOIN team ON team_attributes.team_api_id = team.team_api_id JOIN match ON team.team_api_id = match.home_team_api_id OR team.team_api_id = match.away_team_api_id WHERE team.team_long_name = ""Hull City"" AND match.date = ""2010/2/22""
SELECT team_attributes.chancecreationcrossing, team_attributes.chancecreationcrossingclass FROM team_attributes JOIN team ON team_attributes.team_api_id = team.team_api_id JOIN match ON team.team_api_id = match.home_team_api_id OR team.team_api_id = match.away_team_api_id WHERE team.team_long_name = ""Hull City"" AND match.date = ""2010/2/22""
SELECT team_attributes.chancecreationcrossingclass FROM team_attributes JOIN team ON team_attributes.team_api_id = team.team_api_id WHERE team.team_long_name = ""Hull City"" AND team_attributes.date = ""2010/2/22""
SELECT team_attributes.chancecreationcrossing, team_attributes.chancecreationcrossingclass FROM team_attributes JOIN team ON team_attributes.team_api_id = team.team_api_id JOIN match ON team.team_api_id = match.home_team_api_id OR team.team_api_id = match.away_team_api_id WHERE team.team_long_name = ""Hull City"" AND match.date = ""2010/2/22""
SELECT team_attributes.chancecreationcrossing, team_attributes.chancecreationcrossingclass FROM team_attributes JOIN team ON team_attributes.team_api_id = team.team_api_id JOIN match ON team.team_api_id = match.home_team_api_id OR team.team_api_id = match.away_team_api_id WHERE team.team_long_name = ""Hull City"" AND match.date = ""2010/2/22""
SELECT team_attributes.chancecreationcrossingclass FROM team_attributes JOIN team ON team_attributes.team_api_id = team.team_api_id WHERE team.team_long_name = ""Hull City"" AND team_attributes.date = ""2010/2/22""
SELECT team_attributes.chancecreationcrossingclass FROM team_attributes JOIN team ON team_attributes.team_api_id = team.team_api_id WHERE team.team_long_name = ""Hull City"" AND team_attributes.date = ""2010/2/22""","SELECT team_attributes.chancecreationcrossing, team_attributes.chancecreationcrossingclass FROM team_attributes JOIN team ON team_attributes.team_api_id = team.team_api_id JOIN match ON team.team_api_id = match.home_team_api_id OR team.team_api_id = match.away_team_api_id WHERE team.team_long_name = ""Hull City"" AND match.date = ""2010/2/22""",0.0
198,812,List down at least five full names of superheroes with blue eyes.,superhero,simple,SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Blue' LIMIT 5,7,"SELECT full_name FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'blue' LIMIT 5
SELECT full_name FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'blue' LIMIT 5
SELECT full_name FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'blue' LIMIT 5
SELECT full_name FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'blue' LIMIT 5
SELECT full_name FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'blue' LIMIT 5
SELECT full_name FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'blue' LIMIT 5
SELECT full_name FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'blue' LIMIT 5",SELECT full_name FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'blue' LIMIT 5,0.0
199,1183,"For the patient who was diagnosed SLE on 1997/1/27, what was his/her original diagnose when he/she came to the hospital for the first time?",thrombosis_prediction,challenging,SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.ID = ( SELECT ID FROM Examination WHERE `Examination Date` = '1997-01-27' AND Diagnosis = 'SLE' ) AND T2.`Examination Date` = T1.`First Date`,7,"SELECT patient.diagnosis FROM patient JOIN examination ON patient.id = examination.id WHERE patient.first_date = '1997-01-27' AND examination.diagnosis = 'SLE'
SELECT patient.diagnosis FROM patient JOIN examination ON patient.id = examination.id WHERE patient.first_date = '1997-01-27' AND examination.diagnosis = 'SLE'
SELECT patient.diagnosis FROM patient JOIN examination ON patient.id = examination.id WHERE patient.first_date = '1997-01-27' AND examination.diagnosis = 'SLE'
SELECT patient.diagnosis FROM patient JOIN examination ON patient.id = examination.id WHERE patient.first_date = '1997-01-27' AND examination.diagnosis = 'SLE'
SELECT patient.diagnosis FROM patient JOIN examination ON patient.id = examination.id WHERE patient.first_date = '1997-01-27' AND examination.diagnosis = 'SLE'
SELECT patient.diagnosis FROM patient JOIN examination ON patient.id = examination.id WHERE patient.diagnosis = 'SLE' AND examination.examination_date = '1997-01-27' AND examination.examination_date = patient.first_date
SELECT patient.diagnosis FROM patient JOIN examination ON patient.id = examination.id WHERE patient.first_date = '1997-01-27' AND examination.diagnosis = 'SLE'",SELECT patient.diagnosis FROM patient JOIN examination ON patient.id = examination.id WHERE patient.first_date = '1997-01-27' AND examination.diagnosis = 'SLE',0.0
200,1014,Please list the lap records for the circuits in Italy.,formula_1,challenging,"WITH fastest_lap_times AS (SELECT T1.raceId, T1.FastestLapTime, (CAST(SUBSTR(T1.FastestLapTime, 1, INSTR(T1.FastestLapTime, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, ':') + 1, INSTR(T1.FastestLapTime, '.') - INSTR(T1.FastestLapTime, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, '.') + 1) AS REAL) / 1000) as time_in_seconds FROM results AS T1 WHERE T1.FastestLapTime IS NOT NULL ) SELECT T1.FastestLapTime as lap_record FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN circuits AS T3 on T2.circuitId = T3.circuitId INNER JOIN (SELECT MIN(fastest_lap_times.time_in_seconds) as min_time_in_seconds FROM fastest_lap_times INNER JOIN races AS T2 on fastest_lap_times.raceId = T2.raceId INNER JOIN circuits AS T3 on T2.circuitId = T3.circuitId WHERE T3.country = 'Italy' ) AS T4 ON (CAST(SUBSTR(T1.FastestLapTime, 1, INSTR(T1.FastestLapTime, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, ':') + 1, INSTR(T1.FastestLapTime, '.') - INSTR(T1.FastestLapTime, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, '.') + 1) AS REAL) / 1000) = T4.min_time_in_seconds LIMIT 1",7,"SELECT laptimes.raceid, laptimes.driverid, laptimes.lap, laptimes.position, laptimes.time, laptimes.milliseconds FROM laptimes JOIN races ON laptimes.raceid = races.raceid JOIN circuits ON races.circuitid = circuits.circuitid WHERE circuits.country = 'Italy'
SELECT laptimes.raceid, laptimes.driverid, laptimes.lap, laptimes.position, laptimes.time, laptimes.milliseconds FROM laptimes JOIN races ON laptimes.raceid = races.raceid JOIN circuits ON races.circuitid = circuits.circuitid WHERE circuits.country = 'Italy'
SELECT laptimes.raceid, laptimes.driverid, laptimes.lap, laptimes.position, laptimes.time, laptimes.milliseconds FROM laptimes JOIN races ON laptimes.raceid = races.raceid JOIN circuits ON races.circuitid = circuits.circuitid WHERE circuits.country = 'Italy'
SELECT laptimes.raceid, laptimes.driverid, laptimes.lap, laptimes.position, laptimes.time, laptimes.milliseconds FROM laptimes JOIN races ON laptimes.raceid = races.raceid JOIN circuits ON races.circuitid = circuits.circuitid WHERE circuits.country = 'Italy' ORDER BY laptimes.time ASC
SELECT laptimes.raceid, laptimes.driverid, laptimes.lap, laptimes.position, laptimes.time, laptimes.milliseconds FROM laptimes JOIN races ON laptimes.raceid = races.raceid JOIN circuits ON races.circuitid = circuits.circuitid WHERE circuits.country = 'Italy'
SELECT laptimes.raceid, laptimes.driverid, laptimes.lap, laptimes.position, laptimes.time, laptimes.milliseconds FROM laptimes JOIN races ON laptimes.raceid = races.raceid JOIN circuits ON races.circuitid = circuits.circuitid WHERE circuits.country = 'Italy'
SELECT laptimes.raceid, laptimes.driverid, laptimes.lap, laptimes.position, laptimes.time, laptimes.milliseconds FROM laptimes JOIN races ON laptimes.raceid = races.raceid JOIN circuits ON races.circuitid = circuits.circuitid WHERE circuits.country = 'Italy'","SELECT laptimes.raceid, laptimes.driverid, laptimes.lap, laptimes.position, laptimes.time, laptimes.milliseconds FROM laptimes JOIN races ON laptimes.raceid = races.raceid JOIN circuits ON races.circuitid = circuits.circuitid WHERE circuits.country = 'Italy'",0.0
201,728,"Rank superheroes from Marvel Comics by their eye color popularity, starting with the most common color.",superhero,moderate,"SELECT colour.colour AS EyeColor, COUNT(superhero.id) AS Count, RANK() OVER (ORDER BY COUNT(superhero.id) DESC) AS PopularityRank FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics' GROUP BY colour.colour",7,"SELECT colour.colour, COUNT(*) as count FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') GROUP BY colour.colour ORDER BY count DESC
SELECT colour.colour, COUNT(*) as count FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') GROUP BY colour.colour ORDER BY count DESC
SELECT colour.colour, COUNT(*) as count FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') GROUP BY colour.colour ORDER BY count DESC
SELECT colour.colour, COUNT(superhero.id) as count FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics' GROUP BY colour.colour ORDER BY count DESC
SELECT colour.colour, COUNT(*) as count FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') GROUP BY colour.colour ORDER BY count DESC
SELECT colour.colour, COUNT(*) as count FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') GROUP BY colour.colour ORDER BY count DESC
SELECT colour.colour, COUNT(*) as count FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') GROUP BY colour.colour ORDER BY count DESC","SELECT colour.colour, COUNT(*) as count FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') GROUP BY colour.colour ORDER BY count DESC",0.0
202,1531,Who is the top spending customer and how much is the average price per single item purchased by this customer? What currency was being used?,debit_card_specializing,moderate,"SELECT T2.CustomerID, SUM(T2.Price / T2.Amount), T1.Currency FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.CustomerID = ( SELECT CustomerID FROM yearmonth ORDER BY Consumption DESC LIMIT 1 ) GROUP BY T2.CustomerID, T1.Currency",7,"SELECT customers.customerid, SUM(transactions_1k.amount) AS total_spent, AVG(transactions_1k.price) AS average_price, customers.currency FROM transactions_1k JOIN customers ON transactions_1k.customerid = customers.customerid GROUP BY transactions_1k.customerid ORDER BY total_spent DESC LIMIT 1
SELECT customers.customerid, SUM(transactions_1k.amount) AS total_spent, AVG(transactions_1k.price) AS average_price, customers.currency FROM transactions_1k JOIN customers ON transactions_1k.customerid = customers.customerid GROUP BY transactions_1k.customerid ORDER BY total_spent DESC LIMIT 1
SELECT customers.customerid, SUM(transactions_1k.amount) AS total_spent, AVG(transactions_1k.price) AS average_price, customers.currency FROM transactions_1k JOIN customers ON transactions_1k.customerid = customers.customerid GROUP BY transactions_1k.customerid ORDER BY total_spent DESC LIMIT 1
SELECT c.customerid, c.currency, AVG(t.price) AS average_price_per_item FROM transactions_1k t JOIN customers c ON t.customerid = c.customerid GROUP BY t.customerid ORDER BY SUM(t.amount) DESC LIMIT 1
SELECT c.customerid, c.currency, AVG(t.price) AS average_price_per_item FROM transactions_1k AS t JOIN customers AS c ON t.customerid = c.customerid GROUP BY t.customerid ORDER BY SUM(t.amount) DESC LIMIT 1
SELECT c.customerid, AVG(t.price) AS average_price, c.currency FROM transactions_1k AS t JOIN customers AS c ON t.customerid = c.customerid GROUP BY t.customerid ORDER BY SUM(t.amount) DESC LIMIT 1
SELECT c.customerid, c.currency, AVG(t.price) AS average_price_per_item FROM transactions_1k AS t JOIN customers AS c ON t.customerid = c.customerid GROUP BY t.customerid ORDER BY SUM(t.amount) DESC LIMIT 1","SELECT customers.customerid, SUM(transactions_1k.amount) AS total_spent, AVG(transactions_1k.price) AS average_price, customers.currency FROM transactions_1k JOIN customers ON transactions_1k.customerid = customers.customerid GROUP BY transactions_1k.customerid ORDER BY total_spent DESC LIMIT 1",0.0
203,1254,How many patients with a normal Ig A level came to the hospital after 1990/1/1?,thrombosis_prediction,moderate,"SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGA BETWEEN 80 AND 500 AND  strftime('%Y',  T1.`First Date`) > '1990'",7,"SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.iga = 'normal' AND examination.examination_date > '1990-01-01'
SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.iga = 'normal' AND examination.examination_date > '1990-01-01'
SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.iga = 'normal' AND examination.examination_date > '1990-01-01'
SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.iga = 'normal' AND examination.examination_date > '1990-01-01'
SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.iga = 'normal' AND examination.examination_date > '1990-01-01'
SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.iga = 'normal' AND examination.examination_date > '1990-01-01'
SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.iga = 'normal' AND examination.examination_date > '1990-01-01'",SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.iga = 'normal' AND examination.examination_date > '1990-01-01',0.0
204,880,"Paul di Resta was in the No. 853 race, what percent faster did he finish in the 853rd race than the next race for the fastest lap speed?",formula_1,challenging,"SELECT (SUM(IIF(T2.raceId = 853, T2.fastestLapSpeed, 0)) - SUM(IIF(T2.raceId = 854, T2.fastestLapSpeed, 0))) * 100 / SUM(IIF(T2.raceId = 853, T2.fastestLapSpeed, 0)) FROM drivers AS T1 INNER JOIN results AS T2 ON T2.driverId = T1.driverId WHERE T1.forename = 'Paul' AND T1.surname = 'di Resta'",7,"SELECT ((l1.fastestlapspeed - l2.fastestlapspeed) / l2.fastestlapspeed) * 100 AS percent_faster FROM laptimes l1 JOIN laptimes l2 ON l1.raceid = l2.raceid + 1 AND l1.driverid = l2.driverid JOIN results r ON l1.raceid = r.raceid AND l1.driverid = r.driverid JOIN drivers d ON l1.driverid = d.driverid WHERE r.raceid = 853 AND d.forename = 'Paul' AND d.surname = 'di Resta'
SELECT ((l1.fastestlapspeed - l2.fastestlapspeed) / l2.fastestlapspeed) * 100 AS percent_faster FROM laptimes l1 JOIN laptimes l2 ON l1.raceid = l2.raceid - 1 AND l1.driverid = l2.driverid JOIN results r ON l1.raceid = r.raceid AND l1.driverid = r.driverid JOIN drivers d ON l1.driverid = d.driverid WHERE r.raceid = 853 AND d.forename = 'Paul' AND d.surname = 'di Resta'
SELECT ((l1.fastestlapspeed - l2.fastestlapspeed) / l2.fastestlapspeed) * 100 AS percent_faster FROM laptimes l1 JOIN laptimes l2 ON l1.raceid = l2.raceid + 1 AND l1.driverid = l2.driverid JOIN results r ON l1.raceid = r.raceid AND l1.driverid = r.driverid JOIN drivers d ON l1.driverid = d.driverid WHERE r.raceid = 853 AND d.forename = 'Paul' AND d.surname = 'di Resta'
SELECT ((SELECT fastestlapspeed FROM laptimes WHERE raceid = 853 AND driverid = (SELECT driverid FROM results WHERE raceid = 853)) / (SELECT fastestlapspeed FROM laptimes WHERE raceid = (SELECT raceid FROM races WHERE round = (SELECT round FROM races WHERE raceid = 853) + 1) AND driverid = (SELECT driverid FROM results WHERE raceid = (SELECT raceid FROM races WHERE round = (SELECT round FROM races WHERE raceid = 853) + 1)))) * 100 AS percent_faster
SELECT ((l1.fastestlapspeed - l2.fastestlapspeed) / l2.fastestlapspeed) * 100 AS percent_faster FROM laptimes l1 JOIN laptimes l2 ON l1.raceid = l2.raceid + 1 AND l1.driverid = l2.driverid JOIN results r ON l1.raceid = r.raceid AND l1.driverid = r.driverid JOIN drivers d ON l1.driverid = d.driverid WHERE r.raceid = 853 AND d.forename = 'Paul' AND d.surname = 'di Resta'
SELECT ((l1.fastestlapspeed - l2.fastestlapspeed) / l2.fastestlapspeed) * 100 AS percent_faster FROM laptimes l1 JOIN laptimes l2 ON l1.raceid = l2.raceid + 1 AND l1.driverid = l2.driverid JOIN results r ON l1.raceid = r.raceid AND l1.driverid = r.driverid JOIN drivers d ON l1.driverid = d.driverid WHERE r.raceid = 853 AND d.forename = 'Paul' AND d.surname = 'di Resta'
SELECT ((l1.fastestlapspeed - l2.fastestlapspeed) / l2.fastestlapspeed) * 100 AS percent_faster FROM laptimes l1 JOIN laptimes l2 ON l1.raceid = l2.raceid - 1 AND l1.driverid = l2.driverid JOIN results r ON l1.raceid = r.raceid AND l1.driverid = r.driverid JOIN drivers d ON l1.driverid = d.driverid WHERE r.raceid = 853 AND d.forename = 'Paul' AND d.surname = 'di Resta'",SELECT ((l1.fastestlapspeed - l2.fastestlapspeed) / l2.fastestlapspeed) * 100 AS percent_faster FROM laptimes l1 JOIN laptimes l2 ON l1.raceid = l2.raceid + 1 AND l1.driverid = l2.driverid JOIN results r ON l1.raceid = r.raceid AND l1.driverid = r.driverid JOIN drivers d ON l1.driverid = d.driverid WHERE r.raceid = 853 AND d.forename = 'Paul' AND d.surname = 'di Resta',0.0
205,931,What was the fastest lap speed among all drivers in the 2009 Spanish Grand Prix?,formula_1,moderate,SELECT T2.fastestLapSpeed FROM races AS T1 INNER JOIN results AS T2 ON T2.raceId = T1.raceId WHERE T1.name = 'Spanish Grand Prix' AND T1.year = 2009 AND T2.fastestLapSpeed IS NOT NULL ORDER BY T2.fastestLapSpeed DESC LIMIT 1,7,"SELECT MAX(fastestlapspeed) FROM results JOIN races ON results.raceid = races.raceid WHERE races.year = 2009 AND races.name = 'Spanish Grand Prix'
SELECT MAX(fastestlapspeed) FROM results JOIN races ON results.raceid = races.raceid WHERE races.year = 2009 AND races.name = 'Spanish Grand Prix'
SELECT MAX(fastestlapspeed) AS FastestLapSpeed FROM results JOIN races ON results.raceid = races.raceid WHERE races.year = 2009 AND races.name = 'Spanish Grand Prix'
SELECT MAX(fastestlapspeed) FROM results JOIN races ON results.raceid = races.raceid WHERE races.year = 2009 AND races.name = 'Spanish Grand Prix'
SELECT MAX(fastestlapspeed) FROM results JOIN races ON results.raceid = races.raceid WHERE races.year = 2009 AND races.name = 'Spanish Grand Prix'
SELECT MAX(fastestlapspeed) FROM results JOIN races ON results.raceid = races.raceid WHERE races.year = 2009 AND races.name = 'Spanish Grand Prix'
SELECT MAX(fastestlapspeed) AS FastestLapSpeed FROM results JOIN races ON results.raceid = races.raceid WHERE races.year = 2009 AND races.name = 'Spanish Grand Prix'",SELECT MAX(fastestlapspeed) FROM results JOIN races ON results.raceid = races.raceid WHERE races.year = 2009 AND races.name = 'Spanish Grand Prix',1.0
206,1204,How long did it take after patient number 821298 arrived at the hospital for the first time before her evaluation began?,thrombosis_prediction,simple,"SELECT STRFTIME('%d', T3.`Examination Date`) - STRFTIME('%d', T1.`First Date`) FROM Patient AS T1 INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T1.ID = 821298",7,"SELECT ""examination"".""examination date"" - ""patient"".""first date"" FROM ""patient"" JOIN ""examination"" ON ""patient"".""id"" = ""examination"".""id"" WHERE ""patient"".""id"" = 821298
SELECT ""examination"".""examination date"" - ""patient"".""first date"" FROM ""patient"" JOIN ""examination"" ON ""patient"".""id"" = ""examination"".""id"" WHERE ""patient"".""id"" = 821298
SELECT ""examination"".""examination date"" - ""patient"".""first date"" FROM ""patient"" JOIN ""examination"" ON ""patient"".""id"" = ""examination"".""id"" WHERE ""patient"".""id"" = 821298
SELECT ""examination"".""examination date"" - ""patient"".""first date"" FROM ""patient"" JOIN ""examination"" ON ""patient"".""id"" = ""examination"".""id"" WHERE ""patient"".""id"" = 821298
SELECT ""examination"".""examination date"" - ""patient"".""first date"" FROM ""patient"" JOIN ""examination"" ON ""patient"".""id"" = ""examination"".""id"" WHERE ""patient"".""id"" = 821298
SELECT ""examination"".""examination date"" - ""patient"".""first date"" FROM ""patient"" JOIN ""examination"" ON ""patient"".""id"" = ""examination"".""id"" WHERE ""patient"".""id"" = 821298
SELECT ""examination"".""examination date"" - ""patient"".""first date"" FROM ""patient"" JOIN ""examination"" ON ""patient"".""id"" = ""examination"".""id"" WHERE ""patient"".""id"" = 821298","SELECT ""examination"".""examination date"" - ""patient"".""first date"" FROM ""patient"" JOIN ""examination"" ON ""patient"".""id"" = ""examination"".""id"" WHERE ""patient"".""id"" = 821298",0.0
207,724,Please list the superhero names of all the superheroes that have blue eyes and blond hair.,superhero,challenging,SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Blue' AND T3.colour = 'Blond',7,"SELECT superhero_name FROM superhero JOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id JOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id WHERE eye_colour.colour = 'blue' AND hair_colour.colour = 'blond'
SELECT superhero_name FROM superhero JOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id JOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id WHERE eye_colour.colour = 'blue' AND hair_colour.colour = 'blond'
SELECT superhero_name FROM superhero JOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id JOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id WHERE eye_colour.colour = 'blue' AND hair_colour.colour = 'blond'
SELECT superhero_name FROM superhero JOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id JOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id WHERE eye_colour.colour = 'blue' AND hair_colour.colour = 'blond'
SELECT superhero_name FROM superhero JOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id JOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id WHERE eye_colour.colour = 'blue' AND hair_colour.colour = 'blond'
SELECT superhero_name FROM superhero JOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id JOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id WHERE eye_colour.colour = 'blue' AND hair_colour.colour = 'blond'
SELECT superhero_name FROM superhero JOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id JOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id WHERE eye_colour.colour = 'blue' AND hair_colour.colour = 'blond'",SELECT superhero_name FROM superhero JOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id JOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id WHERE eye_colour.colour = 'blue' AND hair_colour.colour = 'blond',0.0
208,1461,List the last names of students under the Elementary Education major and include their phone numbers.,student_club,simple,"SELECT T1.last_name, T1.phone FROM member AS T1 INNER JOIN major AS T2 ON T2.major_id = T1.link_to_major WHERE T2.major_name = 'Elementary Education'",7,"SELECT last_name, phone FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Elementary Education')
SELECT last_name, phone FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Elementary Education')
SELECT last_name, phone FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Elementary Education')
SELECT last_name, phone FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Elementary Education')
SELECT last_name, phone FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Elementary Education')
SELECT last_name, phone FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Elementary Education')
SELECT last_name, phone FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Elementary Education')","SELECT last_name, phone FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Elementary Education')",1.0
209,1139,"What was the final score for the match on September 24, 2008, in the Belgian Jupiler League between the home team and the away team?",european_football_2,challenging,"SELECT t2.home_team_goal, t2.away_team_goal FROM League AS t1 INNER JOIN Match AS t2 ON t1.id = t2.league_id WHERE t1.name = 'Belgium Jupiler League' AND t2.`date` LIKE '2008-09-24%'",7,"SELECT home_team_goal, away_team_goal FROM match JOIN league ON match.league_id = league.id JOIN country ON league.country_id = country.id WHERE match.date = '2008-09-24' AND country.name = 'Belgium' AND league.name = 'Jupiler League'
SELECT home_team_goal, away_team_goal FROM match JOIN league ON match.league_id = league.id JOIN country ON league.country_id = country.id WHERE match.date = '2008-09-24' AND country.name = 'Belgium' AND league.name = 'Jupiler League'
SELECT home_team_goal, away_team_goal FROM match JOIN league ON match.league_id = league.id JOIN country ON league.country_id = country.id WHERE match.date = '2008-09-24' AND country.name = 'Belgium' AND league.name = 'Jupiler League'
SELECT home_team_goal, away_team_goal FROM match JOIN league ON match.league_id = league.id JOIN country ON league.country_id = country.id WHERE match.date = '2008-09-24' AND country.name = 'Belgium' AND league.name = 'Jupiler League'
SELECT home_team_goal, away_team_goal FROM match JOIN league ON match.league_id = league.id JOIN country ON league.country_id = country.id WHERE match.date = '2008-09-24' AND country.name = 'Belgium' AND league.name = 'Jupiler League'
SELECT home_team_goal, away_team_goal FROM match JOIN league ON match.league_id = league.id JOIN country ON league.country_id = country.id WHERE match.date = '2008-09-24' AND country.name = 'Belgium' AND league.name = 'Jupiler League'
SELECT home_team_goal, away_team_goal FROM match JOIN league ON match.league_id = league.id JOIN country ON league.country_id = country.id WHERE match.date = '2008-09-24' AND country.name = 'Belgium' AND league.name = 'Jupiler League'","SELECT home_team_goal, away_team_goal FROM match JOIN league ON match.league_id = league.id JOIN country ON league.country_id = country.id WHERE match.date = '2008-09-24' AND country.name = 'Belgium' AND league.name = 'Jupiler League'",0.0
210,968,What is reference name of Robert Kubica?,formula_1,simple,SELECT driverRef FROM drivers WHERE forename = 'Robert' AND surname = 'Kubica',7,"SELECT reference FROM drivers WHERE forename = 'Robert' AND surname = 'Kubica'
SELECT drivers.driverref FROM drivers WHERE drivers.forename = 'Robert' AND drivers.surname = 'Kubica'
SELECT reference FROM drivers WHERE forename = 'Robert' AND surname = 'Kubica'
SELECT reference FROM drivers WHERE forename = 'Robert' AND surname = 'Kubica'
SELECT reference FROM drivers WHERE forename = 'Robert' AND surname = 'Kubica'
SELECT drivers.driverref FROM drivers WHERE drivers.forename = 'Robert' AND drivers.surname = 'Kubica'
SELECT drivers.driverref FROM drivers WHERE drivers.forename = 'Robert' AND drivers.surname = 'Kubica'",SELECT reference FROM drivers WHERE forename = 'Robert' AND surname = 'Kubica',0.0
211,962,"From 2000 to 2005, what percentage of drivers who were born before 1985 and the lap numbers were over 50?",formula_1,challenging,"SELECT CAST(SUM(IIF(STRFTIME('%Y', T3.dob) < '1985' AND T1.laps > 50, 1, 0)) AS REAL) * 100 / COUNT(*) FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN drivers AS T3 on T1.driverId = T3.driverId WHERE T2.year BETWEEN 2000 AND 2005",7,"SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM results WHERE raceid IN (SELECT raceid FROM races WHERE year BETWEEN 2000 AND 2005) AND driverid IN (SELECT driverid FROM drivers WHERE dob < '1985-01-01') AND laps > 50) AS percentage
SELECT COUNT(DISTINCT results.driverid) * 100.0 / (SELECT COUNT(DISTINCT drivers.driverid) FROM drivers WHERE drivers.dob < '1985-01-01') AS percentage FROM results JOIN races ON results.raceid = races.raceid JOIN drivers ON results.driverid = drivers.driverid JOIN laptimes ON results.raceid = laptimes.raceid AND results.driverid = laptimes.driverid WHERE races.year BETWEEN 2000 AND 2005 AND laptimes.lap > 50 AND drivers.dob < '1985-01-01'
SELECT COUNT(DISTINCT results.driverid) * 100.0 / (SELECT COUNT(DISTINCT drivers.driverid) FROM drivers WHERE drivers.dob < '1985-01-01') AS percentage FROM results JOIN races ON results.raceid = races.raceid JOIN drivers ON results.driverid = drivers.driverid JOIN laptimes ON results.raceid = laptimes.raceid AND results.driverid = laptimes.driverid WHERE races.year BETWEEN 2000 AND 2005 AND laptimes.lap > 50 AND drivers.dob < '1985-01-01'
SELECT COUNT(DISTINCT results.driverid) * 100.0 / (SELECT COUNT(DISTINCT drivers.driverid) FROM drivers WHERE drivers.dob < '1985-01-01') AS percentage FROM results JOIN races ON results.raceid = races.raceid JOIN drivers ON results.driverid = drivers.driverid JOIN laptimes ON results.raceid = laptimes.raceid AND results.driverid = laptimes.driverid WHERE races.year BETWEEN 2000 AND 2005 AND laptimes.lap > 50 AND drivers.dob < '1985-01-01'
SELECT (COUNT(DISTINCT results.driverid) * 100.0 / (SELECT COUNT(DISTINCT drivers.driverid) FROM drivers WHERE drivers.dob < '1985-01-01')) AS percentage FROM results JOIN races ON results.raceid = races.raceid JOIN drivers ON results.driverid = drivers.driverid JOIN laptimes ON results.raceid = laptimes.raceid AND results.driverid = laptimes.driverid WHERE races.year BETWEEN 2000 AND 2005 AND drivers.dob < '1985-01-01' AND laptimes.lap > 50
SELECT COUNT(DISTINCT results.driverid) * 100.0 / (SELECT COUNT(DISTINCT drivers.driverid) FROM drivers WHERE drivers.dob < '1985-01-01') AS percentage FROM results JOIN races ON results.raceid = races.raceid JOIN drivers ON results.driverid = drivers.driverid JOIN laptimes ON results.raceid = laptimes.raceid AND results.driverid = laptimes.driverid WHERE races.year BETWEEN 2000 AND 2005 AND laptimes.lap > 50 AND drivers.dob < '1985-01-01'
SELECT (COUNT(DISTINCT results.driverid) * 100.0 / (SELECT COUNT(DISTINCT drivers.driverid) FROM drivers WHERE drivers.dob < '1985-01-01')) AS percentage FROM results JOIN races ON results.raceid = races.raceid JOIN drivers ON results.driverid = drivers.driverid JOIN laptimes ON results.raceid = laptimes.raceid AND results.driverid = laptimes.driverid WHERE races.year BETWEEN 2000 AND 2005 AND drivers.dob < '1985-01-01' AND laptimes.lap > 50",SELECT COUNT(DISTINCT results.driverid) * 100.0 / (SELECT COUNT(DISTINCT drivers.driverid) FROM drivers WHERE drivers.dob < '1985-01-01') AS percentage FROM results JOIN races ON results.raceid = races.raceid JOIN drivers ON results.driverid = drivers.driverid JOIN laptimes ON results.raceid = laptimes.raceid AND results.driverid = laptimes.driverid WHERE races.year BETWEEN 2000 AND 2005 AND laptimes.lap > 50 AND drivers.dob < '1985-01-01',0.0
212,1102,"For the players who had a 77 points overall rating on 2016/6/23, who was the oldest? Give the name of the player.",european_football_2,moderate,"SELECT t1.player_name FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE SUBSTR(t2.`date`, 1, 10) = '2016-06-23' AND t2.overall_rating = 77 ORDER BY t1.birthday ASC LIMIT 1",7,"SELECT player.player_name FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.overall_rating = 77 AND player_attributes.date = '2016/6/23' ORDER BY player.birthday ASC LIMIT 1
SELECT player.player_name FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.overall_rating = 77 AND player_attributes.date = '2016/6/23' ORDER BY player.birthday ASC LIMIT 1
SELECT player.player_name FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.overall_rating = 77 AND player_attributes.date = '2016/6/23' ORDER BY player.birthday ASC LIMIT 1
SELECT player.player_name FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.overall_rating = 77 AND player_attributes.date = '2016/6/23' ORDER BY player.birthday ASC LIMIT 1
SELECT player.player_name FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.overall_rating = 77 AND player_attributes.date = '2016/6/23' ORDER BY player.birthday ASC LIMIT 1
SELECT player.player_name FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.overall_rating = 77 AND player_attributes.date = '2016/6/23' ORDER BY player.birthday ASC LIMIT 1
SELECT player.player_name FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.overall_rating = 77 AND player_attributes.date = '2016/6/23' ORDER BY player.birthday ASC LIMIT 1",SELECT player.player_name FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.overall_rating = 77 AND player_attributes.date = '2016/6/23' ORDER BY player.birthday ASC LIMIT 1,0.0
213,1025,Give the name of the league had the most goals in the 2016 season?,european_football_2,moderate,SELECT t2.name FROM Match AS t1 INNER JOIN League AS t2 ON t1.league_id = t2.id WHERE t1.season = '2015/2016' GROUP BY t2.name ORDER BY SUM(t1.home_team_goal + t1.away_team_goal) DESC LIMIT 1,7,"SELECT league.name FROM match JOIN league ON match.league_id = league.id WHERE match.season = '2016' GROUP BY league.name ORDER BY SUM(match.home_team_goal + match.away_team_goal) DESC LIMIT 1
SELECT league.name FROM match JOIN league ON match.league_id = league.id WHERE match.season = '2016' GROUP BY league.name ORDER BY SUM(match.home_team_goal + match.away_team_goal) DESC LIMIT 1
SELECT league.name FROM league JOIN match ON league.id = match.league_id WHERE match.season = '2016' GROUP BY league.name ORDER BY SUM(match.home_team_goal + match.away_team_goal) DESC LIMIT 1
SELECT league.name FROM match JOIN league ON match.league_id = league.id WHERE match.season = '2016' GROUP BY league.name ORDER BY SUM(match.home_team_goal + match.away_team_goal) DESC LIMIT 1
SELECT league.name FROM match JOIN league ON match.league_id = league.id WHERE match.season = '2016' GROUP BY league.name ORDER BY SUM(match.home_team_goal + match.away_team_goal) DESC LIMIT 1
SELECT league.name FROM match JOIN league ON match.league_id = league.id WHERE match.season = '2016' GROUP BY league.name ORDER BY SUM(match.home_team_goal + match.away_team_goal) DESC LIMIT 1
SELECT league.name FROM match JOIN league ON match.league_id = league.id WHERE match.season = '2016' GROUP BY league.name ORDER BY SUM(match.home_team_goal + match.away_team_goal) DESC LIMIT 1",SELECT league.name FROM match JOIN league ON match.league_id = league.id WHERE match.season = '2016' GROUP BY league.name ORDER BY SUM(match.home_team_goal + match.away_team_goal) DESC LIMIT 1,0.0
214,234,How many bonds which involved atom 12 does molecule TR009 have?,toxicology,moderate,SELECT COUNT(T2.bond_id) FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.molecule_id = 'TR009' AND T2.atom_id = T1.molecule_id || '_1' AND T2.atom_id2 = T1.molecule_id || '_2',7,"SELECT COUNT(*) FROM bond JOIN connected ON bond.bond_id = connected.bond_id WHERE connected.atom_id = 12 OR connected.atom_id2 = 12 AND bond.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR009')
SELECT COUNT(*) FROM bond JOIN connected ON bond.bond_id = connected.bond_id WHERE connected.atom_id = 12 OR connected.atom_id2 = 12 AND bond.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR009')
SELECT COUNT(*) FROM bond JOIN connected ON bond.bond_id = connected.bond_id WHERE connected.atom_id = 12 OR connected.atom_id2 = 12 AND bond.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR009')
SELECT COUNT(*) FROM bond JOIN connected ON bond.bond_id = connected.bond_id WHERE connected.atom_id = 12 OR connected.atom_id2 = 12 AND bond.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR009')
SELECT COUNT(*) FROM bond JOIN connected ON bond.bond_id = connected.bond_id WHERE connected.atom_id = 12 OR connected.atom_id2 = 12 AND bond.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR009')
SELECT COUNT(*) FROM bond JOIN connected ON bond.bond_id = connected.bond_id WHERE connected.atom_id = 12 OR connected.atom_id2 = 12 AND bond.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR009')
SELECT COUNT(*) FROM bond JOIN connected ON bond.bond_id = connected.bond_id WHERE connected.atom_id = 12 OR connected.atom_id2 = 12 AND bond.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR009')",SELECT COUNT(*) FROM bond JOIN connected ON bond.bond_id = connected.bond_id WHERE connected.atom_id = 12 OR connected.atom_id2 = 12 AND bond.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR009'),0.0
215,1460,"Write the full name of the member who spent money for water, veggie tray and supplies and include the cost of it.",student_club,challenging,"SELECT T2.first_name, T2.last_name, T1.cost FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.expense_description = 'Water, Veggie tray, supplies'",7,"SELECT member.first_name || ' ' || member.last_name AS full_name, SUM(expense.cost) AS total_cost FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN expense ON attendance.link_to_event = expense.link_to_budget JOIN budget ON expense.link_to_budget = budget.budget_id WHERE budget.category IN ('water', 'veggie tray', 'supplies') GROUP BY member.member_id
SELECT member.first_name || ' ' || member.last_name AS full_name, SUM(expense.cost) AS total_cost FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN expense ON attendance.link_to_event = expense.link_to_budget JOIN budget ON expense.link_to_budget = budget.budget_id WHERE budget.category IN ('water', 'veggie tray', 'supplies') GROUP BY member.member_id
SELECT member.first_name || ' ' || member.last_name AS full_name, SUM(expense.cost) AS total_cost FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN expense ON attendance.link_to_event = expense.link_to_budget JOIN budget ON expense.link_to_budget = budget.budget_id JOIN event ON budget.link_to_event = event.event_id WHERE expense.expense_description IN ('water', 'veggie tray', 'supplies') GROUP BY member.member_id
SELECT member.first_name || ' ' || member.last_name AS full_name, SUM(expense.cost) AS total_cost FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN expense ON attendance.link_to_event = expense.link_to_budget JOIN budget ON expense.link_to_budget = budget.budget_id JOIN event ON budget.link_to_event = event.event_id WHERE expense.expense_description IN ('water', 'veggie tray', 'supplies') GROUP BY member.member_id
SELECT member.first_name || ' ' || member.last_name AS full_name, SUM(expense.cost) AS total_cost FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN expense ON attendance.link_to_event = expense.link_to_budget JOIN budget ON expense.link_to_budget = budget.budget_id WHERE budget.category IN ('water', 'veggie tray', 'supplies') GROUP BY member.member_id
SELECT member.first_name || ' ' || member.last_name AS full_name, SUM(expense.cost) AS total_cost FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN expense ON attendance.link_to_event = expense.link_to_budget JOIN budget ON expense.link_to_budget = budget.budget_id JOIN event ON budget.link_to_event = event.event_id WHERE expense.expense_description IN ('water', 'veggie tray', 'supplies') GROUP BY member.member_id
SELECT member.first_name || ' ' || member.last_name AS full_name, SUM(expense.cost) AS total_cost FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN expense ON attendance.link_to_event = expense.link_to_budget JOIN budget ON expense.link_to_budget = budget.budget_id JOIN event ON budget.link_to_event = event.event_id WHERE expense.expense_description IN ('water', 'veggie tray', 'supplies') GROUP BY member.member_id","SELECT member.first_name || ' ' || member.last_name AS full_name, SUM(expense.cost) AS total_cost FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN expense ON attendance.link_to_event = expense.link_to_budget JOIN budget ON expense.link_to_budget = budget.budget_id JOIN event ON budget.link_to_event = event.event_id WHERE expense.expense_description IN ('water', 'veggie tray', 'supplies') GROUP BY member.member_id",0.0
216,1258,How many patients with a normal Rhuematoid Factor has a positive measure of degree of coagulation?,thrombosis_prediction,moderate,SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T3.ID = T2.ID WHERE (T2.RA = '-' OR T2.RA = '+-') AND T3.KCT = '+',7,"SELECT COUNT(*) FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.rf = 'normal' AND laboratory.pt IS NOT NULL
SELECT COUNT(*) FROM laboratory JOIN patient ON laboratory.id = patient.id WHERE laboratory.rf = 'normal' AND laboratory.pt IS NOT NULL
SELECT COUNT(*) FROM laboratory JOIN patient ON laboratory.id = patient.id WHERE laboratory.rf = 'normal' AND laboratory.pt IS NOT NULL
SELECT COUNT(*) FROM laboratory JOIN patient ON laboratory.id = patient.id WHERE laboratory.rf = 'normal' AND laboratory.pt > 0
SELECT COUNT(*) FROM laboratory JOIN patient ON laboratory.id = patient.id WHERE laboratory.rf = 'normal' AND laboratory.pt > 0
SELECT COUNT(*) FROM laboratory JOIN patient ON laboratory.id = patient.id WHERE laboratory.rf = 'normal' AND laboratory.pt > 0
SELECT COUNT(*) FROM laboratory JOIN patient ON laboratory.id = patient.id WHERE laboratory.rf = 'normal' AND laboratory.pt > 0",SELECT COUNT(*) FROM laboratory JOIN patient ON laboratory.id = patient.id WHERE laboratory.rf = 'normal' AND laboratory.pt > 0,0.0
217,1185,"For the patient who was born on 1959/2/18, what is the decrease rate for his/her total cholesterol from November to December in 1981?",thrombosis_prediction,challenging,SELECT CAST((SUM(CASE WHEN T2.Date LIKE '1981-11-%' THEN T2.`T-CHO` ELSE 0 END) - SUM(CASE WHEN T2.Date LIKE '1981-12-%' THEN T2.`T-CHO` ELSE 0 END)) AS REAL) / SUM(CASE WHEN T2.Date LIKE '1981-12-%' THEN T2.`T-CHO` ELSE 0 END) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday = '1959-02-18',7,"NULL
NULL
NULL
NULL
NULL
SELECT t_cho             FROM laboratory             WHERE id = (SELECT id FROM patient WHERE birthday = '1959-02-18')             AND date BETWEEN '1981-11-01' AND '1981-11-30'         ) -         (             SELECT t_cho             FROM laboratory             WHERE id = (SELECT id FROM patient WHERE birthday = '1959-02-18')             AND date BETWEEN '1981-12-01' AND '1981-12-31'         )     ) /     (         SELECT t_cho         FROM laboratory         WHERE id = (SELECT id FROM patient WHERE birthday = '1959-02-18')         AND date BETWEEN '1981-11-01' AND '1981-11-30'     ) AS decrease_rate
NULL",,0.0
218,37,"What is the complete address of the school with the lowest excellence rate? Indicate the Street, City, Zip and State.",california_schools,moderate,"SELECT T2.Street, T2.City, T2.State, T2.Zip FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY CAST(T1.NumGE1500 AS REAL) / T1.NumTstTakr ASC LIMIT 1",7,"SELECT street, city, zip, state FROM schools WHERE cdscode = (     SELECT cdscode     FROM satscores     ORDER BY ""percent (%) eligible frpm (k-12)"" ASC     LIMIT 1 )
SELECT street, city, zip, state FROM schools WHERE cdscode = (     SELECT cdscode     FROM satscores     ORDER BY ""percent (%) eligible frpm (k-12)"" ASC     LIMIT 1 )
SELECT street, city, zip, state FROM schools WHERE cdscode = (     SELECT cdscode     FROM satscores     ORDER BY ""percent (%) eligible frpm (k-12)"" ASC     LIMIT 1 )
SELECT street, city, zip, state FROM schools WHERE cdscode = (     SELECT cdscode     FROM satscores     ORDER BY ""percent (%) eligible frpm (k-12)"" ASC     LIMIT 1 )
SELECT street, city, zip, state FROM schools WHERE cdscode = (     SELECT cdscode     FROM satscores     ORDER BY ""percent (%) eligible frpm (k-12)"" ASC     LIMIT 1 )
SELECT street, city, zip, state FROM schools WHERE cdscode = (     SELECT cdscode     FROM satscores     ORDER BY ""percent (%) eligible frpm (k-12)"" ASC     LIMIT 1 )
SELECT street, city, zip, state FROM schools WHERE cdscode = (     SELECT cdscode     FROM satscores     ORDER BY ""percent (%) eligible frpm (k-12)"" ASC     LIMIT 1 )","SELECT street, city, zip, state FROM schools WHERE cdscode = (     SELECT cdscode     FROM satscores     ORDER BY ""percent (%) eligible frpm (k-12)"" ASC     LIMIT 1 )",0.0
219,285,Name chemical elements that form a bond TR001_10_11.,toxicology,challenging,SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR001_10_11',7,"SELECT element FROM TR001_10_11.atom JOIN connected ON TR001_10_11.atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond_type IS NOT NULL
SELECT element FROM TR001_10_11.atom JOIN connected ON TR001_10_11.atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond_type IS NOT NULL
SELECT element FROM TR001_10_11.atom JOIN connected ON TR001_10_11.atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond_type IS NOT NULL
SELECT element FROM TR001_10_11.atom JOIN connected ON TR001_10_11.atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE molecule_id IN (     SELECT molecule_id     FROM TR001_10_11.molecule     WHERE label = 'bond' )
SELECT element FROM TR001_10_11.atom JOIN connected ON TR001_10_11.atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond_type IS NOT NULL
SELECT element FROM TR001_10_11.atom JOIN connected ON TR001_10_11.atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond_type IS NOT NULL
SELECT element FROM TR001_10_11.atom JOIN connected ON TR001_10_11.atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond_type IS NOT NULL",SELECT element FROM TR001_10_11.atom JOIN connected ON TR001_10_11.atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond_type IS NOT NULL,0.0
220,302,Name the elements that comprise the atoms of bond TR001_2_4.,toxicology,challenging,SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_2_4',7,"SELECT element FROM TR001_2_4.atom WHERE atom_id IN (     SELECT atom_id     FROM connected     WHERE bond_id = (         SELECT bond_id         FROM bond         WHERE bond_type = 'TR001_2_4'     ) )
SELECT element FROM TR001_2_4.atom WHERE atom_id IN (     SELECT atom_id     FROM connected     WHERE bond_id = (         SELECT bond_id         FROM bond         WHERE bond_type = 'TR001_2_4'     ) )
SELECT element FROM TR001_2_4.atom JOIN connected ON TR001_2_4.atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_id = 'TR001_2_4'
SELECT element FROM TR001_2_4.atom WHERE atom_id IN (     SELECT atom_id     FROM connected     WHERE bond_id = (         SELECT bond_id         FROM bond         WHERE bond_type = 'TR001_2_4'     ) )
SELECT element FROM TR001_2_4.atom WHERE atom_id IN (     SELECT atom_id     FROM connected     WHERE bond_id = (         SELECT bond_id         FROM bond         WHERE bond_type = 'TR001_2_4'     ) )
SELECT element FROM TR001_2_4.atom WHERE atom_id IN (     SELECT atom_id     FROM connected     WHERE bond_id = (         SELECT bond_id         FROM bond         WHERE bond_type = 'TR001_2_4'     ) )
SELECT element FROM TR001_2_4.atom JOIN connected ON TR001_2_4.atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_id = 'TR001_2_4'",SELECT element FROM TR001_2_4.atom WHERE atom_id IN (     SELECT atom_id     FROM connected     WHERE bond_id = (         SELECT bond_id         FROM bond         WHERE bond_type = 'TR001_2_4'     ) ),0.0
221,1514,What kind of currency did the customer paid at 16:25:00 in 2012/8/24?,debit_card_specializing,simple,SELECT DISTINCT T3.Currency FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN customers AS T3 ON T1.CustomerID = T3.CustomerID WHERE T1.Date = '2012-08-24' AND T1.Time = '16:25:00',7,"SELECT currency FROM transactions_1k JOIN customers ON transactions_1k.customerid = customers.customerid WHERE transactions_1k.time = '16:25:00' AND transactions_1k.date = '2012-08-24'
SELECT currency FROM transactions_1k JOIN customers ON transactions_1k.customerid = customers.customerid WHERE transactions_1k.time = '16:25:00' AND transactions_1k.date = '2012-08-24'
SELECT currency FROM transactions_1k JOIN customers ON transactions_1k.customerid = customers.customerid WHERE transactions_1k.time = '16:25:00' AND transactions_1k.date = '2012/8/24'
SELECT currency FROM transactions_1k JOIN customers ON transactions_1k.customerid = customers.customerid WHERE transactions_1k.time = '16:25:00' AND transactions_1k.date = '2012-08-24'
SELECT currency FROM transactions_1k JOIN customers ON transactions_1k.customerid = customers.customerid WHERE transactions_1k.time = '16:25:00' AND transactions_1k.date = '2012-08-24'
SELECT currency FROM transactions_1k JOIN customers ON transactions_1k.customerid = customers.customerid WHERE transactions_1k.time = '16:25:00' AND transactions_1k.date = '2012-08-24'
SELECT currency FROM transactions_1k JOIN customers ON transactions_1k.customerid = customers.customerid WHERE transactions_1k.time = '16:25:00' AND transactions_1k.date = '2012-08-24'",SELECT currency FROM transactions_1k JOIN customers ON transactions_1k.customerid = customers.customerid WHERE transactions_1k.time = '16:25:00' AND transactions_1k.date = '2012-08-24',1.0
222,734,What is the publisher's name of Blue Beetle II?,superhero,simple,SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name = 'Blue Beetle II',7,"SELECT publisher_name FROM publisher JOIN superhero ON publisher.id = superhero.publisher_id WHERE superhero.superhero_name = 'Blue Beetle II'
SELECT publisher_name FROM publisher JOIN superhero ON publisher.id = superhero.publisher_id WHERE superhero.superhero_name = 'Blue Beetle II'
SELECT publisher_name FROM publisher JOIN superhero ON publisher.id = superhero.publisher_id WHERE superhero.superhero_name = 'Blue Beetle II'
SELECT publisher_name FROM publisher JOIN superhero ON publisher.id = superhero.publisher_id WHERE superhero.superhero_name = 'Blue Beetle II'
SELECT publisher_name FROM publisher JOIN superhero ON publisher.id = superhero.publisher_id WHERE superhero.superhero_name = 'Blue Beetle II'
SELECT publisher_name FROM publisher JOIN superhero ON publisher.id = superhero.publisher_id WHERE superhero.superhero_name = 'Blue Beetle II'
SELECT publisher_name FROM publisher JOIN superhero ON publisher.id = superhero.publisher_id WHERE superhero.superhero_name = 'Blue Beetle II'",SELECT publisher_name FROM publisher JOIN superhero ON publisher.id = superhero.publisher_id WHERE superhero.superhero_name = 'Blue Beetle II',1.0
223,1260,Please list the ID of the patient whose RF is normal and who is older than 60.,thrombosis_prediction,simple,"SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RF < 20 AND STRFTIME('%Y', DATE('now')) - STRFTIME('%Y', T1.Birthday) > 60",7,"SELECT p.id FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.rf = 'normal' AND (julianday('now') - julianday(p.birthday))/365.25 > 60
SELECT p.id FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.rf = 'normal' AND (julianday('now') - julianday(p.birthday))/365.25 > 60
SELECT p.id FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.rf = 'normal' AND (julianday('now') - julianday(p.birthday))/365.25 > 60
SELECT p.id FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.rf = 'normal' AND (julianday('now') - julianday(p.birthday))/365.25 > 60
SELECT p.id FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.rf = 'normal' AND (julianday('now') - julianday(p.birthday))/365.25 > 60
SELECT p.id FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.rf = 'normal' AND (julianday('now') - julianday(p.birthday))/365.25 > 60
SELECT p.id FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.rf = 'normal' AND (julianday('now') - julianday(p.birthday))/365.25 > 60",SELECT p.id FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.rf = 'normal' AND (julianday('now') - julianday(p.birthday))/365.25 > 60,0.0
224,282,What is the ratio of Hydrogen elements in molecule ID TR006? List the ratio with its label.,toxicology,challenging,"WITH SubQuery AS (SELECT DISTINCT T1.atom_id, T1.element, T1.molecule_id, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR006') SELECT CAST(COUNT(CASE WHEN element = 'h' THEN atom_id ELSE NULL END) AS REAL) / (CASE WHEN COUNT(atom_id) = 0 THEN NULL ELSE COUNT(atom_id) END) AS ratio, label FROM SubQuery GROUP BY label",7,"NULL
SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR006' AND element = 'Hydrogen') / (SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR006') AS Hydrogen_Ratio FROM     molecule WHERE     molecule_id = 'TR006'
SELECT (SUM(CASE WHEN element = 'Hydrogen' THEN 1 ELSE 0 END) * 1.0 / COUNT(*)) AS Hydrogen_Ratio FROM atom WHERE molecule_id = 'TR006'
SELECT SUM(CASE WHEN element = 'Hydrogen' THEN 1 ELSE 0 END) / COUNT(*) AS hydrogen_ratio FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.molecule_id = 'TR006'
NULL
SELECT (SUM(CASE WHEN element = 'Hydrogen' THEN 1 ELSE 0 END) * 1.0 / COUNT(*)) AS 'Hydrogen Ratio' FROM atom WHERE molecule_id = 'TR006'
SELECT (SUM(CASE WHEN element = 'Hydrogen' THEN 1 ELSE 0 END) * 1.0 / COUNT(*)) AS Hydrogen_Ratio FROM atom WHERE molecule_id = 'TR006'",,0.0
225,1401,Indicate the cost of posters for 'September Speaker' event.,student_club,moderate,SELECT T3.cost FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T1.event_name = 'September Speaker' AND T3.expense_description = 'Posters',7,"SELECT expense.cost FROM expense JOIN budget ON expense.link_to_budget = budget.budget_id JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'September Speaker' AND budget.category = 'posters'
SELECT expense.cost FROM expense JOIN budget ON expense.link_to_budget = budget.budget_id JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'September Speaker' AND budget.category = 'posters'
SELECT expense.cost FROM event JOIN budget ON event.event_id = budget.link_to_event JOIN expense ON budget.budget_id = expense.link_to_budget WHERE event.event_name = 'September Speaker' AND budget.category = 'posters'
SELECT expense.cost FROM expense JOIN budget ON expense.link_to_budget = budget.budget_id JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'September Speaker' AND budget.category = 'posters'
SELECT expense.cost FROM expense JOIN budget ON expense.link_to_budget = budget.budget_id JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'September Speaker' AND budget.category = 'posters'
SELECT expense.cost FROM expense JOIN budget ON expense.link_to_budget = budget.budget_id JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'September Speaker' AND budget.category = 'posters'
SELECT expense.cost FROM expense JOIN budget ON expense.link_to_budget = budget.budget_id JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'September Speaker' AND budget.category = 'posters'",SELECT expense.cost FROM expense JOIN budget ON expense.link_to_budget = budget.budget_id JOIN event ON budget.link_to_event = event.event_id WHERE event.event_name = 'September Speaker' AND budget.category = 'posters',0.0
226,1433,Which countries have zip codes with post office boxes?,student_club,simple,SELECT DISTINCT county FROM zip_code WHERE type = 'PO Box' AND county IS NOT NULL,7,"SELECT DISTINCT zip_code.state, zip_code.country FROM zip_code JOIN member ON zip_code.zip_code = member.zip WHERE zip_code.type = 'PO Box'
SELECT DISTINCT zip_code.state, zip_code.country FROM zip_code JOIN member ON zip_code.zip_code = member.zip WHERE zip_code.type = 'PO Box'
SELECT DISTINCT zip_code.state, zip_code.country FROM zip_code JOIN member ON zip_code.zip_code = member.zip WHERE zip_code.type = 'PO Box'
SELECT DISTINCT zip_code.state, zip_code.country FROM zip_code JOIN member ON zip_code.zip_code = member.zip WHERE zip_code.type = 'PO Box'
SELECT DISTINCT zip_code.state, zip_code.country FROM zip_code JOIN member ON zip_code.zip_code = member.zip WHERE zip_code.type = 'PO Box'
SELECT DISTINCT zip_code.state, zip_code.country FROM zip_code JOIN member ON zip_code.zip_code = member.zip WHERE zip_code.type = 'PO Box'
SELECT DISTINCT zip_code.state, zip_code.country FROM zip_code JOIN member ON zip_code.zip_code = member.zip WHERE zip_code.type = 'PO Box'","SELECT DISTINCT zip_code.state, zip_code.country FROM zip_code JOIN member ON zip_code.zip_code = member.zip WHERE zip_code.type = 'PO Box'",0.0
227,334,What is the element with the atom ID of TR004_7 in molecule that is not carcinogenic?,toxicology,challenging,SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR004_7' AND T2.label = '-',7,"SELECT element FROM element JOIN molecule ON element.molecule_id = molecule.molecule_id WHERE element.atom_id = 'TR004_7' AND molecule.label != 'carcinogenic'
SELECT element FROM element JOIN molecule ON element.molecule_id = molecule.molecule_id WHERE element.atom_id = 'TR004_7' AND molecule.label != 'carcinogenic'
SELECT element.element FROM element JOIN molecule ON element.molecule_id = molecule.molecule_id WHERE element.atom_id = 'TR004_7' AND molecule.label != 'carcinogenic'
SELECT element FROM element JOIN molecule ON element.molecule_id = molecule.molecule_id WHERE element.atom_id = 'TR004_7' AND molecule.label != 'carcinogenic'
SELECT element FROM element JOIN molecule ON element.molecule_id = molecule.molecule_id WHERE element.atom_id = 'TR004_7' AND molecule.label != 'carcinogenic'
SELECT element FROM element JOIN molecule ON element.molecule_id = molecule.molecule_id WHERE element.atom_id = 'TR004_7' AND molecule.label != 'carcinogenic'
SELECT element.* FROM element JOIN molecule ON element.molecule_id = molecule.molecule_id WHERE element.atom_id = 'TR004_7' AND molecule.label <> 'carcinogenic'",SELECT element FROM element JOIN molecule ON element.molecule_id = molecule.molecule_id WHERE element.atom_id = 'TR004_7' AND molecule.label != 'carcinogenic',0.0
228,158,What is the district Id of the account that placed the order with the id 33333?,financial,simple,SELECT T3.district_id FROM `order` AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.order_id = 33333,7,"SELECT account.district_id FROM account JOIN order_table ON account.account_id = order_table.account_id WHERE order_table.order_id = 33333
SELECT district_id FROM account JOIN order_table ON account.account_id = order_table.account_id JOIN client ON account.account_id = client.account_id WHERE order_table.order_id = 33333
SELECT account.district_id FROM account JOIN order_table ON account.account_id = order_table.account_id WHERE order_table.order_id = 33333
SELECT account.district_id FROM account JOIN order_table ON account.account_id = order_table.account_id WHERE order_table.order_id = 33333
SELECT account.district_id FROM account JOIN order_table ON account.account_id = order_table.account_id WHERE order_table.order_id = 33333
SELECT account.district_id FROM account JOIN order_table ON account.account_id = order_table.account_id WHERE order_table.order_id = 33333
SELECT account.district_id FROM account JOIN order_table ON account.account_id = order_table.account_id WHERE order_table.order_id = 33333",SELECT account.district_id FROM account JOIN order_table ON account.account_id = order_table.account_id WHERE order_table.order_id = 33333,0.0
229,220,Please list top three elements of the toxicology of the molecule TR000 in alphabetical order.,toxicology,challenging,SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR000' ORDER BY T.element LIMIT 3,7,"SELECT element FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR000') GROUP BY element ORDER BY element ASC LIMIT 3
SELECT element FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR000') ORDER BY element ASC LIMIT 3
SELECT element FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR000') ORDER BY element ASC LIMIT 3
SELECT element FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR000') GROUP BY element ORDER BY element ASC LIMIT 3
SELECT element FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR000') GROUP BY element ORDER BY element ASC LIMIT 3
SELECT element FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR000') GROUP BY element ORDER BY element ASC LIMIT 3
SELECT element FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR000') GROUP BY element ORDER BY element ASC LIMIT 3",SELECT element FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR000') GROUP BY element ORDER BY element ASC LIMIT 3,0.0
230,1247,"Among the male patients who have a normal level of white blood cells, how many of them have an abnormal fibrinogen level?",thrombosis_prediction,challenging,SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.FG <= 150 OR T2.FG >= 450 AND T2.WBC > 3.5 AND T2.WBC < 9.0 AND T1.SEX = 'M',7,"SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'male' AND laboratory.wbc = 'normal' AND laboratory.fg = 'abnormal'
SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'male' AND laboratory.wbc = 'normal' AND laboratory.fg = 'abnormal'
SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'male' AND laboratory.wbc = 'normal' AND laboratory.fg = 'abnormal'
SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'male' AND laboratory.wbc = 'normal' AND laboratory.fg = 'abnormal'
SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'male' AND laboratory.wbc = 'normal' AND laboratory.fg = 'abnormal'
SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'male' AND laboratory.wbc = 'normal' AND laboratory.fg = 'abnormal'
SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'male' AND laboratory.wbc = 'normal' AND laboratory.fg = 'abnormal'",SELECT COUNT(*) FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'male' AND laboratory.wbc = 'normal' AND laboratory.fg = 'abnormal',0.0
231,149,"Please list the account types that are not eligible for loans, and the average income of residents in the district where the account is located exceeds $8000 but is no more than $9000.",financial,challenging,SELECT T3.type FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T2.account_id = T3.account_id WHERE T3.type != 'OWNER' AND T1.A11 BETWEEN 8000 AND 9000,7,"SELECT disp.type, AVG(client.income) FROM account JOIN disp ON account.account_id = disp.account_id JOIN client ON account.district_id = client.district_id JOIN district ON account.district_id = district.district_id LEFT JOIN loan ON account.account_id = loan.account_id WHERE loan.account_id IS NULL AND AVG(client.income) > 8000 AND AVG(client.income) <= 9000
SELECT disp.type, AVG(client.income) FROM account JOIN client ON account.district_id = client.district_id JOIN disp ON account.account_id = disp.account_id LEFT JOIN loan ON account.account_id = loan.account_id WHERE loan.account_id IS NULL AND AVG(client.income) > 8000 AND AVG(client.income) <= 9000
SELECT disp.type, AVG(client.income) FROM account JOIN disp ON account.account_id = disp.account_id JOIN client ON account.district_id = client.district_id JOIN district ON account.district_id = district.district_id LEFT JOIN loan ON account.account_id = loan.account_id WHERE loan.account_id IS NULL AND AVG(client.income) > 8000 AND AVG(client.income) <= 9000
SELECT disp.type, AVG(client.income) FROM client JOIN account ON client.district_id = account.district_id JOIN disp ON account.account_id = disp.account_id LEFT JOIN loan ON account.account_id = loan.account_id WHERE loan.account_id IS NULL AND client.income > 8000 AND client.income <= 9000
SELECT disp.type, AVG(client.income) FROM account JOIN disp ON account.account_id = disp.account_id JOIN client ON account.district_id = client.district_id JOIN district ON account.district_id = district.district_id LEFT JOIN loan ON account.account_id = loan.account_id WHERE loan.account_id IS NULL AND AVG(client.income) > 8000 AND AVG(client.income) <= 9000
SELECT disp.type, AVG(client.income) FROM client JOIN account ON client.district_id = account.district_id JOIN disp ON account.account_id = disp.account_id LEFT JOIN loan ON account.account_id = loan.account_id WHERE loan.account_id IS NULL AND client.income > 8000 AND client.income <= 9000
SELECT disp.type, AVG(client.income) FROM client JOIN account ON client.district_id = account.district_id JOIN disp ON account.account_id = disp.account_id LEFT JOIN loan ON account.account_id = loan.account_id WHERE loan.account_id IS NULL AND client.income > 8000 AND client.income <= 9000","SELECT disp.type, AVG(client.income) FROM account JOIN disp ON account.account_id = disp.account_id JOIN client ON account.district_id = client.district_id JOIN district ON account.district_id = district.district_id LEFT JOIN loan ON account.account_id = loan.account_id WHERE loan.account_id IS NULL AND AVG(client.income) > 8000 AND AVG(client.income) <= 9000",0.0
232,62,What is the total number of non-chartered schools in the county of Los Angeles with a percent (%) of eligible free meals for grades 1 through 12 that is less than 0.18%?,california_schools,challenging,SELECT COUNT(T2.School) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'Los Angeles' AND T2.Charter = 0 AND CAST(T1.`Free Meal Count (K-12)` AS REAL) * 100 / T1.`Enrollment (K-12)` < 0.18,7,"SELECT COUNT(*) FROM schools WHERE county = 'Los Angeles' AND charter = 'N' AND cdscode IN (     SELECT cdscode     FROM satscores     WHERE rtype = 'K-12'     AND ""percent (%) eligible free (k-12)"" < 0.18 )
SELECT COUNT(*) FROM schools WHERE county = 'Los Angeles' AND charter = 'N' AND cdscode IN (     SELECT cdscode     FROM satscores     WHERE rtype = 'K-12'     AND ""percent (%) eligible free (k-12)"" < 0.18 )
SELECT COUNT(*) FROM schools WHERE county = 'Los Angeles' AND charter = 'N' AND cdscode IN (     SELECT cdscode     FROM satscores     WHERE ""percent (%) eligible free (k-12)"" < 0.18     AND ""low grade"" <= 1     AND ""high grade"" >= 12 )
SELECT COUNT(*) FROM schools WHERE county = 'Los Angeles' AND charter = 'N' AND cdscode IN (     SELECT cdscode     FROM satscores     WHERE rtype = 'K-12'     AND ""percent (%) eligible free (k-12)"" < 0.18 )
SELECT COUNT(*) FROM schools WHERE county = 'Los Angeles' AND charter = 'N' AND cdscode IN (     SELECT cdscode     FROM satscores     WHERE rtype = 'K-12'     AND ""percent (%) eligible free (k-12)"" < 0.18 )
SELECT COUNT(*) FROM schools WHERE county = 'Los Angeles' AND charter = 'N' AND cdscode IN (     SELECT cdscode     FROM satscores     WHERE rtype = 'K-12'     AND ""percent (%) eligible frpm (k-12)"" < 0.18 )
SELECT COUNT(*) FROM schools WHERE county = 'Los Angeles' AND charter = 'N' AND cdscode IN (     SELECT cdscode     FROM satscores     WHERE rtype = 'K-12'     AND ""percent (%) eligible free (k-12)"" < 0.18 )","SELECT COUNT(*) FROM schools WHERE county = 'Los Angeles' AND charter = 'N' AND cdscode IN (     SELECT cdscode     FROM satscores     WHERE rtype = 'K-12'     AND ""percent (%) eligible free (k-12)"" < 0.18 )",0.0
233,1257,"Among the patients whose creatinine level is abnormal, how many of them aren't 70 yet?",thrombosis_prediction,challenging,"SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE >= 1.5 AND STRFTIME('%Y', Date('now')) - STRFTIME('%Y', T1.Birthday) < 70",7,"SELECT COUNT(*) FROM patient WHERE id IN (     SELECT id FROM laboratory     WHERE cre NOT BETWEEN 0.6 AND 1.2 ) AND birthday < '1953-01-01'
SELECT COUNT(*) FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.cre <> 'normal' AND patient.birthday <> '1953-01-01'
SELECT COUNT(*) FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.cre <> 'normal' AND patient.birthday <> '1953-01-01'
SELECT COUNT(*) FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.cre <> 'normal' AND patient.birthday <> '1953-01-01'
SELECT COUNT(*) FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.cre <> 'normal' AND patient.birthday <> '1953-01-01'
SELECT COUNT(*) FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.cre <> 70 AND laboratory.cre IS NOT NULL
SELECT COUNT(*) FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.cre <> 'normal' AND patient.birthday <> '1953-01-01'",SELECT COUNT(*) FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.cre <> 'normal' AND patient.birthday <> '1953-01-01',0.0
234,743,What is the percentage of superheroes who act in their own self-interest or make decisions based on their own moral code? Indicate how many of the said superheroes were published by Marvel Comics.,superhero,challenging,"SELECT (CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM superhero)), CAST(SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS REAL) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN alignment AS T3 ON T3.id = T1.alignment_id WHERE T3.alignment = 'Bad'",7,"SELECT id FROM attribute WHERE attribute_name = 'self-interest') OR h.attribute_id IN (SELECT id FROM attribute WHERE attribute_name = 'moral code')) THEN 1 END) AS self_interested_or_moral_superheroes,     COUNT(CASE WHEN p.publisher_name = 'Marvel Comics' AND a.alignment = 'good' AND (h.attribute_id IN (SELECT id FROM attribute WHERE attribute_name = 'self-interest') OR h.attribute_id IN (SELECT id FROM attribute WHERE attribute_name = 'moral code')) THEN 1 END) AS marvel_self_interested_or_moral_superheroes,     (COUNT(CASE WHEN a.alignment = 'good' AND (h.attribute_id IN (SELECT id FROM attribute WHERE attribute_name = 'self-interest') OR h.attribute_id IN (SELECT id FROM attribute WHERE attribute_name = 'moral code')) THEN 1 END) * 100.0 / COUNT(s.id)) AS percentage FROM     superhero s JOIN     alignment
SELECT id FROM attribute WHERE attribute_name = 'self-interest' OR attribute_name = 'moral code') OR s.alignment_id IN (SELECT id FROM alignment WHERE alignment = 'self-interest' OR alignment = 'moral code')) THEN 1 END) AS self_interest_moral_code_superheroes,     COUNT(CASE WHEN p.publisher_name = 'Marvel Comics' AND a.alignment = 'good' AND (h.attribute_id IN (SELECT id FROM attribute WHERE attribute_name = 'self-interest' OR attribute_name = 'moral code') OR s.alignment_id IN (SELECT id FROM alignment WHERE alignment = 'self-interest' OR alignment = 'moral code')) THEN 1 END) AS marvel_self_interest_moral_code_superheroes FROM     superhero s     JOIN alignment a ON s.alignment_id = a.id     JOIN publisher p ON s.publisher_id = p.id     LEFT JOIN hero_attribute h ON s.id = h.hero_id
NULL
SELECT id FROM attribute WHERE attribute_name = 'self-interest' OR attribute_name = 'moral code') OR s.alignment_id IN (SELECT id FROM alignment WHERE alignment = 'good')) THEN 1 END) AS self_interested_superheroes,     (COUNT(CASE WHEN a.alignment = 'good' AND (ha.attribute_id IN (SELECT id FROM attribute WHERE attribute_name = 'self-interest' OR attribute_name = 'moral code') OR s.alignment_id IN (SELECT id FROM alignment WHERE alignment = 'good')) THEN 1 END) * 100.0 / COUNT(s.id)) AS percentage,     COUNT(CASE WHEN p.publisher_name = 'Marvel Comics' AND a.alignment = 'good' AND (ha.attribute_id IN (SELECT id FROM attribute WHERE attribute_name = 'self-interest' OR attribute_name = 'moral code') OR s.alignment_id IN (SELECT id FROM alignment WHERE alignment = 'good')) THEN 1 END) AS marvel_superheroes FROM     superhero s 
SELECT id FROM attribute WHERE attribute_name = 'self-interest' OR attribute_name = 'moral code') OR s.alignment_id IN (SELECT id FROM alignment WHERE alignment = 'self-interest' OR alignment = 'moral code')) THEN 1 END) AS self_interest_moral_code_superheroes,     COUNT(CASE WHEN p.publisher_name = 'Marvel Comics' AND (a.alignment = 'good' AND (h.attribute_id IN (SELECT id FROM attribute WHERE attribute_name = 'self-interest' OR attribute_name = 'moral code') OR s.alignment_id IN (SELECT id FROM alignment WHERE alignment = 'self-interest' OR alignment = 'moral code'))) THEN 1 END) AS marvel_self_interest_moral_code_superheroes FROM     superhero s LEFT JOIN     alignment a ON s.alignment_id = a.id LEFT JOIN     publisher p ON s.publisher_id = p.id LEFT JOIN     hero_attribute h ON s.id = h.hero_
SELECT id FROM attribute WHERE attribute_name = 'self-interest' OR attribute_name = 'moral code') OR s.alignment_id IN (SELECT id FROM alignment WHERE alignment = 'self-interest' OR alignment = 'moral code')) THEN 1 END) AS self_interest_moral_code_superheroes,     COUNT(CASE WHEN p.publisher_name = 'Marvel Comics' AND a.alignment = 'good' AND (h.attribute_id IN (SELECT id FROM attribute WHERE attribute_name = 'self-interest' OR attribute_name = 'moral code') OR s.alignment_id IN (SELECT id FROM alignment WHERE alignment = 'self-interest' OR alignment = 'moral code')) THEN 1 END) AS marvel_self_interest_moral_code_superheroes FROM     superhero s     JOIN alignment a ON s.alignment_id = a.id     JOIN publisher p ON s.publisher_id = p.id     LEFT JOIN hero_attribute h ON s.id = h.hero_id
SELECT id FROM attribute WHERE attribute_name = 'self-interest' OR attribute_name = 'moral code') OR s.alignment_id IN (SELECT id FROM alignment WHERE alignment = 'good')) THEN 1 END) AS self_interested_moral_superheroes,     (COUNT(CASE WHEN a.alignment = 'good' AND (h.attribute_id IN (SELECT id FROM attribute WHERE attribute_name = 'self-interest' OR attribute_name = 'moral code') OR s.alignment_id IN (SELECT id FROM alignment WHERE alignment = 'good')) THEN 1 END) * 100.0 / COUNT(s.id)) AS percentage,     COUNT(CASE WHEN p.publisher_name = 'Marvel Comics' AND a.alignment = 'good' AND (h.attribute_id IN (SELECT id FROM attribute WHERE attribute_name = 'self-interest' OR attribute_name = 'moral code') OR s.alignment_id IN (SELECT id FROM alignment WHERE alignment = 'good')) THEN 1 END) AS marvel_superheroes FROM     super","SELECT id FROM attribute WHERE attribute_name = 'self-interest' OR attribute_name = 'moral code') OR s.alignment_id IN (SELECT id FROM alignment WHERE alignment = 'self-interest' OR alignment = 'moral code')) THEN 1 END) AS self_interest_moral_code_superheroes,     COUNT(CASE WHEN p.publisher_name = 'Marvel Comics' AND a.alignment = 'good' AND (h.attribute_id IN (SELECT id FROM attribute WHERE attribute_name = 'self-interest' OR attribute_name = 'moral code') OR s.alignment_id IN (SELECT id FROM alignment WHERE alignment = 'self-interest' OR alignment = 'moral code')) THEN 1 END) AS marvel_self_interest_moral_code_superheroes FROM     superhero s     JOIN alignment a ON s.alignment_id = a.id     JOIN publisher p ON s.publisher_id = p.id     LEFT JOIN hero_attribute h ON s.id = h.hero_id",0.0
235,310,"How many molecules have a double bond type and among these molecule, how many are labeled as carcinogenic compound?",toxicology,moderate,"SELECT COUNT(DISTINCT T2.molecule_id), SUM(CASE WHEN T2.label = '+' THEN 1 ELSE 0 END) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '='",7,"SELECT COUNT(DISTINCT m.molecule_id) AS double_bond_molecules,        SUM(CASE WHEN m.label = 'carcinogenic compound' THEN 1 ELSE 0 END) AS carcinogenic_compounds FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = 'double bond'
SELECT COUNT(DISTINCT m.molecule_id) AS double_bond_molecules,        SUM(CASE WHEN m.label = 'carcinogenic compound' THEN 1 ELSE 0 END) AS carcinogenic_compounds FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = 'double bond'
SELECT COUNT(DISTINCT m.molecule_id) AS double_bond_molecules,        SUM(CASE WHEN m.label = 'carcinogenic compound' THEN 1 ELSE 0 END) AS carcinogenic_compounds FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = 'double bond'
SELECT COUNT(DISTINCT m.molecule_id) AS double_bond_molecules,        SUM(CASE WHEN m.label = 'carcinogenic compound' THEN 1 ELSE 0 END) AS carcinogenic_compounds FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = 'double bond'
SELECT COUNT(DISTINCT m.molecule_id) AS double_bond_molecules,        SUM(CASE WHEN m.label = 'carcinogenic compound' THEN 1 ELSE 0 END) AS carcinogenic_compounds FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = 'double bond'
SELECT COUNT(DISTINCT m.molecule_id) AS double_bond_molecules,        SUM(CASE WHEN m.label = 'carcinogenic compound' THEN 1 ELSE 0 END) AS carcinogenic_compounds FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = 'double bond'
SELECT COUNT(DISTINCT m.molecule_id) AS carcinogenic_molecules_with_double_bond FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = 'double bond' AND m.label = 'carcinogenic compound'","SELECT COUNT(DISTINCT m.molecule_id) AS double_bond_molecules,        SUM(CASE WHEN m.label = 'carcinogenic compound' THEN 1 ELSE 0 END) AS carcinogenic_compounds FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id WHERE b.bond_type = 'double bond'",0.0
236,1111,"State the chance creation passing class for ""PEC Zwolle"" on 2013/9/20.",european_football_2,moderate,"SELECT t2.chanceCreationPassingClass FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t1.team_long_name = 'PEC Zwolle' AND SUBSTR(t2.`date`, 1, 10) = '2013-09-20'",7,"SELECT team_attributes.chancecreationpassingclass FROM team_attributes JOIN team ON team_attributes.team_api_id = team.id WHERE team.team_long_name = ""PEC Zwolle"" AND team_attributes.date = ""2013/9/20""
SELECT team_attributes.chancecreationpassingclass FROM team_attributes JOIN team ON team_attributes.team_api_id = team.id WHERE team.team_long_name = ""PEC Zwolle"" AND team_attributes.date = ""2013/9/20""
SELECT team_attributes.chancecreationpassingclass FROM team_attributes JOIN team ON team_attributes.team_api_id = team.id WHERE team.team_long_name = ""PEC Zwolle"" AND team_attributes.date = ""2013/9/20""
SELECT team_attributes.chancecreationpassingclass FROM team_attributes JOIN team ON team_attributes.team_api_id = team.id WHERE team.team_long_name = ""PEC Zwolle"" AND team_attributes.date = ""2013/9/20""
SELECT team_attributes.chancecreationpassingclass FROM team_attributes JOIN team ON team_attributes.team_api_id = team.id WHERE team.team_long_name = ""PEC Zwolle"" AND team_attributes.date = ""2013/9/20""
SELECT team_attributes.chancecreationpassingclass FROM team_attributes JOIN team ON team_attributes.team_api_id = team.id WHERE team.team_long_name = ""PEC Zwolle"" AND team_attributes.date = ""2013/9/20""
SELECT team_attributes.chancecreationpassingclass FROM team_attributes JOIN team ON team_attributes.team_api_id = team.id WHERE team.team_long_name = ""PEC Zwolle"" AND team_attributes.date = ""2013/9/20""","SELECT team_attributes.chancecreationpassingclass FROM team_attributes JOIN team ON team_attributes.team_api_id = team.id WHERE team.team_long_name = ""PEC Zwolle"" AND team_attributes.date = ""2013/9/20""",0.0
237,735,How many superheroes with blonde hair are there?,superhero,simple,SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.hair_colour_id = T2.id WHERE T2.colour = 'Blond',7,"SELECT COUNT(*) FROM superhero JOIN colour ON superhero.hair_colour_id = colour.id WHERE colour.colour = 'blonde'
SELECT COUNT(*) FROM superhero JOIN colour ON superhero.hair_colour_id = colour.id WHERE colour.colour = 'blonde'
SELECT COUNT(*) FROM superhero JOIN colour ON superhero.hair_colour_id = colour.id WHERE colour.colour = 'blonde'
SELECT COUNT(*) FROM superhero JOIN colour ON superhero.hair_colour_id = colour.id WHERE colour.colour = 'blonde'
SELECT COUNT(*) FROM superhero JOIN colour ON superhero.hair_colour_id = colour.id WHERE colour.colour = 'blonde'
SELECT COUNT(*) FROM superhero JOIN colour ON superhero.hair_colour_id = colour.id WHERE colour.colour = 'blonde'
SELECT COUNT(*) FROM superhero JOIN colour ON superhero.hair_colour_id = colour.id WHERE colour.colour = 'blonde'",SELECT COUNT(*) FROM superhero JOIN colour ON superhero.hair_colour_id = colour.id WHERE colour.colour = 'blonde',0.0
238,337,List the element and bond type included in the molecule with molecule ID of TR002.,toxicology,challenging,"SELECT DISTINCT T1.element, T2.bond_type FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR002'",7,"SELECT a.element, b.bond_type FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE a.molecule_id = 'TR002'
SELECT atom.element, bond.bond_type FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id JOIN connected ON atom.atom_id = connected.atom_id WHERE atom.molecule_id = 'TR002'
SELECT a.element, b.bond_type FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE a.molecule_id = 'TR002'
SELECT a.element, b.bond_type FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE a.molecule_id = 'TR002'
SELECT a.element, b.bond_type FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE a.molecule_id = 'TR002'
SELECT a.element, b.bond_type FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE a.molecule_id = 'TR002'
SELECT a.element, b.bond_type FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE a.molecule_id = 'TR002'","SELECT a.element, b.bond_type FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE a.molecule_id = 'TR002'",0.0
239,958,Which driver has the fastest lap time? Please give their forenames and surnames.,formula_1,moderate,"SELECT T2.forename, T2.surname, T1.fastestLapTime FROM results AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId WHERE T1.fastestLapTime IS NOT NULL ORDER BY T1.fastestLapTime ASC LIMIT 1",7,"SELECT d.forename, d.surname FROM drivers d JOIN laptimes l ON d.driverid = l.driverid ORDER BY l.milliseconds ASC LIMIT 1
SELECT d.forename, d.surname FROM drivers d JOIN laptimes l ON d.driverid = l.driverid ORDER BY l.milliseconds ASC LIMIT 1
SELECT d.forename, d.surname FROM drivers d JOIN laptimes lt ON d.driverid = lt.driverid ORDER BY lt.milliseconds ASC LIMIT 1
SELECT d.forename, d.surname FROM drivers d JOIN laptimes l ON d.driverid = l.driverid ORDER BY l.milliseconds ASC LIMIT 1
SELECT d.forename, d.surname FROM drivers d JOIN laptimes lt ON d.driverid = lt.driverid ORDER BY lt.milliseconds ASC LIMIT 1
SELECT d.forename, d.surname FROM drivers d JOIN laptimes l ON d.driverid = l.driverid ORDER BY l.milliseconds ASC LIMIT 1
SELECT d.forename, d.surname FROM drivers d JOIN laptimes lt ON d.driverid = lt.driverid ORDER BY lt.milliseconds ASC LIMIT 1","SELECT d.forename, d.surname FROM drivers d JOIN laptimes l ON d.driverid = l.driverid ORDER BY l.milliseconds ASC LIMIT 1",0.0
240,255,What proportion of single bonds are carcinogenic? Please provide your answer as a percentage with five decimal places.,toxicology,moderate,"SELECT ROUND(CAST(COUNT(CASE WHEN T2.label = '+' THEN T1.bond_id ELSE NULL END) AS REAL) * 100 / COUNT(T1.bond_id),5) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-'",7,"SELECT ROUND((COUNT(DISTINCT b.bond_id) * 100.0) / (SELECT COUNT(*) FROM bond WHERE bond_type = 'single'), 5) AS proportion_carcinogenic FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN molecule m ON a1.molecule_id = m.molecule_id AND a2.molecule_id = m.molecule_id WHERE b.bond_type = 'single' AND m.label = 'carcinogenic'
SELECT ROUND((COUNT(DISTINCT b.bond_id) * 100.0) / (SELECT COUNT(DISTINCT bond_id) FROM bond WHERE bond_type = 'single'), 5) AS proportion FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = 'single' AND m.label = 'carcinogenic'
SELECT ROUND((COUNT(DISTINCT b.bond_id) * 100.0 / (SELECT COUNT(*) FROM bond WHERE bond_type = 'single')) AS carcinogenic_proportion FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = 'single' AND m.label = 'carcinogenic'
SELECT ROUND((COUNT(DISTINCT b.bond_id) * 100.0) / (SELECT COUNT(DISTINCT bond_id) FROM bond WHERE bond_type = 'single'), 5) AS proportion_carcinogenic FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN molecule m ON a1.molecule_id = m.molecule_id AND a2.molecule_id = m.molecule_id WHERE b.bond_type = 'single' AND m.label = 'carcinogenic'
SELECT ROUND((COUNT(DISTINCT b.bond_id) * 100.0) / (SELECT COUNT(*) FROM bond WHERE bond_type = 'single'), 5) AS proportion_carcinogenic FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN molecule m ON a1.molecule_id = m.molecule_id AND a2.molecule_id = m.molecule_id WHERE b.bond_type = 'single' AND m.label = 'carcinogenic'
SELECT ROUND((COUNT(DISTINCT b.bond_id) * 100.0 / (SELECT COUNT(*) FROM bond WHERE bond_type = 'single')) AS carcinogenic_proportion FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = 'single' AND m.label = 'carcinogenic'
SELECT ROUND((COUNT(DISTINCT b.bond_id) * 100.0) / (SELECT COUNT(DISTINCT bond_id) FROM bond WHERE bond_type = 'single'), 5) AS proportion FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE b.bond_type = 'single' AND m.label = 'carcinogenic'","SELECT ROUND((COUNT(DISTINCT b.bond_id) * 100.0) / (SELECT COUNT(*) FROM bond WHERE bond_type = 'single'), 5) AS proportion_carcinogenic FROM bond b JOIN connected c ON b.bond_id = c.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN molecule m ON a1.molecule_id = m.molecule_id AND a2.molecule_id = m.molecule_id WHERE b.bond_type = 'single' AND m.label = 'carcinogenic'",0.0
241,169,What was the growth rate of the total amount of loans across all accounts for a male client between 1996 and 1997?,financial,challenging,"SELECT CAST((SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1997' THEN T1.amount ELSE 0 END) - SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1996' THEN T1.amount ELSE 0 END)) AS REAL) * 100 / SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1996' THEN T1.amount ELSE 0 END) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN disp AS T3 ON T3.account_id = T2.account_id INNER JOIN client AS T4 ON T4.client_id = T3.client_id WHERE T4.gender = 'M' AND T3.type = 'OWNER'",7,"NULL
SELECT ((SUM(l1.amount) - SUM(l0.amount)) / SUM(l0.amount)) AS growth_rate FROM loan AS l1 JOIN account ON l1.account_id = account.account_id JOIN disp ON account.account_id = disp.account_id JOIN client ON disp.client_id = client.client_id LEFT JOIN loan AS l0 ON l0.account_id = l1.account_id AND l0.date < l1.date WHERE client.gender = 'M' AND l1.date BETWEEN '1996-01-01' AND '1997-12-31'
SELECT ((SUM(l1.amount) - SUM(l0.amount)) / SUM(l0.amount)) AS growth_rate FROM loan AS l1 JOIN loan AS l0 ON l1.account_id = l0.account_id JOIN account ON l1.account_id = account.account_id JOIN disp ON account.account_id = disp.account_id JOIN client ON disp.client_id = client.client_id WHERE client.gender = 'M' AND l1.date BETWEEN '1996-01-01' AND '1997-12-31' AND l0.date BETWEEN '1995-01-01' AND '1996-12-31'
SELECT ((SUM(loan.amount) FILTER (WHERE loan.date BETWEEN '1996-01-01' AND '1997-12-31')) - (SUM(loan.amount) FILTER (WHERE loan.date BETWEEN '1995-01-01' AND '1995-12-31'))) / (SUM(loan.amount) FILTER (WHERE loan.date BETWEEN '1995-01-01' AND '1995-12-31')) AS growth_rate FROM loan JOIN account ON loan.account_id = account.account_id JOIN disp ON account.account_id = disp.account_id JOIN client ON disp.client_id = client.client_id WHERE client.gender = 'M' AND loan.date BETWEEN '1996-01-01' AND '1997-12-31'
SELECT ((SUM(loan.amount) FILTER (WHERE strftime('%Y', loan.date) = '1997') - SUM(loan.amount) FILTER (WHERE strftime('%Y', loan.date) = '1996')) / SUM(loan.amount) FILTER (WHERE strftime('%Y', loan.date) = '1996')) AS growth_rate FROM loan JOIN account ON loan.account_id = account.account_id JOIN disp ON account.account_id = disp.account_id JOIN client ON disp.client_id = client.client_id WHERE client.gender = 'M' AND strftime('%Y', loan.date) BETWEEN '1996' AND '1997'
SELECT ((SUM(loan.amount) FILTER (WHERE strftime('%Y', loan.date) = '1997') - SUM(loan.amount) FILTER (WHERE strftime('%Y', loan.date) = '1996')) / SUM(loan.amount) FILTER (WHERE strftime('%Y', loan.date) = '1996')) AS growth_rate FROM loan JOIN account ON loan.account_id = account.account_id JOIN disp ON account.account_id = disp.account_id JOIN client ON disp.client_id = client.client_id WHERE client.gender = 'M' AND strftime('%Y', loan.date) BETWEEN '1996' AND '1997'
SELECT ((SUM(loan.amount) FILTER (WHERE loan.date BETWEEN '1996-01-01' AND '1997-12-31')) - (SUM(loan.amount) FILTER (WHERE loan.date BETWEEN '1995-01-01' AND '1995-12-31'))) / (SUM(loan.amount) FILTER (WHERE loan.date BETWEEN '1995-01-01' AND '1995-12-31')) AS growth_rate FROM loan JOIN account ON loan.account_id = account.account_id JOIN disp ON account.account_id = disp.account_id JOIN client ON disp.client_id = client.client_id WHERE client.gender = 'M' AND loan.date BETWEEN '1996-01-01' AND '1997-12-31'",SELECT ((SUM(loan.amount) FILTER (WHERE loan.date BETWEEN '1996-01-01' AND '1997-12-31')) - (SUM(loan.amount) FILTER (WHERE loan.date BETWEEN '1995-01-01' AND '1995-12-31'))) / (SUM(loan.amount) FILTER (WHERE loan.date BETWEEN '1995-01-01' AND '1995-12-31')) AS growth_rate FROM loan JOIN account ON loan.account_id = account.account_id JOIN disp ON account.account_id = disp.account_id JOIN client ON disp.client_id = client.client_id WHERE client.gender = 'M' AND loan.date BETWEEN '1996-01-01' AND '1997-12-31',0.0
242,263,What is the composition of element chlorine in percentage among the single bond molecules?,toxicology,challenging,"SELECT CAST(COUNT(CASE WHEN T.element = 'cl' THEN T.atom_id ELSE NULL END) AS REAL) * 100 / COUNT(T.atom_id) FROM ( SELECT T1.atom_id, T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type = '-' ) AS T",7,"SELECT COUNT(*) FROM atom WHERE element = 'chlorine' AND molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = 'single'))) AS percentage FROM     atom a JOIN     bond b ON a.molecule_id = b.molecule_id WHERE     a.element = 'chlorine' AND b.bond_type = 'single'
SELECT COUNT(*) FROM atom WHERE element = 'chlorine' AND molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = 'single'))) AS percentage FROM     atom a JOIN     bond b ON a.molecule_id = b.molecule_id WHERE     a.element = 'chlorine' AND b.bond_type = 'single'
SELECT COUNT(*) FROM atom WHERE element = 'chlorine' AND molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = 'single'))) AS percentage FROM     atom a JOIN     bond b ON a.molecule_id = b.molecule_id WHERE     a.element = 'chlorine' AND b.bond_type = 'single'
SELECT COUNT(*) FROM atom WHERE element = 'chlorine' AND molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = 'single'))) AS percentage FROM     atom a JOIN     bond b ON a.molecule_id = b.molecule_id WHERE     a.element = 'chlorine' AND b.bond_type = 'single'
SELECT COUNT(*) FROM atom WHERE element = 'chlorine' AND molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = 'single'))) AS percentage_chlorine FROM     atom a JOIN     bond b ON a.molecule_id = b.molecule_id JOIN     connected c ON a.atom_id = c.atom_id WHERE     a.element = 'chlorine' AND b.bond_type = 'single'
SELECT SUM(element_percentage) AS total_chlorine_percentage FROM (     SELECT COUNT(a.atom_id) * 100.0 / (SELECT COUNT(*) FROM atom WHERE molecule_id = m.molecule_id) AS element_percentage     FROM atom a     JOIN connected c ON a.atom_id = c.atom_id     JOIN bond b ON c.bond_id = b.bond_id     JOIN molecule m ON b.molecule_id = m.molecule_id     WHERE a.element = 'chlorine' AND b.bond_type = 'single'     GROUP BY a.molecule_id ) AS subquery
SELECT (SUM(element_data.atomic_weight * 100.0 / molecule_data.molecular_weight) AS chlorine_percentage) FROM atom AS element_data JOIN bond ON element_data.bond_id = bond.bond_id JOIN connected ON element_data.atom_id = connected.atom_id JOIN molecule AS molecule_data ON element_data.molecule_id = molecule_data.molecule_id WHERE element_data.element = 'Chlorine' AND bond.bond_type = 'Single' GROUP BY molecule_data.molecule_id",SELECT COUNT(*) FROM atom WHERE element = 'chlorine' AND molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = 'single'))) AS percentage FROM     atom a JOIN     bond b ON a.molecule_id = b.molecule_id WHERE     a.element = 'chlorine' AND b.bond_type = 'single',0.0
243,581,Who is the editor of the post titled 'Open source tools for visualizing multi-dimensional data?',codebase_community,moderate,SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Open source tools for visualizing multi-dimensional data?',7,"SELECT users.displayname FROM posts JOIN users ON posts.lasteditoruserid = users.id WHERE posts.title = 'Open source tools for visualizing multi-dimensional data?' LIMIT 1
SELECT users.displayname FROM posts JOIN users ON posts.lasteditoruserid = users.id WHERE posts.title = 'Open source tools for visualizing multi-dimensional data?' LIMIT 1
SELECT users.displayname FROM posts JOIN users ON posts.lasteditoruserid = users.id WHERE posts.title = 'Open source tools for visualizing multi-dimensional data?' LIMIT 1
SELECT users.displayname FROM posts JOIN users ON posts.lasteditoruserid = users.id WHERE posts.title = 'Open source tools for visualizing multi-dimensional data?' LIMIT 1
SELECT users.displayname FROM posts JOIN users ON posts.lasteditoruserid = users.id WHERE posts.title = 'Open source tools for visualizing multi-dimensional data?' LIMIT 1
SELECT users.displayname FROM posts JOIN users ON posts.lasteditoruserid = users.id WHERE posts.title = 'Open source tools for visualizing multi-dimensional data?' LIMIT 1
SELECT users.displayname FROM posts JOIN users ON posts.lasteditoruserid = users.id WHERE posts.title = 'Open source tools for visualizing multi-dimensional data?' LIMIT 1",SELECT users.displayname FROM posts JOIN users ON posts.lasteditoruserid = users.id WHERE posts.title = 'Open source tools for visualizing multi-dimensional data?' LIMIT 1,0.0
244,486,What is the percentage of the cards with a converted mana cost of 7 in the set Coldsnap?,card_games,moderate,SELECT CAST(SUM(CASE WHEN T1.convertedManaCost = 7 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE T2.name = 'Coldsnap',7,"SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'Coldsnap')) AS percentage FROM cards WHERE setcode = 'Coldsnap' AND convertedmanacost = 7
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'Coldsnap')) AS percentage FROM cards WHERE convertedmanacost = 7 AND setcode = 'Coldsnap'
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'Coldsnap')) AS percentage FROM cards WHERE setcode = 'Coldsnap' AND convertedmanacost = 7
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'Coldsnap')) AS percentage FROM cards WHERE setcode = 'Coldsnap' AND convertedmanacost = 7
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'Coldsnap')) AS percentage FROM cards WHERE convertedmanacost = 7 AND setcode = 'Coldsnap'
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'Coldsnap')) AS percentage FROM cards WHERE setcode = 'Coldsnap' AND convertedmanacost = 7
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'Coldsnap')) AS percentage FROM cards WHERE setcode = 'Coldsnap' AND convertedmanacost = 7",SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'Coldsnap')) AS percentage FROM cards WHERE setcode = 'Coldsnap' AND convertedmanacost = 7,0.0
245,928,Which driver ranked the first in the Canadian Grand Prix in 2007? Please give his reference name.,formula_1,moderate,"SELECT T3.forename, T3.surname, T3.driverRef FROM races AS T1 INNER JOIN results AS T2 ON T2.raceId = T1.raceId INNER JOIN drivers AS T3 ON T3.driverId = T2.driverId WHERE T1.name = 'Canadian Grand Prix' AND T2.rank = 1 AND T1.year = 2007",7,"SELECT drivers.driverref FROM results JOIN races ON results.raceid = races.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE races.name = 'Canadian Grand Prix' AND races.year = 2007 AND results.position = 1
SELECT drivers.driverref FROM results JOIN races ON results.raceid = races.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE races.name = 'Canadian Grand Prix' AND races.year = 2007 AND results.position = 1
SELECT drivers.driverref FROM results JOIN races ON results.raceid = races.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE races.name = 'Canadian Grand Prix' AND races.year = 2007 AND results.position = 1
SELECT drivers.driverref FROM results JOIN races ON results.raceid = races.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE races.name = 'Canadian Grand Prix' AND races.year = 2007 AND results.position = 1
SELECT drivers.driverref FROM results JOIN races ON results.raceid = races.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE races.name = 'Canadian Grand Prix' AND races.year = 2007 AND results.position = 1
SELECT drivers.driverref FROM results JOIN races ON results.raceid = races.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE races.name = 'Canadian Grand Prix' AND races.year = 2007 AND results.position = 1
SELECT drivers.driverref FROM results JOIN races ON results.raceid = races.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE races.name = 'Canadian Grand Prix' AND races.year = 2007 AND results.position = 1",SELECT drivers.driverref FROM results JOIN races ON results.raceid = races.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE races.name = 'Canadian Grand Prix' AND races.year = 2007 AND results.position = 1,0.0
246,1006,"Among all the lap records set on various circuits, what is the time for the fastest one?",formula_1,challenging,"SELECT time FROM lapTimes ORDER BY (CASE WHEN INSTR(time, ':') <> INSTR(SUBSTR(time, INSTR(time, ':') + 1), ':') + INSTR(time, ':') THEN CAST(SUBSTR(time, 1, INSTR(time, ':') - 1) AS REAL) * 3600 ELSE 0 END) + (CAST(SUBSTR(time, INSTR(time, ':') - 2 * (INSTR(time, ':') = INSTR(SUBSTR(time, INSTR(time, ':') + 1), ':') + INSTR(time, ':')), INSTR(time, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(time, INSTR(time, ':') + 1, INSTR(time, '.') - INSTR(time, ':') - 1) AS REAL)) + (CAST(SUBSTR(time, INSTR(time, '.') + 1) AS REAL) / 1000) ASC LIMIT 1",7,"SELECT MIN(milliseconds) AS fastest_lap_time FROM laptimes
SELECT MIN(milliseconds) AS fastest_lap_time FROM laptimes
SELECT MIN(milliseconds) AS fastest_lap_time FROM laptimes
SELECT MIN(milliseconds) AS fastest_lap_time FROM laptimes
SELECT MIN(milliseconds) AS fastest_lap_time FROM laptimes
SELECT MIN(milliseconds) AS fastest_time FROM laptimes
SELECT MIN(milliseconds) AS fastest_lap_time FROM laptimes",SELECT MIN(milliseconds) AS fastest_lap_time FROM laptimes,0.0
247,1500,"Please list the product description of the products consumed in September, 2013.",debit_card_specializing,simple,SELECT T3.Description FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN products AS T3 ON T1.ProductID = T3.ProductID WHERE T2.Date = '201309',7,"SELECT products.description FROM transactions_1k JOIN products ON transactions_1k.productid = products.productid WHERE transactions_1k.date BETWEEN '2013-09-01' AND '2013-09-30'
SELECT products.description FROM transactions_1k JOIN products ON transactions_1k.productid = products.productid WHERE transactions_1k.date BETWEEN '2013-09-01' AND '2013-09-30'
SELECT products.description FROM transactions_1k JOIN products ON transactions_1k.productid = products.productid WHERE strftime('%Y-%m', transactions_1k.date) = '2013-09'
SELECT products.description FROM transactions_1k JOIN products ON transactions_1k.productid = products.productid WHERE transactions_1k.date BETWEEN '2013-09-01' AND '2013-09-30'
SELECT products.description FROM transactions_1k JOIN products ON transactions_1k.productid = products.productid WHERE transactions_1k.date BETWEEN '2013-09-01' AND '2013-09-30'
SELECT products.description FROM transactions_1k JOIN products ON transactions_1k.productid = products.productid WHERE transactions_1k.date LIKE '2013-09%'
SELECT products.description FROM transactions_1k JOIN products ON transactions_1k.productid = products.productid WHERE transactions_1k.date LIKE '2013-09%'",SELECT products.description FROM transactions_1k JOIN products ON transactions_1k.productid = products.productid WHERE transactions_1k.date BETWEEN '2013-09-01' AND '2013-09-30',0.0
248,1295,"Among the patients whose total bilirubin is over the normal range, how many of them have a peripheral pattern observed in the sheet of ANA examination?",thrombosis_prediction,challenging,SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.`T-BIL` >= 2 AND T3.`ANA Pattern` LIKE '%P%',7,"SELECT COUNT(*) FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.t_bil > normal_range AND laboratory.ana_pattern = 'peripheral'
SELECT COUNT(*) FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.t_bil > normal_range AND laboratory.ana_pattern = 'peripheral'
SELECT COUNT(*) FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.t_bil > normal_range AND laboratory.ana_pattern = 'peripheral'
SELECT COUNT(*) FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.t_bil > normal_range AND laboratory.ana_pattern = 'peripheral'
SELECT COUNT(*) FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.t_bil > normal_range AND laboratory.ana_pattern = 'peripheral'
SELECT COUNT(*) FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.t_bil > normal_range AND laboratory.ana_pattern = 'peripheral'
SELECT COUNT(*) FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.t_bil > normal_range AND laboratory.ana_pattern = 'peripheral'",SELECT COUNT(*) FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.t_bil > normal_range AND laboratory.ana_pattern = 'peripheral',0.0
249,1211,Provide the ID and age of patient with lactate dehydrogenase (LDH) between 100-300 index above the normal range.,thrombosis_prediction,moderate,"SELECT DISTINCT T1.ID, STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.LDH > 600 AND T2.LDH < 800",7,"SELECT p.id, TIMESTAMPDIFF(YEAR, p.birthday, CURDATE()) AS age FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.ldh BETWEEN 100 AND 300
SELECT patient.id, (julianday('now') - julianday(patient.birthday)) / 365.25 AS age FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.ldh BETWEEN 100 AND 300
SELECT patient.id, (julianday('now') - julianday(patient.birthday)) / 365.25 AS age FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.ldh BETWEEN 100 AND 300
SELECT patient.id, (julianday('now') - julianday(patient.birthday)) / 365.25 AS age FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.ldh BETWEEN 100 AND 300
SELECT p.id, TIMESTAMPDIFF(YEAR, p.birthday, CURDATE()) AS age FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.ldh BETWEEN 100 AND 300
SELECT p.id, TIMESTAMPDIFF(YEAR, p.birthday, CURDATE()) AS age FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.ldh BETWEEN 100 AND 300
SELECT patient.id, (julianday('now') - julianday(patient.birthday)) / 365.25 AS age FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.ldh BETWEEN 100 AND 300","SELECT patient.id, (julianday('now') - julianday(patient.birthday)) / 365.25 AS age FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.ldh BETWEEN 100 AND 300",0.0
