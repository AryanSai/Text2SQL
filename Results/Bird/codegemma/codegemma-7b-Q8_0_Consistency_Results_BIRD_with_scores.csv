Unnamed: 0,Qid,Question,Db_Id,Difficulty,Query Gold,Repeated,Query Generated,Most Frequent Query,Execution Accuracy
0,306,Which molecules have triple bonds and list all the elements they contain.,toxicology,challenging,"SELECT DISTINCT T1.molecule_id, T2.element FROM bond AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#'",7,"SELECT DISTINCT element FROM atom a, bond b, connected c, molecule m WHERE a.atom_id = c.atom_id AND b.bond_id = c.bond_id AND m.molecule_id = a.molecule_id AND b.bond_type = 'triple'
SELECT DISTINCT element FROM atom a, bond b, connected c, molecule m WHERE a.atom_id = c.atom_id AND b.bond_id = c.bond_id AND b.bond_type = 'triple' AND m.molecule_id = a.molecule_id AND m.molecule_id = b.molecule_id
SELECT DISTINCT element FROM atom a, bond b, connected c, molecule m WHERE a.atom_id = c.atom_id AND b.bond_id = c.bond_id AND b.bond_type = 'triple' AND a.molecule_id = m.molecule_id
SELECT DISTINCT element FROM atom a, bond b, connected c, molecule m WHERE a.atom_id = c.atom_id AND b.bond_id = c.bond_id AND m.molecule_id = a.molecule_id AND b.bond_type = 'triple'
SELECT DISTINCT element FROM atom WHERE molecule_id IN (     SELECT molecule_id     FROM bond     WHERE bond_type = 'triple' ) ORDER BY element
SELECT DISTINCT element FROM atom WHERE molecule_id IN (     SELECT molecule_id     FROM bond     WHERE bond_type = 'triple' ) ORDER BY element
SELECT DISTINCT element FROM atom WHERE molecule_id IN (     SELECT molecule_id     FROM bond     WHERE bond_type = 'triple' )","SELECT DISTINCT element FROM atom a, bond b, connected c, molecule m WHERE a.atom_id = c.atom_id AND b.bond_id = c.bond_id AND m.molecule_id = a.molecule_id AND b.bond_type = 'triple'",0.0
1,1261,How many patients with a normal RF don't have thrombosis?,thrombosis_prediction,simple,SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RF < 20 AND T1.Thrombosis = 0,7,"SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM examination WHERE rf = 'normal') AND id NOT IN (SELECT id FROM laboratory WHERE thrombosis = 'yes')
SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM examination WHERE rf = 'normal') AND id NOT IN (SELECT id FROM laboratory WHERE thrombosis = 'yes')
SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM examination WHERE rf = 'normal') AND id NOT IN (SELECT id FROM laboratory WHERE thrombosis = 'yes')
SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM examination WHERE rf = 'normal') AND id NOT IN (SELECT id FROM laboratory WHERE thrombosis = 'yes')
SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM examination WHERE rf = 'normal') AND id NOT IN (SELECT id FROM laboratory WHERE thrombosis = 'yes')
SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM examination WHERE rf = 'normal') AND id NOT IN (SELECT id FROM laboratory WHERE thrombosis = 'yes')
SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM examination WHERE rf = 'normal') AND id NOT IN (SELECT id FROM laboratory WHERE thrombosis = 'yes')",SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM examination WHERE rf = 'normal') AND id NOT IN (SELECT id FROM laboratory WHERE thrombosis = 'yes'),0.0
2,601,What is the score and the link type ID for post ID 395?,codebase_community,simple,"SELECT T1.Score, T2.LinkTypeId FROM posts AS T1 INNER JOIN postLinks AS T2 ON T1.Id = T2.PostId WHERE T2.PostId = 395",7,"SELECT score, linktypeid FROM postlinks WHERE postid = 395
SELECT score, linktypeid FROM postlinks WHERE postid = 395
SELECT score, linktypeid FROM postlinks WHERE postid = 395
SELECT score, linktypeid FROM postlinks WHERE postid = 395
SELECT score, linktypeid FROM postlinks WHERE postid = 395
SELECT score, linktypeid FROM postlinks WHERE postid = 395
SELECT score, linktypeid FROM postlinks WHERE postid = 395","SELECT score, linktypeid FROM postlinks WHERE postid = 395",0.0
3,245,What is the average number of bonds the atoms with the element iodine have?,toxicology,moderate,SELECT CAST(COUNT(T2.bond_id) AS REAL) / COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element = 'i',7,"SELECT AVG(bond_count) FROM (     SELECT COUNT(*) AS bond_count     FROM connected     WHERE atom_id IN (         SELECT atom_id         FROM atom         WHERE element = 'I'     )     GROUP BY atom_id )
SELECT AVG(bond_count) FROM (     SELECT COUNT(*) AS bond_count     FROM connected     WHERE atom_id IN (         SELECT atom_id         FROM atom         WHERE element = 'I'     )     GROUP BY atom_id )
SELECT AVG(bond_count) FROM (     SELECT COUNT(*) AS bond_count     FROM connected     WHERE atom_id IN (         SELECT atom_id         FROM atom         WHERE element = 'I'     )     GROUP BY atom_id )
SELECT AVG(bond_count) FROM (     SELECT COUNT(*) AS bond_count     FROM atom     JOIN connected ON atom.atom_id = connected.atom_id     WHERE atom.element = 'I'     GROUP BY atom.atom_id )
SELECT AVG(bond_count) FROM (     SELECT COUNT(*) AS bond_count     FROM connected     WHERE atom_id IN (         SELECT atom_id         FROM atom         WHERE element = 'I'     )     GROUP BY atom_id )
SELECT AVG(bond_count) FROM (     SELECT COUNT(*) AS bond_count     FROM connected     WHERE atom_id IN (         SELECT atom_id         FROM atom         WHERE element = 'I'     )     GROUP BY atom_id )
SELECT AVG(bond_count) FROM (     SELECT COUNT(*) AS bond_count     FROM connected     WHERE atom_id IN (         SELECT atom_id         FROM atom         WHERE element = 'I'     )     GROUP BY atom_id )",SELECT AVG(bond_count) FROM (     SELECT COUNT(*) AS bond_count     FROM connected     WHERE atom_id IN (         SELECT atom_id         FROM atom         WHERE element = 'I'     )     GROUP BY atom_id ),0.0
4,215,How many atoms with iodine and with sulfur type elements are there in single bond molecules?,toxicology,challenging,"SELECT COUNT(DISTINCT CASE WHEN T1.element = 'i' THEN T1.atom_id ELSE NULL END) AS iodine_nums , COUNT(DISTINCT CASE WHEN T1.element = 's' THEN T1.atom_id ELSE NULL END) AS sulfur_nums FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '-'",7,"SELECT COUNT(*) FROM atom WHERE element IN ('I', 'S') AND atom_id IN (     SELECT atom_id     FROM connected     WHERE bond_id IN (         SELECT bond_id         FROM bond         WHERE bond_type = 'single'     ) )
SELECT COUNT(*) FROM atom a, bond b, connected c WHERE a.molecule_id = b.molecule_id AND a.molecule_id = c.molecule_id AND a.atom_id = c.atom_id AND a.atom_id = c.atom_id2 AND b.bond_type = 'single' AND (a.element = 'I' OR a.element = 'S')
SELECT COUNT(*) FROM atom WHERE element IN ('I', 'S') AND atom_id IN (     SELECT atom_id     FROM connected     WHERE bond_id IN (         SELECT bond_id         FROM bond         WHERE bond_type = 'single'     ) )
SELECT COUNT(*) FROM atom WHERE element IN ('I', 'S') AND atom_id IN (     SELECT atom_id     FROM connected     WHERE bond_id IN (         SELECT bond_id         FROM bond         WHERE bond_type = 'single'     ) )
SELECT COUNT(*) FROM atom WHERE element = 'I' OR element = 'S' AND atom_id IN (     SELECT atom_id     FROM connected     WHERE bond_id IN (         SELECT bond_id         FROM bond         WHERE bond_type = 'single'     ) )
SELECT COUNT(*) FROM atom a, bond b, connected c, molecule m WHERE a.molecule_id = m.molecule_id AND b.molecule_id = m.molecule_id AND c.molecule_id = m.molecule_id AND a.atom_id = c.atom_id AND c.atom_id2 = b.atom_id AND a.element = 'I' AND b.bond_type = 'single' AND c.bond_id = b.bond_id
SELECT COUNT(*) FROM atom WHERE element IN ('I', 'S') AND atom_id IN (     SELECT atom_id     FROM connected     WHERE bond_id IN (         SELECT bond_id         FROM bond         WHERE bond_type = 'single'     ) )","SELECT COUNT(*) FROM atom WHERE element IN ('I', 'S') AND atom_id IN (     SELECT atom_id     FROM connected     WHERE bond_id IN (         SELECT bond_id         FROM bond         WHERE bond_type = 'single'     ) )",0.0
5,1299,"Among the patients with the normal level of triglyceride, how many of them have other symptoms observed?",thrombosis_prediction,simple,SELECT COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.TG < 200 AND T1.Symptoms IS NOT NULL,7,"SELECT COUNT(*) FROM examination WHERE examination.symptoms = 'other symptoms' AND examination.diagnosis = 'normal level of triglyceride'
SELECT COUNT(*) FROM examination WHERE examination.symptoms IS NOT NULL AND examination.diagnosis = 'normal'
SELECT COUNT(*) FROM examination WHERE examination.symptoms IS NOT NULL AND examination.diagnosis = 'normal'
SELECT COUNT(*) FROM examination WHERE examination.symptoms IS NOT NULL AND examination.symptoms != '' AND examination.symptoms != 'None' AND examination.symptoms != 'No' AND examination.symptoms != 'No symptoms' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != '
SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM examination WHERE symptoms IS NOT NULL) AND id IN (SELECT id FROM laboratory WHERE tg IS NOT NULL)
SELECT COUNT(*) FROM examination WHERE examination.symptoms IS NOT NULL AND examination.diagnosis = 'normal'
SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM examination WHERE symptoms IS NOT NULL) AND id IN (SELECT id FROM laboratory WHERE tg = 'normal')",SELECT COUNT(*) FROM examination WHERE examination.symptoms IS NOT NULL AND examination.diagnosis = 'normal',0.0
6,842,Calculate the average height of all neutral superheroes.,superhero,simple,SELECT AVG(T1.height_cm) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id WHERE T2.alignment = 'Neutral',7,"SELECT AVG(height_cm) FROM superhero WHERE alignment_id = 1
SELECT AVG(height_cm) FROM superhero WHERE alignment_id = 1
SELECT AVG(height_cm) FROM superhero WHERE alignment_id = 1
SELECT AVG(height_cm) FROM superhero WHERE alignment_id = 1
SELECT AVG(height_cm) FROM superhero WHERE alignment_id = 1
SELECT AVG(height_cm) FROM superhero WHERE alignment_id = 1
SELECT AVG(height_cm) FROM superhero WHERE alignment_id = 1",SELECT AVG(height_cm) FROM superhero WHERE alignment_id = 1,0.0
7,1149,Are there more in-patient or outpatient who were male? What is the deviation in percentage?,thrombosis_prediction,moderate,SELECT CAST(SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN Admission = '-' THEN 1 ELSE 0 END) FROM Patient WHERE SEX = 'M',7,"SELECT COUNT(*) FROM patient WHERE sex = 'male'
SELECT COUNT(*) FROM patient WHERE sex = 'male'
SELECT COUNT(*) FROM patient WHERE sex = 'male'
SELECT COUNT(*) FROM patient WHERE sex = 'male'
SELECT COUNT(*) FROM patient WHERE sex = 'male'
SELECT COUNT(*) FROM patient WHERE sex = 'male'
SELECT COUNT(*) FROM patient WHERE sex = 'male'",SELECT COUNT(*) FROM patient WHERE sex = 'male',0.0
8,521,"Among the cards whose version of frame style is 1997, what is the status of the card illustrated by D. Alexander Gregory in legacy play format that has sensitive content or Wizards of the Coast?",card_games,challenging,SELECT DISTINCT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T2.uuid = T1.uuid WHERE T1.frameVersion = 1997 AND T1.hasContentWarning = 1 AND T1.artist = 'D. Alexander Gregory' AND T2.format = 'legacy',7,"SELECT cards.name, cards.id, cards.artist, cards.flavortext, cards.frameversion, cards.layout, cards.manacost, cards.multiverseid, cards.name, cards.number, cards.originaltext, cards.originaltype, cards.power, cards.rarity, cards.text, cards.toughness, cards.type, cards.uuid, cards.watermark, legalities.status, sets.code, sets.name, sets.releasedate, sets.type, set_translations.language, set_translations.translation, foreign_data.flavortext, foreign_data.language, foreign_data.name, foreign_data.text, foreign_data.type, rulings.date, rulings.text FROM cards JOIN legalities ON cards.id = legalities.id JOIN sets ON cards.setcode = sets.code JOIN set_translations ON cards.setcode = set_translations.setcode JOIN foreign_data ON cards.id = foreign_data.id JOIN rulings ON cards.id = rulings.id WHERE cards.frameversion = '1997' AND legalities.format = 'legacy' AND cards.hascontentwarning = 1 AND cards.hasfoil = 1 AND cards.isfullart = 1 AND cards.isreprint = 1 AND cards.isreserved = 1
SELECT cards.name, cards.text, cards.flavortext, cards.flavorname, cards.flavortext, cards.layout, cards.manacost, cards.power, cards.toughness, cards.loyalty, cards.colors, cards.coloridentity, cards.colorindicator, cards.keywords, cards.types, cards.subtypes, cards.supertypes, cards.rarity, cards.isreprint, cards.isreserved, cards.istimeshifted, cards.isfullart, cards.istextless, cards.isoversized, cards.ispromo, cards.isalternative, cards.isstarter, cards.isstoryspotlight, cards.hasfoil, cards.hasnonfoil, cards.hascontentwarning, cards.hasalternativedecklimit, cards.isoriginaltextless, cards.isoriginalfullart, cards.isoriginalstarter, cards.isoriginaltimeshifted, cards.isoriginaloversized, cards.isoriginalpromo, cards.isoriginalalternative, cards.isoriginalstarter, cards.isoriginalstoryspotlight, cards.isoriginalhasfoil, cards.isoriginalhasnonfoil, cards.isoriginalhascontentwarning, cards.isoriginalhasalternativedecklimit, cards.isoriginalisoriginaltextless, cards.isoriginalisoriginalfullart, cards.isoriginalisoriginalstarter, cards.isoriginalisoriginaltimeshifted, cards.isoriginalis
SELECT cards.name, cards.id, cards.artist, cards.flavortext, cards.frameversion, cards.layout, cards.manacost, cards.multiverseid, cards.name, cards.number, cards.originalreleasedate, cards.originaltext, cards.originaltype, cards.power, cards.rarity, cards.text, cards.toughness, cards.type, cards.uuid, cards.watermark, legalities.format, legalities.status, sets.code, sets.name, sets.releasedate, sets.type, set_translations.language, set_translations.translation, foreign_data.flavortext, foreign_data.language, foreign_data.name, foreign_data.text, foreign_data.type, rulings.date, rulings.text FROM cards JOIN legalities ON cards.id = legalities.id JOIN sets ON cards.setcode = sets.code JOIN set_translations ON sets.code = set_translations.setcode JOIN foreign_data ON cards.id = foreign_data.id JOIN rulings ON cards.id = rulings.id WHERE cards.frameversion = '1997' AND legalities.format = 'legacy' AND legalities.status = 'legal' AND cards.hascontentwarning = 1 AND cards.isreprint = 0 AND cards.isreserved = 
SELECT cards.name, cards.artist, cards.flavortext, cards.text, cards.type, cards.colors, cards.coloridentity, cards.layout, cards.frameversion, cards.istextless, cards.istimeshifted, cards.isreprint, cards.isreserved, cards.isoversized, cards.ispromo, cards.isfullart, cards.isalternative, cards.isstarter, cards.isstoryspotlight, cards.hascontentwarning, cards.hasfoil, cards.hasnonfoil, cards.hasalternativedecklimit, cards.isoriginaltextless, cards.isoriginalfullart, cards.isoriginaltimeshifted, cards.isoriginalreprint, cards.isoriginalreserved, cards.isoriginaloversized, cards.isoriginalpromo, cards.isoriginalstarter, cards.isoriginalstoryspotlight, cards.hasoriginalcontentwarning, cards.hasoriginalfoil, cards.hasoriginalnonfoil, cards.hasoriginalalternativedecklimit, cards.isoriginaltextless, cards.isoriginalfullart, cards.isoriginaltimeshifted, cards.isoriginalreprint, cards.isoriginalreserved, cards.isoriginaloversized, cards.isoriginalpromo, cards.isoriginalstarter, cards.isoriginalstoryspotlight, cards.hasoriginalcontentwarning, cards.hasoriginalfoil, cards.hasoriginalnonfoil, cards.hasoriginalalternative
SELECT cards.name, cards.flavortext, cards.text, cards.type, cards.rarity, cards.artist, cards.layout, cards.frameversion, cards.istextless, cards.istimeshifted, cards.isreprint, cards.isreserved, cards.isoversized, cards.ispromo, cards.isfullart, cards.isfoil, cards.isnonfoil, cards.hasfoil, cards.hasnonfoil, cards.hasalternativedecklimit, cards.hascontentwarning, cards.isalternative, cards.isstarter, cards.isstoryspotlight, cards.istimeshifted, cards.istextless, cards.istimeshifted, cards.istextless, cards.istimeshifted, cards.istextless, cards.istimeshifted, cards.istextless, cards.istimeshifted, cards.istextless, cards.istimeshifted, cards.istextless, cards.istimeshifted, cards.istextless, cards.istimeshifted, cards.istextless, cards.istimeshifted, cards.istextless, cards.istimeshifted, cards.istextless, cards.istimeshifted, cards.istextless, cards.istimeshifted, cards.istextless, cards.istimeshifted, cards.istextless, cards.
SELECT cards.name, cards.artist, cards.flavortext, cards.text, cards.type, cards.rarity, cards.layout, cards.manacost, cards.power, cards.toughness, cards.loyalty, cards.colors, cards.coloridentity, cards.colorindicator, cards.keywords, cards.frameversion, cards.frameeffects, cards.istextless, cards.isoversized, cards.isreprint, cards.isreserved, cards.istimeshifted, cards.isfullart, cards.ispromo, cards.isalternative, cards.isstarter, cards.isstoryspotlight, cards.iscontentwarning, cards.hasfoil, cards.hasnonfoil, cards.hasalternativedecklimit, cards.hascontentwarning, cards.isoriginaltextless, cards.isoriginalfullart, cards.isoriginalpromo, cards.isoriginalstarter, cards.isoriginalstoryspotlight, cards.isoriginalcontentwarning, cards.isoriginalfoil, cards.isoriginalnonfoil, cards.isoriginalalternativedecklimit, cards.isoriginalcontentwarning, cards.isoriginaltextless, cards.isoriginalfullart, cards.isoriginalpromo, cards.isoriginalstarter, cards.isoriginalstoryspotlight, cards.isoriginalcontentwarning, cards.isoriginalfoil, cards.isoriginalnonfoil, cards.isoriginalalternativedecklimit, cards.isoriginalcontentwarning, cards
SELECT * FROM cards WHERE frameversion = '1997' AND status = 'legacy' AND hascontentwarning = 'Wizards of the Coast' AND artist = 'D. Alexander Gregory'","SELECT cards.name, cards.id, cards.artist, cards.flavortext, cards.frameversion, cards.layout, cards.manacost, cards.multiverseid, cards.name, cards.number, cards.originaltext, cards.originaltype, cards.power, cards.rarity, cards.text, cards.toughness, cards.type, cards.uuid, cards.watermark, legalities.status, sets.code, sets.name, sets.releasedate, sets.type, set_translations.language, set_translations.translation, foreign_data.flavortext, foreign_data.language, foreign_data.name, foreign_data.text, foreign_data.type, rulings.date, rulings.text FROM cards JOIN legalities ON cards.id = legalities.id JOIN sets ON cards.setcode = sets.code JOIN set_translations ON cards.setcode = set_translations.setcode JOIN foreign_data ON cards.id = foreign_data.id JOIN rulings ON cards.id = rulings.id WHERE cards.frameversion = '1997' AND legalities.format = 'legacy' AND cards.hascontentwarning = 1 AND cards.hasfoil = 1 AND cards.isfullart = 1 AND cards.isreprint = 1 AND cards.isreserved = 1",0.0
9,1526,"For the customer who paid 634.8 in 2012/8/25, what was the consumption decrease rate from Year 2012 to 2013?",debit_card_specializing,challenging,"SELECT CAST(SUM(IIF(SUBSTR(Date, 1, 4) = '2012', Consumption, 0)) - SUM(IIF(SUBSTR(Date, 1, 4) = '2013', Consumption, 0)) AS FLOAT) / SUM(IIF(SUBSTR(Date, 1, 4) = '2012', Consumption, 0)) FROM yearmonth WHERE CustomerID = ( SELECT T1.CustomerID FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-25' AND T1.Price = 634.8 )",7,"SELECT (SELECT consumption FROM yearmonth WHERE customerid = (SELECT customerid FROM transactions_1k WHERE amount = 634.8 AND date = '2012/8/25') AND date = '2013/1/1') - (SELECT consumption FROM yearmonth WHERE customerid = (SELECT customerid FROM transactions_1k WHERE amount = 634.8 AND date = '2012/8/25') AND date = '2012/1/1') FROM transactions_1k WHERE amount = 634.8 AND date = '2012/8/25'
SELECT (SELECT consumption FROM yearmonth WHERE customerid = (SELECT customerid FROM transactions_1k WHERE date = '2012/8/25' AND amount = 634.8) AND date = '2013/1/1') - (SELECT consumption FROM yearmonth WHERE customerid = (SELECT customerid FROM transactions_1k WHERE date = '2012/8/25' AND amount = 634.8) AND date = '2012/1/1') FROM transactions_1k WHERE date = '2012/8/25' AND amount = 634.8
SELECT (SELECT consumption FROM yearmonth WHERE customerid = (SELECT customerid FROM transactions_1k WHERE amount = 634.8 AND date = '2012/8/25') AND date = '2013/1/1') - (SELECT consumption FROM yearmonth WHERE customerid = (SELECT customerid FROM transactions_1k WHERE amount = 634.8 AND date = '2012/8/25') AND date = '2012/1/1') FROM transactions_1k WHERE amount = 634.8 AND date = '2012/8/25'
SELECT (SELECT consumption FROM yearmonth WHERE customerid = (SELECT customerid FROM transactions_1k WHERE amount = 634.8 AND date = '2012/8/25') AND date = '2013/1/1') - (SELECT consumption FROM yearmonth WHERE customerid = (SELECT customerid FROM transactions_1k WHERE amount = 634.8 AND date = '2012/8/25') AND date = '2012/1/1') FROM transactions_1k WHERE amount = 634.8 AND date = '2012/8/25'
SELECT (SELECT consumption FROM yearmonth WHERE customerid = (SELECT customerid FROM transactions_1k WHERE amount = 634.8 AND date = '2012/8/25') AND date = '2013/1/1') - (SELECT consumption FROM yearmonth WHERE customerid = (SELECT customerid FROM transactions_1k WHERE amount = 634.8 AND date = '2012/8/25') AND date = '2012/1/1') FROM transactions_1k WHERE amount = 634.8 AND date = '2012/8/25'
SELECT (SELECT consumption FROM yearmonth WHERE customerid = (SELECT customerid FROM transactions_1k WHERE amount = 634.8 AND date = '2012/8/25') AND date = '2013/1/1') - (SELECT consumption FROM yearmonth WHERE customerid = (SELECT customerid FROM transactions_1k WHERE amount = 634.8 AND date = '2012/8/25') AND date = '2012/1/1') FROM transactions_1k WHERE amount = 634.8 AND date = '2012/8/25'
SELECT (SELECT consumption FROM yearmonth WHERE customerid = (SELECT customerid FROM transactions_1k WHERE date = '2012/8/25' AND amount = 634.8) AND date = '2013/1/1') - (SELECT consumption FROM yearmonth WHERE customerid = (SELECT customerid FROM transactions_1k WHERE date = '2012/8/25' AND amount = 634.8) AND date = '2012/1/1') FROM transactions_1k WHERE date = '2012/8/25' AND amount = 634.8",SELECT (SELECT consumption FROM yearmonth WHERE customerid = (SELECT customerid FROM transactions_1k WHERE amount = 634.8 AND date = '2012/8/25') AND date = '2013/1/1') - (SELECT consumption FROM yearmonth WHERE customerid = (SELECT customerid FROM transactions_1k WHERE amount = 634.8 AND date = '2012/8/25') AND date = '2012/1/1') FROM transactions_1k WHERE amount = 634.8 AND date = '2012/8/25',0.0
10,776,Provide the hero name and race of Charles Chandler.,superhero,simple,"SELECT T1.superhero_name, T2.race FROM superhero AS T1 INNER JOIN race AS T2 ON T1.race_id = T2.id WHERE T1.full_name = 'Charles Chandler'",7,"SELECT superhero.superhero_name, race.race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.full_name = 'Charles Chandler'
SELECT superhero.superhero_name, race.race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.full_name = 'Charles Chandler'
SELECT superhero.superhero_name, race.race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.full_name = 'Charles Chandler'
SELECT superhero.superhero_name, race.race FROM superhero INNER JOIN race ON superhero.race_id = race.id WHERE superhero.full_name = 'Charles Chandler'
SELECT superhero.superhero_name, race.race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.full_name = 'Charles Chandler'
SELECT superhero.superhero_name, race.race FROM superhero INNER JOIN race ON superhero.race_id = race.id WHERE superhero.full_name = 'Charles Chandler'
SELECT superhero.superhero_name, race.race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.full_name = 'Charles Chandler'","SELECT superhero.superhero_name, race.race FROM superhero JOIN race ON superhero.race_id = race.id WHERE superhero.full_name = 'Charles Chandler'",1.0
11,1114,What was the average overall rating for Marko Arnautovic from 2007/2/22 to 2016/4/21?,european_football_2,challenging,"SELECT CAST(SUM(t2.overall_rating) AS REAL) / COUNT(t2.id) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_fifa_api_id = t2.player_fifa_api_id WHERE t1.player_name = 'Marko Arnautovic' AND SUBSTR(t2.`date`, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21'",7,"SELECT AVG(overall_rating) FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Marko Arnautovic') AND date BETWEEN '2007-02-22' AND '2016-04-21'
SELECT AVG(overall_rating) FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Marko Arnautovic') AND date BETWEEN '2007-02-22' AND '2016-04-21'
SELECT AVG(overall_rating) FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Marko Arnautovic') AND date BETWEEN '2007-02-22' AND '2016-04-21'
SELECT AVG(overall_rating) FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Marko Arnautovic') AND date BETWEEN '2007-02-22' AND '2016-04-21'
SELECT AVG(overall_rating) FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Marko Arnautovic') AND date BETWEEN '2007-02-22' AND '2016-04-21'
SELECT AVG(overall_rating) FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Marko Arnautovic') AND date BETWEEN '2007-02-22' AND '2016-04-21'
SELECT AVG(overall_rating) FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Marko Arnautovic') AND date BETWEEN '2007-02-22' AND '2016-04-21'",SELECT AVG(overall_rating) FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Marko Arnautovic') AND date BETWEEN '2007-02-22' AND '2016-04-21',0.0
12,1403,Indicate the name of the closed event whose cost has exceeded the budget the most.,student_club,moderate,SELECT T2.event_name FROM budget AS T1 INNER JOIN event AS T2 ON T2.event_id = T1.link_to_event WHERE T1.event_status = 'Closed' AND T1.remaining < 0 ORDER BY T1.remaining LIMIT 1,7,"SELECT event_name FROM event WHERE cost > budget ORDER BY cost DESC LIMIT 1
SELECT event_name FROM event WHERE event_id = (SELECT link_to_event FROM budget WHERE spent > amount)
SELECT event_name FROM event WHERE event_id IN (SELECT link_to_event FROM budget WHERE spent > amount)
SELECT event_name FROM event WHERE event_id IN (SELECT link_to_event FROM budget WHERE spent > amount)
SELECT event_name FROM event WHERE event_id IN (SELECT link_to_event FROM budget WHERE spent > amount)
SELECT event_name FROM event WHERE event_id IN (SELECT link_to_event FROM budget WHERE spent > amount)
SELECT event_name FROM event WHERE event_id = (SELECT link_to_event FROM budget WHERE spent > amount)",SELECT event_name FROM event WHERE event_id IN (SELECT link_to_event FROM budget WHERE spent > amount),0.0
13,733,How many gold-eyed superheroes did Marvel Comics publish?,superhero,moderate,SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN colour AS T3 ON T1.eye_colour_id = T3.id WHERE T2.publisher_name = 'Marvel Comics' AND T3.colour = 'Gold',7,"SELECT COUNT(*) FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'Gold')
SELECT COUNT(*) FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'Gold')
SELECT COUNT(*) FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'Gold')
SELECT COUNT(*) FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'Gold')
SELECT COUNT(*) FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'Gold')
SELECT COUNT(*) FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'Gold')
SELECT COUNT(*) FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'Gold')",SELECT COUNT(*) FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'Gold'),0.0
14,298,Calculate the percentage of molecules containing carcinogenic compounds that element is hydrogen.,toxicology,moderate,SELECT CAST(COUNT(CASE WHEN T1.element = 'h' AND T2.label = '+' THEN T2.molecule_id ELSE NULL END) AS REAL) * 100 / COUNT(T2.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id,7,"NULL
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM molecule) FROM molecule JOIN atom ON atom.molecule_id = molecule.molecule_id JOIN connected ON connected.atom_id = atom.atom_id JOIN bond ON bond.bond_id = connected.bond_id WHERE bond.bond_type = 'C' AND atom.element = 'H'
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM molecule) FROM molecule JOIN atom ON atom.molecule_id = molecule.molecule_id JOIN connected ON connected.atom_id = atom.atom_id JOIN bond ON bond.bond_id = connected.bond_id WHERE bond.bond_type = 'carcinogenic' AND atom.element = 'hydrogen'
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM molecule) FROM molecule JOIN atom ON atom.molecule_id = molecule.molecule_id JOIN connected ON connected.atom_id = atom.atom_id JOIN bond ON bond.bond_id = connected.bond_id WHERE bond.bond_type = 'C' AND atom.element = 'H'
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM molecule) FROM molecule JOIN atom ON atom.molecule_id = molecule.molecule_id JOIN connected ON connected.atom_id = atom.atom_id JOIN bond ON bond.bond_id = connected.bond_id WHERE bond.bond_type = 'carcinogenic' AND atom.element = 'hydrogen'
SELECT COUNT(*) FROM molecule WHERE label LIKE '%carcinogenic%') / (SELECT COUNT(*) FROM molecule) * 100 FROM     atom WHERE     element = 'H' GROUP BY     atom_id HAVING     COUNT(*) > 1
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM molecule) FROM molecule JOIN atom ON atom.molecule_id = molecule.molecule_id JOIN connected ON connected.atom_id = atom.atom_id JOIN bond ON bond.bond_id = connected.bond_id WHERE bond.bond_type = 'carcinogenic' AND atom.element = 'hydrogen'",SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM molecule) FROM molecule JOIN atom ON atom.molecule_id = molecule.molecule_id JOIN connected ON connected.atom_id = atom.atom_id JOIN bond ON bond.bond_id = connected.bond_id WHERE bond.bond_type = 'carcinogenic' AND atom.element = 'hydrogen',0.0
15,268,What are the elements for bond id TR001_10_11?,toxicology,challenging,SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR001_10_11',7,"SELECT atom.atom_id, atom.molecule_id, atom.element, bond.bond_id, bond.molecule_id, bond.bond_type, connected.atom_id, connected.atom_id2, connected.bond_id, molecule.molecule_id, molecule.label FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id JOIN connected ON atom.atom_id = connected.atom_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE bond.bond_id = 'TR001_10_11'
SELECT atom.element, bond.bond_type FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_id = 'TR001_10_11'
SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_id = 'TR001_10_11'
SELECT atom.element FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id INNER JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_id = 'TR001_10_11'
SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_id = 'TR001_10_11'
SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_id = 'TR001_10_11'
SELECT atom.element FROM atom, bond, connected, molecule WHERE atom.atom_id = connected.atom_id AND atom.atom_id2 = connected.atom_id2 AND bond.bond_id = connected.bond_id AND bond.bond_id = 'TR001_10_11' AND molecule.molecule_id = atom.molecule_id AND molecule.molecule_id = bond.molecule_id",SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_id = 'TR001_10_11',0.0
16,1448,Find the name and date of events with expenses for pizza that were more than fifty dollars but less than a hundred dollars.,student_club,challenging,"SELECT T1.event_name, T1.event_date FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T3.expense_description = 'Pizza' AND T3.cost > 50 AND T3.cost < 100",7,"SELECT event_name, event_date FROM event WHERE event_id IN (SELECT link_to_event FROM budget WHERE category = 'pizza' AND spent > 50 AND spent < 100)
SELECT event_name, event_date FROM event WHERE event_id IN (SELECT link_to_event FROM budget WHERE category = 'pizza' AND spent > 50 AND spent < 100)
SELECT event_name, event_date FROM event WHERE event_id IN (SELECT link_to_event FROM budget WHERE category = 'pizza' AND spent > 50 AND spent < 100)
SELECT event_name, event_date FROM event WHERE event_id IN (SELECT link_to_event FROM budget WHERE spent > 50 AND spent < 100)
SELECT event_name, event_date FROM event WHERE event_id IN (     SELECT link_to_event     FROM budget     WHERE category = 'pizza'     AND spent > 50     AND spent < 100 )
SELECT event_name, event_date FROM event WHERE event_id IN (SELECT link_to_event FROM budget WHERE spent > 50 AND spent < 100)
SELECT event_name, event_date FROM event WHERE event_id IN (SELECT link_to_event FROM budget WHERE category = 'Pizza' AND spent > 50 AND spent < 100)","SELECT event_name, event_date FROM event WHERE event_id IN (SELECT link_to_event FROM budget WHERE category = 'pizza' AND spent > 50 AND spent < 100)",0.0
17,835,"Among all superheroes in Marvel Comics, identify the percentage of 'good' superheroes.",superhero,challenging,SELECT CAST(COUNT(CASE WHEN T3.alignment = 'Good' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T2.publisher_name = 'Marvel Comics',7,"SELECT (COUNT(CASE WHEN alignment.alignment = 'good' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_good FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id
SELECT (COUNT(CASE WHEN alignment.alignment = 'good' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_good FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id
SELECT (COUNT(CASE WHEN alignment.alignment = 'good' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_good FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id
SELECT (COUNT(CASE WHEN alignment.alignment = 'good' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_good FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id
SELECT (COUNT(CASE WHEN alignment.alignment = 'good' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_good FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id
SELECT (COUNT(CASE WHEN alignment.alignment = 'good' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_good FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id
SELECT (COUNT(CASE WHEN alignment.alignment = 'good' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_good FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id",SELECT (COUNT(CASE WHEN alignment.alignment = 'good' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_good FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id,0.0
18,773,"Which superhero has the same eyes, hair and skin colour? Indicate the publisher of the superhero.",superhero,challenging,"SELECT T1.superhero_name, T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.eye_colour_id = T1.hair_colour_id AND T1.eye_colour_id = T1.skin_colour_id",7,"SELECT superhero.superhero_name, publisher.publisher_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.eye_colour_id = superhero.hair_colour_id AND superhero.hair_colour_id = superhero.skin_colour_id
SELECT DISTINCT superhero.superhero_name, publisher.publisher_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id JOIN colour ON superhero.eye_colour_id = colour.id AND superhero.hair_colour_id = colour.id AND superhero.skin_colour_id = colour.id WHERE superhero.eye_colour_id = superhero.hair_colour_id AND superhero.hair_colour_id = superhero.skin_colour_id
NULL
SELECT superhero.superhero_name, publisher.publisher_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.eye_colour_id = superhero.hair_colour_id AND superhero.hair_colour_id = superhero.skin_colour_id
SELECT superhero.superhero_name, publisher.publisher_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.eye_colour_id = superhero.hair_colour_id AND superhero.hair_colour_id = superhero.skin_colour_id
SELECT superhero.superhero_name, publisher.publisher_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.eye_colour_id = superhero.hair_colour_id AND superhero.eye_colour_id = superhero.skin_colour_id
SELECT DISTINCT superhero.superhero_name, publisher.publisher_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id JOIN colour AS eye_colour ON superhero.eye_colour_id = eye_colour.id JOIN colour AS hair_colour ON superhero.hair_colour_id = hair_colour.id JOIN colour AS skin_colour ON superhero.skin_colour_id = skin_colour.id WHERE eye_colour.colour = hair_colour.colour AND hair_colour.colour = skin_colour.colour","SELECT superhero.superhero_name, publisher.publisher_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.eye_colour_id = superhero.hair_colour_id AND superhero.hair_colour_id = superhero.skin_colour_id",1.0
19,498,"What's the French name of the set of cards with ""Tendo Ice Bridge"" is in?",card_games,moderate,SELECT T2.translation FROM cards AS T1 INNER JOIN set_translations AS T2 ON T2.setCode = T1.setCode WHERE T1.name = 'Tendo Ice Bridge' AND T2.language = 'French' AND T2.translation IS NOT NULL,7,"SELECT name FROM sets WHERE code IN (SELECT setcode FROM cards WHERE name = 'Tendo Ice Bridge')
SELECT name FROM sets WHERE code = (SELECT setcode FROM cards WHERE name = 'Tendo Ice Bridge')
SELECT name FROM sets WHERE code = (SELECT setcode FROM cards WHERE name = 'Tendo Ice Bridge')
SELECT name FROM sets WHERE code IN (SELECT setcode FROM cards WHERE name = 'Tendo Ice Bridge')
SELECT name FROM sets WHERE code IN (SELECT setcode FROM cards WHERE name = 'Tendo Ice Bridge')
SELECT name FROM sets WHERE code = (SELECT setcode FROM cards WHERE name = 'Tendo Ice Bridge')
SELECT name FROM sets WHERE code = (SELECT setcode FROM cards WHERE name = 'Tendo Ice Bridge')",SELECT name FROM sets WHERE code = (SELECT setcode FROM cards WHERE name = 'Tendo Ice Bridge'),0.0
20,1195,What is the average blood albumin level for female patients with a PLT greater than 400 who have been diagnosed with SLE?,thrombosis_prediction,moderate,SELECT AVG(T2.ALB) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.PLT > 400 AND T1.Diagnosis = 'SLE' AND T1.SEX = 'F',7,"SELECT AVG(alb) FROM laboratory WHERE plt > 400 AND diagnosis = 'SLE' AND sex = 'F'
SELECT AVG(alb) FROM laboratory WHERE plt > 400 AND diagnosis = 'SLE' AND sex = 'F'
SELECT AVG(alb) FROM laboratory WHERE plt > 400 AND diagnosis = 'SLE' AND sex = 'F'
SELECT AVG(alb) FROM laboratory WHERE plt > 400 AND diagnosis = 'SLE' AND sex = 'female'
SELECT AVG(alb) FROM laboratory WHERE plt > 400 AND diagnosis = 'SLE' AND sex = 'female'
SELECT AVG(alb) FROM laboratory WHERE plt > 400 AND diagnosis = 'SLE' AND sex = 'F'
SELECT AVG(alb) FROM laboratory WHERE plt > 400 AND diagnosis = 'SLE' AND sex = 'female'",SELECT AVG(alb) FROM laboratory WHERE plt > 400 AND diagnosis = 'SLE' AND sex = 'F',0.0
21,942,What is the average fastest lap time in seconds for Lewis Hamilton in all the Formula_1 races?,formula_1,moderate,"SELECT AVG(CAST(SUBSTR(T2.fastestLapTime, 1, INSTR(T2.fastestLapTime, ':') - 1) AS INTEGER) * 60 + CAST(SUBSTR(T2.fastestLapTime, INSTR(T2.fastestLapTime, ':') + 1) AS REAL)) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.surname = 'Hamilton' AND T1.forename = 'Lewis'",7,"SELECT AVG(time) FROM laptimes WHERE driverid = (SELECT driverid FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton')
SELECT AVG(laptimes.milliseconds) FROM laptimes JOIN drivers ON laptimes.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'
SELECT AVG(milliseconds) FROM laptimes WHERE driverid = (SELECT driverid FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton')
SELECT AVG(time) FROM laptimes WHERE driverid = (SELECT driverid FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton')
SELECT AVG(milliseconds) FROM laptimes WHERE driverid = (SELECT driverid FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton')
SELECT AVG(laptimes.milliseconds) FROM laptimes JOIN drivers ON laptimes.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'
SELECT AVG(laptimes.milliseconds) FROM laptimes JOIN drivers ON laptimes.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'",SELECT AVG(laptimes.milliseconds) FROM laptimes JOIN drivers ON laptimes.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton',0.0
22,0,What is the highest eligible free rate for K-12 students in the schools in Alameda County?,california_schools,simple,SELECT `Free Meal Count (K-12)` / `Enrollment (K-12)` FROM frpm WHERE `County Name` = 'Alameda' ORDER BY (CAST(`Free Meal Count (K-12)` AS REAL) / `Enrollment (K-12)`) DESC LIMIT 1,7,"SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM : ['cdscode', 'academic year', 'county code', 'district code', 'school code', 'county name', 'district name', 'school name', 'district type', 'school type', 'educational option type', 'nslp provision status', 'charter school (y/n)', 'charter school number', 'charter funding type', 'irc', 'low grade', 'high grade', 'enrollment (k-12)', 'free meal count (k-12)', 'percent (%) eligible free (k-12)', 'frpm count (k
SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM : ['cdscode', 'academic year', 'county code', 'district code', 'school code', 'county name', 'district name', 'school name', 'district type', 'school type', 'educational option type', 'nslp provision status', 'charter school (y/n)', 'charter school number', 'charter funding type', 'irc', 'low grade', 'high grade', 'enrollment (k-12)', 'free meal count (k-12)', 'percent (%) eligible free (k-12)', 'frpm count (k
SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM : ['cdscode', 'academic year', 'county code', 'district code', 'school code', 'county name', 'district name', 'school name', 'district type', 'school type', 'educational option type', 'nslp provision status', 'charter school (y/n)', 'charter school number', 'charter funding type', 'irc', 'low grade', 'high grade', 'enrollment (k-12)', 'free meal count (k-12)', 'percent (%) eligible free (k-12)', 'frpm count (k
SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-
SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM : ['cdscode', 'academic year', 'county code', 'district code', 'school code', 'county name', 'district name', 'school name', 'district type', 'school type', 'educational option type', 'nslp provision status', 'charter school (y/n)', 'charter school number', 'charter funding type', 'irc', 'low grade', 'high grade', 'enrollment (k-12)', 'free meal count (k-12)', 'percent (%) eligible free (k-12)', 'frpm count (k
SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM : ['cdscode', 'academic year', 'county code', 'district code', 'school code', 'county name', 'district name', 'school name', 'district type', 'school type', 'educational option type', 'nslp provision status', 'charter school (y/n)', 'charter school number', 'charter funding type', 'irc', 'low grade', 'high grade', 'enrollment (k-12)', 'free meal count (k-12)', 'percent (%) eligible free (k-12)', 'frpm count (k
SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM : ['cdscode', 'academic year', 'county code', 'district code', 'school code', 'county name', 'district name', 'school name', 'district type', 'school type', 'educational option type', 'nslp provision status', 'charter school (y/n)', 'charter school number', 'charter funding type', 'irc', 'low grade', 'high grade', 'enrollment (k-12)', 'free meal count (k-12)', 'percent (%) eligible free (k-12)', 'frpm count (k","SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM : ['cdscode', 'academic year', 'county code', 'district code', 'school code', 'county name', 'district name', 'school name', 'district type', 'school type', 'educational option type', 'nslp provision status', 'charter school (y/n)', 'charter school number', 'charter funding type', 'irc', 'low grade', 'high grade', 'enrollment (k-12)', 'free meal count (k-12)', 'percent (%) eligible free (k-12)', 'frpm count (k",0.0
23,249,What are the elements of the atoms of TR144_8_19?,toxicology,challenging,SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR144_8_19',7,"SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN molecule ON connected.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR144_8_19'
SELECT atom.element FROM atom, molecule, connected, bond WHERE atom.molecule_id = molecule.molecule_id AND connected.atom_id = atom.atom_id AND connected.atom_id2 = atom.atom_id AND connected.bond_id = bond.bond_id AND molecule.label = 'TR144_8_19' AND bond.bond_type = 'TR144_8_19'
SELECT atom.element FROM atom, molecule, connected, bond WHERE atom.molecule_id = molecule.molecule_id AND connected.atom_id = atom.atom_id AND connected.atom_id2 = atom.atom_id AND connected.bond_id = bond.bond_id AND molecule.label = 'TR144_8_19' AND bond.bond_type = 'single'
SELECT atom.element FROM atom, molecule, connected, bond WHERE atom.atom_id = connected.atom_id AND atom.molecule_id = molecule.molecule_id AND connected.bond_id = bond.bond_id AND molecule.label = 'TR144_8_19' AND bond.bond_type = 'single'
SELECT atom.atom_id, atom.molecule_id, atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR144_8_19'
SELECT atom.atom_id, atom.molecule_id, atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR144_8_19'
SELECT atom.element FROM atom, molecule, connected, bond WHERE atom.atom_id = connected.atom_id AND atom.molecule_id = molecule.molecule_id AND connected.bond_id = bond.bond_id AND molecule.label = 'TR144_8_19' AND bond.bond_type = 'single'","SELECT atom.element FROM atom, molecule, connected, bond WHERE atom.atom_id = connected.atom_id AND atom.molecule_id = molecule.molecule_id AND connected.bond_id = bond.bond_id AND molecule.label = 'TR144_8_19' AND bond.bond_type = 'single'",0.0
24,304,List all carcinogenic molecules and their elements.,toxicology,challenging,"SELECT DISTINCT T2.molecule_id, T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'",7,"SELECT molecule.label, element.name FROM molecule JOIN atom ON molecule.molecule_id = atom.molecule_id JOIN element ON atom.element_id = element.element_id WHERE element.carcinogen = 1
SELECT molecule.label, element.symbol FROM molecule JOIN atom ON molecule.molecule_id = atom.molecule_id JOIN element ON atom.element_id = element.element_id WHERE element.carcinogen = 1
SELECT molecule.label, element.name FROM molecule JOIN atom ON molecule.molecule_id = atom.molecule_id JOIN element ON atom.element_id = element.element_id WHERE element.carcinogen = 1
SELECT molecule.label, element.name FROM molecule JOIN atom ON molecule.molecule_id = atom.molecule_id JOIN element ON atom.element_id = element.element_id WHERE element.carcinogen = 1
SELECT molecule.label, atom.element FROM molecule JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE atom.element IN (     SELECT element     FROM atom     WHERE molecule_id IN (         SELECT molecule_id         FROM molecule         WHERE label = 'carcinogenic'     ) )
SELECT molecule.label, element.name FROM molecule JOIN atom ON molecule.molecule_id = atom.molecule_id JOIN element ON atom.element_id = element.element_id WHERE element.carcinogen = 1
SELECT molecule.label, element.name FROM molecule JOIN atom ON molecule.molecule_id = atom.molecule_id JOIN element ON atom.element_id = element.element_id WHERE element.carcinogen = 1","SELECT molecule.label, element.name FROM molecule JOIN atom ON molecule.molecule_id = atom.molecule_id JOIN element ON atom.element_id = element.element_id WHERE element.carcinogen = 1",0.0
25,509,What is the unique id of the set that has the highest number of cards?,card_games,simple,SELECT id FROM sets ORDER BY baseSetSize DESC LIMIT 1,7,"SELECT set_id FROM cards GROUP BY set_id ORDER BY COUNT(*) DESC LIMIT 1
SELECT set_id FROM cards GROUP BY set_id ORDER BY COUNT(*) DESC LIMIT 1
SELECT set_id FROM cards GROUP BY set_id ORDER BY COUNT(*) DESC LIMIT 1
SELECT set_id FROM cards GROUP BY set_id ORDER BY COUNT(*) DESC LIMIT 1
SELECT set_id FROM cards GROUP BY set_id ORDER BY COUNT(*) DESC LIMIT 1
SELECT set_id FROM cards GROUP BY set_id ORDER BY COUNT(*) DESC LIMIT 1
SELECT set_id FROM cards GROUP BY set_id ORDER BY COUNT(*) DESC LIMIT 1",SELECT set_id FROM cards GROUP BY set_id ORDER BY COUNT(*) DESC LIMIT 1,0.0
26,1359,"How many times was the budget in Advertisement for ""Yearly Kickoff"" meeting more than ""October Meeting""?",student_club,challenging,SELECT CAST(SUM(CASE WHEN T2.event_name = 'Yearly Kickoff' THEN T1.amount ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.event_name = 'October Meeting' THEN T1.amount ELSE 0 END) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Advertisement' AND T2.type = 'Meeting',7,"SELECT COUNT(*) FROM budget WHERE category = 'Advertisement' AND event_status = 'Yearly Kickoff' AND spent > (     SELECT spent     FROM budget     WHERE category = 'Advertisement'     AND event_status = 'October Meeting' )
SELECT COUNT(*) FROM budget WHERE category = 'Advertisement' AND event_status = 'Yearly Kickoff' AND spent > (SELECT spent FROM budget WHERE category = 'Advertisement' AND event_status = 'October Meeting')
SELECT COUNT(*) FROM budget WHERE category = 'Advertisement' AND event_name = 'Yearly Kickoff' AND spent > (     SELECT spent     FROM budget     WHERE event_name = 'October Meeting' )
SELECT COUNT(*) FROM budget WHERE category = 'Advertisement' AND event_status = 'Yearly Kickoff' AND spent > (     SELECT spent     FROM budget     WHERE category = 'Advertisement'     AND event_status = 'October Meeting' )
SELECT COUNT(*) FROM budget WHERE category = 'Advertisement' AND event_name = 'Yearly Kickoff' AND spent > (     SELECT spent     FROM budget     WHERE event_name = 'October Meeting' )
SELECT COUNT(*) FROM budget WHERE category = 'Advertisement' AND event_status = 'Yearly Kickoff' AND spent > (SELECT spent FROM budget WHERE category = 'Advertisement' AND event_status = 'October Meeting')
SELECT COUNT(*) FROM budget WHERE category = 'Advertisement' AND event_status = 'Yearly Kickoff' AND spent > (     SELECT spent     FROM budget     WHERE category = 'Advertisement'     AND event_status = 'October Meeting' )",SELECT COUNT(*) FROM budget WHERE category = 'Advertisement' AND event_status = 'Yearly Kickoff' AND spent > (     SELECT spent     FROM budget     WHERE category = 'Advertisement'     AND event_status = 'October Meeting' ),0.0
27,1474,"Which customers, paying in CZK, consumed the most gas in 2011?",debit_card_specializing,moderate,SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' AND T2.Date BETWEEN 201101 AND 201112 GROUP BY T1.CustomerID ORDER BY SUM(T2.Consumption) DESC LIMIT 1,7,"SELECT customers.customerid, customers.segment, customers.currency, yearmonth.consumption FROM customers INNER JOIN yearmonth ON customers.customerid = yearmonth.customerid WHERE customers.currency = 'CZK' AND yearmonth.consumption = (SELECT MAX(consumption) FROM yearmonth) ORDER BY yearmonth.consumption DESC
SELECT customerid, SUM(amount) FROM transactions_1k WHERE date LIKE '2011%' GROUP BY customerid ORDER BY SUM(amount) DESC LIMIT 1
SELECT customerid, SUM(amount) FROM transactions_1k WHERE currency = 'CZK' AND date LIKE '2011%' GROUP BY customerid ORDER BY SUM(amount) DESC LIMIT 1
SELECT customerid, SUM(amount) FROM transactions_1k WHERE date LIKE '2011%' AND currency = 'CZK' GROUP BY customerid ORDER BY SUM(amount) DESC LIMIT 1
SELECT customerid, SUM(amount) FROM transactions_1k WHERE date LIKE '2011%' AND currency = 'CZK' GROUP BY customerid ORDER BY SUM(amount) DESC LIMIT 1
SELECT customerid, SUM(amount) FROM transactions_1k WHERE currency = 'CZK' AND date LIKE '2011%' GROUP BY customerid ORDER BY SUM(amount) DESC LIMIT 1
SELECT customerid, SUM(amount) FROM transactions_1k WHERE date LIKE '2011%' AND currency = 'CZK' GROUP BY customerid ORDER BY SUM(amount) DESC LIMIT 1","SELECT customerid, SUM(amount) FROM transactions_1k WHERE date LIKE '2011%' AND currency = 'CZK' GROUP BY customerid ORDER BY SUM(amount) DESC LIMIT 1",0.0
28,506,"For all the set of cards that has Japanese translation, what is the percentage of them are only available in non-foil?",card_games,challenging,SELECT CAST(SUM(CASE WHEN isNonFoilOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) FROM sets WHERE code IN ( SELECT setCode FROM set_translations WHERE language = 'Japanese' ),7,"SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE language = 'Japanese') FROM cards WHERE language = 'Japanese' AND isfoil = 0
SELECT (SELECT COUNT(*) FROM cards WHERE availability LIKE '%nonfoil%' AND id IN (SELECT id FROM foreign_data WHERE language = 'Japanese')) * 100.0 / (SELECT COUNT(*) FROM cards WHERE id IN (SELECT id FROM foreign_data WHERE language = 'Japanese')) AS percentage
SELECT (SELECT COUNT(*) FROM cards WHERE availability LIKE '%nonfoil%' AND uuid IN (SELECT uuid FROM foreign_data WHERE language = 'Japanese')) * 100.0 / (SELECT COUNT(*) FROM cards WHERE uuid IN (SELECT uuid FROM foreign_data WHERE language = 'Japanese')) AS percentage
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode IN (SELECT setcode FROM foreign_data)) FROM cards WHERE setcode IN (SELECT setcode FROM foreign_data) AND isfoilonly = 1
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE language = 'Japanese') FROM cards WHERE language = 'Japanese' AND isfoil = 0
SELECT (SUM(CASE WHEN isfoil = 0 THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS percentage FROM cards WHERE id IN (SELECT id FROM foreign_data WHERE language = 'Japanese')
SELECT (COUNT(DISTINCT cards.id) * 100.0) / (SELECT COUNT(DISTINCT cards.id) FROM cards WHERE cards.availability LIKE '%J%') FROM cards JOIN foreign_data ON cards.id = foreign_data.id WHERE cards.availability LIKE '%J%' AND cards.hasnonfoil = 1 AND foreign_data.language = 'Japanese'",SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE language = 'Japanese') FROM cards WHERE language = 'Japanese' AND isfoil = 0,0.0
29,362,"What is the description about the ruling of card ""Condemn""?",card_games,simple,SELECT T2.text FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Condemn',7,"SELECT text FROM rulings WHERE uuid = (SELECT uuid FROM cards WHERE name = 'Condemn')
SELECT text FROM rulings WHERE uuid IN (SELECT uuid FROM cards WHERE name = 'Condemn')
SELECT rulings.text FROM rulings JOIN cards ON rulings.uuid = cards.uuid WHERE cards.name = 'Condemn'
SELECT * FROM rulings WHERE uuid = (SELECT uuid FROM cards WHERE name = 'Condemn')
SELECT rulings.text FROM rulings INNER JOIN cards ON rulings.uuid = cards.uuid WHERE cards.name = 'Condemn'
SELECT rulings.text FROM rulings INNER JOIN cards ON rulings.uuid = cards.uuid WHERE cards.name = 'Condemn'
SELECT * FROM rulings WHERE uuid IN (SELECT uuid FROM cards WHERE name = 'Condemn')",SELECT rulings.text FROM rulings INNER JOIN cards ON rulings.uuid = cards.uuid WHERE cards.name = 'Condemn',1.0
30,1180,Was the patient a man or a women whose ALT glutamic pylvic transaminase status got 9 on 1992-6-12?,thrombosis_prediction,moderate,SELECT T1.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GPT = 9.0 AND T2.Date = '1992-06-12',7,"SELECT patient.sex FROM patient, laboratory WHERE patient.id = laboratory.id AND laboratory.date = '1992-06-12' AND laboratory.alp = 9
SELECT patient.sex FROM patient, laboratory WHERE patient.id = laboratory.id AND laboratory.date = '1992-6-12' AND laboratory.alp = 9
SELECT * FROM patient WHERE sex = 'M' AND birthday = '1992-06-12'
SELECT * FROM patient WHERE sex = 'M' AND birthday = '1992-06-12' AND examination = 'ALT glutamic pylvic transaminase status' AND examination_date = '1992-06-12'
SELECT * FROM patient WHERE sex = 'M' AND birthday = '1992-06-12'
SELECT patient.sex FROM patient, laboratory WHERE patient.id = laboratory.id AND laboratory.date = '1992-06-12' AND laboratory.alp = 9
SELECT patient.sex FROM patient, laboratory WHERE patient.id = laboratory.id AND laboratory.date = '1992-6-12' AND laboratory.alp = 9","SELECT patient.sex FROM patient, laboratory WHERE patient.id = laboratory.id AND laboratory.date = '1992-06-12' AND laboratory.alp = 9",0.0
31,586,Which user added a bounty amount of 50 to the post title mentioning variance?,codebase_community,challenging,"SELECT T3.DisplayName, T1.Title FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId INNER JOIN users AS T3 ON T3.Id = T2.UserId WHERE T2.BountyAmount = 50 AND T1.Title LIKE '%variance%'",7,"SELECT u.displayname FROM users u JOIN votes v ON u.id = v.userid WHERE v.bountyamount = 50 AND v.postid IN (     SELECT p.id     FROM posts p     WHERE p.title LIKE '%variance%' ) 
SELECT users.displayname FROM users JOIN votes ON users.id = votes.userid JOIN posts ON votes.postid = posts.id WHERE votes.bountyamount = 50 AND posts.title LIKE '%variance%'
SELECT users.displayname FROM users JOIN votes ON users.id = votes.userid JOIN posts ON votes.postid = posts.id WHERE votes.bountyamount = 50 AND posts.title LIKE '%variance%'
SELECT users.displayname FROM users JOIN votes ON users.id = votes.userid JOIN posts ON votes.postid = posts.id WHERE votes.bountyamount = 50 AND posts.title LIKE '%variance%'
SELECT users.displayname FROM users JOIN votes ON users.id = votes.userid JOIN posts ON votes.postid = posts.id WHERE votes.bountyamount = 50 AND posts.title LIKE '%variance%'
SELECT users.displayname FROM users JOIN votes ON users.id = votes.userid JOIN posts ON votes.postid = posts.id WHERE votes.bountyamount = 50 AND posts.title LIKE '%variance%'
SELECT users.displayname FROM users JOIN votes ON users.id = votes.userid JOIN posts ON votes.postid = posts.id WHERE votes.bountyamount = 50 AND posts.title LIKE '%variance%'",SELECT users.displayname FROM users JOIN votes ON users.id = votes.userid JOIN posts ON votes.postid = posts.id WHERE votes.bountyamount = 50 AND posts.title LIKE '%variance%',0.0
32,1169,What is the ratio of male to female patients among all those with abnormal uric acid counts?,thrombosis_prediction,challenging,SELECT CAST(SUM(CASE WHEN T2.UA <= 8.0 AND T1.SEX = 'M' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.UA <= 6.5 AND T1.SEX = 'F' THEN 1 ELSE 0 END) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID,7,"SELECT COUNT(*) FROM patient WHERE sex = 'male' AND birthday < '1990-01-01'
SELECT COUNT(*) FROM patient WHERE sex = 'male' AND birthday < '1990-01-01'
SELECT COUNT(*) FROM patient WHERE sex = 'male' AND birthday < '1990-01-01'
SELECT COUNT(*) FROM patient WHERE sex = 'male' AND id IN (SELECT id FROM laboratory WHERE ua = 'abnormal')
SELECT COUNT(*) FROM patient WHERE sex = 'male' AND birthday < '1990-01-01'
SELECT COUNT(*) FROM patient WHERE sex = 'male' AND birthday < '1990-01-01'
SELECT COUNT(*) FROM patient WHERE sex = 'male' AND birthday < '1990-01-01'",SELECT COUNT(*) FROM patient WHERE sex = 'male' AND birthday < '1990-01-01',0.0
33,1210,What is the average index of the lactate dehydrogenase (LDH) for all patients with lactate dehydrogenase (LDH) within the normal range.,thrombosis_prediction,simple,SELECT AVG(LDH) FROM Laboratory WHERE LDH < 500,7,"SELECT AVG(ldh) FROM laboratory WHERE ldh BETWEEN 100 AND 500
SELECT AVG(ldh) FROM laboratory WHERE ldh BETWEEN 100 AND 500
SELECT AVG(ldh) FROM laboratory WHERE ldh BETWEEN 100 AND 500
SELECT AVG(ldh) FROM laboratory WHERE ldh BETWEEN 100 AND 200
SELECT AVG(ldh) FROM laboratory WHERE ldh BETWEEN 100 AND 500
SELECT AVG(ldh) FROM laboratory WHERE ldh BETWEEN 100 AND 500
SELECT AVG(ldh) FROM laboratory WHERE ldh BETWEEN 100 AND 500",SELECT AVG(ldh) FROM laboratory WHERE ldh BETWEEN 100 AND 500,0.0
34,987,What is the average fastest lap time of the top 10 drivers in the 2006 United States Grand Prix?,formula_1,simple,SELECT AVG(T1.fastestLapTime) FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId WHERE T1.rank < 11 AND T2.year = 2006 AND T2.name = 'United States Grand Prix',7,"SELECT AVG(fastestlaptime) FROM results WHERE raceid = (SELECT raceid FROM races WHERE name = 'United States Grand Prix' AND year = 2006) AND driverid IN (SELECT driverid FROM driverstandings WHERE raceid = (SELECT raceid FROM races WHERE name = 'United States Grand Prix' AND year = 2006) ORDER BY points DESC LIMIT 10)
SELECT AVG(laptimes.milliseconds) FROM laptimes WHERE laptimes.raceid = (SELECT races.raceid FROM races WHERE races.name = 'United States Grand Prix' AND races.year = 2006) AND laptimes.driverid IN (SELECT driverstandings.driverid FROM driverstandings WHERE driverstandings.raceid = (SELECT races.raceid FROM races WHERE races.name = 'United States Grand Prix' AND races.year = 2006) ORDER BY driverstandings.points DESC LIMIT 10)
SELECT AVG(laptimes.milliseconds) FROM laptimes INNER JOIN races ON races.raceid = laptimes.raceid WHERE races.year = 2006 ORDER BY laptimes.milliseconds ASC LIMIT 10
SELECT AVG(laptimes.milliseconds) FROM laptimes WHERE laptimes.raceid = (SELECT races.raceid FROM races WHERE races.name = 'United States Grand Prix' AND races.year = 2006) AND laptimes.driverid IN (SELECT driverstandings.driverid FROM driverstandings WHERE driverstandings.raceid = (SELECT races.raceid FROM races WHERE races.name = 'United States Grand Prix' AND races.year = 2006) ORDER BY driverstandings.points DESC LIMIT 10)
SELECT AVG(laptimes.milliseconds) FROM laptimes JOIN races ON laptimes.raceid = races.raceid WHERE races.name = 'United States Grand Prix' AND races.year = 2006 AND laptimes.driverid IN (     SELECT driverid     FROM driverstandings     WHERE raceid = races.raceid     ORDER BY points DESC     LIMIT 10 )
SELECT AVG(laptimes.milliseconds) FROM laptimes JOIN races ON laptimes.raceid = races.raceid WHERE races.name = 'United States Grand Prix' AND races.year = 2006 AND laptimes.driverid IN (   SELECT driverid   FROM driverstandings   WHERE raceid = races.raceid   ORDER BY points DESC   LIMIT 10 )
SELECT AVG(laptimes.milliseconds) FROM laptimes JOIN races ON laptimes.raceid = races.raceid WHERE races.year = 2006 ORDER BY laptimes.milliseconds ASC LIMIT 10",SELECT AVG(laptimes.milliseconds) FROM laptimes WHERE laptimes.raceid = (SELECT races.raceid FROM races WHERE races.name = 'United States Grand Prix' AND races.year = 2006) AND laptimes.driverid IN (SELECT driverstandings.driverid FROM driverstandings WHERE driverstandings.raceid = (SELECT races.raceid FROM races WHERE races.name = 'United States Grand Prix' AND races.year = 2006) ORDER BY driverstandings.points DESC LIMIT 10),0.0
35,1148,What is the percentage of players that are under 180 cm who have an overall strength of more than 70?,european_football_2,moderate,SELECT CAST(COUNT(CASE WHEN t2.overall_rating > 70 THEN t1.id ELSE NULL END) AS REAL) * 100 / COUNT(t1.id) percent FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.height < 180,7,"SELECT COUNT(*) FROM player_attributes WHERE player_api_id IN (SELECT player_api_id FROM player WHERE height < 180) AND strength > 70
SELECT COUNT(*) FROM player_attributes WHERE player_api_id IN (SELECT player_api_id FROM player WHERE height < 180) AND strength > 70
SELECT COUNT(*) FROM player_attributes WHERE player_fifa_api_id IN (SELECT player_fifa_api_id FROM player WHERE height < 180) AND strength > 70
SELECT COUNT(*) FROM player_attributes WHERE player_api_id IN (SELECT player_api_id FROM player WHERE height < 180) AND strength > 70
SELECT COUNT(*) FROM player_attributes WHERE player_api_id IN (SELECT player_api_id FROM player WHERE height < 180) AND strength > 70
SELECT COUNT(*) FROM player_attributes WHERE player_api_id IN (SELECT player_api_id FROM player WHERE height < 180) AND strength > 70
NULL",SELECT COUNT(*) FROM player_attributes WHERE player_api_id IN (SELECT player_api_id FROM player WHERE height < 180) AND strength > 70,0.0
36,218,What percentage of carcinogenic-type molecules does not contain fluorine?,toxicology,challenging,SELECT CAST(COUNT(DISTINCT CASE WHEN T1.element <> 'f' THEN T2.molecule_id ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T2.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+',7,"SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM atom) FROM atom WHERE atom_id NOT IN (     SELECT atom_id     FROM atom     JOIN connected ON atom.atom_id = connected.atom_id     JOIN bond ON connected.bond_id = bond.bond_id     JOIN atom AS atom2 ON connected.atom_id2 = atom2.atom_id     WHERE bond.bond_type = 'carcinogenic' AND atom2.element = 'F' )
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM atom) FROM atom WHERE atom_id NOT IN (     SELECT atom_id     FROM atom     JOIN connected ON atom.atom_id = connected.atom_id     JOIN bond ON connected.bond_id = bond.bond_id     JOIN atom AS atom2 ON connected.atom_id2 = atom2.atom_id     WHERE bond.bond_type = 'carcinogenic' AND atom2.element = 'F' )
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM atom) FROM atom WHERE atom_id NOT IN (     SELECT atom_id     FROM atom     JOIN connected ON atom.atom_id = connected.atom_id     JOIN bond ON connected.bond_id = bond.bond_id     JOIN atom AS atom2 ON connected.atom_id2 = atom2.atom_id     WHERE bond.bond_type = 'carcinogenic' AND atom2.element = 'F' )
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM atom) FROM atom WHERE atom_id NOT IN (     SELECT atom_id     FROM atom     JOIN connected ON atom.atom_id = connected.atom_id     JOIN bond ON connected.bond_id = bond.bond_id     JOIN atom AS atom2 ON connected.atom_id2 = atom2.atom_id     WHERE bond.bond_type = 'carcinogenic' AND atom2.element = 'F' )
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM atom) FROM atom WHERE atom_id NOT IN (     SELECT atom_id     FROM atom     JOIN connected ON atom.atom_id = connected.atom_id     JOIN bond ON connected.bond_id = bond.bond_id     JOIN atom AS atom2 ON connected.atom_id2 = atom2.atom_id     WHERE bond.bond_type = 'carcinogenic' AND atom2.element = 'F' )
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM atom) FROM atom WHERE atom_id NOT IN (     SELECT atom_id     FROM atom     JOIN connected ON atom.atom_id = connected.atom_id     JOIN bond ON connected.bond_id = bond.bond_id     JOIN atom AS atom2 ON connected.atom_id2 = atom2.atom_id     WHERE bond.bond_type = 'carcinogenic' AND atom2.element = 'F' )
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM atom) FROM atom WHERE atom_id NOT IN (     SELECT atom_id     FROM atom     JOIN connected ON atom.atom_id = connected.atom_id     JOIN bond ON connected.bond_id = bond.bond_id     JOIN atom AS atom2 ON connected.atom_id2 = atom2.atom_id     WHERE bond.bond_type = 'carcinogenic' AND atom2.element = 'F' )",SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM atom) FROM atom WHERE atom_id NOT IN (     SELECT atom_id     FROM atom     JOIN connected ON atom.atom_id = connected.atom_id     JOIN bond ON connected.bond_id = bond.bond_id     JOIN atom AS atom2 ON connected.atom_id2 = atom2.atom_id     WHERE bond.bond_type = 'carcinogenic' AND atom2.element = 'F' ),0.0
37,397,"What is the mana cost of cards with a normal layout, a 2003 frame version, with a black border color, and available in paper and mtgo?",card_games,moderate,"SELECT manaCost FROM cards WHERE availability = 'mtgo,paper' AND borderColor = 'black' AND frameVersion = 2003 AND layout = 'normal'",7,"SELECT manacost FROM cards WHERE layout = 'normal' AND frameversion = '2003' AND bordercolor = 'black' AND availability IN ('paper', 'mtgo')
SELECT cards.manacost FROM cards WHERE cards.layout = 'normal' AND cards.frameversion = '2003' AND cards.bordercolor = 'black' AND cards.availability = 'paper,mtgo'
SELECT manacost FROM cards WHERE layout = 'normal' AND frameversion = '2003' AND bordercolor = 'black' AND availability IN ('paper', 'mtgo')
SELECT manacost FROM cards WHERE layout = 'normal' AND frameversion = '2003' AND bordercolor = 'black' AND availability IN ('paper', 'mtgo')
SELECT cards.manacost FROM cards WHERE cards.layout = 'normal' AND cards.frameversion = '2003' AND cards.bordercolor = 'black' AND cards.availability = 'paper,mtgo'
SELECT manacost FROM cards WHERE layout = 'normal' AND frameversion = '2003' AND bordercolor = 'black' AND availability IN ('paper', 'mtgo')
SELECT manacost FROM cards WHERE layout = 'normal' AND frameversion = '2003' AND bordercolor = 'black' AND availability IN ('paper', 'mtgo')","SELECT manacost FROM cards WHERE layout = 'normal' AND frameversion = '2003' AND bordercolor = 'black' AND availability IN ('paper', 'mtgo')",0.0
38,83,"Of the schools that offers a magnet program serving a grade span of Kindergarten to 8th grade, how many offers Multiple Provision Types? List the number of cities that offers a Kindergarten to 8th grade span and indicate how many schools are there serving such grade span for each city.",california_schools,challenging,"SELECT T2.City, COUNT(T2.CDSCode) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.Magnet = 1 AND T2.GSoffered = 'K-8' AND T1.`NSLP Provision Status` = 'Multiple Provision Types' GROUP BY T2.City",7,"SELECT COUNT(*) FROM schools WHERE magnet = 'Y' AND gsserved = 'K-8'
SELECT COUNT(*) FROM schools WHERE magnet = 'Y' AND gsserved = 'K-8'
SELECT COUNT(*) FROM schools WHERE magnet = 1 AND gsserved = 'K-8'
SELECT COUNT(*) FROM schools WHERE magnet = 'Y' AND gsserved = 'K-8'
SELECT COUNT(*) FROM schools WHERE magnet = 1 AND gsserved = 'K-8'
SELECT COUNT(*) FROM schools WHERE magnet = 'Y' AND gsserved = 'K-8'
SELECT COUNT(*) FROM schools WHERE magnet = 'Y' AND gsserved = 'K-8'",SELECT COUNT(*) FROM schools WHERE magnet = 'Y' AND gsserved = 'K-8',0.0
39,1194,"What sex is the patient who in a medical examination was diagnosed with PSS and in a laboratory examination had a blood level of C-reactive protein de 2+, createnine 1 and LDH 123?",thrombosis_prediction,challenging,SELECT T1.SEX FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T3.ID = T2.ID WHERE T2.Diagnosis = 'PSS' AND T3.CRP = '2+' AND T3.CRE = 1.0 AND T3.LDH = 123,7,"SELECT patient.sex FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.crp = 2 AND laboratory.cre = 1 AND laboratory.ldh = 123
SELECT patient.sex FROM patient INNER JOIN examination ON patient.id = examination.id INNER JOIN laboratory ON patient.id = laboratory.id WHERE examination.diagnosis = 'PSS' AND laboratory.crp = '2+' AND laboratory.cre = '1' AND laboratory.ldh = '123'
SELECT patient.sex FROM patient INNER JOIN examination ON patient.id = examination.id INNER JOIN laboratory ON examination.id = laboratory.id WHERE laboratory.crp = 2 AND laboratory.cre = 1 AND laboratory.ldh = 123 AND examination.diagnosis = 'PSS'
SELECT patient.sex FROM patient, examination, laboratory WHERE patient.id = examination.id AND examination.id = laboratory.id AND examination.diagnosis = 'PSS' AND laboratory.crp = '2+' AND laboratory.cre = '1' AND laboratory.ldh = '123'
SELECT patient.sex FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE examination.diagnosis = 'PSS' AND laboratory.crp = '2+' AND laboratory.cre = '1' AND laboratory.ldh = '123'
SELECT patient.sex FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE examination.diagnosis = 'PSS' AND laboratory.crp = 2 AND laboratory.cre = 1 AND laboratory.ldh = 123
SELECT patient.sex FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE examination.diagnosis = 'PSS' AND laboratory.crp = 2 AND laboratory.cre = 1 AND laboratory.ldh = 123",SELECT patient.sex FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE examination.diagnosis = 'PSS' AND laboratory.crp = 2 AND laboratory.cre = 1 AND laboratory.ldh = 123,0.0
40,814,List the skin colour of the superheroes with 100 attribute value.,superhero,moderate,SELECT DISTINCT T2.colour FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.skin_colour_id = T2.id INNER JOIN hero_attribute AS T3 ON T1.id = T3.hero_id WHERE T3.attribute_value = 100,7,"SELECT skin_colour.colour FROM superhero JOIN skin_colour ON superhero.skin_colour_id = skin_colour.id WHERE superhero.id IN (     SELECT hero_id     FROM hero_attribute     WHERE attribute_value = 100 )
SELECT skin_colour.colour FROM superhero INNER JOIN skin_colour ON superhero.skin_colour_id = skin_colour.id WHERE superhero.id IN (SELECT hero_id FROM hero_attribute WHERE attribute_value = 100 AND attribute_id = (SELECT id FROM attribute WHERE attribute_name = 'alignment'))
SELECT skin_colour.colour FROM superhero INNER JOIN skin_colour ON superhero.skin_colour_id = skin_colour.id WHERE superhero.id IN (SELECT hero_attribute.hero_id FROM hero_attribute WHERE hero_attribute.attribute_id = 1 AND hero_attribute.attribute_value = 100)
SELECT skin_colour.colour FROM superhero INNER JOIN skin_colour ON superhero.skin_colour_id = skin_colour.id WHERE superhero.id IN (SELECT hero_attribute.hero_id FROM hero_attribute WHERE hero_attribute.attribute_id = 1 AND hero_attribute.attribute_value = 100)
SELECT skin_colour.colour FROM superhero INNER JOIN skin_colour ON superhero.skin_colour_id = skin_colour.id WHERE superhero.id IN (SELECT hero_attribute.hero_id FROM hero_attribute WHERE hero_attribute.attribute_value = 100 AND hero_attribute.attribute_id = (SELECT attribute.id FROM attribute WHERE attribute.attribute_name = 'alignment'))
SELECT skin_colour.colour FROM superhero JOIN skin_colour ON superhero.skin_colour_id = skin_colour.id WHERE superhero.id IN (     SELECT hero_id     FROM hero_attribute     WHERE attribute_value = 100 )
SELECT skin_colour_id FROM superhero WHERE id IN (SELECT hero_id FROM hero_attribute WHERE attribute_id = 100)",SELECT skin_colour.colour FROM superhero JOIN skin_colour ON superhero.skin_colour_id = skin_colour.id WHERE superhero.id IN (     SELECT hero_id     FROM hero_attribute     WHERE attribute_value = 100 ),0.0
41,1429,What is the name of the social event that was attended by the vice president of the Student_Club located at 900 E. Washington St.?,student_club,challenging,SELECT T2.event_name FROM attendance AS T1 INNER JOIN event AS T2 ON T2.event_id = T1.link_to_event INNER JOIN member AS T3 ON T1.link_to_member = T3.member_id WHERE T3.position = 'Vice President' AND T2.location = '900 E. Washington St.' AND T2.type = 'Social',7,"SELECT event_name FROM event WHERE event_id IN (SELECT link_to_event FROM attendance WHERE link_to_member IN (SELECT member_id FROM member WHERE position = 'Vice President' AND zip IN (SELECT zip_code FROM zip_code WHERE zip_code = '900 E. Washington St.')))
SELECT event_name FROM event WHERE event_id IN (SELECT link_to_event FROM attendance WHERE link_to_member IN (SELECT member_id FROM member WHERE position = 'Vice President' AND zip IN (SELECT zip_code FROM zip_code WHERE city = 'Washington' AND state = 'Illinois')))
SELECT event_name FROM event WHERE event_id IN (SELECT link_to_event FROM attendance WHERE link_to_member IN (SELECT member_id FROM member WHERE link_to_major IN (SELECT major_id FROM major WHERE major_name = 'Computer Science')))
SELECT event_name FROM event WHERE event_id IN (SELECT link_to_event FROM attendance WHERE link_to_member IN (SELECT member_id FROM member WHERE position = 'Vice President' AND link_to_major IN (SELECT major_id FROM major WHERE major_name = 'Student_Club' AND zip IN (SELECT zip_code FROM zip_code WHERE zip_code = '900 E. Washington St.'))))
SELECT event_name FROM event WHERE event_id IN (SELECT link_to_event FROM attendance WHERE link_to_member IN (SELECT member_id FROM member WHERE position = 'Vice President' AND zip IN (SELECT zip_code FROM zip_code WHERE city = 'Chicago' AND state = 'Illinois')))
SELECT event_name FROM event WHERE event_id IN (     SELECT link_to_event     FROM attendance     WHERE link_to_member IN (         SELECT member_id         FROM member         WHERE position = 'Vice President'     ) ) AND location = '900 E. Washington St.'
SELECT event_name FROM event WHERE event_id IN (SELECT link_to_event FROM attendance WHERE link_to_member IN (SELECT member_id FROM member WHERE position = 'Vice President' AND zip IN (SELECT zip_code FROM zip_code WHERE zip_code = '900 E. Washington St.')))",SELECT event_name FROM event WHERE event_id IN (SELECT link_to_event FROM attendance WHERE link_to_member IN (SELECT member_id FROM member WHERE position = 'Vice President' AND zip IN (SELECT zip_code FROM zip_code WHERE zip_code = '900 E. Washington St.'))),0.0
42,821,List down Ajax's superpowers.,superhero,simple,SELECT T3.power_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T1.superhero_name = 'Ajax',7,"SELECT superhero.superhero_name, superhero.full_name, superhero.height_cm, superhero.weight_kg, superhero.alignment_id, superhero.publisher_id, superhero.race_id, superhero.gender_id, superhero.eye_colour_id, superhero.hair_colour_id, superhero.skin_colour_id, superhero.attribute_id, superhero.attribute_value, superhero.power_id, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power
SELECT superhero.superhero_name, superhero.full_name, superhero.height_cm, superhero.weight_kg, superhero.alignment_id, superhero.publisher_id, superhero.race_id, superhero.gender_id, superhero.eye_colour_id, superhero.hair_colour_id, superhero.skin_colour_id, superhero.attribute_id, superhero.attribute_value, superhero.power_id, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power
SELECT superhero.superhero_name, superhero.full_name, superhero.height_cm, superhero.weight_kg, superhero.alignment_id, superhero.publisher_id, superhero.race_id, superhero.gender_id, superhero.eye_colour_id, superhero.hair_colour_id, superhero.skin_colour_id, superhero.attribute_id, superhero.attribute_value, superhero.power_id, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power
SELECT superhero.superhero_name, superhero.full_name, superhero.height_cm, superhero.weight_kg, superhero.alignment_id, superhero.publisher_id, superhero.race_id, superhero.gender_id, superhero.eye_colour_id, superhero.hair_colour_id, superhero.skin_colour_id, superhero.attribute_id, superhero.attribute_value, superhero.power_id, superhero.power_name FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id JOIN attribute ON superhero.attribute_id = attribute.id JOIN colour ON superhero.colour_id = colour.id JOIN gender ON superhero.gender_id = gender.id JOIN publisher ON superhero.publisher_id = publisher.id JOIN race ON superhero.race_id = race.id JOIN superhero ON superhero.id = hero_attribute.hero_id JOIN superhero ON superhero.id = hero_power.hero_id JOIN superhero ON superhero.id = hero_power.power_id WHERE superhero.superhero_name = 'Ajax' ORDER BY superhero.superhero_name ASC
SELECT superhero.superhero_name, superhero.full_name, superhero.height_cm, superhero.weight_kg, superhero.alignment_id, superhero.publisher_id, superhero.race_id, superhero.gender_id, superhero.eye_colour_id, superhero.hair_colour_id, superhero.skin_colour_id, superhero.attribute_id, superhero.attribute_value, superhero.power_id, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power
SELECT superhero.superhero_name, superpower.power_name FROM superhero JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.superhero_name = 'Ajax'
SELECT superhero.superhero_name, superhero.full_name, superhero.height_cm, superhero.weight_kg, superhero.alignment_id, superhero.publisher_id, superhero.race_id, superhero.gender_id, superhero.eye_colour_id, superhero.hair_colour_id, superhero.skin_colour_id, superhero.attribute_id, superhero.attribute_value, superhero.power_id, superhero.power_name, superhero.power_value, superhero.power_value_unit, superhero.power_value_unit_id, superhero.power_value_unit_name, superhero.power_value_unit_symbol, superhero.power_value_unit_symbol_id, superhero.power_value_unit_symbol_name, superhero.power_value_unit_symbol_symbol, superhero.power_value_unit_symbol_symbol_id, superhero.power_value_unit_symbol_symbol_name, superhero.power_value_unit_symbol_symbol_symbol, superhero.power_value_unit_symbol_symbol_symbol_id, superhero.power_value_unit_symbol_symbol_symbol_name, superhero.power_value_unit_symbol_symbol_symbol_symbol, superhero.power_value_unit_symbol_symbol_symbol_symbol_id, superhero.power_value_unit_symbol_symbol_symbol","SELECT superhero.superhero_name, superhero.full_name, superhero.height_cm, superhero.weight_kg, superhero.alignment_id, superhero.publisher_id, superhero.race_id, superhero.gender_id, superhero.eye_colour_id, superhero.hair_colour_id, superhero.skin_colour_id, superhero.attribute_id, superhero.attribute_value, superhero.power_id, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power",0.0
43,1192,List all patients who were followed up at the outpatient clinic who underwent a laboratory test in October 1991 and had a total blood bilirubin level within the normal range.,thrombosis_prediction,challenging,SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.`T-BIL` < 2.0 AND T2.Date LIKE '1991-10-%',7,"SELECT * FROM patient WHERE id IN (SELECT id FROM laboratory WHERE date BETWEEN '1991-10-01' AND '1991-10-31' AND t-bil BETWEEN 0 AND 1.5) AND id IN (SELECT id FROM examination WHERE date BETWEEN '1991-10-01' AND '1991-10-31')
SELECT patient.id, patient.sex, patient.birthday, patient.description, patient.first date, patient.admission, patient.diagnosis, laboratory.id, laboratory.date, laboratory.got, laboratory.gpt, laboratory.ldh, laboratory.alp, laboratory.tp, laboratory.alb, laboratory.ua, laboratory.un, laboratory.cre, laboratory.t-bil, laboratory.t-cho, laboratory.tg, laboratory.cpk, laboratory.glu, laboratory.wbc, laboratory.rbc, laboratory.hgb, laboratory.hct, laboratory.plt, laboratory.pt, laboratory.aptt, laboratory.fg, laboratory.pic, laboratory.tat, laboratory.tat2, laboratory.u-pro, laboratory.igg, laboratory.iga, laboratory.igm, laboratory.crp, laboratory.ra, laboratory.rf, laboratory.c3, laboratory.c4, laboratory.rnp, laboratory.sm, laboratory.sc170, laboratory.ssa, laboratory.ssb, laboratory.centromea, laboratory.dna, laboratory.dna-ii FROM patient, laboratory WHERE patient.id = laboratory.id AND laboratory.date = '1991-10-01' AND laboratory.t-bil < 1.5 AND laboratory.t-bil > 0.5
SELECT * FROM patient WHERE id IN (SELECT id FROM examination WHERE examination_date BETWEEN '1991-10-01' AND '1991-10-31' AND t_bil BETWEEN 0 AND 10) AND id IN (SELECT id FROM laboratory WHERE date BETWEEN '1991-10-01' AND '1991-10-31' AND t_bil BETWEEN 0 AND 10)
SELECT * FROM patient WHERE id IN (SELECT id FROM examination WHERE examination_date BETWEEN '1991-10-01' AND '1991-10-31' AND t_bil BETWEEN 0.5 AND 1.5) AND id IN (SELECT id FROM laboratory WHERE date BETWEEN '1991-10-01' AND '1991-10-31' AND t_bil BETWEEN 0.5 AND 1.5)
SELECT patient.id, patient.sex, patient.birthday, patient.description, patient.first date, patient.admission, patient.diagnosis, laboratory.id, laboratory.date, laboratory.got, laboratory.gpt, laboratory.ldh, laboratory.alp, laboratory.tp, laboratory.alb, laboratory.ua, laboratory.un, laboratory.cre, laboratory.t-bil, laboratory.t-cho, laboratory.tg, laboratory.cpk, laboratory.glu, laboratory.wbc, laboratory.rbc, laboratory.hgb, laboratory.hct, laboratory.plt, laboratory.pt, laboratory.aptt, laboratory.fg, laboratory.pic, laboratory.tat, laboratory.tat2, laboratory.u-pro, laboratory.igg, laboratory.iga, laboratory.igm, laboratory.crp, laboratory.ra, laboratory.rf, laboratory.c3, laboratory.c4, laboratory.rnp, laboratory.sm, laboratory.sc170, laboratory.ssa, laboratory.ssb, laboratory.centromea, laboratory.dna, laboratory.dna-ii FROM patient, laboratory WHERE patient.id = laboratory.id AND patient.first date = laboratory.date AND patient.admission = laboratory.admission AND patient.diagnosis = laboratory.diagnosis AND patient.description = laboratory.description AND patient.birthday = laboratory.birthday AND patient.sex = laboratory.sex AND patient.id = laboratory
SELECT patient.id, patient.sex, patient.birthday, patient.description, patient.first date, patient.admission, patient.diagnosis, laboratory.id, laboratory.date, laboratory.got, laboratory.gpt, laboratory.ldh, laboratory.alp, laboratory.tp, laboratory.alb, laboratory.ua, laboratory.un, laboratory.cre, laboratory.t-bil, laboratory.t-cho, laboratory.tg, laboratory.cpk, laboratory.glu, laboratory.wbc, laboratory.rbc, laboratory.hgb, laboratory.hct, laboratory.plt, laboratory.pt, laboratory.aptt, laboratory.fg, laboratory.pic, laboratory.tat, laboratory.tat2, laboratory.u-pro, laboratory.igg, laboratory.iga, laboratory.igm, laboratory.crp, laboratory.ra, laboratory.rf, laboratory.c3, laboratory.c4, laboratory.rnp, laboratory.sm, laboratory.sc170, laboratory.ssa, laboratory.ssb, laboratory.centromea, laboratory.dna, laboratory.dna-ii FROM patient, laboratory WHERE patient.id = laboratory.id AND patient.first date = laboratory.date AND patient.admission = laboratory.admission AND patient.diagnosis = laboratory.diagnosis AND patient.description = laboratory.description AND patient.birthday = laboratory.birthday AND patient.sex = laboratory.sex AND patient.id = laboratory
SELECT * FROM patient WHERE id IN (SELECT id FROM examination WHERE examination_date BETWEEN '1991-10-01' AND '1991-10-31' AND t_bil BETWEEN 0 AND 10) AND id IN (SELECT id FROM laboratory WHERE date BETWEEN '1991-10-01' AND '1991-10-31' AND t_bil BETWEEN 0 AND 10)",SELECT * FROM patient WHERE id IN (SELECT id FROM examination WHERE examination_date BETWEEN '1991-10-01' AND '1991-10-31' AND t_bil BETWEEN 0 AND 10) AND id IN (SELECT id FROM laboratory WHERE date BETWEEN '1991-10-01' AND '1991-10-31' AND t_bil BETWEEN 0 AND 10),0.0
44,1315,"How many students of the Student_Club have attended the event ""Women's Soccer""?",student_club,simple,SELECT COUNT(T1.event_id) FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'Women''s Soccer',7,"SELECT COUNT(*) FROM attendance WHERE link_to_event IN (     SELECT event_id     FROM event     WHERE event_name = 'Women's Soccer' )
SELECT COUNT(*) FROM attendance WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Women's Soccer')
SELECT COUNT(*) FROM attendance WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Women's Soccer')
SELECT COUNT(*) FROM attendance WHERE link_to_event IN (     SELECT event_id     FROM event     WHERE event_name = 'Women's Soccer' )
SELECT COUNT(*) FROM attendance WHERE link_to_event IN (     SELECT event_id     FROM event     WHERE event_name = 'Women's Soccer' )
SELECT COUNT(*) FROM attendance WHERE link_to_event = (SELECT event_id FROM event WHERE event_name = ""Women's Soccer"")
SELECT COUNT(*) FROM attendance WHERE link_to_event IN (     SELECT event_id     FROM event     WHERE event_name = 'Women's Soccer' )",SELECT COUNT(*) FROM attendance WHERE link_to_event IN (     SELECT event_id     FROM event     WHERE event_name = 'Women's Soccer' ),0.0
45,788,How many percent of female heroes were published by Marvel Comics?,superhero,challenging,SELECT CAST(COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T3.gender = 'Female',7,"SELECT (COUNT(DISTINCT(superhero.id)) * 100.0 / (SELECT COUNT(DISTINCT(superhero.id)) FROM superhero WHERE alignment_id = 1)) AS female_hero_percent FROM superhero JOIN gender ON superhero.gender_id = gender.id WHERE gender.gender = 'Female' AND alignment_id = 1
SELECT (COUNT(CASE WHEN gender_id = 2 THEN 1 END) * 100.0 / COUNT(*)) AS female_percentage FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')
SELECT (COUNT(CASE WHEN gender_id = 2 THEN 1 END) * 100.0 / COUNT(*)) AS female_percent FROM superhero WHERE publisher_id = 1
SELECT (COUNT(CASE WHEN gender_id = 2 THEN 1 END) * 100.0 / COUNT(*)) AS female_percent FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')
SELECT (COUNT(DISTINCT(superhero.id)) * 100.0 / (SELECT COUNT(DISTINCT(superhero.id)) FROM superhero WHERE alignment_id = 1)) AS female_hero_percentage FROM superhero JOIN gender ON superhero.gender_id = gender.id WHERE gender.gender = 'Female' AND alignment_id = 1
SELECT (COUNT(DISTINCT(superhero.id)) * 100.0 / (SELECT COUNT(DISTINCT(superhero.id)) FROM superhero WHERE gender_id = 2)) AS female_hero_percent FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE gender.gender = 'Female' AND publisher.publisher_name = 'Marvel Comics'
SELECT (COUNT(CASE WHEN gender_id = 2 THEN 1 END) * 100.0 / COUNT(*)) AS female_percent FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')",SELECT (COUNT(CASE WHEN gender_id = 2 THEN 1 END) * 100.0 / COUNT(*)) AS female_percent FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics'),0.0
46,307,Name the atoms' elements that form bond TR000_2_3.,toxicology,challenging,SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR000_2_3',7,"SELECT atom_id, molecule_id, element FROM atom WHERE molecule_id = (     SELECT molecule_id     FROM molecule     WHERE label = 'TR000_2_3' ) AND atom_id IN (     SELECT atom_id     FROM connected     WHERE bond_id IN (         SELECT bond_id         FROM bond         WHERE molecule_id = (             SELECT molecule_id             FROM molecule             WHERE label = 'TR000_2_3'         )     ) )
SELECT atom_id, molecule_id, element FROM TR000_2_3.atom WHERE molecule_id IN (     SELECT molecule_id     FROM molecule     WHERE label = 'TR000_2_3' ) AND atom_id IN (     SELECT atom_id     FROM connected     WHERE bond_id IN (         SELECT bond_id         FROM bond         WHERE bond_type = 'TR000_2_3'     ) )
SELECT atom_id, molecule_id, element FROM TR000_2_3.atom WHERE atom_id IN (SELECT atom_id FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR000_2_3')))
SELECT atom_id, molecule_id, element FROM atom WHERE molecule_id IN (     SELECT molecule_id     FROM molecule     WHERE label = 'TR000_2_3' ) AND atom_id IN (     SELECT atom_id     FROM connected     WHERE bond_id IN (         SELECT bond_id         FROM bond         WHERE bond_type = 'TR000_2_3'     ) )
SELECT atom_id, molecule_id, element FROM TR000_2_3.atom WHERE atom_id IN (     SELECT atom_id     FROM connected     WHERE bond_id IN (         SELECT bond_id         FROM bond         WHERE bond_type = 'TR000_2_3'     ) )
SELECT atom_id, atom_id2, bond_id, molecule_id, element, bond_type FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR000_2_3' AND element = 'TR000_2_3' AND bond_type = 'TR000_2_3' ORDER BY atom_id, atom_id2, bond_id, molecule_id, element, bond_type
SELECT atom.element, bond.bond_type FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.molecule_id = 'TR000_2_3' AND bond.molecule_id = 'TR000_2_3' AND atom.atom_id IN (SELECT atom_id2 FROM connected WHERE bond_id = bond.bond_id) AND atom.atom_id NOT IN (SELECT atom_id2 FROM connected WHERE bond_id = bond.bond_id AND atom_id = atom.atom_id) AND bond.bond_type = 'TR000_2_3' ORDER BY atom.atom_id, bond.bond_id","SELECT atom_id, molecule_id, element FROM atom WHERE molecule_id = (     SELECT molecule_id     FROM molecule     WHERE label = 'TR000_2_3' ) AND atom_id IN (     SELECT atom_id     FROM connected     WHERE bond_id IN (         SELECT bond_id         FROM bond         WHERE molecule_id = (             SELECT molecule_id             FROM molecule             WHERE label = 'TR000_2_3'         )     ) )",0.0
47,1057,Calculate the average home team goal in the 2010/2011 season in the country of Poland.,european_football_2,moderate,SELECT CAST(SUM(t2.home_team_goal) AS REAL) / COUNT(t2.id) FROM Country AS t1 INNER JOIN Match AS t2 ON t1.id = t2.country_id WHERE t1.name = 'Poland' AND t2.season = '2010/2011',7,"SELECT AVG(home_team_goal) FROM match WHERE season = '2010/2011' AND country_id = (SELECT id FROM country WHERE name = 'Poland')
SELECT AVG(home_team_goal) FROM match WHERE season = '2010/2011' AND country_id = (SELECT id FROM country WHERE name = 'Poland')
SELECT AVG(home_team_goal) FROM match WHERE season = '2010/2011' AND country_id = (SELECT id FROM country WHERE name = 'Poland')
SELECT AVG(home_team_goal) FROM match WHERE season = '2010/2011' AND country_id = (SELECT id FROM country WHERE name = 'Poland')
SELECT AVG(home_team_goal) FROM match WHERE season = '2010/2011' AND country_id = (SELECT id FROM country WHERE name = 'Poland')
SELECT AVG(home_team_goal) FROM match WHERE season = '2010/2011' AND country_id = (SELECT id FROM country WHERE name = 'Poland')
SELECT AVG(home_team_goal) FROM match WHERE season = '2010/2011' AND country_id = (SELECT id FROM country WHERE name = 'Poland')",SELECT AVG(home_team_goal) FROM match WHERE season = '2010/2011' AND country_id = (SELECT id FROM country WHERE name = 'Poland'),1.0
48,1264,"Among the patients have blood clots in veins, how many of them have a normal level of complement 4?",thrombosis_prediction,moderate,SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.C4 > 10 AND T1.Diagnosis = 'APS',7,"SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM laboratory WHERE c4 = 'normal') AND id IN (SELECT id FROM examination WHERE thrombosis = 'yes')
SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM laboratory WHERE c4 = 'normal') AND id IN (SELECT id FROM examination WHERE thrombosis = 'yes')
SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM laboratory WHERE c4 = 'normal') AND id IN (SELECT id FROM examination WHERE thrombosis = 'yes')
SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM laboratory WHERE c4 = 'normal') AND id IN (SELECT id FROM examination WHERE thrombosis = 'yes')
SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM laboratory WHERE c4 = 'normal') AND id IN (SELECT id FROM examination WHERE thrombosis = 'yes')
SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM laboratory WHERE c4 = 'normal') AND id IN (SELECT id FROM examination WHERE thrombosis = 'yes')
SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM laboratory WHERE c4 = 'normal') AND id IN (SELECT id FROM examination WHERE thrombosis = 'yes')",SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM laboratory WHERE c4 = 'normal') AND id IN (SELECT id FROM examination WHERE thrombosis = 'yes'),0.0
49,1115,What percentage is Landon Donovan's overall rating higher than Jordan Bowery on 2013/7/12?,european_football_2,challenging,"SELECT (SUM(CASE WHEN t1.player_name = 'Landon Donovan' THEN t2.overall_rating ELSE 0 END) * 1.0 - SUM(CASE WHEN t1.player_name = 'Jordan Bowery' THEN t2.overall_rating ELSE 0 END)) * 100 / SUM(CASE WHEN t1.player_name = 'Landon Donovan' THEN t2.overall_rating ELSE 0 END) LvsJ_percent FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_fifa_api_id = t2.player_fifa_api_id WHERE SUBSTR(t2.`date`, 1, 10) = '2013-07-12'",7,"NULL
SELECT player_attributes.overall_rating, player_attributes.potential, player_attributes.preferred_foot, player_attributes.attacking_work_rate, player_attributes.defensive_work_rate, player_attributes.crossing, player_attributes.finishing, player_attributes.heading_accuracy, player_attributes.short_passing, player_attributes.volleys, player_attributes.dribbling, player_attributes.curve, player_attributes.free_kick_accuracy, player_attributes.long_passing, player_attributes.ball_control, player_attributes.acceleration, player_attributes.sprint_speed, player_attributes.agility, player_attributes.reactions, player_attributes.balance, player_attributes.shot_power, player_attributes.jumping, player_attributes.stamina, player_attributes.strength, player_attributes.long_shots, player_attributes.aggression, player_attributes.interceptions, player_attributes.positioning, player_attributes.vision, player_attributes.penalties, player_attributes.marking, player_attributes.standing_tackle, player_attributes.sliding_tackle, player_attributes.gk_diving, player_attributes.gk_handling, player_attributes.gk_kicking, player_attributes.gk_positioning, player_attributes.gk_reflexes, player_attributes.buildupplayspeed, player_
NULL
NULL
NULL
SELECT overall_rating FROM player_attributes WHERE player_api_id = 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
NULL",,0.0
50,592,How many users are awarded with more than 5 badges?,codebase_community,simple,"SELECT COUNT(UserId) FROM ( SELECT UserId, COUNT(Name) AS num FROM badges GROUP BY UserId ) T WHERE T.num > 5",7,"SELECT COUNT(*) FROM users WHERE id IN (SELECT userid FROM badges GROUP BY userid HAVING COUNT(*) > 5)
SELECT COUNT(*) FROM users WHERE id IN (SELECT userid FROM badges GROUP BY userid HAVING COUNT(*) > 5)
SELECT COUNT(*) FROM users WHERE id IN (SELECT userid FROM badges GROUP BY userid HAVING COUNT(*) > 5)
SELECT COUNT(*) FROM users WHERE id IN (SELECT userid FROM badges GROUP BY userid HAVING COUNT(*) > 5)
SELECT COUNT(*) FROM users WHERE id IN (SELECT userid FROM badges GROUP BY userid HAVING COUNT(*) > 5)
SELECT COUNT(*) FROM users WHERE id IN (SELECT userid FROM badges GROUP BY userid HAVING COUNT(*) > 5)
SELECT COUNT(*) FROM users WHERE id IN (SELECT userid FROM badges GROUP BY userid HAVING COUNT(*) > 5)",SELECT COUNT(*) FROM users WHERE id IN (SELECT userid FROM badges GROUP BY userid HAVING COUNT(*) > 5),1.0
51,1232,"Provide ID, sex and age of patient who has blood glucose (GLU) not within normal range but with total cholesterol(T-CHO) within normal range.",thrombosis_prediction,challenging,"SELECT DISTINCT T1.ID, T1.SEX , STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GLU >= 180 AND T2.`T-CHO` < 250",7,"SELECT id, sex, age FROM patient WHERE id IN (SELECT id FROM laboratory WHERE glu NOT BETWEEN 70 AND 100 AND t-cho BETWEEN 150 AND 200) AND age BETWEEN 18 AND 65
SELECT id, sex, age FROM patient WHERE id IN (SELECT id FROM laboratory WHERE glu NOT BETWEEN 70 AND 100 AND t-cho BETWEEN 150 AND 200)
SELECT id, sex, age FROM patient WHERE id IN (SELECT id FROM laboratory WHERE glu NOT BETWEEN 70 AND 100 AND t-cho BETWEEN 150 AND 200)
SELECT id, sex, age FROM patient WHERE id IN (SELECT id FROM laboratory WHERE glu NOT BETWEEN 70 AND 100 AND t-cho BETWEEN 150 AND 200) AND age BETWEEN 18 AND 65
SELECT patient.id, patient.sex, patient.age FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.glu NOT BETWEEN 70 AND 100 AND laboratory.t-cho BETWEEN 150 AND 200
SELECT id, sex, age FROM patient WHERE id IN (SELECT id FROM laboratory WHERE glu NOT BETWEEN 70 AND 100 AND t-cho BETWEEN 150 AND 200) AND age BETWEEN 18 AND 65
SELECT patient.id, patient.sex, patient.age FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.glu NOT BETWEEN 70 AND 110 AND laboratory.t-cho BETWEEN 150 AND 200","SELECT id, sex, age FROM patient WHERE id IN (SELECT id FROM laboratory WHERE glu NOT BETWEEN 70 AND 100 AND t-cho BETWEEN 150 AND 200) AND age BETWEEN 18 AND 65",0.0
52,487,What is the percentage of incredibly powerful cards in the set Coldsnap?,card_games,challenging,SELECT CAST(SUM(CASE WHEN T1.cardKingdomFoilId IS NOT NULL AND T1.cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE T2.name = 'Coldsnap',7,"SELECT (COUNT(cards.id) * 100.0 / (SELECT COUNT(id) FROM cards)) AS percentage FROM cards JOIN sets ON cards.setcode = sets.code WHERE sets.name = 'Coldsnap' AND cards.power = '4' AND cards.toughness = '4' AND cards.loyalty = '4' AND cards.convertedmanacost = '4' AND cards.faceconvertedmanacost = '4' AND cards.isfullart = 1 AND cards.isreprint = 1 AND cards.isreserved = 1 AND cards.isstarter = 1 AND cards.istextless = 1 AND cards.istimeshifted = 1 AND cards.isfoil = 1 AND cards.isnonfoil = 1 AND cards.isoversized = 1 AND cards.ispromo = 1 AND cards.isalternative = 1 AND cards.hascontentwarning = 1 AND cards.hasalternativedecklimit = 1 AND cards.hasfoil = 1 AND cards.hasnonfoil = 1 AND cards.isstoryspotlight = 1 AND cards.ispartialpreview = 1 AND cards.isforeignonly = 1 AND cards.isonlineonly = 1 AND cards.ispartialpreview =
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards) FROM cards WHERE setcode = 'cns' AND power >= 10 AND toughness >= 10
SELECT (COUNT(cards.id) * 100.0 / (SELECT COUNT(*) FROM cards)) AS percentage FROM cards JOIN sets ON cards.setcode = sets.code WHERE sets.name = 'Coldsnap' AND cards.power = '4' AND cards.toughness = '4' AND cards.loyalty = '4' AND cards.convertedmanacost = '4' AND cards.faceconvertedmanacost = '4' AND cards.hand = '4' AND cards.life = '4' AND cards.loyalty = '4' AND cards.power = '4' AND cards.toughness = '4' AND cards.convertedmanacost = '4' AND cards.faceconvertedmanacost = '4' AND cards.hand = '4' AND cards.life = '4' AND cards.loyalty = '4' AND cards.power = '4' AND cards.toughness = '4' AND cards.convertedmanacost = '4' AND cards.faceconvertedmanacost = '4' AND cards.hand = '4' AND cards.life = '4' AND cards.loyalty = '4' AND cards.power = '4' AND cards.toughness = '4' AND cards.convertedmanacost = '4' AND
SELECT (     SELECT COUNT(*)     FROM cards     WHERE setcode = 'cns'     AND power = '5'     AND toughness = '5'     AND colors = 'W'     AND layout = 'normal'     AND rarity = 'mythic' ) * 100.0 / (     SELECT COUNT(*)     FROM cards     WHERE setcode = 'cns' ) AS percentage
SELECT (COUNT(cards.id) * 100.0 / (SELECT COUNT(cards.id) FROM cards WHERE cards.setcode = 'cns')) AS percentage_of_incredibly_powerful_cards FROM cards WHERE cards.setcode = 'cns' AND cards.power >= 10 AND cards.toughness >= 10
SELECT (COUNT(cards.id) * 100.0 / (SELECT COUNT(*) FROM cards)) AS percentage FROM cards JOIN sets ON cards.setcode = sets.code WHERE sets.name = 'Coldsnap' AND cards.power = '4' AND cards.toughness = '4' AND cards.loyalty = '4' AND cards.convertedmanacost = '4' AND cards.faceconvertedmanacost = '4' AND cards.isfullart = 1 AND cards.istextless = 1 AND cards.istimeshifted = 1 AND cards.isreprint = 1 AND cards.isreserved = 1 AND cards.isstarter = 1 AND cards.isstoryspotlight = 1 AND cards.isalternative = 1 AND cards.isfoil = 1 AND cards.isnonfoil = 1 AND cards.isoversized = 1 AND cards.ispromo = 1 AND cards.iscontentwarning = 1 AND cards.hasalternativedecklimit = 1 AND cards.hasfoil = 1 AND cards.hasnonfoil = 1 AND cards.hascontentwarning = 1 AND cards.hasfoil = 1 AND cards.hasnonfoil = 1 AND cards.hascontentwarning = 1 
SELECT (COUNT(cards.id) * 100.0 / (SELECT COUNT(cards.id) FROM cards WHERE cards.setcode = 'cns')) AS percentage_of_incredibly_powerful_cards FROM cards WHERE cards.setcode = 'cns' AND cards.power = '999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999",SELECT (COUNT(cards.id) * 100.0 / (SELECT COUNT(id) FROM cards)) AS percentage FROM cards JOIN sets ON cards.setcode = sets.code WHERE sets.name = 'Coldsnap' AND cards.power = '4' AND cards.toughness = '4' AND cards.loyalty = '4' AND cards.convertedmanacost = '4' AND cards.faceconvertedmanacost = '4' AND cards.isfullart = 1 AND cards.isreprint = 1 AND cards.isreserved = 1 AND cards.isstarter = 1 AND cards.istextless = 1 AND cards.istimeshifted = 1 AND cards.isfoil = 1 AND cards.isnonfoil = 1 AND cards.isoversized = 1 AND cards.ispromo = 1 AND cards.isalternative = 1 AND cards.hascontentwarning = 1 AND cards.hasalternativedecklimit = 1 AND cards.hasfoil = 1 AND cards.hasnonfoil = 1 AND cards.isstoryspotlight = 1 AND cards.ispartialpreview = 1 AND cards.isforeignonly = 1 AND cards.isonlineonly = 1 AND cards.ispartialpreview =,0.0
53,1070,Which country is the league Italy Serie A from?,european_football_2,simple,SELECT t1.name FROM Country AS t1 INNER JOIN League AS t2 ON t1.id = t2.country_id WHERE t2.name = 'Italy Serie A',7,"NULL
NULL
NULL
NULL
NULL
SELECT country.name FROM country WHERE country.id = (SELECT league.country_id FROM league WHERE league.name = 'Italy Serie A')
NULL",,0.0
54,639,"Based on posts posted by Community, calculate the percentage of posts that use the R language.",codebase_community,challenging,"SELECT CAST(SUM(IIF(T3.TagName = 'r', 1, 0)) AS REAL) * 100 / COUNT(T1.Id) FROM users AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.UserId INNER JOIN tags AS T3 ON T3.ExcerptPostId = T2.PostId WHERE T1.DisplayName = 'Community'",7,"SELECT (COUNT(CASE WHEN tags LIKE '%r%' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_of_posts_using_r FROM posts
SELECT (COUNT(DISTINCT posts.id) * 100.0 / (SELECT COUNT(DISTINCT id) FROM posts)) AS percentage_of_posts_using_r_language FROM posts JOIN tags ON posts.tags LIKE '%<r>%' WHERE posts.posttypeid = 1
SELECT (COUNT(CASE WHEN tags LIKE '%r%' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_of_posts_using_r_language FROM posts
SELECT (COUNT(CASE WHEN tags LIKE '%r%' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_of_posts_using_r FROM posts
NULL
SELECT (COUNT(CASE WHEN tags LIKE '%r%' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_of_posts_using_r FROM posts
SELECT (COUNT(CASE WHEN tags LIKE '%r%' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_of_posts_using_r FROM posts",SELECT (COUNT(CASE WHEN tags LIKE '%r%' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_of_posts_using_r FROM posts,0.0
55,994,"Which constructor scored most points from Monaco Grand Prix between 1980 and 2010? List the score, name and nationality of this team.",formula_1,challenging,"SELECT SUM(T1.points), T2.name, T2.nationality FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId INNER JOIN races AS T3 ON T3.raceid = T1.raceid WHERE T3.name = 'Monaco Grand Prix' AND T3.year BETWEEN 1980 AND 2010 GROUP BY T2.name ORDER BY SUM(T1.points) DESC LIMIT 1",7,"SELECT constructors.name, constructors.nationality, SUM(results.points) AS total_points FROM constructors JOIN results ON constructors.constructorid = results.constructorid JOIN races ON results.raceid = races.raceid WHERE races.name = 'Monaco Grand Prix' AND races.year BETWEEN 1980 AND 2010 GROUP BY constructors.name, constructors.nationality ORDER BY total_points DESC LIMIT 1
SELECT constructors.name, constructors.nationality, constructorresults.points FROM constructors JOIN constructorresults ON constructors.constructorid = constructorresults.constructorid JOIN races ON constructorresults.raceid = races.raceid WHERE races.name = 'Monaco Grand Prix' AND races.year BETWEEN 1980 AND 2010 ORDER BY constructorresults.points DESC LIMIT 1
SELECT constructors.name, constructors.nationality, SUM(results.points) AS points FROM constructors JOIN results ON constructors.constructorid = results.constructorid JOIN races ON results.raceid = races.raceid WHERE races.name = 'Monaco Grand Prix' AND races.year BETWEEN 1980 AND 2010 GROUP BY constructors.name, constructors.nationality ORDER BY points DESC LIMIT 1
SELECT constructors.name, constructors.nationality, SUM(results.points) AS total_points FROM constructors JOIN results ON constructors.constructorid = results.constructorid JOIN races ON results.raceid = races.raceid WHERE races.name = 'Monaco Grand Prix' AND races.year BETWEEN 1980 AND 2010 GROUP BY constructors.name, constructors.nationality ORDER BY total_points DESC LIMIT 1
SELECT constructors.name, constructors.nationality, SUM(results.points) AS total_points FROM constructors JOIN results ON constructors.constructorid = results.constructorid JOIN races ON results.raceid = races.raceid WHERE races.name = 'Monaco Grand Prix' AND races.year BETWEEN 1980 AND 2010 GROUP BY constructors.name, constructors.nationality ORDER BY total_points DESC LIMIT 1
SELECT constructors.name, constructors.nationality, SUM(results.points) AS total_points FROM constructors JOIN results ON constructors.constructorid = results.constructorid JOIN races ON results.raceid = races.raceid WHERE races.name = 'Monaco Grand Prix' AND races.year BETWEEN 1980 AND 2010 GROUP BY constructors.name, constructors.nationality ORDER BY total_points DESC LIMIT 1
SELECT constructors.name, constructors.nationality, SUM(results.points) AS total_points FROM constructors JOIN results ON constructors.constructorid = results.constructorid JOIN races ON results.raceid = races.raceid WHERE races.name = 'Monaco Grand Prix' AND races.year BETWEEN 1980 AND 2010 GROUP BY constructors.name, constructors.nationality ORDER BY total_points DESC LIMIT 1","SELECT constructors.name, constructors.nationality, SUM(results.points) AS total_points FROM constructors JOIN results ON constructors.constructorid = results.constructorid JOIN races ON results.raceid = races.raceid WHERE races.name = 'Monaco Grand Prix' AND races.year BETWEEN 1980 AND 2010 GROUP BY constructors.name, constructors.nationality ORDER BY total_points DESC LIMIT 1",0.0
56,1026,Which home team had lost the fewest matches in the 2016 season?,european_football_2,moderate,SELECT teamDetails.team_long_name FROM Match AS matchData INNER JOIN Team AS teamDetails ON matchData.home_team_api_id = teamDetails.team_api_id WHERE matchData.season = '2015/2016' AND matchData.home_team_goal - matchData.away_team_goal < 0 GROUP BY matchData.home_team_api_id ORDER BY COUNT(*) ASC LIMIT 1,7,"SELECT home_team_api_id, COUNT(*) AS matches_lost FROM match WHERE home_team_goal < away_team_goal GROUP BY home_team_api_id ORDER BY matches_lost ASC LIMIT 1
SELECT home_team_api_id, COUNT(*) AS matches_lost FROM match WHERE home_team_goal < away_team_goal GROUP BY home_team_api_id ORDER BY matches_lost ASC LIMIT 1
SELECT home_team_api_id, COUNT(*) AS matches_lost FROM match WHERE home_team_goal < away_team_goal GROUP BY home_team_api_id ORDER BY matches_lost ASC LIMIT 1
SELECT home_team_api_id, COUNT(*) AS matches_lost FROM match WHERE home_team_goal < away_team_goal GROUP BY home_team_api_id ORDER BY matches_lost ASC LIMIT 1
NULL
SELECT home_team_api_id, COUNT(*) AS matches_lost FROM match WHERE home_team_goal < away_team_goal GROUP BY home_team_api_id ORDER BY matches_lost ASC LIMIT 1
SELECT home_team_api_id, COUNT(*) AS matches_lost FROM match WHERE home_team_goal < away_team_goal GROUP BY home_team_api_id ORDER BY matches_lost ASC LIMIT 1","SELECT home_team_api_id, COUNT(*) AS matches_lost FROM match WHERE home_team_goal < away_team_goal GROUP BY home_team_api_id ORDER BY matches_lost ASC LIMIT 1",0.0
57,1023,"Among the players with an overall rating between 60 to 65, how many players whose going to be in all of your attack moves instead of defensing?",european_football_2,moderate,SELECT COUNT(id) FROM Player_Attributes WHERE overall_rating BETWEEN 60 AND 65 AND defensive_work_rate = 'low',7,"SELECT player_attributes.player_api_id, player_attributes.player_fifa_api_id, player_attributes.overall_rating, player_attributes.potential, player_attributes.preferred_foot, player_attributes.attacking_work_rate, player_attributes.defensive_work_rate, player_attributes.crossing, player_attributes.finishing, player_attributes.heading_accuracy, player_attributes.short_passing, player_attributes.volleys, player_attributes.dribbling, player_attributes.curve, player_attributes.free_kick_accuracy, player_attributes.long_passing, player_attributes.ball_control, player_attributes.acceleration, player_attributes.sprint_speed, player_attributes.agility, player_attributes.reactions, player_attributes.balance, player_attributes.shot_power, player_attributes.jumping, player_attributes.stamina, player_attributes.strength, player_attributes.long_shots, player_attributes.aggression, player_attributes.interceptions, player_attributes.positioning, player_attributes.vision, player_attributes.penalties, player_attributes.marking, player_attributes.standing_tackle, player_attributes.sliding_tackle, player_attributes.gk_diving, player_attributes.gk_handling, player_attributes.gk_kicking, player_attributes.gk_positioning,
SELECT COUNT(*) FROM player_attributes WHERE overall_rating BETWEEN 60 AND 65 AND preferred_foot = 'right' AND attacking_work_rate = 'high' AND defensive_work_rate = 'high' AND crossing > 0 AND finishing > 0 AND heading_accuracy > 0 AND short_passing > 0 AND volleys > 0 AND dribbling > 0 AND curve > 0 AND free_kick_accuracy > 0 AND long_passing > 0 AND ball_control > 0 AND acceleration > 0 AND sprint_speed > 0 AND agility > 0 AND reactions > 0 AND balance > 0 AND shot_power > 0 AND jumping > 0 AND stamina > 0 AND strength > 0 AND long_shots > 0 AND aggression > 0 AND interceptions > 0 AND positioning > 0 AND vision > 0 AND penalties > 0 AND marking > 0 AND standing_tackle > 0 AND sliding_tackle > 0 AND gk_diving > 0 AND gk_handling > 0 AND gk_kicking > 0 AND gk_positioning > 0 AND gk_reflexes > 0 AND team_api_id IN (SELECT team
SELECT player_attributes.player_api_id, player_attributes.player_fifa_api_id, player_attributes.overall_rating, player_attributes.potential, player_attributes.preferred_foot, player_attributes.attacking_work_rate, player_attributes.defensive_work_rate, player_attributes.crossing, player_attributes.finishing, player_attributes.heading_accuracy, player_attributes.short_passing, player_attributes.volleys, player_attributes.dribbling, player_attributes.curve, player_attributes.free_kick_accuracy, player_attributes.long_passing, player_attributes.ball_control, player_attributes.acceleration, player_attributes.sprint_speed, player_attributes.agility, player_attributes.reactions, player_attributes.balance, player_attributes.shot_power, player_attributes.jumping, player_attributes.stamina, player_attributes.strength, player_attributes.long_shots, player_attributes.aggression, player_attributes.interceptions, player_attributes.positioning, player_attributes.vision, player_attributes.penalties, player_attributes.marking, player_attributes.standing_tackle, player_attributes.sliding_tackle, player_attributes.gk_diving, player_attributes.gk_handling, player_attributes.gk_kicking, player_attributes.gk_positioning,
SELECT player_attributes.player_api_id, player_attributes.player_fifa_api_id, player_attributes.overall_rating, player_attributes.potential, player_attributes.preferred_foot, player_attributes.attacking_work_rate, player_attributes.defensive_work_rate, player_attributes.crossing, player_attributes.finishing, player_attributes.heading_accuracy, player_attributes.short_passing, player_attributes.volleys, player_attributes.dribbling, player_attributes.curve, player_attributes.free_kick_accuracy, player_attributes.long_passing, player_attributes.ball_control, player_attributes.acceleration, player_attributes.sprint_speed, player_attributes.agility, player_attributes.reactions, player_attributes.balance, player_attributes.shot_power, player_attributes.jumping, player_attributes.stamina, player_attributes.strength, player_attributes.long_shots, player_attributes.aggression, player_attributes.interceptions, player_attributes.positioning, player_attributes.vision, player_attributes.penalties, player_attributes.marking, player_attributes.standing_tackle, player_attributes.sliding_tackle, player_attributes.gk_diving, player_attributes.gk_handling, player_attributes.gk_kicking, player_attributes.gk_positioning,
NULL
select the players with an overall rating between 60 and 65: SELECT * FROM player_attributes WHERE overall_rating BETWEEN 60 AND 65
NULL","SELECT player_attributes.player_api_id, player_attributes.player_fifa_api_id, player_attributes.overall_rating, player_attributes.potential, player_attributes.preferred_foot, player_attributes.attacking_work_rate, player_attributes.defensive_work_rate, player_attributes.crossing, player_attributes.finishing, player_attributes.heading_accuracy, player_attributes.short_passing, player_attributes.volleys, player_attributes.dribbling, player_attributes.curve, player_attributes.free_kick_accuracy, player_attributes.long_passing, player_attributes.ball_control, player_attributes.acceleration, player_attributes.sprint_speed, player_attributes.agility, player_attributes.reactions, player_attributes.balance, player_attributes.shot_power, player_attributes.jumping, player_attributes.stamina, player_attributes.strength, player_attributes.long_shots, player_attributes.aggression, player_attributes.interceptions, player_attributes.positioning, player_attributes.vision, player_attributes.penalties, player_attributes.marking, player_attributes.standing_tackle, player_attributes.sliding_tackle, player_attributes.gk_diving, player_attributes.gk_handling, player_attributes.gk_kicking, player_attributes.gk_positioning,",0.0
58,371,What is the percentage of cards whose language is French among the Story Spotlight cards?,card_games,challenging,SELECT CAST(SUM(CASE WHEN T2.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.isStorySpotlight = 1,7,"SELECT (SELECT COUNT(*) FROM cards WHERE isstoryspotlight = 1 AND language = 'French') * 100.0 / (SELECT COUNT(*) FROM cards WHERE isstoryspotlight = 1) AS percentage
SELECT (COUNT(CASE WHEN language = 'French' THEN 1 END) * 100.0 / COUNT(*)) AS percentage_french_cards FROM cards WHERE isstoryspotlight = 1
SELECT (SELECT COUNT(*) FROM cards WHERE isstoryspotlight = 1 AND language = 'French') * 100.0 / (SELECT COUNT(*) FROM cards WHERE isstoryspotlight = 1) AS percentage
SELECT (SELECT COUNT(*) FROM cards WHERE isstoryspotlight = 1 AND language = 'French') * 100.0 / (SELECT COUNT(*) FROM cards WHERE isstoryspotlight = 1) AS percentage
SELECT (COUNT(DISTINCT cards.id) * 100.0 / (SELECT COUNT(DISTINCT id) FROM cards)) AS percentage FROM cards JOIN foreign_data ON cards.id = foreign_data.multiverseid WHERE cards.isstoryspotlight = 1 AND foreign_data.language = 'French'
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards) FROM cards WHERE isstoryspotlight = 1 AND language = 'French'
SELECT (SELECT COUNT(*) FROM cards WHERE isstoryspotlight = 1 AND language = 'French') * 100.0 / (SELECT COUNT(*) FROM cards WHERE isstoryspotlight = 1) AS percentage",SELECT (SELECT COUNT(*) FROM cards WHERE isstoryspotlight = 1 AND language = 'French') * 100.0 / (SELECT COUNT(*) FROM cards WHERE isstoryspotlight = 1) AS percentage,0.0
59,772,"List the eyes, hair and skin colour of all female superheroes published by Dark Horse Comics.",superhero,challenging,"SELECT T1.eye_colour_id, T1.hair_colour_id, T1.skin_colour_id FROM superhero AS T1 INNER JOIN publisher AS T2 ON T2.id = T1.publisher_id INNER JOIN gender AS T3 ON T3.id = T1.gender_id WHERE T2.publisher_name = 'Dark Horse Comics' AND T3.gender = 'Female'",7,"SELECT superhero.superhero_name, superhero.eye_colour_id, superhero.hair_colour_id, superhero.skin_colour_id FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE gender.gender = 'Female' AND publisher.publisher_name = 'Dark Horse Comics'
SELECT superhero.superhero_name, superhero.eye_colour_id, superhero.hair_colour_id, superhero.skin_colour_id FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE gender.gender = 'Female' AND publisher.publisher_name = 'Dark Horse Comics'
SELECT superhero.superhero_name, superhero.eye_colour_id, superhero.hair_colour_id, superhero.skin_colour_id FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE gender.gender = 'Female' AND publisher.publisher_name = 'Dark Horse Comics'
SELECT superhero.superhero_name, superhero.eye_colour_id, superhero.hair_colour_id, superhero.skin_colour_id FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE gender.gender = 'Female' AND publisher.publisher_name = 'Dark Horse Comics'
SELECT superhero.superhero_name, superhero.eye_colour_id, superhero.hair_colour_id, superhero.skin_colour_id FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE gender.gender = 'Female' AND publisher.publisher_name = 'Dark Horse Comics'
SELECT superhero.superhero_name, superhero.eye_colour_id, superhero.hair_colour_id, superhero.skin_colour_id FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE gender.gender = 'Female' AND publisher.publisher_name = 'Dark Horse Comics'
SELECT superhero.superhero_name, superhero.eye_colour_id, superhero.hair_colour_id, superhero.skin_colour_id FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE gender.gender = 'Female' AND publisher.publisher_name = 'Dark Horse Comics'","SELECT superhero.superhero_name, superhero.eye_colour_id, superhero.hair_colour_id, superhero.skin_colour_id FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE gender.gender = 'Female' AND publisher.publisher_name = 'Dark Horse Comics'",0.0
60,232,Please list top three molecules that have single bonds between two atoms and are not carcinogenic in alphabetical order.,toxicology,moderate,SELECT DISTINCT T2.molecule_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' AND T2.label = '-' ORDER BY T2.molecule_id LIMIT 3,7,"SELECT molecule.label FROM molecule JOIN atom ON molecule.molecule_id = atom.molecule_id JOIN bond ON molecule.molecule_id = bond.molecule_id JOIN connected ON atom.atom_id = connected.atom_id WHERE bond.bond_type = 'single' AND molecule.label NOT IN (     SELECT molecule.label     FROM molecule     JOIN atom ON molecule.molecule_id = atom.molecule_id     JOIN bond ON molecule.molecule_id = bond.molecule_id     JOIN connected ON atom.atom_id = connected.atom_id     WHERE bond.bond_type = 'double'     OR bond.bond_type = 'triple' ) ORDER BY molecule.label ASC LIMIT 3
SELECT molecule.label FROM molecule JOIN atom ON molecule.molecule_id = atom.molecule_id JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'single' GROUP BY molecule.label HAVING COUNT(DISTINCT atom.atom_id) = 2 ORDER BY molecule.label LIMIT 3
SELECT molecule.label FROM molecule JOIN connected ON molecule.molecule_id = connected.molecule_id JOIN atom ON connected.atom_id = atom.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'single' AND molecule.molecule_id NOT IN (     SELECT molecule_id     FROM molecule     WHERE label LIKE '%carcinogenic%' ) ORDER BY molecule.label LIMIT 3
SELECT molecule.label FROM molecule JOIN connected ON molecule.molecule_id = connected.molecule_id JOIN atom ON connected.atom_id = atom.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'single' AND molecule.molecule_id NOT IN (     SELECT molecule_id     FROM molecule     WHERE label LIKE '%carcinogenic%' ) ORDER BY molecule.label LIMIT 3
SELECT molecule.label FROM molecule JOIN atom ON molecule.molecule_id = atom.molecule_id JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'single' AND molecule.label NOT IN (     SELECT molecule.label     FROM molecule     JOIN atom ON molecule.molecule_id = atom.molecule_id     JOIN connected ON atom.atom_id = connected.atom_id     JOIN bond ON connected.bond_id = bond.bond_id     WHERE bond.bond_type = 'double'     OR bond.bond_type = 'triple' ) ORDER BY molecule.label LIMIT 3
SELECT molecule.label FROM molecule JOIN atom ON molecule.molecule_id = atom.molecule_id JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'single' AND molecule.label NOT IN (     SELECT molecule.label     FROM molecule     JOIN atom ON molecule.molecule_id = atom.molecule_id     JOIN connected ON atom.atom_id = connected.atom_id     JOIN bond ON connected.bond_id = bond.bond_id     WHERE bond.bond_type = 'double'     OR bond.bond_type = 'triple' ) ORDER BY molecule.label LIMIT 3
SELECT molecule.label FROM molecule JOIN atom ON molecule.molecule_id = atom.molecule_id JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'single' AND molecule.label NOT IN (     SELECT molecule.label     FROM molecule     JOIN atom ON molecule.molecule_id = atom.molecule_id     JOIN connected ON atom.atom_id = connected.atom_id     JOIN bond ON connected.bond_id = bond.bond_id     WHERE bond.bond_type = 'double'     OR bond.bond_type = 'triple' ) ORDER BY molecule.label LIMIT 3",SELECT molecule.label FROM molecule JOIN atom ON molecule.molecule_id = atom.molecule_id JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'single' AND molecule.label NOT IN (     SELECT molecule.label     FROM molecule     JOIN atom ON molecule.molecule_id = atom.molecule_id     JOIN connected ON atom.atom_id = connected.atom_id     JOIN bond ON connected.bond_id = bond.bond_id     WHERE bond.bond_type = 'double'     OR bond.bond_type = 'triple' ) ORDER BY molecule.label LIMIT 3,0.0
61,1297,"For the patients whose total cholesterol is higher than normal, how many of them have a negative measure of degree of coagulation?",thrombosis_prediction,moderate,SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.`T-CHO` >= 250 AND T3.KCT = '-',7,"SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM laboratory WHERE t-cho > 200 AND (pt < 0 OR aptt < 0))
SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM laboratory WHERE t-cho > 200) AND id IN (SELECT id FROM laboratory WHERE fg < 0)
SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM laboratory WHERE t-cho > 200 AND (igg < 0 OR iga < 0 OR igm < 0))
SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM laboratory WHERE t-cho > 200) AND id IN (SELECT id FROM laboratory WHERE pic < 0)
SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM laboratory WHERE t-cho > 200) AND id IN (SELECT id FROM laboratory WHERE pic < 0)
SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM laboratory WHERE t-cho > 200) AND id IN (SELECT id FROM laboratory WHERE pic < 0)
SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM laboratory WHERE t-cho > 200) AND id IN (SELECT id FROM laboratory WHERE pic < 0)",SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM laboratory WHERE t-cho > 200) AND id IN (SELECT id FROM laboratory WHERE pic < 0),0.0
62,171,What was the difference in the number of crimes committed in East and North Bohemia in 1996?,financial,moderate,"SELECT SUM(IIF(A3 = 'east Bohemia', A16, 0)) - SUM(IIF(A3 = 'north Bohemia', A16, 0)) FROM district",7,"NULL
SELECT SUM(CASE WHEN district_id = 1 THEN 1 ELSE 0 END) AS East_Bohemia_Crimes,        SUM(CASE WHEN district_id = 2 THEN 1 ELSE 0 END) AS North_Bohemia_Crimes FROM district WHERE a1 = 1996
SELECT a1.district_id, a1.year, a1.crimes_committed - a2.crimes_committed AS difference FROM (     SELECT district_id, strftime('%Y', date) AS year, COUNT(*) AS crimes_committed     FROM trans     WHERE type = 'VYDAJ' AND operation = 'VYBER KARTOU'     GROUP BY district_id, year ) a1 JOIN (     SELECT district_id, strftime('%Y', date) AS year, COUNT(*) AS crimes_committed     FROM trans     WHERE type = 'VYDAJ' AND operation = 'VYBER KARTOU'     GROUP BY district_id, year ) a2 ON a1.district_id = a2.district_id AND a1.year = a2.year + 1 WHERE a1.year = 1996
NULL
SELECT SUM(CASE WHEN district_id = 1 THEN 1 ELSE 0 END) AS East_Bohemia_1996_Crimes,        SUM(CASE WHEN district_id = 2 THEN 1 ELSE 0 END) AS North_Bohemia_1996_Crimes FROM trans WHERE date >= '1996-01-01' AND date < '1997-01-01'
NULL
NULL",,0.0
63,679,Which post has the highest score? Please give its id and title's name.,codebase_community,simple,"SELECT T1.Id, T2.Title FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId ORDER BY T2.Score DESC LIMIT 1",7,"SELECT id, title FROM posts WHERE score = (SELECT MAX(score) FROM posts)
SELECT posts.id, posts.title FROM posts ORDER BY posts.score DESC LIMIT 1
SELECT posts.id, posts.title FROM posts ORDER BY posts.score DESC LIMIT 1
SELECT posts.id, posts.title FROM posts ORDER BY posts.score DESC LIMIT 1
SELECT posts.id, posts.title FROM posts ORDER BY posts.score DESC LIMIT 1
SELECT posts.id, posts.title FROM posts ORDER BY posts.score DESC LIMIT 1
SELECT posts.id, posts.title FROM posts ORDER BY posts.score DESC LIMIT 1","SELECT posts.id, posts.title FROM posts ORDER BY posts.score DESC LIMIT 1",0.0
64,1437,Which members who were approved from 1/10/2019 to 11/19/2019? Please identify the member who attended the event and the link to their event.,student_club,challenging,"SELECT DISTINCT T1.link_to_member, T3.link_to_event FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN attendance AS T3 ON T2.member_id = T3.link_to_member WHERE date(SUBSTR(T1.expense_date, 1, 10)) BETWEEN '2019-01-10' AND '2019-11-19' AND T1.approved = 'true'",7,"SELECT member.first_name, member.last_name, member.email, member.position, member.t_shirt_size, member.phone, member.zip, member.link_to_major, attendance.link_to_event, event.event_name, event.event_date, event.type, event.notes, event.location, event.status FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_date BETWEEN '2019-01-10' AND '2019-11-19'
SELECT member.first_name, member.last_name, member.email, member.position, member.t_shirt_size, member.phone, member.zip, member.link_to_major, attendance.link_to_event, event.event_name, event.event_date, event.type, event.notes, event.location, event.status FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_date BETWEEN '2019-01-10' AND '2019-11-19'
SELECT member.first_name, member.last_name, member.email, member.position, member.t_shirt_size, member.phone, member.zip, member.link_to_major, attendance.link_to_event, event.event_name, event.event_date, event.type, event.notes, event.location, event.status FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_date BETWEEN '2019-01-10' AND '2019-11-19'
SELECT member.first_name, member.last_name, member.email, member.position, member.t_shirt_size, member.phone, member.zip, member.link_to_major, event.event_name, event.event_date, event.type, event.notes, event.location, event.status FROM member INNER JOIN attendance ON member.member_id = attendance.link_to_member INNER JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_date BETWEEN '2019-01-10' AND '2019-11-19'
SELECT member.first_name, member.last_name, member.email, member.position, member.t_shirt_size, member.phone, member.zip, member.link_to_major, event.event_name, event.event_date, event.type, event.notes, event.location, event.status FROM member INNER JOIN attendance ON member.member_id = attendance.link_to_member INNER JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_date BETWEEN '2019-01-10' AND '2019-11-19'
SELECT member.first_name, member.last_name, member.email, member.position, member.t_shirt_size, member.phone, member.zip, member.link_to_major, attendance.link_to_event, event.event_name, event.event_date, event.type, event.notes, event.location, event.status FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_date BETWEEN '2019-01-10' AND '2019-11-19'
SELECT member.first_name, member.last_name, member.email, member.position, member.t_shirt_size, member.phone, member.zip, member.link_to_major, attendance.link_to_event, event.event_name, event.event_date, event.type, event.notes, event.location, event.status FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_date BETWEEN '2019-01-10' AND '2019-11-19'","SELECT member.first_name, member.last_name, member.email, member.position, member.t_shirt_size, member.phone, member.zip, member.link_to_major, attendance.link_to_event, event.event_name, event.event_date, event.type, event.notes, event.location, event.status FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_date BETWEEN '2019-01-10' AND '2019-11-19'",0.0
65,328,"List all the elements with double bond, consisted in molecule TR024.",toxicology,challenging,SELECT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR024' AND T2.bond_type = '=',7,"SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR024' AND bond.bond_type = 'double'
SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR024' AND bond.bond_type = 'double'
SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR024' AND bond.bond_type = 'double'
SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR024' AND bond.bond_type = 'double'
SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR024' AND bond.bond_type = 'double'
SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR024' AND bond.bond_type = 'double'
SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR024' AND bond.bond_type = 'double'",SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR024' AND bond.bond_type = 'double',0.0
66,1243,"For all patients who are older than 55 years old, what is the percentage of female who has abnormal prothrombin time (PT)?",thrombosis_prediction,challenging,"SELECT CAST(SUM(CASE WHEN T2.PT >= 14 AND T1.SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) > 55",7,"SELECT COUNT(*) FROM patient WHERE sex = 'F' AND birthday < 55
SELECT COUNT(*) FROM patient WHERE sex = 'F' AND birthday < DATE('now', '-55 years') AND examination.pt > 15
SELECT COUNT(*) FROM patient WHERE sex = 'F' AND birthday < DATE('now', '-55 years') AND examination.pt > 15
SELECT COUNT(*) FROM patient WHERE sex = 'F' AND birthday < '1955-01-01'
SELECT COUNT(*) FROM patient WHERE sex = 'F' AND birthday < 55
SELECT COUNT(*) FROM patient WHERE sex = 'F' AND birthday < 55
SELECT COUNT(*) FROM patient WHERE sex = 'F' AND birthday < '1955-01-01' AND examination.pt > 150",SELECT COUNT(*) FROM patient WHERE sex = 'F' AND birthday < 55,0.0
67,1292,What is the anti Cardiolipin antibody concentration of the female patient with the highest uric acid level in the normal range?,thrombosis_prediction,challenging,"SELECT T3.`aCL IgG`, T3.`aCL IgM`, T3.`aCL IgA` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T3.ID = T2.ID WHERE T1.SEX = 'F' AND T2.UA > 6.5 ORDER BY T2.UA DESC LIMIT 1",7,"SELECT acl_igg, acl_igm, ana, ana_pattern, acl_iga, diagnosis, kct, rvvt, lac, symptoms, thrombosis FROM examination WHERE id = 'id' AND examination_date = 'examination date' AND acl_igg = 'acl igg' AND acl_igm = 'acl igm' AND ana = 'ana' AND ana_pattern = 'ana pattern' AND acl_iga = 'acl iga' AND diagnosis = 'diagnosis' AND kct = 'kct' AND rvvt = 'rvvt' AND lac = 'lac' AND symptoms = 'symptoms' AND thrombosis = 'thrombosis'
SELECT acl_igg, acl_igm, ana, ana_pattern, acl_iga, diagnosis, kct, rvvt, lac, symptoms, thrombosis FROM examination WHERE id = 'id' AND examination_date = 'examination date' AND acl_igg = 'acl igg' AND acl_igm = 'acl igm' AND ana = 'ana' AND ana_pattern = 'ana pattern' AND acl_iga = 'acl iga' AND diagnosis = 'diagnosis' AND kct = 'kct' AND rvvt = 'rvvt' AND lac = 'lac' AND symptoms = 'symptoms' AND thrombosis = 'thrombosis'
SELECT acl_igg, acl_igm, ana, ana_pattern, acl_iga, diagnosis, kct, rvvt, lac, symptoms, thrombosis FROM examination WHERE id = 'id' AND examination_date = 'examination date' AND acl_igg = 'acl igg' AND acl_igm = 'acl igm' AND ana = 'ana' AND ana_pattern = 'ana pattern' AND acl_iga = 'acl iga' AND diagnosis = 'diagnosis' AND kct = 'kct' AND rvvt = 'rvvt' AND lac = 'lac' AND symptoms = 'symptoms' AND thrombosis = 'thrombosis'
SELECT acl_igg, acl_igm, ana, ana_pattern, acl_iga, diagnosis, kct, rvvt, lac, symptoms, thrombosis FROM examination WHERE id = 'id' AND examination_date = 'examination date' AND acl_igg = 'acl igg' AND acl_igm = 'acl igm' AND ana = 'ana' AND ana_pattern = 'ana pattern' AND acl_iga = 'acl iga' AND diagnosis = 'diagnosis' AND kct = 'kct' AND rvvt = 'rvvt' AND lac = 'lac' AND symptoms = 'symptoms' AND thrombosis = 'thrombosis'
SELECT acl_igg, acl_igm, ana, ana_pattern, acl_iga, diagnosis, kct, rvvt, lac, symptoms, thrombosis FROM examination WHERE id = 'id' AND examination_date = 'examination date' AND acl_igg = 'acl igg' AND acl_igm = 'acl igm' AND ana = 'ana' AND ana_pattern = 'ana pattern' AND acl_iga = 'acl iga' AND diagnosis = 'diagnosis' AND kct = 'kct' AND rvvt = 'rvvt' AND lac = 'lac' AND symptoms = 'symptoms' AND thrombosis = 'thrombosis'
SELECT acl_igg, acl_igm, ana, ana_pattern, acl_iga, diagnosis, kct, rvvt, lac, symptoms, thrombosis FROM examination WHERE id = 'id' AND examination_date = 'examination date' AND acl_igg = 'acl igg' AND acl_igm = 'acl igm' AND ana = 'ana' AND ana_pattern = 'ana pattern' AND acl_iga = 'acl iga' AND diagnosis = 'diagnosis' AND kct = 'kct' AND rvvt = 'rvvt' AND lac = 'lac' AND symptoms = 'symptoms' AND thrombosis = 'thrombosis'
SELECT acl_igg, acl_igm, ana, ana_pattern, acl_iga, diagnosis, kct, rvvt, lac, symptoms, thrombosis FROM examination WHERE id = 'id' AND examination_date = 'examination date' AND acl_igg = 'acl igg' AND acl_igm = 'acl igm' AND ana = 'ana' AND ana_pattern = 'ana pattern' AND acl_iga = 'acl iga' AND diagnosis = 'diagnosis' AND kct = 'kct' AND rvvt = 'rvvt' AND lac = 'lac' AND symptoms = 'symptoms' AND thrombosis = 'thrombosis'","SELECT acl_igg, acl_igm, ana, ana_pattern, acl_iga, diagnosis, kct, rvvt, lac, symptoms, thrombosis FROM examination WHERE id = 'id' AND examination_date = 'examination date' AND acl_igg = 'acl igg' AND acl_igm = 'acl igm' AND ana = 'ana' AND ana_pattern = 'ana pattern' AND acl_iga = 'acl iga' AND diagnosis = 'diagnosis' AND kct = 'kct' AND rvvt = 'rvvt' AND lac = 'lac' AND symptoms = 'symptoms' AND thrombosis = 'thrombosis'",0.0
68,198,On average how many carcinogenic molecules are single bonded?,toxicology,challenging,"SELECT AVG(single_bond_count) FROM (SELECT T3.molecule_id, COUNT(T1.bond_type) AS single_bond_count FROM bond AS T1  INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN molecule AS T3 ON T3.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' AND T3.label = '+' GROUP BY T3.molecule_id) AS subquery",7,"SELECT AVG(COUNT(DISTINCT(atom_id))) FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE bond_type = 'single') GROUP BY molecule_id
SELECT AVG(COUNT(DISTINCT b.bond_id)) FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE a.molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'carcinogenic') AND b.bond_type = 'single'
SELECT AVG(COUNT(c.atom_id)) FROM connected c JOIN bond b ON c.bond_id = b.bond_id JOIN atom a ON c.atom_id = a.atom_id WHERE b.bond_type = 'single' GROUP BY a.molecule_id
SELECT AVG(COUNT(DISTINCT b.bond_id)) FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE a.molecule_id IN (     SELECT molecule_id     FROM molecule     WHERE label = 'carcinogenic' ) GROUP BY a.molecule_id
SELECT AVG(COUNT(DISTINCT c.atom_id)) FROM connected c JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'single'
SELECT AVG(COUNT(DISTINCT b.bond_id)) FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE a.molecule_id IN (     SELECT molecule_id     FROM molecule     WHERE label = 'carcinogenic' ) GROUP BY a.molecule_id
SELECT AVG(COUNT(DISTINCT b.bond_id)) FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE a.molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'carcinogenic') AND b.bond_type = 'single'",SELECT AVG(COUNT(DISTINCT b.bond_id)) FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE a.molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'carcinogenic') AND b.bond_type = 'single',0.0
69,660,What is the owner user id of the most valuable post?,codebase_community,simple,SELECT OwnerUserId FROM posts WHERE FavoriteCount = ( SELECT MAX(FavoriteCount) FROM posts ),7,"SELECT owneruserid FROM posts WHERE score = (SELECT MAX(score) FROM posts)
SELECT owneruserid FROM posts ORDER BY score DESC LIMIT 1
SELECT owneruserid FROM posts WHERE score = (SELECT MAX(score) FROM posts)
SELECT owneruserid FROM posts WHERE score = (SELECT MAX(score) FROM posts)
SELECT owneruserid FROM posts WHERE score = (SELECT MAX(score) FROM posts)
SELECT owneruserid FROM posts WHERE score = (SELECT MAX(score) FROM posts)
SELECT owneruserid FROM posts WHERE score = (SELECT MAX(score) FROM posts)",SELECT owneruserid FROM posts WHERE score = (SELECT MAX(score) FROM posts),1.0
70,1223,Are there more male patients with creatinine not within the normal range than female? True or False?,thrombosis_prediction,challenging,SELECT CASE WHEN SUM(CASE WHEN T1.SEX = 'M' THEN 1 ELSE 0 END) > SUM(CASE WHEN T1.SEX = 'F' THEN 1 ELSE 0 END) THEN 'True' ELSE 'False' END FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE >= 1.5,7,"SELECT COUNT(*) FROM patient WHERE sex = 'male' AND birthday < '1990-01-01'
SELECT COUNT(*) FROM patient WHERE sex = 'male' AND birthday < '1990-01-01'
SELECT COUNT(*) FROM patient WHERE sex = 'male' AND birthday < '1990-01-01'
SELECT COUNT(*) FROM patient WHERE sex = 'male' AND birthday < '1990-01-01'
SELECT * FROM patient WHERE sex = 'male' AND birthday < '1990-01-01'
SELECT COUNT(*) FROM patient WHERE sex = 'M' AND birthday < '1990-01-01' AND birthday > '1980-01-01'
SELECT COUNT(*) FROM patient WHERE sex = 'male' AND birthday < '1990-01-01'",SELECT COUNT(*) FROM patient WHERE sex = 'male' AND birthday < '1990-01-01',0.0
71,1418,Mention the category of events which were held at MU 215.,student_club,simple,SELECT T2.category FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.location = 'MU 215',7,"SELECT DISTINCT event_name FROM event WHERE location = 'MU 215'
SELECT DISTINCT event_name FROM event WHERE location = 'MU 215'
SELECT DISTINCT event_name FROM event WHERE location = 'MU 215'
SELECT DISTINCT event_name FROM event WHERE location = 'MU 215'
SELECT DISTINCT event_name FROM event WHERE location = 'MU 215'
SELECT DISTINCT event_name FROM event WHERE location = 'MU 215'
SELECT DISTINCT event_name FROM event WHERE location = 'MU 215'",SELECT DISTINCT event_name FROM event WHERE location = 'MU 215',0.0
72,131,Which district has highest active loan?,financial,moderate,"SELECT T2.A3 FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T1.account_id = T3.account_id WHERE T3.status IN ('C', 'D') GROUP BY T2.A3 ORDER BY SUM(T3.amount) DESC LIMIT 1",7,"SELECT district_id, COUNT(*) AS active_loans FROM loan WHERE status = 'A' GROUP BY district_id ORDER BY active_loans DESC LIMIT 1
SELECT district_id, COUNT(*) AS active_loans FROM loan WHERE status = 'A' GROUP BY district_id ORDER BY active_loans DESC LIMIT 1
SELECT district_id, COUNT(*) as active_loans FROM loan GROUP BY district_id ORDER BY active_loans DESC LIMIT 1
SELECT district_id, COUNT(*) AS active_loans FROM loan WHERE status = 'A' GROUP BY district_id ORDER BY active_loans DESC LIMIT 1
SELECT district_id, COUNT(*) AS active_loans FROM loan WHERE status = 'A' GROUP BY district_id ORDER BY active_loans DESC LIMIT 1
SELECT district_id, COUNT(*) AS active_loans FROM loan WHERE status = 'A' GROUP BY district_id ORDER BY active_loans DESC LIMIT 1
SELECT district_id, COUNT(*) AS active_loans FROM loan WHERE status = 'A' GROUP BY district_id ORDER BY active_loans DESC LIMIT 1","SELECT district_id, COUNT(*) AS active_loans FROM loan WHERE status = 'A' GROUP BY district_id ORDER BY active_loans DESC LIMIT 1",0.0
73,896,Calculate the percentage whereby Hamilton was not at the 1st track of the the f1 circuit since 2010.,formula_1,challenging,SELECT CAST(COUNT(CASE WHEN T2.position <> 1 THEN T2.position END) AS REAL) * 100 / COUNT(T2.driverStandingsId) FROM races AS T1 INNER JOIN driverStandings AS T2 ON T2.raceId = T1.raceId INNER JOIN drivers AS T3 ON T3.driverId = T2.driverId WHERE T3.surname = 'Hamilton' AND T1.year >= 2010,7,"SELECT (SELECT COUNT(*) FROM races WHERE races.circuitid = 1 AND races.year >= 2010 AND races.raceid NOT IN (SELECT raceid FROM results WHERE results.driverid = 1)) * 100.0 / (SELECT COUNT(*) FROM races WHERE races.circuitid = 1 AND races.year >= 2010)
SELECT (SELECT COUNT(*) FROM races WHERE year >= 2010 AND raceid NOT IN (SELECT raceid FROM results WHERE driverid = (SELECT driverid FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton'))) * 100.0 / (SELECT COUNT(*) FROM races WHERE year >= 2010) AS percentage
SELECT (SELECT COUNT(*) FROM results WHERE driverid = 1 AND position = 1 AND raceid IN (SELECT raceid FROM races WHERE circuitid = 1 AND year >= 2010)) * 100.0 / (SELECT COUNT(*) FROM results WHERE driverid = 1 AND raceid IN (SELECT raceid FROM races WHERE circuitid = 1 AND year >= 2010)) AS percentage
SELECT (SELECT COUNT(*) FROM results WHERE driverid = 1 AND position = 1) / (SELECT COUNT(*) FROM results WHERE driverid = 1) * 100
SELECT (SELECT COUNT(*) FROM races WHERE year >= 2010 AND circuitid = 1 AND driverid = 1) / (SELECT COUNT(*) FROM races WHERE year >= 2010 AND circuitid = 1) * 100
SELECT (     SELECT COUNT(*)     FROM races     WHERE year >= 2010     AND circuitid = 1     AND driverid = 1 ) / (     SELECT COUNT(*)     FROM races     WHERE year >= 2010 ) * 100
SELECT (SELECT COUNT(*) FROM races WHERE year >= 2010 AND circuitid = 1 AND driverid = 1) / (SELECT COUNT(*) FROM races WHERE year >= 2010 AND circuitid = 1) * 100",SELECT (SELECT COUNT(*) FROM races WHERE year >= 2010 AND circuitid = 1 AND driverid = 1) / (SELECT COUNT(*) FROM races WHERE year >= 2010 AND circuitid = 1) * 100,0.0
74,173,How often does account number 3 request an account statement to be released? What was the aim of debiting 3539 in total?,financial,challenging,"SELECT T1.frequency, T2.k_symbol FROM account AS T1 INNER JOIN (SELECT account_id, k_symbol, SUM(amount) AS total_amount FROM `order` GROUP BY account_id, k_symbol) AS T2 ON T1.account_id = T2.account_id WHERE T1.account_id = 3 AND T2.total_amount = 3539",7,"SELECT COUNT(*) FROM trans WHERE account_id = 3 AND type = 'disposition'
SELECT COUNT(*) FROM trans WHERE account_id = 3 AND type = 'disposition'
SELECT COUNT(*) FROM trans WHERE account_id = 3 AND type = 'disposition'
SELECT COUNT(*) FROM trans WHERE account_id = 3 AND type = 'disposition'
SELECT COUNT(*) FROM trans WHERE account_id = 3 AND type = 'disposition'
SELECT COUNT(*) FROM trans WHERE account_id = 3 AND type = 'credit'
SELECT COUNT(*) FROM trans WHERE account_id = 3 AND type = 'credit'",SELECT COUNT(*) FROM trans WHERE account_id = 3 AND type = 'disposition',0.0
75,125,"For loans contracts which are still running where client are in debt, list the district of the and the state the percentage unemployment rate increment from year 1995 to 1996.",financial,challenging,SELECT CAST((T3.A13 - T3.A12) AS REAL) * 100 / T3.A12 FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.status = 'D',7,"SELECT d.a2, d.a12 FROM district d JOIN client c ON d.district_id = c.district_id JOIN disp disp ON c.client_id = disp.client_id JOIN account a ON disp.account_id = a.account_id JOIN loan l ON a.account_id = l.account_id WHERE l.status = 'B' AND l.date >= '1995-01-01' AND l.date < '1996-01-01' GROUP BY d.district_id
SELECT d.a2, d.a12 FROM district d JOIN client c ON d.district_id = c.district_id JOIN disp dp ON c.client_id = dp.client_id JOIN account a ON dp.account_id = a.account_id JOIN loan l ON a.account_id = l.account_id WHERE l.status = 'B' AND l.date >= '1995-01-01' AND l.date < '1996-01-01' GROUP BY d.a2, d.a12 ORDER BY d.a2, d.a12
SELECT d.a2, d.a12 FROM district d JOIN client c ON d.district_id = c.district_id JOIN disp dp ON c.client_id = dp.client_id JOIN account a ON dp.account_id = a.account_id JOIN loan l ON a.account_id = l.account_id WHERE l.status = 'B' AND l.date >= '1995-01-01' AND l.date < '1996-01-01' AND d.a12 > 0
SELECT d.a2, d.a12 FROM district d JOIN client c ON d.district_id = c.district_id JOIN disp dp ON c.client_id = dp.client_id JOIN account a ON dp.account_id = a.account_id JOIN loan l ON a.account_id = l.account_id WHERE l.status = 'A' AND l.date > 950000 AND l.date < 960000 GROUP BY d.a2, d.a12 ORDER BY d.a2, d.a12
SELECT d.a2, d.a12 FROM district d JOIN client c ON d.district_id = c.district_id JOIN disp dp ON c.client_id = dp.client_id JOIN account a ON dp.account_id = a.account_id JOIN loan l ON a.account_id = l.account_id WHERE l.status = 'B' AND l.date >= '1995-01-01' AND l.date < '1996-01-01' GROUP BY d.a2, d.a12 ORDER BY d.a2, d.a12
SELECT d.a2, d.a12 FROM district d JOIN client c ON d.district_id = c.district_id JOIN disp dp ON c.client_id = dp.client_id JOIN account a ON dp.account_id = a.account_id JOIN loan l ON a.account_id = l.account_id WHERE l.status = 'B' AND l.date >= 950101 AND l.date < 960101 GROUP BY d.a2, d.a12
SELECT d.a2, d.a12 FROM district d JOIN client c ON d.district_id = c.district_id JOIN disp dp ON c.client_id = dp.client_id JOIN account a ON dp.account_id = a.account_id JOIN loan l ON a.account_id = l.account_id WHERE l.status = 'B' AND l.date >= 950101 AND l.date < 960101 GROUP BY d.a2, d.a12","SELECT d.a2, d.a12 FROM district d JOIN client c ON d.district_id = c.district_id JOIN disp dp ON c.client_id = dp.client_id JOIN account a ON dp.account_id = a.account_id JOIN loan l ON a.account_id = l.account_id WHERE l.status = 'B' AND l.date >= '1995-01-01' AND l.date < '1996-01-01' GROUP BY d.a2, d.a12 ORDER BY d.a2, d.a12",0.0
76,201,What is the percentage of carbon in double-bond molecules?,toxicology,moderate,SELECT CAST(COUNT(DISTINCT CASE WHEN T1.element = 'c' THEN T1.atom_id ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T1.atom_id) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '=',7,"SELECT (SELECT COUNT(*) FROM atom WHERE element = 'C' AND molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = 'double')) / (SELECT COUNT(*) FROM atom WHERE element = 'C') * 100
SELECT (SELECT COUNT(*) FROM atom WHERE element = 'C' AND molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = 'double')) * 100.0 / (SELECT COUNT(*) FROM atom WHERE element = 'C') AS percentage_of_carbon_in_double_bond_molecules
SELECT (SELECT COUNT(*) FROM atom WHERE element = 'C' AND molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = 'double')) / (SELECT COUNT(*) FROM atom WHERE element = 'C') * 100
NULL
SELECT (SELECT COUNT(*) FROM atom WHERE element = 'C' AND molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = 'double')) * 100.0 / (SELECT COUNT(*) FROM atom WHERE element = 'C') AS percentage_double_bond_carbon
SELECT (SELECT COUNT(*) FROM atom WHERE element = 'C' AND molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = 'double')) / (SELECT COUNT(*) FROM atom WHERE element = 'C') * 100
SELECT (SELECT COUNT(*) FROM atom WHERE element = 'C' AND molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = 'double')) / (SELECT COUNT(*) FROM atom WHERE element = 'C') * 100",SELECT (SELECT COUNT(*) FROM atom WHERE element = 'C' AND molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = 'double')) / (SELECT COUNT(*) FROM atom WHERE element = 'C') * 100,0.0
77,1150,What is the percentage of female patient were born after 1930?,thrombosis_prediction,moderate,"SELECT CAST(SUM(CASE WHEN STRFTIME('%Y', Birthday) > '1930' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Patient WHERE SEX = 'F'",7,"SELECT COUNT(*) FROM patient WHERE sex = 'F' AND birthday > '1930-01-01'
SELECT COUNT(*) FROM patient WHERE sex = 'F' AND birthday > '1930-01-01'
SELECT COUNT(*) FROM patient WHERE sex = 'F' AND birthday > '1930-01-01'
SELECT COUNT(*) FROM patient WHERE sex = 'F' AND birthday > '1930-01-01'
SELECT COUNT(*) FROM patient WHERE sex = 'F' AND birthday > '1930-01-01'
SELECT COUNT(*) FROM patient WHERE sex = 'F' AND birthday > '1930-01-01'
SELECT COUNT(*) FROM patient WHERE sex = 'F' AND birthday > 1930",SELECT COUNT(*) FROM patient WHERE sex = 'F' AND birthday > '1930-01-01',0.0
78,284,Determine the bond type that is formed in the chemical compound containing element Carbon.,toxicology,moderate,SELECT DISTINCT T2.bond_type FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'c',7,"SELECT bond_type FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'Carbon')
SELECT bond_type FROM bond WHERE molecule_id = (     SELECT molecule_id     FROM molecule     WHERE label = 'Carbon' )
SELECT bond_type FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'Carbon')
SELECT bond_type FROM bond WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'Carbon')
SELECT bond_type FROM bond WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'Carbon')
SELECT bond_type FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'Carbon')
SELECT bond_type FROM bond WHERE molecule_id = (     SELECT molecule_id     FROM molecule     WHERE label = 'Carbon' )",SELECT bond_type FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'Carbon'),0.0
79,1236,"For all the female patient age 50 and above, who has abnormal red blood cell count. State if they were admitted to hospital.",thrombosis_prediction,challenging,"SELECT DISTINCT T1.ID, T1.Admission FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (T2.RBC <= 3.5 OR T2.RBC >= 6.0) AND STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) >= 50",7,"SELECT patient.id, patient.sex, patient.birthday, patient.description, patient.first date, patient.admission, patient.diagnosis, laboratory.id, laboratory.date, laboratory.got, laboratory.gpt, laboratory.ldh, laboratory.alp, laboratory.tp, laboratory.alb, laboratory.ua, laboratory.un, laboratory.cre, laboratory.t-bil, laboratory.t-cho, laboratory.tg, laboratory.cpk, laboratory.glu, laboratory.wbc, laboratory.rbc, laboratory.hgb, laboratory.hct, laboratory.plt, laboratory.pt, laboratory.aptt, laboratory.fg, laboratory.pic, laboratory.tat, laboratory.tat2, laboratory.u-pro, laboratory.igg, laboratory.iga, laboratory.igm, laboratory.crp, laboratory.ra, laboratory.rf, laboratory.c3, laboratory.c4, laboratory.rnp, laboratory.sm, laboratory.sc170, laboratory.ssa, laboratory.ssb, laboratory.centromea, laboratory.dna, laboratory.dna-ii FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'female' AND patient.birthday >= 50 AND laboratory.hgb > 1000000000000000000000000000000
SELECT patient.id, patient.sex, patient.birthday, patient.description, patient.first_date, patient.admission, patient.diagnosis, laboratory.id, laboratory.date, laboratory.got, laboratory.gpt, laboratory.ldh, laboratory.alp, laboratory.tp, laboratory.alb, laboratory.ua, laboratory.un, laboratory.cre, laboratory.t_bil, laboratory.t_cho, laboratory.tg, laboratory.cpk, laboratory.glu, laboratory.wbc, laboratory.rbc, laboratory.hgb, laboratory.hct, laboratory.plt, laboratory.pt, laboratory.aptt, laboratory.fg, laboratory.pic, laboratory.tat, laboratory.tat2, laboratory.u_pro, laboratory.igg, laboratory.iga, laboratory.igm, laboratory.crp, laboratory.ra, laboratory.rf, laboratory.c3, laboratory.c4, laboratory.rnp, laboratory.sm, laboratory.sc170, laboratory.ssa, laboratory.ssb, laboratory.centromea, laboratory.dna, laboratory.dna_ii FROM patient, laboratory WHERE patient.id = laboratory.id AND patient.sex = 'female' AND patient.birthday >= 50 AND laboratory.rbc > 0
SELECT patient.id, patient.sex, patient.birthday, patient.description, patient.first date, patient.admission, patient.diagnosis, laboratory.id, laboratory.date, laboratory.got, laboratory.gpt, laboratory.ldh, laboratory.alp, laboratory.tp, laboratory.alb, laboratory.ua, laboratory.un, laboratory.cre, laboratory.t-bil, laboratory.t-cho, laboratory.tg, laboratory.cpk, laboratory.glu, laboratory.wbc, laboratory.rbc, laboratory.hgb, laboratory.hct, laboratory.plt, laboratory.pt, laboratory.aptt, laboratory.fg, laboratory.pic, laboratory.tat, laboratory.tat2, laboratory.u-pro, laboratory.igg, laboratory.iga, laboratory.igm, laboratory.crp, laboratory.ra, laboratory.rf, laboratory.c3, laboratory.c4, laboratory.rnp, laboratory.sm, laboratory.sc170, laboratory.ssa, laboratory.ssb, laboratory.centromea, laboratory.dna, laboratory.dna-ii FROM patient, laboratory WHERE patient.id = laboratory.id AND patient.sex = 'female' AND patient.birthday >= 50 AND laboratory.hgb > 10 AND laboratory.admission = 'yes'
SELECT patient.id, patient.sex, patient.birthday, patient.description, patient.first date, patient.admission, patient.diagnosis, laboratory.id, laboratory.date, laboratory.got, laboratory.gpt, laboratory.ldh, laboratory.alp, laboratory.tp, laboratory.alb, laboratory.ua, laboratory.un, laboratory.cre, laboratory.t-bil, laboratory.t-cho, laboratory.tg, laboratory.cpk, laboratory.glu, laboratory.wbc, laboratory.rbc, laboratory.hgb, laboratory.hct, laboratory.plt, laboratory.pt, laboratory.aptt, laboratory.fg, laboratory.pic, laboratory.tat, laboratory.tat2, laboratory.u-pro, laboratory.igg, laboratory.iga, laboratory.igm, laboratory.crp, laboratory.ra, laboratory.rf, laboratory.c3, laboratory.c4, laboratory.rnp, laboratory.sm, laboratory.sc170, laboratory.ssa, laboratory.ssb, laboratory.centromea, laboratory.dna, laboratory.dna-ii FROM patient, laboratory WHERE patient.id = laboratory.id AND patient.sex = 'female' AND patient.birthday >= 50 AND laboratory.hgb > 10 AND laboratory.admission = 'yes'
SELECT patient.id, patient.sex, patient.birthday, patient.description, patient.first_date, patient.admission, patient.diagnosis, laboratory.id, laboratory.date, laboratory.got, laboratory.gpt, laboratory.ldh, laboratory.alp, laboratory.tp, laboratory.alb, laboratory.ua, laboratory.un, laboratory.cre, laboratory.t_bil, laboratory.t_cho, laboratory.tg, laboratory.cpk, laboratory.glu, laboratory.wbc, laboratory.rbc, laboratory.hgb, laboratory.hct, laboratory.plt, laboratory.pt, laboratory.aptt, laboratory.fg, laboratory.pic, laboratory.tat, laboratory.tat2, laboratory.u_pro, laboratory.igg, laboratory.iga, laboratory.igm, laboratory.crp, laboratory.ra, laboratory.rf, laboratory.c3, laboratory.c4, laboratory.rnp, laboratory.sm, laboratory.sc170, laboratory.ssa, laboratory.ssb, laboratory.centromea, laboratory.dna, laboratory.dna_ii FROM patient, laboratory WHERE patient.id = laboratory.id AND patient.sex = 'F' AND patient.birthday >= 50 AND laboratory.rbc > 0
SELECT patient.id, patient.sex, patient.birthday, patient.description, patient.first date, patient.admission, patient.diagnosis, laboratory.id, laboratory.date, laboratory.got, laboratory.gpt, laboratory.ldh, laboratory.alp, laboratory.tp, laboratory.alb, laboratory.ua, laboratory.un, laboratory.cre, laboratory.t-bil, laboratory.t-cho, laboratory.tg, laboratory.cpk, laboratory.glu, laboratory.wbc, laboratory.rbc, laboratory.hgb, laboratory.hct, laboratory.plt, laboratory.pt, laboratory.aptt, laboratory.fg, laboratory.pic, laboratory.tat, laboratory.tat2, laboratory.u-pro, laboratory.igg, laboratory.iga, laboratory.igm, laboratory.crp, laboratory.ra, laboratory.rf, laboratory.c3, laboratory.c4, laboratory.rnp, laboratory.sm, laboratory.sc170, laboratory.ssa, laboratory.ssb, laboratory.centromea, laboratory.dna, laboratory.dna-ii FROM patient, laboratory WHERE patient.id = laboratory.id AND patient.sex = 'female' AND patient.birthday >= 50 AND laboratory.hgb > 10 AND laboratory.admission = 'yes'
SELECT patient.id, patient.sex, patient.birthday, patient.description, patient.first_date, patient.admission, patient.diagnosis, laboratory.id, laboratory.date, laboratory.got, laboratory.gpt, laboratory.ldh, laboratory.alp, laboratory.tp, laboratory.alb, laboratory.ua, laboratory.un, laboratory.cre, laboratory.t_bil, laboratory.t_cho, laboratory.tg, laboratory.cpk, laboratory.glu, laboratory.wbc, laboratory.rbc, laboratory.hgb, laboratory.hct, laboratory.plt, laboratory.pt, laboratory.aptt, laboratory.fg, laboratory.pic, laboratory.tat, laboratory.tat2, laboratory.u_pro, laboratory.igg, laboratory.iga, laboratory.igm, laboratory.crp, laboratory.ra, laboratory.rf, laboratory.c3, laboratory.c4, laboratory.rnp, laboratory.sm, laboratory.sc170, laboratory.ssa, laboratory.ssb, laboratory.centromea, laboratory.dna, laboratory.dna_ii FROM patient, laboratory WHERE patient.id = laboratory.id AND patient.sex = 'female' AND patient.birthday >= 50 AND laboratory.hgb > 1000000000000000000000000000000","SELECT patient.id, patient.sex, patient.birthday, patient.description, patient.first date, patient.admission, patient.diagnosis, laboratory.id, laboratory.date, laboratory.got, laboratory.gpt, laboratory.ldh, laboratory.alp, laboratory.tp, laboratory.alb, laboratory.ua, laboratory.un, laboratory.cre, laboratory.t-bil, laboratory.t-cho, laboratory.tg, laboratory.cpk, laboratory.glu, laboratory.wbc, laboratory.rbc, laboratory.hgb, laboratory.hct, laboratory.plt, laboratory.pt, laboratory.aptt, laboratory.fg, laboratory.pic, laboratory.tat, laboratory.tat2, laboratory.u-pro, laboratory.igg, laboratory.iga, laboratory.igm, laboratory.crp, laboratory.ra, laboratory.rf, laboratory.c3, laboratory.c4, laboratory.rnp, laboratory.sm, laboratory.sc170, laboratory.ssa, laboratory.ssb, laboratory.centromea, laboratory.dna, laboratory.dna-ii FROM patient, laboratory WHERE patient.id = laboratory.id AND patient.sex = 'female' AND patient.birthday >= 50 AND laboratory.hgb > 10 AND laboratory.admission = 'yes'",0.0
80,68,Which county reported the most number of school closure in the 1980s with school wonership code belonging to Youth Authority Facilities (CEA)?,california_schools,moderate,"SELECT County FROM schools WHERE strftime('%Y', ClosedDate) BETWEEN '1980' AND '1989' AND StatusType = 'Closed' AND SOC = 11 GROUP BY County ORDER BY COUNT(School) DESC LIMIT 1",7,"SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM : ['cdscode', 'academic year', 'county code', 'district code', 'school code', 'county name', 'district name', 'school name', 'district type', 'school type', 'educational option type', 'nslp provision status', 'charter school (y/n)', 'charter school number', 'charter funding type', 'irc', 'low grade', 'high grade', 'enrollment (k-12)', 'free meal count (k-12)', 'percent (%) eligible free (k-12)', 'frpm count (k
SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM : ['cdscode', 'academic year', 'county code', 'district code', 'school code', 'county name', 'district name', 'school name', 'district type', 'school type', 'educational option type', 'nslp provision status', 'charter school (y/n)', 'charter school number', 'charter funding type', 'irc', 'low grade', 'high grade', 'enrollment (k-12)', 'free meal count (k-12)', 'percent (%) eligible free (k-12)', 'frpm count (k
SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM : ['cdscode', 'academic year', 'county code', 'district code', 'school code', 'county name', 'district name', 'school name', 'district type', 'school type', 'educational option type', 'nslp provision status', 'charter school (y/n)', 'charter school number', 'charter funding type', 'irc', 'low grade', 'high grade', 'enrollment (k-12)', 'free meal count (k-12)', 'percent (%) eligible free (k-12)', 'frpm count (k
SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM : ['cdscode', 'academic year', 'county code', 'district code', 'school code', 'county name', 'district name', 'school name', 'district type', 'school type', 'educational option type', 'nslp provision status', 'charter school (y/n)', 'charter school number', 'charter funding type', 'irc', 'low grade', 'high grade', 'enrollment (k-12)', 'free meal count (k-12)', 'percent (%) eligible free (k-12)', 'frpm count (k
SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM : ['cdscode', 'academic year', 'county code', 'district code', 'school code', 'county name', 'district name', 'school name', 'district type', 'school type', 'educational option type', 'nslp provision status', 'charter school (y/n)', 'charter school number', 'charter funding type', 'irc', 'low grade', 'high grade', 'enrollment (k-12)', 'free meal count (k-12)', 'percent (%) eligible free (k-12)', 'frpm count (k
SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM : ['cdscode', 'academic year', 'county code', 'district code', 'school code', 'county name', 'district name', 'school name', 'district type', 'school type', 'educational option type', 'nslp provision status', 'charter school (y/n)', 'charter school number', 'charter funding type', 'irc', 'low grade', 'high grade', 'enrollment (k-12)', 'free meal count (k-12)', 'percent (%) eligible free (k-12)', 'frpm count (k
SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM : ['cdscode', 'academic year', 'county code', 'district code', 'school code', 'county name', 'district name', 'school name', 'district type', 'school type', 'educational option type', 'nslp provision status', 'charter school (y/n)', 'charter school number', 'charter funding type', 'irc', 'low grade', 'high grade', 'enrollment (k-12)', 'free meal count (k-12)', 'percent (%) eligible free (k-12)', 'frpm count (k","SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM : ['cdscode', 'academic year', 'county code', 'district code', 'school code', 'county name', 'district name', 'school name', 'district type', 'school type', 'educational option type', 'nslp provision status', 'charter school (y/n)', 'charter school number', 'charter funding type', 'irc', 'low grade', 'high grade', 'enrollment (k-12)', 'free meal count (k-12)', 'percent (%) eligible free (k-12)', 'frpm count (k",0.0
81,825,Identify the gender of the superhero who has the ability of Phoenix Force.,superhero,moderate,SELECT T4.gender FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id INNER JOIN gender AS T4 ON T1.gender_id = T4.id WHERE T3.power_name = 'Phoenix Force',7,"SELECT gender.gender FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Phoenix Force'
SELECT gender.gender FROM superhero JOIN gender ON gender.id = superhero.gender_id JOIN hero_attribute ON hero_attribute.hero_id = superhero.id JOIN attribute ON attribute.id = hero_attribute.attribute_id WHERE attribute.attribute_name = 'Phoenix Force'
SELECT gender.gender FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Phoenix Force'
SELECT gender.gender FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Phoenix Force'
SELECT gender.gender FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Phoenix Force'
SELECT gender.gender FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Phoenix Force'
SELECT gender.gender FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Phoenix Force'",SELECT gender.gender FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Phoenix Force',1.0
82,1173,"What is the most common illness that doctors identified among the patients whose lab work was done between 1/1/1985, and 12/31/1995?",thrombosis_prediction,challenging,SELECT T2.Diagnosis FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.`Examination Date` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY T2.Diagnosis ORDER BY COUNT(T2.Diagnosis) DESC LIMIT 1,7,"SELECT diagnosis FROM examination WHERE date BETWEEN '1/1/1985' AND '12/31/1995' GROUP BY diagnosis ORDER BY COUNT(*) DESC LIMIT 1
SELECT diagnosis FROM examination WHERE examination_date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY diagnosis ORDER BY COUNT(*) DESC LIMIT 1
SELECT diagnosis FROM examination WHERE examination_date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY diagnosis ORDER BY COUNT(*) DESC LIMIT 1
SELECT diagnosis FROM examination WHERE examination_date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY diagnosis ORDER BY COUNT(*) DESC LIMIT 1
SELECT diagnosis FROM examination WHERE examination_date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY diagnosis ORDER BY COUNT(*) DESC LIMIT 1
SELECT diagnosis FROM examination WHERE examination_date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY diagnosis ORDER BY COUNT(*) DESC LIMIT 1
SELECT diagnosis FROM examination WHERE examination_date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY diagnosis ORDER BY COUNT(*) DESC LIMIT 1",SELECT diagnosis FROM examination WHERE examination_date BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY diagnosis ORDER BY COUNT(*) DESC LIMIT 1,0.0
83,1189,"What number of patients with a degree of thrombosis level 2 and ANA pattern of only S, have a level of anti-Cardiolip in antibody (IgM) 20% higher than average?",thrombosis_prediction,challenging,SELECT COUNT(*) FROM Examination WHERE Thrombosis = 2 AND `ANA Pattern` = 'S' AND `aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination WHERE Thrombosis = 2 AND `ANA Pattern` = 'S'),7,"SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM examination WHERE thrombosis = 2 AND ana = 'S' AND acl_igm > (SELECT AVG(acl_igm) FROM examination))
SELECT COUNT(*) FROM patient WHERE examination.id = patient.id AND examination.examination_date = patient.first_date AND examination.acl_igg = patient.acl_igg AND examination.acl_igm = patient.acl_igm AND examination.ana = patient.ana AND examination.ana_pattern = patient.ana_pattern AND examination.acl_iga = patient.acl_iga AND examination.diagnosis = patient.diagnosis AND examination.kct = patient.kct AND examination.rvvt = patient.rvvt AND examination.lac = patient.lac AND examination.symptoms = patient.symptoms AND examination.thrombosis = patient.thrombosis
SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM examination WHERE thrombosis = 2 AND ana = 'S' AND acl_igm > (SELECT AVG(acl_igm) FROM examination)) AND id IN (SELECT id FROM laboratory WHERE acl_igm > (SELECT AVG(acl_igm) FROM laboratory))
SELECT COUNT(*) FROM patient WHERE examination.examination_date = patient.first_date AND examination.examination_date = laboratory.date AND examination.examination_date = patient.admission AND examination.examination_date = patient.diagnosis AND examination.examination_date = patient.description AND examination.examination_date = patient.birthday AND examination.examination_date = patient.sex AND examination.examination_date = patient.description AND examination.examination_date = patient.first_date AND examination.examination_date = patient.admission AND examination.examination_date = patient.diagnosis AND examination.examination_date = patient.description AND examination.examination_date = patient.birthday AND examination.examination_date = patient.sex AND examination.examination_date = patient.description AND examination.examination_date = patient.first_date AND examination.examination_date = patient.admission AND examination.examination_date = patient.diagnosis AND examination.examination_date = patient.description AND examination.examination_date = patient.birthday AND examination.examination_date = patient.sex AND examination.examination_date = patient.description AND examination.examination_date = patient.first_date AND examination.examination_date = patient.admission AND examination.examination_date = patient.diagnosis AND examination.examination_date = patient.description AND examination.examination_date = patient.birthday AND examination.examination_date = patient.sex AND examination.examination_date
SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM examination WHERE thrombosis = 2 AND ana = 'S' AND acl_igm > (SELECT AVG(acl_igm) FROM examination))
SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM examination WHERE thrombosis = 2 AND ana_pattern = 'S' AND acl_igm > (SELECT AVG(acl_igm) FROM examination))
SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM laboratory WHERE ana = 'S' AND thrombosis = 2 AND igm > (SELECT AVG(igm) FROM laboratory))",SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM examination WHERE thrombosis = 2 AND ana = 'S' AND acl_igm > (SELECT AVG(acl_igm) FROM examination)),0.0
84,1042,List the name of leagues in which the average goals by the home team is higher than the away team in the 2009/2010 season.,european_football_2,challenging,SELECT t1.name FROM League AS t1 INNER JOIN Match AS t2 ON t1.id = t2.league_id WHERE t2.season = '2009/2010' GROUP BY t1.name HAVING (CAST(SUM(t2.home_team_goal) AS REAL) / COUNT(DISTINCT t2.id)) - (CAST(SUM(t2.away_team_goal) AS REAL) / COUNT(DISTINCT t2.id)) > 0,7,"SELECT name FROM leagues WHERE average_goals_by_home_team > average_goals_by_away_team
SELECT name FROM leagues WHERE average_goals_by_home_team > average_goals_by_away_team
SELECT name FROM leagues WHERE avg(home_team_goal) > avg(away_team_goal) AND season = '2009/2010'
NULL
NULL
NULL
SELECT name FROM leagues WHERE AVG(home_team_goal) > AVG(away_team_goal) AND season = '2009/2010'",,0.0
85,1201,What percentage of patients who were born in 1980 and were diagnosed with RA are women?,thrombosis_prediction,moderate,"SELECT CAST(SUM(CASE WHEN SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM Patient WHERE Diagnosis = 'RA' AND STRFTIME('%Y', Birthday) = '1980'",7,"SELECT COUNT(*) FROM patient WHERE birthday = '1980' AND diagnosis = 'RA' AND sex = 'F'
SELECT COUNT(*) FROM patient WHERE birthday = '1980-01-01' AND sex = 'F'
SELECT COUNT(*) FROM patient WHERE birthday = '1980-01-01' AND sex = 'F'
SELECT COUNT(*) FROM patient WHERE birthday = '1980-01-01' AND sex = 'F'
SELECT COUNT(*) FROM patient WHERE birthday = '1980-01-01' AND sex = 'F'
SELECT COUNT(*) FROM patient WHERE birthday = '1980-01-01' AND sex = 'F'
SELECT COUNT(*) FROM patient WHERE birthday = '1980-01-01' AND sex = 'F'",SELECT COUNT(*) FROM patient WHERE birthday = '1980-01-01' AND sex = 'F',0.0
86,206,What elements are in the TR004_8_9 bond atoms?,toxicology,challenging,SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR004_8_9',7,"SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR004_8_9'
SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR004_8_9'
SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR004_8_9'
SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR004_8_9'
SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR004_8_9'
SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR004_8_9'
SELECT DISTINCT element FROM atom WHERE atom_id IN (     SELECT atom_id     FROM connected     WHERE bond_id IN (         SELECT bond_id         FROM bond         WHERE molecule_id = (             SELECT molecule_id             FROM molecule             WHERE label = 'TR004_8_9'         )     ) )",SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR004_8_9',0.0
87,1010,What is the lap record set by Lewis Hamilton in a Formula_1 race?,formula_1,simple,SELECT T1.time FROM lapTimes AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId WHERE T2.forename = 'Lewis' AND T2.surname = 'Hamilton',7,"SELECT drivers.forename, drivers.surname, laptimes.lap, laptimes.time, laptimes.milliseconds FROM drivers JOIN laptimes ON drivers.driverid = laptimes.driverid JOIN races ON laptimes.raceid = races.raceid JOIN circuits ON races.circuitid = circuits.circuitid WHERE circuits.name = 'Silverstone Circuit' ORDER BY laptimes.milliseconds ASC LIMIT 1
SELECT MIN(milliseconds) FROM laptimes WHERE raceid = (SELECT raceid FROM races WHERE name = 'Australian Grand Prix') AND driverid = (SELECT driverid FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton')
SELECT laptimes.lap, laptimes.time, laptimes.milliseconds, laptimes.position, laptimes.driverid, laptimes.raceid, laptimes.raceid, laptimes.driverid, laptimes.raceid, laptimes.driverid, laptimes.raceid, laptimes.driverid, laptimes.raceid, laptimes.driverid, laptimes.raceid, laptimes.driverid, laptimes.raceid, laptimes.driverid, laptimes.raceid, laptimes.driverid, laptimes.raceid, laptimes.driverid, laptimes.raceid, laptimes.driverid, laptimes.raceid, laptimes.driverid, laptimes.raceid, laptimes.driverid, laptimes.raceid, laptimes.driverid, laptimes.raceid, laptimes.driverid, laptimes.raceid, laptimes.driverid, laptimes.raceid, laptimes.driverid, laptimes.raceid, laptimes.driverid, laptimes.raceid, laptimes.driverid, laptimes.raceid, laptimes.driverid, laptimes.raceid, laptimes.driverid, laptimes.raceid, laptimes.driverid, laptimes.raceid, laptimes.driverid, laptimes.raceid, laptimes.driverid, laptimes
SELECT MIN(milliseconds) FROM laptimes WHERE raceid = (SELECT raceid FROM races WHERE name = 'Australian Grand Prix' AND year = 2021) AND driverid = (SELECT driverid FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton')
SELECT MIN(milliseconds) FROM laptimes WHERE raceid = (SELECT raceid FROM races WHERE name = 'Australian Grand Prix' AND year = 2021) AND driverid = (SELECT driverid FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton')
SELECT MIN(milliseconds) FROM laptimes WHERE raceid = (SELECT raceid FROM races WHERE name = 'Australian Grand Prix' AND year = 2021) AND driverid = (SELECT driverid FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton')
SELECT MIN(milliseconds) FROM laptimes WHERE raceid = (SELECT raceid FROM races WHERE name = 'Australian Grand Prix' AND year = 2021) AND driverid = (SELECT driverid FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton')",SELECT MIN(milliseconds) FROM laptimes WHERE raceid = (SELECT raceid FROM races WHERE name = 'Australian Grand Prix' AND year = 2021) AND driverid = (SELECT driverid FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton'),0.0
88,1395,How many members did attend the event 'Community Theater' in 2019?,student_club,moderate,"SELECT COUNT(T2.link_to_member) FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'Community Theater' AND SUBSTR(T1.event_date, 1, 4) = '2019'",7,"SELECT COUNT(*) FROM attendance a JOIN event e ON a.link_to_event = e.event_id WHERE e.event_name = 'Community 
SELECT COUNT(*) FROM attendance JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Community 
SELECT COUNT(*) FROM attendance JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Community 
SELECT COUNT(*) FROM attendance WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Community 
SELECT COUNT(*) FROM attendance JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Community 
SELECT COUNT(*) FROM attendance JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Community 
SELECT COUNT(*) FROM attendance JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Community ",SELECT COUNT(*) FROM attendance JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Community ,0.0
89,108,"For the client who applied the biggest loan, what was his/her first amount of transaction after opened the account?",financial,simple,"SELECT T3.amount FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN trans AS T3 ON T2.account_id = T3.account_id ORDER BY T1.amount DESC, T3.date ASC LIMIT 1",7,"SELECT t.amount FROM trans t JOIN (     SELECT account_id, MAX(amount) AS max_amount     FROM loan     GROUP BY account_id ) l ON t.account_id = l.account_id WHERE t.date > l.date ORDER BY t.amount DESC LIMIT 1
SELECT t.amount FROM trans t JOIN (     SELECT account_id, MAX(amount) AS max_amount     FROM loan     GROUP BY account_id ) l ON t.account_id = l.account_id WHERE t.date > l.date ORDER BY t.amount DESC LIMIT 1
SELECT t.amount FROM trans t JOIN (     SELECT account_id, MAX(amount) AS max_amount     FROM loan     GROUP BY account_id ) l ON t.account_id = l.account_id WHERE t.date > l.date ORDER BY t.amount DESC LIMIT 1
SELECT t.account_id, t.date, t.amount FROM trans t JOIN (     SELECT account_id, MAX(amount) AS max_amount     FROM trans     GROUP BY account_id ) max_trans ON t.account_id = max_trans.account_id AND t.amount = max_trans.max_amount JOIN account a ON t.account_id = a.account_id WHERE a.date = (     SELECT MIN(date)     FROM account     WHERE account_id = t.account_id ) ORDER BY t.account_id, t.date LIMIT 1
SELECT t.amount FROM trans t JOIN (     SELECT account_id, MAX(amount) AS max_amount     FROM loan     GROUP BY account_id ) l ON t.account_id = l.account_id WHERE t.date > l.date ORDER BY t.amount DESC LIMIT 1
SELECT t.amount FROM trans t JOIN (     SELECT account_id, MAX(amount) AS max_amount     FROM loan     GROUP BY account_id ) l ON t.account_id = l.account_id WHERE t.date > l.date ORDER BY t.amount DESC LIMIT 1
SELECT t.amount FROM trans t JOIN (     SELECT account_id, MAX(amount) AS max_amount     FROM loan     GROUP BY account_id ) l ON t.account_id = l.account_id WHERE t.date > l.date ORDER BY t.amount DESC LIMIT 1","SELECT t.amount FROM trans t JOIN (     SELECT account_id, MAX(amount) AS max_amount     FROM loan     GROUP BY account_id ) l ON t.account_id = l.account_id WHERE t.date > l.date ORDER BY t.amount DESC LIMIT 1",0.0
90,829,Which publisher created more superheroes: DC or Marvel Comics? Find the difference in the number of superheroes.,superhero,challenging,SELECT SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id,7,"SELECT publisher_name, COUNT(superhero_name) AS total_superheroes FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id GROUP BY publisher_name ORDER BY total_superheroes DESC LIMIT 1
SELECT publisher_name, COUNT(*) AS num_superheroes FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id GROUP BY publisher_name ORDER BY num_superheroes DESC LIMIT 1
SELECT publisher_name, COUNT(superhero_name) AS superhero_count FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id GROUP BY publisher_name ORDER BY superhero_count DESC LIMIT 1
SELECT publisher_name, COUNT(*) AS num_superheroes FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id GROUP BY publisher_name ORDER BY num_superheroes DESC LIMIT 1
SELECT publisher_name, COUNT(*) AS num_superheroes FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id GROUP BY publisher_name ORDER BY num_superheroes DESC LIMIT 1
SELECT publisher_name, COUNT(superhero_name) AS number_of_superheroes FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id GROUP BY publisher_name ORDER BY number_of_superheroes DESC LIMIT 1
SELECT publisher_name, COUNT(superhero_name) AS superhero_count FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id GROUP BY publisher_name ORDER BY superhero_count DESC LIMIT 1","SELECT publisher_name, COUNT(*) AS num_superheroes FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id GROUP BY publisher_name ORDER BY num_superheroes DESC LIMIT 1",0.0
91,36,Under whose administration is the school with the highest number of students scoring 1500 or more on the SAT? Indicate their full names.,california_schools,challenging,"SELECT T2.AdmFName1, T2.AdmLName1, T2.AdmFName2, T2.AdmLName2, T2.AdmFName3, T2.AdmLName3 FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.NumGE1500 DESC LIMIT 1",7,"SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-
SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-
SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM : ['cdscode', 'academic year', 'county code', 'district code', 'school code', 'county name', 'district name', 'school name', 'district type', 'school type', 'educational option type', 'nslp provision status', 'charter school (y/n)', 'charter school number', 'charter funding type', 'irc', 'low grade', 'high grade', 'enrollment (k-12)', 'free meal count (k-12)', 'percent (%) eligible free (k-12)', 'frpm count (k
SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-
SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM : ['cdscode', 'academic year', 'county code', 'district code', 'school code', 'county name', 'district name', 'school name', 'district type', 'school type', 'educational option type', 'nslp provision status', 'charter school (y/n)', 'charter school number', 'charter funding type', 'irc', 'low grade', 'high grade', 'enrollment (k-12)', 'free meal count (k-12)', 'percent (%) eligible free (k-12)', 'frpm count (k
SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-
SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM : ['cdscode', 'academic year', 'county code', 'district code', 'school code', 'county name', 'district name', 'school name', 'district type', 'school type', 'educational option type', 'nslp provision status', 'charter school (y/n)', 'charter school number', 'charter funding type', 'irc', 'low grade', 'high grade', 'enrollment (k-12)', 'free meal count (k-12)', 'percent (%) eligible free (k-12)', 'frpm count (k","SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-",0.0
92,415,What percentage of cards with format commander and legal status do not have a content warning?,card_games,challenging,SELECT CAST(SUM(CASE WHEN T1.hasContentWarning = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'commander' AND T2.status = 'Legal',7,"SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE format = 'commander' AND legal = 'legal') FROM cards WHERE format = 'commander' AND legal = 'legal' AND hascontentwarning = 0
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE format = 'commander' AND legal = 'legal') FROM cards WHERE format = 'commander' AND legal = 'legal' AND hascontentwarning = 0
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE format = 'commander' AND legal = 'legal') FROM cards WHERE format = 'commander' AND legal = 'legal' AND hascontentwarning = 0
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE format = 'commander' AND legal = 'legal') FROM cards WHERE format = 'commander' AND legal = 'legal' AND hascontentwarning = 0
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE format = 'commander' AND legal = 'legal') FROM cards WHERE format = 'commander' AND legal = 'legal' AND hascontentwarning = 0
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE format = 'commander' AND legal = 'legal') FROM cards WHERE format = 'commander' AND legal = 'legal' AND hascontentwarning = 0
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE format = 'commander' AND legal = 'legal') FROM cards WHERE format = 'commander' AND legal = 'legal' AND hascontentwarning = 0",SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE format = 'commander' AND legal = 'legal') FROM cards WHERE format = 'commander' AND legal = 'legal' AND hascontentwarning = 0,0.0
93,290,Which toxic element can be found in the molecule TR151?,toxicology,challenging,SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR151',7,"SELECT element FROM atom WHERE molecule_id = (     SELECT molecule_id     FROM molecule     WHERE label = 'TR151' )
SELECT element FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR151') AND atom_id IN (SELECT atom_id FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE bond_type = 'toxic'))
SELECT element FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR151') AND atom_id IN (SELECT atom_id FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE bond_type = 'toxic'))
SELECT element FROM atom a, molecule m, connected c, bond b WHERE a.molecule_id = m.molecule_id AND c.atom_id = a.atom_id AND c.bond_id = b.bond_id AND m.label = 'TR151' AND b.bond_type = 'toxic'
SELECT element FROM atom WHERE molecule_id = (     SELECT molecule_id     FROM molecule     WHERE label = 'TR151' ) AND element IN (     SELECT element     FROM atom     WHERE molecule_id = (         SELECT molecule_id         FROM molecule         WHERE label = 'TR151'     )     GROUP BY element     HAVING COUNT(*) > 1 )
SELECT element FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR151') AND atom_id IN (SELECT atom_id FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR151')))
SELECT element FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR151') AND atom_id IN (SELECT atom_id FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR151')))",SELECT element FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR151') AND atom_id IN (SELECT atom_id FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE bond_type = 'toxic')),0.0
94,1316,"Please list the phone numbers of the students from the Student_Club that has attended the event ""Women's Soccer"".",student_club,moderate,SELECT T3.phone FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T1.event_name = 'Women''s Soccer',7,"SELECT phone FROM member WHERE member_id IN (SELECT link_to_member FROM attendance WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Women's Soccer'))
SELECT phone FROM member WHERE member_id IN (SELECT link_to_member FROM attendance WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Women's Soccer'))
SELECT phone FROM member WHERE member_id IN (SELECT link_to_member FROM attendance WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Women's Soccer'))
SELECT phone FROM member WHERE member_id IN (SELECT link_to_member FROM attendance WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = ""Women's Soccer""))
SELECT phone FROM member WHERE member_id IN (SELECT link_to_member FROM attendance WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Women's Soccer'))
SELECT phone FROM member WHERE member_id IN (SELECT link_to_member FROM attendance WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Women's Soccer'))
SELECT phone FROM member WHERE member_id IN (SELECT link_to_member FROM attendance WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Women's Soccer'))",SELECT phone FROM member WHERE member_id IN (SELECT link_to_member FROM attendance WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Women's Soccer')),0.0
95,1308,"Among the patients who have a normal platelet level, how many of them have other symptoms observed?",thrombosis_prediction,moderate,SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.PLT > 100 AND T2.PLT < 400 AND T1.Diagnosis IS NOT NULL,7,"SELECT COUNT(*) FROM examination WHERE examination.symptoms IS NOT NULL AND examination.symptoms != '' AND examination.symptoms != 'None' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the
SELECT COUNT(*) FROM examination WHERE examination.symptoms IS NOT NULL AND examination.platelet IS NOT NULL
SELECT COUNT(*) FROM examination WHERE examination.symptoms IS NOT NULL AND examination.platelet IS NOT NULL
SELECT COUNT(*) FROM examination WHERE examination.symptoms IS NOT NULL AND examination.symptoms != '' AND examination.symptoms != 'None' AND examination.symptoms != 'No' AND examination.symptoms != 'No symptoms' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != 'No symptoms observed' AND examination.symptoms != '
SELECT COUNT(*) FROM examination WHERE examination.symptoms IS NOT NULL AND examination.symptoms != '' AND examination.symptoms != 'None' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the
SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM examination WHERE symptoms IS NOT NULL) AND id IN (SELECT id FROM laboratory WHERE plt IS NOT NULL)
SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM examination WHERE symptoms IS NOT NULL) AND id IN (SELECT id FROM laboratory WHERE plt IS NOT NULL)",SELECT COUNT(*) FROM examination WHERE examination.symptoms IS NOT NULL AND examination.symptoms != '' AND examination.symptoms != 'None' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the above' AND examination.symptoms != 'None of the,0.0
96,1109,"How was the build up play dribbling class for ""LEI"" on 2015/9/10?",european_football_2,moderate,"SELECT t2.buildUpPlayDribblingClass FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t1.team_short_name = 'LEI' AND SUBSTR(t2.`date`, 1, 10) = '2015-09-10'",7,"NULL
NULL
SELECT * FROM player_attributes WHERE player_api_id = 12345
NULL
NULL
NULL
NULL",,0.0
97,1113,"For the team ""Hannover 96"", what was its defence aggression class on 2015/9/10?",european_football_2,moderate,SELECT t2.chanceCreationShootingClass FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t1.team_long_name = 'Hannover 96' AND t2.`date` LIKE '2015-09-10%',7,"SELECT team_attributes.defenceaggressionclass FROM team_attributes WHERE team_attributes.team_api_id = (SELECT team.team_api_id FROM team WHERE team.team_long_name = 'Hannover 96') AND team_attributes.date = '2015-09-10'
SELECT team_attributes.defenceaggressionclass FROM team_attributes WHERE team_attributes.team_api_id = (SELECT team.team_api_id FROM team WHERE team.team_long_name = 'Hannover 96') AND team_attributes.date = '2015/9/10'
SELECT team_attributes.defenceaggression FROM team_attributes WHERE team_attributes.team_api_id = 100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
SELECT team_attributes.defenceaggressionclass FROM team_attributes WHERE team_attributes.team_api_id = (SELECT team.team_api_id FROM team WHERE team.team_long_name = ""Hannover 96"") AND team_attributes.date = ""2015/9/10""
SELECT team_attributes.defenceaggressionclass FROM team_attributes WHERE team_attributes.team_api_id = 10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
SELECT team_attributes.defenceaggression FROM team_attributes JOIN match ON team_attributes.team_api_id = match.home_team_api_id WHERE match.date = '2015/9/10' AND match.home_team_api_id = (SELECT team_api_id FROM team WHERE team_long_name = 'Hannover 96')
SELECT team_attributes.defenceaggressionclass FROM team_attributes WHERE team_attributes.team_api_id = (SELECT team.team_api_id FROM team WHERE team.team_long_name = 'Hannover 96') AND team_attributes.date = '2015/9/10'",SELECT team_attributes.defenceaggressionclass FROM team_attributes WHERE team_attributes.team_api_id = (SELECT team.team_api_id FROM team WHERE team.team_long_name = 'Hannover 96') AND team_attributes.date = '2015/9/10',0.0
98,634,"Among posts by Harvey Motulsky and Noah Snyder, which one has higher popularity?",codebase_community,challenging,SELECT T1.DisplayName FROM users AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.UserId INNER JOIN posts AS T3 ON T2.PostId = T3.Id WHERE T1.DisplayName = 'Harvey Motulsky' OR T1.DisplayName = 'Noah Snyder' GROUP BY T1.DisplayName ORDER BY SUM(T3.ViewCount) DESC LIMIT 1,7,"SELECT p1.id, p1.score, p2.id, p2.score FROM posts p1 JOIN posts p2 ON p1.id = p2.id WHERE p1.score > p2.score ORDER BY p1.score DESC
SELECT p1.id, p1.score, p2.id, p2.score FROM posts p1 JOIN posts p2 ON p1.id = p2.id WHERE p1.score > p2.score ORDER BY p1.score DESC
SELECT p.id, p.title, p.score, p.viewcount, p.answercount, p.commentcount, p.favoritecount, p.creationdate, p.lasactivitydate, p.lasteditdate, p.lasteditoruserid, p.lasteditordisplayname, p.owneruserid, p.ownerdisplayname, p.body, p.tags, p.posttypeid, p.acceptedanswerid, p.parentid, p.closeddate, p.communityowneddate, p.wikipostid, p.excerptpostid, p.count, p.tagname, p.reputation, p.creationdate, p.displayname, p.lastaccessdate, p.websiteurl, p.location, p.aboutme, p.views, p.upvotes, p.downvotes, p.accountid, p.age, p.profileimageurl, p.id, p.postid, p.votetypeid, p.creationdate, p.userid, p.bountyamount, p.id, p.postid, p.score, p.text, p.creationdate, p.userid, p.userdisplayname, p.id, p.posthistorytypeid, p.postid, p.revisionguid, p.creationdate, p.userid, p.text, p.comment,
SELECT p.id, p.title, p.score, p.viewcount, p.answercount, p.commentcount, p.favoritecount, p.creationdate, p.lasactivitydate, p.lasteditdate, p.lasteditoruserid, p.lasteditordisplayname, p.owneruserid, p.ownerdisplayname, p.parentid, p.closeddate, p.communityowneddate, p.wikipostid, p.excerptpostid, p.tagname, p.count, p.reputation, p.creationdate, p.displayname, p.lastaccessdate, p.websiteurl, p.location, p.aboutme, p.views, p.upvotes, p.downvotes, p.accountid, p.age, p.profileimageurl, p.id, p.postid, p.votetypeid, p.creationdate, p.userid, p.bountyamount, p.id, p.userid, p.name, p.date, p.id, p.postid, p.score, p.text, p.creationdate, p.userid, p.userdisplayname, p.id, p.posthistorytypeid, p.postid, p.revisionguid, p.creationdate, p.userid, p.text, p.comment, p.user
SELECT p.id, p.title, p.score, p.viewcount, p.answercount, p.commentcount, p.favoritecount, p.creationdate, p.lasactivitydate, p.lasteditdate, p.lasteditoruserid, p.lasteditordisplayname, p.owneruserid, p.ownerdisplayname, p.closeddate, p.communityowneddate, p.parentid, p.posttypeid, p.acceptedanswerid, p.body, p.tags, p.viewcount, p.answercount, p.commentcount, p.favoritecount, p.lasteditoruserid, p.lasteditdate, p.communityowneddate, p.parentid, p.closeddate, p.ownerdisplayname, p.lasteditordisplayname, p.tags, p.viewcount, p.answercount, p.commentcount, p.favoritecount, p.lasteditoruserid, p.lasteditdate, p.communityowneddate, p.parentid, p.closeddate, p.ownerdisplayname, p.lasteditordisplayname, p.tags, p.viewcount, p.answercount, p.commentcount, p.favoritecount, p.lasteditoruserid, p.lasteditdate, p.communityowneddate, p.parentid,
SELECT p1.id, p1.score, p2.id, p2.score FROM posts p1 JOIN posts p2 ON p1.id = p2.id WHERE p1.score > p2.score ORDER BY p1.score DESC
SELECT p1.id, p1.score, p2.id, p2.score FROM posts p1 JOIN posts p2 ON p1.id = p2.id WHERE p1.score > p2.score ORDER BY p1.score DESC","SELECT p1.id, p1.score, p2.id, p2.score FROM posts p1 JOIN posts p2 ON p1.id = p2.id WHERE p1.score > p2.score ORDER BY p1.score DESC",0.0
99,1265,How many patients have a normal level of anti-ribonuclear protein and have been admitted to the hospital?,thrombosis_prediction,moderate,SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RNP = 'negative' OR T2.RNP = '0' AND T1.Admission = '+',7,"SELECT COUNT(*) FROM patient WHERE admission = 'yes' AND ana = 'normal'
SELECT COUNT(*) FROM patient WHERE examination.ana = 'normal' AND patient.admission = 'yes'
SELECT COUNT(*) FROM patient WHERE examination.ana = 'normal' AND patient.admission = 'yes'
SELECT COUNT(*) FROM patient WHERE admission = 'yes' AND ana = 'normal'
SELECT COUNT(*) FROM patient WHERE admission = 'yes' AND examination.ana = 'normal'
SELECT COUNT(*) FROM patient WHERE examination.ana = 'normal' AND patient.admission = 'yes'
SELECT COUNT(*) FROM patient WHERE admission = 'Y' AND examination.ana = 'normal'",SELECT COUNT(*) FROM patient WHERE examination.ana = 'normal' AND patient.admission = 'yes',0.0
100,1076,"What is the difference of the average ball control score between Abdou Diallo and Aaron Appindangoye
?",european_football_2,challenging,SELECT CAST(SUM(CASE WHEN t1.player_name = 'Abdou Diallo' THEN t2.ball_control ELSE 0 END) AS REAL) / COUNT(CASE WHEN t1.player_name = 'Abdou Diallo' THEN t2.id ELSE NULL END) - CAST(SUM(CASE WHEN t1.player_name = 'Aaron Appindangoye' THEN t2.ball_control ELSE 0 END) AS REAL) / COUNT(CASE WHEN t1.player_name = 'Aaron Appindangoye' THEN t2.id ELSE NULL END) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id,7,"SELECT AVG(ball_control) FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Abdou Diallo') - AVG(ball_control) FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Aaron Appindangoye')
SELECT AVG(ball_control) FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Abdou Diallo') - AVG(ball_control) FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Aaron Appindangoye')
SELECT AVG(ball_control) FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Abdou Diallo') - AVG(ball_control) FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Aaron Appindangoye')
SELECT AVG(ball_control) FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Abdou Diallo') - AVG(ball_control) FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Aaron Appindangoye')
SELECT AVG(ball_control) FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Abdou Diallo') - AVG(ball_control) FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Aaron Appindangoye')
SELECT AVG(ball_control) FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Abdou Diallo') - AVG(ball_control) FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Aaron Appindangoye')
SELECT AVG(ball_control) FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Abdou Diallo') - AVG(ball_control) FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Aaron Appindangoye')",SELECT AVG(ball_control) FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Abdou Diallo') - AVG(ball_control) FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Aaron Appindangoye'),0.0
101,477,"Which of these artists have designed a card in the set Coldsnap, Jeremy Jarvis, Aaron Miller or Chippy?",card_games,challenging,SELECT T1.artist FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE (T2.name = 'Coldsnap' AND T1.artist = 'Chippy') OR (T2.name = 'Coldsnap' AND T1.artist = 'Aaron Miller') OR (T2.name = 'Coldsnap' AND T1.artist = 'Jeremy Jarvis') GROUP BY T1.artist,7,"SELECT DISTINCT artist FROM cards WHERE setcode = 'cns' AND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')
SELECT DISTINCT artist FROM cards WHERE setcode = 'cns' AND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')
SELECT DISTINCT artist FROM cards WHERE setcode = 'cns' AND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')
SELECT DISTINCT artist FROM cards WHERE setcode = 'cns' AND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')
SELECT DISTINCT artist FROM cards WHERE setcode = 'cns' AND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')
SELECT DISTINCT artist FROM cards WHERE setcode = 'cns' AND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')
SELECT DISTINCT artist FROM cards WHERE setcode = 'cns' AND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')","SELECT DISTINCT artist FROM cards WHERE setcode = 'cns' AND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')",0.0
102,1124,Who are the players that tend to be attacking when their mates were doing attack moves? List down their name.,european_football_2,moderate,SELECT DISTINCT t1.player_name FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t2.attacking_work_rate = 'high',7,"NULL
SELECT player_name FROM player_attributes WHERE player_api_id IN (SELECT player_api_id FROM match WHERE home_team_goal > 0 AND away_team_goal > 0) AND player_fifa_api_id IN (SELECT player_fifa_api_id FROM player WHERE player_name LIKE '%attack%') AND player_api_id IN (SELECT player_api_id FROM player_attributes WHERE player_fifa_api_id IN (SELECT player_fifa_api_id FROM player WHERE player_name LIKE '%attack%')) AND player_api_id IN (SELECT player_api_id FROM player_attributes WHERE player_fifa_api_id IN (SELECT player_fifa_api_id FROM player WHERE player_name LIKE '%attack%')) AND player_api_id IN (SELECT player_api_id FROM player_attributes WHERE player_fifa_api_id IN (SELECT player_fifa_api_id FROM player WHERE player_name LIKE '%attack%')) AND player_api_id IN (SELECT player_api_id FROM player_attributes WHERE player_fifa_api_id IN (SELECT player_fifa_api_id FROM player WHERE player_name LIKE '%attack%')) AND player_api_id IN (SELECT player_api_id FROM player_attributes WHERE player_fifa_api_id IN (SELECT player_fifa_api_id FROM player WHERE
NULL
NULL
NULL
NULL
SELECT player_name FROM player_attributes WHERE player_fifa_api_id IN (SELECT player_fifa_api_id FROM player_attributes WHERE player_api_id IN (SELECT player_api_id FROM player WHERE player_name IN (SELECT player_name FROM player_attributes WHERE player_fifa_api_id IN (SELECT player_fifa_api_id FROM player_attributes WHERE player_api_id IN (SELECT player_api_id FROM player WHERE player_name IN (SELECT player_name FROM player_attributes WHERE player_fifa_api_id IN (SELECT player_fifa_api_id FROM player_attributes WHERE player_api_id IN (SELECT player_api_id FROM player WHERE player_name IN (SELECT player_name FROM player_attributes WHERE player_fifa_api_id IN (SELECT player_fifa_api_id FROM player_attributes WHERE player_api_id IN (SELECT player_api_id FROM player WHERE player_name IN (SELECT player_name FROM player_attributes WHERE player_fifa_api_id IN (SELECT player_fifa_api_id FROM player_attributes WHERE player_api_id IN (SELECT player_api_id FROM player WHERE player_name IN (SELECT player_name FROM player_attributes WHERE player_fifa_api_id IN (SELECT player_fifa_api_id FROM player_attributes WHERE player_api_id IN (SELECT",,0.0
103,1117,What are the player api id of 10 heaviest players?,european_football_2,simple,SELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 10,7,"SELECT player_api_id FROM player_attributes WHERE player_fifa_api_id IN (SELECT player_fifa_api_id FROM player_attributes WHERE player_api_id IN (SELECT player_api_id FROM player WHERE weight > 100))
SELECT player_api_id, player_name, player_fifa_api_id, birthday, height, weight FROM player WHERE player_api_id IN (SELECT player_api_id FROM player_attributes WHERE player_fifa_api_id IN (SELECT player_fifa_api_id FROM player_attributes WHERE player_api_id IN (SELECT player_api_id FROM player_attributes WHERE player_fifa_api_id IN (SELECT player_fifa_api_id FROM player_attributes WHERE player_api_id IN (SELECT player_api_id FROM player_attributes WHERE player_fifa_api_id IN (SELECT player_fifa_api_id FROM player_attributes WHERE player_api_id IN (SELECT player_api_id FROM player_attributes WHERE player_fifa_api_id IN (SELECT player_fifa_api_id FROM player_attributes WHERE player_api_id IN (SELECT player_api_id FROM player_attributes WHERE player_fifa_api_id IN (SELECT player_fifa_api_id FROM player_attributes WHERE player_api_id IN (SELECT player_api_id FROM player_attributes WHERE player_fifa_api_id IN (SELECT player_fifa_api_id FROM player_attributes WHERE player_api_id IN (SELECT player_api_id FROM player_attributes WHERE player_fifa_api_id IN (SELECT player_
SELECT player_api_id FROM player_attributes WHERE player_fifa_api_id IN (SELECT player_fifa_api_id FROM player WHERE weight > 100) ORDER BY weight DESC LIMIT 10
SELECT player_api_id FROM player_attributes WHERE player_fifa_api_id IN (SELECT player_fifa_api_id FROM player WHERE weight > 100) ORDER BY weight DESC LIMIT 10
SELECT player_api_id FROM player_attributes WHERE player_fifa_api_id IN (SELECT player_fifa_api_id FROM player WHERE weight > 100) ORDER BY weight DESC LIMIT 10
SELECT player_api_id FROM player_attributes WHERE player_fifa_api_id IN (SELECT player_fifa_api_id FROM player WHERE weight > 100) ORDER BY weight DESC LIMIT 10
SELECT player_api_id FROM player_attributes WHERE player_fifa_api_id IN (SELECT player_fifa_api_id FROM player_attributes WHERE player_api_id IN (SELECT player_api_id FROM player WHERE weight > 100))",SELECT player_api_id FROM player_attributes WHERE player_fifa_api_id IN (SELECT player_fifa_api_id FROM player WHERE weight > 100) ORDER BY weight DESC LIMIT 10,0.0
104,1464,Write the full names of students who received funds on the date of 9/9/2019 and include the amount received.,student_club,challenging,"SELECT DISTINCT T3.first_name, T3.last_name, T4.amount FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T3.member_id = T2.link_to_member INNER JOIN income AS T4 ON T4.link_to_member = T3.member_id WHERE T4.date_received = '2019-09-09'",7,"SELECT member.first_name, member.last_name, income.amount FROM member JOIN income ON member.member_id = income.link_to_member WHERE income.date_received = '9/9/2019'
SELECT member.first_name, member.last_name, income.amount FROM member INNER JOIN income ON member.member_id = income.link_to_member WHERE income.date_received = '9/9/2019'
SELECT member.first_name, member.last_name, income.amount FROM member JOIN income ON member.member_id = income.link_to_member WHERE income.date_received = '2019-09-09'
SELECT member.first_name, member.last_name, income.amount FROM member JOIN income ON member.member_id = income.link_to_member WHERE income.date_received = '9/9/2019'
SELECT member.first_name, member.last_name, income.amount FROM member JOIN income ON member.member_id = income.link_to_member WHERE income.date_received = '2019-09-09'
SELECT member.first_name, member.last_name, income.amount FROM member JOIN income ON member.member_id = income.link_to_member WHERE income.date_received = '9/9/2019'
SELECT member.first_name, member.last_name, income.amount FROM member JOIN income ON member.member_id = income.link_to_member WHERE income.date_received = '9/9/2019'","SELECT member.first_name, member.last_name, income.amount FROM member JOIN income ON member.member_id = income.link_to_member WHERE income.date_received = '9/9/2019'",0.0
105,1458,Calculate the difference in the percentage of members in New Jersey and Vermont.,student_club,moderate,SELECT CAST((SUM(CASE WHEN T2.state = 'New Jersey' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.state = 'Vermont' THEN 1 ELSE 0 END)) AS REAL) * 100 / COUNT(T1.member_id) AS diff FROM member AS T1 INNER JOIN zip_code AS T2 ON T2.zip_code = T1.zip,7,"SELECT (SELECT COUNT(*) FROM member WHERE zip = '07001') - (SELECT COUNT(*) FROM member WHERE zip = '05601') AS difference
SELECT (SELECT COUNT(*) FROM member WHERE zip IN (SELECT zip_code FROM zip_code WHERE state = 'NJ')) - (SELECT COUNT(*) FROM member WHERE zip IN (SELECT zip_code FROM zip_code WHERE state = 'VT')) AS difference
SELECT (SELECT COUNT(*) FROM member WHERE zip IN (SELECT zip_code FROM zip_code WHERE state = 'NJ')) - (SELECT COUNT(*) FROM member WHERE zip IN (SELECT zip_code FROM zip_code WHERE state = 'VT')) AS difference
SELECT (SELECT COUNT(*) FROM member WHERE zip = '07001') - (SELECT COUNT(*) FROM member WHERE zip = '05601') AS difference
SELECT (SELECT COUNT(*) FROM member WHERE zip = '07001') - (SELECT COUNT(*) FROM member WHERE zip = '05601') AS difference
SELECT (     SELECT COUNT(*)     FROM member     WHERE zip IN (         SELECT zip_code         FROM zip_code         WHERE state = 'NJ'     ) ) - (     SELECT COUNT(*)     FROM member     WHERE zip IN (         SELECT zip_code         FROM zip_code         WHERE state = 'VT'     ) )
SELECT (SELECT COUNT(*) FROM member WHERE zip IN (SELECT zip_code FROM zip_code WHERE state = 'NJ')) - (SELECT COUNT(*) FROM member WHERE zip IN (SELECT zip_code FROM zip_code WHERE state = 'VT')) FROM member",SELECT (SELECT COUNT(*) FROM member WHERE zip = '07001') - (SELECT COUNT(*) FROM member WHERE zip = '05601') AS difference,0.0
106,473,Is the set of cards with Adarkar Valkyrie only available outside the United States?,card_games,moderate,"SELECT IIF(isForeignOnly = 1, 'YES', 'NO') FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE T1.name = 'Adarkar Valkyrie'",7,"SELECT * FROM cards WHERE availability NOT LIKE '%US%'
SELECT * FROM cards WHERE availability NOT LIKE '%US%'
SELECT * FROM cards WHERE availability NOT LIKE '%US%'
SELECT * FROM cards WHERE availability NOT LIKE '%US%'
SELECT * FROM cards WHERE availability NOT LIKE '%US%'
SELECT * FROM cards WHERE availability NOT LIKE '%US%'
SELECT * FROM cards WHERE availability NOT LIKE '%US%' AND availability NOT LIKE '%US-only%'",SELECT * FROM cards WHERE availability NOT LIKE '%US%',0.0
107,87,"What are the valid e-mail addresses of the administrator of the school located in the San Bernardino county, City of San Bernardino City Unified that opened between 1/1/2009 to 12/31/2010 whose school types are public Intermediate/Middle Schools and Unified Schools?",california_schools,challenging,"SELECT T2.AdmEmail1, T2.AdmEmail2 FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'San Bernardino' AND T2.City = 'San Bernardino' AND T2.DOC = 54 AND strftime('%Y', T2.OpenDate) BETWEEN '2009' AND '2010' AND T2.SOC = 62",7,"SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM schools WHERE cdscode = 'cdscode' AND academic year = 'academic year' AND county code = 'county code' AND district code = 'district code' AND school code = 'school code' AND county name = 'county name' AND district name = 'district name' AND school name = 'school name' AND district type = 'district type' AND school type = 'school type' AND educational option type = 'educational option type' AND nslp provision status = 'nslp provision status' AND charter school (y/n) = 'charter school
SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM schools WHERE cdscode = 'cdscode' AND academic year = 'academic year' AND county code = 'county code' AND district code = 'district code' AND school code = 'school code' AND county name = 'county name' AND district name = 'district name' AND school name = 'school name' AND district type = 'district type' AND school type = 'school type' AND educational option type = 'educational option type' AND nslp provision status = 'nslp provision status' AND charter school (y/n) = 'charter school
SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM schools WHERE cdscode = 'cdscode' AND academic year = 'academic year' AND county code = 'county code' AND district code = 'district code' AND school code = 'school code' AND county name = 'county name' AND district name = 'district name' AND school name = 'school name' AND district type = 'district type' AND school type = 'school type' AND educational option type = 'educational option type' AND nslp provision status = 'nslp provision status' AND charter school (y/n) = 'charter school
SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM schools WHERE cdscode = 'cdscode' AND academic year = 'academic year' AND county code = 'county code' AND district code = 'district code' AND school code = 'school code' AND county name = 'county name' AND district name = 'district name' AND school name = 'school name' AND district type = 'district type' AND school type = 'school type' AND educational option type = 'educational option type' AND nslp provision status = 'nslp provision status' AND charter school (y/n) = 'charter school
SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM schools WHERE cdscode = 'cdscode' AND academic year = 'academic year' AND county code = 'county code' AND district code = 'district code' AND school code = 'school code' AND county name = 'county name' AND district name = 'district name' AND school name = 'school name' AND district type = 'district type' AND school type = 'school type' AND educational option type = 'educational option type' AND nslp provision status = 'nslp provision status' AND charter school (y/n) = 'charter school
SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM schools WHERE cdscode = 'cdscode' AND academic year = 'academic year' AND county code = 'county code' AND district code = 'district code' AND school code = 'school code' AND county name = 'county name' AND district name = 'district name' AND school name = 'school name' AND district type = 'district type' AND school type = 'school type' AND educational option type = 'educational option type' AND nslp provision status = 'nslp provision status' AND charter school (y/n) = 'charter school
SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM schools WHERE cdscode = 'cdscode' AND academic year = 'academic year' AND county code = 'county code' AND district code = 'district code' AND school code = 'school code' AND county name = 'county name' AND district name = 'district name' AND school name = 'school name' AND district type = 'district type' AND school type = 'school type' AND educational option type = 'educational option type' AND nslp provision status = 'nslp provision status' AND charter school (y/n) = 'charter school","SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM schools WHERE cdscode = 'cdscode' AND academic year = 'academic year' AND county code = 'county code' AND district code = 'district code' AND school code = 'school code' AND county name = 'county name' AND district name = 'district name' AND school name = 'school name' AND district type = 'district type' AND school type = 'school type' AND educational option type = 'educational option type' AND nslp provision status = 'nslp provision status' AND charter school (y/n) = 'charter school",0.0
108,719,"Among the superheroes with the super power of ""Super Strength"", how many of them have a height of over 200cm?",superhero,moderate,SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Super Strength' AND T1.height_cm > 200,7,"SELECT COUNT(*) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Super Strength') AND height_cm > 200
SELECT COUNT(*) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Super Strength') AND height_cm > 200
SELECT COUNT(*) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Super Strength') AND height_cm > 200
SELECT COUNT(*) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Super Strength') AND height_cm > 200
SELECT COUNT(*) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Super Strength') AND height_cm > 200
SELECT COUNT(*) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Super Strength') AND height_cm > 200
SELECT COUNT(*) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Super Strength') AND height_cm > 200",SELECT COUNT(*) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Super Strength') AND height_cm > 200,0.0
109,416,What percentage of cards without power are in French?,card_games,challenging,SELECT CAST(SUM(CASE WHEN T2.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.power IS NULL OR T1.power = '*',7,"SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards) FROM cards WHERE power IS NULL AND language = 'French'
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards) FROM cards WHERE power IS NULL AND language = 'French'
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards) FROM cards WHERE power IS NULL AND language = 'French'
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards) FROM cards WHERE power IS NULL AND language = 'French'
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards) FROM cards WHERE power IS NULL AND language = 'French'
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards) FROM cards WHERE power IS NULL AND language = 'French'
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards) FROM cards WHERE power IS NULL AND language = 'French'",SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards) FROM cards WHERE power IS NULL AND language = 'French',0.0
110,944,How much faster in percentage is the champion than the driver who finished the race last in the 2008 Australian Grand Prix?,formula_1,challenging,"WITH time_in_seconds AS ( SELECT T1.positionOrder, CASE WHEN T1.positionOrder = 1 THEN (CAST(SUBSTR(T1.time, 1, 1) AS REAL) * 3600) + (CAST(SUBSTR(T1.time, 3, 2) AS REAL) * 60) + CAST(SUBSTR(T1.time, 6) AS REAL) ELSE CAST(SUBSTR(T1.time, 2) AS REAL) END AS time_seconds FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Australian Grand Prix' AND T1.time IS NOT NULL AND T2.year = 2008 ), champion_time AS ( SELECT time_seconds FROM time_in_seconds WHERE positionOrder = 1), last_driver_incremental AS ( SELECT time_seconds FROM time_in_seconds WHERE positionOrder = (SELECT MAX(positionOrder) FROM time_in_seconds) ) SELECT (CAST((SELECT time_seconds FROM last_driver_incremental) AS REAL) * 100) / (SELECT time_seconds + (SELECT time_seconds FROM last_driver_incremental) FROM champion_time
SELECT (SELECT points FROM driverstandings WHERE raceid = 1 AND position = 1) / (SELECT points FROM driverstandings WHERE raceid = 1 AND position = 20) * 100
SELECT (SELECT points FROM driverstandings WHERE position = 1 AND raceid = 1) / (SELECT points FROM driverstandings WHERE position = 20 AND raceid = 1) * 100


SELECT (SELECT points FROM driverstandings WHERE driverid = (SELECT driverid FROM results WHERE resultid = (SELECT MAX(resultid) FROM results WHERE raceid = (SELECT raceid FROM races WHERE name = 'Australian Grand Prix' AND year = 2008))) AND raceid = (SELECT raceid FROM races WHERE name = 'Australian Grand Prix' AND year = 2008)) / (SELECT points FROM driverstandings WHERE driverid = (SELECT driverid FROM results WHERE resultid = (SELECT MIN(resultid) FROM results WHERE raceid = (SELECT raceid FROM races WHERE name = 'Australian Grand Prix' AND year = 2008))) AND raceid = (SELECT raceid FROM races WHERE name = 'Australian Grand Prix' AND year = 2008)) * 100 - 100
SELECT (SELECT points FROM driverstandings WHERE driverid = (SELECT driverid FROM results WHERE resultid = (SELECT MAX(resultid) FROM results WHERE raceid = (SELECT raceid FROM races WHERE name = 'Australian Grand Prix' AND year = 2008))) AND raceid = (SELECT raceid FROM races WHERE name = 'Australian Grand Prix' AND year = 2008)) - (SELECT points FROM driverstandings WHERE driverid = (SELECT driverid FROM results WHERE resultid = (SELECT MIN(resultid) FROM results WHERE raceid = (SELECT raceid FROM races WHERE name = 'Australian Grand Prix' AND year = 2008))) AND raceid = (SELECT raceid FROM races WHERE name = 'Australian Grand Prix' AND year = 2008)) FROM driverstandings WHERE raceid = (SELECT raceid FROM races WHERE name = 'Australian Grand Prix' AND year
111,791,Calculate the average height for each superhero.,superhero,simple,SELECT CAST(SUM(height_cm) AS REAL) / COUNT(id) FROM superhero,7,"SELECT superhero.superhero_name, AVG(superhero.height_cm) AS average_height FROM superhero GROUP BY superhero.superhero_name
SELECT superhero.superhero_name, AVG(superhero.height_cm) AS average_height FROM superhero GROUP BY superhero.superhero_name
SELECT superhero.superhero_name, AVG(superhero.height_cm) AS average_height FROM superhero GROUP BY superhero.superhero_name
SELECT superhero.superhero_name, AVG(superhero.height_cm) AS average_height FROM superhero GROUP BY superhero.superhero_name
SELECT superhero.superhero_name, AVG(superhero.height_cm) AS average_height FROM superhero GROUP BY superhero.superhero_name
SELECT superhero.superhero_name, AVG(superhero.height_cm) AS average_height FROM superhero GROUP BY superhero.superhero_name
SELECT superhero.superhero_name, AVG(superhero.height_cm) FROM superhero GROUP BY superhero.superhero_name","SELECT superhero.superhero_name, AVG(superhero.height_cm) AS average_height FROM superhero GROUP BY superhero.superhero_name",0.0
112,827,What is the average height of a non-human superhero in Dark Horse Comics?,superhero,moderate,SELECT AVG(T1.height_cm) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN race AS T3 ON T1.race_id = T3.id WHERE T2.publisher_name = 'Dark Horse Comics' AND T3.race != 'Human',7,"SELECT AVG(height_cm) FROM superhero WHERE alignment_id != 1
SELECT AVG(height_cm) FROM superhero WHERE alignment_id != 1
SELECT AVG(height_cm) FROM superhero WHERE alignment_id != 1
SELECT AVG(height_cm) FROM superhero WHERE alignment_id != 1
SELECT AVG(height_cm) FROM superhero WHERE alignment_id = 2
SELECT AVG(height_cm) FROM superhero WHERE alignment_id = 2
SELECT AVG(height_cm) FROM superhero WHERE alignment_id != 1",SELECT AVG(height_cm) FROM superhero WHERE alignment_id != 1,0.0
113,769,Which superhero has the most durability published by Dark Horse Comics?,superhero,challenging,SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T3.id = T2.attribute_id INNER JOIN publisher AS T4 ON T4.id = T1.publisher_id WHERE T4.publisher_name = 'Dark Horse Comics' AND T3.attribute_name = 'Durability' ORDER BY T2.attribute_value DESC LIMIT 1,7,"SELECT superhero.superhero_name, superhero.full_name, superhero.height_cm, superhero.weight_kg, superhero.alignment_id, superhero.publisher_id, superhero.race_id, superhero.gender_id, superhero.eye_colour_id, superhero.hair_colour_id, superhero.skin_colour_id, superhero.attribute_id, superhero.attribute_value, superhero.power_id, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power
SELECT superhero.superhero_name, superhero.full_name, superhero.height_cm, superhero.weight_kg, superhero.alignment_id, superhero.publisher_id, superhero.race_id, superhero.gender_id, superhero.eye_colour_id, superhero.hair_colour_id, superhero.skin_colour_id, superhero.attribute_id, superhero.attribute_value, superhero.power_id, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power
SELECT superhero.superhero_name, superhero.full_name, superhero.height_cm, superhero.weight_kg, superhero.alignment_id, superhero.publisher_id, superhero.race_id, superhero.gender_id, superhero.eye_colour_id, superhero.hair_colour_id, superhero.skin_colour_id, superhero.attribute_id, superhero.attribute_value, superhero.power_id, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power
SELECT superhero.superhero_name, superhero.full_name, superhero.height_cm, superhero.weight_kg, superhero.alignment_id, superhero.publisher_id, superhero.race_id, superhero.gender_id, superhero.eye_colour_id, superhero.hair_colour_id, superhero.skin_colour_id, superhero.attribute_id, superhero.attribute_value, superhero.power_id, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power
SELECT superhero.superhero_name, superhero.full_name, superhero.height_cm, superhero.weight_kg, superhero.alignment_id, superhero.publisher_id, superhero.race_id, superhero.gender_id, superhero.eye_colour_id, superhero.hair_colour_id, superhero.skin_colour_id, superhero.publisher_id, superhero.alignment_id, superhero.height_cm, superhero.weight_kg, superhero.publisher_id, superhero.alignment_id, superhero.height_cm, superhero.weight_kg, superhero.publisher_id, superhero.alignment_id, superhero.height_cm, superhero.weight_kg, superhero.publisher_id, superhero.alignment_id, superhero.height_cm, superhero.weight_kg, superhero.publisher_id, superhero.alignment_id, superhero.height_cm, superhero.weight_kg, superhero.publisher_id, superhero.alignment_id, superhero.height_cm, superhero.weight_kg, superhero.publisher_id, superhero.alignment_id, superhero.height_cm, superhero.weight_kg, superhero.publisher_id, superhero.alignment_id, superhero.height_cm, superhero.weight_kg, superhero.publisher_id, superhero.alignment_id, superhero.height_cm, superhero.weight_kg, superhero.publisher_id, superhero.alignment
SELECT superhero.superhero_name, superhero.full_name, superhero.height_cm, superhero.weight_kg, superhero.alignment_id, superhero.publisher_id, superhero.race_id, superhero.gender_id, superhero.eye_colour_id, superhero.hair_colour_id, superhero.skin_colour_id, superhero.id FROM superhero WHERE superhero.alignment_id = 1 AND superhero.publisher_id = 1 AND superhero.race_id = 1 AND superhero.gender_id = 1 AND superhero.eye_colour_id = 1 AND superhero.hair_colour_id = 1 AND superhero.skin_colour_id = 1 AND superhero.id = 1 AND superhero.height_cm = 1 AND superhero.weight_kg = 1 AND superhero.alignment_id = 1 AND superhero.publisher_id = 1 AND superhero.race_id = 1 AND superhero.gender_id = 1 AND superhero.eye_colour_id = 1 AND superhero.hair_colour_id = 1 AND superhero.skin_colour_id = 1 AND superhero.id = 1 AND superhero.height_cm = 1 AND superhero.weight_kg = 1 AND superhero.alignment_id = 1 
SELECT superhero.superhero_name, superhero.full_name, superhero.height_cm, superhero.weight_kg, superhero.alignment_id, superhero.publisher_id, superhero.race_id, superhero.gender_id, superhero.eye_colour_id, superhero.hair_colour_id, superhero.skin_colour_id, superhero.id FROM superhero WHERE superhero.alignment_id = 1 AND superhero.publisher_id = 1 AND superhero.race_id = 1 AND superhero.gender_id = 1 AND superhero.eye_colour_id = 1 AND superhero.hair_colour_id = 1 AND superhero.skin_colour_id = 1 AND superhero.id = 1 AND superhero.height_cm = 1 AND superhero.weight_kg = 1 AND superhero.alignment_id = 1 AND superhero.publisher_id = 1 AND superhero.race_id = 1 AND superhero.gender_id = 1 AND superhero.eye_colour_id = 1 AND superhero.hair_colour_id = 1 AND superhero.skin_colour_id = 1 AND superhero.id = 1 AND superhero.height_cm = 1 AND superhero.weight_kg = 1 AND superhero.alignment_id = 1 ","SELECT superhero.superhero_name, superhero.full_name, superhero.height_cm, superhero.weight_kg, superhero.alignment_id, superhero.publisher_id, superhero.race_id, superhero.gender_id, superhero.eye_colour_id, superhero.hair_colour_id, superhero.skin_colour_id, superhero.attribute_id, superhero.attribute_value, superhero.power_id, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power_name, superhero.power",0.0
114,615,"Among the users who obtained the ""Organizer"" badges, calculate the percentage of users who are teenagers.",codebase_community,moderate,"SELECT CAST(SUM(IIF(T2.Age BETWEEN 13 AND 18, 1, 0)) AS REAL) * 100 / COUNT(T1.Id) FROM badges AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.`Name` = 'Organizer'",7,"SELECT (SELECT COUNT(*) FROM users WHERE age < 18 AND id IN (SELECT userid FROM badges WHERE name = 'Organizer')) / (SELECT COUNT(*) FROM users WHERE id IN (SELECT userid FROM badges WHERE name = 'Organizer')) * 100
SELECT (SELECT COUNT(*) FROM users WHERE age < 18 AND id IN (SELECT userid FROM badges WHERE name = 'Organizer')) * 100.0 / (SELECT COUNT(*) FROM users WHERE id IN (SELECT userid FROM badges WHERE name = 'Organizer')) AS percentage_of_teenagers
SELECT (SELECT COUNT(*) FROM users WHERE age < 18 AND id IN (SELECT userid FROM badges WHERE name = 'Organizer')) * 100.0 / (SELECT COUNT(*) FROM users WHERE id IN (SELECT userid FROM badges WHERE name = 'Organizer')) AS percentage
SELECT (SELECT COUNT(*) FROM users WHERE age < 18 AND id IN (SELECT userid FROM badges WHERE name = 'Organizer')) * 100.0 / (SELECT COUNT(*) FROM users WHERE id IN (SELECT userid FROM badges WHERE name = 'Organizer')) AS percentage
SELECT (SELECT COUNT(*) FROM users WHERE age < 18 AND id IN (SELECT userid FROM badges WHERE name = 'Organizer')) * 100.0 / (SELECT COUNT(*) FROM users WHERE id IN (SELECT userid FROM badges WHERE name = 'Organizer')) AS percentage
SELECT (SELECT COUNT(*) FROM users WHERE age < 18 AND id IN (SELECT userid FROM badges WHERE name = 'Organizer')) * 100.0 / (SELECT COUNT(*) FROM users WHERE id IN (SELECT userid FROM badges WHERE name = 'Organizer')) AS percentage
SELECT (SELECT COUNT(*) FROM users WHERE age < 18 AND id IN (SELECT userid FROM badges WHERE name = 'Organizer')) * 100.0 / (SELECT COUNT(*) FROM users WHERE id IN (SELECT userid FROM badges WHERE name = 'Organizer')) AS percentage",SELECT (SELECT COUNT(*) FROM users WHERE age < 18 AND id IN (SELECT userid FROM badges WHERE name = 'Organizer')) * 100.0 / (SELECT COUNT(*) FROM users WHERE id IN (SELECT userid FROM badges WHERE name = 'Organizer')) AS percentage,0.0
115,575,What is the badge name that user 'SilentGhost' obtained?,codebase_community,simple,SELECT T2.Name FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.DisplayName = 'SilentGhost',7,"SELECT name FROM badges WHERE userid = (SELECT id FROM users WHERE displayname = 'SilentGhost')
SELECT name FROM badges WHERE userid = (SELECT id FROM users WHERE displayname = 'SilentGhost')
SELECT name FROM badges WHERE userid = (SELECT id FROM users WHERE displayname = 'SilentGhost')
SELECT name FROM badges WHERE userid = (SELECT id FROM users WHERE displayname = 'SilentGhost')
SELECT name FROM badges WHERE userid = (SELECT id FROM users WHERE displayname = 'SilentGhost')
SELECT name FROM badges WHERE userid = (SELECT id FROM users WHERE displayname = 'SilentGhost')
SELECT name FROM badges WHERE userid = (SELECT id FROM users WHERE displayname = 'SilentGhost')",SELECT name FROM badges WHERE userid = (SELECT id FROM users WHERE displayname = 'SilentGhost'),1.0
116,523,What is the annual average number of sets that were released between 1/1/2012 to 12/31/2015? Indicate the common langugage of the card.,card_games,challenging,"SELECT (CAST(SUM(T1.id) AS REAL) / COUNT(T1.id)) / 4, T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.id WHERE T1.releaseDate BETWEEN '2012-01-01' AND '2015-12-31' GROUP BY T1.releaseDate ORDER BY COUNT(T2.language) DESC LIMIT 1",7,"SELECT AVG(sets.totalsetsize) FROM sets WHERE sets.releasedate BETWEEN '2012-01-01' AND '2015-12-31'
SELECT AVG(sets.totalsetsize) FROM sets WHERE sets.releasedate BETWEEN '2012-01-01' AND '2015-12-31'
SELECT AVG(sets.totalsetsize) FROM sets WHERE sets.releasedate BETWEEN '2012-01-01' AND '2015-12-31'
SELECT AVG(num_sets) FROM (     SELECT COUNT(*) AS num_sets     FROM cards     WHERE releasedate BETWEEN '2012-01-01' AND '2015-12-31'     GROUP BY name ) WHERE language = 'English'
SELECT AVG(sets.totalsetsize) FROM sets WHERE sets.releasedate BETWEEN '2012-01-01' AND '2015-12-31'
SELECT AVG(sets.totalsetsize) FROM sets WHERE sets.releasedate BETWEEN '2012-01-01' AND '2015-12-31'
SELECT AVG(sets.totalsetsize) FROM sets WHERE sets.releasedate BETWEEN '2012-01-01' AND '2015-12-31'",SELECT AVG(sets.totalsetsize) FROM sets WHERE sets.releasedate BETWEEN '2012-01-01' AND '2015-12-31',0.0
117,319,How many elements are contained in bond_id TR001_3_4?,toxicology,challenging,SELECT COUNT(DISTINCT T1.element) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_3_4',7,"SELECT COUNT(*) FROM connected WHERE bond_id = 'TR001_3_4'
SELECT COUNT(*) FROM connected WHERE bond_id = 'TR001_3_4'
SELECT COUNT(*) FROM connected WHERE bond_id = 'TR001_3_4'
SELECT COUNT(*) FROM connected WHERE bond_id = 'TR001_3_4'
SELECT COUNT(*) FROM connected WHERE bond_id = 'TR001_3_4'
SELECT COUNT(*) FROM connected WHERE bond_id = 'TR001_3_4'
SELECT COUNT(*) FROM connected WHERE bond_id = 'TR001_3_4'",SELECT COUNT(*) FROM connected WHERE bond_id = 'TR001_3_4',0.0
118,1094,How much higher in percentage is Ariel Borysiuk's overall rating than that of Paulin Puel?,european_football_2,challenging,SELECT (SUM(CASE WHEN t1.player_name = 'Ariel Borysiuk' THEN t2.overall_rating ELSE 0 END) * 1.0 - SUM(CASE WHEN t1.player_name = 'Paulin Puel' THEN t2.overall_rating ELSE 0 END)) * 100 / SUM(CASE WHEN t1.player_name = 'Paulin Puel' THEN t2.overall_rating ELSE 0 END) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id,7,"SELECT player_attributes.overall_rating, player_attributes.potential, player_attributes.preferred_foot, player_attributes.attacking_work_rate, player_attributes.defensive_work_rate, player_attributes.crossing, player_attributes.finishing, player_attributes.heading_accuracy, player_attributes.short_passing, player_attributes.volleys, player_attributes.dribbling, player_attributes.curve, player_attributes.free_kick_accuracy, player_attributes.long_passing, player_attributes.ball_control, player_attributes.acceleration, player_attributes.sprint_speed, player_attributes.agility, player_attributes.reactions, player_attributes.balance, player_attributes.shot_power, player_attributes.jumping, player_attributes.stamina, player_attributes.strength, player_attributes.long_shots, player_attributes.aggression, player_attributes.interceptions, player_attributes.positioning, player_attributes.vision, player_attributes.penalties, player_attributes.marking, player_attributes.standing_tackle, player_attributes.sliding_tackle, player_attributes.gk_diving, player_attributes.gk_handling, player_attributes.gk_kicking, player_attributes.gk_positioning, player_attributes.gk_reflexes, player.player_name, player.player_fifa_api
SELECT player_attributes.overall_rating, player_attributes.potential, player_attributes.preferred_foot, player_attributes.attacking_work_rate, player_attributes.defensive_work_rate, player_attributes.crossing, player_attributes.finishing, player_attributes.heading_accuracy, player_attributes.short_passing, player_attributes.volleys, player_attributes.dribbling, player_attributes.curve, player_attributes.free_kick_accuracy, player_attributes.long_passing, player_attributes.ball_control, player_attributes.acceleration, player_attributes.sprint_speed, player_attributes.agility, player_attributes.reactions, player_attributes.balance, player_attributes.shot_power, player_attributes.jumping, player_attributes.stamina, player_attributes.strength, player_attributes.long_shots, player_attributes.aggression, player_attributes.interceptions, player_attributes.positioning, player_attributes.vision, player_attributes.penalties, player_attributes.marking, player_attributes.standing_tackle, player_attributes.sliding_tackle, player_attributes.gk_diving, player_attributes.gk_handling, player_attributes.gk_kicking, player_attributes.gk_positioning, player_attributes.gk_reflexes FROM player_attributes WHERE player_attributes.player_api_id
SELECT player_attributes.overall_rating, player_attributes.potential, player_attributes.preferred_foot, player_attributes.attacking_work_rate, player_attributes.defensive_work_rate, player_attributes.crossing, player_attributes.finishing, player_attributes.heading_accuracy, player_attributes.short_passing, player_attributes.volleys, player_attributes.dribbling, player_attributes.curve, player_attributes.free_kick_accuracy, player_attributes.long_passing, player_attributes.ball_control, player_attributes.acceleration, player_attributes.sprint_speed, player_attributes.agility, player_attributes.reactions, player_attributes.balance, player_attributes.shot_power, player_attributes.jumping, player_attributes.stamina, player_attributes.strength, player_attributes.long_shots, player_attributes.aggression, player_attributes.interceptions, player_attributes.positioning, player_attributes.vision, player_attributes.penalties, player_attributes.marking, player_attributes.standing_tackle, player_attributes.sliding_tackle, player_attributes.gk_diving, player_attributes.gk_handling, player_attributes.gk_kicking, player_attributes.gk_positioning, player_attributes.gk_reflexes FROM player_attributes WHERE player_attributes.player_fifa_api
SELECT player_attributes.overall_rating, player_attributes.potential, player_attributes.preferred_foot, player_attributes.attacking_work_rate, player_attributes.defensive_work_rate, player_attributes.crossing, player_attributes.finishing, player_attributes.heading_accuracy, player_attributes.short_passing, player_attributes.volleys, player_attributes.dribbling, player_attributes.curve, player_attributes.free_kick_accuracy, player_attributes.long_passing, player_attributes.ball_control, player_attributes.acceleration, player_attributes.sprint_speed, player_attributes.agility, player_attributes.reactions, player_attributes.balance, player_attributes.shot_power, player_attributes.jumping, player_attributes.stamina, player_attributes.strength, player_attributes.long_shots, player_attributes.aggression, player_attributes.interceptions, player_attributes.positioning, player_attributes.vision, player_attributes.penalties, player_attributes.marking, player_attributes.standing_tackle, player_attributes.sliding_tackle, player_attributes.gk_diving, player_attributes.gk_handling, player_attributes.gk_kicking, player_attributes.gk_positioning, player_attributes.gk_reflexes, player.player_name, player.player_fifa_api
SELECT player_attributes.overall_rating, player_attributes.potential, player_attributes.preferred_foot, player_attributes.attacking_work_rate, player_attributes.defensive_work_rate, player_attributes.crossing, player_attributes.finishing, player_attributes.heading_accuracy, player_attributes.short_passing, player_attributes.volleys, player_attributes.dribbling, player_attributes.curve, player_attributes.free_kick_accuracy, player_attributes.long_passing, player_attributes.ball_control, player_attributes.acceleration, player_attributes.sprint_speed, player_attributes.agility, player_attributes.reactions, player_attributes.balance, player_attributes.shot_power, player_attributes.jumping, player_attributes.stamina, player_attributes.strength, player_attributes.long_shots, player_attributes.aggression, player_attributes.interceptions, player_attributes.positioning, player_attributes.vision, player_attributes.penalties, player_attributes.marking, player_attributes.standing_tackle, player_attributes.sliding_tackle, player_attributes.gk_diving, player_attributes.gk_handling, player_attributes.gk_kicking, player_attributes.gk_positioning, player_attributes.gk_reflexes FROM player_attributes WHERE player_attributes.player_fifa_api
SELECT player_attributes.overall_rating, player_attributes.potential, player_attributes.preferred_foot, player_attributes.attacking_work_rate, player_attributes.defensive_work_rate, player_attributes.crossing, player_attributes.finishing, player_attributes.heading_accuracy, player_attributes.short_passing, player_attributes.volleys, player_attributes.dribbling, player_attributes.curve, player_attributes.free_kick_accuracy, player_attributes.long_passing, player_attributes.ball_control, player_attributes.acceleration, player_attributes.sprint_speed, player_attributes.agility, player_attributes.reactions, player_attributes.balance, player_attributes.shot_power, player_attributes.jumping, player_attributes.stamina, player_attributes.strength, player_attributes.long_shots, player_attributes.aggression, player_attributes.interceptions, player_attributes.positioning, player_attributes.vision, player_attributes.penalties, player_attributes.marking, player_attributes.standing_tackle, player_attributes.sliding_tackle, player_attributes.gk_diving, player_attributes.gk_handling, player_attributes.gk_kicking, player_attributes.gk_positioning, player_attributes.gk_reflexes FROM player_attributes WHERE player_attributes.player_fifa_api
SELECT player_attributes.overall_rating - player_attributes.potential AS rating_difference FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name = 'Ariel Borysiuk' ORDER BY rating_difference DESC LIMIT 1","SELECT player_attributes.overall_rating, player_attributes.potential, player_attributes.preferred_foot, player_attributes.attacking_work_rate, player_attributes.defensive_work_rate, player_attributes.crossing, player_attributes.finishing, player_attributes.heading_accuracy, player_attributes.short_passing, player_attributes.volleys, player_attributes.dribbling, player_attributes.curve, player_attributes.free_kick_accuracy, player_attributes.long_passing, player_attributes.ball_control, player_attributes.acceleration, player_attributes.sprint_speed, player_attributes.agility, player_attributes.reactions, player_attributes.balance, player_attributes.shot_power, player_attributes.jumping, player_attributes.stamina, player_attributes.strength, player_attributes.long_shots, player_attributes.aggression, player_attributes.interceptions, player_attributes.positioning, player_attributes.vision, player_attributes.penalties, player_attributes.marking, player_attributes.standing_tackle, player_attributes.sliding_tackle, player_attributes.gk_diving, player_attributes.gk_handling, player_attributes.gk_kicking, player_attributes.gk_positioning, player_attributes.gk_reflexes FROM player_attributes WHERE player_attributes.player_fifa_api",0.0
119,212,Which element is the least numerous in non-carcinogenic molecules?,toxicology,challenging,"SELECT T.element FROM (SELECT T1.element, COUNT(DISTINCT T1.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '-' GROUP BY T1.element ORDER BY COUNT(DISTINCT T1.molecule_id) ASC LIMIT 1) t",7,"SELECT element.element_id, element.name, element.symbol, element.atomic_number, element.atomic_weight, element.period, element.group, element.electron_configuration, element.electron_affinity, element.electronegativity, element.ionization_energy, element.standard_state, element.bonding_type, element.melting_point, element.boiling_point, element.density, element.atomic_radius, element.covalent_radius, element.van_der_waals_radius, element.ionic_radius, element.electron_negativity, element.electron_affinity, element.oxidation_states, element.group_name, element.group_number, element.group_type, element.group_family, element.group_period, element.group_block, element.group_category, element.group_family_name, element.group_family_number, element.group_family_type, element.group_family_period, element.group_family_block, element.group_family_category, element.group_family_category_name, element.group_family_category_number, element.group_family_category_type, element.group_family_category_period, element.group_family_category_block, element.group_family_category_category, element.group_family_category_category_name,
SELECT element.element_id, element.name, element.symbol, element.atomic_number, element.atomic_weight, element.period, element.group, element.electron_configuration, element.electron_affinity, element.electronegativity, element.ionization_energy, element.standard_state, element.bonding_type, element.melting_point, element.boiling_point, element.density, element.atomic_radius, element.covalent_radius, element.van_der_waals_radius, element.ionic_radius, element.electron_negativity, element.oxidation_states, element.standard_state, element.bonding_type, element.melting_point, element.boiling_point, element.density, element.atomic_radius, element.covalent_radius, element.van_der_waals_radius, element.ionic_radius, element.electron_negativity, element.oxidation_states, element.standard_state, element.bonding_type, element.melting_point, element.boiling_point, element.density, element.atomic_radius, element.covalent_radius, element.van_der_waals_radius, element.ionic_radius, element.electron_negativity, element.oxidation_states, element.standard_state, element.bonding_type, element.melting_point, element.boiling_point, element.
SELECT element.element_id, element.label FROM element JOIN atom ON element.element_id = atom.element_id JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = 'non-carcinogenic' GROUP BY element.element_id ORDER BY COUNT(*) ASC LIMIT 1
SELECT element.element_id, element.name, element.symbol, element.atomic_number, element.atomic_weight, element.period, element.group, element.electron_configuration, element.electron_affinity, element.electronegativity, element.ionization_energy, element.standard_state, element.bonding_type, element.melting_point, element.boiling_point, element.density, element.atomic_radius, element.covalent_radius, element.van_der_waals_radius, element.ionic_radius, element.electron_negativity, element.oxidation_states, element.standard_state, element.bonding_type, element.melting_point, element.boiling_point, element.density, element.atomic_radius, element.covalent_radius, element.van_der_waals_radius, element.ionic_radius, element.electron_negativity, element.oxidation_states, element.standard_state, element.bonding_type, element.melting_point, element.boiling_point, element.density, element.atomic_radius, element.covalent_radius, element.van_der_waals_radius, element.ionic_radius, element.electron_negativity, element.oxidation_states, element.standard_state, element.bonding_type, element.melting_point, element.boiling_point, element.
SELECT element.element_id, element.molecule_id, element.element FROM element INNER JOIN molecule ON element.molecule_id = molecule.molecule_id WHERE molecule.label = 'non-carcinogenic' ORDER BY element.element_id ASC LIMIT 1
SELECT element.element_id, element.name, element.symbol, element.atomic_number, element.atomic_weight, element.period, element.group, element.electron_configuration, element.electron_affinity, element.electronegativity, element.ionization_energy, element.standard_state, element.bonding_type, element.melting_point, element.boiling_point, element.density, element.atomic_radius, element.van_der_waals_radius, element.covalent_radius, element.ionic_radius, element.oxidation_states, element.electron_configuration_semantic, element.electron_configuration_full, element.electron_configuration_short, element.electron_configuration_long, element.electron_configuration_full_long, element.electron_configuration_short_long, element.electron_configuration_full_short_long, element.electron_configuration_long_short_long, element.electron_configuration_full_short_long_long, element.electron_configuration_long_short_long_long, element.electron_configuration_full_short_long_long_long, element.electron_configuration_long_short_long_long_long, element.electron_configuration_full_short_long_long_long_long, element.electron_configuration_long_short_long_long_long_long, element.electron
SELECT element.element_id, element.name, element.symbol, element.atomic_number, element.atomic_weight, element.period, element.group, element.electron_configuration, element.electron_affinity, element.electronegativity, element.ionization_energy, element.standard_state, element.bonding_type, element.melting_point, element.boiling_point, element.density, element.atomic_radius, element.covalent_radius, element.van_der_waals_radius, element.ionic_radius, element.electron_negativity, element.oxidation_states, element.standard_state, element.bonding_type, element.melting_point, element.boiling_point, element.density, element.atomic_radius, element.covalent_radius, element.van_der_waals_radius, element.ionic_radius, element.electron_negativity, element.oxidation_states, element.standard_state, element.bonding_type, element.melting_point, element.boiling_point, element.density, element.atomic_radius, element.covalent_radius, element.van_der_waals_radius, element.ionic_radius, element.electron_negativity, element.oxidation_states, element.standard_state, element.bonding_type, element.melting_point, element.boiling_point, element.","SELECT element.element_id, element.name, element.symbol, element.atomic_number, element.atomic_weight, element.period, element.group, element.electron_configuration, element.electron_affinity, element.electronegativity, element.ionization_energy, element.standard_state, element.bonding_type, element.melting_point, element.boiling_point, element.density, element.atomic_radius, element.covalent_radius, element.van_der_waals_radius, element.ionic_radius, element.electron_negativity, element.oxidation_states, element.standard_state, element.bonding_type, element.melting_point, element.boiling_point, element.density, element.atomic_radius, element.covalent_radius, element.van_der_waals_radius, element.ionic_radius, element.electron_negativity, element.oxidation_states, element.standard_state, element.bonding_type, element.melting_point, element.boiling_point, element.density, element.atomic_radius, element.covalent_radius, element.van_der_waals_radius, element.ionic_radius, element.electron_negativity, element.oxidation_states, element.standard_state, element.bonding_type, element.melting_point, element.boiling_point, element.",0.0
120,513,"Among the sets whose expansion type is Commander, which set has the highest total number of cards including promotional and related supplemental products but excluding Alchemy modifications? Indicate the id of the set.",card_games,challenging,SELECT id FROM sets WHERE type = 'commander' ORDER BY totalSetSize DESC LIMIT 1,7,"SELECT setcode, COUNT(*) AS total_cards FROM cards WHERE setcode IN (     SELECT setcode     FROM sets     WHERE expansiontype = 'Commander' ) AND setcode NOT IN (     SELECT setcode     FROM sets     WHERE expansiontype = 'Alchemy' ) GROUP BY setcode ORDER BY total_cards DESC LIMIT 1
SELECT setcode, COUNT(*) AS total_cards FROM cards WHERE setcode IN (     SELECT setcode     FROM sets     WHERE expansiontype = 'Commander' ) AND setcode NOT IN (     SELECT setcode     FROM sets     WHERE expansiontype = 'Alchemy' ) GROUP BY setcode ORDER BY total_cards DESC LIMIT 1
SELECT setcode, COUNT(*) FROM cards WHERE setcode IN (     SELECT setcode     FROM sets     WHERE expansiontype = 'Commander' ) GROUP BY setcode ORDER BY COUNT(*) DESC LIMIT 1
SELECT setcode, COUNT(*) AS total_cards FROM cards WHERE setcode IN (     SELECT setcode     FROM sets     WHERE expansiontype = 'Commander' ) AND setcode NOT IN (     SELECT setcode     FROM sets     WHERE expansiontype = 'Alchemy' ) GROUP BY setcode ORDER BY total_cards DESC LIMIT 1
SELECT setcode, COUNT(*) FROM cards WHERE setcode IN (SELECT setcode FROM sets WHERE expansiontype = 'Commander') GROUP BY setcode ORDER BY COUNT(*) DESC LIMIT 1
SELECT setcode, COUNT(*) AS total_cards FROM cards WHERE setcode IN (     SELECT setcode     FROM sets     WHERE expansiontype = 'Commander' ) AND (     availability NOT LIKE '%Alchemy%'     AND availability NOT LIKE '%Alchemy%' ) GROUP BY setcode ORDER BY total_cards DESC LIMIT 1
SELECT setcode, COUNT(*) AS total_cards FROM cards WHERE setcode IN (     SELECT setcode     FROM sets     WHERE expansiontype = 'Commander' ) AND (     availability NOT LIKE '%Alchemy%'     OR availability IS NULL ) GROUP BY setcode ORDER BY total_cards DESC LIMIT 1","SELECT setcode, COUNT(*) AS total_cards FROM cards WHERE setcode IN (     SELECT setcode     FROM sets     WHERE expansiontype = 'Commander' ) AND setcode NOT IN (     SELECT setcode     FROM sets     WHERE expansiontype = 'Alchemy' ) GROUP BY setcode ORDER BY total_cards DESC LIMIT 1",0.0
121,598,What is the percentage difference of student badges given during 2010 and 2011?,codebase_community,challenging,"SELECT CAST(SUM(IIF(STRFTIME('%Y', Date) = '2010', 1, 0)) AS REAL) * 100 / COUNT(Id) - CAST(SUM(IIF(STRFTIME('%Y', Date) = '2011', 1, 0)) AS REAL) * 100 / COUNT(Id) FROM badges WHERE Name = 'Student'",7,"SELECT (100.0 * (SELECT COUNT(*) FROM badges WHERE strftime('%Y', date) = '2011') - (SELECT COUNT(*) FROM badges WHERE strftime('%Y', date) = '2010')) / (SELECT COUNT(*) FROM badges WHERE strftime('%Y', date) = '2010') AS percentage_difference
SELECT (2011_badges - 2010_badges) / 2010_badges * 100 AS percentage_difference FROM (     SELECT COUNT(*) AS 2010_badges     FROM badges     WHERE strftime('%Y', date) = '2010' ) AS t1, (     SELECT COUNT(*) AS 2011_badges     FROM badges     WHERE strftime('%Y', date) = '2011' ) AS t2
SELECT (100 * (SUM(CASE WHEN strftime('%Y', date) = '2011' THEN 1 ELSE 0 END) - SUM(CASE WHEN strftime('%Y', date) = '2010' THEN 1 ELSE 0 END)) / SUM(CASE WHEN strftime('%Y', date) = '2010' THEN 1 ELSE 0 END)) AS percentage_difference FROM badges WHERE strftime('%Y', date) IN ('2010', '2011')
SELECT (100.0 * (SELECT COUNT(*) FROM badges WHERE strftime('%Y', date) = '2011') - (SELECT COUNT(*) FROM badges WHERE strftime('%Y', date) = '2010')) / (SELECT COUNT(*) FROM badges WHERE strftime('%Y', date) = '2010') AS percentage_difference
SELECT (100.0 * (SELECT COUNT(*) FROM badges WHERE strftime('%Y', date) = '2011') - (SELECT COUNT(*) FROM badges WHERE strftime('%Y', date) = '2010')) / (SELECT COUNT(*) FROM badges WHERE strftime('%Y', date) = '2010') AS percentage_difference
SELECT (100.0 * (SELECT COUNT(*) FROM badges WHERE strftime('%Y', date) = '2011') - (SELECT COUNT(*) FROM badges WHERE strftime('%Y', date) = '2010')) / (SELECT COUNT(*) FROM badges WHERE strftime('%Y', date) = '2010') AS percentage_difference
SELECT (100.0 * (SELECT COUNT(*) FROM badges WHERE strftime('%Y', date) = '2011') - (SELECT COUNT(*) FROM badges WHERE strftime('%Y', date) = '2010')) / (SELECT COUNT(*) FROM badges WHERE strftime('%Y', date) = '2010') AS percentage_difference","SELECT (100.0 * (SELECT COUNT(*) FROM badges WHERE strftime('%Y', date) = '2011') - (SELECT COUNT(*) FROM badges WHERE strftime('%Y', date) = '2010')) / (SELECT COUNT(*) FROM badges WHERE strftime('%Y', date) = '2010') AS percentage_difference",0.0
122,330,Calculate the percentage of carcinogenic molecules with triple bonded Hidrogen atoms.,toxicology,challenging,SELECT CAST(SUM(CASE WHEN T1.label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T1.molecule_id = T3.molecule_id WHERE T3.bond_type = '#' AND T2.element = 'h',7,"SELECT (SELECT COUNT(*) FROM connected c1, connected c2, connected c3 WHERE c1.atom_id = c2.atom_id2 AND c2.atom_id = c3.atom_id2 AND c3.atom_id = c1.atom_id2 AND c1.bond_id = c2.bond_id AND c2.bond_id = c3.bond_id AND c3.bond_id = c1.bond_id AND c1.bond_id = 1 AND c2.bond_id = 1 AND c3.bond_id = 1) / (SELECT COUNT(*) FROM connected c1, connected c2, connected c3 WHERE c1.atom_id = c2.atom_id2 AND c2.atom_id = c3.atom_id2 AND c3.atom_id = c1.atom_id2 AND c1.bond_id = c2.bond_id AND c2.bond_id = c3.bond_id AND c3.bond_id = c1.bond_id) * 100
SELECT (SELECT COUNT(*) FROM atom WHERE atom.molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'carcinogenic') AND atom.atom_id IN (SELECT atom_id FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE bond_type = 'triple'))) / (SELECT COUNT(*) FROM atom WHERE atom.molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'carcinogenic')) * 100
SELECT (SELECT COUNT(*) FROM atom WHERE element = 'H' AND atom_id IN (SELECT atom_id FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE bond_type = 'triple'))) / (SELECT COUNT(*) FROM atom WHERE element = 'H') * 100
SELECT (SELECT COUNT(*) FROM atom WHERE element = 'H' AND atom_id IN (SELECT atom_id FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE bond_type = 'triple'))) / (SELECT COUNT(*) FROM atom WHERE element = 'H') * 100
SELECT (     SELECT COUNT(*)     FROM atom     WHERE element = 'H'     AND atom_id IN (         SELECT atom_id         FROM connected         WHERE bond_id IN (             SELECT bond_id             FROM bond             WHERE bond_type = 'triple'         )     ) ) * 100.0 / (     SELECT COUNT(*)     FROM atom     WHERE element = 'H' ) AS percentage
SELECT (     SELECT COUNT(*)     FROM atom     WHERE element = 'H'     AND atom_id IN (         SELECT atom_id         FROM connected         WHERE bond_id IN (             SELECT bond_id             FROM bond             WHERE bond_type = 'triple'         )     ) ) * 100.0 / (     SELECT COUNT(*)     FROM atom     WHERE element = 'H' ) AS percentage
SELECT (SELECT COUNT(*) FROM atom WHERE element = 'H' AND atom_id IN (SELECT atom_id FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE bond_type = 'triple'))) / (SELECT COUNT(*) FROM atom WHERE element = 'H') * 100",SELECT (SELECT COUNT(*) FROM atom WHERE element = 'H' AND atom_id IN (SELECT atom_id FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE bond_type = 'triple'))) / (SELECT COUNT(*) FROM atom WHERE element = 'H') * 100,0.0
123,716,"Among the comments with scores between 5 to 10, what is the percentage of the users with 0 up votes?",codebase_community,moderate,"SELECT CAST(SUM(IIF(T1.UpVotes = 0, 1, 0)) AS REAL) * 100/ COUNT(T1.Id) AS per FROM users AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.UserId WHERE T2.Score BETWEEN 5 AND 10",7,"SELECT (COUNT(CASE WHEN up_votes = 0 THEN 1 END) * 100.0 / COUNT(*)) AS percentage_with_0_up_votes FROM users WHERE score BETWEEN 5 AND 10
SELECT (COUNT(CASE WHEN up_votes = 0 THEN 1 END) * 100.0 / COUNT(*)) AS percentage FROM (     SELECT u.up_votes     FROM comments c     JOIN users u ON c.user_id = u.id     WHERE c.score BETWEEN 5 AND 10 ) AS subquery
SELECT (COUNT(CASE WHEN up_votes = 0 THEN 1 END) * 100.0 / COUNT(*)) AS percentage_with_0_up_votes FROM (     SELECT u.id, u.up_votes     FROM users u     JOIN comments c ON u.id = c.user_id     WHERE c.score BETWEEN 5 AND 10 ) WHERE up_votes = 0
SELECT (COUNT(DISTINCT userid) * 100.0 / (SELECT COUNT(DISTINCT userid) FROM users WHERE upvotes = 0)) FROM users WHERE upvotes BETWEEN 5 AND 10
SELECT (COUNT(DISTINCT userid) * 100.0 / (SELECT COUNT(DISTINCT userid) FROM users WHERE upvotes = 0)) FROM comments WHERE score BETWEEN 5 AND 10
SELECT (COUNT(DISTINCT userid) * 100.0 / (SELECT COUNT(DISTINCT userid) FROM users WHERE upvotes = 0)) FROM users WHERE upvotes BETWEEN 5 AND 10
SELECT (COUNT(DISTINCT userid) * 100.0 / (SELECT COUNT(DISTINCT userid) FROM users WHERE upvotes = 0)) FROM users WHERE upvotes BETWEEN 5 AND 10",SELECT (COUNT(DISTINCT userid) * 100.0 / (SELECT COUNT(DISTINCT userid) FROM users WHERE upvotes = 0)) FROM users WHERE upvotes BETWEEN 5 AND 10,0.0
124,247,List all the elements of atoms that can not bond with any other atoms.,toxicology,challenging,SELECT DISTINCT T.element FROM atom AS T WHERE T.element NOT IN ( SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id ),7,"SELECT atom.atom_id, atom.molecule_id, atom.element FROM atom LEFT JOIN connected ON atom.atom_id = connected.atom_id WHERE connected.atom_id IS NULL
SELECT atom.atom_id, atom.molecule_id, atom.element FROM atom WHERE atom.atom_id NOT IN (     SELECT connected.atom_id     FROM connected     WHERE connected.atom_id2 IS NOT NULL ) AND atom.atom_id NOT IN (     SELECT connected.atom_id2     FROM connected     WHERE connected.atom_id IS NOT NULL )
SELECT atom.atom_id, atom.molecule_id, atom.element FROM atom WHERE atom.atom_id NOT IN (     SELECT connected.atom_id     FROM connected     WHERE connected.atom_id2 IS NOT NULL ) AND atom.atom_id NOT IN (     SELECT connected.atom_id2     FROM connected     WHERE connected.atom_id IS NOT NULL )
SELECT atom.atom_id, atom.molecule_id, atom.element FROM atom WHERE atom.atom_id NOT IN (     SELECT connected.atom_id     FROM connected     WHERE connected.atom_id2 IS NOT NULL ) AND atom.atom_id NOT IN (     SELECT connected.atom_id2     FROM connected     WHERE connected.atom_id IS NOT NULL )
SELECT atom.atom_id, atom.molecule_id, atom.element FROM atom WHERE atom.atom_id NOT IN (     SELECT connected.atom_id     FROM connected     WHERE connected.atom_id2 IS NOT NULL ) AND atom.atom_id NOT IN (     SELECT connected.atom_id2     FROM connected     WHERE connected.atom_id IS NOT NULL )
SELECT atom.atom_id, atom.molecule_id, atom.element FROM atom WHERE atom.atom_id NOT IN (     SELECT connected.atom_id     FROM connected     WHERE connected.atom_id2 IS NOT NULL ) AND atom.atom_id NOT IN (     SELECT connected.atom_id2     FROM connected     WHERE connected.atom_id IS NOT NULL )
SELECT atom.atom_id, atom.molecule_id, atom.element FROM atom WHERE atom.atom_id NOT IN (     SELECT connected.atom_id     FROM connected     WHERE connected.atom_id2 IS NOT NULL )","SELECT atom.atom_id, atom.molecule_id, atom.element FROM atom WHERE atom.atom_id NOT IN (     SELECT connected.atom_id     FROM connected     WHERE connected.atom_id2 IS NOT NULL ) AND atom.atom_id NOT IN (     SELECT connected.atom_id2     FROM connected     WHERE connected.atom_id IS NOT NULL )",0.0
125,116,"For the client whose loan was approved first in 1993/7/5, what is the increase rate of his/her account balance from 1993/3/22 to 1998/12/27?",financial,challenging,"SELECT CAST((SUM(IIF(T3.date = '1998-12-27', T3.balance, 0)) - SUM(IIF(T3.date = '1993-03-22', T3.balance, 0))) AS REAL) * 100 / SUM(IIF(T3.date = '1993-03-22', T3.balance, 0)) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN trans AS T3 ON T3.account_id = T2.account_id WHERE T1.date = '1993-07-05'",7,"SELECT (SELECT balance FROM trans WHERE account_id = (SELECT account_id FROM loan WHERE date = (SELECT MIN(date) FROM loan WHERE date LIKE '1993%')) AND date = '1993-03-22') - (SELECT balance FROM trans WHERE account_id = (SELECT account_id FROM loan WHERE date = (SELECT MIN(date) FROM loan WHERE date LIKE '1993%')) AND date = '1998-12-27') FROM trans
SELECT (SELECT balance FROM trans WHERE account_id = (SELECT account_id FROM loan WHERE date = (SELECT MIN(date) FROM loan WHERE date LIKE '1993%') LIMIT 1) AND date = '1993-03-22') - (SELECT balance FROM trans WHERE account_id = (SELECT account_id FROM loan WHERE date = (SELECT MIN(date) FROM loan WHERE date LIKE '1993%') LIMIT 1) AND date = '1998-12-27') FROM trans LIMIT 1
SELECT (SELECT balance FROM trans WHERE account_id = (SELECT account_id FROM loan WHERE date = (SELECT MIN(date) FROM loan WHERE date LIKE '1993%')) AND date = '1993/3/22') - (SELECT balance FROM trans WHERE account_id = (SELECT account_id FROM loan WHERE date = (SELECT MIN(date) FROM loan WHERE date LIKE '1993%')) AND date = '1998/12/27') FROM trans
SELECT (SELECT balance FROM trans WHERE account_id = (SELECT account_id FROM loan WHERE date = (SELECT MIN(date) FROM loan WHERE date LIKE '1993-07-05%')) AND date = '1993-03-22') - (SELECT balance FROM trans WHERE account_id = (SELECT account_id FROM loan WHERE date = (SELECT MIN(date) FROM loan WHERE date LIKE '1993-07-05%')) AND date = '1998-12-27') FROM trans LIMIT 1
SELECT (SELECT balance FROM trans WHERE account_id = (SELECT account_id FROM loan WHERE date = (SELECT MIN(date) FROM loan WHERE date LIKE '1993%')) AND date = '1993-03-22') - (SELECT balance FROM trans WHERE account_id = (SELECT account_id FROM loan WHERE date = (SELECT MIN(date) FROM loan WHERE date LIKE '1993%')) AND date = '1998-12-27') FROM trans
SELECT (SELECT balance FROM trans WHERE account_id = (SELECT account_id FROM loan WHERE date = (SELECT MIN(date) FROM loan WHERE date LIKE '1993%')) AND date = '1993-03-22') - (SELECT balance FROM trans WHERE account_id = (SELECT account_id FROM loan WHERE date = (SELECT MIN(date) FROM loan WHERE date LIKE '1993%')) AND date = '1998-12-27') FROM trans LIMIT 1
SELECT (SELECT balance FROM trans WHERE account_id = (SELECT account_id FROM loan WHERE date = (SELECT MIN(date) FROM loan WHERE date LIKE '1993%')) AND date = '1993-03-22') - (SELECT balance FROM trans WHERE account_id = (SELECT account_id FROM loan WHERE date = (SELECT MIN(date) FROM loan WHERE date LIKE '1993%')) AND date = '1998-12-27') FROM trans",SELECT (SELECT balance FROM trans WHERE account_id = (SELECT account_id FROM loan WHERE date = (SELECT MIN(date) FROM loan WHERE date LIKE '1993%')) AND date = '1993-03-22') - (SELECT balance FROM trans WHERE account_id = (SELECT account_id FROM loan WHERE date = (SELECT MIN(date) FROM loan WHERE date LIKE '1993%')) AND date = '1998-12-27') FROM trans,0.0
126,253,List the elements of all the triple bonds.,toxicology,challenging,SELECT DISTINCT T3.element FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T1.bond_type = '#',7,"SELECT atom.atom_id, atom.molecule_id, atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'triple'
SELECT * FROM triple_bonds
SELECT * FROM triple_bonds
SELECT * FROM triple_bonds
SELECT atom.atom_id, atom.molecule_id, atom.element, bond.bond_id, bond.molecule_id, bond.bond_type, connected.atom_id, connected.atom_id2, connected.bond_id, molecule.molecule_id, molecule.label FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id JOIN connected ON atom.atom_id = connected.atom_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE bond.bond_type = 'triple'
SELECT atom.atom_id, atom.molecule_id, atom.element, bond.bond_id, bond.molecule_id, bond.bond_type, connected.atom_id, connected.atom_id2, connected.bond_id, molecule.molecule_id, molecule.label FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id JOIN connected ON atom.atom_id = connected.atom_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE bond.bond_type = 'triple'
SELECT atom.element, bond.bond_type FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'triple'",SELECT * FROM triple_bonds,0.0
127,1051,List all the football player with the highest potential score.,european_football_2,simple,SELECT DISTINCT(t1.player_name) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t2.potential = (SELECT MAX(potential) FROM Player_Attributes) ,7,"SELECT player_attributes.player_fifa_api_id, player_attributes.player_api_id, player_attributes.date, player_attributes.overall_rating, player_attributes.potential, player_attributes.preferred_foot, player_attributes.attacking_work_rate, player_attributes.defensive_work_rate, player_attributes.crossing, player_attributes.finishing, player_attributes.heading_accuracy, player_attributes.short_passing, player_attributes.volleys, player_attributes.dribbling, player_attributes.curve, player_attributes.free_kick_accuracy, player_attributes.long_passing, player_attributes.ball_control, player_attributes.acceleration, player_attributes.sprint_speed, player_attributes.agility, player_attributes.reactions, player_attributes.balance, player_attributes.shot_power, player_attributes.jumping, player_attributes.stamina, player_attributes.strength, player_attributes.long_shots, player_attributes.aggression, player_attributes.interceptions, player_attributes.positioning, player_attributes.vision, player_attributes.penalties, player_attributes.marking, player_attributes.standing_tackle, player_attributes.sliding_tackle, player_attributes.gk_diving, player_attributes.gk_handling, player_attributes.gk_kicking, player_
SELECT player_attributes.player_api_id, player_attributes.player_fifa_api_id, player_attributes.overall_rating, player_attributes.potential, player_attributes.preferred_foot, player_attributes.attacking_work_rate, player_attributes.defensive_work_rate, player_attributes.crossing, player_attributes.finishing, player_attributes.heading_accuracy, player_attributes.short_passing, player_attributes.volleys, player_attributes.dribbling, player_attributes.curve, player_attributes.free_kick_accuracy, player_attributes.long_passing, player_attributes.ball_control, player_attributes.acceleration, player_attributes.sprint_speed, player_attributes.agility, player_attributes.reactions, player_attributes.balance, player_attributes.shot_power, player_attributes.jumping, player_attributes.stamina, player_attributes.strength, player_attributes.long_shots, player_attributes.aggression, player_attributes.interceptions, player_attributes.positioning, player_attributes.vision, player_attributes.penalties, player_attributes.marking, player_attributes.standing_tackle, player_attributes.sliding_tackle, player_attributes.gk_diving, player_attributes.gk_handling, player_attributes.gk_kicking, player_attributes.gk_positioning,
SELECT player_attributes.player_api_id, player_attributes.player_fifa_api_id, player_attributes.overall_rating, player_attributes.potential, player_attributes.preferred_foot, player_attributes.attacking_work_rate, player_attributes.defensive_work_rate, player_attributes.crossing, player_attributes.finishing, player_attributes.heading_accuracy, player_attributes.short_passing, player_attributes.volleys, player_attributes.dribbling, player_attributes.curve, player_attributes.free_kick_accuracy, player_attributes.long_passing, player_attributes.ball_control, player_attributes.acceleration, player_attributes.sprint_speed, player_attributes.agility, player_attributes.reactions, player_attributes.balance, player_attributes.shot_power, player_attributes.jumping, player_attributes.stamina, player_attributes.strength, player_attributes.long_shots, player_attributes.aggression, player_attributes.interceptions, player_attributes.positioning, player_attributes.vision, player_attributes.penalties, player_attributes.marking, player_attributes.standing_tackle, player_attributes.sliding_tackle, player_attributes.gk_diving, player_attributes.gk_handling, player_attributes.gk_kicking, player_attributes.gk_positioning,
SELECT player_attributes.player_api_id, player_attributes.player_fifa_api_id, player_attributes.overall_rating, player_attributes.potential, player_attributes.preferred_foot, player_attributes.attacking_work_rate, player_attributes.defensive_work_rate, player_attributes.crossing, player_attributes.finishing, player_attributes.heading_accuracy, player_attributes.short_passing, player_attributes.volleys, player_attributes.dribbling, player_attributes.curve, player_attributes.free_kick_accuracy, player_attributes.long_passing, player_attributes.ball_control, player_attributes.acceleration, player_attributes.sprint_speed, player_attributes.agility, player_attributes.reactions, player_attributes.balance, player_attributes.shot_power, player_attributes.jumping, player_attributes.stamina, player_attributes.strength, player_attributes.long_shots, player_attributes.aggression, player_attributes.interceptions, player_attributes.positioning, player_attributes.vision, player_attributes.penalties, player_attributes.marking, player_attributes.standing_tackle, player_attributes.sliding_tackle, player_attributes.gk_diving, player_attributes.gk_handling, player_attributes.gk_kicking, player_attributes.gk_positioning,
SELECT player_attributes.player_api_id, player_attributes.player_fifa_api_id, player_attributes.overall_rating, player_attributes.potential, player_attributes.preferred_foot, player_attributes.attacking_work_rate, player_attributes.defensive_work_rate, player_attributes.crossing, player_attributes.finishing, player_attributes.heading_accuracy, player_attributes.short_passing, player_attributes.volleys, player_attributes.dribbling, player_attributes.curve, player_attributes.free_kick_accuracy, player_attributes.long_passing, player_attributes.ball_control, player_attributes.acceleration, player_attributes.sprint_speed, player_attributes.agility, player_attributes.reactions, player_attributes.balance, player_attributes.shot_power, player_attributes.jumping, player_attributes.stamina, player_attributes.strength, player_attributes.long_shots, player_attributes.aggression, player_attributes.interceptions, player_attributes.positioning, player_attributes.vision, player_attributes.penalties, player_attributes.marking, player_attributes.standing_tackle, player_attributes.sliding_tackle, player_attributes.gk_diving, player_attributes.gk_handling, player_attributes.gk_kicking, player_attributes.gk_positioning,
SELECT player_attributes.player_fifa_api_id, player_attributes.player_api_id, player_attributes.date, player_attributes.overall_rating, player_attributes.potential, player_attributes.preferred_foot, player_attributes.attacking_work_rate, player_attributes.defensive_work_rate, player_attributes.crossing, player_attributes.finishing, player_attributes.heading_accuracy, player_attributes.short_passing, player_attributes.volleys, player_attributes.dribbling, player_attributes.curve, player_attributes.free_kick_accuracy, player_attributes.long_passing, player_attributes.ball_control, player_attributes.acceleration, player_attributes.sprint_speed, player_attributes.agility, player_attributes.reactions, player_attributes.balance, player_attributes.shot_power, player_attributes.jumping, player_attributes.stamina, player_attributes.strength, player_attributes.long_shots, player_attributes.aggression, player_attributes.interceptions, player_attributes.positioning, player_attributes.vision, player_attributes.penalties, player_attributes.marking, player_attributes.standing_tackle, player_attributes.sliding_tackle, player_attributes.gk_diving, player_attributes.gk_handling, player_attributes.gk_kicking, player_
SELECT player_attributes.player_fifa_api_id, player_attributes.player_api_id, player_attributes.date, player_attributes.overall_rating, player_attributes.potential, player_attributes.preferred_foot, player_attributes.attacking_work_rate, player_attributes.defensive_work_rate, player_attributes.crossing, player_attributes.finishing, player_attributes.heading_accuracy, player_attributes.short_passing, player_attributes.volleys, player_attributes.dribbling, player_attributes.curve, player_attributes.free_kick_accuracy, player_attributes.long_passing, player_attributes.ball_control, player_attributes.acceleration, player_attributes.sprint_speed, player_attributes.agility, player_attributes.reactions, player_attributes.balance, player_attributes.shot_power, player_attributes.jumping, player_attributes.stamina, player_attributes.strength, player_attributes.long_shots, player_attributes.aggression, player_attributes.interceptions, player_attributes.positioning, player_attributes.vision, player_attributes.penalties, player_attributes.marking, player_attributes.standing_tackle, player_attributes.sliding_tackle, player_attributes.gk_diving, player_attributes.gk_handling, player_attributes.gk_kicking, player_","SELECT player_attributes.player_api_id, player_attributes.player_fifa_api_id, player_attributes.overall_rating, player_attributes.potential, player_attributes.preferred_foot, player_attributes.attacking_work_rate, player_attributes.defensive_work_rate, player_attributes.crossing, player_attributes.finishing, player_attributes.heading_accuracy, player_attributes.short_passing, player_attributes.volleys, player_attributes.dribbling, player_attributes.curve, player_attributes.free_kick_accuracy, player_attributes.long_passing, player_attributes.ball_control, player_attributes.acceleration, player_attributes.sprint_speed, player_attributes.agility, player_attributes.reactions, player_attributes.balance, player_attributes.shot_power, player_attributes.jumping, player_attributes.stamina, player_attributes.strength, player_attributes.long_shots, player_attributes.aggression, player_attributes.interceptions, player_attributes.positioning, player_attributes.vision, player_attributes.penalties, player_attributes.marking, player_attributes.standing_tackle, player_attributes.sliding_tackle, player_attributes.gk_diving, player_attributes.gk_handling, player_attributes.gk_kicking, player_attributes.gk_positioning,",0.0
128,1241,"For patients with abnormal platelet level, state the number of patients with lower than normal range. How is it compare to the number of patients with higher than normal range?",thrombosis_prediction,challenging,SELECT SUM(CASE WHEN T2.PLT <= 100 THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.PLT >= 400 THEN 1 ELSE 0 END) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID,7,"SELECT COUNT(*) FROM laboratory WHERE plt < 150
SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM laboratory WHERE plt < 150000) AND id IN (SELECT id FROM laboratory WHERE plt > 450000)
SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM laboratory WHERE plt < 150) AND id IN (SELECT id FROM laboratory WHERE plt > 450)
SELECT COUNT(*) FROM laboratory WHERE plt < 150
SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM laboratory WHERE plt < 150) AND id IN (SELECT id FROM laboratory WHERE plt > 450)
SELECT COUNT(*) FROM laboratory WHERE plt < 150
SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM laboratory WHERE plt < 150000) AND id IN (SELECT id FROM laboratory WHERE plt > 450000)",SELECT COUNT(*) FROM laboratory WHERE plt < 150,0.0
129,256,Calculate the total atoms consisting of the element carbon and hydrogen.,toxicology,simple,SELECT COUNT(T.atom_id) FROM atom AS T WHERE T.element = 'c' OR T.element = 'h',7,"SELECT COUNT(*) FROM atom WHERE element IN ('C', 'H')
SELECT SUM(CASE WHEN element = 'C' THEN 1 ELSE 0 END) + SUM(CASE WHEN element = 'H' THEN 1 ELSE 0 END) AS total_atoms FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule)
SELECT SUM(CASE WHEN element = 'C' THEN 1 ELSE 0 END) + SUM(CASE WHEN element = 'H' THEN 1 ELSE 0 END) AS total_atoms FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule)
SELECT SUM(CASE WHEN element = 'C' THEN 1 ELSE 0 END) + SUM(CASE WHEN element = 'H' THEN 1 ELSE 0 END) FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'molecule_name')
SELECT SUM(CASE WHEN element = 'C' THEN 1 ELSE 0 END) + SUM(CASE WHEN element = 'H' THEN 1 ELSE 0 END) FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'molecule_label')
SELECT SUM(CASE WHEN element = 'C' THEN 1 ELSE 0 END) + SUM(CASE WHEN element = 'H' THEN 1 ELSE 0 END) FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'molecule_name')
SELECT COUNT(*) FROM atom WHERE element IN ('C', 'H')","SELECT COUNT(*) FROM atom WHERE element IN ('C', 'H')",0.0
130,775,What is the percentage of blue female superheroes among all female superheroes?,superhero,challenging,SELECT CAST(COUNT(CASE WHEN T3.colour = 'Blue' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN colour AS T3 ON T1.skin_colour_id = T3.id WHERE T2.gender = 'Female',7,"SELECT (COUNT(DISTINCT(superhero.id)) * 100.0 / (SELECT COUNT(DISTINCT(superhero.id)) FROM superhero WHERE gender_id = 2)) AS percentage_of_blue_female_superheroes FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN colour ON superhero.eye_colour_id = colour.id WHERE gender.gender = 'Female' AND colour.colour = 'Blue'
SELECT (COUNT(DISTINCT(superhero.id)) * 100.0 / (SELECT COUNT(DISTINCT(superhero.id)) FROM superhero WHERE gender_id = 2)) AS percentage_blue_female_superheroes FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN colour ON superhero.eye_colour_id = colour.id WHERE gender.gender = 'Female' AND colour.colour = 'Blue'
SELECT (COUNT(DISTINCT(superhero.id)) * 100.0 / (SELECT COUNT(DISTINCT(superhero.id)) FROM superhero WHERE gender_id = 2)) AS percentage_blue_female_superheroes FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN colour ON superhero.eye_colour_id = colour.id WHERE gender.gender = 'Female' AND colour.colour = 'Blue'
SELECT (COUNT(DISTINCT(superhero.id)) * 100.0 / (SELECT COUNT(DISTINCT(superhero.id)) FROM superhero WHERE gender_id = 2)) AS percentage_blue_female_superheroes FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN colour ON superhero.eye_colour_id = colour.id WHERE gender.gender = 'Female' AND colour.colour = 'Blue'
SELECT (COUNT(DISTINCT(superhero.id)) * 100.0 / (SELECT COUNT(DISTINCT(superhero.id)) FROM superhero WHERE gender_id = 2)) AS percentage_of_blue_female_superheroes FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN colour ON superhero.eye_colour_id = colour.id WHERE gender.gender = 'Female' AND colour.colour = 'Blue'
SELECT (COUNT(DISTINCT(superhero.id)) * 100.0 / (SELECT COUNT(DISTINCT(superhero.id)) FROM superhero WHERE gender_id = 2)) AS percentage_of_blue_female_superheroes FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN colour ON superhero.eye_colour_id = colour.id WHERE gender.gender = 'Female' AND colour.colour = 'Blue'
SELECT (     SELECT COUNT(*)     FROM superhero     JOIN gender ON superhero.gender_id = gender.id     JOIN colour ON superhero.eye_colour_id = colour.id     WHERE gender.gender = 'Female'     AND colour.colour = 'Blue' ) / (     SELECT COUNT(*)     FROM superhero     JOIN gender ON superhero.gender_id = gender.id     WHERE gender.gender = 'Female' ) * 100",SELECT (COUNT(DISTINCT(superhero.id)) * 100.0 / (SELECT COUNT(DISTINCT(superhero.id)) FROM superhero WHERE gender_id = 2)) AS percentage_of_blue_female_superheroes FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN colour ON superhero.eye_colour_id = colour.id WHERE gender.gender = 'Female' AND colour.colour = 'Blue',0.0
131,200,Find the triple-bonded molecules which are carcinogenic.,toxicology,simple,SELECT DISTINCT T2.molecule_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#' AND T2.label = '+',7,"SELECT * FROM molecule WHERE molecule_id IN (SELECT molecule_id FROM atom WHERE element = 'C' AND atom_id IN (SELECT atom_id FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE bond_type = 'triple'))) AND molecule_id IN (SELECT molecule_id FROM atom WHERE element = 'C' AND atom_id IN (SELECT atom_id2 FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE bond_type = 'triple'))) AND molecule_id IN (SELECT molecule_id FROM atom WHERE element = 'C' AND atom_id IN (SELECT atom_id2 FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE bond_type = 'triple'))) AND molecule_id IN (SELECT molecule_id FROM atom WHERE element = 'C' AND atom_id IN (SELECT atom_id FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE bond_type = 'triple'))) AND molecule_id IN (SELECT molecule_id FROM atom WHERE element = 'C' AND atom_id IN (SELECT atom_id2 FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE bond_type = 'triple'))) AND molecule_id IN (SELECT molecule_id FROM atom WHERE element = 'C' AND atom_id IN (SELECT atom_id2 FROM connected WHERE bond_id IN (SELECT bond_id FROM
SELECT atom.molecule_id, atom.atom_id, atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'triple' AND atom.molecule_id IN (     SELECT molecule_id     FROM molecule     WHERE label = 'carcinogenic' )
SELECT DISTINCT m.label FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'triple' AND a1.element = 'C' AND a2.element = 'C' AND m.label IN (     SELECT m.label     FROM molecule m     JOIN connected c ON m.molecule_id = c.molecule_id     JOIN atom a ON c.atom_id = a.atom_id     WHERE a.element = 'C'     GROUP BY m.label     HAVING COUNT(*) >= 3 )
SELECT atom.molecule_id, atom.atom_id, atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE bond.bond_type = 'triple' AND molecule.label = 'carcinogenic'
SELECT atom.molecule_id, atom.atom_id, atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE bond.bond_type = 'triple' AND molecule.label = 'carcinogenic'
SELECT atom.molecule_id, atom.atom_id, atom.element, bond.bond_type FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.element = 'C' AND bond.bond_type = 'triple' AND atom.molecule_id IN (     SELECT molecule_id     FROM molecule     WHERE label = 'carcinogenic' )
SELECT DISTINCT m.label FROM molecule m JOIN connected c ON m.molecule_id = c.molecule_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'triple' AND a1.element = 'C' AND a2.element = 'C' AND m.label IN (     SELECT m.label     FROM molecule m     JOIN connected c ON m.molecule_id = c.molecule_id     JOIN atom a ON c.atom_id = a.atom_id     WHERE a.element = 'C'     AND m.label IN (         SELECT m.label         FROM molecule m         JOIN connected c ON m.molecule_id = c.molecule_id         JOIN atom a ON c.atom_id = a.atom_id         WHERE a.element = 'C'         AND m.label IN (             SELECT m.label             FROM molecule m             JOIN connected c ON m.molecule_id = c.molecule_id             JOIN atom a ON c.atom_id = a.atom_id             WHERE a.element = 'C'             ","SELECT atom.molecule_id, atom.atom_id, atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE bond.bond_type = 'triple' AND molecule.label = 'carcinogenic'",0.0
132,1275,"Among the patients who has a normal level of anti-centromere and a normal level of anti-SSB, how many of them are male?",thrombosis_prediction,moderate,"SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CENTROMEA IN ('negative', '0') AND T2.SSB IN ('negative', '0') AND T1.SEX = 'M'",7,"SELECT COUNT(*) FROM patient WHERE sex = 'male' AND id IN (SELECT id FROM laboratory WHERE centromea = 'normal' AND ssb = 'normal')
SELECT COUNT(*) FROM patient WHERE sex = 'M' AND id IN (SELECT id FROM laboratory WHERE centromea = 'normal' AND ssb = 'normal')
SELECT COUNT(*) FROM patient WHERE sex = 'male' AND id IN (SELECT id FROM laboratory WHERE centromea = 'normal' AND ssb = 'normal')
SELECT COUNT(*) FROM patient WHERE sex = 'male' AND id IN (SELECT id FROM laboratory WHERE centromea = 'normal' AND ssb = 'normal')
SELECT COUNT(*) FROM patient WHERE sex = 'male' AND id IN (SELECT id FROM laboratory WHERE centromea = 'normal' AND ssb = 'normal')
SELECT COUNT(*) FROM patient WHERE sex = 'M' AND id IN (SELECT id FROM laboratory WHERE centromea = 'N' AND ssb = 'N')
SELECT COUNT(*) FROM patient WHERE sex = 'M' AND id IN (SELECT id FROM laboratory WHERE centromea = 'N' AND ssb = 'N')",SELECT COUNT(*) FROM patient WHERE sex = 'male' AND id IN (SELECT id FROM laboratory WHERE centromea = 'normal' AND ssb = 'normal'),0.0
133,1482,"Which of the three segments—SME, LAM and KAM—has the biggest and lowest percentage increases in consumption paid in EUR between 2012 and 2013?",debit_card_specializing,challenging,"SELECT CAST((SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2013%', T2.Consumption, 0)) - SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2012%', T2.Consumption, 0))) AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2012%', T2.Consumption, 0)), CAST(SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2013%', T2.Consumption, 0)) - SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) , CAST(SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2013%', T2.Consumption, 0)) - SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID",7,"SELECT segment,        SUM(CASE WHEN yearmonth.date = 2012 THEN consumption ELSE 0 END) AS consumption_2012,        SUM(CASE WHEN yearmonth.date = 2013 THEN consumption ELSE 0 END) AS consumption_2013,        (SUM(CASE WHEN yearmonth.date = 2013 THEN consumption ELSE 0 END) - SUM(CASE WHEN yearmonth.date = 2012 THEN consumption ELSE 0 END)) / SUM(CASE WHEN yearmonth.date = 2012 THEN consumption ELSE 0 END) AS percentage_increase FROM customers JOIN yearmonth ON customers.customerid = yearmonth.customerid GROUP BY segment ORDER BY percentage_increase DESC
SELECT segment,        SUM(CASE WHEN yearmonth = '2012-01' THEN consumption ELSE 0 END) AS consumption_2012,        SUM(CASE WHEN yearmonth = '2013-01' THEN consumption ELSE 0 END) AS consumption_2013,        (SUM(CASE WHEN yearmonth = '2013-01' THEN consumption ELSE 0 END) - SUM(CASE WHEN yearmonth = '2012-01' THEN consumption ELSE 0 END)) / SUM(CASE WHEN yearmonth = '2012-01' THEN consumption ELSE 0 END) AS percentage_increase FROM yearmonth GROUP BY segment ORDER BY percentage_increase DESC
select segment, sum(consumption_2013) as consumption_2013, sum(consumption_2012) as consumption_2012, (sum(consumption_2013) - sum(consumption_2012)) as consumption_diff from (select segment, sum(amount) as consumption_2013 from transactions_1k t inner join customers c on t.customerid = c.customerid inner join gasstations g on t.gasstationid = g.gasstationid where strftime('%Y', date) = '2013' group by segment union all select segment, sum(amount) as consumption_2012 from transactions_1k t inner join customers c on t.customerid = c.customerid inner join gasstations g on t.gasstationid = g.gasstationid where strftime('%Y', date) = '2012' group by segment) group by segment order by consumption_diff desc
SELECT segment,        SUM(CASE WHEN yearmonth = '2012' THEN consumption ELSE 0 END) AS consumption_2012,        SUM(CASE WHEN yearmonth = '2013' THEN consumption ELSE 0 END) AS consumption_2013,        (SUM(CASE WHEN yearmonth = '2013' THEN consumption ELSE 0 END) - SUM(CASE WHEN yearmonth = '2012' THEN consumption ELSE 0 END)) / SUM(CASE WHEN yearmonth = '2012' THEN consumption ELSE 0 END) AS percentage_increase FROM yearmonth GROUP BY segment ORDER BY percentage_increase DESC
SELECT segment, (SUM(consumption_2013) - SUM(consumption_2012)) / SUM(consumption_2012) * 100 AS percentage_increase FROM (     SELECT segment, SUM(CASE WHEN date BETWEEN '2012-01-01' AND '2012-12-31' THEN consumption ELSE 0 END) AS consumption_2012,            SUM(CASE WHEN date BETWEEN '2013-01-01' AND '2013-12-31' THEN consumption ELSE 0 END) AS consumption_2013     FROM customers     JOIN yearmonth ON customers.customerid = yearmonth.customerid     GROUP BY segment ) GROUP BY segment ORDER BY percentage_increase DESC
SELECT segment,        SUM(CASE WHEN yearmonth.date = '2012-12-01' THEN consumption ELSE 0 END) AS consumption_2012,        SUM(CASE WHEN yearmonth.date = '2013-12-01' THEN consumption ELSE 0 END) AS consumption_2013,        (SUM(CASE WHEN yearmonth.date = '2013-12-01' THEN consumption ELSE 0 END) - SUM(CASE WHEN yearmonth.date = '2012-12-01' THEN consumption ELSE 0 END)) / SUM(CASE WHEN yearmonth.date = '2012-12-01' THEN consumption ELSE 0 END) AS percentage_increase FROM customers JOIN yearmonth ON customers.customerid = yearmonth.customerid WHERE customers.currency = 'EUR' GROUP BY segment ORDER BY percentage_increase DESC
SELECT segment,        SUM(CASE WHEN yearmonth = '2012' THEN consumption ELSE 0 END) AS consumption_2012,        SUM(CASE WHEN yearmonth = '2013' THEN consumption ELSE 0 END) AS consumption_2013,        (SUM(CASE WHEN yearmonth = '2013' THEN consumption ELSE 0 END) - SUM(CASE WHEN yearmonth = '2012' THEN consumption ELSE 0 END)) / SUM(CASE WHEN yearmonth = '2012' THEN consumption ELSE 0 END) AS percentage_increase FROM yearmonth GROUP BY segment ORDER BY percentage_increase DESC","SELECT segment,        SUM(CASE WHEN yearmonth = '2012' THEN consumption ELSE 0 END) AS consumption_2012,        SUM(CASE WHEN yearmonth = '2013' THEN consumption ELSE 0 END) AS consumption_2013,        (SUM(CASE WHEN yearmonth = '2013' THEN consumption ELSE 0 END) - SUM(CASE WHEN yearmonth = '2012' THEN consumption ELSE 0 END)) / SUM(CASE WHEN yearmonth = '2012' THEN consumption ELSE 0 END) AS percentage_increase FROM yearmonth GROUP BY segment ORDER BY percentage_increase DESC",0.0
134,311,How many molecules without sulphur element is not having double bond?,toxicology,simple,SELECT COUNT(DISTINCT T1.molecule_id) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element <> 's' AND T2.bond_type <> '=',7,"SELECT COUNT(*) FROM molecule WHERE molecule_id NOT IN (     SELECT molecule_id     FROM atom     WHERE element = 'S' ) AND molecule_id NOT IN (     SELECT molecule_id     FROM bond     WHERE bond_type = 'double' )
SELECT COUNT(*) FROM molecule WHERE molecule_id NOT IN (     SELECT molecule_id     FROM atom     WHERE element = 'S' ) AND molecule_id NOT IN (     SELECT molecule_id     FROM bond     WHERE bond_type = 'double' )
SELECT COUNT(*) FROM molecule WHERE molecule_id NOT IN (     SELECT molecule_id     FROM atom     WHERE element = 'S' ) AND molecule_id NOT IN (     SELECT molecule_id     FROM bond     WHERE bond_type = 'double' )
SELECT COUNT(*) FROM molecule WHERE molecule_id NOT IN (     SELECT molecule_id     FROM atom     WHERE element = 'S' ) AND molecule_id NOT IN (     SELECT molecule_id     FROM bond     WHERE bond_type = 'double' )
SELECT COUNT(*) FROM molecule WHERE molecule_id NOT IN (     SELECT molecule_id     FROM atom     WHERE element = 'S' ) AND molecule_id NOT IN (     SELECT molecule_id     FROM bond     WHERE bond_type = 'double' )
SELECT COUNT(*) FROM molecule WHERE molecule_id NOT IN (     SELECT molecule_id     FROM atom     WHERE element = 'S' ) AND molecule_id NOT IN (     SELECT molecule_id     FROM bond     WHERE bond_type = 'double' )
SELECT COUNT(*) FROM molecule WHERE molecule_id NOT IN (     SELECT molecule_id     FROM atom     WHERE element = 'S' ) AND molecule_id NOT IN (     SELECT molecule_id     FROM bond     WHERE bond_type = 'double' )",SELECT COUNT(*) FROM molecule WHERE molecule_id NOT IN (     SELECT molecule_id     FROM atom     WHERE element = 'S' ) AND molecule_id NOT IN (     SELECT molecule_id     FROM bond     WHERE bond_type = 'double' ),0.0
135,23,List the names of schools with more than 30 difference in enrollements between K-12 and ages 5-17? Please also give the full street adress of the schools.,california_schools,moderate,"SELECT T1.School, T1.Street FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`Enrollment (K-12)` - T2.`Enrollment (Ages 5-17)` > 30",7,"SELECT school_name, street_address FROM schools WHERE enrollment_k_12 > 30 AND enrollment_ages_5_17 > 30
SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-
SELECT s.school, s.street, s.city, s.zip, s.state, s.phone, s.website, s.opendate, s.closeddate, s.charter, s.charternum, s.fundingtype, s.doc, s.doctype, s.soc, s.soctype, s.edopscode, s.edopsname, s.eilcode, s.eilname, s.gsoffered, s.gsserved, s.virtual, s.magnet, s.latitude, s.longitude, s.admfname1, s.admlname1, s.admemail1, s.admfname2, s.admlname2, s.admemail2, s.admfname3, s.admlname3, s.admemail3, s.lastupdate FROM schools s, satscores s2 WHERE s.cdscode = s2.cds AND s2.numtsttakr > 30
SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-
SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-
SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-
SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-","SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-",0.0
136,981,"On what year did the youngest driver had his first qualifying race? Also state the name, date and time of the race.",formula_1,moderate,"SELECT T3.year, T3.name, T3.date, T3.time FROM qualifying AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId INNER JOIN races AS T3 on T1.raceId = T3.raceId WHERE T1.driverId = ( SELECT driverId FROM drivers ORDER BY dob DESC LIMIT 1 ) ORDER BY T3.date ASC LIMIT 1",7,"SELECT drivers.forename, drivers.surname, races.date, races.time FROM drivers JOIN results ON drivers.driverid = results.driverid JOIN races ON results.raceid = races.raceid JOIN qualifying ON results.driverid = qualifying.driverid WHERE drivers.dob = (SELECT MAX(dob) FROM drivers) AND qualifying.raceid = (SELECT raceid FROM races WHERE date = (SELECT MIN(date) FROM races))
SELECT races.year, drivers.forename, drivers.surname, races.name, races.date, races.time FROM races JOIN drivers ON races.driverid = drivers.driverid WHERE drivers.dob = (SELECT MAX(dob) FROM drivers)
SELECT races.year, drivers.forename, drivers.surname, races.name, races.date, races.time FROM races JOIN drivers ON races.driverid = drivers.driverid WHERE drivers.dob = (SELECT MAX(dob) FROM drivers) ORDER BY races.year ASC LIMIT 1
SELECT races.year, drivers.forename, drivers.surname, races.name, races.date, races.time FROM races JOIN qualifying ON races.raceid = qualifying.raceid JOIN drivers ON qualifying.driverid = drivers.driverid WHERE drivers.dob = (SELECT MAX(dob) FROM drivers)
SELECT MIN(drivers.dob), races.name, races.date, races.time FROM drivers, races, qualifying WHERE drivers.driverid = qualifying.driverid AND qualifying.raceid = races.raceid AND qualifying.position = 1
SELECT races.year, drivers.forename, drivers.surname, races.name, races.date, races.time FROM races JOIN qualifying ON races.raceid = qualifying.raceid JOIN drivers ON qualifying.driverid = drivers.driverid WHERE drivers.dob = (SELECT MAX(dob) FROM drivers)
SELECT races.year, drivers.forename, drivers.surname, races.name, races.date, races.time FROM races JOIN drivers ON races.driverid = drivers.driverid WHERE drivers.dob = (SELECT MAX(dob) FROM drivers)","SELECT races.year, drivers.forename, drivers.surname, races.name, races.date, races.time FROM races JOIN drivers ON races.driverid = drivers.driverid WHERE drivers.dob = (SELECT MAX(dob) FROM drivers)",0.0
137,1339,Calculate the total average cost that Elijah Allen spent in the events on September and October.,student_club,challenging,"SELECT AVG(T2.cost) FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.last_name = 'Allen' AND T1.first_name = 'Elijah' AND (SUBSTR(T2.expense_date, 6, 2) = '09' OR SUBSTR(T2.expense_date, 6, 2) = '10')",7,"SELECT AVG(cost) FROM expense WHERE link_to_member IN (SELECT link_to_member FROM attendance WHERE link_to_event IN (SELECT event_id FROM event WHERE event_date BETWEEN '2022-09-01' AND '2022-10-31'))
SELECT SUM(cost) FROM expense WHERE link_to_member = (SELECT member_id FROM member WHERE first_name = 'Elijah' AND last_name = 'Allen') AND expense_date BETWEEN '2022-09-01' AND '2022-10-31'
SELECT AVG(spent) FROM budget WHERE link_to_event IN (SELECT event_id FROM event WHERE event_date BETWEEN '2022-09-01' AND '2022-10-31')
SELECT SUM(cost) FROM expense WHERE link_to_member IN (     SELECT member_id     FROM member     WHERE first_name = 'Elijah' AND last_name = 'Allen' ) AND expense_date BETWEEN '2023-09-01' AND '2023-10-31'
SELECT SUM(cost) FROM expense WHERE link_to_member IN (     SELECT member_id     FROM member     WHERE first_name = 'Elijah' AND last_name = 'Allen' ) AND expense_date BETWEEN '2023-09-01' AND '2023-10-31'
SELECT SUM(cost) FROM expense WHERE link_to_member IN (     SELECT member_id     FROM member     WHERE first_name = 'Elijah' AND last_name = 'Allen' ) AND expense_date BETWEEN '2023-09-01' AND '2023-10-31'
SELECT SUM(cost) FROM expense WHERE link_to_member = (SELECT member_id FROM member WHERE first_name = 'Elijah' AND last_name = 'Allen') AND expense_date BETWEEN '2022-09-01' AND '2022-10-31'",SELECT SUM(cost) FROM expense WHERE link_to_member IN (     SELECT member_id     FROM member     WHERE first_name = 'Elijah' AND last_name = 'Allen' ) AND expense_date BETWEEN '2023-09-01' AND '2023-10-31',0.0
138,988,List down top 3 German drivers who has the shortest average pit stop duration and were born between 1980-1985.,formula_1,challenging,"SELECT T2.forename, T2.surname FROM pitStops AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId WHERE T2.nationality = 'German' AND STRFTIME('%Y', T2.dob) BETWEEN '1980' AND '1985' GROUP BY T2.forename, T2.surname ORDER BY AVG(T1.duration) LIMIT 3",7,"SELECT d.forename, d.surname, d.dob, AVG(p.milliseconds) AS avg_pit_stop_duration FROM drivers d JOIN pitstops p ON d.driverid = p.driverid WHERE d.nationality = 'German' AND d.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY d.driverid ORDER BY avg_pit_stop_duration ASC LIMIT 3
SELECT drivers.forename, drivers.surname, AVG(pitstops.duration) AS avg_pit_stop_duration FROM drivers JOIN pitstops ON drivers.driverid = pitstops.driverid WHERE drivers.nationality = 'German' AND drivers.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY drivers.driverid ORDER BY avg_pit_stop_duration ASC LIMIT 3
SELECT drivers.forename, drivers.surname, AVG(pitstops.duration) AS avg_pit_stop_duration FROM drivers JOIN pitstops ON drivers.driverid = pitstops.driverid WHERE drivers.nationality = 'German' AND drivers.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY drivers.driverid ORDER BY avg_pit_stop_duration ASC LIMIT 3
SELECT drivers.forename, drivers.surname, AVG(pitstops.duration) AS avg_pit_stop_duration FROM drivers JOIN pitstops ON drivers.driverid = pitstops.driverid WHERE drivers.nationality = 'German' AND drivers.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY drivers.driverid ORDER BY avg_pit_stop_duration ASC LIMIT 3
SELECT drivers.forename, drivers.surname, AVG(pitstops.duration) AS avg_pit_stop_duration FROM drivers JOIN pitstops ON drivers.driverid = pitstops.driverid WHERE drivers.nationality = 'German' AND drivers.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY drivers.driverid ORDER BY avg_pit_stop_duration ASC LIMIT 3
SELECT d.forename, d.surname, d.nationality, AVG(p.duration) AS avg_pit_stop_duration FROM drivers d JOIN pitstops p ON d.driverid = p.driverid WHERE d.nationality = 'German' AND d.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY d.driverid ORDER BY avg_pit_stop_duration ASC LIMIT 3
SELECT d.forename, d.surname, AVG(p.milliseconds) AS avg_pit_stop_duration FROM drivers d JOIN pitstops p ON d.driverid = p.driverid WHERE d.nationality = 'German' AND d.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY d.driverid ORDER BY avg_pit_stop_duration ASC LIMIT 3","SELECT drivers.forename, drivers.surname, AVG(pitstops.duration) AS avg_pit_stop_duration FROM drivers JOIN pitstops ON drivers.driverid = pitstops.driverid WHERE drivers.nationality = 'German' AND drivers.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY drivers.driverid ORDER BY avg_pit_stop_duration ASC LIMIT 3",0.0
139,28,"Consider the average difference between K-12 enrollment and 15-17 enrollment of schools that are locally funded, list the names and DOC type of schools which has a difference above this average.",california_schools,challenging,"SELECT T2.School, T2.DOC FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.FundingType = 'Locally funded' AND (T1.`Enrollment (K-12)` - T1.`Enrollment (Ages 5-17)`) > (SELECT AVG(T3.`Enrollment (K-12)` - T3.`Enrollment (Ages 5-17)`) FROM frpm AS T3 INNER JOIN schools AS T4 ON T3.CDSCode = T4.CDSCode WHERE T4.FundingType = 'Locally funded')",7,"SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM : ['cdscode', 'academic year', 'county code', 'district code', 'school code', 'county name', 'district name', 'school name', 'district type', 'school type', 'educational option type', 'nslp provision status', 'charter school (y/n)', 'charter school number', 'charter funding type', 'irc', 'low grade', 'high grade', 'enrollment (k-12)', 'free meal count (k-12)', 'percent (%) eligible free (k-12)', 'frpm count (k
SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM : ['cdscode', 'academic year', 'county code', 'district code', 'school code', 'county name', 'district name', 'school name', 'district type', 'school type', 'educational option type', 'nslp provision status', 'charter school (y/n)', 'charter school number', 'charter funding type', 'irc', 'low grade', 'high grade', 'enrollment (k-12)', 'free meal count (k-12)', 'percent (%) eligible free (k-12)', 'frpm count (k
SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM : ['cdscode', 'academic year', 'county code', 'district code', 'school code', 'county name', 'district name', 'school name', 'district type', 'school type', 'educational option type', 'nslp provision status', 'charter school (y/n)', 'charter school number', 'charter funding type', 'irc', 'low grade', 'high grade', 'enrollment (k-12)', 'free meal count (k-12)', 'percent (%) eligible free (k-12)', 'frpm count (k
SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM : ['cdscode', 'academic year', 'county code', 'district code', 'school code', 'county name', 'district name', 'school name', 'district type', 'school type', 'educational option type', 'nslp provision status', 'charter school (y/n)', 'charter school number', 'charter funding type', 'irc', 'low grade', 'high grade', 'enrollment (k-12)', 'free meal count (k-12)', 'percent (%) eligible free (k-12)', 'frpm count (k
SELECT s.school_name, s.doc_type FROM schools s JOIN satscores sc ON s.cdscode = sc.cds WHERE sc.enroll12 > (SELECT AVG(enroll12) FROM satscores) AND s.doc_type = 'Local'
SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM : ['cdscode', 'academic year', 'county code', 'district code', 'school code', 'county name', 'district name', 'school name', 'district type', 'school type', 'educational option type', 'nslp provision status', 'charter school (y/n)', 'charter school number', 'charter funding type', 'irc', 'low grade', 'high grade', 'enrollment (k-12)', 'free meal count (k-12)', 'percent (%) eligible free (k-12)', 'frpm count (k
SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM : ['cdscode', 'academic year', 'county code', 'district code', 'school code', 'county name', 'district name', 'school name', 'district type', 'school type', 'educational option type', 'nslp provision status', 'charter school (y/n)', 'charter school number', 'charter funding type', 'irc', 'low grade', 'high grade', 'enrollment (k-12)', 'free meal count (k-12)', 'percent (%) eligible free (k-12)', 'frpm count (k","SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM : ['cdscode', 'academic year', 'county code', 'district code', 'school code', 'county name', 'district name', 'school name', 'district type', 'school type', 'educational option type', 'nslp provision status', 'charter school (y/n)', 'charter school number', 'charter funding type', 'irc', 'low grade', 'high grade', 'enrollment (k-12)', 'free meal count (k-12)', 'percent (%) eligible free (k-12)', 'frpm count (k",0.0
140,94,"List out the account numbers of female clients who are oldest and has lowest average salary, calculate the gap between this lowest average salary with the highest average salary?",financial,challenging,"SELECT T1.account_id , ( SELECT MAX(A11) - MIN(A11) FROM district ) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T1.account_id = T3.account_id INNER JOIN client AS T4 ON T3.client_id = T4.client_id WHERE T2.district_id = ( SELECT district_id FROM client WHERE gender = 'F' ORDER BY birth_date ASC LIMIT 1 ) ORDER BY T2.A11 DESC LIMIT 1",7,"SELECT account_id, gender, birth_date, avg(amount) as avg_salary FROM client JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id WHERE gender = 'F' GROUP BY account_id ORDER BY birth_date ASC, avg_salary ASC LIMIT 1
SELECT account_id, gender, birth_date, avg(amount) FROM client JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id WHERE gender = 'F' GROUP BY account_id ORDER BY birth_date ASC, avg(amount) ASC LIMIT 1
NULL
SELECT account_id, gender, birth_date, district_id, AVG(amount) AS avg_salary FROM client JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id WHERE gender = 'F' GROUP BY account_id, gender, birth_date, district_id ORDER BY birth_date ASC, avg_salary ASC LIMIT 1
SELECT account_id, gender, birth_date, district_id, AVG(amount) AS avg_salary FROM client JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id WHERE gender = 'F' GROUP BY account_id, gender, birth_date, district_id ORDER BY birth_date ASC, avg_salary ASC LIMIT 1
SELECT account_id, gender, birth_date, avg(amount) FROM client, loan, disp, account WHERE client.client_id = disp.client_id AND disp.account_id = loan.account_id AND disp.account_id = account.account_id AND gender = 'F' GROUP BY account_id, gender, birth_date ORDER BY birth_date ASC, avg(amount) ASC LIMIT 1
SELECT account_id, gender, birth_date, avg(amount) as avg_salary FROM client JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id WHERE gender = 'F' GROUP BY account_id ORDER BY birth_date ASC, avg_salary ASC LIMIT 1","SELECT account_id, gender, birth_date, avg(amount) as avg_salary FROM client JOIN disp ON client.client_id = disp.client_id JOIN account ON disp.account_id = account.account_id WHERE gender = 'F' GROUP BY account_id ORDER BY birth_date ASC, avg_salary ASC LIMIT 1",0.0
141,281,Tally the toxicology element of the 4th atom of each molecule that was carcinogenic.,toxicology,challenging,"SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND SUBSTR(T1.atom_id, -1) = '4' AND LENGTH(T1.atom_id) = 7",7,"SELECT COUNT(*) FROM connected WHERE connected.bond_id IN (     SELECT bond.bond_id FROM bond     WHERE bond.molecule_id IN (         SELECT molecule.molecule_id FROM molecule         WHERE molecule.label = 'carcinogenic'     ) ) AND connected.atom_id IN (     SELECT atom.atom_id FROM atom     WHERE atom.molecule_id IN (         SELECT molecule.molecule_id FROM molecule         WHERE molecule.label = 'carcinogenic'     )     AND atom.element = 4 )
SELECT COUNT(*) FROM connected c, bond b, atom a WHERE c.atom_id = a.atom_id AND c.bond_id = b.bond_id AND b.bond_type = 'carcinogenic' AND a.element = '4'
SELECT COUNT(*) FROM connected WHERE connected.atom_id = 4 AND connected.bond_id IN (     SELECT bond.bond_id FROM bond     WHERE bond.molecule_id = connected.molecule_id     AND bond.bond_type = 'carcinogenic' )
SELECT COUNT(*) FROM connected WHERE connected.bond_id IN (     SELECT bond.bond_id     FROM bond     WHERE bond.molecule_id IN (         SELECT molecule.molecule_id         FROM molecule         WHERE molecule.label = 'carcinogenic'     ) ) AND connected.atom_id IN (     SELECT atom.atom_id     FROM atom     WHERE atom.molecule_id IN (         SELECT molecule.molecule_id         FROM molecule         WHERE molecule.label = 'carcinogenic'     )     AND atom.element = 'toxicology'     AND atom.atom_id = 4 )
SELECT COUNT(*) FROM connected WHERE connected.bond_id IN (     SELECT bond_id FROM bond     WHERE molecule_id IN (         SELECT molecule_id FROM molecule         WHERE label = 'carcinogenic'     ) ) AND connected.atom_id IN (     SELECT atom_id FROM atom     WHERE molecule_id IN (         SELECT molecule_id FROM molecule         WHERE label = 'carcinogenic'     ) ) AND connected.atom_id2 IN (     SELECT atom_id FROM atom     WHERE molecule_id IN (         SELECT molecule_id FROM molecule         WHERE label = 'carcinogenic'     ) ) AND connected.atom_id IN (     SELECT atom_id FROM atom     WHERE element = 'toxicology' ) AND connected.atom_id2 IN (     SELECT atom_id FROM atom     WHERE element = 'toxicology' ) AND connected.bond_id IN (     SELECT bond_id FROM bond     WHERE molecule_id IN (         SELECT molecule_id FROM molecule         WHERE label = 'carcinogenic'     ) ) AND connected.atom_id IN (     SELECT atom_id FROM atom     WHERE molecule_id IN (         SELECT molecule_id FROM molecule         WHERE label = 'carcinogenic' 
SELECT COUNT(*) FROM connected WHERE connected.atom_id = 4 AND connected.bond_id IN (     SELECT bond_id FROM bond     WHERE bond.molecule_id IN (         SELECT molecule_id FROM molecule         WHERE molecule.label = 'carcinogenic'     ) )
SELECT COUNT(*) FROM connected WHERE connected.atom_id = 4 AND connected.bond_id IN (     SELECT bond_id FROM bond     WHERE bond.molecule_id IN (         SELECT molecule_id FROM molecule         WHERE molecule.label = 'carcinogenic'     ) )",SELECT COUNT(*) FROM connected WHERE connected.atom_id = 4 AND connected.bond_id IN (     SELECT bond_id FROM bond     WHERE bond.molecule_id IN (         SELECT molecule_id FROM molecule         WHERE molecule.label = 'carcinogenic'     ) ),0.0
142,730,List the superheroes from Marvel Comics who have the super power of 'Super Strength'.,superhero,challenging,SELECT superhero_name FROM superhero AS T1 WHERE EXISTS (SELECT 1 FROM hero_power AS T2 INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Super Strength' AND T1.id = T2.hero_id)AND EXISTS (SELECT 1 FROM publisher AS T4 WHERE T4.publisher_name = 'Marvel Comics' AND T1.publisher_id = T4.id),7,"SELECT superhero.superhero_name FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'Marvel Comics' AND superhero.id IN (     SELECT hero_power.hero_id     FROM hero_power     JOIN superpower ON hero_power.power_id = superpower.id     WHERE superpower.power_name = 'Super Strength' )
SELECT superhero.superhero_name FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'Marvel Comics' AND superhero.id IN (     SELECT hero_power.hero_id     FROM hero_power     JOIN superpower ON hero_power.power_id = superpower.id     WHERE superpower.power_name = 'Super Strength' )
SELECT superhero.superhero_name FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'Marvel Comics' AND superhero.id IN (     SELECT hero_power.hero_id     FROM hero_power     JOIN superpower ON hero_power.power_id = superpower.id     WHERE superpower.power_name = 'Super Strength' )
SELECT superhero.superhero_name FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'Marvel Comics' AND superhero.id IN (     SELECT hero_power.hero_id     FROM hero_power     JOIN superpower ON hero_power.power_id = superpower.id     WHERE superpower.power_name = 'Super Strength' )
SELECT superhero.superhero_name FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'Marvel Comics' AND superhero.id IN (     SELECT hero_power.hero_id     FROM hero_power     JOIN superpower ON hero_power.power_id = superpower.id     WHERE superpower.power_name = 'Super Strength' )
SELECT superhero.superhero_name FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE alignment.alignment = 'Marvel Comics' AND superhero.superhero_name IN (     SELECT superhero.superhero_name     FROM superhero     JOIN hero_power ON superhero.id = hero_power.hero_id     JOIN superpower ON hero_power.power_id = superpower.id     WHERE superpower.power_name = 'Super Strength' )
SELECT superhero.superhero_name FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'Marvel Comics' AND superhero.id IN (     SELECT hero_power.hero_id     FROM hero_power     JOIN superpower ON hero_power.power_id = superpower.id     WHERE superpower.power_name = 'Super Strength' )",SELECT superhero.superhero_name FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'Marvel Comics' AND superhero.id IN (     SELECT hero_power.hero_id     FROM hero_power     JOIN superpower ON hero_power.power_id = superpower.id     WHERE superpower.power_name = 'Super Strength' ),0.0
143,1041,"For the teams with normal build-up play dribbling class in 2014, List the names of the teams with less than average chance creation passing, in descending order of chance creation passing.",european_football_2,challenging,"SELECT t3.team_long_name FROM Team AS t3 INNER JOIN Team_Attributes AS t4 ON t3.team_api_id = t4.team_api_id WHERE t4.buildUpPlayDribblingClass = 'Normal' AND t4.chanceCreationPassing < ( SELECT CAST(SUM(t2.chanceCreationPassing) AS REAL) / COUNT(t1.id) FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t2.buildUpPlayDribblingClass = 'Normal' AND SUBSTR(t2.`date`, 1, 4) = '2014') ORDER BY t4.chanceCreationPassing DESC",7,"SELECT team_name FROM team_attributes WHERE team_api_id IN (SELECT team_api_id FROM match WHERE date BETWEEN '2014-01-01' AND '2014-12-31' AND chance_creation_passing < (SELECT AVG(chance_creation_passing) FROM team_attributes WHERE date BETWEEN '2014-01-01' AND '2014-12-31')) ORDER BY chance_creation_passing DESC
SELECT team_name, chance_creation_passing FROM team_attributes WHERE team_name IN (SELECT team_name FROM team WHERE team_api_id IN (SELECT team_api_id FROM match WHERE date BETWEEN '2014-01-01' AND '2014-12-31')) ORDER BY chance_creation_passing DESC
SELECT name FROM teams WHERE build_up_play_dribbling_class = 'normal' AND chance_creation_passing < (SELECT AVG(chance_creation_passing) FROM teams)
SELECT team_name, chance_creation_passing FROM team_attributes WHERE team_name IN (SELECT team_name FROM team WHERE team_api_id IN (SELECT team_api_id FROM match WHERE country_id = 1)) AND chance_creation_passing < (SELECT AVG(chance_creation_passing) FROM team_attributes) ORDER BY chance_creation_passing DESC
SELECT team_name, chance_creation_passing FROM team_attributes WHERE team_name IN (SELECT team_name FROM team_attributes WHERE chance_creation_passing < AVG(chance_creation_passing)) ORDER BY chance_creation_passing DESC
SELECT team_name, chance_creation_passing FROM team_attributes WHERE team_name IN (SELECT team_name FROM team_attributes WHERE chance_creation_passing < AVG(chance_creation_passing)) ORDER BY chance_creation_passing DESC
SELECT team_name, chance_creation_passing FROM team_attributes WHERE team_name IN (SELECT team_name FROM team_attributes WHERE chance_creation_passing < AVG(chance_creation_passing)) ORDER BY chance_creation_passing DESC","SELECT team_name, chance_creation_passing FROM team_attributes WHERE team_name IN (SELECT team_name FROM team_attributes WHERE chance_creation_passing < AVG(chance_creation_passing)) ORDER BY chance_creation_passing DESC",0.0
144,1016,"In the race a driver set the lap record for the Austrian Grand Prix Circuit, how long did he spent at the pit stop at that same race?",formula_1,challenging,"WITH fastest_lap_times AS ( SELECT T1.raceId, T1.driverId, T1.FastestLapTime, (CAST(SUBSTR(T1.FastestLapTime, 1, INSTR(T1.FastestLapTime, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, ':') + 1, INSTR(T1.FastestLapTime, '.') - INSTR(T1.FastestLapTime, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, '.') + 1) AS REAL) / 1000) as time_in_seconds FROM results AS T1 WHERE T1.FastestLapTime IS NOT NULL), lap_record_race AS ( SELECT T1.raceId, T1.driverId FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN circuits AS T3 on T2.circuitId = T3.circuitId INNER JOIN ( SELECT MIN(fastest_lap_times.time_in_seconds) as min_time_in_seconds FROM fastest_lap_times INNER JOIN races AS T2 on fastest_lap_times.raceId = T2.raceId INNER JOIN circuits AS T3 on T2.circuitId = T3.circuitId WHERE T2.name = 'Austrian Grand Prix') AS T4 ON (CAST(SUBSTR(T1.FastestLapTime, 1, INSTR(T1.FastestLapTime, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, ':') + 1, INSTR(T1.FastestLapTime, '.') - INSTR(T1.FastestLapTime, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, '.') + 1) AS REAL) / 1000) = T4.min_time_in_seconds WHERE T2.name = 'Austrian Grand Prix') SELECT T4.duration FROM lap_record_race INNER JOIN pitStops AS T4 on lap_record_race.raceId = T4.raceId AND lap_record_race.driverId = T4.driverId",7,"SELECT pitstops.time FROM pitstops INNER JOIN races ON pitstops.raceid = races.raceid INNER JOIN circuits ON races.circuitid = circuits.circuitid WHERE circuits.name = 'Austrian Grand Prix Circuit'
SELECT pitstops.time FROM pitstops JOIN races ON pitstops.raceid = races.raceid JOIN circuits ON races.circuitid = circuits.circuitid WHERE circuits.name = 'Red Bull Ring' AND races.year = 2021
SELECT pitstops.time FROM pitstops INNER JOIN races ON pitstops.raceid = races.raceid INNER JOIN circuits ON races.circuitid = circuits.circuitid WHERE circuits.name = 'Red Bull Ring' AND races.year = 2021
SELECT pitstops.time FROM pitstops INNER JOIN races ON pitstops.raceid = races.raceid INNER JOIN circuits ON races.circuitid = circuits.circuitid WHERE circuits.name = 'Red Bull Ring' AND races.year = 2021
SELECT pitstops.time FROM pitstops INNER JOIN races ON pitstops.raceid = races.raceid INNER JOIN circuits ON races.circuitid = circuits.circuitid WHERE circuits.name = 'Red Bull Ring' AND races.year = 2021
SELECT pitstops.time FROM races JOIN circuits ON races.circuitid = circuits.circuitid JOIN pitstops ON races.raceid = pitstops.raceid WHERE circuits.name = 'Austrian Grand Prix Circuit' AND races.year = (SELECT MAX(year) FROM races) LIMIT 1
SELECT pitstops.time FROM pitstops INNER JOIN races ON pitstops.raceid = races.raceid INNER JOIN circuits ON races.circuitid = circuits.circuitid WHERE circuits.name = 'Red Bull Ring' AND races.year = 2021",SELECT pitstops.time FROM pitstops INNER JOIN races ON pitstops.raceid = races.raceid INNER JOIN circuits ON races.circuitid = circuits.circuitid WHERE circuits.name = 'Red Bull Ring' AND races.year = 2021,0.0
145,1242,"For laboratory examinations take in 1984, list all patients below 50 years old with normal platelet level.",thrombosis_prediction,challenging,"SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.PLT BETWEEN 100 AND 400 AND STRFTIME('%Y', T2.Date) - STRFTIME('%Y', T1.Birthday) < 50 AND STRFTIME('%Y', T2.Date) = '1984'",7,"SELECT * FROM laboratory WHERE date = '1984-01-01' AND got = 'normal' AND gpt = 'normal' AND ldh = 'normal' AND alp = 'normal' AND tp = 'normal' AND alb = 'normal' AND ua = 'normal' AND un = 'normal' AND cre = 'normal' AND t-bil = 'normal' AND t-cho = 'normal' AND tg = 'normal' AND cpk = 'normal' AND glu = 'normal' AND wbc = 'normal' AND rbc = 'normal' AND hgb = 'normal' AND hct = 'normal' AND plt = 'normal' AND pt = 'normal' AND aptt = 'normal' AND fg = 'normal' AND pic = 'normal' AND tat = 'normal' AND tat2 = 'normal' AND u-pro = 'normal' AND igg = 'normal' AND iga = 'normal' AND igm = 'normal' AND crp = 'normal' AND ra = 'normal' AND rf = 'normal' AND c3 = 'normal' AND c4 = 'normal' AND rnp = 'normal' AND sm = 'normal' AND sc170 = 'normal' AND ssa = 'normal' AND ssb = 'normal' AND centromea = 'normal' AND dna = 'normal' AND dna-ii = '
SELECT * FROM laboratory WHERE date = '1984-01-01' AND got = 'normal' AND gpt = 'normal' AND ldh = 'normal' AND alp = 'normal' AND tp = 'normal' AND alb = 'normal' AND ua = 'normal' AND un = 'normal' AND cre = 'normal' AND t-bil = 'normal' AND t-cho = 'normal' AND tg = 'normal' AND cpk = 'normal' AND glu = 'normal' AND wbc = 'normal' AND rbc = 'normal' AND hgb = 'normal' AND hct = 'normal' AND plt = 'normal' AND pt = 'normal' AND aptt = 'normal' AND fg = 'normal' AND pic = 'normal' AND tat = 'normal' AND tat2 = 'normal' AND u-pro = 'normal' AND igg = 'normal' AND iga = 'normal' AND igm = 'normal' AND crp = 'normal' AND ra = 'normal' AND rf = 'normal' AND c3 = 'normal' AND c4 = 'normal' AND rnp = 'normal' AND sm = 'normal' AND sc170 = 'normal' AND ssa = 'normal' AND ssb = 'normal' AND centromea = 'normal' AND dna = 'normal' AND dna-ii = '
SELECT patient.id, patient.sex, patient.birthday, patient.description, patient.first date, patient.admission, patient.diagnosis, laboratory.id, laboratory.date, laboratory.got, laboratory.gpt, laboratory.ldh, laboratory.alp, laboratory.tp, laboratory.alb, laboratory.ua, laboratory.un, laboratory.cre, laboratory.t-bil, laboratory.t-cho, laboratory.tg, laboratory.cpk, laboratory.glu, laboratory.wbc, laboratory.rbc, laboratory.hgb, laboratory.hct, laboratory.plt, laboratory.pt, laboratory.aptt, laboratory.fg, laboratory.pic, laboratory.tat, laboratory.tat2, laboratory.u-pro, laboratory.igg, laboratory.iga, laboratory.igm, laboratory.crp, laboratory.ra, laboratory.rf, laboratory.c3, laboratory.c4, laboratory.rnp, laboratory.sm, laboratory.sc170, laboratory.ssa, laboratory.ssb, laboratory.centromea, laboratory.dna, laboratory.dna-ii FROM patient, laboratory WHERE patient.id = laboratory.id AND patient.birthday < 50 AND laboratory.plt > 0
SELECT * FROM laboratory WHERE date = '1984-01-01' AND got = 'normal' AND gpt = 'normal' AND ldh = 'normal' AND alp = 'normal' AND tp = 'normal' AND alb = 'normal' AND ua = 'normal' AND un = 'normal' AND cre = 'normal' AND t-bil = 'normal' AND t-cho = 'normal' AND tg = 'normal' AND cpk = 'normal' AND glu = 'normal' AND wbc = 'normal' AND rbc = 'normal' AND hgb = 'normal' AND hct = 'normal' AND plt = 'normal' AND pt = 'normal' AND aptt = 'normal' AND fg = 'normal' AND pic = 'normal' AND tat = 'normal' AND tat2 = 'normal' AND u-pro = 'normal' AND igg = 'normal' AND iga = 'normal' AND igm = 'normal' AND crp = 'normal' AND ra = 'normal' AND rf = 'normal' AND c3 = 'normal' AND c4 = 'normal' AND rnp = 'normal' AND sm = 'normal' AND sc170 = 'normal' AND ssa = 'normal' AND ssb = 'normal' AND centromea = 'normal' AND dna = 'normal' AND dna-ii = '
SELECT * FROM laboratory WHERE date = '1984-01-01' AND got = 'normal' AND gpt = 'normal' AND ldh = 'normal' AND alp = 'normal' AND tp = 'normal' AND alb = 'normal' AND ua = 'normal' AND un = 'normal' AND cre = 'normal' AND t-bil = 'normal' AND t-cho = 'normal' AND tg = 'normal' AND cpk = 'normal' AND glu = 'normal' AND wbc = 'normal' AND rbc = 'normal' AND hgb = 'normal' AND hct = 'normal' AND plt = 'normal' AND pt = 'normal' AND aptt = 'normal' AND fg = 'normal' AND pic = 'normal' AND tat = 'normal' AND tat2 = 'normal' AND u-pro = 'normal' AND igg = 'normal' AND iga = 'normal' AND igm = 'normal' AND crp = 'normal' AND ra = 'normal' AND rf = 'normal' AND c3 = 'normal' AND c4 = 'normal' AND rnp = 'normal' AND sm = 'normal' AND sc170 = 'normal' AND ssa = 'normal' AND ssb = 'normal' AND centromea = 'normal' AND dna = 'normal' AND dna-ii = '
SELECT * FROM laboratory WHERE date = '1984-01-01' AND got = 'normal' AND gpt = 'normal' AND ldh = 'normal' AND alp = 'normal' AND tp = 'normal' AND alb = 'normal' AND ua = 'normal' AND un = 'normal' AND cre = 'normal' AND t-bil = 'normal' AND t-cho = 'normal' AND tg = 'normal' AND cpk = 'normal' AND glu = 'normal' AND wbc = 'normal' AND rbc = 'normal' AND hgb = 'normal' AND hct = 'normal' AND plt = 'normal' AND pt = 'normal' AND aptt = 'normal' AND fg = 'normal' AND pic = 'normal' AND tat = 'normal' AND tat2 = 'normal' AND u-pro = 'normal' AND igg = 'normal' AND iga = 'normal' AND igm = 'normal' AND crp = 'normal' AND ra = 'normal' AND rf = 'normal' AND c3 = 'normal' AND c4 = 'normal' AND rnp = 'normal' AND sm = 'normal' AND sc170 = 'normal' AND ssa = 'normal' AND ssb = 'normal' AND centromea = 'normal' AND dna = 'normal' AND dna-ii = '
SELECT * FROM laboratory WHERE date = '1984-01-01' AND got = 'normal' AND gpt = 'normal' AND ldh = 'normal' AND alp = 'normal' AND tp = 'normal' AND alb = 'normal' AND ua = 'normal' AND un = 'normal' AND cre = 'normal' AND t-bil = 'normal' AND t-cho = 'normal' AND tg = 'normal' AND cpk = 'normal' AND glu = 'normal' AND wbc = 'normal' AND rbc = 'normal' AND hgb = 'normal' AND hct = 'normal' AND plt = 'normal' AND pt = 'normal' AND aptt = 'normal' AND fg = 'normal' AND pic = 'normal' AND tat = 'normal' AND tat2 = 'normal' AND u-pro = 'normal' AND igg = 'normal' AND iga = 'normal' AND igm = 'normal' AND crp = 'normal' AND ra = 'normal' AND rf = 'normal' AND c3 = 'normal' AND c4 = 'normal' AND rnp = 'normal' AND sm = 'normal' AND sc170 = 'normal' AND ssa = 'normal' AND ssb = 'normal' AND centromea = 'normal' AND dna = 'normal' AND dna-ii = '",SELECT * FROM laboratory WHERE date = '1984-01-01' AND got = 'normal' AND gpt = 'normal' AND ldh = 'normal' AND alp = 'normal' AND tp = 'normal' AND alb = 'normal' AND ua = 'normal' AND un = 'normal' AND cre = 'normal' AND t-bil = 'normal' AND t-cho = 'normal' AND tg = 'normal' AND cpk = 'normal' AND glu = 'normal' AND wbc = 'normal' AND rbc = 'normal' AND hgb = 'normal' AND hct = 'normal' AND plt = 'normal' AND pt = 'normal' AND aptt = 'normal' AND fg = 'normal' AND pic = 'normal' AND tat = 'normal' AND tat2 = 'normal' AND u-pro = 'normal' AND igg = 'normal' AND iga = 'normal' AND igm = 'normal' AND crp = 'normal' AND ra = 'normal' AND rf = 'normal' AND c3 = 'normal' AND c4 = 'normal' AND rnp = 'normal' AND sm = 'normal' AND sc170 = 'normal' AND ssa = 'normal' AND ssb = 'normal' AND centromea = 'normal' AND dna = 'normal' AND dna-ii = ',0.0
146,701,"Among all the posts posted by the most influential user, identify the percentage with a score above 50.",codebase_community,challenging,SELECT CAST(SUM(CASE WHEN T2.Score > 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Id) FROM users T1 INNER JOIN posts T2 ON T1.Id = T2.OwnerUserId INNER JOIN ( SELECT MAX(Reputation) AS max_reputation FROM users ) T3 ON T1.Reputation = T3.max_reputation,7,"SELECT (SELECT COUNT(*) FROM posts WHERE owneruserid = (SELECT userid FROM users ORDER BY reputation DESC LIMIT 1) AND score > 50) / (SELECT COUNT(*) FROM posts WHERE owneruserid = (SELECT userid FROM users ORDER BY reputation DESC LIMIT 1)) * 100
SELECT (SELECT COUNT(*) FROM posts WHERE owneruserid = (SELECT userid FROM users ORDER BY reputation DESC LIMIT 1) AND score > 50) / (SELECT COUNT(*) FROM posts WHERE owneruserid = (SELECT userid FROM users ORDER BY reputation DESC LIMIT 1)) * 100
SELECT (SELECT COUNT(*) FROM posts WHERE score > 50 AND owneruserid = (SELECT userid FROM users ORDER BY reputation DESC LIMIT 1)) * 100.0 / (SELECT COUNT(*) FROM posts WHERE owneruserid = (SELECT userid FROM users ORDER BY reputation DESC LIMIT 1)) AS percentage
SELECT (SELECT COUNT(*) FROM posts WHERE score > 50 AND owneruserid = (SELECT userid FROM users ORDER BY reputation DESC LIMIT 1)) / (SELECT COUNT(*) FROM posts WHERE owneruserid = (SELECT userid FROM users ORDER BY reputation DESC LIMIT 1)) * 100
SELECT (SELECT COUNT(*) FROM posts WHERE owneruserid = (SELECT userid FROM users ORDER BY reputation DESC LIMIT 1) AND score > 50) / (SELECT COUNT(*) FROM posts WHERE owneruserid = (SELECT userid FROM users ORDER BY reputation DESC LIMIT 1)) * 100
SELECT (SELECT COUNT(*) FROM posts WHERE score > 50 AND owneruserid = (SELECT userid FROM users ORDER BY reputation DESC LIMIT 1)) / (SELECT COUNT(*) FROM posts WHERE owneruserid = (SELECT userid FROM users ORDER BY reputation DESC LIMIT 1)) * 100
SELECT (SELECT COUNT(*) FROM posts WHERE owneruserid = (SELECT userid FROM users ORDER BY reputation DESC LIMIT 1) AND score > 50) / (SELECT COUNT(*) FROM posts WHERE owneruserid = (SELECT userid FROM users ORDER BY reputation DESC LIMIT 1)) * 100",SELECT (SELECT COUNT(*) FROM posts WHERE owneruserid = (SELECT userid FROM users ORDER BY reputation DESC LIMIT 1) AND score > 50) / (SELECT COUNT(*) FROM posts WHERE owneruserid = (SELECT userid FROM users ORDER BY reputation DESC LIMIT 1)) * 100,0.0
147,1099,Which foot is preferred by Abdou Diallo?,european_football_2,simple,SELECT DISTINCT t2.preferred_foot FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.player_name = 'Abdou Diallo',7,"SELECT player_attributes.preferred_foot FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name = 'Abdou Diallo' AND player_attributes.date = (SELECT MAX(date) FROM player_attributes WHERE player_api_id = player.player_api_id)
SELECT player_attributes.preferred_foot FROM player_attributes WHERE player_attributes.player_api_id = (SELECT player.player_api_id FROM player WHERE player.player_name = 'Abdou Diallo') AND player_attributes.date = (SELECT match.date FROM match WHERE match.home_team_api_id = (SELECT team.team_api_id FROM team WHERE team.team_long_name = 'Paris Saint-Germain') AND match.away_team_api_id = (SELECT team.team_api_id FROM team WHERE team.team_long_name = 'Olympique de Marseille')) AND player_attributes.player_fifa_api_id = (SELECT player.player_fifa_api_id FROM player WHERE player.player_name = 'Abdou Diallo') AND player_attributes.player_api_id = (SELECT player.player_api_id FROM player WHERE player.player_name = 'Abdou Diallo') AND player_attributes.date = (SELECT match.date FROM match WHERE match.home_team_api_id = (SELECT team.team_api_id FROM team WHERE team.team_long_name = 'Paris Saint-Germain') AND match.away_team_api_id = (SELECT team.team_api
SELECT player_attributes.preferred_foot FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name = 'Abdou Diallo' GROUP BY player_attributes.preferred_foot ORDER BY COUNT(*) DESC LIMIT 1
SELECT player_attributes.preferred_foot FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name = 'Abdou Diallo'
SELECT player_attributes.preferred_foot FROM player_attributes INNER JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name = 'Abdou Diallo' GROUP BY player_attributes.preferred_foot ORDER BY COUNT(*) DESC LIMIT 1
SELECT player_attributes.preferred_foot FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name = 'Abdou Diallo'
SELECT player_attributes.preferred_foot FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name = 'Abdou Diallo' LIMIT 1",SELECT player_attributes.preferred_foot FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name = 'Abdou Diallo',1.0
148,932,In which years did Lewis Hamilton participate in a Formula_1 race?,formula_1,simple,SELECT DISTINCT T1.year FROM races AS T1 INNER JOIN results AS T2 ON T2.raceId = T1.raceId INNER JOIN drivers AS T3 ON T3.driverId = T2.driverId WHERE T3.forename = 'Lewis' AND T3.surname = 'Hamilton',7,"SELECT DISTINCT year FROM races WHERE circuitid IN (SELECT circuitid FROM circuits WHERE name = 'Lewis Hamilton')
SELECT DISTINCT races.year FROM races JOIN results ON races.raceid = results.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.surname = 'Hamilton'
SELECT DISTINCT year FROM races WHERE circuitid IN (SELECT circuitid FROM circuits WHERE name = 'Silverstone Circuit')
SELECT DISTINCT year FROM races WHERE circuitid IN (SELECT circuitid FROM circuits WHERE name = 'Silverstone Circuit') AND driverid IN (SELECT driverid FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton')
SELECT DISTINCT year FROM races WHERE circuitid IN (SELECT circuitid FROM circuits WHERE name = 'Silverstone Circuit')
SELECT DISTINCT year FROM races WHERE circuitid IN (SELECT circuitid FROM circuits WHERE name = 'Lewis Hamilton')
SELECT DISTINCT year FROM races WHERE circuitid IN (SELECT circuitid FROM circuits WHERE name = 'Lewis Hamilton')",SELECT DISTINCT year FROM races WHERE circuitid IN (SELECT circuitid FROM circuits WHERE name = 'Lewis Hamilton'),0.0
149,231,Which bond type accounted for the majority of the bonds found in molecule TR010 and state whether or not this molecule is carcinogenic?,toxicology,challenging,"SELECT T.bond_type FROM ( SELECT T1.bond_type, COUNT(T1.molecule_id) FROM bond AS T1  WHERE T1.molecule_id = 'TR010' GROUP BY T1.bond_type ORDER BY COUNT(T1.molecule_id) DESC LIMIT 1 ) AS T",7,"SELECT bond_type, COUNT(*) AS count FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR010') GROUP BY bond_type ORDER BY count DESC LIMIT 1
SELECT bond_type, COUNT(*) AS count FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR010') GROUP BY bond_type ORDER BY count DESC LIMIT 1
SELECT bond_type, COUNT(*) AS count FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR010') GROUP BY bond_type ORDER BY count DESC LIMIT 1
SELECT bond_type, COUNT(*) AS count FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR010') GROUP BY bond_type ORDER BY count DESC LIMIT 1
SELECT bond_type, COUNT(*) AS count FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR010') GROUP BY bond_type ORDER BY count DESC LIMIT 1
SELECT bond_type, COUNT(*) as count FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR010') GROUP BY bond_type ORDER BY count DESC LIMIT 1
SELECT bond_type, COUNT(*) AS count FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR010') GROUP BY bond_type ORDER BY count DESC LIMIT 1","SELECT bond_type, COUNT(*) AS count FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR010') GROUP BY bond_type ORDER BY count DESC LIMIT 1",0.0
150,819,"In superheroes with missing weight data, calculate the difference between the number of superheroes with blue eyes and no eye color.",superhero,challenging,SELECT SUM(CASE WHEN T2.id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.id = 1 THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg = 0 OR T1.weight_kg is NULL,7,"SELECT COUNT(DISTINCT(superhero.id)) - (SELECT COUNT(DISTINCT(superhero.id)) FROM superhero WHERE weight_kg IS NULL) FROM superhero WHERE eye_colour_id IN (SELECT id FROM colour WHERE colour = 'blue') AND weight_kg IS NULL
SELECT COUNT(DISTINCT(superhero.id)) - (SELECT COUNT(DISTINCT(superhero.id)) FROM superhero WHERE weight_kg IS NULL) FROM superhero WHERE eye_colour_id IN (SELECT id FROM colour WHERE colour = 'blue') AND weight_kg IS NULL
SELECT COUNT(DISTINCT(superhero.id)) - (SELECT COUNT(DISTINCT(superhero.id)) FROM superhero WHERE weight_kg IS NULL) FROM superhero WHERE eye_colour_id IN (SELECT id FROM colour WHERE colour = 'blue') AND weight_kg IS NULL
SELECT COUNT(DISTINCT s.id) - (SELECT COUNT(DISTINCT s.id) FROM superhero s WHERE s.weight_kg IS NULL) FROM superhero s WHERE s.eye_colour_id IN (SELECT c.id FROM colour c WHERE c.colour = 'blue') AND s.eye_colour_id IS NOT NULL
SELECT COUNT(DISTINCT(superhero.id)) - (SELECT COUNT(DISTINCT(superhero.id)) FROM superhero WHERE weight_kg IS NULL) FROM superhero WHERE eye_colour_id IN (SELECT id FROM colour WHERE colour = 'blue') AND weight_kg IS NULL
SELECT COUNT(DISTINCT(superhero.id)) - (SELECT COUNT(DISTINCT(superhero.id)) FROM superhero WHERE weight_kg IS NULL) FROM superhero WHERE eye_colour_id IN (SELECT id FROM colour WHERE colour = 'blue') AND weight_kg IS NULL
SELECT COUNT(DISTINCT s.id) - COUNT(DISTINCT s.weight_kg) FROM superhero s WHERE s.weight_kg IS NULL AND s.eye_colour_id IN (SELECT c.id FROM colour c WHERE c.colour = 'blue') AND s.eye_colour_id NOT IN (SELECT c.id FROM colour c WHERE c.colour IS NULL)",SELECT COUNT(DISTINCT(superhero.id)) - (SELECT COUNT(DISTINCT(superhero.id)) FROM superhero WHERE weight_kg IS NULL) FROM superhero WHERE eye_colour_id IN (SELECT id FROM colour WHERE colour = 'blue') AND weight_kg IS NULL,0.0
151,1168,"The oldest SJS patient's medical laboratory work was completed on what date, and what age was the patient when they initially arrived at the hospital?",thrombosis_prediction,challenging,"SELECT T1.Date, STRFTIME('%Y', T2.`First Date`) - STRFTIME('%Y', T2.Birthday),T2.Birthday FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'SJS' AND T2.Birthday IS NOT NULL ORDER BY T2.Birthday ASC LIMIT 1",7,"SELECT patient.birthday, laboratory.date, patient.age FROM patient, laboratory WHERE patient.id = laboratory.id ORDER BY patient.age DESC LIMIT 1
SELECT patient.birthday, laboratory.date, patient.age FROM patient, laboratory WHERE patient.id = laboratory.id ORDER BY patient.age DESC LIMIT 1
SELECT patient.birthday, patient.admission, laboratory.date, laboratory.age FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.admission = (SELECT MAX(admission) FROM patient) AND laboratory.date = (SELECT MAX(date) FROM laboratory) AND laboratory.age = (SELECT MAX(age) FROM laboratory)
SELECT patient.birthday, laboratory.date, patient.age FROM patient, laboratory WHERE patient.id = laboratory.id ORDER BY patient.age DESC LIMIT 1
SELECT patient.birthday, laboratory.date, patient.age FROM patient, laboratory WHERE patient.id = laboratory.id ORDER BY patient.age DESC LIMIT 1
SELECT patient.birthday, laboratory.date, patient.age FROM patient, laboratory WHERE patient.id = laboratory.id ORDER BY patient.age DESC LIMIT 1
SELECT patient.birthday, laboratory.date, patient.age FROM patient, laboratory WHERE patient.id = laboratory.id AND patient.age = (SELECT MAX(patient.age) FROM patient) AND laboratory.date = (SELECT MAX(laboratory.date) FROM laboratory)","SELECT patient.birthday, laboratory.date, patient.age FROM patient, laboratory WHERE patient.id = laboratory.id ORDER BY patient.age DESC LIMIT 1",0.0
152,1451,"Among the members who incurred expenses in more than one event, who paid the most amount?",student_club,challenging,SELECT T2.member_id FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN budget AS T3 ON T1.link_to_budget = T3.budget_id INNER JOIN event AS T4 ON T3.link_to_event = T4.event_id GROUP BY T2.member_id HAVING COUNT(DISTINCT T4.event_id) > 1 ORDER BY SUM(T1.cost) DESC LIMIT 1,7,"SELECT member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major FROM member WHERE member_id IN (     SELECT link_to_member     FROM expense     GROUP BY link_to_member     HAVING COUNT(*) > 1 ) ORDER BY SUM(cost) DESC LIMIT 1
SELECT member.first_name, member.last_name, SUM(expense.cost) AS total_expenses FROM member JOIN expense ON member.member_id = expense.link_to_member GROUP BY member.member_id HAVING COUNT(DISTINCT expense.link_to_event) > 1 ORDER BY total_expenses DESC LIMIT 1
SELECT member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major FROM member WHERE member_id IN (     SELECT link_to_member     FROM expense     GROUP BY link_to_member     HAVING COUNT(*) > 1 ) ORDER BY SUM(cost) DESC LIMIT 1
SELECT member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major FROM member WHERE member_id IN (     SELECT link_to_member     FROM expense     GROUP BY link_to_member     HAVING COUNT(*) > 1 ) ORDER BY SUM(cost) DESC LIMIT 1
SELECT member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major FROM member WHERE member_id IN (     SELECT link_to_member     FROM expense     GROUP BY link_to_member     HAVING COUNT(*) > 1 ) ORDER BY SUM(cost) DESC LIMIT 1
SELECT member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major FROM member WHERE member_id IN (     SELECT link_to_member     FROM expense     GROUP BY link_to_member     HAVING COUNT(*) > 1 ) ORDER BY SUM(cost) DESC LIMIT 1
SELECT member.first_name, member.last_name, SUM(expense.cost) AS total_expenses FROM member JOIN expense ON member.member_id = expense.link_to_member GROUP BY member.member_id HAVING COUNT(DISTINCT expense.link_to_event) > 1 ORDER BY total_expenses DESC LIMIT 1","SELECT member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major FROM member WHERE member_id IN (     SELECT link_to_member     FROM expense     GROUP BY link_to_member     HAVING COUNT(*) > 1 ) ORDER BY SUM(cost) DESC LIMIT 1",0.0
153,1187,How many patients who were examined between 1987/7/6 and 1996/1/31 had a GPT level greater than 30 and an ALB level less than 4? List them by their ID.,thrombosis_prediction,moderate,SELECT DISTINCT ID FROM Laboratory WHERE Date BETWEEN '1987-07-06' AND '1996-01-31' AND GPT > 30 AND ALB < 4,7,"SELECT patient.id, patient.sex, patient.birthday, patient.description, patient.first date, patient.admission, patient.diagnosis, laboratory.id, laboratory.date, laboratory.got, laboratory.gpt, laboratory.ldh, laboratory.alp, laboratory.tp, laboratory.alb, laboratory.ua, laboratory.un, laboratory.cre, laboratory.t-bil, laboratory.t-cho, laboratory.tg, laboratory.cpk, laboratory.glu, laboratory.wbc, laboratory.rbc, laboratory.hgb, laboratory.hct, laboratory.plt, laboratory.pt, laboratory.aptt, laboratory.fg, laboratory.pic, laboratory.tat, laboratory.tat2, laboratory.u-pro, laboratory.igg, laboratory.iga, laboratory.igm, laboratory.crp, laboratory.ra, laboratory.rf, laboratory.c3, laboratory.c4, laboratory.rnp, laboratory.sm, laboratory.sc170, laboratory.ssa, laboratory.ssb, laboratory.centromea, laboratory.dna, laboratory.dna-ii FROM patient, laboratory WHERE patient.id = laboratory.id AND patient.first date >= '1987/7/6' AND patient.first date <= '1996/1/31' AND laboratory.gpt > 30 AND laboratory.alb < 4 ORDER BY patient.id
SELECT patient.id, patient.sex, patient.birthday, patient.description, patient.first_date, patient.admission, patient.diagnosis, laboratory.id, laboratory.date, laboratory.got, laboratory.gpt, laboratory.ldh, laboratory.alp, laboratory.tp, laboratory.alb, laboratory.ua, laboratory.un, laboratory.cre, laboratory.t_bil, laboratory.t_cho, laboratory.tg, laboratory.cpk, laboratory.glu, laboratory.wbc, laboratory.rbc, laboratory.hgb, laboratory.hct, laboratory.plt, laboratory.pt, laboratory.aptt, laboratory.fg, laboratory.pic, laboratory.tat, laboratory.tat2, laboratory.u_pro, laboratory.igg, laboratory.iga, laboratory.igm, laboratory.crp, laboratory.ra, laboratory.rf, laboratory.c3, laboratory.c4, laboratory.rnp, laboratory.sm, laboratory.sc170, laboratory.ssa, laboratory.ssb, laboratory.centromea, laboratory.dna, laboratory.dna_ii FROM patient, laboratory WHERE patient.id = laboratory.id AND patient.first_date >= '1987/7/6' AND patient.first_date <= '1996/1/31' AND laboratory.gpt > 30 AND laboratory.alb < 4 ORDER BY patient.
SELECT patient.id, patient.sex, patient.birthday, patient.description, patient.first date, patient.admission, patient.diagnosis, laboratory.id, laboratory.date, laboratory.got, laboratory.gpt, laboratory.ldh, laboratory.alp, laboratory.tp, laboratory.alb, laboratory.ua, laboratory.un, laboratory.cre, laboratory.t-bil, laboratory.t-cho, laboratory.tg, laboratory.cpk, laboratory.glu, laboratory.wbc, laboratory.rbc, laboratory.hgb, laboratory.hct, laboratory.plt, laboratory.pt, laboratory.aptt, laboratory.fg, laboratory.pic, laboratory.tat, laboratory.tat2, laboratory.u-pro, laboratory.igg, laboratory.iga, laboratory.igm, laboratory.crp, laboratory.ra, laboratory.rf, laboratory.c3, laboratory.c4, laboratory.rnp, laboratory.sm, laboratory.sc170, laboratory.ssa, laboratory.ssb, laboratory.centromea, laboratory.dna, laboratory.dna-ii FROM patient, laboratory WHERE patient.id = laboratory.id AND patient.first date >= '1987/7/6' AND patient.first date <= '1996/1/31' AND laboratory.gpt > 30 AND laboratory.alb < 4 ORDER BY patient.id
SELECT patient.id, patient.sex, patient.birthday, patient.description, patient.first_date, patient.admission, patient.diagnosis, laboratory.id, laboratory.date, laboratory.got, laboratory.gpt, laboratory.ldh, laboratory.alp, laboratory.tp, laboratory.alb, laboratory.ua, laboratory.un, laboratory.cre, laboratory.t-bil, laboratory.t-cho, laboratory.tg, laboratory.cpk, laboratory.glu, laboratory.wbc, laboratory.rbc, laboratory.hgb, laboratory.hct, laboratory.plt, laboratory.pt, laboratory.aptt, laboratory.fg, laboratory.pic, laboratory.tat, laboratory.tat2, laboratory.u-pro, laboratory.igg, laboratory.iga, laboratory.igm, laboratory.crp, laboratory.ra, laboratory.rf, laboratory.c3, laboratory.c4, laboratory.rnp, laboratory.sm, laboratory.sc170, laboratory.ssa, laboratory.ssb, laboratory.centromea, laboratory.dna, laboratory.dna-ii FROM patient, laboratory WHERE patient.id = laboratory.id AND patient.first_date >= '1987/7/6' AND patient.first_date <= '1996/1/31' AND laboratory.gpt > 30 AND laboratory.alb < 4 ORDER BY patient.
SELECT patient.id, patient.sex, patient.birthday, patient.description, patient.first date, patient.admission, patient.diagnosis, laboratory.id, laboratory.date, laboratory.got, laboratory.gpt, laboratory.ldh, laboratory.alp, laboratory.tp, laboratory.alb, laboratory.ua, laboratory.un, laboratory.cre, laboratory.t-bil, laboratory.t-cho, laboratory.tg, laboratory.cpk, laboratory.glu, laboratory.wbc, laboratory.rbc, laboratory.hgb, laboratory.hct, laboratory.plt, laboratory.pt, laboratory.aptt, laboratory.fg, laboratory.pic, laboratory.tat, laboratory.tat2, laboratory.u-pro, laboratory.igg, laboratory.iga, laboratory.igm, laboratory.crp, laboratory.ra, laboratory.rf, laboratory.c3, laboratory.c4, laboratory.rnp, laboratory.sm, laboratory.sc170, laboratory.ssa, laboratory.ssb, laboratory.centromea, laboratory.dna, laboratory.dna-ii FROM patient, laboratory WHERE patient.id = laboratory.id AND patient.first date >= '1987/7/6' AND patient.first date <= '1996/1/31' AND laboratory.gpt > 30 AND laboratory.alb < 4 ORDER BY patient.id
SELECT patient.id, patient.sex, patient.birthday, patient.description, patient.first date, patient.admission, patient.diagnosis, laboratory.id, laboratory.date, laboratory.got, laboratory.gpt, laboratory.ldh, laboratory.alp, laboratory.tp, laboratory.alb, laboratory.ua, laboratory.un, laboratory.cre, laboratory.t-bil, laboratory.t-cho, laboratory.tg, laboratory.cpk, laboratory.glu, laboratory.wbc, laboratory.rbc, laboratory.hgb, laboratory.hct, laboratory.plt, laboratory.pt, laboratory.aptt, laboratory.fg, laboratory.pic, laboratory.tat, laboratory.tat2, laboratory.u-pro, laboratory.igg, laboratory.iga, laboratory.igm, laboratory.crp, laboratory.ra, laboratory.rf, laboratory.c3, laboratory.c4, laboratory.rnp, laboratory.sm, laboratory.sc170, laboratory.ssa, laboratory.ssb, laboratory.centromea, laboratory.dna, laboratory.dna-ii FROM patient, laboratory WHERE patient.id = laboratory.id AND patient.first date >= '1987/7/6' AND patient.first date <= '1996/1/31' AND laboratory.gpt > 30 AND laboratory.alb < 4 ORDER BY patient.id
SELECT patient.id FROM patient INNER JOIN examination ON patient.id = examination.id INNER JOIN laboratory ON examination.id = laboratory.id WHERE examination.date BETWEEN '1987/7/6' AND '1996/1/31' AND laboratory.gpt > 30 AND laboratory.alb < 4 ORDER BY patient.id","SELECT patient.id, patient.sex, patient.birthday, patient.description, patient.first date, patient.admission, patient.diagnosis, laboratory.id, laboratory.date, laboratory.got, laboratory.gpt, laboratory.ldh, laboratory.alp, laboratory.tp, laboratory.alb, laboratory.ua, laboratory.un, laboratory.cre, laboratory.t-bil, laboratory.t-cho, laboratory.tg, laboratory.cpk, laboratory.glu, laboratory.wbc, laboratory.rbc, laboratory.hgb, laboratory.hct, laboratory.plt, laboratory.pt, laboratory.aptt, laboratory.fg, laboratory.pic, laboratory.tat, laboratory.tat2, laboratory.u-pro, laboratory.igg, laboratory.iga, laboratory.igm, laboratory.crp, laboratory.ra, laboratory.rf, laboratory.c3, laboratory.c4, laboratory.rnp, laboratory.sm, laboratory.sc170, laboratory.ssa, laboratory.ssb, laboratory.centromea, laboratory.dna, laboratory.dna-ii FROM patient, laboratory WHERE patient.id = laboratory.id AND patient.first date >= '1987/7/6' AND patient.first date <= '1996/1/31' AND laboratory.gpt > 30 AND laboratory.alb < 4 ORDER BY patient.id",0.0
154,656,Describe the display name of the parent ID for child post with the highest score.,codebase_community,simple,SELECT DisplayName FROM users WHERE Id = ( SELECT OwnerUserId FROM posts WHERE ParentId IS NOT NULL ORDER BY Score DESC LIMIT 1 ),7,"SELECT p.displayname FROM users p WHERE p.id = (SELECT u.parentid FROM posts u WHERE u.score = (SELECT MAX(score) FROM posts))
SELECT p.parentid, p.displayname FROM posts p WHERE p.score = (SELECT MAX(score) FROM posts WHERE posttypeid = 2) AND p.posttypeid = 2
SELECT p.parentid, p.displayname FROM posts p WHERE p.score = (SELECT MAX(score) FROM posts WHERE posttypeid = 2) AND p.posttypeid = 2
SELECT p.displayname FROM users p WHERE p.id = (SELECT u.parentid FROM posts u WHERE u.score = (SELECT MAX(score) FROM posts))
SELECT p.displayname FROM users p WHERE p.id = (SELECT u.parentid FROM posts u WHERE u.score = (SELECT MAX(u.score) FROM posts u))
SELECT p.displayname FROM users p WHERE p.id = (SELECT parentid FROM posts WHERE score = (SELECT MAX(score) FROM posts))
SELECT p.displayname FROM posts p JOIN (     SELECT parentid, MAX(score) AS max_score     FROM posts     WHERE posttypeid = 2     GROUP BY parentid ) max_scores ON p.id = max_scores.parentid WHERE p.posttypeid = 1",SELECT p.displayname FROM users p WHERE p.id = (SELECT u.parentid FROM posts u WHERE u.score = (SELECT MAX(score) FROM posts)),0.0
155,1031,"At present, calculate for the player's age who have a sprint speed of no less than 97 between 2013 to 2015.",european_football_2,challenging,"SELECT DISTINCT DATETIME() - T2.birthday age FROM Player_Attributes AS t1 INNER JOIN Player AS t2 ON t1.player_api_id = t2.player_api_id WHERE STRFTIME('%Y',t1.`date`) >= '2013' AND STRFTIME('%Y',t1.`date`) <= '2015' AND t1.sprint_speed >= 97",7,"NULL
SELECT player_attributes.player_fifa_api_id, player_attributes.player_api_id, player_attributes.date, player_attributes.overall_rating, player_attributes.potential, player_attributes.preferred_foot, player_attributes.attacking_work_rate, player_attributes.defensive_work_rate, player_attributes.crossing, player_attributes.finishing, player_attributes.heading_accuracy, player_attributes.short_passing, player_attributes.volleys, player_attributes.dribbling, player_attributes.curve, player_attributes.free_kick_accuracy, player_attributes.long_passing, player_attributes.ball_control, player_attributes.acceleration, player_attributes.sprint_speed, player_attributes.agility, player_attributes.reactions, player_attributes.balance, player_attributes.shot_power, player_attributes.jumping, player_attributes.stamina, player_attributes.strength, player_attributes.long_shots, player_attributes.aggression, player_attributes.interceptions, player_attributes.positioning, player_attributes.vision, player_attributes.penalties, player_attributes.marking, player_attributes.standing_tackle, player_attributes.sliding_tackle, player_attributes.gk_diving, player_attributes.gk_handling, player_attributes.gk_kicking, player_
SELECT player_attributes.player_fifa_api_id, player_attributes.player_api_id, player_attributes.date, player_attributes.overall_rating, player_attributes.potential, player_attributes.preferred_foot, player_attributes.attacking_work_rate, player_attributes.defensive_work_rate, player_attributes.crossing, player_attributes.finishing, player_attributes.heading_accuracy, player_attributes.short_passing, player_attributes.volleys, player_attributes.dribbling, player_attributes.curve, player_attributes.free_kick_accuracy, player_attributes.long_passing, player_attributes.ball_control, player_attributes.acceleration, player_attributes.sprint_speed, player_attributes.agility, player_attributes.reactions, player_attributes.balance, player_attributes.shot_power, player_attributes.jumping, player_attributes.stamina, player_attributes.strength, player_attributes.long_shots, player_attributes.aggression, player_attributes.interceptions, player_attributes.positioning, player_attributes.vision, player_attributes.penalties, player_attributes.marking, player_attributes.standing_tackle, player_attributes.sliding_tackle, player_attributes.gk_diving, player_attributes.gk_handling, player_attributes.gk_kicking, player_
NULL
NULL
SELECT player_attributes.player_fifa_api_id, player_attributes.player_api_id, player_attributes.date, player_attributes.overall_rating, player_attributes.potential, player_attributes.preferred_foot, player_attributes.attacking_work_rate, player_attributes.defensive_work_rate, player_attributes.crossing, player_attributes.finishing, player_attributes.heading_accuracy, player_attributes.short_passing, player_attributes.volleys, player_attributes.dribbling, player_attributes.curve, player_attributes.free_kick_accuracy, player_attributes.long_passing, player_attributes.ball_control, player_attributes.acceleration, player_attributes.sprint_speed, player_attributes.agility, player_attributes.reactions, player_attributes.balance, player_attributes.shot_power, player_attributes.jumping, player_attributes.stamina, player_attributes.strength, player_attributes.long_shots, player_attributes.aggression, player_attributes.interceptions, player_attributes.positioning, player_attributes.vision, player_attributes.penalties, player_attributes.marking, player_attributes.standing_tackle, player_attributes.sliding_tackle, player_attributes.gk_diving, player_attributes.gk_handling, player_attributes.gk_kicking, player_
NULL",,0.0
156,505,"Show the Simplified Chinese translation of the name of the set ""Mirrodin""?",card_games,moderate,SELECT translation FROM set_translations WHERE setCode IN ( SELECT code FROM sets WHERE name = 'Mirrodin' ) AND language = 'Chinese Simplified',7,"SELECT translation FROM set_translations WHERE setcode = (SELECT code FROM sets WHERE name = 'Mirrodin') AND language = 'Simplified Chinese'
SELECT translation FROM set_translations WHERE setcode = (SELECT code FROM sets WHERE name = 'Mirrodin') AND language = 'Simplified Chinese'
SELECT translation FROM set_translations WHERE setcode = (SELECT code FROM sets WHERE name = 'Mirrodin') AND language = 'Simplified Chinese'
SELECT translation FROM set_translations WHERE setcode = (SELECT code FROM sets WHERE name = 'Mirrodin') AND language = 'Simplified Chinese'
SELECT translation FROM set_translations WHERE setcode = (SELECT code FROM sets WHERE name = 'Mirrodin') AND language = 'Simplified Chinese'
SELECT translation FROM set_translations WHERE setcode = (SELECT code FROM sets WHERE name = 'Mirrodin') AND language = 'Simplified Chinese'
SELECT translation FROM set_translations WHERE setcode = (SELECT code FROM sets WHERE name = 'Mirrodin') AND language = 'Simplified Chinese'",SELECT translation FROM set_translations WHERE setcode = (SELECT code FROM sets WHERE name = 'Mirrodin') AND language = 'Simplified Chinese',0.0
157,1107,When was the first time did Kevin Constant have his highest crossing score? Give the date.,european_football_2,moderate,"SELECT `date` FROM ( SELECT t2.crossing, t2.`date` FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_fifa_api_id = t2.player_fifa_api_id WHERE t1.player_name = 'Kevin Constant' ORDER BY t2.crossing DESC) ORDER BY date DESC LIMIT 1",7,"SELECT date FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Kevin Constant') AND crossing = (SELECT MAX(crossing) FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Kevin Constant'))
SELECT date FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Kevin Constant') AND crossing = (SELECT MAX(crossing) FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Kevin Constant'))
SELECT date FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Kevin Constant') ORDER BY date ASC LIMIT 1
SELECT date FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Kevin Constant') AND crossing = (SELECT MAX(crossing) FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Kevin Constant'))
SELECT date FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Kevin Constant') AND crossing = (SELECT MAX(crossing) FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Kevin Constant'))
SELECT date FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Kevin Constant') AND crossing = (SELECT MAX(crossing) FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Kevin Constant'))
SELECT date FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Kevin Constant') ORDER BY date ASC LIMIT 1",SELECT date FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Kevin Constant') AND crossing = (SELECT MAX(crossing) FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Kevin Constant')),0.0
158,31,What is the eligible free rate of the 10th and 11th schools with the highest enrolment for students in grades 1 through 12?,california_schools,moderate,"SELECT CAST(`Free Meal Count (K-12)` AS REAL) / `Enrollment (K-12)` FROM frpm ORDER BY `Enrollment (K-12)` DESC LIMIT 9, 2",7,"SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-
SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-
SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-
SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-
SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM schools WHERE cdscode = '10th' AND academic year = '11th' AND county code = '12th' AND district code = '13th' AND school code = '14th' AND county name = '15th' AND district name = '16th' AND school name = '17th' AND district type = '18th' AND school type = '19th' AND educational option type = '20th' AND nslp provision status = '21st' AND charter school
SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-
SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-","SELECT cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-17), free meal count (ages 5-17), percent (%) eligible free (ages 5-17), frpm count (ages 5-17), percent (%) eligible frpm (ages 5-17), 2013-14 calpads fall 1 certification status FROM cdscode, academic year, county code, district code, school code, county name, district name, school name, district type, school type, educational option type, nslp provision status, charter school (y/n), charter school number, charter funding type, irc, low grade, high grade, enrollment (k-12), free meal count (k-12), percent (%) eligible free (k-12), frpm count (k-12), percent (%) eligible frpm (k-12), enrollment (ages 5-",0.0
159,394,How many white bordered cards are powerful?,card_games,simple,SELECT COUNT(id) FROM cards WHERE borderColor = 'white' AND cardKingdomId IS NOT NULL AND cardKingdomFoilId IS NOT NULL,7,"SELECT COUNT(*) FROM cards WHERE bordercolor = 'W'
SELECT COUNT(*) FROM cards WHERE bordercolor = 'W'
SELECT COUNT(*) FROM cards WHERE bordercolor = 'W'
SELECT COUNT(*) FROM cards WHERE bordercolor = 'White' AND power IS NOT NULL
SELECT COUNT(*) FROM cards WHERE bordercolor = 'W'
SELECT COUNT(*) FROM cards WHERE bordercolor = 'white' AND (     SELECT COUNT(*)     FROM rulings     WHERE rulings.uuid = cards.uuid     AND rulings.text LIKE '%powerful%' ) > 0
SELECT COUNT(*) FROM cards WHERE bordercolor = 'White' AND power IS NOT NULL AND toughness IS NOT NULL",SELECT COUNT(*) FROM cards WHERE bordercolor = 'W',0.0
160,230,What are the elements of the toxicology and label of molecule TR060?,toxicology,challenging,"SELECT DISTINCT T1.element, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR060'",7,"SELECT * FROM molecule WHERE label = 'TR060'
SELECT * FROM molecule WHERE label = 'TR060'
SELECT * FROM molecule WHERE label = 'TR060'
SELECT * FROM molecule WHERE label = 'TR060'
SELECT * FROM molecule WHERE label = 'TR060'
SELECT * FROM molecule WHERE label = 'TR060'
SELECT * FROM molecule WHERE label = 'TR060'",SELECT * FROM molecule WHERE label = 'TR060',0.0
161,715,"In comments with score between 1 to 5, list down the display names of the users with 0 down votes.",codebase_community,simple,SELECT T2.DisplayName FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Score BETWEEN 1 AND 5 AND T2.DownVotes = 0,7,"SELECT userdisplayname FROM comments WHERE score BETWEEN 1 AND 5 AND down_votes = 0
SELECT userdisplayname FROM comments WHERE score BETWEEN 1 AND 5 AND downvotes = 0
SELECT userdisplayname FROM comments WHERE score BETWEEN 1 AND 5 AND downvotes = 0
SELECT userdisplayname FROM comments WHERE score BETWEEN 1 AND 5 AND downvotes = 0
SELECT userdisplayname FROM comments WHERE score BETWEEN 1 AND 5 AND downvotes = 0
SELECT userdisplayname FROM comments WHERE score BETWEEN 1 AND 5 AND downvotes = 0
SELECT userdisplayname FROM comments WHERE score BETWEEN 1 AND 5 AND downvotes = 0",SELECT userdisplayname FROM comments WHERE score BETWEEN 1 AND 5 AND downvotes = 0,0.0
162,207,What elements are in a double type bond?,toxicology,challenging,SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id WHERE T2.bond_type = '=',7,"SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'double'
SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'double'
SELECT atom.element FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id INNER JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'double'
SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'double'
SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'double'
SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'double'
SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'double'",SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'double',0.0
163,494,For all cards illustrated by Jim Pavelec. and describe the text of the ruling of these cards. Do these cards have missing or degraded properties and values.,card_games,challenging,"SELECT T2.text , CASE WHEN T1.hasContentWarning = 1 THEN 'YES' ELSE 'NO' END FROM cards AS T1 INNER JOIN rulings AS T2 ON T2.uuid = T1.uuid WHERE T1.artist = 'Jim Pavelec'",7,"SELECT cards.name, cards.text, rulings.text FROM cards JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.artist = 'Jim Pavelec'
SELECT cards.name, cards.text, rulings.text FROM cards JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.artist = 'Jim Pavelec' AND rulings.text IS NOT NULL AND (cards.bordercolor IS NULL OR cards.bordercolor = '') AND (cards.coloridentity IS NULL OR cards.coloridentity = '') AND (cards.colorindicator IS NULL OR cards.colorindicator = '') AND (cards.colors IS NULL OR cards.colors = '') AND (cards.convertedmanacost IS NULL OR cards.convertedmanacost = '') AND (cards.dueldeck IS NULL OR cards.dueldeck = '') AND (cards.edhrecrank IS NULL OR cards.edhrecrank = '') AND (cards.faceconvertedmanacost IS NULL OR cards.faceconvertedmanacost = '') AND (cards.facename IS NULL OR cards.facename = '') AND (cards.flavorname IS NULL OR cards.flavorname = '') AND (cards.flavortext IS NULL OR cards.flavortext = '') AND (cards.frameeffects IS NULL OR cards.frameeffects = '') AND (cards.frameversion IS NULL OR cards.frameversion = '') AND (cards.hand IS NULL OR cards.hand = '') AND (cards.hasalternativedecklimit IS NULL OR cards.hasalternativedecklimit = '') AND (cards
SELECT cards.name, rulings.text FROM cards JOIN rulings ON cards.id = rulings.uuid WHERE cards.artist = 'Jim Pavelec'
SELECT cards.name, cards.text, rulings.text FROM cards JOIN rulings ON cards.id = rulings.id WHERE cards.artist = 'Jim Pavelec'
SELECT cards.name, rulings.text FROM cards JOIN rulings ON cards.id = rulings.id WHERE cards.artist = 'Jim Pavelec'
SELECT cards.name, cards.text, rulings.text FROM cards JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.artist = 'Jim Pavelec'
SELECT cards.name, cards.text, rulings.text FROM cards JOIN rulings ON cards.id = rulings.id WHERE cards.artist = 'Jim Pavelec' AND rulings.text LIKE '%missing or degraded%'","SELECT cards.name, cards.text, rulings.text FROM cards JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.artist = 'Jim Pavelec'",0.0
164,240,"List all the elements of the toxicology of the molecule ""TR004"".",toxicology,challenging,SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR004',7,"SELECT t.toxicology_id, t.molecule_id, t.toxicology_type, t.toxicology_value, t.toxicology_unit, t.toxicology_source, t.toxicology_comment, t.toxicology_date, t.toxicology_date_type, t.toxicology_date_unit, t.toxicology_date_source, t.toxicology_date_comment, t.toxicology_date_type_unit, t.toxicology_date_type_source, t.toxicology_date_type_comment, t.toxicology_date_type_unit_source, t.toxicology_date_type_unit_comment, t.toxicology_date_type_unit_source_comment, t.toxicology_date_type_unit_source_comment_comment, t.toxicology_date_type_unit_source_comment_comment_comment, t.toxicology_date_type_unit_source_comment_comment_comment_comment, t.toxicology_date_type_unit_source_comment_comment_comment_comment_comment, t.toxicology_date_type_unit_source_comment_comment_comment_comment_comment_comment, t.toxicology_date_type_unit_source_comment_comment_comment_comment_comment_comment_comment, t
SELECT * FROM toxicology WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR004')
SELECT * FROM toxicology WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR004')
SELECT * FROM toxicology WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR004')
SELECT * FROM toxicology WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR004')
SELECT t.toxicology_id, t.toxicology_type, t.toxicology_value, t.toxicology_unit, t.toxicology_source, t.toxicology_comment, t.toxicology_date, t.toxicology_date_type, t.toxicology_date_comment, t.toxicology_date_source, t.toxicology_date_unit, t.toxicology_date_value, t.toxicology_date_value_type, t.toxicology_date_value_comment, t.toxicology_date_value_source, t.toxicology_date_value_unit, t.toxicology_date_value_value, t.toxicology_date_value_value_type, t.toxicology_date_value_value_comment, t.toxicology_date_value_value_source, t.toxicology_date_value_value_unit, t.toxicology_date_value_value_value, t.toxicology_date_value_value_value_type, t.toxicology_date_value_value_value_comment, t.toxicology_date_value_value_value_source, t.toxicology_date_value_value_value_unit, t.toxicology_date_value_value_value_value, t.toxicology_date_value_
SELECT * FROM toxicology WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR004')",SELECT * FROM toxicology WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR004'),0.0
165,818,"Among the bad superheroes, what is the percentage of female superheroes?",superhero,challenging,SELECT CAST(COUNT(CASE WHEN T3.gender = 'Female' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.alignment = 'Bad',7,"SELECT (COUNT(DISTINCT(superhero.id)) * 100.0 / (SELECT COUNT(DISTINCT(superhero.id)) FROM superhero)) FROM superhero JOIN gender ON superhero.gender_id = gender.id WHERE gender.gender = 'Female' AND alignment.alignment = 'Bad' AND alignment.id = superhero.alignment_id
SELECT (COUNT(DISTINCT(superhero.id)) * 100.0 / (SELECT COUNT(DISTINCT(superhero.id)) FROM superhero)) FROM superhero JOIN gender ON superhero.gender_id = gender.id WHERE gender.gender = 'Female' AND alignment.alignment = 'Bad' AND alignment.id = superhero.alignment_id
SELECT (COUNT(DISTINCT(superhero.id)) * 100.0 / (SELECT COUNT(DISTINCT(superhero.id)) FROM superhero WHERE alignment.alignment = 'bad')) AS percentage FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id JOIN gender ON superhero.gender_id = gender.id WHERE alignment.alignment = 'bad' AND gender.gender = 'Female'
SELECT (COUNT(DISTINCT(superhero.id)) * 100.0 / (SELECT COUNT(DISTINCT(superhero.id)) FROM superhero)) FROM superhero JOIN gender ON gender.id = superhero.gender_id WHERE gender.gender = 'Female' AND alignment.alignment = 'Bad' AND alignment.id = superhero.alignment_id
SELECT (COUNT(DISTINCT(superhero.id)) * 100.0 / (SELECT COUNT(DISTINCT(superhero.id)) FROM superhero)) FROM superhero JOIN gender ON superhero.gender_id = gender.id WHERE gender.gender = 'Female' AND alignment.alignment = 'Bad' AND alignment.id = superhero.alignment_id
SELECT (COUNT(DISTINCT(superhero.id)) * 100.0 / (SELECT COUNT(DISTINCT(superhero.id)) FROM superhero)) FROM superhero JOIN gender ON superhero.gender_id = gender.id WHERE gender.gender = 'Female' AND alignment.alignment = 'Bad' AND alignment.id = superhero.alignment_id
SELECT (COUNT(DISTINCT(superhero.id)) * 100.0 / (SELECT COUNT(DISTINCT(superhero.id)) FROM superhero)) FROM superhero JOIN gender ON superhero.gender_id = gender.id WHERE gender.gender = 'Female' AND alignment.alignment = 'Bad' AND alignment.id = superhero.alignment_id",SELECT (COUNT(DISTINCT(superhero.id)) * 100.0 / (SELECT COUNT(DISTINCT(superhero.id)) FROM superhero)) FROM superhero JOIN gender ON superhero.gender_id = gender.id WHERE gender.gender = 'Female' AND alignment.alignment = 'Bad' AND alignment.id = superhero.alignment_id,0.0
166,1507,Please list the disparate time of the transactions taken place in the gas stations from chain no. 11.,debit_card_specializing,simple,SELECT DISTINCT T1.Time FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.ChainID = 11,7,"SELECT DISTINCT time FROM transactions_1k WHERE gasstationid IN (SELECT gasstationid FROM gasstations WHERE chainid = 11)
SELECT DISTINCT time FROM transactions_1k WHERE gasstationid IN (SELECT gasstationid FROM gasstations WHERE chainid = 11)
SELECT DISTINCT time FROM transactions_1k WHERE gasstationid IN (SELECT gasstationid FROM gasstations WHERE chainid = 11)
SELECT DISTINCT time FROM transactions_1k WHERE gasstationid IN (SELECT gasstationid FROM gasstations WHERE chainid = 11)
SELECT DISTINCT time FROM transactions_1k WHERE gasstationid IN (SELECT gasstationid FROM gasstations WHERE chainid = 11)
SELECT DISTINCT time FROM transactions_1k WHERE gasstationid IN (SELECT gasstationid FROM gasstations WHERE chainid = 11)
SELECT DISTINCT time FROM transactions_1k WHERE gasstationid IN (SELECT gasstationid FROM gasstations WHERE chainid = 11)",SELECT DISTINCT time FROM transactions_1k WHERE gasstationid IN (SELECT gasstationid FROM gasstations WHERE chainid = 11),1.0
167,935,How many drivers managed to finish the race in the 2008 Australian Grand Prix?,formula_1,simple,SELECT COUNT(T2.driverId) FROM races AS T1 INNER JOIN results AS T2 ON T2.raceId = T1.raceId WHERE T1.name = 'Australian Grand Prix' AND T1.year = 2008 AND T2.time IS NOT NULL,7,"SELECT COUNT(*) FROM results WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND position = 1
SELECT COUNT(*) FROM results WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND position = '1'
SELECT COUNT(*) FROM results WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND position = 1
SELECT COUNT(*) FROM results WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND position = 1
SELECT COUNT(*) FROM results WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND position IS NOT NULL
SELECT COUNT(*) FROM results WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND position IS NOT NULL
SELECT COUNT(*) FROM results WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix')",SELECT COUNT(*) FROM results WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND position = 1,0.0
168,834,"Among all superheroes created by George Lucas, identify the percentage of female superheroes.",superhero,challenging,SELECT CAST(COUNT(CASE WHEN T3.gender = 'Female' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.publisher_name = 'George Lucas',7,"SELECT (COUNT(DISTINCT(superhero.id)) * 100.0 / (SELECT COUNT(DISTINCT(superhero.id)) FROM superhero)) FROM superhero JOIN gender ON superhero.gender_id = gender.id WHERE gender.gender = 'Female'
SELECT (COUNT(DISTINCT(superhero.id)) * 100.0) / (SELECT COUNT(DISTINCT(superhero.id)) FROM superhero) FROM superhero JOIN gender ON superhero.gender_id = gender.id WHERE gender.gender = 'Female'
SELECT (COUNT(DISTINCT(superhero.id)) * 100.0 / (SELECT COUNT(DISTINCT(superhero.id)) FROM superhero)) FROM superhero JOIN gender ON superhero.gender_id = gender.id WHERE gender.gender = 'Female'
SELECT (COUNT(DISTINCT(superhero.id)) * 100.0) / (SELECT COUNT(DISTINCT(superhero.id)) FROM superhero) FROM superhero JOIN gender ON superhero.gender_id = gender.id WHERE gender.gender = 'Female'
SELECT (COUNT(DISTINCT(superhero.id)) * 100.0 / (SELECT COUNT(DISTINCT(superhero.id)) FROM superhero)) FROM superhero JOIN gender ON superhero.gender_id = gender.id WHERE gender.gender = 'Female'
SELECT (COUNT(CASE WHEN gender_id = 2 THEN 1 END) * 100.0 / COUNT(*)) AS percentage_female_superheroes FROM superhero
SELECT (COUNT(DISTINCT(superhero.id)) * 100.0 / (SELECT COUNT(DISTINCT(superhero.id)) FROM superhero)) FROM superhero JOIN gender ON superhero.gender_id = gender.id WHERE gender.gender = 'Female'",SELECT (COUNT(DISTINCT(superhero.id)) * 100.0 / (SELECT COUNT(DISTINCT(superhero.id)) FROM superhero)) FROM superhero JOIN gender ON superhero.gender_id = gender.id WHERE gender.gender = 'Female',0.0
169,1040,List the top 10 players' names whose heights are above 180 in descending order of average heading accuracy.,european_football_2,moderate,SELECT t1.player_name FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.height > 180 GROUP BY t1.id ORDER BY CAST(SUM(t2.heading_accuracy) AS REAL) / COUNT(t2.`player_fifa_api_id`) DESC LIMIT 10,7,"SELECT player_name, AVG(heading_accuracy) AS avg_heading_accuracy FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE height > 180 GROUP BY player_name ORDER BY avg_heading_accuracy DESC LIMIT 10
NULL
SELECT player_name, AVG(heading_accuracy) AS average_heading_accuracy FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE height > 180 GROUP BY player_name ORDER BY average_heading_accuracy DESC LIMIT 10
SELECT player_name, AVG(heading_accuracy) AS avg_heading_accuracy FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE height > 180 GROUP BY player_name ORDER BY avg_heading_accuracy DESC LIMIT 10
NULL
SELECT player_name, AVG(heading_accuracy) AS average_heading_accuracy FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE height > 180 GROUP BY player_name ORDER BY average_heading_accuracy DESC LIMIT 10
SELECT player_name, AVG(heading_accuracy) AS avg_heading_accuracy FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE height > 180 GROUP BY player_name ORDER BY avg_heading_accuracy DESC LIMIT 10","SELECT player_name, AVG(heading_accuracy) AS avg_heading_accuracy FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE height > 180 GROUP BY player_name ORDER BY avg_heading_accuracy DESC LIMIT 10",0.0
170,744,"Between DC and Marvel Comics, which publisher has published more superheroes? Find the difference in the number of superheroes they have published.",superhero,challenging,SELECT SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id,7,"SELECT publisher_name, COUNT(*) AS superhero_count FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id GROUP BY publisher_name ORDER BY superhero_count DESC LIMIT 1
NULL
NULL
NULL
SELECT publisher_name, COUNT(*) AS superhero_count FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id GROUP BY publisher_name ORDER BY superhero_count DESC LIMIT 1
SELECT publisher_name, COUNT(*) AS superhero_count FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id GROUP BY publisher_name ORDER BY superhero_count DESC LIMIT 1
SELECT publisher_name, COUNT(*) AS superhero_count FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id GROUP BY publisher_name ORDER BY superhero_count DESC LIMIT 1","SELECT publisher_name, COUNT(*) AS superhero_count FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id GROUP BY publisher_name ORDER BY superhero_count DESC LIMIT 1",0.0
171,1457,Give the full name and contact number of members who had to spend more than average on each expense.,student_club,challenging,"SELECT DISTINCT T3.first_name, T3.last_name, T3.phone FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN member AS T3 ON T3.member_id = T1.link_to_member WHERE T1.cost > ( SELECT AVG(T1.cost) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN member AS T3 ON T3.member_id = T1.link_to_member )",7,"SELECT member.first_name, member.last_name, member.phone FROM member JOIN expense ON member.member_id = expense.link_to_member WHERE expense.cost > (SELECT AVG(cost) FROM expense) GROUP BY member.member_id
SELECT member.first_name, member.last_name, member.phone FROM member JOIN expense ON member.member_id = expense.link_to_member GROUP BY expense.link_to_member HAVING SUM(expense.cost) > (SELECT AVG(cost) FROM expense)
SELECT member.first_name, member.last_name, member.phone FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id JOIN budget ON event.event_id = budget.link_to_event WHERE budget.spent > (SELECT AVG(spent) FROM budget) GROUP BY member.member_id
SELECT member.first_name, member.last_name, member.phone FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id JOIN budget ON event.event_id = budget.link_to_event WHERE budget.spent > (SELECT AVG(spent) FROM budget) GROUP BY member.member_id
SELECT member.first_name, member.last_name, member.phone FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id JOIN budget ON event.event_id = budget.link_to_event WHERE budget.spent > (SELECT AVG(spent) FROM budget)
SELECT member.first_name, member.last_name, member.phone FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id JOIN budget ON event.event_id = budget.link_to_event WHERE budget.spent > (SELECT AVG(spent) FROM budget) GROUP BY member.member_id
SELECT member.first_name, member.last_name, member.phone FROM member JOIN expense ON member.member_id = expense.link_to_member GROUP BY expense.link_to_member HAVING SUM(expense.cost) > (SELECT AVG(cost) FROM expense)","SELECT member.first_name, member.last_name, member.phone FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id JOIN budget ON event.event_id = budget.link_to_event WHERE budget.spent > (SELECT AVG(spent) FROM budget) GROUP BY member.member_id",1.0
172,1036,List the long name of teams with above-average build-up play passing in 2012.,european_football_2,challenging,"SELECT DISTINCT t4.team_long_name FROM Team_Attributes AS t3 INNER JOIN Team AS t4 ON t3.team_api_id = t4.team_api_id WHERE SUBSTR(t3.`date`, 1, 4) = '2012' AND t3.buildUpPlayPassing > ( SELECT CAST(SUM(t2.buildUpPlayPassing) AS REAL) / COUNT(t1.id) FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE STRFTIME('%Y',t2.`date`) = '2012')",7,"SELECT team_long_name FROM team WHERE team_api_id IN (SELECT team_api_id FROM match WHERE date BETWEEN '2012-01-01' AND '2012-12-31' AND home_team_goal > away_team_goal) AND team_api_id IN (SELECT team_api_id FROM match WHERE date BETWEEN '2012-01-01' AND '2012-12-31' AND home_team_goal < away_team_goal) AND team_api_id IN (SELECT team_api_id FROM match WHERE date BETWEEN '2012-01-01' AND '2012-12-31' AND home_team_goal = away_team_goal) AND team_api_id IN (SELECT team_api_id FROM match WHERE date BETWEEN '2012-01-01' AND '2012-12-31' AND home_team_goal > away_team_goal) AND team_api_id IN (SELECT team_api_id FROM match WHERE date BETWEEN '2012-01-01' AND '2012-12-31' AND home_team_goal < away_team_goal)
SELECT team_long_name FROM team WHERE team_api_id IN (     SELECT team_api_id     FROM match     WHERE date BETWEEN '2012-01-01' AND '2012-12-31'     AND home_team_goal > away_team_goal ) AND team_api_id IN (     SELECT team_api_id     FROM match     WHERE date BETWEEN '2012-01-01' AND '2012-12-31'     AND home_team_goal < away_team_goal ) AND team_api_id IN (     SELECT team_api_id     FROM match     WHERE date BETWEEN '2012-01-01' AND '2012-12-31'     AND home_team_goal = away_team_goal ) AND team_api_id IN (     SELECT team_api_id     FROM match     WHERE date BETWEEN '2012-01-01' AND '2012-12-31'     AND home_team_goal > away_team_goal     AND home_team_goal > 0 ) AND team_api_id IN (     
SELECT team_long_name FROM team WHERE team_api_id IN (     SELECT team_api_id     FROM match     WHERE season = '2012'     AND home_team_goal > away_team_goal ) AND team_api_id IN (     SELECT team_api_id     FROM match     WHERE season = '2012'     AND home_team_goal < away_team_goal ) AND team_api_id IN (     SELECT team_api_id     FROM match     WHERE season = '2012'     AND home_team_goal = away_team_goal ) AND team_api_id IN (     SELECT team_api_id     FROM match     WHERE season = '2012'     AND home_team_goal > 0 ) AND team_api_id IN (     SELECT team_api_id     FROM match     WHERE season = '2012'     AND home_team_goal < 0 ) AND team_api_id IN (     SELECT team_api_id     FROM match     WHERE season = '2012'     AND home_team_goal = 0 ) AND team_api_id IN (     
SELECT team_long_name FROM team WHERE team_api_id IN (SELECT team_api_id FROM match WHERE date BETWEEN '2012-01-01' AND '2012-12-31' AND home_team_goal > away_team_goal) AND team_api_id IN (SELECT team_api_id FROM match WHERE date BETWEEN '2012-01-01' AND '2012-12-31' AND home_team_goal < away_team_goal) AND team_api_id IN (SELECT team_api_id FROM match WHERE date BETWEEN '2012-01-01' AND '2012-12-31' AND home_team_goal = away_team_goal) AND team_api_id IN (SELECT team_api_id FROM match WHERE date BETWEEN '2012-01-01' AND '2012-12-31' AND home_team_goal > away_team_goal) AND team_api_id IN (SELECT team_api_id FROM match WHERE date BETWEEN '2012-01-01' AND '2012-12-31' AND home_team_goal < away_team_goal)
SELECT team_long_name FROM team WHERE team_api_id IN (     SELECT team_api_id     FROM match     WHERE date BETWEEN '2012-01-01' AND '2012-12-31'     AND home_team_goal > away_team_goal ) AND team_api_id IN (     SELECT team_api_id     FROM match     WHERE date BETWEEN '2012-01-01' AND '2012-12-31'     AND home_team_goal < away_team_goal ) AND team_api_id IN (     SELECT team_api_id     FROM match     WHERE date BETWEEN '2012-01-01' AND '2012-12-31'     AND home_team_goal = away_team_goal ) AND team_api_id IN (     SELECT team_api_id     FROM match     WHERE date BETWEEN '2012-01-01' AND '2012-12-31'     AND home_team_goal > away_team_goal     AND home_team_goal > 0 ) AND team_api_id IN (     
SELECT team_long_name FROM team WHERE team_api_id IN (SELECT team_api_id FROM match WHERE date BETWEEN '2012-01-01' AND '2012-12-31' AND home_team_goal > away_team_goal) AND team_api_id IN (SELECT team_api_id FROM match WHERE date BETWEEN '2012-01-01' AND '2012-12-31' AND home_team_goal < away_team_goal) AND team_api_id IN (SELECT team_api_id FROM match WHERE date BETWEEN '2012-01-01' AND '2012-12-31' AND home_team_goal = away_team_goal) AND team_api_id IN (SELECT team_api_id FROM match WHERE date BETWEEN '2012-01-01' AND '2012-12-31' AND home_team_goal > away_team_goal) AND team_api_id IN (SELECT team_api_id FROM match WHERE date BETWEEN '2012-01-01' AND '2012-12-31' AND home_team_goal < away_team_goal)
SELECT team_long_name FROM team WHERE team_api_id IN (     SELECT team_api_id     FROM match     WHERE date BETWEEN '2012-01-01' AND '2012-12-31'     AND home_team_goal > away_team_goal ) AND buildupplayspeed > 70 AND buildupplaydribbling > 70 AND buildupplaypassing > 70 AND chancecreationpassing > 70 AND chancecreationcrossing > 70 AND chancecreationshooting > 70 AND defencepressure > 70 AND defenceaggression > 70 AND defenceteamwidth > 70 AND defencedefenderline > 70 AND defencedefenderline > 70 AND defencedefenderline > 70 AND defencedefenderline > 70 AND defencedefenderline > 70 AND defencedefenderline > 70 AND defencedefenderline > 70 AND defencedefenderline > 70 AND defencedefenderline > 70 AND defencedefenderline > 70 AND defencedefenderline > 70 AND defencedefenderline > 70 AND defencedefenderline > 70 AND defencedefenderline > 70 AND defencedefenderline > 70",SELECT team_long_name FROM team WHERE team_api_id IN (SELECT team_api_id FROM match WHERE date BETWEEN '2012-01-01' AND '2012-12-31' AND home_team_goal > away_team_goal) AND team_api_id IN (SELECT team_api_id FROM match WHERE date BETWEEN '2012-01-01' AND '2012-12-31' AND home_team_goal < away_team_goal) AND team_api_id IN (SELECT team_api_id FROM match WHERE date BETWEEN '2012-01-01' AND '2012-12-31' AND home_team_goal = away_team_goal) AND team_api_id IN (SELECT team_api_id FROM match WHERE date BETWEEN '2012-01-01' AND '2012-12-31' AND home_team_goal > away_team_goal) AND team_api_id IN (SELECT team_api_id FROM match WHERE date BETWEEN '2012-01-01' AND '2012-12-31' AND home_team_goal < away_team_goal),0.0
173,781,Provide the heights of the heroes whose eye colours are amber.,superhero,simple,SELECT T1.height_cm FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Amber',7,"SELECT height_cm FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'amber')
SELECT height_cm FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'amber')
SELECT height_cm FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'amber')
SELECT height_cm FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'amber')
SELECT height_cm FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'amber')
SELECT height_cm FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'amber')
SELECT height_cm FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'amber')",SELECT height_cm FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'amber'),0.0
174,479,"Among the cards with converted mana cost higher than 5 in the set Coldsnap, how many of them have unknown power?",card_games,moderate,SELECT SUM(CASE WHEN T1.power LIKE '*' OR T1.power IS NULL THEN 1 ELSE 0 END) FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE T2.name = 'Coldsnap' AND T1.convertedManaCost > 5,7,"SELECT COUNT(*) FROM cards WHERE convertedmanacost > 5 AND power IS NULL
SELECT COUNT(*) FROM cards WHERE convertedmanacost > 5 AND power IS NULL
SELECT COUNT(*) FROM cards WHERE convertedmanacost > 5 AND power IS NULL
SELECT COUNT(*) FROM cards WHERE convertedmanacost > 5 AND power IS NULL
SELECT COUNT(*) FROM cards WHERE convertedmanacost > 5 AND power IS NULL
SELECT COUNT(*) FROM cards WHERE convertedmanacost > 5 AND power IS NULL
SELECT COUNT(*) FROM cards WHERE convertedmanacost > 5 AND power IS NULL",SELECT COUNT(*) FROM cards WHERE convertedmanacost > 5 AND power IS NULL,0.0
175,115,"For the branch which located in the south Bohemia with biggest number of inhabitants, what is the percentage of the male clients?",financial,challenging,SELECT CAST(SUM(T1.gender = 'M') AS REAL) * 100 / COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A3 = 'south Bohemia' GROUP BY T2.A4 ORDER BY T2.A4 DESC LIMIT 1,7,"SELECT (SELECT COUNT(*) FROM client WHERE gender = 'M' AND district_id = (SELECT district_id FROM district WHERE a2 = 'South Bohemia')) * 100.0 / (SELECT COUNT(*) FROM client WHERE district_id = (SELECT district_id FROM district WHERE a2 = 'South Bohemia')) FROM client WHERE district_id = (SELECT district_id FROM district WHERE a2 = 'South Bohemia') LIMIT 1
SELECT (SELECT COUNT(*) FROM client WHERE gender = 'M' AND district_id = (SELECT district_id FROM district WHERE a2 = 'South Bohemia')) * 100.0 / (SELECT COUNT(*) FROM client WHERE district_id = (SELECT district_id FROM district WHERE a2 = 'South Bohemia')) FROM client WHERE district_id = (SELECT district_id FROM district WHERE a2 = 'South Bohemia') LIMIT 1
SELECT (SELECT COUNT(*) FROM client WHERE gender = 'M' AND district_id = (SELECT district_id FROM district WHERE a2 = 'South Bohemia')) * 100.0 / (SELECT COUNT(*) FROM client WHERE district_id = (SELECT district_id FROM district WHERE a2 = 'South Bohemia')) FROM client WHERE district_id = (SELECT district_id FROM district WHERE a2 = 'South Bohemia') LIMIT 1
SELECT (SELECT COUNT(*) FROM client WHERE gender = 'M' AND district_id = (SELECT district_id FROM district WHERE a2 = 'South Bohemia')) * 100.0 / (SELECT COUNT(*) FROM client WHERE district_id = (SELECT district_id FROM district WHERE a2 = 'South Bohemia')) FROM client WHERE district_id = (SELECT district_id FROM district WHERE a2 = 'South Bohemia') LIMIT 1
SELECT (SELECT COUNT(*) FROM client WHERE gender = 'male' AND district_id = (SELECT district_id FROM district WHERE a2 = 'South Bohemia')) * 100.0 / (SELECT COUNT(*) FROM client WHERE district_id = (SELECT district_id FROM district WHERE a2 = 'South Bohemia')) FROM client LIMIT 1
SELECT (SELECT COUNT(*) FROM client WHERE gender = 'male' AND district_id = (SELECT district_id FROM district WHERE a2 = 'South Bohemia')) * 100.0 / (SELECT COUNT(*) FROM client WHERE district_id = (SELECT district_id FROM district WHERE a2 = 'South Bohemia')) AS percentage_male_clients
SELECT (SELECT COUNT(*) FROM client WHERE gender = 'M' AND district_id = (SELECT district_id FROM district WHERE a2 = 'South Bohemia')) * 100.0 / (SELECT COUNT(*) FROM client WHERE district_id = (SELECT district_id FROM district WHERE a2 = 'South Bohemia')) FROM client WHERE district_id = (SELECT district_id FROM district WHERE a2 = 'South Bohemia') LIMIT 1",SELECT (SELECT COUNT(*) FROM client WHERE gender = 'M' AND district_id = (SELECT district_id FROM district WHERE a2 = 'South Bohemia')) * 100.0 / (SELECT COUNT(*) FROM client WHERE district_id = (SELECT district_id FROM district WHERE a2 = 'South Bohemia')) FROM client WHERE district_id = (SELECT district_id FROM district WHERE a2 = 'South Bohemia') LIMIT 1,0.0
176,955,"What is the average time in seconds of champion for each year, before year 1975?",formula_1,challenging,"WITH time_in_seconds AS ( SELECT T2.year, T2.raceId, T1.positionOrder, CASE WHEN T1.positionOrder = 1 THEN (CAST(SUBSTR(T1.time, 1, 1) AS REAL) * 3600) + (CAST(SUBSTR(T1.time, 3, 2) AS REAL) * 60) + CAST(SUBSTR(T1.time, 6,2) AS REAL )   + CAST(SUBSTR(T1.time, 9) AS REAL)/1000 ELSE 0 END AS time_seconds FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.time IS NOT NULL ), champion_time AS ( SELECT year, raceId, time_seconds FROM time_in_seconds WHERE positionOrder = 1 ) SELECT year, AVG(time_seconds) FROM champion_time WHERE year < 1975 GROUP BY year HAVING AVG(time_seconds) IS NOT NULL",7,"SELECT AVG(time) FROM results WHERE year < 1975
SELECT AVG(time) FROM results WHERE year < 1975
SELECT AVG(time) FROM results WHERE year < 1975
SELECT AVG(results.time) FROM results, races WHERE results.raceid = races.raceid AND races.year < 1975
SELECT AVG(time) FROM results WHERE year < 1975
SELECT AVG(time) FROM results WHERE year < 1975
SELECT AVG(time) FROM results WHERE year < 1975",SELECT AVG(time) FROM results WHERE year < 1975,0.0
177,1047,What is the football player Francois Affolter header's finishing rate on 18/09/2014?,european_football_2,moderate,"SELECT t2.heading_accuracy FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE t1.player_name = 'Francois Affolter' AND SUBSTR(t2.`date`, 1, 10) = '2014-09-18'",7,"SELECT player_attributes.finishing, player_attributes.date FROM player_attributes WHERE player_attributes.player_fifa_api_id = (SELECT player_fifa_api_id FROM player WHERE player_name = 'Francois Affolter') AND player_attributes.date = '18/09/2014' AND player_attributes.finishing > 0
SELECT player_attributes.finishing, player_attributes.heading_accuracy, player_attributes.date FROM player_attributes WHERE player_attributes.player_fifa_api_id = 18 AND player_attributes.date = '2014-09-18' ORDER BY player_attributes.finishing DESC, player_attributes.heading_accuracy DESC
SELECT player_attributes.finishing, player_attributes.date, player_attributes.player_fifa_api_id, player_attributes.player_api_id, player_attributes.overall_rating, player_attributes.potential, player_attributes.preferred_foot, player_attributes.attacking_work_rate, player_attributes.defensive_work_rate, player_attributes.crossing, player_attributes.finishing, player_attributes.heading_accuracy, player_attributes.short_passing, player_attributes.volleys, player_attributes.dribbling, player_attributes.curve, player_attributes.free_kick_accuracy, player_attributes.long_passing, player_attributes.ball_control, player_attributes.acceleration, player_attributes.sprint_speed, player_attributes.agility, player_attributes.reactions, player_attributes.balance, player_attributes.shot_power, player_attributes.jumping, player_attributes.stamina, player_attributes.strength, player_attributes.long_shots, player_attributes.aggression, player_attributes.interceptions, player_attributes.positioning, player_attributes.vision, player_attributes.penalties, player_attributes.marking, player_attributes.standing_tackle, player_attributes.sliding_tackle, player_attributes.gk_diving, player_attributes.gk_handling, player_attributes.gk
SELECT player_attributes.finishing, player_attributes.date, player.player_name, player.player_fifa_api_id, player.birthday, player.height, player.weight, player_attributes.preferred_foot, player_attributes.attacking_work_rate, player_attributes.defensive_work_rate, player_attributes.crossing, player_attributes.finishing, player_attributes.heading_accuracy, player_attributes.short_passing, player_attributes.volleys, player_attributes.dribbling, player_attributes.curve, player_attributes.free_kick_accuracy, player_attributes.long_passing, player_attributes.ball_control, player_attributes.acceleration, player_attributes.sprint_speed, player_attributes.agility, player_attributes.reactions, player_attributes.balance, player_attributes.shot_power, player_attributes.jumping, player_attributes.stamina, player_attributes.strength, player_attributes.long_shots, player_attributes.aggression, player_attributes.interceptions, player_attributes.positioning, player_attributes.vision, player_attributes.penalties, player_attributes.marking, player_attributes.standing_tackle, player_attributes.sliding_tackle, player_attributes.gk_diving, player_attributes.gk_handling, player_attributes.gk_kicking, player_attributes.
SELECT player_attributes.finishing, player_attributes.heading_accuracy, player_attributes.date, player_attributes.player_fifa_api_id, player_attributes.player_api_id, player_attributes.overall_rating, player_attributes.potential, player_attributes.preferred_foot, player_attributes.attacking_work_rate, player_attributes.defensive_work_rate, player_attributes.crossing, player_attributes.finishing, player_attributes.heading_accuracy, player_attributes.short_passing, player_attributes.volleys, player_attributes.dribbling, player_attributes.curve, player_attributes.free_kick_accuracy, player_attributes.long_passing, player_attributes.ball_control, player_attributes.acceleration, player_attributes.sprint_speed, player_attributes.agility, player_attributes.reactions, player_attributes.balance, player_attributes.shot_power, player_attributes.jumping, player_attributes.stamina, player_attributes.strength, player_attributes.long_shots, player_attributes.aggression, player_attributes.interceptions, player_attributes.positioning, player_attributes.vision, player_attributes.penalties, player_attributes.marking, player_attributes.standing_tackle, player_attributes.sliding_tackle, player_attributes.gk_diving, player_attributes.gk
SELECT player_attributes.finishing, player_attributes.date, player.player_name, player.birthday, player.height, player.weight, player_attributes.heading_accuracy, player_attributes.short_passing, player_attributes.volleys, player_attributes.dribbling, player_attributes.curve, player_attributes.free_kick_accuracy, player_attributes.long_passing, player_attributes.ball_control, player_attributes.acceleration, player_attributes.sprint_speed, player_attributes.agility, player_attributes.reactions, player_attributes.balance, player_attributes.shot_power, player_attributes.jumping, player_attributes.stamina, player_attributes.strength, player_attributes.long_shots, player_attributes.aggression, player_attributes.interceptions, player_attributes.positioning, player_attributes.vision, player_attributes.penalties, player_attributes.marking, player_attributes.standing_tackle, player_attributes.sliding_tackle, player_attributes.gk_diving, player_attributes.gk_handling, player_attributes.gk_kicking, player_attributes.gk_positioning, player_attributes.gk_reflexes, player_attributes.buildupplayspeed, player_attributes.buildupplaydribbling, player_attributes.buildupplaypassing, player_attributes.chance
NULL","SELECT player_attributes.finishing, player_attributes.date FROM player_attributes WHERE player_attributes.player_fifa_api_id = (SELECT player_fifa_api_id FROM player WHERE player_name = 'Francois Affolter') AND player_attributes.date = '18/09/2014' AND player_attributes.finishing > 0",0.0
178,998,"In terms of number of points acquired, how many victories did the driver who ranked 91st acquired?",formula_1,simple,SELECT SUM(CASE WHEN points = 91 THEN wins ELSE 0 END) FROM driverStandings,7,"SELECT SUM(points) FROM results WHERE position = 1 AND driverid = 91
SELECT COUNT(*) FROM results WHERE position = 1 AND driverid = 91
SELECT COUNT(*) FROM results WHERE position = 1 AND driverid = 91
SELECT COUNT(*) FROM results WHERE position = 1 AND driverid = 91
SELECT COUNT(*) FROM results WHERE position = 1 AND driverid = 91
SELECT COUNT(*) FROM results WHERE position = 1 AND driverid = 91
SELECT COUNT(*) FROM results WHERE position = 1 AND driverid = 91",SELECT COUNT(*) FROM results WHERE position = 1 AND driverid = 91,0.0
179,1435,"List the names of closed event as ""game"" that was closed from 3/15/2019 to 3/20/2020.",student_club,moderate,"SELECT DISTINCT event_name FROM event WHERE type = 'Game' AND date(SUBSTR(event_date, 1, 10)) BETWEEN '2019-03-15' AND '2020-03-20' AND status = 'Closed'",7,"SELECT event_name AS game FROM event WHERE status = 'closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20'
SELECT event_name AS game FROM event WHERE status = 'closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20'
SELECT event_name AS game FROM event WHERE status = 'closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20'
SELECT event_name AS game FROM event WHERE status = 'closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20'
SELECT event_name AS game FROM event WHERE status = 'closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20'
SELECT event_name AS game FROM event WHERE status = 'closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20'
SELECT event_name AS game FROM event WHERE status = 'closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20'",SELECT event_name AS game FROM event WHERE status = 'closed' AND event_date BETWEEN '2019-03-15' AND '2020-03-20',0.0
180,408,How many unknown power cards contain info about the triggered ability,card_games,moderate,SELECT T2.text FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE (T1.power IS NULL OR T1.power = '*') AND T2.text LIKE '%triggered ability%',7,"SELECT COUNT(*) FROM cards WHERE text LIKE '%triggered ability%'
SELECT COUNT(*) FROM cards WHERE text LIKE '%triggered ability%'
SELECT COUNT(*) FROM cards WHERE text LIKE '%triggered ability%'
SELECT COUNT(*) FROM cards WHERE text LIKE '%triggered ability%'
SELECT COUNT(*) FROM cards WHERE text LIKE '%triggered ability%'
SELECT COUNT(*) FROM cards WHERE text LIKE '%triggered ability%'
SELECT COUNT(*) FROM cards WHERE text LIKE '%triggered ability%'",SELECT COUNT(*) FROM cards WHERE text LIKE '%triggered ability%',0.0
181,1049,"How many matches in the 2015/2016 season were held in Scotland Premier League
?",european_football_2,simple,SELECT COUNT(t2.id) FROM League AS t1 INNER JOIN Match AS t2 ON t1.id = t2.league_id WHERE t2.season = '2015/2016' AND t1.name = 'Scotland Premier League',7,"SELECT COUNT(*) FROM match WHERE league_id = (SELECT id FROM league WHERE name = 'Scotland Premier League') AND season = '2015/2016'
SELECT COUNT(*) FROM match WHERE league_id = (SELECT id FROM league WHERE name = 'Scotland Premier League') AND season = '2015/2016'
SELECT COUNT(*) FROM match WHERE league_id = (SELECT id FROM league WHERE name = 'Scotland Premier League') AND season = '2015/2016'
SELECT COUNT(*) FROM match WHERE league_id = (SELECT id FROM league WHERE name = 'Scotland Premier League') AND season = '2015/2016'
SELECT COUNT(*) FROM match WHERE league_id = (SELECT id FROM league WHERE name = 'Scotland Premier League') AND season = '2015/2016'
SELECT COUNT(*) FROM match WHERE league_id = (SELECT id FROM league WHERE name = 'Scotland Premier League') AND season = '2015/2016'
SELECT COUNT(*) FROM match WHERE league_id = (SELECT id FROM league WHERE name = 'Scotland Premier League') AND season = '2015/2016'",SELECT COUNT(*) FROM match WHERE league_id = (SELECT id FROM league WHERE name = 'Scotland Premier League') AND season = '2015/2016',1.0
182,1071,"List the football team that has a build up play speed of 31, build up plan dribbling of 53, and build up play passing of 32. Only indicate the short name of the team.",european_football_2,challenging,SELECT DISTINCT t1.team_short_name FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t2.buildUpPlaySpeed = 31 AND t2.buildUpPlayDribbling = 53 AND t2.buildUpPlayPassing = 32,7,"NULL
NULL
SELECT team_short_name FROM team_attributes WHERE buildupplayspeed = 31 AND buildupplaydribbling = 53 AND buildupplaypassing = 32
SELECT team_short_name FROM team_attributes WHERE buildupplayspeed = 31 AND buildupplaydribbling = 53 AND buildupplaypassing = 32
SELECT team_short_name FROM team_attributes WHERE buildupplayspeed = 31 AND buildupplaydribbling = 53 AND buildupplaypassing = 32
SELECT team_short_name FROM team_attributes WHERE buildupplayspeed = 31 AND buildupplaydribbling = 53 AND buildupplaypassing = 32
SELECT team_short_name FROM team_attributes WHERE buildupplayspeed = 31 AND buildupplaydribbling = 53 AND buildupplaypassing = 32",SELECT team_short_name FROM team_attributes WHERE buildupplayspeed = 31 AND buildupplaydribbling = 53 AND buildupplaypassing = 32,0.0
183,616,What is the comment's rating score of the post which was created on 7/19/2010 7:19:56 PM,codebase_community,simple,SELECT T1.Score FROM comments AS T1 INNER JOIN posts AS T2 ON T1.PostId = T2.Id WHERE T1.CreationDate = '2010-07-19 19:19:56.0',7,"SELECT comments.score FROM comments WHERE comments.creationdate = '2010-07-19 19:19:56'
SELECT comments.score FROM comments WHERE comments.creationdate = '2010-07-19 19:19:56'
SELECT comments.score FROM comments WHERE comments.creationdate = '2010-07-19 19:19:56'
SELECT comments.score FROM comments WHERE comments.creationdate = '2010-07-19 19:19:56'
SELECT comments.score FROM comments WHERE comments.creationdate = '2010-07-19 19:19:56'
SELECT comments.score FROM comments WHERE comments.creationdate = '2010-07-19 19:19:56'
SELECT comments.score FROM comments WHERE comments.creationdate = '2010-07-19 19:19:56'",SELECT comments.score FROM comments WHERE comments.creationdate = '2010-07-19 19:19:56',0.0
184,990,What is the constructor reference name of the champion in the 2009 Singapore Grand Prix? Please give its website.,formula_1,challenging,"SELECT T3.constructorRef, T3.url FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN constructors AS T3 on T1.constructorId = T3.constructorId WHERE T2.name = 'Singapore Grand Prix' AND T2.year = 2009 AND T1.time LIKE '_:%:__.___'",7,"SELECT constructors.name, constructors.url FROM constructors JOIN results ON constructors.constructorid = results.constructorid JOIN races ON results.raceid = races.raceid WHERE races.year = 2009 AND races.name = 'Singapore Grand Prix'
SELECT constructors.name, constructors.url FROM constructors JOIN results ON constructors.constructorid = results.constructorid JOIN races ON results.raceid = races.raceid WHERE races.name = 'Singapore Grand Prix' AND races.year = 2009
SELECT constructors.name, constructors.url FROM constructors JOIN results ON constructors.constructorid = results.constructorid JOIN races ON results.raceid = races.raceid WHERE races.name = 'Singapore Grand Prix' AND races.year = 2009
SELECT constructors.name, constructors.url FROM constructors JOIN results ON constructors.constructorid = results.constructorid JOIN races ON results.raceid = races.raceid WHERE races.name = 'Singapore Grand Prix' AND races.year = 2009
SELECT constructors.name, constructors.url FROM constructors JOIN results ON constructors.constructorid = results.constructorid JOIN races ON results.raceid = races.raceid WHERE races.year = 2009 AND races.name = 'Singapore Grand Prix'
SELECT constructors.name, constructors.url FROM constructors JOIN results ON constructors.constructorid = results.constructorid JOIN races ON results.raceid = races.raceid WHERE races.name = 'Singapore Grand Prix' AND races.year = 2009
SELECT constructors.name, constructors.url FROM constructors JOIN results ON constructors.constructorid = results.constructorid JOIN races ON results.raceid = races.raceid WHERE races.year = 2009 AND races.name = 'Singapore Grand Prix'","SELECT constructors.name, constructors.url FROM constructors JOIN results ON constructors.constructorid = results.constructorid JOIN races ON results.raceid = races.raceid WHERE races.name = 'Singapore Grand Prix' AND races.year = 2009",0.0
185,1472,"In 2012, who had the least consumption in LAM?",debit_card_specializing,moderate,"SELECT T1.CustomerID FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM' AND SUBSTR(T2.Date, 1, 4) = '2012' GROUP BY T1.CustomerID ORDER BY SUM(T2.Consumption) ASC LIMIT 1",7,"SELECT customerid, MIN(consumption) FROM yearmonth WHERE date = 2012
SELECT customerid, MIN(consumption) FROM yearmonth WHERE date = 2012
SELECT customerid, MIN(consumption) FROM yearmonth WHERE date = 2012
SELECT customerid, MIN(consumption) FROM yearmonth WHERE date = 2012
SELECT customerid, MIN(consumption) FROM yearmonth WHERE date = 2012
SELECT customerid, MIN(consumption) FROM yearmonth WHERE date = 2012
SELECT customerid, MIN(consumption) FROM yearmonth WHERE date = '2012'","SELECT customerid, MIN(consumption) FROM yearmonth WHERE date = 2012",0.0
186,954,Please calculate the race completion percentage of Japanese drivers from 2007 to 2009.,formula_1,challenging,"SELECT CAST(SUM(IIF(T1.time IS NOT NULL, 1, 0)) AS REAL) * 100 / COUNT(T1.raceId) FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN drivers AS T3 on T1.driverId = T3.driverId WHERE T3.nationality = 'Japanese' AND T2.year BETWEEN 2007 AND 2009",7,"NULL
SELECT (COUNT(DISTINCT driverid) * 100.0) / (SELECT COUNT(DISTINCT driverid) FROM drivers WHERE nationality = 'Japanese') AS race_completion_percentage FROM results JOIN races ON results.raceid = races.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.nationality = 'Japanese' AND races.year BETWEEN 2007 AND 2009
SELECT (COUNT(DISTINCT driverid) * 100.0) / (SELECT COUNT(DISTINCT driverid) FROM drivers WHERE nationality = 'Japanese') AS race_completion_percentage FROM results JOIN races ON results.raceid = races.raceid JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.nationality = 'Japanese' AND races.year BETWEEN 2007 AND 2009 AND results.statusid IS NOT NULL
NULL
SELECT (COUNT(DISTINCT driverid) * 100.0) / (SELECT COUNT(DISTINCT driverid) FROM drivers WHERE nationality = 'Japanese') AS race_completion_percentage FROM results WHERE driverid IN (SELECT driverid FROM drivers WHERE nationality = 'Japanese') AND raceid IN (SELECT raceid FROM races WHERE year BETWEEN 2007 AND 2009)
SELECT (COUNT(CASE WHEN statusid = 1 THEN 1 END) * 100.0 / COUNT(*)) AS race_completion_percentage FROM results WHERE driverid IN (SELECT driverid FROM drivers WHERE nationality = 'Japanese') AND raceid IN (SELECT raceid FROM races WHERE year BETWEEN 2007 AND 2009)
SELECT (COUNT(DISTINCT driverid) * 100.0) / (SELECT COUNT(DISTINCT driverid) FROM drivers WHERE nationality = 'Japanese') AS race_completion_percentage FROM results WHERE driverid IN (SELECT driverid FROM drivers WHERE nationality = 'Japanese') AND raceid IN (SELECT raceid FROM races WHERE year BETWEEN 2007 AND 2009)",,0.0
187,301,What is the bond type of TR007_4_19?,toxicology,simple,SELECT T.bond_type FROM bond AS T WHERE T.bond_id = 'TR007_4_19',7,"SELECT bond_type FROM bond WHERE bond_id IN (SELECT bond_id FROM connected WHERE atom_id IN (SELECT atom_id FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'TR007_4_19')))
SELECT bond_type FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR007_4_19') AND bond_id = (SELECT bond_id FROM connected WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR007_4_19') AND element = 'C') AND atom_id2 = (SELECT atom_id FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR007_4_19') AND element = 'O')) AND atom_id = (SELECT atom_id FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR007_4_19') AND element = 'C') AND atom_id2 = (SELECT atom_id FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR007_4_19') AND element = 'O')
SELECT bond_type FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR007_4_19') AND bond_id = (SELECT bond_id FROM connected WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR007_4_19') AND element = 'C') AND atom_id2 = (SELECT atom_id FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR007_4_19') AND element = 'O')) AND atom_id2 = (SELECT atom_id FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR007_4_19') AND element = 'O'))
SELECT bond_type FROM bond WHERE bond_id IN (SELECT bond_id FROM connected WHERE atom_id IN (SELECT atom_id FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR007_4_19')) AND atom_id2 IN (SELECT atom_id FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR007_4_19')))
SELECT bond_type FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR007_4_19') AND bond_id = (SELECT bond_id FROM connected WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR007_4_19') AND element = 'C') AND atom_id2 = (SELECT atom_id FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR007_4_19') AND element = 'O')) AND atom_id = (SELECT atom_id FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR007_4_19') AND element = 'C') AND atom_id2 = (SELECT atom_id FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR007_4_19') AND element = 'O')
SELECT bond_type FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR007_4_19') AND bond_id = (SELECT bond_id FROM connected WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR007_4_19') AND element = 'C') AND atom_id2 = (SELECT atom_id FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR007_4_19') AND element = 'O')) AND atom_id2 = (SELECT atom_id FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR007_4_19') AND element = 'O')) AND atom_id = (SELECT atom_id FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR007_4_19') AND element = 'C')
SELECT bond_type FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR007_4_19') AND bond_id = (SELECT bond_id FROM connected WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR007_4_19') AND element = 'C') AND atom_id2 = (SELECT atom_id FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR007_4_19') AND element = 'O')) AND atom_id = (SELECT atom_id FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR007_4_19') AND element = 'C') AND atom_id2 = (SELECT atom_id FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR007_4_19') AND element = 'O')",SELECT bond_type FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR007_4_19') AND bond_id = (SELECT bond_id FROM connected WHERE atom_id = (SELECT atom_id FROM atom WHERE atom_id = (SELECT atom_id FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR007_4_19') AND element = 'C') AND atom_id2 = (SELECT atom_id FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR007_4_19') AND element = 'O')) AND atom_id = (SELECT atom_id FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR007_4_19') AND element = 'C') AND atom_id2 = (SELECT atom_id FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR007_4_19') AND element = 'O'),0.0
188,798,"What is the publisher for Hawkman, Karate Kid and Speedy?",superhero,moderate,"SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy')",7,"SELECT publisher_name FROM publisher WHERE id IN (     SELECT publisher_id FROM superhero     WHERE superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy') )
SELECT publisher_name FROM publisher WHERE id IN (SELECT publisher_id FROM superhero WHERE superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy'))
SELECT publisher_name FROM publisher WHERE id IN (SELECT publisher_id FROM superhero WHERE superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy'))
SELECT publisher_name FROM publisher WHERE id IN (SELECT publisher_id FROM superhero WHERE superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy'))
SELECT publisher_name FROM publisher WHERE id IN (SELECT publisher_id FROM superhero WHERE superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy'))
SELECT publisher_name FROM publisher WHERE id IN (     SELECT publisher_id FROM superhero     WHERE superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy') )
SELECT publisher_name FROM publisher WHERE id IN ( SELECT publisher_id FROM superhero WHERE superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy') )","SELECT publisher_name FROM publisher WHERE id IN (SELECT publisher_id FROM superhero WHERE superhero_name IN ('Hawkman', 'Karate Kid', 'Speedy'))",1.0
189,1481,"What is the difference in the annual average consumption of the customers with the least amount of consumption paid in CZK for 2013 between SME and LAM, LAM and KAM, and KAM and SME?",debit_card_specializing,challenging,"SELECT CAST(SUM(IIF(T1.Segment = 'SME', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'LAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) , CAST(SUM(IIF(T1.Segment = 'LAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'KAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) , CAST(SUM(IIF(T1.Segment = 'KAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'SME', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' AND T2.Consumption = ( SELECT MIN(Consumption) FROM yearmonth ) AND T2.Date BETWEEN 201301 AND 201312",7,"NULL
SELECT AVG(consumption) FROM yearmonth WHERE segment = 'SME') -     (SELECT AVG(consumption) FROM yearmonth WHERE segment = 'LAM') AS SME_LAM,     (SELECT AVG(consumption) FROM yearmonth WHERE segment = 'LAM') -     (SELECT AVG(consumption) FROM yearmonth WHERE segment = 'KAM') AS LAM_KAM,     (SELECT AVG(consumption) FROM yearmonth WHERE segment = 'KAM') -     (SELECT AVG(consumption) FROM yearmonth WHERE segment = 'SME') AS KAM_SME
SELECT AVG(consumption) FROM yearmonth WHERE segment = 'SME' AND date LIKE '2013%') -     (SELECT AVG(consumption) FROM yearmonth WHERE segment = 'LAM' AND date LIKE '2013%') AS SME_LAM,     (SELECT AVG(consumption) FROM yearmonth WHERE segment = 'LAM' AND date LIKE '2013%') -     (SELECT AVG(consumption) FROM yearmonth WHERE segment = 'KAM' AND date LIKE '2013%') AS LAM_KAM,     (SELECT AVG(consumption) FROM yearmonth WHERE segment = 'KAM' AND date LIKE '2013%') -     (SELECT AVG(consumption) FROM yearmonth WHERE segment = 'SME' AND date LIKE '2013%') AS KAM_SME
SELECT AVG(consumption) FROM yearmonth WHERE segment = 'SME') -     (SELECT AVG(consumption) FROM yearmonth WHERE segment = 'LAM') AS SME_LAM,     (SELECT AVG(consumption) FROM yearmonth WHERE segment = 'LAM') -     (SELECT AVG(consumption) FROM yearmonth WHERE segment = 'KAM') AS LAM_KAM,     (SELECT AVG(consumption) FROM yearmonth WHERE segment = 'KAM') -     (SELECT AVG(consumption) FROM yearmonth WHERE segment = 'SME') AS KAM_SME
SELECT AVG(consumption) FROM yearmonth WHERE segment = 'SME') -     (SELECT AVG(consumption) FROM yearmonth WHERE segment = 'LAM') AS SME_LAM,     (SELECT AVG(consumption) FROM yearmonth WHERE segment = 'LAM') -     (SELECT AVG(consumption) FROM yearmonth WHERE segment = 'KAM') AS LAM_KAM,     (SELECT AVG(consumption) FROM yearmonth WHERE segment = 'KAM') -     (SELECT AVG(consumption) FROM yearmonth WHERE segment = 'SME') AS KAM_SME
SELECT AVG(consumption) FROM yearmonth WHERE segment = 'SME') -     (SELECT AVG(consumption) FROM yearmonth WHERE segment = 'LAM') AS SME_LAM,     (SELECT AVG(consumption) FROM yearmonth WHERE segment = 'LAM') -     (SELECT AVG(consumption) FROM yearmonth WHERE segment = 'KAM') AS LAM_KAM,     (SELECT AVG(consumption) FROM yearmonth WHERE segment = 'KAM') -     (SELECT AVG(consumption) FROM yearmonth WHERE segment = 'SME') AS KAM_SME
SELECT AVG(consumption) FROM yearmonth WHERE segment = 'SME') -     (SELECT AVG(consumption) FROM yearmonth WHERE segment = 'LAM') AS SME_LAM,     (SELECT AVG(consumption) FROM yearmonth WHERE segment = 'LAM') -     (SELECT AVG(consumption) FROM yearmonth WHERE segment = 'KAM') AS LAM_KAM,     (SELECT AVG(consumption) FROM yearmonth WHERE segment = 'KAM') -     (SELECT AVG(consumption) FROM yearmonth WHERE segment = 'SME') AS KAM_SME","SELECT AVG(consumption) FROM yearmonth WHERE segment = 'SME') -     (SELECT AVG(consumption) FROM yearmonth WHERE segment = 'LAM') AS SME_LAM,     (SELECT AVG(consumption) FROM yearmonth WHERE segment = 'LAM') -     (SELECT AVG(consumption) FROM yearmonth WHERE segment = 'KAM') AS LAM_KAM,     (SELECT AVG(consumption) FROM yearmonth WHERE segment = 'KAM') -     (SELECT AVG(consumption) FROM yearmonth WHERE segment = 'SME') AS KAM_SME",0.0
190,1011,Which top 20 driver created the shortest lap time ever record in a Formula_1 race? Please give them full names.,formula_1,challenging,"WITH lap_times_in_seconds AS (SELECT driverId, (CASE WHEN SUBSTR(time, 1, INSTR(time, ':') - 1) <> '' THEN CAST(SUBSTR(time, 1, INSTR(time, ':') - 1) AS REAL) * 60 ELSE 0 END + CASE WHEN SUBSTR(time, INSTR(time, ':') + 1, INSTR(time, '.') - INSTR(time, ':') - 1) <> '' THEN CAST(SUBSTR(time, INSTR(time, ':') + 1, INSTR(time, '.') - INSTR(time, ':') - 1) AS REAL) ELSE 0 END + CASE WHEN SUBSTR(time, INSTR(time, '.') + 1) <> '' THEN CAST(SUBSTR(time, INSTR(time, '.') + 1) AS REAL) / 1000 ELSE 0 END) AS time_in_seconds FROM lapTimes) SELECT T2.forename, T2.surname, T1.driverId FROM (SELECT driverId, MIN(time_in_seconds) AS min_time_in_seconds FROM lap_times_in_seconds GROUP BY driverId) AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId ORDER BY T1.min_time_in_seconds ASC LIMIT 20",7,"SELECT drivers.forename, drivers.surname, laptimes.time FROM drivers JOIN laptimes ON drivers.driverid = laptimes.driverid ORDER BY laptimes.time ASC LIMIT 20
SELECT drivers.forename || ' ' || drivers.surname AS full_name FROM laptimes JOIN drivers ON laptimes.driverid = drivers.driverid ORDER BY laptimes.milliseconds ASC LIMIT 20
SELECT drivers.forename || ' ' || drivers.surname AS full_name FROM drivers JOIN results ON drivers.driverid = results.driverid JOIN races ON results.raceid = races.raceid JOIN circuits ON races.circuitid = circuits.circuitid WHERE circuits.name = 'Monaco Grand Prix' ORDER BY results.time ASC LIMIT 20
SELECT drivers.forename || ' ' || drivers.surname AS full_name FROM laptimes JOIN drivers ON laptimes.driverid = drivers.driverid ORDER BY laptimes.milliseconds ASC LIMIT 20
SELECT drivers.forename, drivers.surname, laptimes.milliseconds FROM drivers JOIN laptimes ON drivers.driverid = laptimes.driverid ORDER BY laptimes.milliseconds ASC LIMIT 20
SELECT drivers.forename, drivers.surname, laptimes.milliseconds FROM drivers JOIN laptimes ON drivers.driverid = laptimes.driverid ORDER BY laptimes.milliseconds ASC LIMIT 20
SELECT drivers.forename, drivers.surname, laptimes.milliseconds FROM drivers JOIN laptimes ON drivers.driverid = laptimes.driverid ORDER BY laptimes.milliseconds ASC LIMIT 20","SELECT drivers.forename, drivers.surname, laptimes.milliseconds FROM drivers JOIN laptimes ON drivers.driverid = laptimes.driverid ORDER BY laptimes.milliseconds ASC LIMIT 20",0.0
191,507,"For all the set of cards that has Brazil Portuguese translation, what is the percentage of them are only available online?",card_games,challenging,SELECT CAST(SUM(CASE WHEN isOnlineOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) FROM sets WHERE code IN ( SELECT setCode FROM set_translations WHERE language = 'Portuguese (Brazil)' ),7,"SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards) FROM cards WHERE id IN (     SELECT id     FROM foreign_data     WHERE language = 'Portuguese' ) AND id NOT IN (     SELECT id     FROM foreign_data     WHERE language != 'Portuguese' )
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards) FROM cards WHERE id IN (     SELECT id     FROM foreign_data     WHERE language = 'Portuguese' ) AND id NOT IN (     SELECT id     FROM foreign_data     WHERE language != 'Portuguese' )
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards) FROM cards WHERE id IN (     SELECT id     FROM foreign_data     WHERE language = 'Portuguese' ) AND id NOT IN (     SELECT id     FROM foreign_data     WHERE language != 'Portuguese' )
SELECT (COUNT(DISTINCT cards.id) * 100.0) / (SELECT COUNT(DISTINCT cards.id) FROM cards WHERE cards.setcode = 'brx' AND cards.language = 'Portuguese') FROM cards JOIN foreign_data ON cards.id = foreign_data.id WHERE cards.setcode = 'brx' AND cards.language = 'Portuguese' AND foreign_data.language = 'Portuguese' AND cards.isonlineonly = 1
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards) FROM cards WHERE id IN (     SELECT id     FROM foreign_data     WHERE language = 'Portuguese' ) AND id NOT IN (     SELECT id     FROM foreign_data     WHERE language != 'Portuguese' )
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards) FROM cards WHERE id IN (     SELECT id     FROM foreign_data     WHERE language = 'Portuguese' ) AND id NOT IN (     SELECT id     FROM foreign_data     WHERE language != 'Portuguese' ) AND isonlineonly = 1
SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards) FROM cards WHERE id IN (     SELECT id     FROM foreign_data     WHERE language = 'Portuguese' ) AND id NOT IN (     SELECT id     FROM foreign_data     WHERE language != 'Portuguese' )",SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards) FROM cards WHERE id IN (     SELECT id     FROM foreign_data     WHERE language = 'Portuguese' ) AND id NOT IN (     SELECT id     FROM foreign_data     WHERE language != 'Portuguese' ),0.0
192,431,Which set is not available outside of the United States and has foil cards with Japanese writing on them? Please include the set ID in your response.,card_games,challenging,"SELECT T1.name, T1.id FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Japanese' AND T1.isFoilOnly = 1 AND T1.isForeignOnly = 0",7,"SELECT setcode FROM sets WHERE setcode NOT IN (SELECT setcode FROM sets WHERE country = 'United States') AND hasfoil = 1 AND language = 'Japanese'
SELECT setcode FROM sets WHERE setcode NOT IN (SELECT setcode FROM sets WHERE setcode LIKE 'US%') AND hasfoil = 1 AND language = 'Japanese'
SELECT setcode FROM sets WHERE isforeignonly = 1 AND isfoilonly = 1
SELECT setcode FROM sets WHERE setcode NOT IN (SELECT setcode FROM sets WHERE setcode LIKE 'US%') AND hasfoil = 1 AND language = 'Japanese'
SELECT setcode FROM sets WHERE setcode NOT IN (SELECT setcode FROM sets WHERE setcode LIKE '%US%' AND setcode LIKE '%JAP%') AND setcode LIKE '%FOIL%'
SELECT setcode FROM sets WHERE setcode NOT IN (SELECT setcode FROM sets WHERE setcode LIKE 'US%') AND hasfoil = 1 AND language = 'Japanese'
SELECT setcode FROM sets WHERE setcode NOT IN (SELECT setcode FROM sets WHERE setcode LIKE '%US%' AND setcode LIKE '%FOIL%') AND setcode LIKE '%FOIL%'",SELECT setcode FROM sets WHERE setcode NOT IN (SELECT setcode FROM sets WHERE setcode LIKE 'US%') AND hasfoil = 1 AND language = 'Japanese',0.0
193,1167,"For the year that concluded on December 31, 1998, how many male patients on average were tested in the lab each month?",thrombosis_prediction,moderate,"SELECT CAST(COUNT(T1.ID) AS REAL) / 12 FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T2.Date) = '1998' AND T1.SEX = 'M'",7,"SELECT AVG(COUNT(patient.id)) FROM patient, examination, laboratory WHERE patient.sex = 'male' AND patient.id = examination.id AND examination.id = laboratory.id AND examination.date BETWEEN '1998-01-01' AND '1998-12-31' GROUP BY examination.date
SELECT AVG(COUNT(patient.id)) FROM patient, examination, laboratory WHERE patient.id = examination.id AND examination.id = laboratory.id AND patient.sex = 'male' AND examination.date BETWEEN '1998-01-01' AND '1998-12-31' GROUP BY examination.date
SELECT AVG(COUNT(patient.id)) FROM patient, examination, laboratory WHERE patient.sex = 'male' AND patient.id = examination.id AND examination.id = laboratory.id AND examination.examination_date BETWEEN '1998-01-01' AND '1998-12-31' GROUP BY examination.examination_date
SELECT AVG(COUNT(patient.id)) FROM patient, examination, laboratory WHERE patient.sex = 'male' AND patient.id = examination.id AND examination.id = laboratory.id AND examination.examination_date BETWEEN '1998-01-01' AND '1998-12-31'
SELECT AVG(COUNT(patient.id)) FROM patient WHERE patient.sex = 'male' AND patient.birthday = '1998-12-31' AND patient.description = 'tested in the lab' AND patient.first_date = '1998-12-31' AND patient.admission = '1998-12-31' AND patient.diagnosis = 'tested in the lab' AND patient.examination = 'id' AND patient.examination_date = '1998-12-31' AND patient.acl_igg = 'tested in the lab' AND patient.acl_igm = 'tested in the lab' AND patient.ana = 'tested in the lab' AND patient.ana_pattern = 'tested in the lab' AND patient.acl_iga = 'tested in the lab' AND patient.diagnosis = 'tested in the lab' AND patient.kct = 'tested in the lab' AND patient.rvvt = 'tested in the lab' AND patient.lac = 'tested in the lab' AND patient.symptoms = 'tested in the lab' AND patient.thrombosis = 'tested in the lab' AND patient.examination = 'id' AND patient.examination_date = '1998-12
SELECT AVG(COUNT(patient.id)) FROM patient, examination, laboratory WHERE patient.id = examination.id AND examination.id = laboratory.id AND patient.sex = 'male' AND examination.date BETWEEN '1998-01-01' AND '1998-12-31' GROUP BY examination.date
SELECT AVG(COUNT(patient.id)) FROM patient, examination, laboratory WHERE patient.id = examination.id AND examination.id = laboratory.id AND patient.sex = 'male' AND examination.examination date BETWEEN '1998-01-01' AND '1998-12-31' GROUP BY examination.examination date","SELECT AVG(COUNT(patient.id)) FROM patient, examination, laboratory WHERE patient.id = examination.id AND examination.id = laboratory.id AND patient.sex = 'male' AND examination.date BETWEEN '1998-01-01' AND '1998-12-31' GROUP BY examination.date",0.0
194,451,How many cards available in paper have a positive starting maximum hand size?,card_games,simple,SELECT SUM(CASE WHEN availability = 'paper' AND hAND = '3' THEN 1 ELSE 0 END) FROM cards,7,"SELECT COUNT(*) FROM cards WHERE availability LIKE '%P%' AND hand > 0
SELECT COUNT(*) FROM cards WHERE availability LIKE '%P%' AND hand > 0
SELECT COUNT(*) FROM cards WHERE availability LIKE '%P%' AND hand > 0
SELECT COUNT(*) FROM cards WHERE availability LIKE '%paper%' AND hand > 0
SELECT COUNT(*) FROM cards WHERE availability LIKE '%paper%' AND hand > 0
SELECT COUNT(*) FROM cards WHERE availability LIKE '%P%' AND hand > 0
SELECT COUNT(*) FROM cards WHERE availability LIKE '%paper%' AND hand > 0",SELECT COUNT(*) FROM cards WHERE availability LIKE '%P%' AND hand > 0,0.0
195,1431,List the last name of the members of the club that attended the women's soccer event.,student_club,moderate,SELECT T3.last_name FROM attendance AS T1 INNER JOIN event AS T2 ON T2.event_id = T1.link_to_event INNER JOIN member AS T3 ON T1.link_to_member = T3.member_id WHERE T2.event_name = 'Women''s Soccer' AND T3.position = 'Member',7,"SELECT member.last_name FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women's Soccer Event'
SELECT member.last_name FROM member INNER JOIN attendance ON member.member_id = attendance.link_to_member INNER JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women's Soccer'
SELECT last_name FROM member WHERE member_id IN (SELECT link_to_member FROM attendance WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Women's Soccer Event'))
SELECT member.last_name FROM member INNER JOIN attendance ON member.member_id = attendance.link_to_member INNER JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women's Soccer'
SELECT member.last_name FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women''s Soccer Event'
SELECT member.last_name FROM member INNER JOIN attendance ON member.member_id = attendance.link_to_member INNER JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women's Soccer Event'
SELECT last_name FROM member WHERE member_id IN (SELECT link_to_member FROM attendance WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'Women's Soccer Event'))",SELECT member.last_name FROM member INNER JOIN attendance ON member.member_id = attendance.link_to_member INNER JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Women's Soccer',0.0
196,1191,What percentage of male patients who first presented to the hospital in 1981 were diagnosed with BEHCET?,thrombosis_prediction,challenging,"SELECT CAST(SUM(CASE WHEN Diagnosis = 'BEHCET' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM Patient WHERE STRFTIME('%Y', `First Date`) = '1981' AND SEX = 'M'",7,"SELECT COUNT(*) FROM patient WHERE sex = 'M' AND birthday >= '1981-01-01' AND birthday < '1982-01-01'
SELECT COUNT(*) FROM patient WHERE sex = 'M' AND birthday = '1981-01-01' AND diagnosis = 'BEHCET'
SELECT COUNT(*) FROM patient WHERE sex = 'M' AND birthday BETWEEN '1981-01-01' AND '1981-12-31' AND diagnosis = 'BEHCET'
SELECT COUNT(*) FROM patient WHERE sex = 'M' AND birthday LIKE '1981%' AND diagnosis = 'BEHCET'
SELECT COUNT(*) FROM patient WHERE sex = 'M' AND birthday BETWEEN '1981-01-01' AND '1981-12-31' AND diagnosis = 'BEHCET'
SELECT COUNT(*) FROM patient WHERE sex = 'M' AND birthday LIKE '1981%' AND diagnosis = 'BEHCET'
SELECT COUNT(*) FROM patient WHERE sex = 'M' AND birthday = '1981-01-01'",SELECT COUNT(*) FROM patient WHERE sex = 'M' AND birthday BETWEEN '1981-01-01' AND '1981-12-31' AND diagnosis = 'BEHCET',0.0
197,1112,"What was the chance creation crossing class for ""Hull City"" on 2010/2/22?",european_football_2,moderate,"SELECT t2.chanceCreationCrossingClass FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t1.team_long_name = 'Hull City' AND SUBSTR(t2.`date`, 1, 10) = '2010-02-22'",7,"SELECT * FROM match WHERE home_team_api_id = 'Hull City' AND date = '2010/2/22'
SELECT * FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Hull City') AND date = '2010/2/22'
SELECT * FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Hull City') AND date = '2010/2/22'
SELECT * FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Hull City') AND date = '2010/2/22'
SELECT * FROM match WHERE home_team_api_id = 10260 AND away_team_api_id = 10260 AND date = '2010-02-22'
SELECT * FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Hull City') AND date = '2010/2/22'
SELECT * FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Hull City') AND date = '2010/2/22'",SELECT * FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Hull City') AND date = '2010/2/22',0.0
198,812,List down at least five full names of superheroes with blue eyes.,superhero,simple,SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T2.colour = 'Blue' LIMIT 5,7,"SELECT full_name FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'blue')
SELECT full_name FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour_name = 'Blue')
SELECT full_name FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'Blue')
SELECT DISTINCT superhero.full_name FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'blue'
SELECT superhero.full_name FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'blue'
SELECT sh.full_name FROM superhero sh JOIN colour eye ON eye.id = sh.eye_colour_id WHERE eye.colour = 'blue'
SELECT superhero.full_name FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'blue'",SELECT superhero.full_name FROM superhero JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'blue',0.0
199,1183,"For the patient who was diagnosed SLE on 1997/1/27, what was his/her original diagnose when he/she came to the hospital for the first time?",thrombosis_prediction,challenging,SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.ID = ( SELECT ID FROM Examination WHERE `Examination Date` = '1997-01-27' AND Diagnosis = 'SLE' ) AND T2.`Examination Date` = T1.`First Date`,7,"SELECT patient.diagnosis FROM patient WHERE patient.id = (SELECT patient.id                     FROM patient                     WHERE patient.first_date = '1997/1/27') AND patient.diagnosis = 'SLE'
SELECT patient.diagnosis FROM patient JOIN examination ON patient.id = examination.id WHERE examination.examination_date = '1997/1/27' AND examination.diagnosis = 'SLE'
SELECT examination.diagnosis FROM examination, patient, laboratory WHERE examination.id = patient.id AND patient.id = laboratory.id AND examination.examination_date = '1997/1/27' AND laboratory.diagnosis = 'SLE'
SELECT patient.diagnosis FROM patient, examination WHERE patient.id = examination.id AND examination.diagnosis = 'SLE' AND examination.examination_date = '1997/1/27'
SELECT patient.diagnosis FROM patient JOIN examination ON patient.id = examination.id WHERE examination.examination_date = '1997/1/27' AND examination.diagnosis = 'SLE'
SELECT patient.id, patient.sex, patient.birthday, patient.description, patient.first date, patient.admission, patient.diagnosis FROM patient WHERE patient.id = 'SLE' AND patient.first date = '1997/1/27'
SELECT patient.id, patient.sex, patient.birthday, patient.description, patient.first date, patient.admission, patient.diagnosis FROM patient WHERE patient.id = '1997/1/27'",SELECT patient.diagnosis FROM patient JOIN examination ON patient.id = examination.id WHERE examination.examination_date = '1997/1/27' AND examination.diagnosis = 'SLE',0.0
200,1014,Please list the lap records for the circuits in Italy.,formula_1,challenging,"WITH fastest_lap_times AS (SELECT T1.raceId, T1.FastestLapTime, (CAST(SUBSTR(T1.FastestLapTime, 1, INSTR(T1.FastestLapTime, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, ':') + 1, INSTR(T1.FastestLapTime, '.') - INSTR(T1.FastestLapTime, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, '.') + 1) AS REAL) / 1000) as time_in_seconds FROM results AS T1 WHERE T1.FastestLapTime IS NOT NULL ) SELECT T1.FastestLapTime as lap_record FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN circuits AS T3 on T2.circuitId = T3.circuitId INNER JOIN (SELECT MIN(fastest_lap_times.time_in_seconds) as min_time_in_seconds FROM fastest_lap_times INNER JOIN races AS T2 on fastest_lap_times.raceId = T2.raceId INNER JOIN circuits AS T3 on T2.circuitId = T3.circuitId WHERE T3.country = 'Italy' ) AS T4 ON (CAST(SUBSTR(T1.FastestLapTime, 1, INSTR(T1.FastestLapTime, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, ':') + 1, INSTR(T1.FastestLapTime, '.') - INSTR(T1.FastestLapTime, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, '.') + 1) AS REAL) / 1000) = T4.min_time_in_seconds LIMIT 1",7,"SELECT laptimes.lap, laptimes.time, laptimes.milliseconds, laptimes.position, laptimes.driverid, laptimes.raceid, laptimes.position, laptimes.position, laptimes.positionorder, laptimes.points, laptimes.laps, laptimes.time, laptimes.milliseconds, laptimes.fastestlap, laptimes.rank, laptimes.fastestlaptime, laptimes.fastestlapspeed, laptimes.statusid FROM laptimes INNER JOIN circuits ON laptimes.raceid = circuits.circuitid WHERE circuits.country = 'Italy' ORDER BY laptimes.lap ASC
SELECT laptimes.lap, laptimes.time, laptimes.milliseconds, laptimes.position, laptimes.driverid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes
SELECT * FROM circuits WHERE country = 'Italy'
SELECT laptimes.lap, laptimes.time, laptimes.milliseconds, laptimes.position, laptimes.driverid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes
SELECT laptimes.lap, laptimes.time, laptimes.milliseconds, laptimes.position, laptimes.driverid, laptimes.raceid, laptimes.position, laptimes.time, laptimes.milliseconds, laptimes.position, laptimes.driverid, laptimes.raceid, laptimes.position, laptimes.time, laptimes.milliseconds, laptimes.position, laptimes.driverid, laptimes.raceid, laptimes.position, laptimes.time, laptimes.milliseconds, laptimes.position, laptimes.driverid, laptimes.raceid, laptimes.position, laptimes.time, laptimes.milliseconds, laptimes.position, laptimes.driverid, laptimes.raceid, laptimes.position, laptimes.time, laptimes.milliseconds, laptimes.position, laptimes.driverid, laptimes.raceid, laptimes.position, laptimes.time, laptimes.milliseconds, laptimes.position, laptimes.driverid, laptimes.raceid, laptimes.position, laptimes.time, laptimes.milliseconds, laptimes.position, laptimes.driverid, laptimes.raceid, laptimes.position, laptimes.time, laptimes.milliseconds, laptimes.position, laptimes.driverid, laptimes.raceid, laptimes.position, laptimes.time,
SELECT laptimes.lap, laptimes.position, laptimes.time, laptimes.milliseconds, laptimes.driverid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.
SELECT * FROM circuits WHERE country = 'Italy'","SELECT laptimes.lap, laptimes.time, laptimes.milliseconds, laptimes.position, laptimes.driverid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes.raceid, laptimes",0.0
201,728,"Rank superheroes from Marvel Comics by their eye color popularity, starting with the most common color.",superhero,moderate,"SELECT colour.colour AS EyeColor, COUNT(superhero.id) AS Count, RANK() OVER (ORDER BY COUNT(superhero.id) DESC) AS PopularityRank FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id INNER JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics' GROUP BY colour.colour",7,"SELECT eye_colour_id, COUNT(*) AS count FROM superhero GROUP BY eye_colour_id ORDER BY count DESC
NULL
NULL
NULL
SELECT eye_colour_id, COUNT(*) AS count FROM superhero GROUP BY eye_colour_id ORDER BY count DESC
NULL
SELECT eye_colour_id, COUNT(*) AS count FROM superhero GROUP BY eye_colour_id ORDER BY count DESC",,0.0
202,1531,Who is the top spending customer and how much is the average price per single item purchased by this customer? What currency was being used?,debit_card_specializing,moderate,"SELECT T2.CustomerID, SUM(T2.Price / T2.Amount), T1.Currency FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.CustomerID = ( SELECT CustomerID FROM yearmonth ORDER BY Consumption DESC LIMIT 1 ) GROUP BY T2.CustomerID, T1.Currency",7,"SELECT customers.customerid, customers.segment, customers.currency, transactions_1k.amount, transactions_1k.price FROM customers JOIN transactions_1k ON customers.customerid = transactions_1k.customerid ORDER BY transactions_1k.amount DESC LIMIT 1
SELECT customers.customerid, customers.segment, customers.currency, transactions_1k.amount, transactions_1k.price FROM customers JOIN transactions_1k ON customers.customerid = transactions_1k.customerid ORDER BY transactions_1k.amount DESC LIMIT 1
SELECT customerid, SUM(amount) AS total_amount, AVG(price) AS avg_price, currency FROM transactions_1k GROUP BY customerid ORDER BY total_amount DESC LIMIT 1
SELECT customers.customerid, customers.segment, customers.currency, AVG(transactions_1k.price) AS avg_price FROM customers JOIN transactions_1k ON customers.customerid = transactions_1k.customerid GROUP BY customers.customerid, customers.segment, customers.currency ORDER BY avg_price DESC LIMIT 1
SELECT customers.customerid, customers.segment, customers.currency, AVG(transactions_1k.price) AS avg_price FROM customers JOIN transactions_1k ON customers.customerid = transactions_1k.customerid GROUP BY customers.customerid, customers.segment, customers.currency ORDER BY avg_price DESC LIMIT 1
SELECT customers.customerid, customers.segment, customers.currency, transactions_1k.amount, transactions_1k.price, transactions_1k.date, transactions_1k.time, transactions_1k.customerid, transactions_1k.cardid, transactions_1k.gasstationid, transactions_1k.productid, transactions_1k.amount, transactions_1k.price, transactions_1k.date, transactions_1k.time, transactions_1k.customerid, transactions_1k.cardid, transactions_1k.gasstationid, transactions_1k.productid, transactions_1k.amount, transactions_1k.price, transactions_1k.date, transactions_1k.time, transactions_1k.customerid, transactions_1k.cardid, transactions_1k.gasstationid, transactions_1k.productid, transactions_1k.amount, transactions_1k.price, transactions_1k.date, transactions_1k.time, transactions_1k.customerid, transactions_1k.cardid, transactions_1k.gasstationid, transactions_1k.productid, transactions_1k.amount, transactions_1k.price, transactions_1k.date, transactions_1k.time, transactions_1k.customerid, transactions_1k.
SELECT customers.customerid, customers.segment, customers.currency, SUM(transactions_1k.amount) AS total_amount, AVG(transactions_1k.price) AS avg_price FROM customers JOIN transactions_1k ON customers.customerid = transactions_1k.customerid GROUP BY customers.customerid, customers.segment, customers.currency ORDER BY total_amount DESC LIMIT 1","SELECT customers.customerid, customers.segment, customers.currency, transactions_1k.amount, transactions_1k.price FROM customers JOIN transactions_1k ON customers.customerid = transactions_1k.customerid ORDER BY transactions_1k.amount DESC LIMIT 1",0.0
203,1254,How many patients with a normal Ig A level came to the hospital after 1990/1/1?,thrombosis_prediction,moderate,"SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.IGA BETWEEN 80 AND 500 AND  strftime('%Y',  T1.`First Date`) > '1990'",7,"SELECT COUNT(*) FROM patient WHERE birthday > '1990-01-01' AND iga = 'normal'
SELECT COUNT(*) FROM patient WHERE birthday > '1990-01-01' AND examination.diagnosis = 'normal' AND examination.examination_date > '1990-01-01'
SELECT COUNT(*) FROM patient WHERE birthday > '1990-01-01' AND iga = 'normal'
SELECT COUNT(*) FROM patient WHERE birthday > '1990-01-01' AND iga = 'normal'
SELECT COUNT(*) FROM patient WHERE birthday > '1990-01-01' AND iga = 'normal'
SELECT COUNT(*) FROM patient WHERE birthday > '1990-01-01' AND iga = 'normal'
SELECT COUNT(*) FROM examination WHERE examination.date > '1990-01-01' AND examination.iga = 'normal'",SELECT COUNT(*) FROM patient WHERE birthday > '1990-01-01' AND iga = 'normal',0.0
204,880,"Paul di Resta was in the No. 853 race, what percent faster did he finish in the 853rd race than the next race for the fastest lap speed?",formula_1,challenging,"SELECT (SUM(IIF(T2.raceId = 853, T2.fastestLapSpeed, 0)) - SUM(IIF(T2.raceId = 854, T2.fastestLapSpeed, 0))) * 100 / SUM(IIF(T2.raceId = 853, T2.fastestLapSpeed, 0)) FROM drivers AS T1 INNER JOIN results AS T2 ON T2.driverId = T1.driverId WHERE T1.forename = 'Paul' AND T1.surname = 'di Resta






205,931,What was the fastest lap speed among all drivers in the 2009 Spanish Grand Prix?,formula_1,moderate,SELECT T2.fastestLapSpeed FROM races AS T1 INNER JOIN results AS T2 ON T2.raceId = T1.raceId WHERE T1.name = 'Spanish Grand Prix' AND T1.year = 2009 AND T2.fastestLapSpeed IS NOT NULL ORDER BY T2.fastestLapSpeed DESC LIMIT 1,7,"SELECT MAX(fastestlapspeed) FROM results WHERE raceid = (SELECT raceid FROM races WHERE year = 2009 AND name = 'Spanish Grand Prix')
SELECT MAX(fastestlapspeed) FROM results WHERE raceid = (SELECT raceid FROM races WHERE year = 2009 AND name = 'Spanish Grand Prix')
SELECT MAX(fastestlapspeed) FROM results WHERE raceid = (SELECT raceid FROM races WHERE year = 2009 AND name = 'Spanish Grand Prix')
SELECT MAX(fastestlapspeed) FROM results WHERE raceid = (SELECT raceid FROM races WHERE year = 2009 AND name = 'Spanish Grand Prix')
SELECT MAX(fastestlapspeed) FROM results WHERE raceid = (SELECT raceid FROM races WHERE name = 'Spanish Grand Prix' AND year = 2009)
SELECT MAX(fastestlapspeed) FROM results WHERE raceid = (SELECT raceid FROM races WHERE year = 2009 AND name = 'Spanish Grand Prix')
SELECT MAX(fastestlapspeed) FROM results WHERE raceid = (SELECT raceid FROM races WHERE year = 2009 AND name = 'Spanish Grand Prix')",SELECT MAX(fastestlapspeed) FROM results WHERE raceid = (SELECT raceid FROM races WHERE year = 2009 AND name = 'Spanish Grand Prix'),1.0
206,1204,How long did it take after patient number 821298 arrived at the hospital for the first time before her evaluation began?,thrombosis_prediction,simple,"SELECT STRFTIME('%d', T3.`Examination Date`) - STRFTIME('%d', T1.`First Date`) FROM Patient AS T1 INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T1.ID = 821298",7,"SELECT examination.examination_date, patient.first_date, laboratory.date, laboratory.got, laboratory.gpt, laboratory.ldh, laboratory.alp, laboratory.tp, laboratory.alb, laboratory.ua, laboratory.un, laboratory.cre, laboratory.t-bil, laboratory.t-cho, laboratory.tg, laboratory.cpk, laboratory.glu, laboratory.wbc, laboratory.rbc, laboratory.hgb, laboratory.hct, laboratory.plt, laboratory.pt, laboratory.aptt, laboratory.fg, laboratory.pic, laboratory.tat, laboratory.tat2, laboratory.u-pro, laboratory.igg, laboratory.iga, laboratory.igm, laboratory.crp, laboratory.ra, laboratory.rf, laboratory.c3, laboratory.c4, laboratory.rnp, laboratory.sm, laboratory.sc170, laboratory.ssa, laboratory.ssb, laboratory.centromea, laboratory.dna, laboratory.dna-ii FROM examination, patient, laboratory WHERE examination.examination_date = patient.first_date AND laboratory.date = examination.examination_date
SELECT patient.first_date, patient.admission, patient.diagnosis, laboratory.date, laboratory.got, laboratory.gpt, laboratory.ldh, laboratory.alp, laboratory.tp, laboratory.alb, laboratory.ua, laboratory.un, laboratory.cre, laboratory.t-bil, laboratory.t-cho, laboratory.tg, laboratory.cpk, laboratory.glu, laboratory.wbc, laboratory.rbc, laboratory.hgb, laboratory.hct, laboratory.plt, laboratory.pt, laboratory.aptt, laboratory.fg, laboratory.pic, laboratory.tat, laboratory.tat2, laboratory.u-pro, laboratory.igg, laboratory.iga, laboratory.igm, laboratory.crp, laboratory.ra, laboratory.rf, laboratory.c3, laboratory.c4, laboratory.rnp, laboratory.sm, laboratory.sc170, laboratory.ssa, laboratory.ssb, laboratory.centromea, laboratory.dna, laboratory.dna-ii FROM patient, laboratory WHERE patient.id = laboratory.id AND patient.first_date = laboratory.date AND patient.admission = laboratory.admission AND patient.diagnosis = laboratory.diagnosis AND laboratory.date = laboratory.admission AND laboratory.got = laboratory.admission AND laboratory.gpt = laboratory.admission AND laboratory.ldh = laboratory.admission AND laboratory.alp = laboratory.admission AND laboratory.tp = laboratory.
SELECT patient.first_date, patient.admission, patient.diagnosis, laboratory.date, laboratory.got, laboratory.gpt, laboratory.ldh, laboratory.alp, laboratory.tp, laboratory.alb, laboratory.ua, laboratory.un, laboratory.cre, laboratory.t-bil, laboratory.t-cho, laboratory.tg, laboratory.cpk, laboratory.glu, laboratory.wbc, laboratory.rbc, laboratory.hgb, laboratory.hct, laboratory.plt, laboratory.pt, laboratory.aptt, laboratory.fg, laboratory.pic, laboratory.tat, laboratory.tat2, laboratory.u-pro, laboratory.igg, laboratory.iga, laboratory.igm, laboratory.crp, laboratory.ra, laboratory.rf, laboratory.c3, laboratory.c4, laboratory.rnp, laboratory.sm, laboratory.sc170, laboratory.ssa, laboratory.ssb, laboratory.centromea, laboratory.dna, laboratory.dna-ii FROM patient, laboratory WHERE patient.id = laboratory.id AND patient.first_date = laboratory.date AND patient.admission = laboratory.admission AND patient.diagnosis = laboratory.diagnosis AND laboratory.date = patient.first_date AND laboratory.got = patient.got AND laboratory.gpt = patient.gpt AND laboratory.ldh = patient.ldh AND laboratory.alp = patient.alp AND laboratory.tp
SELECT examination.examination_date - patient.first_date FROM examination, patient WHERE examination.id = patient.id AND patient.id = 821298
SELECT examination.examination_date, patient.first_date, laboratory.date FROM examination, patient, laboratory WHERE examination.id = patient.id AND patient.id = laboratory.id
SELECT examination.examination_date, patient.first_date, laboratory.date, laboratory.got, laboratory.gpt, laboratory.ldh, laboratory.alp, laboratory.tp, laboratory.alb, laboratory.ua, laboratory.un, laboratory.cre, laboratory.t-bil, laboratory.t-cho, laboratory.tg, laboratory.cpk, laboratory.glu, laboratory.wbc, laboratory.rbc, laboratory.hgb, laboratory.hct, laboratory.plt, laboratory.pt, laboratory.aptt, laboratory.fg, laboratory.pic, laboratory.tat, laboratory.tat2, laboratory.u-pro, laboratory.igg, laboratory.iga, laboratory.igm, laboratory.crp, laboratory.ra, laboratory.rf, laboratory.c3, laboratory.c4, laboratory.rnp, laboratory.sm, laboratory.sc170, laboratory.ssa, laboratory.ssb, laboratory.centromea, laboratory.dna, laboratory.dna-ii FROM examination, patient, laboratory WHERE examination.examination_date = patient.first_date AND laboratory.date = examination.examination_date AND laboratory.got = examination.got AND laboratory.gpt = examination.gpt AND laboratory.ldh = examination.ldh AND laboratory.alp = examination.alp AND laboratory.tp = examination.tp AND laboratory.alb = examination.alb AND laboratory.ua = examination.ua AND laboratory
SELECT examination.examination_date - patient.first_date FROM examination, patient WHERE examination.id = patient.id AND patient.id = 821298","SELECT examination.examination_date - patient.first_date FROM examination, patient WHERE examination.id = patient.id AND patient.id = 821298",0.0
207,724,Please list the superhero names of all the superheroes that have blue eyes and blond hair.,superhero,challenging,SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Blue' AND T3.colour = 'Blond',7,"SELECT superhero_name FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'blue') AND hair_colour_id = (SELECT id FROM colour WHERE colour = 'blond')
SELECT superhero_name FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'blue') AND hair_colour_id = (SELECT id FROM colour WHERE colour = 'blond')
SELECT superhero_name FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'blue') AND hair_colour_id = (SELECT id FROM colour WHERE colour = 'blond')
SELECT superhero_name FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'blue') AND hair_colour_id = (SELECT id FROM colour WHERE colour = 'blond')
SELECT superhero_name FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'blue') AND hair_colour_id = (SELECT id FROM colour WHERE colour = 'blond')
SELECT superhero_name FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'blue') AND hair_colour_id = (SELECT id FROM colour WHERE colour = 'blond')
SELECT superhero_name FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'blue') AND hair_colour_id = (SELECT id FROM colour WHERE colour = 'blond')",SELECT superhero_name FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'blue') AND hair_colour_id = (SELECT id FROM colour WHERE colour = 'blond'),0.0
208,1461,List the last names of students under the Elementary Education major and include their phone numbers.,student_club,simple,"SELECT T1.last_name, T1.phone FROM member AS T1 INNER JOIN major AS T2 ON T2.major_id = T1.link_to_major WHERE T2.major_name = 'Elementary Education'",7,"SELECT member.last_name, member.phone FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Elementary Education'
SELECT member.last_name, member.phone FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Elementary Education'
SELECT member.last_name, member.phone FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Elementary Education'
SELECT member.last_name, member.phone FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Elementary Education'
SELECT last_name, phone FROM member WHERE link_to_major = (SELECT major_id FROM major WHERE major_name = 'Elementary Education')
SELECT member.last_name, member.phone FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Elementary Education'
SELECT member.last_name, member.phone FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Elementary Education'","SELECT member.last_name, member.phone FROM member JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Elementary Education'",1.0
209,1139,"What was the final score for the match on September 24, 2008, in the Belgian Jupiler League between the home team and the away team?",european_football_2,challenging,"SELECT t2.home_team_goal, t2.away_team_goal FROM League AS t1 INNER JOIN Match AS t2 ON t1.id = t2.league_id WHERE t1.name = 'Belgium Jupiler League' AND t2.`date` LIKE '2008-09-24%'",7,"SELECT home_team_goal, away_team_goal FROM match WHERE date = '2008-09-24' AND league_id = (SELECT id FROM league WHERE name = 'Belgian Jupiler League')
SELECT home_team_goal, away_team_goal FROM match WHERE date = '2008-09-24' AND league_id = (SELECT id FROM league WHERE name = 'Belgian Jupiler League')
SELECT home_team_goal, away_team_goal FROM match WHERE date = '2008-09-24' AND league_id = (SELECT id FROM league WHERE name = 'Belgian Jupiler League')
SELECT home_team_goal, away_team_goal FROM match WHERE date = '2008-09-24' AND league_id = (SELECT id FROM league WHERE name = 'Belgian Jupiler League')
SELECT home_team_goal, away_team_goal FROM match WHERE date = '2008-09-24' AND league_id = (SELECT id FROM league WHERE name = 'Belgian Jupiler League')
SELECT home_team_goal, away_team_goal FROM match WHERE date = '2008-09-24' AND league_id = (SELECT id FROM league WHERE name = 'Belgian Jupiler League')
SELECT home_team_goal, away_team_goal FROM match WHERE date = '2008-09-24' AND league_id = (SELECT id FROM league WHERE name = 'Belgian Jupiler League')","SELECT home_team_goal, away_team_goal FROM match WHERE date = '2008-09-24' AND league_id = (SELECT id FROM league WHERE name = 'Belgian Jupiler League')",0.0
210,968,What is reference name of Robert Kubica?,formula_1,simple,SELECT driverRef FROM drivers WHERE forename = 'Robert' AND surname = 'Kubica',7,"SELECT drivers.name FROM drivers WHERE drivers.driverid = (SELECT driverid FROM results WHERE results.resultid = (SELECT resultid FROM results WHERE results.driverid = (SELECT driverid FROM drivers WHERE drivers.name = 'Robert Kubica')))
SELECT drivers.forename, drivers.surname FROM drivers WHERE drivers.driverid = (SELECT results.driverid FROM results WHERE results.resultid = (SELECT results.resultid FROM results WHERE results.driverid = (SELECT drivers.driverid FROM drivers WHERE drivers.forename = 'Robert' AND drivers.surname = 'Kubica')))
SELECT drivers.name FROM drivers WHERE drivers.surname = 'Kubica'
SELECT drivers.forename, drivers.surname FROM drivers WHERE drivers.driverid = (SELECT results.driverid FROM results WHERE results.resultid = (SELECT results.resultid FROM results WHERE results.driverid = (SELECT drivers.driverid FROM drivers WHERE drivers.forename = 'Robert' AND drivers.surname = 'Kubica')))
SELECT drivers.name FROM drivers WHERE drivers.driverid = (SELECT driverid FROM results WHERE results.resultid = (SELECT resultid FROM results WHERE results.driverid = (SELECT driverid FROM drivers WHERE drivers.forename = 'Robert' AND drivers.surname = 'Kubica')))
SELECT drivers.name FROM drivers WHERE drivers.driverid = (SELECT driverid FROM results WHERE results.resultid = (SELECT resultid FROM results WHERE results.driverid = (SELECT driverid FROM drivers WHERE drivers.forename = 'Robert' AND drivers.surname = 'Kubica')))
SELECT drivers.driverref FROM drivers WHERE drivers.forename = 'Robert' AND drivers.surname = 'Kubica'","SELECT drivers.forename, drivers.surname FROM drivers WHERE drivers.driverid = (SELECT results.driverid FROM results WHERE results.resultid = (SELECT results.resultid FROM results WHERE results.driverid = (SELECT drivers.driverid FROM drivers WHERE drivers.forename = 'Robert' AND drivers.surname = 'Kubica')))",0.0
211,962,"From 2000 to 2005, what percentage of drivers who were born before 1985 and the lap numbers were over 50?",formula_1,challenging,"SELECT CAST(SUM(IIF(STRFTIME('%Y', T3.dob) < '1985' AND T1.laps > 50, 1, 0)) AS REAL) * 100 / COUNT(*) FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN drivers AS T3 on T1.driverId = T3.driverId WHERE T2.year BETWEEN 2000 AND 2005",7,"NULL
NULL
SELECT COUNT(*) FROM drivers WHERE dob < '1985-01-01' AND raceid IN (SELECT raceid FROM races WHERE year BETWEEN 2000 AND 2005 AND lap > 50)), 2) AS percentage FROM     results WHERE     driverid IN (SELECT driverid FROM drivers WHERE dob < '1985-01-01')     AND raceid IN (SELECT raceid FROM races WHERE year BETWEEN 2000 AND 2005 AND lap > 50)
SELECT COUNT(DISTINCT r.raceid)             FROM races r             WHERE r.year BETWEEN 2000 AND 2005         ),         2     ) AS percentage FROM     races r     JOIN results rs ON r.raceid = rs.raceid     JOIN drivers d ON rs.driverid = d.driverid WHERE     r.year BETWEEN 2000 AND 2005     AND d.dob < '1985-01-01'     AND rs.lap > 50
SELECT (COUNT(DISTINCT r.raceid) / (SELECT COUNT(DISTINCT raceid) FROM races WHERE year BETWEEN 2000 AND 2005)) * 100 FROM results r JOIN drivers d ON r.driverid = d.driverid JOIN races ra ON r.raceid = ra.raceid WHERE d.dob < '1985-01-01' AND r.lap > 50 AND ra.year BETWEEN 2000 AND 2005
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM drivers WHERE dob < '1985-01-01' AND lap > 50)) AS percentage FROM drivers WHERE dob < '1985-01-01' AND lap > 50
SELECT COUNT(*) FROM drivers WHERE dob < '1985-01-01' AND raceid IN (SELECT raceid FROM races WHERE year BETWEEN 2000 AND 2005 AND lap > 50)), 2) AS percentage FROM     results WHERE     driverid IN (SELECT driverid FROM drivers WHERE dob < '1985-01-01')     AND raceid IN (SELECT raceid FROM races WHERE year BETWEEN 2000 AND 2005 AND lap > 50)",,0.0
212,1102,"For the players who had a 77 points overall rating on 2016/6/23, who was the oldest? Give the name of the player.",european_football_2,moderate,"SELECT t1.player_name FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE SUBSTR(t2.`date`, 1, 10) = '2016-06-23' AND t2.overall_rating = 77 ORDER BY t1.birthday ASC LIMIT 1",7,"SELECT player_name FROM player_attributes WHERE date = '2016/6/23' AND overall_rating = 77 ORDER BY birthday ASC LIMIT 1
SELECT player_name FROM player_attributes WHERE date = '2016/6/23' AND overall_rating = 77 ORDER BY birthday ASC LIMIT 1
SELECT player_name FROM player_attributes WHERE date = '2016/6/23' AND overall_rating = 77 ORDER BY birthday ASC LIMIT 1
SELECT player_name FROM player_attributes WHERE player_fifa_api_id IN (SELECT player_fifa_api_id FROM player_attributes WHERE date = '2016-06-23' AND overall_rating = 77) ORDER BY birthday ASC LIMIT 1
SELECT player_name FROM player_attributes WHERE date = '2016/6/23' AND overall_rating = 77 ORDER BY birthday ASC LIMIT 1
SELECT player_name FROM player_attributes WHERE date = '2016/6/23' AND overall_rating = 77 ORDER BY birthday ASC LIMIT 1
SELECT player_name FROM player_attributes WHERE date = '2016/6/23' AND overall_rating = 77 ORDER BY birthday ASC LIMIT 1",SELECT player_name FROM player_attributes WHERE date = '2016/6/23' AND overall_rating = 77 ORDER BY birthday ASC LIMIT 1,0.0
213,1025,Give the name of the league had the most goals in the 2016 season?,european_football_2,moderate,SELECT t2.name FROM Match AS t1 INNER JOIN League AS t2 ON t1.league_id = t2.id WHERE t1.season = '2015/2016' GROUP BY t2.name ORDER BY SUM(t1.home_team_goal + t1.away_team_goal) DESC LIMIT 1,7,"SELECT name FROM league WHERE goals = (SELECT MAX(goals) FROM league)
SELECT name FROM league WHERE id = (SELECT league_id FROM match WHERE season = 2016 AND home_team_goal + away_team_goal = (SELECT MAX(home_team_goal + away_team_goal) FROM match WHERE season = 2016))
SELECT name FROM league WHERE id = (SELECT league_id FROM match WHERE season = '2016' GROUP BY league_id ORDER BY SUM(home_team_goal + away_team_goal) DESC LIMIT 1)
SELECT name FROM league WHERE id = (SELECT league_id FROM match WHERE season = 2016 AND home_team_goal + away_team_goal = (SELECT MAX(home_team_goal + away_team_goal) FROM match WHERE season = 2016))
SELECT name FROM league WHERE id = (SELECT league_id FROM match WHERE season = '2016' GROUP BY league_id ORDER BY SUM(home_team_goal + away_team_goal) DESC LIMIT 1)
SELECT league.name FROM league JOIN match ON league.id = match.league_id GROUP BY league.name ORDER BY SUM(match.home_team_goal + match.away_team_goal) DESC LIMIT 1
SELECT name FROM league WHERE goals = (SELECT MAX(goals) FROM league)",SELECT name FROM league WHERE goals = (SELECT MAX(goals) FROM league),0.0
214,234,How many bonds which involved atom 12 does molecule TR009 have?,toxicology,moderate,SELECT COUNT(T2.bond_id) FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.molecule_id = 'TR009' AND T2.atom_id = T1.molecule_id || '_1' AND T2.atom_id2 = T1.molecule_id || '_2',7,"SELECT COUNT(*) FROM connected WHERE connected.atom_id = 12 AND connected.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR009')
SELECT COUNT(*) FROM connected WHERE atom_id = 12 AND molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR009')
SELECT COUNT(*) FROM connected WHERE atom_id = 12
SELECT COUNT(*) FROM connected WHERE connected.atom_id = 12 AND connected.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR009')
SELECT COUNT(*) FROM connected WHERE connected.atom_id = 12 AND connected.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR009')
SELECT COUNT(*) FROM connected WHERE atom_id = 12 AND molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR009')
SELECT COUNT(*) FROM connected WHERE atom_id = 12",SELECT COUNT(*) FROM connected WHERE connected.atom_id = 12 AND connected.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR009'),0.0
215,1460,"Write the full name of the member who spent money for water, veggie tray and supplies and include the cost of it.",student_club,challenging,"SELECT T2.first_name, T2.last_name, T1.cost FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.expense_description = 'Water, Veggie tray, supplies'",7,"SELECT member.first_name, member.last_name, expense.expense_description, expense.cost FROM member JOIN expense ON member.member_id = expense.link_to_member WHERE expense.expense_description IN ('water', 'veggie tray', 'supplies') ORDER BY expense.cost DESC LIMIT 1
SELECT member.first_name, member.last_name, expense.expense_description, expense.cost FROM member JOIN expense ON member.member_id = expense.link_to_member WHERE expense.expense_description IN ('water', 'veggie tray', 'supplies') ORDER BY expense.cost DESC LIMIT 1
SELECT member.first_name, member.last_name, SUM(expense.cost) AS total_cost FROM member JOIN expense ON member.member_id = expense.link_to_member WHERE expense.expense_description IN ('water', 'veggie tray', 'supplies') GROUP BY member.member_id ORDER BY total_cost DESC LIMIT 1
SELECT member.first_name, member.last_name, expense.expense_description, expense.cost FROM member JOIN expense ON member.member_id = expense.link_to_member WHERE expense.expense_description IN ('water', 'veggie tray', 'supplies') ORDER BY expense.cost DESC LIMIT 1
SELECT member.first_name, member.last_name, SUM(expense.cost) AS total_cost FROM member JOIN expense ON member.member_id = expense.link_to_member WHERE expense.expense_description IN ('water', 'veggie tray', 'supplies') GROUP BY member.member_id ORDER BY total_cost DESC LIMIT 1
SELECT member.first_name, member.last_name, expense.expense_description, expense.cost FROM member JOIN expense ON member.member_id = expense.link_to_member WHERE expense.expense_description IN ('water', 'veggie tray', 'supplies') ORDER BY expense.cost DESC LIMIT 1
SELECT member.first_name, member.last_name, expense.expense_description, expense.cost FROM member JOIN expense ON member.member_id = expense.link_to_member WHERE expense.expense_description IN ('water', 'veggie tray', 'supplies') ORDER BY expense.cost DESC LIMIT 1","SELECT member.first_name, member.last_name, expense.expense_description, expense.cost FROM member JOIN expense ON member.member_id = expense.link_to_member WHERE expense.expense_description IN ('water', 'veggie tray', 'supplies') ORDER BY expense.cost DESC LIMIT 1",0.0
216,1258,How many patients with a normal Rhuematoid Factor has a positive measure of degree of coagulation?,thrombosis_prediction,moderate,SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T3.ID = T2.ID WHERE (T2.RA = '-' OR T2.RA = '+-') AND T3.KCT = '+',7,"SELECT COUNT(*) FROM patient WHERE sex = 'M' AND birthday > '1980-01-01' AND description LIKE '%normal%' AND first date > '2010-01-01' AND admission LIKE '%positive%' AND diagnosis LIKE '%normal%'
SELECT COUNT(*) FROM patient WHERE sex = 'M' AND birthday > '1980-01-01' AND description LIKE '%normal%' AND first date > '2010-01-01' AND admission = 'Y' AND diagnosis LIKE '%normal%'
SELECT COUNT(*) FROM patient WHERE sex = 'M' AND birthday > '1980-01-01' AND description LIKE '%normal%'
SELECT COUNT(*) FROM patient WHERE sex = 'M' AND birthday > '1980-01-01' AND description LIKE '%normal%' AND first date > '2010-01-01' AND admission = '2010-01-01' AND diagnosis LIKE '%normal%'
SELECT COUNT(*) FROM patient WHERE sex = 'M' AND birthday > '1980-01-01' AND description LIKE '%normal%' AND first date > '2010-01-01' AND admission = '2010-01-01' AND diagnosis LIKE '%positive%'
SELECT COUNT(*) FROM patient WHERE sex = 'M' AND birthday > '1990-01-01' AND description LIKE '%normal%' AND first date > '2010-01-01' AND admission = '2010-01-01' AND diagnosis LIKE '%normal%'
SELECT COUNT(*) FROM patient WHERE sex = 'M' AND birthday > '1990-01-01' AND description LIKE '%normal%' AND first date > '2010-01-01' AND admission = '2010-01-01' AND diagnosis LIKE '%positive%'",SELECT COUNT(*) FROM patient WHERE sex = 'M' AND birthday > '1980-01-01' AND description LIKE '%normal%' AND first date > '2010-01-01' AND admission LIKE '%positive%' AND diagnosis LIKE '%normal%',0.0
217,1185,"For the patient who was born on 1959/2/18, what is the decrease rate for his/her total cholesterol from November to December in 1981?",thrombosis_prediction,challenging,SELECT CAST((SUM(CASE WHEN T2.Date LIKE '1981-11-%' THEN T2.`T-CHO` ELSE 0 END) - SUM(CASE WHEN T2.Date LIKE '1981-12-%' THEN T2.`T-CHO` ELSE 0 END)) AS REAL) / SUM(CASE WHEN T2.Date LIKE '1981-12-%' THEN T2.`T-CHO` ELSE 0 END) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday = '1959-02-18',7,"SELECT * FROM patient WHERE birthday = '1959/2/18'
SELECT * FROM patient WHERE birthday = '1959/2/18'
SELECT examination.id, examination.examination_date, examination.acl_igg, examination.acl_igm, examination.ana, examination.ana_pattern, examination.acl_iga, examination.diagnosis, examination.kct, examination.rvvt, examination.lac, examination.symptoms, examination.thrombosis FROM examination INNER JOIN patient ON examination.id = patient.id WHERE patient.birthday = '1959/2/18' AND examination.examination_date BETWEEN '1981/11/01' AND '1981/12/31'
SELECT patient.id, patient.sex, patient.birthday, patient.description, patient.first date, patient.admission, patient.diagnosis, laboratory.id, laboratory.date, laboratory.got, laboratory.gpt, laboratory.ldh, laboratory.alp, laboratory.tp, laboratory.alb, laboratory.ua, laboratory.un, laboratory.cre, laboratory.t-bil, laboratory.t-cho, laboratory.tg, laboratory.cpk, laboratory.glu, laboratory.wbc, laboratory.rbc, laboratory.hgb, laboratory.hct, laboratory.plt, laboratory.pt, laboratory.aptt, laboratory.fg, laboratory.pic, laboratory.tat, laboratory.tat2, laboratory.u-pro, laboratory.igg, laboratory.iga, laboratory.igm, laboratory.crp, laboratory.ra, laboratory.rf, laboratory.c3, laboratory.c4, laboratory.rnp, laboratory.sm, laboratory.sc170, laboratory.ssa, laboratory.ssb, laboratory.centromea, laboratory.dna, laboratory.dna-ii FROM patient, laboratory WHERE patient.id = laboratory.id AND patient.birthday = '1959/2/18' AND laboratory.date BETWEEN '1981/11/1' AND '1981/12/31' AND laboratory.t-cho > 0 AND
SELECT * FROM patient WHERE birthday = '1959/2/18'
SELECT examination.id, examination.examination_date, examination.acl_igg, examination.acl_igm, examination.ana, examination.ana_pattern, examination.acl_iga, examination.diagnosis, examination.kct, examination.rvvt, examination.lac, examination.symptoms, examination.thrombosis FROM examination WHERE examination.id = 1959/2/18
SELECT examination.id, examination.examination_date, examination.acl_igg, examination.acl_igm, examination.ana, examination.ana_pattern, examination.acl_iga, examination.diagnosis, examination.kct, examination.rvvt, examination.lac, examination.symptoms, examination.thrombosis FROM examination WHERE examination.id = 1959/2/18",SELECT * FROM patient WHERE birthday = '1959/2/18',0.0
218,37,"What is the complete address of the school with the lowest excellence rate? Indicate the Street, City, Zip and State.",california_schools,moderate,"SELECT T2.Street, T2.City, T2.State, T2.Zip FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY CAST(T1.NumGE1500 AS REAL) / T1.NumTstTakr ASC LIMIT 1",7,"SELECT Street, City, Zip, State FROM schools WHERE cdscode = (SELECT cdscode FROM satscores WHERE rtype = 'school' AND sname = 'School Name') AND academic year = (SELECT academic year FROM satscores WHERE rtype = 'school' AND sname = 'School Name') AND county code = (SELECT county code FROM satscores WHERE rtype = 'school' AND sname = 'School Name') AND district code = (SELECT district code FROM satscores WHERE rtype = 'school' AND sname = 'School Name') AND school code = (SELECT school code FROM satscores WHERE rtype = 'school' AND sname = 'School Name') AND county name = (SELECT county name FROM satscores WHERE rtype = 'school' AND sname = 'School Name') AND district name = (SELECT district name FROM satscores WHERE rtype = 'school' AND sname = 'School Name') AND school name = (SELECT school name FROM satscores WHERE rtype = 'school' AND sname = 'School Name') AND district type = (SELECT district type FROM satscores WHERE rtype = 'school' AND sname = 'School Name') AND school type = (SELECT school type FROM satscores WHERE rtype = 'school' AND sname = 'School Name') AND educational option type = (SELECT educational option type FROM satscores WHERE rtype = 'school' AND sname = 'School Name') AND
SELECT Street, City, Zip, State FROM schools WHERE cdscode = (SELECT cdscode FROM satscores WHERE rtype = 'school' AND sname = 'School Name') AND academic year = '2013-14' AND county code = 'County Code' AND district code = 'District Code' AND school code = 'School Code' AND county name = 'County Name' AND district name = 'District Name' AND school name = 'School Name' AND district type = 'District Type' AND school type = 'School Type' AND educational option type = 'Educational Option Type' AND nslp provision status = 'Nslp Provision Status' AND charter school (y/n) = 'Charter School (Y/N)' AND charter school number = 'Charter School Number' AND charter funding type = 'Charter Funding Type' AND irc = 'Irc' AND low grade = 'Low Grade' AND high grade = 'High Grade' AND enrollment (k-12) = 'Enrollment (K-12)' AND free meal count (k-12) = 'Free Meal Count (K-12)' AND percent (%) eligible free (k-12) = 'Percent (%) Eligible Free (K-12)' AND frpm count (k-12) = 'Frpm Count (K-12)' AND percent (%) eligible frpm (k-12) = 'Percent (%) Eligible Frpm
SELECT Street, City, Zip, State FROM schools WHERE cdscode = (SELECT cdscode FROM satscores WHERE rtype = 'school' AND sname = 'School Name') AND academic year = '2013-14' AND county code = 'County Code' AND district code = 'District Code' AND school code = 'School Code' AND county name = 'County Name' AND district name = 'District Name' AND school name = 'School Name' AND district type = 'District Type' AND school type = 'School Type' AND educational option type = 'Educational Option Type' AND nslp provision status = 'NSLP Provision Status' AND charter school (y/n) = 'Charter School (Y/N)' AND charter school number = 'Charter School Number' AND charter funding type = 'Charter Funding Type' AND irc = 'IRC' AND low grade = 'Low Grade' AND high grade = 'High Grade' AND enrollment (k-12) = 'Enrollment (K-12)' AND free meal count (k-12) = 'Free Meal Count (K-12)' AND percent (%) eligible free (k-12) = 'Percent (%) Eligible Free (K-12)' AND frpm count (k-12) = 'FRPM Count (K-12)' AND percent (%) eligible frpm (k-12) = 'Percent (%) Eligible FRPM (K
SELECT Street, City, Zip, State FROM schools WHERE cdscode = (SELECT cdscode FROM satscores WHERE rtype = 'school' AND sname = 'School Name') AND academic year = (SELECT academic year FROM satscores WHERE rtype = 'school' AND sname = 'School Name') AND county code = (SELECT county code FROM satscores WHERE rtype = 'school' AND sname = 'School Name') AND district code = (SELECT district code FROM satscores WHERE rtype = 'school' AND sname = 'School Name') AND school code = (SELECT school code FROM satscores WHERE rtype = 'school' AND sname = 'School Name') AND county name = (SELECT county name FROM satscores WHERE rtype = 'school' AND sname = 'School Name') AND district name = (SELECT district name FROM satscores WHERE rtype = 'school' AND sname = 'School Name') AND school name = (SELECT school name FROM satscores WHERE rtype = 'school' AND sname = 'School Name') AND district type = (SELECT district type FROM satscores WHERE rtype = 'school' AND sname = 'School Name') AND school type = (SELECT school type FROM satscores WHERE rtype = 'school' AND sname = 'School Name') AND educational option type = (SELECT educational option type FROM satscores WHERE rtype = 'school' AND sname = 'School Name') AND
SELECT Street, City, Zip, State FROM schools WHERE cdscode = (SELECT cdscode FROM satscores WHERE rtype = 'school' AND sname = 'School Name') AND academic year = '2013-14' AND county code = 'County Code' AND district code = 'District Code' AND school code = 'School Code' AND county name = 'County Name' AND district name = 'District Name' AND school name = 'School Name' AND district type = 'District Type' AND school type = 'School Type' AND educational option type = 'Educational Option Type' AND nslp provision status = 'NSLP Provision Status' AND charter school (y/n) = 'Charter School (Y/N)' AND charter school number = 'Charter School Number' AND charter funding type = 'Charter Funding Type' AND irc = 'IRC' AND low grade = 'Low Grade' AND high grade = 'High Grade' AND enrollment (k-12) = 'Enrollment (K-12)' AND free meal count (k-12) = 'Free Meal Count (K-12)' AND percent (%) eligible free (k-12) = 'Percent (%) Eligible Free (K-12)' AND frpm count (k-12) = 'FRPM Count (K-12)' AND percent (%) eligible frpm (k-12) = 'Percent (%) Eligible FRPM (K
SELECT Street, City, Zip, State FROM schools WHERE cdscode = (SELECT cdscode FROM satscores WHERE rtype = 'school' AND sname = 'School Name') AND academic year = '2013-14' AND county code = 'County Code' AND district code = 'District Code' AND school code = 'School Code' AND county name = 'County Name' AND district name = 'District Name' AND school name = 'School Name' AND district type = 'District Type' AND school type = 'School Type' AND educational option type = 'Educational Option Type' AND nslp provision status = 'NSLP Provision Status' AND charter school (y/n) = 'Charter School (Y/N)' AND charter school number = 'Charter School Number' AND charter funding type = 'Charter Funding Type' AND irc = 'IRC' AND low grade = 'Low Grade' AND high grade = 'High Grade' AND enrollment (k-12) = 'Enrollment (K-12)' AND free meal count (k-12) = 'Free Meal Count (K-12)' AND percent (%) eligible free (k-12) = 'Percent (%) Eligible Free (K-12)' AND frpm count (k-12) = 'FRPM Count (K-12)' AND percent (%) eligible frpm (k-12) = 'Percent (%) Eligible FRPM (K
SELECT Street, City, Zip, State FROM schools WHERE cdscode = (SELECT cdscode FROM satscores WHERE rtype = 'school' AND sname = 'School Name') AND academic year = '2013-14' AND county code = 'County Code' AND district code = 'District Code' AND school code = 'School Code' AND county name = 'County Name' AND district name = 'District Name' AND school name = 'School Name' AND district type = 'District Type' AND school type = 'School Type' AND educational option type = 'Educational Option Type' AND nslp provision status = 'NSLP Provision Status' AND charter school (y/n) = 'Charter School (Y/N)' AND charter school number = 'Charter School Number' AND charter funding type = 'Charter Funding Type' AND irc = 'IRC' AND low grade = 'Low Grade' AND high grade = 'High Grade' AND enrollment (k-12) = 'Enrollment (K-12)' AND free meal count (k-12) = 'Free Meal Count (K-12)' AND percent (%) eligible free (k-12) = 'Percent (%) Eligible Free (K-12)' AND frpm count (k-12) = 'FRPM Count (K-12)' AND percent (%) eligible frpm (k-12) = 'Percent (%) Eligible FRPM (K","SELECT Street, City, Zip, State FROM schools WHERE cdscode = (SELECT cdscode FROM satscores WHERE rtype = 'school' AND sname = 'School Name') AND academic year = '2013-14' AND county code = 'County Code' AND district code = 'District Code' AND school code = 'School Code' AND county name = 'County Name' AND district name = 'District Name' AND school name = 'School Name' AND district type = 'District Type' AND school type = 'School Type' AND educational option type = 'Educational Option Type' AND nslp provision status = 'NSLP Provision Status' AND charter school (y/n) = 'Charter School (Y/N)' AND charter school number = 'Charter School Number' AND charter funding type = 'Charter Funding Type' AND irc = 'IRC' AND low grade = 'Low Grade' AND high grade = 'High Grade' AND enrollment (k-12) = 'Enrollment (K-12)' AND free meal count (k-12) = 'Free Meal Count (K-12)' AND percent (%) eligible free (k-12) = 'Percent (%) Eligible Free (K-12)' AND frpm count (k-12) = 'FRPM Count (K-12)' AND percent (%) eligible frpm (k-12) = 'Percent (%) Eligible FRPM (K",0.0
219,285,Name chemical elements that form a bond TR001_10_11.,toxicology,challenging,SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR001_10_11',7,"SELECT * FROM molecule WHERE molecule_id IN (SELECT molecule_id FROM connected WHERE atom_id IN (SELECT atom_id FROM atom WHERE element = 'TR001_10_11'))
SELECT DISTINCT element FROM atom WHERE atom_id IN (     SELECT atom_id     FROM connected     WHERE bond_id IN (         SELECT bond_id         FROM bond         WHERE molecule_id IN (             SELECT molecule_id             FROM molecule             WHERE label = 'TR001_10_11'         )     ) )
SELECT DISTINCT element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR001_10_11'
SELECT DISTINCT element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR001_10_11'
SELECT molecule.label, atom.element FROM molecule JOIN atom ON molecule.molecule_id = atom.molecule_id JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'TR001_10_11'
SELECT DISTINCT element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE b.bond_type = 'TR001_10_11' AND a.molecule_id = a2.molecule_id
SELECT DISTINCT element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN atom AS atom2 ON connected.atom_id2 = atom2.atom_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR001_10_11' AND bond.bond_type = 'TR001_10_11' AND atom.element != atom2.element",SELECT DISTINCT element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR001_10_11',0.0
220,302,Name the elements that comprise the atoms of bond TR001_2_4.,toxicology,challenging,SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_2_4',7,"SELECT atom_id, molecule_id, element FROM TR001_2_4.atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001_2_4') AND atom_id IN (SELECT atom_id FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001_2_4'))) AND atom_id IN (SELECT atom_id2 FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001_2_4'))) AND atom_id NOT IN (SELECT atom_id FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001_2_4')) AND atom_id NOT IN (SELECT atom_id2 FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001_2_4'))) AND atom_id NOT IN (SELECT atom_id FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001_2_4')) AND atom_id NOT IN (SELECT atom_id2 FROM connected WHERE bond_id IN
SELECT atom_id, molecule_id, element FROM TR001_2_4.atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001_2_4') AND atom_id IN (SELECT atom_id FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001_2_4'))) AND atom_id IN (SELECT atom_id2 FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001_2_4'))) AND atom_id NOT IN (SELECT atom_id FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001_2_4'))) AND atom_id NOT IN (SELECT atom_id2 FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001_2_4'))) AND atom_id NOT IN (SELECT atom_id FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001_
SELECT atom_id, molecule_id, element FROM TR001_2_4.atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001_2_4') AND atom_id IN (SELECT atom_id FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001_2_4'))) AND atom_id IN (SELECT atom_id2 FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001_2_4'))) AND atom_id NOT IN (SELECT atom_id FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001_2_4')) AND atom_id NOT IN (SELECT atom_id2 FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001_2_4'))) AND atom_id NOT IN (SELECT atom_id FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001_2_4')) AND atom_id NOT IN (SELECT atom_id2 FROM connected WHERE bond_id IN
SELECT atom_id, molecule_id, element FROM TR001_2_4.atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001_2_4') AND atom_id IN (SELECT atom_id FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001_2_4'))) AND atom_id IN (SELECT atom_id2 FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001_2_4'))) AND atom_id NOT IN (SELECT atom_id FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001_2_4')) AND atom_id NOT IN (SELECT atom_id2 FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001_2_4'))) AND atom_id NOT IN (SELECT atom_id FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001_2_4')) AND atom_id NOT IN (SELECT atom_id2 FROM connected WHERE bond_id IN
SELECT atom_id, molecule_id, element FROM TR001_2_4.atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001_2_4') AND atom_id IN (SELECT atom_id FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001_2_4'))) AND atom_id IN (SELECT atom_id2 FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001_2_4'))) AND atom_id NOT IN (SELECT atom_id FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001_2_4')) AND atom_id NOT IN (SELECT atom_id2 FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001_2_4'))) AND atom_id NOT IN (SELECT atom_id FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001_2_4')) AND atom_id NOT IN (SELECT atom_id2 FROM connected WHERE bond_id IN
SELECT atom_id, molecule_id, element FROM TR001_2_4.atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001_2_4') AND atom_id IN (SELECT atom_id FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001_2_4'))) AND atom_id NOT IN (SELECT atom_id2 FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001_2_4'))) AND atom_id NOT IN (SELECT atom_id FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001_2_4') AND element = 'H') AND atom_id NOT IN (SELECT atom_id FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001_2_4') AND element = 'C') AND atom_id NOT IN (SELECT atom_id FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001_2_4') AND element = 'N') AND atom_id NOT IN (SELECT atom_id FROM atom
SELECT * FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001_2_4') AND element = 'C'","SELECT atom_id, molecule_id, element FROM TR001_2_4.atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001_2_4') AND atom_id IN (SELECT atom_id FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001_2_4'))) AND atom_id IN (SELECT atom_id2 FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001_2_4'))) AND atom_id NOT IN (SELECT atom_id FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001_2_4')) AND atom_id NOT IN (SELECT atom_id2 FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001_2_4'))) AND atom_id NOT IN (SELECT atom_id FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR001_2_4')) AND atom_id NOT IN (SELECT atom_id2 FROM connected WHERE bond_id IN",0.0
221,1514,What kind of currency did the customer paid at 16:25:00 in 2012/8/24?,debit_card_specializing,simple,SELECT DISTINCT T3.Currency FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID INNER JOIN customers AS T3 ON T1.CustomerID = T3.CustomerID WHERE T1.Date = '2012-08-24' AND T1.Time = '16:25:00',7,"SELECT currency FROM customers WHERE customerid IN (SELECT customerid FROM transactions_1k WHERE date = '2012/8/24' AND time = '16:25:00')
SELECT currency FROM customers WHERE customerid IN (SELECT customerid FROM transactions_1k WHERE date = '2012/8/24' AND time = '16:25:00')
SELECT currency FROM customers WHERE customerid = (SELECT customerid FROM transactions_1k WHERE time = '16:25:00' AND date = '2012/8/24')
SELECT currency FROM customers WHERE customerid IN (SELECT customerid FROM transactions_1k WHERE date = '2012/8/24' AND time = '16:25:00')
SELECT currency FROM transactions_1k WHERE date = '2012/8/24' AND time = '16:25:00'
SELECT currency FROM transactions_1k WHERE date = '2012/8/24' AND time = '16:25:00'
SELECT currency FROM transactions_1k WHERE date = '2012/8/24' AND time = '16:25:00'",SELECT currency FROM customers WHERE customerid IN (SELECT customerid FROM transactions_1k WHERE date = '2012/8/24' AND time = '16:25:00'),0.0
222,734,What is the publisher's name of Blue Beetle II?,superhero,simple,SELECT T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.superhero_name = 'Blue Beetle II',7,"SELECT publisher_name FROM publisher WHERE id = (SELECT publisher_id FROM superhero WHERE superhero_name = 'Blue Beetle II')
SELECT publisher_name FROM publisher WHERE id = (SELECT publisher_id FROM superhero WHERE superhero_name = 'Blue Beetle II')
SELECT publisher_name FROM publisher WHERE id = (SELECT publisher_id FROM superhero WHERE superhero_name = 'Blue Beetle II')
SELECT publisher_name FROM publisher WHERE id = (SELECT publisher_id FROM superhero WHERE superhero_name = 'Blue Beetle II')
SELECT publisher_name FROM publisher WHERE id = (SELECT publisher_id FROM superhero WHERE superhero_name = 'Blue Beetle II')
SELECT publisher_name FROM publisher WHERE id = (SELECT publisher_id FROM superhero WHERE superhero_name = 'Blue Beetle II')
SELECT publisher_name FROM publisher WHERE id = (SELECT publisher_id FROM superhero WHERE superhero_name = 'Blue Beetle II')",SELECT publisher_name FROM publisher WHERE id = (SELECT publisher_id FROM superhero WHERE superhero_name = 'Blue Beetle II'),1.0
223,1260,Please list the ID of the patient whose RF is normal and who is older than 60.,thrombosis_prediction,simple,"SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RF < 20 AND STRFTIME('%Y', DATE('now')) - STRFTIME('%Y', T1.Birthday) > 60",7,"SELECT patient.id FROM patient, laboratory WHERE patient.id = laboratory.id AND laboratory.rf = 'normal' AND patient.birthday < '1958-01-01'
SELECT id FROM patient WHERE rf = 'normal' AND birthday < 60
SELECT patient.id FROM patient, laboratory WHERE patient.id = laboratory.id AND laboratory.rf = 'normal' AND patient.birthday < '1958-01-01'
SELECT id FROM patient WHERE rf = 'normal' AND birthday < 60
SELECT patient.id FROM patient, laboratory WHERE patient.id = laboratory.id AND laboratory.rf = 'normal' AND patient.birthday < '1958-01-01'
SELECT patient.id FROM patient, laboratory WHERE patient.id = laboratory.id AND laboratory.rf = 'normal' AND patient.birthday < '1958-01-01'
SELECT patient.id FROM patient, laboratory WHERE patient.id = laboratory.id AND laboratory.rf = 'normal' AND patient.birthday < '1959-12-31'","SELECT patient.id FROM patient, laboratory WHERE patient.id = laboratory.id AND laboratory.rf = 'normal' AND patient.birthday < '1958-01-01'",0.0
224,282,What is the ratio of Hydrogen elements in molecule ID TR006? List the ratio with its label.,toxicology,challenging,"WITH SubQuery AS (SELECT DISTINCT T1.atom_id, T1.element, T1.molecule_id, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR006') SELECT CAST(COUNT(CASE WHEN element = 'h' THEN atom_id ELSE NULL END) AS REAL) / (CASE WHEN COUNT(atom_id) = 0 THEN NULL ELSE COUNT(atom_id) END) AS ratio, label FROM SubQuery GROUP BY label",7,"SELECT (SELECT COUNT(*) FROM connected WHERE connected.atom_id2 = atom.atom_id AND connected.bond_id IN (SELECT bond_id FROM bond WHERE bond_type = 'H')) / (SELECT COUNT(*) FROM connected WHERE connected.atom_id = atom.atom_id AND connected.bond_id IN (SELECT bond_id FROM bond WHERE bond_type = 'H')) AS ratio FROM atom WHERE atom.molecule_id = 'TR006' AND atom.element = 'H'
SELECT atom.molecule_id, atom.element, COUNT(atom.element) AS count_element, COUNT(bond.bond_type) AS count_bond_type, COUNT(atom.element) / COUNT(bond.bond_type) AS ratio FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id WHERE atom.molecule_id = 'TR006' GROUP BY atom.molecule_id, atom.element
SELECT (SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR006' AND element = 'H') / (SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR006') AS ratio
SELECT atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id,
SELECT (SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR006' AND element = 'H') / (SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR006') AS ratio
SELECT atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id,
SELECT atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id,","SELECT atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id, atom.atom_id, atom.element, atom.molecule_id,",0.0
225,1401,Indicate the cost of posters for 'September Speaker' event.,student_club,moderate,SELECT T3.cost FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T1.event_name = 'September Speaker' AND T3.expense_description = 'Posters',7,"SELECT SUM(cost) FROM expense WHERE link_to_budget IN (     SELECT budget_id     FROM budget     WHERE link_to_event IN (         SELECT event_id         FROM event         WHERE event_name = 'September Speaker'     ) )
SELECT SUM(cost) FROM expense WHERE link_to_budget IN (     SELECT budget_id     FROM budget     WHERE link_to_event IN (         SELECT event_id         FROM event         WHERE event_name = 'September Speaker'     ) )
SELECT SUM(cost) FROM expense WHERE link_to_budget IN (SELECT budget_id FROM budget WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'September Speaker'))
SELECT SUM(cost) FROM expense WHERE link_to_budget IN (     SELECT budget_id     FROM budget     WHERE link_to_event IN (         SELECT event_id         FROM event         WHERE event_name = 'September Speaker'     ) )
SELECT SUM(cost) FROM expense WHERE link_to_budget IN (     SELECT budget_id     FROM budget     WHERE link_to_event IN (         SELECT event_id         FROM event         WHERE event_name = 'September Speaker'     ) )
SELECT SUM(cost) FROM budget WHERE event_status = 'September Speaker' 
SELECT SUM(cost) FROM expense WHERE link_to_budget IN (SELECT budget_id FROM budget WHERE link_to_event IN (SELECT event_id FROM event WHERE event_name = 'September Speaker'))",SELECT SUM(cost) FROM expense WHERE link_to_budget IN (     SELECT budget_id     FROM budget     WHERE link_to_event IN (         SELECT event_id         FROM event         WHERE event_name = 'September Speaker'     ) ),0.0
226,1433,Which countries have zip codes with post office boxes?,student_club,simple,SELECT DISTINCT county FROM zip_code WHERE type = 'PO Box' AND county IS NOT NULL,7,"SELECT DISTINCT country FROM zip_code WHERE zip_code IN (     SELECT zip_code     FROM zip_code     WHERE type = 'PO Box' )
SELECT DISTINCT country FROM zip_code WHERE zip_code IN (     SELECT zip_code     FROM zip_code     WHERE type = 'PO Box' )
SELECT DISTINCT country FROM zip_code WHERE zip_code IN (     SELECT zip_code     FROM zip_code     WHERE type = 'PO Box' )
SELECT DISTINCT zip_code.state, zip_code.city, zip_code.county FROM zip_code JOIN attendance ON zip_code.zip_code = attendance.link_to_event JOIN event ON attendance.link_to_event = event.event_id WHERE event.type = 'post office box'
SELECT DISTINCT country FROM zip_code WHERE zip_code IN (     SELECT zip_code     FROM zip_code     WHERE type = 'PO Box' )
SELECT DISTINCT country FROM zip_code WHERE zip_code IN (     SELECT zip_code     FROM zip_code     WHERE type = 'PO Box' )
SELECT DISTINCT zip_code.state FROM zip_code JOIN attendance ON zip_code.zip_code = attendance.link_to_event JOIN event ON attendance.link_to_event = event.event_id WHERE zip_code.type = 'post office box'",SELECT DISTINCT country FROM zip_code WHERE zip_code IN (     SELECT zip_code     FROM zip_code     WHERE type = 'PO Box' ),0.0
227,334,What is the element with the atom ID of TR004_7 in molecule that is not carcinogenic?,toxicology,challenging,SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR004_7' AND T2.label = '-',7,"SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.atom_id = 'TR004_7' AND molecule.label != 'carcinogenic'
SELECT atom.element FROM atom, molecule, connected, bond WHERE atom.atom_id = connected.atom_id AND atom.molecule_id = molecule.molecule_id AND connected.bond_id = bond.bond_id AND atom.atom_id = 'TR004_7' AND molecule.label = 'not carcinogenic'
SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.atom_id = 'TR004_7' AND molecule.label != 'carcinogenic'
SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.atom_id = 'TR004_7' AND molecule.label != 'carcinogenic'
SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.atom_id = 'TR004_7' AND molecule.label != 'carcinogenic'
SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.atom_id = 'TR004_7' AND molecule.label != 'carcinogenic'
SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.atom_id = 'TR004_7' AND molecule.label != 'carcinogenic'",SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.atom_id = 'TR004_7' AND molecule.label != 'carcinogenic',1.0
228,158,What is the district Id of the account that placed the order with the id 33333?,financial,simple,SELECT T3.district_id FROM `order` AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.order_id = 33333,7,"SELECT district_id FROM account WHERE account_id = 33333
SELECT district_id FROM account WHERE account_id = 33333
SELECT district_id FROM account WHERE account_id = 33333
SELECT district_id FROM account WHERE account_id = 33333
SELECT district_id FROM account WHERE account_id = (SELECT account_id FROM order WHERE order_id = 33333)
SELECT district_id FROM account WHERE account_id = (SELECT account_id FROM order WHERE order_id = 33333)
SELECT district_id FROM account WHERE account_id = 33333",SELECT district_id FROM account WHERE account_id = 33333,0.0
229,220,Please list top three elements of the toxicology of the molecule TR000 in alphabetical order.,toxicology,challenging,SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR000' ORDER BY T.element LIMIT 3,7,"SELECT * FROM molecule WHERE molecule_id IN (SELECT molecule_id FROM connected WHERE atom_id IN (SELECT atom_id FROM atom WHERE element = 'TR000') AND atom_id2 IN (SELECT atom_id FROM atom WHERE element = 'TR000')) ORDER BY label ASC LIMIT 3
SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR000' ORDER BY atom.element ASC LIMIT 3
SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR000' ORDER BY atom.element ASC LIMIT 3
SELECT * FROM molecule WHERE molecule_id IN (SELECT molecule_id FROM connected WHERE atom_id IN (SELECT atom_id FROM atom WHERE element = 'TR000') GROUP BY molecule_id HAVING COUNT(*) >= 3) ORDER BY label ASC LIMIT 3
SELECT atom.element FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id INNER JOIN bond ON connected.bond_id = bond.bond_id INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR000' ORDER BY atom.element ASC LIMIT 3
SELECT * FROM molecule WHERE molecule_id IN (SELECT molecule_id FROM connected WHERE atom_id IN (SELECT atom_id FROM atom WHERE element = 'TR000') GROUP BY molecule_id HAVING COUNT(*) >= 3) ORDER BY label ASC LIMIT 3
SELECT atom.element FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id INNER JOIN bond ON connected.bond_id = bond.bond_id INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR000' ORDER BY atom.element LIMIT 3",SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR000' ORDER BY atom.element ASC LIMIT 3,0.0
230,1247,"Among the male patients who have a normal level of white blood cells, how many of them have an abnormal fibrinogen level?",thrombosis_prediction,challenging,SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.FG <= 150 OR T2.FG >= 450 AND T2.WBC > 3.5 AND T2.WBC < 9.0 AND T1.SEX = 'M',7,"SELECT COUNT(*) FROM patient WHERE sex = 'M' AND birthday < '1990-01-01' AND examination.diagnosis = 'normal' AND laboratory.wbc = 'normal' AND laboratory.fg = 'abnormal'
SELECT COUNT(*) FROM patient WHERE sex = 'M' AND wbc = 'normal' AND fg = 'abnormal'
SELECT COUNT(*) FROM patient WHERE sex = 'M' AND birthday < '1990-01-01' AND description LIKE '%normal%' AND examination.examination_date > '2010-01-01' AND examination.examination_date < '2011-01-01' AND examination.examination_date < '2012-01-01' AND examination.examination_date < '2013-01-01' AND examination.examination_date < '2014-01-01' AND examination.examination_date < '2015-01-01' AND examination.examination_date < '2016-01-01' AND examination.examination_date < '2017-01-01' AND examination.examination_date < '2018-01-01' AND examination.examination_date < '2019-01-01' AND examination.examination_date < '2020-01-01' AND examination.examination_date < '2021-01-01' AND examination.examination_date < '2022-01-01' AND examination.examination_date < '2023-01-01' AND
SELECT COUNT(*) FROM patient WHERE sex = 'M' AND birthday < '1990-01-01' AND examination.diagnosis = 'normal' AND laboratory.wbc > 10000 AND laboratory.fibrinogen < 200
SELECT COUNT(*) FROM patient WHERE sex = 'M' AND birthday < '1980-01-01' AND examination.diagnosis = 'normal' AND laboratory.wbc > 10000
SELECT COUNT(*) FROM patient WHERE sex = 'M' AND wbc = 'normal' AND fg = 'abnormal'
SELECT COUNT(*) FROM patient WHERE sex = 'M' AND birthday < '1970-01-01' AND description LIKE '%normal%' AND examination.examination_date > '2010-01-01' AND examination.examination_date < '2011-01-01' AND examination.examination_date > '2011-01-01' AND examination.examination_date < '2012-01-01' AND examination.examination_date > '2012-01-01' AND examination.examination_date < '2013-01-01' AND examination.examination_date > '2013-01-01' AND examination.examination_date < '2014-01-01' AND examination.examination_date > '2014-01-01' AND examination.examination_date < '2015-01-01' AND examination.examination_date > '2015-01-01' AND examination.examination_date < '2016-01-01' AND examination.examination_date > '2016-01-01' AND examination.examination_date < '2017-01-01' AND",SELECT COUNT(*) FROM patient WHERE sex = 'M' AND wbc = 'normal' AND fg = 'abnormal',0.0
231,149,"Please list the account types that are not eligible for loans, and the average income of residents in the district where the account is located exceeds $8000 but is no more than $9000.",financial,challenging,SELECT T3.type FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T2.account_id = T3.account_id WHERE T3.type != 'OWNER' AND T1.A11 BETWEEN 8000 AND 9000,7,"SELECT DISTINCT a.type FROM account a JOIN district d ON a.district_id = d.district_id WHERE a.type NOT IN (     SELECT DISTINCT type     FROM card ) AND d.a10 > 8000 AND d.a10 <= 9000
SELECT DISTINCT type FROM card WHERE type NOT IN (     SELECT type     FROM card     WHERE type = 'loan' ) AND EXISTS (     SELECT 1     FROM client     JOIN disp ON client.client_id = disp.client_id     WHERE client.district_id = card.district_id     AND client.income > 8000     AND client.income <= 9000 )
SELECT DISTINCT type FROM card WHERE type NOT IN (     SELECT type     FROM card     WHERE type = 'loan' ) AND EXISTS (     SELECT 1     FROM client     JOIN disp ON client.client_id = disp.client_id     WHERE client.district_id = card.district_id     AND client.income > 8000     AND client.income <= 9000 )
SELECT DISTINCT type FROM card WHERE type NOT IN (     SELECT type     FROM card     WHERE type = 'loan' ) AND EXISTS (     SELECT 1     FROM district     WHERE district.district_id = card.district_id     AND district.a10 > 8000     AND district.a10 <= 9000 )
SELECT DISTINCT account.type FROM account JOIN district ON account.district_id = district.district_id WHERE account.type NOT IN (     SELECT type     FROM card     WHERE card.disp_id IN (         SELECT disp_id         FROM disp         WHERE disp.account_id = account.account_id     ) ) AND district.a10 > 8000 AND district.a10 <= 9000
SELECT DISTINCT type FROM card WHERE type NOT IN (     SELECT type     FROM card     WHERE type = 'loan' ) AND EXISTS (     SELECT 1     FROM district     WHERE district.district_id = card.district_id     AND district.a10 > 8000     AND district.a10 <= 9000 )
SELECT DISTINCT a.type FROM account a JOIN district d ON a.district_id = d.district_id WHERE a.type NOT IN (     SELECT DISTINCT type     FROM card ) AND d.a10 BETWEEN 8000 AND 9000",SELECT DISTINCT type FROM card WHERE type NOT IN (     SELECT type     FROM card     WHERE type = 'loan' ) AND EXISTS (     SELECT 1     FROM client     JOIN disp ON client.client_id = disp.client_id     WHERE client.district_id = card.district_id     AND client.income > 8000     AND client.income <= 9000 ),0.0
232,62,What is the total number of non-chartered schools in the county of Los Angeles with a percent (%) of eligible free meals for grades 1 through 12 that is less than 0.18%?,california_schools,challenging,SELECT COUNT(T2.School) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'Los Angeles' AND T2.Charter = 0 AND CAST(T1.`Free Meal Count (K-12)` AS REAL) * 100 / T1.`Enrollment (K-12)` < 0.18,7,"SELECT COUNT(*) FROM schools WHERE county = 'Los Angeles' AND percent (%) eligible free (k-12) < 0.18 AND charter school (y/n) = 'n'
SELECT COUNT(*) FROM schools WHERE county = 'Los Angeles' AND percent (%) eligible free (k-12) < 0.18 AND charter school (y/n) = 'n'
SELECT COUNT(*) FROM schools WHERE county = 'Los Angeles' AND percent (%) eligible free (k-12) < 0.18 AND charter school (y/n) = 'n'
SELECT COUNT(*) FROM schools WHERE county = 'Los Angeles' AND percent (%) eligible free (k-12) < 0.18 AND charter school (y/n) = 'n'
SELECT COUNT(*) FROM schools WHERE county = 'Los Angeles' AND percent (%) eligible free (k-12) < 0.18 AND charter school (y/n) = 'n'
SELECT COUNT(*) FROM schools WHERE county = 'Los Angeles' AND percent (%) eligible free (k-12) < 0.18 AND charter school (y/n) = 'n'
SELECT COUNT(*) FROM schools WHERE county = 'Los Angeles' AND percent (%) eligible free (k-12) < 0.18 AND charter school (y/n) = 'n'",SELECT COUNT(*) FROM schools WHERE county = 'Los Angeles' AND percent (%) eligible free (k-12) < 0.18 AND charter school (y/n) = 'n',0.0
233,1257,"Among the patients whose creatinine level is abnormal, how many of them aren't 70 yet?",thrombosis_prediction,challenging,"SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE >= 1.5 AND STRFTIME('%Y', Date('now')) - STRFTIME('%Y', T1.Birthday) < 70",7,"SELECT COUNT(*) FROM examination WHERE examination.cre > 0 AND examination.age < 70
SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM examination WHERE creatinine_level IS NOT NULL) AND age < 70
SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM laboratory WHERE cre > 1.5) AND birthday > '1970-01-01'
SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM examination WHERE creatinine_level IS NOT NULL) AND age < 70
SELECT COUNT(*) FROM examination WHERE examination.cre > 1.5 AND examination.age < 70
SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM examination WHERE creatinine_level > 70) AND id NOT IN (SELECT id FROM examination WHERE creatinine_level <= 70)
SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM examination WHERE creatinine_level IS NOT NULL) AND age < 70",SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM examination WHERE creatinine_level IS NOT NULL) AND age < 70,0.0
234,743,What is the percentage of superheroes who act in their own self-interest or make decisions based on their own moral code? Indicate how many of the said superheroes were published by Marvel Comics.,superhero,challenging,"SELECT (CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM superhero)), CAST(SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS REAL) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN alignment AS T3 ON T3.id = T1.alignment_id WHERE T3.alignment = 'Bad'",7,"SELECT COUNT(*) FROM superhero WHERE alignment_id = 1) * 100.0 / (SELECT COUNT(*) FROM superhero) AS percentage_of_superheroes_with_self_interest_or_moral_code,     (SELECT COUNT(*) FROM superhero WHERE alignment_id = 1 AND publisher_id = 1) AS number_of_marvel_superheroes_with_self_interest_or_moral_code
SELECT COUNT(*) FROM superhero WHERE alignment_id = 1 AND publisher_id = 1
SELECT (COUNT(DISTINCT(superhero.id)) * 100.0 / (SELECT COUNT(DISTINCT(superhero.id)) FROM superhero)) AS percentage_of_superheroes, COUNT(DISTINCT(superhero.id)) AS number_of_superheroes_published_by_marvel_comics FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE alignment.alignment = 'Self-interest' OR alignment.alignment = 'Morality' AND publisher.publisher_name = 'Marvel Comics'
SELECT COUNT(*) FROM superhero WHERE alignment_id = 1 AND publisher_id = 1
NULL
SELECT COUNT(*) FROM superhero WHERE alignment_id = 1 AND publisher_id = 1
SELECT COUNT(*) FROM superhero WHERE alignment_id = 1 AND publisher_id = 1",SELECT COUNT(*) FROM superhero WHERE alignment_id = 1 AND publisher_id = 1,0.0
235,310,"How many molecules have a double bond type and among these molecule, how many are labeled as carcinogenic compound?",toxicology,moderate,"SELECT COUNT(DISTINCT T2.molecule_id), SUM(CASE WHEN T2.label = '+' THEN 1 ELSE 0 END) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '='",7,"SELECT COUNT(*) FROM molecule WHERE label = 'carcinogenic compound' AND molecule_id IN (     SELECT molecule_id     FROM bond     WHERE bond_type = 'double bond' )
SELECT COUNT(*) FROM molecule WHERE molecule_id IN (     SELECT molecule_id     FROM bond     WHERE bond_type = 'double' ) AND label = 'carcinogenic'
SELECT COUNT(*) FROM molecule WHERE molecule_id IN (     SELECT molecule_id     FROM bond     WHERE bond_type = 'double' ) AND molecule_id IN (     SELECT molecule_id     FROM molecule     WHERE label = 'carcinogenic' )
SELECT COUNT(*) FROM molecule WHERE molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = 'double') AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'carcinogenic')
SELECT COUNT(*) FROM molecule WHERE molecule_id IN (     SELECT molecule_id     FROM bond     WHERE bond_type = 'double' ) AND molecule_id IN (     SELECT molecule_id     FROM molecule     WHERE label = 'carcinogenic' )
SELECT COUNT(*) FROM molecule WHERE molecule_id IN (     SELECT molecule_id     FROM bond     WHERE bond_type = 'double' ) AND label = 'carcinogenic'
SELECT COUNT(*) FROM molecule WHERE molecule_id IN (     SELECT molecule_id     FROM bond     WHERE bond_type = 'double' ) AND label = 'carcinogenic'",SELECT COUNT(*) FROM molecule WHERE molecule_id IN (     SELECT molecule_id     FROM bond     WHERE bond_type = 'double' ) AND label = 'carcinogenic',0.0
236,1111,"State the chance creation passing class for ""PEC Zwolle"" on 2013/9/20.",european_football_2,moderate,"SELECT t2.chanceCreationPassingClass FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t1.team_long_name = 'PEC Zwolle' AND SUBSTR(t2.`date`, 1, 10) = '2013-09-20'",7,"SELECT * FROM player_attributes WHERE player_fifa_api_id = (SELECT player_fifa_api_id FROM player WHERE player_name = 'PEC Zwolle') AND date = '2013/9/20'
SELECT * FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'PEC Zwolle') AND date = '2013/9/20'
SELECT * FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'PEC Zwolle') AND date = '2013/9/20'
NULL
SELECT * FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'PEC Zwolle') AND date = '2013/9/20'
SELECT * FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'PEC Zwolle') AND date = '2013/9/20'
NULL",SELECT * FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'PEC Zwolle') AND date = '2013/9/20',0.0
237,735,How many superheroes with blonde hair are there?,superhero,simple,SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.hair_colour_id = T2.id WHERE T2.colour = 'Blond',7,"SELECT COUNT(*) FROM superhero WHERE hair_colour_id = (SELECT id FROM colour WHERE colour = 'Blonde')
SELECT COUNT(*) FROM superhero WHERE hair_colour_id = (SELECT id FROM colour WHERE colour = 'Blonde')
SELECT COUNT(*) FROM superhero WHERE hair_colour_id = (SELECT id FROM colour WHERE colour = 'Blonde')
SELECT COUNT(*) FROM superhero WHERE hair_colour_id = (SELECT id FROM colour WHERE colour = 'Blonde')
SELECT COUNT(*) FROM superhero WHERE hair_colour_id = (SELECT id FROM colour WHERE colour = 'Blonde')
SELECT COUNT(*) FROM superhero WHERE hair_colour_id = (SELECT id FROM colour WHERE colour = 'Blonde')
SELECT COUNT(*) FROM superhero WHERE hair_colour_id = (SELECT id FROM colour WHERE colour = 'Blonde')",SELECT COUNT(*) FROM superhero WHERE hair_colour_id = (SELECT id FROM colour WHERE colour = 'Blonde'),0.0
238,337,List the element and bond type included in the molecule with molecule ID of TR002.,toxicology,challenging,"SELECT DISTINCT T1.element, T2.bond_type FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR002'",7,"SELECT atom.element, bond.bond_type FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.molecule_id = 'TR002'
SELECT atom.element, bond.bond_type FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.molecule_id = 'TR002'
SELECT atom.element, bond.bond_type FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.molecule_id = 'TR002'
SELECT atom.element, bond.bond_type FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.molecule_id = 'TR002'
SELECT atom.element, bond.bond_type FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.molecule_id = 'TR002'
SELECT atom.element, bond.bond_type FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.molecule_id = 'TR002'
SELECT atom.element, bond.bond_type FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.molecule_id = 'TR002'","SELECT atom.element, bond.bond_type FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.molecule_id = 'TR002'",0.0
239,958,Which driver has the fastest lap time? Please give their forenames and surnames.,formula_1,moderate,"SELECT T2.forename, T2.surname, T1.fastestLapTime FROM results AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId WHERE T1.fastestLapTime IS NOT NULL ORDER BY T1.fastestLapTime ASC LIMIT 1",7,"SELECT drivers.forename, drivers.surname FROM drivers JOIN results ON drivers.driverid = results.driverid JOIN races ON results.raceid = races.raceid WHERE results.position = 1 ORDER BY results.time ASC LIMIT 1
SELECT drivers.forename, drivers.surname FROM drivers JOIN results ON drivers.driverid = results.driverid JOIN races ON results.raceid = races.raceid WHERE results.position = 1 ORDER BY races.date DESC LIMIT 1
SELECT drivers.forename, drivers.surname FROM drivers JOIN results ON drivers.driverid = results.driverid JOIN races ON results.raceid = races.raceid WHERE results.position = 1 ORDER BY races.date DESC LIMIT 1
SELECT drivers.forename, drivers.surname FROM drivers JOIN results ON drivers.driverid = results.driverid JOIN races ON results.raceid = races.raceid WHERE results.position = 1 ORDER BY results.time ASC LIMIT 1
SELECT drivers.forename, drivers.surname FROM drivers JOIN results ON drivers.driverid = results.driverid ORDER BY results.time ASC LIMIT 1
SELECT drivers.forename, drivers.surname FROM drivers JOIN results ON drivers.driverid = results.driverid JOIN races ON results.raceid = races.raceid WHERE results.position = 1 ORDER BY results.time ASC LIMIT 1
SELECT forename, surname FROM drivers WHERE driverid = (SELECT driverid FROM results WHERE milliseconds = (SELECT MIN(milliseconds) FROM results))","SELECT drivers.forename, drivers.surname FROM drivers JOIN results ON drivers.driverid = results.driverid JOIN races ON results.raceid = races.raceid WHERE results.position = 1 ORDER BY results.time ASC LIMIT 1",0.0
240,255,What proportion of single bonds are carcinogenic? Please provide your answer as a percentage with five decimal places.,toxicology,moderate,"SELECT ROUND(CAST(COUNT(CASE WHEN T2.label = '+' THEN T1.bond_id ELSE NULL END) AS REAL) * 100 / COUNT(T1.bond_id),5) FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-'",7,"SELECT (SELECT COUNT(*) FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE bond_type = 'single')) / (SELECT COUNT(*) FROM connected) * 100 AS percentage
SELECT (SELECT COUNT(*) FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE bond_type = 'single')) / (SELECT COUNT(*) FROM connected) * 100 FROM connected LIMIT 1
SELECT 100.0 * COUNT(*) / (SELECT COUNT(*) FROM bond) FROM bond WHERE bond_type = 'single' AND bond_id IN (SELECT bond_id FROM connected WHERE atom_id IN (SELECT atom_id FROM atom WHERE element = 'C')) AND bond_id IN (SELECT bond_id FROM connected WHERE atom_id2 IN (SELECT atom_id FROM atom WHERE element = 'C')) AND bond_id IN (SELECT bond_id FROM connected WHERE atom_id IN (SELECT atom_id FROM atom WHERE element = 'H')) AND bond_id IN (SELECT bond_id FROM connected WHERE atom_id2 IN (SELECT atom_id FROM atom WHERE element = 'H')) AND bond_id IN (SELECT bond_id FROM connected WHERE atom_id IN (SELECT atom_id FROM atom WHERE element = 'N')) AND bond_id IN (SELECT bond_id FROM connected WHERE atom_id2 IN (SELECT atom_id FROM atom WHERE element = 'N')) AND bond_id IN (SELECT bond_id FROM connected WHERE atom_id IN (SELECT atom_id FROM atom WHERE element = 'O')) AND bond_id IN (SELECT bond_id FROM connected WHERE atom_id2 IN (SELECT atom_id FROM atom WHERE element = 'O')) AND bond_id IN (SELECT bond_id FROM connected WHERE atom_id
NULL
NULL
SELECT COUNT(*) FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE bond_type = 'single') AND atom_id IN (SELECT atom_id FROM atom WHERE element = 'C') AND atom_id2 IN (SELECT atom_id FROM atom WHERE element = 'C') AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'carcinogenic') / (SELECT COUNT(*) FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE bond_type = 'single') AND atom_id IN (SELECT atom_id FROM atom WHERE element = 'C') AND atom_id2 IN (SELECT atom_id FROM atom WHERE element = 'C')) * 100
SELECT      ROUND(         (             SELECT COUNT(*)             FROM connected             WHERE bond_id IN (                 SELECT bond_id                 FROM bond                 WHERE bond_type = 'single'             )         ) / (             SELECT COUNT(*)             FROM connected         ) * 100,         5     ) AS percentage FROM connected LIMIT 1",,0.0
241,169,What was the growth rate of the total amount of loans across all accounts for a male client between 1996 and 1997?,financial,challenging,"SELECT CAST((SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1997' THEN T1.amount ELSE 0 END) - SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1996' THEN T1.amount ELSE 0 END)) AS REAL) * 100 / SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1996' THEN T1.amount ELSE 0 END) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN disp AS T3 ON T3.account_id = T2.account_id INNER JOIN client AS T4 ON T4.client_id = T3.client_id WHERE T4.gender = 'M' AND T3.type = 'OWNER'",7,"SELECT (SUM(amount) - LAG(SUM(amount)) OVER (ORDER BY date)) / LAG(SUM(amount)) OVER (ORDER BY date) * 100 AS growth_rate FROM loan WHERE account_id IN (SELECT account_id FROM disp WHERE client_id IN (SELECT client_id FROM client WHERE gender = 'male')) AND date BETWEEN '1996-01-01' AND '1997-12-31'
SELECT (SUM(amount) - LAG(SUM(amount)) OVER (ORDER BY date)) / LAG(SUM(amount)) OVER (ORDER BY date) * 100 AS growth_rate FROM loan WHERE date BETWEEN 19960101 AND 19971231 AND client_id IN (SELECT client_id FROM client WHERE gender = 'male') GROUP BY date
SELECT (SUM(loan.amount) - LAG(SUM(loan.amount)) OVER (ORDER BY loan.date)) / LAG(SUM(loan.amount)) OVER (ORDER BY loan.date) * 100 AS growth_rate FROM loan JOIN disp ON loan.account_id = disp.account_id JOIN client ON disp.client_id = client.client_id WHERE client.gender = 'male' AND loan.date BETWEEN 19960101 AND 19971231 GROUP BY loan.date
SELECT (SUM(loan.amount) - LAG(SUM(loan.amount)) OVER (ORDER BY loan.date)) / LAG(SUM(loan.amount)) OVER (ORDER BY loan.date) * 100 AS growth_rate FROM loan JOIN disp ON loan.account_id = disp.account_id JOIN client ON disp.client_id = client.client_id WHERE client.gender = 'male' AND loan.date >= '1996-01-01' AND loan.date < '1998-01-01' GROUP BY loan.date
SELECT (SUM(amount) - LAG(SUM(amount)) OVER (ORDER BY date)) / LAG(SUM(amount)) OVER (ORDER BY date) * 100 AS growth_rate FROM loan WHERE date BETWEEN 19960101 AND 19971231 AND client_id IN (SELECT client_id FROM client WHERE gender = 'male') GROUP BY date
SELECT (SUM(amount) - LAG(SUM(amount)) OVER (ORDER BY date)) / LAG(SUM(amount)) OVER (ORDER BY date) * 100 AS growth_rate FROM loan WHERE date BETWEEN 19960101 AND 19971231 AND client_id IN (SELECT client_id FROM client WHERE gender = 'male') GROUP BY date
SELECT (SUM(amount) - LAG(SUM(amount)) OVER (ORDER BY date)) / LAG(SUM(amount)) OVER (ORDER BY date) * 100 AS growth_rate FROM loan WHERE date BETWEEN '1996-01-01' AND '1997-12-31' AND client_id IN (SELECT client_id FROM client WHERE gender = 'male') GROUP BY date",SELECT (SUM(amount) - LAG(SUM(amount)) OVER (ORDER BY date)) / LAG(SUM(amount)) OVER (ORDER BY date) * 100 AS growth_rate FROM loan WHERE date BETWEEN 19960101 AND 19971231 AND client_id IN (SELECT client_id FROM client WHERE gender = 'male') GROUP BY date,0.0
242,263,What is the composition of element chlorine in percentage among the single bond molecules?,toxicology,challenging,"SELECT CAST(COUNT(CASE WHEN T.element = 'cl' THEN T.atom_id ELSE NULL END) AS REAL) * 100 / COUNT(T.atom_id) FROM ( SELECT T1.atom_id, T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type = '-' ) AS T",7,"SELECT element.element_id, element.label, element.atomic_number, element.atomic_weight, element.period, element.group, element.electron_configuration, element.electron_affinity, element.electronegativity, element.ionization_energy, element.standard_state, element.bonding_type, element.melting_point, element.boiling_point, element.density, element.atomic_radius, element.van_der_waals_radius, element.covalent_radius, element.ionic_radius, element.oxidation_states, element.standard_state, element.bonding_type, element.melting_point, element.boiling_point, element.density, element.atomic_radius, element.van_der_waals_radius, element.covalent_radius, element.ionic_radius, element.oxidation_states, element.standard_state, element.bonding_type, element.melting_point, element.boiling_point, element.density, element.atomic_radius, element.van_der_waals_radius, element.covalent_radius, element.ionic_radius, element.oxidation_states, element.standard_state, element.bonding_type, element.melting_point, element.boiling_point, element.density, element.atomic_radius, element.van_der_waals_radius, element.covalent_radius
SELECT element.element, SUM(CASE WHEN bond_type = 'single' THEN 1 ELSE 0 END) AS single_bond_count, SUM(CASE WHEN bond_type = 'double' THEN 1 ELSE 0 END) AS double_bond_count, SUM(CASE WHEN bond_type = 'triple' THEN 1 ELSE 0 END) AS triple_bond_count, SUM(CASE WHEN bond_type = 'aromatic' THEN 1 ELSE 0 END) AS aromatic_bond_count, SUM(CASE WHEN bond_type = 'ionic' THEN 1 ELSE 0 END) AS ionic_bond_count, SUM(CASE WHEN bond_type = 'covalent' THEN 1 ELSE 0 END) AS covalent_bond_count, SUM(CASE WHEN bond_type = 'hydrogen' THEN 1 ELSE 0 END) AS hydrogen_bond_count, SUM(CASE WHEN bond_type = 'metal' THEN 1 ELSE 0 END) AS metal_bond_count, SUM(CASE WHEN bond_type = 'metal_covalent' THEN 1 ELSE 0 END) AS metal_covalent_bond_count, SUM(CASE WHEN bond_type = 'metal_ionic' THEN 1 ELSE 0 END) AS metal_ionic_bond_count, SUM(CASE WHEN bond_type = 'metal_hydrogen' THEN 1 ELSE 0 END) AS
SELECT element.element_id, element.name, element.symbol, element.atomic_number, element.atomic_weight, element.period, element.group, element.electron_configuration, element.electron_affinity, element.electronegativity, element.ionization_energy, element.standard_state, element.bonding_type, element.melting_point, element.boiling_point, element.density, element.atomic_radius, element.ionic_radius, element.van_der_waals_radius, element.electron_negativity, element.oxidation_states, element.standard_state, element.bonding_type, element.melting_point, element.boiling_point, element.density, element.atomic_radius, element.ionic_radius, element.van_der_waals_radius, element.electron_negativity, element.oxidation_states, element.standard_state, element.bonding_type, element.melting_point, element.boiling_point, element.density, element.atomic_radius, element.ionic_radius, element.van_der_waals_radius, element.electron_negativity, element.oxidation_states, element.standard_state, element.bonding_type, element.melting_point, element.boiling_point, element.density, element.atomic_radius, element.ionic_radius, element.van_der_wa
SELECT element, SUM(percentage) FROM (     SELECT element, (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM connected WHERE molecule_id = m.molecule_id)) AS percentage     FROM connected c     JOIN atom a ON c.atom_id = a.atom_id     JOIN molecule m ON c.molecule_id = m.molecule_id     WHERE m.label = 'single bond'     GROUP BY element ) WHERE element = 'Cl' GROUP BY element
SELECT element.element_id, element.name, element.symbol, element.atomic_number, element.atomic_weight, element.period, element.group, element.electron_configuration, element.electron_affinity, element.electronegativity, element.ionization_energy, element.standard_state, element.bonding_type, element.melting_point, element.boiling_point, element.density, element.group_name, element.group_block, element.group_block_name, element.group_block_symbol, element.group_block_color, element.group_block_color_hex, element.group_block_color_rgb, element.group_block_color_hsl, element.group_block_color_cmyk, element.group_block_color_lab, element.group_block_color_lch, element.group_block_color_oklab, element.group_block_color_oklch, element.group_block_color_xyz, element.group_block_color_xyy, element.group_block_color_xyy_d50, element.group_block_color_xyy_d65, element.group_block_color_xyy_d75, element.group_block_color_xyy_d93, element.group_block_color_xy
SELECT element.element_id, element.name, element.symbol, element.atomic_number, element.atomic_weight, element.period, element.group, element.block, element.electron_configuration, element.electron_affinity, element.electronegativity, element.ionization_energy, element.standard_state, element.bonding_type, element.melting_point, element.boiling_point, element.density, element.atomic_radius, element.van_der_waals_radius, element.covalent_radius, element.ionic_radius, element.electron_negativity, element.electron_affinity, element.oxidation_states, element.bonding_type, element.bonding_type, element.bonding_type, element.bonding_type, element.bonding_type, element.bonding_type, element.bonding_type, element.bonding_type, element.bonding_type, element.bonding_type, element.bonding_type, element.bonding_type, element.bonding_type, element.bonding_type, element.bonding_type, element.bonding_type, element.bonding_type, element.bonding_type, element.bonding_type, element.bonding_type, element.bonding_type, element.bonding_type, element.bonding_type, element.bonding_type, element.bonding_type, element.bonding_type, element.
SELECT element.element, SUM(bond.bond_type = 'single') * 100.0 / COUNT(*) AS percentage FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON atom.molecule_id = molecule.molecule_id JOIN element ON atom.element = element.element WHERE molecule.label = 'single bond molecule' AND element.element = 'Cl' GROUP BY element.element","SELECT element.element_id, element.label, element.atomic_number, element.atomic_weight, element.period, element.group, element.electron_configuration, element.electron_affinity, element.electronegativity, element.ionization_energy, element.standard_state, element.bonding_type, element.melting_point, element.boiling_point, element.density, element.atomic_radius, element.van_der_waals_radius, element.covalent_radius, element.ionic_radius, element.oxidation_states, element.standard_state, element.bonding_type, element.melting_point, element.boiling_point, element.density, element.atomic_radius, element.van_der_waals_radius, element.covalent_radius, element.ionic_radius, element.oxidation_states, element.standard_state, element.bonding_type, element.melting_point, element.boiling_point, element.density, element.atomic_radius, element.van_der_waals_radius, element.covalent_radius, element.ionic_radius, element.oxidation_states, element.standard_state, element.bonding_type, element.melting_point, element.boiling_point, element.density, element.atomic_radius, element.van_der_waals_radius, element.covalent_radius",0.0
243,581,Who is the editor of the post titled 'Open source tools for visualizing multi-dimensional data?',codebase_community,moderate,SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.Title = 'Open source tools for visualizing multi-dimensional data?',7,"SELECT users.displayname FROM posts JOIN users ON posts.owneruserid = users.id WHERE posts.title = 'Open source tools for visualizing multi-dimensional data?'
SELECT users.displayname FROM posts JOIN users ON posts.owneruserid = users.id WHERE posts.title = 'Open source tools for visualizing multi-dimensional data?'
SELECT users.displayname FROM posts JOIN users ON posts.owneruserid = users.id WHERE posts.title = 'Open source tools for visualizing multi-dimensional data?'
SELECT users.displayname FROM posts JOIN users ON posts.owneruserid = users.id WHERE posts.title = 'Open source tools for visualizing multi-dimensional data?'
SELECT users.displayname FROM posts JOIN users ON posts.owneruserid = users.id WHERE posts.title = 'Open source tools for visualizing multi-dimensional data?'
SELECT users.displayname FROM posts JOIN users ON posts.owneruserid = users.id WHERE posts.title = 'Open source tools for visualizing multi-dimensional data?'
SELECT users.displayname FROM posts JOIN users ON posts.owneruserid = users.id WHERE posts.title = 'Open source tools for visualizing multi-dimensional data?'",SELECT users.displayname FROM posts JOIN users ON posts.owneruserid = users.id WHERE posts.title = 'Open source tools for visualizing multi-dimensional data?',1.0
244,486,What is the percentage of the cards with a converted mana cost of 7 in the set Coldsnap?,card_games,moderate,SELECT CAST(SUM(CASE WHEN T1.convertedManaCost = 7 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE T2.name = 'Coldsnap',7,"SELECT (SELECT COUNT(*) FROM cards WHERE setcode = 'csp' AND convertedmanacost = 7) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'csp') AS percentage
SELECT (COUNT(cards.id) * 100.0) / (SELECT COUNT(*) FROM cards) FROM cards WHERE cards.setcode = 'cns' AND cards.convertedmanacost = 7
SELECT (COUNT(cards.id) * 100.0) / (SELECT COUNT(cards.id) FROM cards WHERE cards.setcode = 'cns') FROM cards WHERE cards.convertedmanacost = 7 AND cards.setcode = 'cns'
SELECT (COUNT(cards.id) * 100.0) / (SELECT COUNT(*) FROM cards) FROM cards WHERE cards.convertedmanacost = 7 AND cards.setcode = 'cns'
SELECT (COUNT(cards.id) * 100.0 / (SELECT COUNT(cards.id) FROM cards WHERE cards.setcode = 'cns')) AS percentage FROM cards WHERE cards.convertedmanacost = 7 AND cards.setcode = 'cns'
SELECT (COUNT(cards.id) * 100.0 / (SELECT COUNT(cards.id) FROM cards WHERE cards.setcode = 'cns')) AS percentage FROM cards WHERE cards.convertedmanacost = 7 AND cards.setcode = 'cns'
SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'cns')) AS percentage FROM cards WHERE setcode = 'cns' AND convertedmanacost = 7",SELECT (COUNT(cards.id) * 100.0 / (SELECT COUNT(cards.id) FROM cards WHERE cards.setcode = 'cns')) AS percentage FROM cards WHERE cards.convertedmanacost = 7 AND cards.setcode = 'cns',0.0
245,928,Which driver ranked the first in the Canadian Grand Prix in 2007? Please give his reference name.,formula_1,moderate,"SELECT T3.forename, T3.surname, T3.driverRef FROM races AS T1 INNER JOIN results AS T2 ON T2.raceId = T1.raceId INNER JOIN drivers AS T3 ON T3.driverId = T2.driverId WHERE T1.name = 'Canadian Grand Prix' AND T2.rank = 1 AND T1.year = 2007",7,"SELECT drivers.driverref FROM drivers JOIN results ON drivers.driverid = results.driverid JOIN races ON results.raceid = races.raceid WHERE races.year = 2007 AND races.name = 'Canadian Grand Prix' ORDER BY results.position ASC LIMIT 1
SELECT drivers.driverref FROM results JOIN drivers ON results.driverid = drivers.driverid JOIN races ON results.raceid = races.raceid WHERE races.year = 2007 AND races.name = 'Canadian Grand Prix' ORDER BY results.position LIMIT 1
SELECT drivers.driverref FROM results JOIN drivers ON results.driverid = drivers.driverid JOIN races ON results.raceid = races.raceid WHERE races.year = 2007 AND races.name = 'Canadian Grand Prix' ORDER BY results.position ASC LIMIT 1
SELECT drivers.driverref FROM results JOIN drivers ON results.driverid = drivers.driverid JOIN races ON results.raceid = races.raceid WHERE races.year = 2007 AND races.name = 'Canadian Grand Prix' ORDER BY results.position LIMIT 1
SELECT drivers.driverref FROM results JOIN drivers ON results.driverid = drivers.driverid JOIN races ON results.raceid = races.raceid WHERE races.year = 2007 AND races.name = 'Canadian Grand Prix' ORDER BY results.position ASC LIMIT 1
SELECT drivers.driverref FROM drivers JOIN results ON drivers.driverid = results.driverid JOIN races ON results.raceid = races.raceid WHERE races.year = 2007 AND races.name = 'Canadian Grand Prix' ORDER BY results.position ASC LIMIT 1
SELECT drivers.driverref FROM results JOIN drivers ON results.driverid = drivers.driverid JOIN races ON results.raceid = races.raceid WHERE races.year = 2007 AND races.name = 'Canadian Grand Prix' ORDER BY results.position ASC LIMIT 1",SELECT drivers.driverref FROM results JOIN drivers ON results.driverid = drivers.driverid JOIN races ON results.raceid = races.raceid WHERE races.year = 2007 AND races.name = 'Canadian Grand Prix' ORDER BY results.position ASC LIMIT 1,0.0
246,1006,"Among all the lap records set on various circuits, what is the time for the fastest one?",formula_1,challenging,"SELECT time FROM lapTimes ORDER BY (CASE WHEN INSTR(time, ':') <> INSTR(SUBSTR(time, INSTR(time, ':') + 1), ':') + INSTR(time, ':') THEN CAST(SUBSTR(time, 1, INSTR(time, ':') - 1) AS REAL) * 3600 ELSE 0 END) + (CAST(SUBSTR(time, INSTR(time, ':') - 2 * (INSTR(time, ':') = INSTR(SUBSTR(time, INSTR(time, ':') + 1), ':') + INSTR(time, ':')), INSTR(time, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(time, INSTR(time, ':') + 1, INSTR(time, '.') - INSTR(time, ':') - 1) AS REAL)) + (CAST(SUBSTR(time, INSTR(time, '.') + 1) AS REAL) / 1000) ASC LIMIT 1",7,"SELECT MIN(time) FROM laptimes
SELECT MIN(time) FROM laptimes
SELECT MIN(time) FROM laptimes
SELECT MIN(time) FROM laptimes
SELECT MIN(time) FROM laptimes
SELECT MIN(time) FROM laptimes
SELECT MIN(time) FROM laptimes",SELECT MIN(time) FROM laptimes,0.0
247,1500,"Please list the product description of the products consumed in September, 2013.",debit_card_specializing,simple,SELECT T3.Description FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN products AS T3 ON T1.ProductID = T3.ProductID WHERE T2.Date = '201309',7,"SELECT products.description FROM products JOIN transactions_1k ON products.productid = transactions_1k.productid WHERE transactions_1k.date = '2013-09-01'
SELECT products.description FROM products JOIN transactions_1k ON products.productid = transactions_1k.productid WHERE transactions_1k.date = '2013-09-01'
SELECT products.description FROM products JOIN transactions_1k ON products.productid = transactions_1k.productid WHERE transactions_1k.date = '2013-09-01' GROUP BY products.description
SELECT products.description FROM products JOIN transactions_1k ON products.productid = transactions_1k.productid WHERE transactions_1k.date = '2013-09-01'
SELECT products.description FROM products JOIN transactions_1k ON products.productid = transactions_1k.productid WHERE transactions_1k.date = '2013-09-01'
SELECT products.description FROM products JOIN transactions_1k ON products.productid = transactions_1k.productid WHERE transactions_1k.date = '2013-09-01'
SELECT products.description FROM products JOIN transactions_1k ON products.productid = transactions_1k.productid WHERE transactions_1k.date = '2013-09-01'",SELECT products.description FROM products JOIN transactions_1k ON products.productid = transactions_1k.productid WHERE transactions_1k.date = '2013-09-01',0.0
248,1295,"Among the patients whose total bilirubin is over the normal range, how many of them have a peripheral pattern observed in the sheet of ANA examination?",thrombosis_prediction,challenging,SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.`T-BIL` >= 2 AND T3.`ANA Pattern` LIKE '%P%',7,"SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM laboratory WHERE t-bil > 10) AND id IN (SELECT id FROM laboratory WHERE ana = 'peripheral')
SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM laboratory WHERE t-bil > 10) AND id IN (SELECT id FROM laboratory WHERE ana = 'peripheral')
SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM laboratory WHERE t-bil > 10) AND id IN (SELECT id FROM laboratory WHERE ana = 'peripheral')
SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM laboratory WHERE t-bil > 10) AND id IN (SELECT id FROM laboratory WHERE ana = 'peripheral')
SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM laboratory WHERE t-bil > 10) AND id IN (SELECT id FROM laboratory WHERE ana = 'peripheral')
SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM laboratory WHERE t-bil > 10) AND id IN (SELECT id FROM laboratory WHERE ana = 'peripheral')
SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM laboratory WHERE t-bil > 10) AND id IN (SELECT id FROM laboratory WHERE ana LIKE '%peripheral%')",SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM laboratory WHERE t-bil > 10) AND id IN (SELECT id FROM laboratory WHERE ana = 'peripheral'),0.0
249,1211,Provide the ID and age of patient with lactate dehydrogenase (LDH) between 100-300 index above the normal range.,thrombosis_prediction,moderate,"SELECT DISTINCT T1.ID, STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.LDH > 600 AND T2.LDH < 800",7,"SELECT id, age FROM patient WHERE ldh BETWEEN 100 AND 300
SELECT id, age FROM patient WHERE lactate dehydrogenase (LDH) BETWEEN 100 AND 300
SELECT id, age FROM patient WHERE ldh BETWEEN 100 AND 300
SELECT id, age FROM patient WHERE ldh BETWEEN 100 AND 300
SELECT id, age FROM patient WHERE ldh BETWEEN 100 AND 300
SELECT id, age FROM patient WHERE ldh BETWEEN 100 AND 300
SELECT id, age FROM patient WHERE ldh BETWEEN 100 AND 300","SELECT id, age FROM patient WHERE ldh BETWEEN 100 AND 300",0.0
