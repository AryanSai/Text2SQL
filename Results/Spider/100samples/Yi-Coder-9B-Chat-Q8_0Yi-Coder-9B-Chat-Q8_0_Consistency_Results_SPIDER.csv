,Qid,Question,Db_Id,hardness,Query Gold,Repeated,Query Generated,Most Frequent Query
0,223,Which city has most number of departing flights?,flight_2,extra,SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1,7,"SELECT airports.city, COUNT(flights.sourceairport) AS num_departing_flights FROM airports JOIN flights ON airports.airportcode = flights.sourceairport GROUP BY airports.city ORDER BY num_departing_flights DESC LIMIT 1
SELECT airports.city, COUNT(flights.sourceairport) AS num_departing_flights FROM airports JOIN flights ON airports.airportcode = flights.sourceairport GROUP BY airports.city ORDER BY num_departing_flights DESC LIMIT 1
SELECT airports.city, COUNT(flights.sourceairport) as DepartingFlights FROM airports JOIN flights ON airports.airportcode = flights.sourceairport GROUP BY airports.city ORDER BY DepartingFlights DESC LIMIT 1
SELECT airports.city, COUNT(flights.sourceairport) AS DepartingFlights FROM airports JOIN flights ON airports.airportcode = flights.sourceairport GROUP BY airports.city ORDER BY DepartingFlights DESC LIMIT 1
SELECT airports.city, COUNT(flights.sourceairport) AS DepartingFlights FROM airports JOIN flights ON airports.airportcode = flights.sourceairport GROUP BY airports.city ORDER BY DepartingFlights DESC LIMIT 1
SELECT airports.city, COUNT(flights.sourceairport) AS DepartingFlights FROM airports JOIN flights ON airports.airportcode = flights.sourceairport GROUP BY airports.city ORDER BY DepartingFlights DESC LIMIT 1
SELECT airports.city, COUNT(flights.sourceairport) as DepartingFlights FROM airports JOIN flights ON airports.airportcode = flights.sourceairport GROUP BY airports.city ORDER BY DepartingFlights DESC LIMIT 1","SELECT airports.city, COUNT(flights.sourceairport) AS DepartingFlights FROM airports JOIN flights ON airports.airportcode = flights.sourceairport GROUP BY airports.city ORDER BY DepartingFlights DESC LIMIT 1"
1,864,Show the names and grades of each high schooler.,network_1,medium,"SELECT name ,  grade FROM Highschooler",7,"SELECT name, grade FROM highschooler
SELECT highschooler.name, highschooler.grade FROM highschooler
SELECT name, grade FROM highschooler
SELECT h.name, h.grade FROM highschooler h
SELECT h.name, h.grade FROM highschooler h
SELECT name, grade FROM highschooler
SELECT h.name, h.grade FROM highschooler h","SELECT name, grade FROM highschooler"
2,476,What is the code of the country with the most players?,wta_1,hard,SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1,7,"SELECT country_code, COUNT(*) as player_count FROM players GROUP BY country_code ORDER BY player_count DESC LIMIT 1
SELECT country_code, COUNT(*) as player_count FROM players GROUP BY country_code ORDER BY player_count DESC LIMIT 1
SELECT country_code, COUNT(*) as player_count FROM players GROUP BY country_code ORDER BY player_count DESC LIMIT 1
SELECT country_code, COUNT(*) as player_count FROM players GROUP BY country_code ORDER BY player_count DESC LIMIT 1
SELECT country_code, COUNT(*) as player_count FROM players GROUP BY country_code ORDER BY player_count DESC LIMIT 1
SELECT country_code, COUNT(*) as player_count FROM players GROUP BY country_code ORDER BY player_count DESC LIMIT 1
SELECT country_code, COUNT(*) as player_count FROM players GROUP BY country_code ORDER BY player_count DESC LIMIT 1","SELECT country_code, COUNT(*) as player_count FROM players GROUP BY country_code ORDER BY player_count DESC LIMIT 1"
3,1025,"For each singer name, what is the total sales for their songs?",singer,medium,"SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",7,"SELECT singer.name, SUM(song.sales) as total_sales FROM singer JOIN song ON singer.singer_id = song.singer_id GROUP BY singer.name
SELECT singer.name, SUM(song.sales) as total_sales FROM singer JOIN song ON singer.singer_id = song.singer_id GROUP BY singer.name
SELECT singer.name, SUM(song.sales) as Total_Sales FROM singer JOIN song ON singer.singer_id = song.singer_id GROUP BY singer.name
SELECT singer.name, SUM(song.sales) as total_sales FROM singer JOIN song ON singer.singer_id = song.singer_id GROUP BY singer.name
SELECT singer.name, SUM(song.sales) as total_sales FROM singer JOIN song ON singer.singer_id = song.singer_id GROUP BY singer.name
SELECT s.name AS singer_name, SUM(sg.sales) AS total_sales FROM singer AS s JOIN song AS sg ON s.singer_id = sg.singer_id GROUP BY s.name
SELECT singer.name, SUM(song.sales) as total_sales FROM singer JOIN song ON singer.singer_id = song.singer_id GROUP BY singer.name","SELECT singer.name, SUM(song.sales) as total_sales FROM singer JOIN song ON singer.singer_id = song.singer_id GROUP BY singer.name"
4,464,"What is the name of the winner who has won the most matches, and how many rank points does this player have?",wta_1,hard,"SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",7,"SELECT p.first_name, p.last_name, p.country_code, COUNT(m.winner_id) AS matches_won, MAX(r.ranking_points) AS max_rank_points FROM players AS p JOIN matches AS m ON p.player_id = m.winner_id JOIN rankings AS r ON p.player_id = r.player_id GROUP BY m.winner_id ORDER BY matches_won DESC, max_rank_points DESC LIMIT 1
SELECT p.first_name, p.last_name, p.country_code, COUNT(m.winner_id) AS matches_won, MAX(r.ranking_points) AS max_rank_points FROM players AS p JOIN matches AS m ON p.player_id = m.winner_id JOIN rankings AS r ON p.player_id = r.player_id GROUP BY m.winner_id ORDER BY matches_won DESC, max_rank_points DESC LIMIT 1
SELECT p.first_name, p.last_name, p.country_code, COUNT(m.winner_id) AS matches_won, SUM(m.winner_rank_points) AS total_rank_points FROM players AS p JOIN matches AS m ON p.player_id = m.winner_id GROUP BY m.winner_id ORDER BY matches_won DESC, total_rank_points DESC LIMIT 1
SELECT p.first_name, p.last_name, p.country_code, COUNT(m.winner_id) AS matches_won, SUM(m.winner_rank_points) AS total_rank_points FROM players AS p JOIN matches AS m ON p.player_id = m.winner_id GROUP BY m.winner_id ORDER BY matches_won DESC, total_rank_points DESC LIMIT 1
SELECT p.first_name, p.last_name, p.country_code, COUNT(m.winner_id) AS matches_won, m.winner_rank_points FROM players AS p JOIN matches AS m ON p.player_id = m.winner_id GROUP BY m.winner_id ORDER BY matches_won DESC, m.winner_rank_points DESC LIMIT 1
SELECT p.first_name, p.last_name, p.country_code, COUNT(m.winner_id) AS matches_won, SUM(m.winner_rank_points) AS total_rank_points FROM players AS p JOIN matches AS m ON p.player_id = m.winner_id GROUP BY m.winner_id ORDER BY matches_won DESC, total_rank_points DESC LIMIT 1
SELECT p.first_name, p.last_name, p.country_code, COUNT(m.winner_id) AS matches_won, m.winner_rank_points FROM players AS p JOIN matches AS m ON p.player_id = m.winner_id GROUP BY m.winner_id ORDER BY matches_won DESC, m.winner_rank_points DESC LIMIT 1","SELECT p.first_name, p.last_name, p.country_code, COUNT(m.winner_id) AS matches_won, SUM(m.winner_rank_points) AS total_rank_points FROM players AS p JOIN matches AS m ON p.player_id = m.winner_id GROUP BY m.winner_id ORDER BY matches_won DESC, total_rank_points DESC LIMIT 1"
5,297,How many documents do we have?,cre_Doc_Template_Mgt,easy,SELECT count(*) FROM Documents,7,"SELECT COUNT(*) FROM documents
SELECT COUNT(*) FROM documents
SELECT COUNT(*) FROM documents
SELECT COUNT(*) FROM documents
SELECT COUNT(*) FROM documents
SELECT COUNT(*) FROM documents
SELECT COUNT(*) FROM documents",SELECT COUNT(*) FROM documents
6,748,What are the names of nations where both English and French are official languages?,world_1,extra,"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND T2.IsOfficial  =  ""T"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""French"" AND T2.IsOfficial  =  ""T""",7,"SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language IN ('English', 'French') GROUP BY country.name HAVING COUNT(DISTINCT countrylanguage.language) = 2
SELECT country.name  FROM country  JOIN countrylanguage  ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language IN ('English', 'French')  GROUP BY country.name  HAVING COUNT(DISTINCT countrylanguage.language) = 2
SELECT country.name  FROM country  JOIN countrylanguage  ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language IN ('English', 'French')  GROUP BY country.name  HAVING COUNT(DISTINCT countrylanguage.language) = 2
SELECT country.name  FROM country  JOIN countrylanguage  ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language IN ('English', 'French')  GROUP BY country.name  HAVING COUNT(DISTINCT countrylanguage.language) = 2
SELECT country.name  FROM country  JOIN countrylanguage  ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language IN ('English', 'French')  GROUP BY country.name  HAVING COUNT(DISTINCT countrylanguage.language) = 2
SELECT country.name  FROM country  JOIN countrylanguage  ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language IN ('English', 'French')  GROUP BY country.name  HAVING COUNT(DISTINCT countrylanguage.language) = 2
SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language IN ('English', 'French') GROUP BY country.name HAVING COUNT(DISTINCT countrylanguage.language) = 2","SELECT country.name  FROM country  JOIN countrylanguage  ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language IN ('English', 'French')  GROUP BY country.name  HAVING COUNT(DISTINCT countrylanguage.language) = 2"
7,225,What is the code of airport that has the highest number of flights?,flight_2,extra,SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1,7,"SELECT sourceairport as airport_code, COUNT(*) as num_flights FROM flights GROUP BY sourceairport ORDER BY num_flights DESC LIMIT 1
SELECT sourceairport as airport_code, COUNT(*) as num_flights FROM flights GROUP BY sourceairport ORDER BY num_flights DESC LIMIT 1
SELECT sourceairport as airport_code, COUNT(*) as num_flights FROM flights GROUP BY sourceairport ORDER BY num_flights DESC LIMIT 1
SELECT sourceairport as airport_code, COUNT(*) as num_flights FROM flights GROUP BY sourceairport ORDER BY num_flights DESC LIMIT 1
SELECT sourceairport as airport_code, COUNT(*) as num_flights FROM flights GROUP BY sourceairport ORDER BY num_flights DESC LIMIT 1
SELECT sourceairport as airport_code, COUNT(*) as num_flights FROM flights GROUP BY sourceairport ORDER BY num_flights DESC LIMIT 1
SELECT sourceairport as airport_code, COUNT(*) as num_flights FROM flights GROUP BY sourceairport ORDER BY num_flights DESC LIMIT 1","SELECT sourceairport as airport_code, COUNT(*) as num_flights FROM flights GROUP BY sourceairport ORDER BY num_flights DESC LIMIT 1"
8,83,Find the last name of the student who has a cat that is age 3.,pets_1,hard,SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat',7,"SELECT student.lname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' AND pets.pet_age = 3
SELECT student.lname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' AND pets.pet_age = 3
SELECT student.lname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' AND pets.pet_age = 3
SELECT student.lname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' AND pets.pet_age = 3
SELECT student.lname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' AND pets.pet_age = 3
SELECT student.lname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' AND pets.pet_age = 3
SELECT student.lname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' AND pets.pet_age = 3",SELECT student.lname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' AND pets.pet_age = 3
9,331,Which template type code has most number of templates?,cre_Doc_Template_Mgt,hard,SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1,7,"SELECT template_type_code, COUNT(*) as template_count FROM templates GROUP BY template_type_code ORDER BY template_count DESC LIMIT 1
SELECT template_type_code, COUNT(*) as template_count FROM templates GROUP BY template_type_code ORDER BY template_count DESC LIMIT 1
SELECT template_type_code, COUNT(*) as template_count FROM templates GROUP BY template_type_code ORDER BY template_count DESC LIMIT 1
SELECT template_type_code, COUNT(*) as template_count FROM templates GROUP BY template_type_code ORDER BY template_count DESC LIMIT 1
SELECT template_type_code, COUNT(*) as template_count FROM templates GROUP BY template_type_code ORDER BY template_count DESC LIMIT 1
SELECT template_type_code, COUNT(*) as template_count FROM templates GROUP BY template_type_code ORDER BY template_count DESC LIMIT 1
SELECT template_type_code, COUNT(*) as template_count FROM templates GROUP BY template_type_code ORDER BY template_count DESC LIMIT 1","SELECT template_type_code, COUNT(*) as template_count FROM templates GROUP BY template_type_code ORDER BY template_count DESC LIMIT 1"
10,795,How many cities in each district have a population that is above the average population across all cities?,world_1,extra,"SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District",7,"SELECT district, COUNT(name) AS num_cities FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district
SELECT district, COUNT(name) AS num_cities FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district
SELECT district, COUNT(name) AS num_cities FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district
SELECT district, COUNT(name) AS num_cities FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district
SELECT district, COUNT(*) as num_cities FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district
SELECT district, COUNT(*) as num_cities_above_avg_population FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district
SELECT district, COUNT(name) AS num_cities FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district","SELECT district, COUNT(name) AS num_cities FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district"
11,500,What is the ship id and name that caused most total injuries?,battle_death,extra,"SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1",7,"SELECT ship.id, ship.name, SUM(death.injured) as total_injuries FROM ship JOIN death ON ship.id = death.caused_by_ship_id GROUP BY ship.id, ship.name ORDER BY total_injuries DESC LIMIT 1
SELECT ship.id, ship.name, SUM(death.injured) as total_injuries FROM ship JOIN death ON ship.id = death.caused_by_ship_id GROUP BY ship.id, ship.name ORDER BY total_injuries DESC LIMIT 1
SELECT ship.id, ship.name, SUM(death.injured) as total_injuries FROM ship JOIN death ON ship.id = death.caused_by_ship_id GROUP BY ship.id, ship.name ORDER BY total_injuries DESC LIMIT 1
SELECT ship.id, ship.name, SUM(death.injured) as total_injuries FROM ship JOIN death ON ship.id = death.caused_by_ship_id GROUP BY ship.id, ship.name ORDER BY total_injuries DESC LIMIT 1
SELECT ship.id, ship.name, SUM(death.injured) as total_injuries FROM ship JOIN death ON ship.id = death.caused_by_ship_id GROUP BY ship.id, ship.name ORDER BY total_injuries DESC LIMIT 1
SELECT ship.id, ship.name, SUM(death.injured) as total_injuries FROM ship JOIN death ON ship.id = death.caused_by_ship_id GROUP BY ship.id, ship.name ORDER BY total_injuries DESC LIMIT 1
SELECT ship.id, ship.name, SUM(death.injured) as total_injuries FROM ship JOIN death ON ship.id = death.caused_by_ship_id GROUP BY ship.id, ship.name ORDER BY total_injuries DESC LIMIT 1","SELECT ship.id, ship.name, SUM(death.injured) as total_injuries FROM ship JOIN death ON ship.id = death.caused_by_ship_id GROUP BY ship.id, ship.name ORDER BY total_injuries DESC LIMIT 1"
12,85,Find the average age of students who do not have any pet .,pets_1,extra,select avg(age) from student where stuid not in (select stuid from has_pet),7,"SELECT AVG(student.age)  FROM student  LEFT JOIN has_pet ON student.stuid = has_pet.stuid  WHERE has_pet.stuid IS NULL
SELECT AVG(student.age) FROM student LEFT JOIN has_pet ON student.stuid = has_pet.stuid LEFT JOIN pets ON has_pet.petid = pets.petid WHERE has_pet.petid IS NULL
SELECT AVG(student.age) FROM student LEFT JOIN has_pet ON student.stuid = has_pet.stuid LEFT JOIN pets ON has_pet.petid = pets.petid WHERE has_pet.petid IS NULL
SELECT AVG(student.age)  FROM student  LEFT JOIN has_pet ON student.stuid = has_pet.stuid  WHERE has_pet.stuid IS NULL
SELECT AVG(student.age) FROM student LEFT JOIN has_pet ON student.stuid = has_pet.stuid LEFT JOIN pets ON has_pet.petid = pets.petid WHERE has_pet.petid IS NULL
SELECT AVG(student.age) FROM student LEFT JOIN has_pet ON student.stuid = has_pet.stuid LEFT JOIN pets ON has_pet.petid = pets.petid WHERE has_pet.petid IS NULL
SELECT AVG(student.age) FROM student LEFT JOIN has_pet ON student.stuid = has_pet.stuid LEFT JOIN pets ON has_pet.petid = pets.petid WHERE has_pet.petid IS NULL",SELECT AVG(student.age) FROM student LEFT JOIN has_pet ON student.stuid = has_pet.stuid LEFT JOIN pets ON has_pet.petid = pets.petid WHERE has_pet.petid IS NULL
13,1022,Show the names of singers that have more than one song.,singer,medium,SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1,7,"SELECT singer.name  FROM singer  JOIN song ON singer.singer_id = song.singer_id  GROUP BY song.singer_id  HAVING COUNT(song.song_id) > 1
SELECT singer.name  FROM singer  JOIN song ON singer.singer_id = song.singer_id  GROUP BY singer.singer_id  HAVING COUNT(song.song_id) > 1
SELECT singer.name  FROM singer  JOIN song ON singer.singer_id = song.singer_id  GROUP BY song.singer_id  HAVING COUNT(song.song_id) > 1
SELECT singer.name  FROM singer  JOIN song ON singer.singer_id = song.singer_id  GROUP BY song.singer_id  HAVING COUNT(song.song_id) > 1
SELECT singer.name  FROM singer  JOIN song ON singer.singer_id = song.singer_id  GROUP BY singer.singer_id  HAVING COUNT(song.song_id) > 1
SELECT singer.name  FROM singer  JOIN song ON singer.singer_id = song.singer_id  GROUP BY song.singer_id  HAVING COUNT(song.song_id) > 1
SELECT singer.name  FROM singer  JOIN song ON singer.singer_id = song.singer_id  GROUP BY singer.singer_id  HAVING COUNT(song.song_id) > 1",SELECT singer.name  FROM singer  JOIN song ON singer.singer_id = song.singer_id  GROUP BY song.singer_id  HAVING COUNT(song.song_id) > 1
14,764,What is average life expectancy in the countries where English is not the official language?,world_1,extra,"SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND T2.IsOfficial  =  ""T"")",7,"SELECT AVG(country.lifeexpectancy) FROM country INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English' AND countrylanguage.isofficial = 0
SELECT AVG(country.lifeexpectancy)  FROM country  INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language = 'English' AND countrylanguage.isofficial = 0
SELECT AVG(country.lifeexpectancy)  FROM country  INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language = 'English' AND countrylanguage.isofficial = 0
SELECT AVG(country.lifeexpectancy)  FROM country  INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language = 'English' AND countrylanguage.isofficial = 'f'
SELECT AVG(country.lifeexpectancy) FROM country INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English' AND countrylanguage.isofficial = 0
SELECT AVG(country.lifeexpectancy) FROM country INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English' AND countrylanguage.isofficial = 'f'
SELECT AVG(country.lifeexpectancy)  FROM country  INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language = 'English' AND countrylanguage.isofficial = 'f'",SELECT AVG(country.lifeexpectancy) FROM country INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English' AND countrylanguage.isofficial = 0
15,773,Which countries have greater area than that of any country in Europe?,world_1,hard,"SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  ""Europe"")",7,"SELECT c.name, c.surfacearea  FROM country c  WHERE c.surfacearea > ANY (SELECT c2.surfacearea FROM country c2 WHERE c2.continent = 'Europe')
SELECT c.name, c.surfacearea FROM country c WHERE c.surfacearea > ANY (     SELECT e.surfacearea     FROM country e     WHERE e.continent = 'Europe' ) 
SELECT c.name, c.surfacearea FROM country c WHERE c.surfacearea > ANY (     SELECT e.surfacearea     FROM country e     WHERE e.continent = 'Europe' ) 
SELECT c.name, c.surfacearea  FROM country c  WHERE c.surfacearea > ANY (SELECT c2.surfacearea FROM country c2 WHERE c2.continent = 'Europe')
SELECT c.name, c.surfacearea  FROM country c  WHERE c.surfacearea > ANY (SELECT c2.surfacearea FROM country c2 WHERE c2.continent = 'Europe')
SELECT c.name, c.surfacearea  FROM country c  WHERE c.surfacearea > ANY (SELECT c2.surfacearea FROM country c2 WHERE c2.continent = 'Europe')
SELECT c.name, c.surfacearea  FROM country c WHERE c.surfacearea > ANY (SELECT c2.surfacearea FROM country c2 WHERE c2.continent = 'Europe')","SELECT c.name, c.surfacearea  FROM country c  WHERE c.surfacearea > ANY (SELECT c2.surfacearea FROM country c2 WHERE c2.continent = 'Europe')"
16,38,What are the names of the singers who performed in a concert in 2014?,concert_singer,hard,SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014,7,"SELECT s.name  FROM singer s  JOIN singer_in_concertsic ON s.singer_id = sic.singer_id  JOIN concertc ON sic.concert_id = c.concert_id  WHERE c.year = 2014
SELECT singer.name  FROM singer  JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id  JOIN concert ON singer_in_concert.concert_id = concert.concert_id  WHERE concert.year = 2014
SELECT singer.name  FROM singer  JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id  JOIN concert ON singer_in_concert.concert_id = concert.concert_id  WHERE concert.year = 2014
SELECT s.name  FROM singer AS s  JOIN singer_in_concert AS sic ON s.singer_id = sic.singer_id  JOIN concert AS c ON sic.concert_id = c.concert_id  WHERE c.year = 2014
SELECT singer.name  FROM singer  JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id  JOIN concert ON singer_in_concert.concert_id = concert.concert_id  WHERE concert.year = 2014
SELECT singer.name  FROM singer  JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id  JOIN concert ON singer_in_concert.concert_id = concert.concert_id  WHERE concert.year = 2014
SELECT s.name  FROM singer s  JOIN singer_in_concertsic ON s.singer_id =sic.singer_id  JOIN concert c ON c.concert_id =sic.concert_id  WHERE c.year = 2014",SELECT singer.name  FROM singer  JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id  JOIN concert ON singer_in_concert.concert_id = concert.concert_id  WHERE concert.year = 2014
17,916,Find the minimum grade of students who have no friends.,network_1,extra,SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id),7,"SELECT MIN(highschooler.grade) FROM highschooler LEFT JOIN friend ON highschooler.id = friend.student_id WHERE friend.friend_id IS NULL
SELECT MIN(highschooler.grade) FROM highschooler LEFT JOIN friend ON highschooler.id = friend.student_id WHERE friend.friend_id IS NULL
SELECT MIN(highschooler.grade) FROM highschooler LEFT JOIN friend ON highschooler.id = friend.student_id WHERE friend.friend_id IS NULL
SELECT MIN(highschooler.grade) FROM highschooler LEFT JOIN friend ON highschooler.id = friend.student_id WHERE friend.friend_id IS NULL
SELECT MIN(highschooler.grade) FROM highschooler LEFT JOIN friend ON highschooler.id = friend.student_id WHERE friend.friend_id IS NULL
SELECT MIN(highschooler.grade) FROM highschooler LEFT JOIN friend ON highschooler.id = friend.student_id WHERE friend.friend_id IS NULL
SELECT MIN(highschooler.grade) FROM highschooler LEFT JOIN friend ON highschooler.id = friend.student_id WHERE friend.friend_id IS NULL",SELECT MIN(highschooler.grade) FROM highschooler LEFT JOIN friend ON highschooler.id = friend.student_id WHERE friend.friend_id IS NULL
18,566,"What is the earliest date of a transcript release, and what details can you tell me?",student_transcripts_tracking,medium,"SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",7,"SELECT MIN(transcript_date) as EarliestTranscriptRelease, tc.* FROM transcripts t JOIN
SELECT MIN(transcript_date) as EarliestTranscriptRelease, tc.* FROM transcripts t JOIN
SELECT MIN(transcript_date) AS earliest_transcript_release, tc.* FROM transcripts t JO
SELECT MIN(transcript_date) AS earliest_transcript_release, tc.* FROM transcripts t JO
SELECT MIN(transcript_date) as EarliestTranscriptRelease, tc.* FROM transcripts t JOIN
SELECT MIN(transcript_date) AS earliest_transcript_release, tc.* FROM transcripts t JO
SELECT MIN(transcript_date) AS earliest_transcript_release, tc.* FROM transcripts t JO","SELECT MIN(transcript_date) AS earliest_transcript_release, tc.* FROM transcripts t JO"
19,590,What is the number of cartoones written by Joseph Kuhr?,tvshow,easy,"SELECT count(*) FROM Cartoon WHERE Written_by = ""Joseph Kuhr"";",7,"SELECT COUNT(*) FROM cartoon WHERE written_by = ""Joseph Kuhr""
SELECT COUNT(*) FROM cartoon WHERE written_by = ""Joseph Kuhr""
SELECT COUNT(*) FROM cartoon WHERE written_by = ""Joseph Kuhr""
SELECT COUNT(*) FROM cartoon WHERE written_by = ""Joseph Kuhr""
SELECT COUNT(*) FROM cartoon WHERE written_by = ""Joseph Kuhr""
SELECT COUNT(*) FROM cartoon WHERE written_by = ""Joseph Kuhr""
SELECT COUNT(*) FROM cartoon WHERE written_by = 'Joseph Kuhr'","SELECT COUNT(*) FROM cartoon WHERE written_by = ""Joseph Kuhr"""
20,762,"Find the name, population and expected life length of asian country with the largest area?",world_1,hard,"SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  ""Asia"" ORDER BY SurfaceArea DESC LIMIT 1",7,"SELECT c.name, c.population, c.lifeexpectancy  FROM country c  WHERE c.continent = 'Asia'  ORDER BY c.surfacearea DESC  LIMIT 1
SELECT c.name, c.population, c.lifeexpectancy  FROM country c  WHERE c.continent = 'Asia'  ORDER BY c.surfacearea DESC  LIMIT 1
SELECT c.name, c.population, c.lifeexpectancy  FROM country c  WHERE c.continent = 'Asia'  ORDER BY c.surfacearea DESC  LIMIT 1
SELECT c.name, c.population, c.lifeexpectancy  FROM country c  WHERE c.continent = 'Asia'  ORDER BY c.surfacearea DESC  LIMIT 1
SELECT c.name, c.population, c.lifeexpectancy  FROM country c  WHERE c.continent = 'Asia'  ORDER BY c.surfacearea DESC  LIMIT 1
SELECT c.name, c.population, c.lifeexpectancy  FROM country c  WHERE c.continent = 'Asia'  ORDER BY c.surfacearea DESC  LIMIT 1
SELECT c.name, c.population, c.lifeexpectancy  FROM country c  WHERE c.continent = 'Asia'  ORDER BY c.surfacearea DESC  LIMIT 1","SELECT c.name, c.population, c.lifeexpectancy  FROM country c  WHERE c.continent = 'Asia'  ORDER BY c.surfacearea DESC  LIMIT 1"
21,900,Show name of all students who have some friends and also are liked by someone else.,network_1,hard,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id,7,"SELECT h.name  FROM highschooler h  JOIN friend f ON h.id = f.student_id  JOIN likes l ON h.id = l.student_id  GROUP BY h.id, h.name  HAVING COUNT(f.friend_id) > 0 AND COUNT(l.liked_id) > 0
SELECT h.name  FROM highschooler h  JOIN friend f ON h.id = f.student_id  JOIN likes l ON h.id = l.student_id  GROUP BY h.id, h.name  HAVING COUNT(f.friend_id) > 0 AND COUNT(l.liked_id) > 0
SELECT h.name  FROM highschooler h  JOIN friend f ON h.id = f.student_id  JOIN likes l ON h.id = l.student_id  GROUP BY h.id, h.name  HAVING COUNT(f.friend_id) > 0 AND COUNT(l.liked_id) > 0
SELECT h.name  FROM highschooler h  JOIN friend f ON h.id = f.student_id  JOIN likes l ON h.id = l.student_id  GROUP BY h.name
SELECT h.name  FROM highschooler h  JOIN friend f ON h.id = f.student_id  JOIN likes l ON h.id = l.student_id  GROUP BY h.id, h.name  HAVING COUNT(f.friend_id) > 0 AND COUNT(l.liked_id) > 0
SELECT h.name FROM highschooler h JOIN friend f ON h.id = f.student_id JOIN likes l ON h.id = l.student_id GROUP BY h.id, h.name HAVING COUNT(f.friend_id) > 0 AND COUNT(l.liked_id) > 0
SELECT h.name  FROM highschooler h  JOIN friend f ON h.id = f.student_id  JOIN likes l ON h.id = l.student_id  GROUP BY h.name","SELECT h.name  FROM highschooler h  JOIN friend f ON h.id = f.student_id  JOIN likes l ON h.id = l.student_id  GROUP BY h.id, h.name  HAVING COUNT(f.friend_id) > 0 AND COUNT(l.liked_id) > 0"
22,691,What is last date created of votes from the state 'CA'?,voter_1,easy,SELECT max(created) FROM votes WHERE state  =  'CA',7,"SELECT MAX(created) FROM votes WHERE state = 'CA'
SELECT MAX(created) FROM votes WHERE state = 'CA'
SELECT MAX(created) FROM votes WHERE state = 'CA'
SELECT MAX(created) FROM votes WHERE state = 'CA'
SELECT MAX(created) FROM votes WHERE state = 'CA'
SELECT MAX(created) FROM votes WHERE state = 'CA'
SELECT MAX(created) FROM votes WHERE state = 'CA'",SELECT MAX(created) FROM votes WHERE state = 'CA'
23,178,What are the ids and names of all countries that either have more than 3 car makers or produce fiat model ?,car_1,extra,"select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';",7,"SELECT c.countryid, c.countryname FROM countries AS c JOIN car_makers AS cm ON c.countryid = cm.country JOIN model_list AS ml ON cm.id = ml.maker JOIN car_names AS cn ON ml.model = cn.model WHERE c.continent = 'contid' GROUP BY c.countryid, c.countryname HAVING COUNT(DISTINCT cm.id) > 3 OR SUM(CASE WHEN ml.model = 'fiat' THEN 1 ELSE 0 END) > 0
SELECT c.countryid, c.countryname  FROM countries AS c  JOIN car_makers AS cm ON c.countryid = cm.country  JOIN model_list AS ml ON cm.id = ml.maker  JOIN car_names AS cn ON ml.modelid = cn.model  WHERE cn.makeid IN (SELECT makeid FROM car_names GROUP BY makeid HAVING COUNT(makeid) > 3)  OR ml.model = 'Fiat'  GROUP BY c.countryid, c.countryname
SELECT c.countryid, c.countryname FROM countries AS c JOIN car_makers AS cm ON c.countryid = cm.country JOIN model_list AS ml ON cm.id = ml.maker JOIN car_names AS cn ON ml.model = cn.model WHERE c.continent = 'continents' GROUP BY c.countryid, c.countryname HAVING COUNT(DISTINCT cm.id) > 3 OR SUM(CASE WHEN ml.model = 'fiat' THEN 1 ELSE 0 END) > 0
SELECT c.countryid, c.countryname  FROM countries AS c  JOIN car_makers AS cm ON c.countryid = cm.country  JOIN model_list AS ml ON cm.id = ml.maker  JOIN car_names AS cn ON ml.modelid = cn.model  WHERE cn.makeid IN (SELECT makeid FROM car_names GROUP BY makeid HAVING COUNT(makeid) > 3)  OR ml.model = 'Fiat'  GROUP BY c.countryid, c.countryname
SELECT c.countryid, c.countryname  FROM countries AS c  JOIN car_makers AS cm ON c.countryid = cm.country  JOIN model_list AS ml ON cm.id = ml.maker  JOIN car_names AS cn ON ml.modelid = cn.model  WHERE cn.makeid IN (SELECT makeid FROM car_names GROUP BY makeid HAVING COUNT(makeid) > 3)  OR ml.model = 'Fiat'  GROUP BY c.countryid, c.countryname
SELECT c.countryid, c.countryname  FROM countries AS c  JOIN car_makers AS cm ON c.countryid = cm.country  JOIN model_list AS ml ON cm.id = ml.maker  JOIN car_names AS cn ON ml.modelid = cn.model  WHERE cn.makeid IN (SELECT makeid FROM car_names GROUP BY makeid HAVING COUNT(makeid) > 3)  OR ml.model = 'Fiat'  GROUP BY c.countryid, c.countryname
SELECT c.countryid, c.countryname FROM countries AS c JOIN car_makers AS cm ON c.countryid = cm.country JOIN model_list AS ml ON cm.id = ml.maker WHERE c.continent = 'continents' AND (     SELECT COUNT(*) FROM car_makers WHERE country = c.countryid GROUP BY country > 3 OR ml.model = 'fiat' )","SELECT c.countryid, c.countryname  FROM countries AS c  JOIN car_makers AS cm ON c.countryid = cm.country  JOIN model_list AS ml ON cm.id = ml.maker  JOIN car_names AS cn ON ml.modelid = cn.model  WHERE cn.makeid IN (SELECT makeid FROM car_names GROUP BY makeid HAVING COUNT(makeid) > 3)  OR ml.model = 'Fiat'  GROUP BY c.countryid, c.countryname"
24,226,What is the airport code of the airport with the most flights?,flight_2,extra,SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1,7,"SELECT airportcode FROM airports JOIN flights ON airports.airportcode = flights.destairport GROUP BY airports.airportcode ORDER BY COUNT(flights.destairport) DESC LIMIT 1
SELECT airportcode FROM airports JOIN flights ON airports.airportcode = flights.destairport GROUP BY airports.airportcode ORDER BY COUNT(flights.destairport) DESC LIMIT 1
SELECT airportcode FROM airports JOIN flights ON airports.airportcode = flights.destairport GROUP BY airports.airportcode ORDER BY COUNT(flights.destairport) DESC LIMIT 1
SELECT airportcode FROM airports JOIN flights ON airports.airportcode = flights.destairport GROUP BY airports.airportcode ORDER BY COUNT(flights.destairport) DESC LIMIT 1
SELECT airportcode FROM airports JOIN flights ON airports.airportcode = flights.destairport GROUP BY airports.airportcode ORDER BY COUNT(flights.destairport) DESC LIMIT 1
SELECT airportcode FROM airports JOIN flights ON airports.airportcode = flights.destairport GROUP BY airports.airportcode ORDER BY COUNT(flights.destairport) DESC LIMIT 1
SELECT airportcode FROM airports JOIN flights ON airports.airportcode = flights.destairport GROUP BY airports.airportcode ORDER BY COUNT(flights.destairport) DESC LIMIT 1",SELECT airportcode FROM airports JOIN flights ON airports.airportcode = flights.destairport GROUP BY airports.airportcode ORDER BY COUNT(flights.destairport) DESC LIMIT 1
25,943,Find the id and cell phone of the professionals who operate two or more types of treatments.,dog_kennels,medium,"SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",7,"SELECT professionals.professional_id, professionals.cell_number FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code GROUP BY professionals.professional_id HAVING COUNT(DISTINCT treatment_types.treatment_type_code) >= 2
SELECT professionals.professional_id, professionals.cell_number FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code GROUP BY professionals.professional_id HAVING COUNT(DISTINCT treatment_types.treatment_type_code) >= 2
SELECT professionals.professional_id, professionals.cell_number FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code GROUP BY professionals.professional_id HAVING COUNT(DISTINCT treatment_types.treatment_type_code) >= 2
SELECT professionals.professional_id, professionals.cell_number FROM professionals INNER JOIN treatments ON professionals.professional_id = treatments.professional_id GROUP BY professionals.professional_id HAVING COUNT(DISTINCT treatments.treatment_type_code) >= 2
SELECT professionals.professional_id, professionals.cell_number FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code GROUP BY professionals.professional_id HAVING COUNT(DISTINCT treatment_types.treatment_type_code) >= 2
SELECT professionals.professional_id, professionals.cell_number FROM professionals INNER JOIN treatments ON professionals.professional_id = treatments.professional_id GROUP BY professionals.professional_id HAVING COUNT(DISTINCT treatments.treatment_type_code) >= 2
SELECT professionals.professional_id, professionals.cell_number FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code GROUP BY professionals.professional_id HAVING COUNT(DISTINCT treatment_types.treatment_type_code) >= 2","SELECT professionals.professional_id, professionals.cell_number FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code GROUP BY professionals.professional_id HAVING COUNT(DISTINCT treatment_types.treatment_type_code) >= 2"
26,441,find the number of distinct country codes of all players.,wta_1,easy,SELECT count(DISTINCT country_code) FROM players,7,"SELECT COUNT(DISTINCT country_code) FROM players
SELECT COUNT(DISTINCT country_code) FROM players
SELECT COUNT(DISTINCT country_code) FROM players
SELECT COUNT(DISTINCT country_code) FROM players
SELECT COUNT(DISTINCT country_code) FROM players
SELECT COUNT(DISTINCT country_code) FROM players
SELECT COUNT(DISTINCT country_code) FROM players",SELECT COUNT(DISTINCT country_code) FROM players
27,785,What are the names of cities in Europe for which English is not the official language?,world_1,extra,SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English'),7,"SELECT city.name  FROM city  JOIN country ON city.countrycode = country.code  JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode  WHERE country.continent = 'Europe' AND countrylanguage.language = 'English' AND countrylanguage.isofficial = 'F'
SELECT city.name  FROM city  JOIN country ON city.countrycode = country.code  JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode  WHERE country.continent = 'Europe' AND countrylanguage.language = 'English' AND countrylanguage.isofficial = 'F'
SELECT city.name  FROM city  JOIN country ON city.countrycode = country.code  JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode  WHERE country.continent = 'Europe' AND countrylanguage.language = 'English' AND countrylanguage.isofficial = 'F'
SELECT city.name  FROM city  JOIN country ON city.countrycode = country.code  JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode  WHERE country.continent = 'Europe' AND countrylanguage.language = 'English' AND countrylanguage.isofficial = 'F'
SELECT city.name  FROM city  JOIN country ON city.countrycode = country.code  JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode  WHERE country.continent = 'Europe' AND countrylanguage.language = 'English' AND countrylanguage.isofficial = 'F'
SELECT city.name  FROM city  JOIN country ON city.countrycode = country.code  JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode  WHERE country.continent = 'Europe' AND countrylanguage.language = 'English' AND countrylanguage.isofficial = 'F'
SELECT city.name  FROM city  JOIN country ON city.countrycode = country.code  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE country.continent = 'Europe' AND countrylanguage.language = 'English' AND countrylanguage.isofficial = 'F'",SELECT city.name  FROM city  JOIN country ON city.countrycode = country.code  JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode  WHERE country.continent = 'Europe' AND countrylanguage.language = 'English' AND countrylanguage.isofficial = 'F'
28,703,Give the names of the nations that were founded after 1950.,world_1,easy,SELECT Name FROM country WHERE IndepYear  >  1950,7,"SELECT country.name  FROM country  WHERE country.indepyear > 1950
SELECT country.name FROM country WHERE country.indepyear > 1950
SELECT country.name  FROM country  WHERE country.indepyear > 1950
SELECT country.name  FROM country  WHERE country.indepyear > 1950
SELECT country.name FROM country WHERE country.indepyear > 1950
SELECT country.name FROM country WHERE country.indepyear > 1950
SELECT country.name FROM country WHERE country.indepyear > 1950",SELECT country.name FROM country WHERE country.indepyear > 1950
29,57,Find the first name of students who have cat or dog pet.,pets_1,extra,SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog',7,"SELECT student.fname  FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' OR pets.pettype = 'dog'
SELECT student.fname  FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' OR pets.pettype = 'dog'
SELECT student.fname  FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' OR pets.pettype = 'dog'
SELECT student.fname  FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' OR pets.pettype = 'dog'
SELECT student.fname  FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' OR pets.pettype = 'dog'
SELECT student.fname  FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' OR pets.pettype = 'dog'
SELECT student.fname  FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' OR pets.pettype = 'dog'",SELECT student.fname  FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' OR pets.pettype = 'dog'
30,359,How many paragraphs for the document with name 'Summer Show'?,cre_Doc_Template_Mgt,medium,SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show',7,"SELECT COUNT(*) FROM paragraphs INNER JOIN documents ON paragraphs.document_id = documents.document_id WHERE documents.document_name = 'Summer Show'
SELECT COUNT(*) FROM paragraphs INNER JOIN documents ON paragraphs.document_id = documents.document_id WHERE documents.document_name = 'Summer Show'
SELECT COUNT(*) FROM paragraphs INNER JOIN documents ON paragraphs.document_id = documents.document_id WHERE documents.document_name = 'Summer Show'
SELECT COUNT(*) FROM paragraphs INNER JOIN documents ON paragraphs.document_id = documents.document_id WHERE documents.document_name = 'Summer Show'
SELECT COUNT(*) FROM paragraphs INNER JOIN documents ON paragraphs.document_id = documents.document_id WHERE documents.document_name = 'Summer Show'
SELECT COUNT(*) FROM paragraphs INNER JOIN documents ON paragraphs.document_id = documents.document_id WHERE documents.document_name = 'Summer Show'
SELECT COUNT(*) FROM paragraphs INNER JOIN documents ON paragraphs.document_id = documents.document_id WHERE documents.document_name = 'Summer Show'",SELECT COUNT(*) FROM paragraphs INNER JOIN documents ON paragraphs.document_id = documents.document_id WHERE documents.document_name = 'Summer Show'
31,293,Which district has both stores with less than 3000 products and stores with more than 10000 products?,employee_hire_evaluation,hard,SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000,7,"SELECT shop.district  FROM shop  JOIN hiring ON shop.shop_id = hiring.shop_id  JOIN employee ON hiring.employee_id = employee.employee_id  WHERE shop.number_products < 3000  AND shop.district IN (     SELECT shop.district      FROM shop      WHERE shop.number_products > 10000 ) GROUP BY shop.district
SELECT shop.district FROM shop WHERE shop.number_products < 3000 INTERSECT SELECT shop.district FROM shop WHERE shop.number_products > 10000
SELECT shop.district  FROM shop  JOIN hiring ON shop.shop_id = hiring.shop_id  JOIN employee ON hiring.employee_id = employee.employee_id  WHERE shop.number_products < 3000 AND shop.number_products > 10000  GROUP BY shop.district
SELECT shop.district FROM shop WHERE shop.number_products < 3000 INTERSECT SELECT shop.district FROM shop WHERE shop.number_products > 10000
SELECT shop.district  FROM shop  JOIN hiring ON shop.shop_id = hiring.shop_id  JOIN employee ON hiring.employee_id = employee.employee_id  WHERE shop.number_products < 3000  AND shop.number_products > 10000  GROUP BY shop.district
SELECT shop.district  FROM shop  JOIN hiring ON shop.shop_id = hiring.shop_id  JOIN employee ON hiring.employee_id = employee.employee_id  WHERE shop.number_products < 3000 AND shop.number_products > 10000  GROUP BY shop.district
SELECT shop.district  FROM shop  WHERE shop.number_products < 3000  INTERSECT  SELECT shop.district  FROM shop  WHERE shop.number_products > 10000",SELECT shop.district FROM shop WHERE shop.number_products < 3000 INTERSECT SELECT shop.district FROM shop WHERE shop.number_products > 10000
32,37,List all singer names in concerts in year 2014.,concert_singer,hard,SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014,7,"SELECT s.name  FROM singer AS s  JOIN singer_in_concert AS sic ON s.singer_id = sic.singer_id  JOIN concert AS c ON sic.concert_id = c.concert_id  WHERE c.year = 2014
SELECT s.name  FROM singer AS s  JOIN singer_in_concert AS sic ON s.singer_id = sic.singer_id  JOIN concert AS c ON sic.concert_id = c.concert_id  WHERE c.year = 2014
SELECT s.name  FROM singer AS s  JOIN singer_in_concert AS sic ON s.singer_id = sic.singer_id  JOIN concert AS c ON sic.concert_id = c.concert_id  WHERE c.year = 2014
SELECT s.name  FROM singer s  JOIN singer_in_concertsic ON s.singer_id = sic.singer_id  JOIN concertc ON sic.concert_id = c.concert_id  JOIN stadiumst ON c.stadium_id = st.stadium_id  WHERE c.year = 2014
SELECT singer.name  FROM singer  JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id  JOIN concert ON singer_in_concert.concert_id = concert.concert_id  WHERE concert.year = 2014
SELECT s.name  FROM singer s  JOIN singer_in_concertsic ON s.singer_id = sic.singer_id  JOIN concertc ON sic.concert_id = c.concert_id  JOIN stadiumst ON c.stadium_id = st.stadium_id  WHERE c.year = 2014
SELECT s.name  FROM singer s  JOIN singer_in_concertsic ON s.singer_id = sic.singer_id  JOIN concertc ON sic.concert_id = c.concert_id  JOIN stadiumst ON c.stadium_id = st.stadium_id  WHERE c.year = 2014",SELECT s.name  FROM singer AS s  JOIN singer_in_concert AS sic ON s.singer_id = sic.singer_id  JOIN concert AS c ON sic.concert_id = c.concert_id  WHERE c.year = 2014
33,542,"What is the first, middle, and last name, along with the id and number of enrollments, for the student who enrolled the most in any program?",student_transcripts_tracking,extra,"SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT s.first_name, s.middle_name
SELECT s.first_name, s.middle_name
SELECT s.first_name, s.middle_name
SELECT s.first_name, s.middle_name
SELECT s.first_name, s.middle_name
SELECT s.first_name, s.middle_name
SELECT s.first_name, s.middle_name","SELECT s.first_name, s.middle_name"
34,721,Give the name of the country in Asia with the lowest life expectancy.,world_1,hard,"SELECT Name FROM country WHERE Continent  =  ""Asia"" ORDER BY LifeExpectancy LIMIT 1",7,"SELECT country.name FROM country WHERE country.continent = 'Asia' ORDER BY country.lifeexpectancy ASC LIMIT 1
SELECT country.name FROM country WHERE country.continent = 'Asia' ORDER BY country.lifeexpectancy ASC LIMIT 1
SELECT country.name FROM country WHERE country.continent = 'Asia' ORDER BY country.lifeexpectancy ASC LIMIT 1
SELECT country.name FROM country WHERE country.continent = 'Asia' ORDER BY country.lifeexpectancy ASC LIMIT 1
SELECT country.name FROM country WHERE country.continent = 'Asia' ORDER BY country.lifeexpectancy ASC LIMIT 1
SELECT country.name FROM country WHERE country.continent = 'Asia' ORDER BY country.lifeexpectancy ASC LIMIT 1
SELECT country.name FROM country WHERE country.continent = 'Asia' ORDER BY country.lifeexpectancy ASC LIMIT 1",SELECT country.name FROM country WHERE country.continent = 'Asia' ORDER BY country.lifeexpectancy ASC LIMIT 1
35,284,Which shop has the most employees? Give me the shop name.,employee_hire_evaluation,extra,SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1,7,"SELECT s.name, COUNT(h.employee_id) AS num_employees FROM shop AS s JOIN hiring AS h ON s.shop_id = h.shop_id GROUP BY s.shop_id ORDER BY num_employees DESC LIMIT 1
SELECT s.name, COUNT(h.employee_id) AS num_employees FROM shop AS s JOIN hiring AS h ON s.shop_id = h.shop_id GROUP BY s.shop_id ORDER BY num_employees DESC LIMIT 1
SELECT s.name, COUNT(h.employee_id) as num_employees FROM shop s JOIN hiring h ON s.shop_id = h.shop_id GROUP BY s.shop_id ORDER BY num_employees DESC LIMIT 1
SELECT shop.name, COUNT(hiring.employee_id) as employee_count FROM shop JOIN hiring ON shop.shop_id = hiring.shop_id GROUP BY shop.shop_id ORDER BY employee_count DESC LIMIT 1
SELECT s.name, COUNT(h.employee_id) AS num_employees FROM shop AS s JOIN hiring AS h ON s.shop_id = h.shop_id GROUP BY s.shop_id ORDER BY num_employees DESC LIMIT 1
SELECT s.name, COUNT(h.employee_id) AS num_employees FROM shop AS s JOIN hiring AS h ON s.shop_id = h.shop_id GROUP BY s.shop_id ORDER BY num_employees DESC LIMIT 1
SELECT s.name, COUNT(h.employee_id) AS employee_count FROM shop AS s JOIN hiring AS h ON s.shop_id = h.shop_id GROUP BY s.shop_id ORDER BY employee_count DESC LIMIT 1","SELECT s.name, COUNT(h.employee_id) AS num_employees FROM shop AS s JOIN hiring AS h ON s.shop_id = h.shop_id GROUP BY s.shop_id ORDER BY num_employees DESC LIMIT 1"
36,173,What are the name of the countries where there is not a single car maker?,car_1,hard,SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;,7,"SELECT countryname FROM countries WHERE countryid NOT IN (SELECT DISTINCT country FROM car_makers)
SELECT countryname FROM countries WHERE countryid NOT IN (SELECT DISTINCT country FROM car_makers)
SELECT countryname FROM countries WHERE countryid NOT IN (SELECT DISTINCT country FROM car_makers)
SELECT countryname FROM countries WHERE countryid NOT IN (SELECT DISTINCT country FROM car_makers)
SELECT countryname FROM countries WHERE countryid NOT IN (SELECT DISTINCT country FROM car_makers)
SELECT countryname FROM countries WHERE countryid NOT IN (SELECT DISTINCT country FROM car_makers)
SELECT countryname FROM countries WHERE countryid NOT IN (SELECT DISTINCT country FROM car_makers)",SELECT countryname FROM countries WHERE countryid NOT IN (SELECT DISTINCT country FROM car_makers)
37,930,"Which owner owns the most dogs? List the owner id, first name and last name.",dog_kennels,extra,"SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT owners.owner_id, owners.first_name, owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id GROUP BY owners.owner_id, owners.first_name, owners.last_name ORDER BY COUNT(dogs.dog_id) DESC LIMIT 1
SELECT owners.owner_id, owners.first_name, owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id GROUP BY owners.owner_id, owners.first_name, owners.last_name ORDER BY COUNT(dogs.dog_id) DESC LIMIT 1
SELECT owners.owner_id, owners.first_name, owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id GROUP BY owners.owner_id, owners.first_name, owners.last_name ORDER BY COUNT(dogs.dog_id) DESC LIMIT 1
SELECT owners.owner_id, owners.first_name, owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id GROUP BY owners.owner_id, owners.first_name, owners.last_name ORDER BY COUNT(dogs.dog_id) DESC LIMIT 1
SELECT owners.owner_id, owners.first_name, owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id GROUP BY owners.owner_id, owners.first_name, owners.last_name ORDER BY COUNT(dogs.dog_id) DESC LIMIT 1
SELECT owners.owner_id, owners.first_name, owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id GROUP BY owners.owner_id, owners.first_name, owners.last_name ORDER BY COUNT(dogs.dog_id) DESC LIMIT 1
SELECT owners.owner_id, owners.first_name, owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id GROUP BY owners.owner_id, owners.first_name, owners.last_name ORDER BY COUNT(dogs.dog_id) DESC LIMIT 1","SELECT owners.owner_id, owners.first_name, owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id GROUP BY owners.owner_id, owners.first_name, owners.last_name ORDER BY COUNT(dogs.dog_id) DESC LIMIT 1"
38,540,What is the program id and the summary of the degree that has the most students enrolled?,student_transcripts_tracking,extra,"SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT dp.degree_program_id, dp.degree_summary_name  FROM degree_programs dp  
SELECT dp.degree_program_id, dp.degree_summary_name FROM degree_programs dp JOIN
SELECT dp.degree_program_id, dp.degree_summary_name FROM degree_programs dp JOIN
SELECT dp.degree_program_id, dp.degree_summary_name FROM degree_programs dp JOIN
SELECT dp.degree_program_id, dp.degree_summary_name FROM degree_programs AS dp JO
SELECT dp.degree_program_id, dp.degree_summary_name FROM degree_programs AS dp JO
SELECT dp.degree_program_id, dp.degree_summary_name FROM degree_programs dp JOIN","SELECT dp.degree_program_id, dp.degree_summary_name FROM degree_programs dp JOIN"
39,422,What is the name of the museum that had no visitor yet?,museum_visit,hard,SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit),7,"SELECT museum.name  FROM museum  LEFT JOIN visit ON museum.museum_id = visit.museum_id  WHERE visit.visitor_id IS NULL
SELECT museum.name  FROM museum  LEFT JOIN visit ON museum.museum_id = visit.museum_id  WHERE visit.visitor_id IS NULL
SELECT museum.name  FROM museum  LEFT JOIN visit ON museum.museum_id = visit.museum_id  WHERE visit.visitor_id IS NULL
SELECT museum.name  FROM museum  LEFT JOIN visit ON museum.museum_id = visit.museum_id  WHERE visit.visitor_id IS NULL
SELECT museum.name  FROM museum  LEFT JOIN visit ON museum.museum_id = visit.museum_id  WHERE visit.visitor_id IS NULL
SELECT museum.name  FROM museum  LEFT JOIN visit ON museum.museum_id = visit.museum_id  WHERE visit.visitor_id IS NULL
SELECT museum.name  FROM museum  LEFT JOIN visit ON museum.museum_id = visit.museum_id  WHERE visit.visitor_id IS NULL",SELECT museum.name  FROM museum  LEFT JOIN visit ON museum.museum_id = visit.museum_id  WHERE visit.visitor_id IS NULL
40,949,What are the cost and treatment type description of each treatment?,dog_kennels,medium,"SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code",7,"SELECT t.cost_of_treatment, tt.treatment_type_description FROM treatments t JOIN treatment_types tt ON t.treatment_type_code = tt.treatment_type_code
SELECT t.cost_of_treatment, tt.treatment_type_description FROM treatments t JOIN treatment_types tt ON t.treatment_type_code = tt.treatment_type_code
SELECT t.cost_of_treatment, tt.treatment_type_description FROM treatments t JOIN treatment_types tt ON t.treatment_type_code = tt.treatment_type_code
SELECT t.cost_of_treatment, tt.treatment_type_description FROM treatments t JOIN treatment_types tt ON t.treatment_type_code = tt.treatment_type_code
SELECT t.cost_of_treatment, tt.treatment_type_description FROM treatments t JOIN treatment_types tt ON t.treatment_type_code = tt.treatment_type_code
SELECT t.cost_of_treatment, tt.treatment_type_description FROM treatments t JOIN treatment_types tt ON t.treatment_type_code = tt.treatment_type_code
SELECT t.cost_of_treatment, tt.treatment_type_description FROM treatments t JOIN treatment_types tt ON t.treatment_type_code = tt.treatment_type_code","SELECT t.cost_of_treatment, tt.treatment_type_description FROM treatments t JOIN treatment_types tt ON t.treatment_type_code = tt.treatment_type_code"
41,1026,List the name of singers that do not have any song.,singer,hard,SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song),7,"SELECT singer.name  FROM singer  LEFT JOIN song ON singer.singer_id = song.singer_id  WHERE song.song_id IS NULL
SELECT singer.name  FROM singer  LEFT JOIN song ON singer.singer_id = song.singer_id  WHERE song.song_id IS NULL
SELECT singer.name  FROM singer  LEFT JOIN song ON singer.singer_id = song.singer_id  WHERE song.song_id IS NULL
SELECT singer.name  FROM singer  LEFT JOIN song ON singer.singer_id = song.singer_id  WHERE song.song_id IS NULL
SELECT singer.name  FROM singer  LEFT JOIN song ON singer.singer_id = song.singer_id  WHERE song.song_id IS NULL
SELECT singer.name  FROM singer  LEFT JOIN song ON singer.singer_id = song.singer_id  WHERE song.song_id IS NULL
SELECT singer.name  FROM singer  LEFT JOIN song ON singer.singer_id = song.singer_id  WHERE song.song_id IS NULL",SELECT singer.name  FROM singer  LEFT JOIN song ON singer.singer_id = song.singer_id  WHERE song.song_id IS NULL
42,515,Which department offers the most number of degrees? List department name and id.,student_transcripts_tracking,extra,"SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT d.department_id, d.department_name, COUNT(dp.degree_program_id) AS degree_count
SELECT d.department_id, d.department_name, COUNT(dp.degree_program_id) AS degree_count
SELECT d.department_id, d.department_name, COUNT(dp.degree_program_id) AS degree_count
SELECT d.department_id, d.department_name, COUNT(dp.degree_program_id) AS degree_count
SELECT d.department_id, d.department_name, COUNT(dp.degree_program_id) AS degree_count
SELECT d.department_id, d.department_name, COUNT(dp.degree_program_id) AS degree_count
SELECT d.department_id, d.department_name, COUNT(dp.degree_program_id) AS degree_count","SELECT d.department_id, d.department_name, COUNT(dp.degree_program_id) AS degree_count"
43,746,What are the names of nations speak both English and French?,world_1,extra,"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""French""",7,"SELECT country.name  FROM country  JOIN countrylanguage  ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language IN ('English', 'French')  GROUP BY country.name  HAVING COUNT(DISTINCT countrylanguage.language) = 2
SELECT country.name  FROM country  JOIN countrylanguage  ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language IN ('English', 'French')  GROUP BY country.name  HAVING COUNT(DISTINCT countrylanguage.language) = 2
SELECT country.name  FROM country  JOIN countrylanguage  ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language IN ('English', 'French')  GROUP BY country.name  HAVING COUNT(DISTINCT countrylanguage.language) = 2
SELECT country.name  FROM country  JOIN countrylanguage  ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language IN ('English', 'French')  GROUP BY country.name  HAVING COUNT(DISTINCT countrylanguage.language) = 2
SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language IN ('English', 'French') GROUP BY country.name HAVING COUNT(DISTINCT countrylanguage.language) = 2
SELECT country.name  FROM country  JOIN countrylanguage  ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language IN ('English', 'French')  GROUP BY country.name  HAVING COUNT(DISTINCT countrylanguage.language) = 2
SELECT country.name  FROM country  JOIN countrylanguage  ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language IN ('English', 'French') GROUP BY country.name HAVING COUNT(DISTINCT countrylanguage.language) = 2","SELECT country.name  FROM country  JOIN countrylanguage  ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language IN ('English', 'French')  GROUP BY country.name  HAVING COUNT(DISTINCT countrylanguage.language) = 2"
44,475,find the code of the country where has the greatest number of players.,wta_1,hard,SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1,7,"SELECT country_code, COUNT(*) as num_players FROM players GROUP BY country_code ORDER BY num_players DESC LIMIT 1
SELECT country_code, COUNT(*) as num_players FROM players GROUP BY country_code ORDER BY num_players DESC LIMIT 1
SELECT country_code, COUNT(*) as num_players FROM players GROUP BY country_code ORDER BY num_players DESC LIMIT 1
SELECT country_code, COUNT(*) as num_players FROM players GROUP BY country_code ORDER BY num_players DESC LIMIT 1
SELECT country_code, COUNT(*) as num_players FROM players GROUP BY country_code ORDER BY num_players DESC LIMIT 1
SELECT country_code, COUNT(*) as num_players FROM players GROUP BY country_code ORDER BY num_players DESC LIMIT 1
SELECT country_code, COUNT(*) as num_players FROM players GROUP BY country_code ORDER BY num_players DESC LIMIT 1","SELECT country_code, COUNT(*) as num_players FROM players GROUP BY country_code ORDER BY num_players DESC LIMIT 1"
45,141,Which model has the most version(make) of cars?,car_1,hard,SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;,7,"SELECT ml.model, COUNT(cn.makeid) as make_count FROM model_list ml JOIN car_names cn ON ml.modelid = cn.makeid GROUP BY ml.model ORDER BY make_count DESC LIMIT 1
SELECT ml.model, COUNT(cn.makeid) as make_count FROM model_list ml JOIN car_names cn ON ml.modelid = cn.makeid GROUP BY ml.model ORDER BY make_count DESC LIMIT 1
SELECT ml.model, COUNT(cn.makeid) as car_count FROM model_list ml JOIN car_names cn ON ml.modelid = cn.makeid GROUP BY ml.model ORDER BY car_count DESC LIMIT 1
SELECT ml.model, COUNT(cn.makeid) as total_cars FROM model_list ml JOIN car_names cn ON ml.modelid = cn.makeid GROUP BY ml.model ORDER BY total_cars DESC LIMIT 1
SELECT model, COUNT(*) as count FROM car_names GROUP BY model ORDER BY count DESC LIMIT 1
SELECT ml.model, COUNT(cn.makeid) as make_count FROM model_list ml JOIN car_names cn ON ml.modelid = cn.makeid GROUP BY ml.model ORDER BY make_count DESC LIMIT 1
SELECT ml.model, COUNT(cn.makeid) as car_count FROM model_list ml JOIN car_names cn ON ml.modelid = cn.makeid GROUP BY ml.model ORDER BY car_count DESC LIMIT 1","SELECT ml.model, COUNT(cn.makeid) as make_count FROM model_list ml JOIN car_names cn ON ml.modelid = cn.makeid GROUP BY ml.model ORDER BY make_count DESC LIMIT 1"
46,43,Find the number of concerts happened in the stadium with the highest capacity .,concert_singer,hard,select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1),7,"SELECT COUNT(*) FROM concert WHERE stadium_id = (SELECT stadium_id FROM stadium WHERE capacity = (SELECT MAX(capacity) FROM stadium))
SELECT COUNT(*) FROM concert WHERE stadium_id = (SELECT stadium_id FROM stadium WHERE capacity = (SELECT MAX(capacity) FROM stadium))
SELECT COUNT(*) FROM concert WHERE stadium_id = (SELECT stadium_id FROM stadium WHERE capacity = (SELECT MAX(capacity) FROM stadium))
SELECT COUNT(*)  FROM concert  WHERE stadium_id =      (SELECT stadium_id       FROM stadium       ORDER BY capacity DESC       LIMIT 1)
SELECT COUNT(*) FROM concert WHERE stadium_id = (SELECT stadium_id FROM stadium WHERE capacity = (SELECT MAX(capacity) FROM stadium))
SELECT COUNT(*) FROM concert WHERE stadium_id = (     SELECT stadium_id FROM stadium     ORDER BY capacity DESC     LIMIT 1 )
SELECT COUNT(*) FROM concert WHERE stadium_id = (SELECT stadium_id FROM stadium WHERE capacity = (SELECT MAX(capacity) FROM stadium))",SELECT COUNT(*) FROM concert WHERE stadium_id = (SELECT stadium_id FROM stadium WHERE capacity = (SELECT MAX(capacity) FROM stadium))
47,121,What are all the makers and models?,car_1,medium,"SELECT Maker ,  Model FROM MODEL_LIST;",7,"SELECT maker, model FROM car_makers, model_list WHERE car_makers.id = model_list.maker
SELECT maker, model FROM car_makers INNER JOIN model_list ON car_makers.id = model_list.maker
SELECT maker, model FROM car_makers, model_list WHERE car_makers.id = model_list.maker
SELECT maker, model FROM model_list INNER JOIN car_makers ON model_list.maker = car_makers.id
SELECT maker, model FROM car_makers, model_list WHERE car_makers.id = model_list.maker
SELECT maker, model FROM car_makers, model_list WHERE car_makers.id = model_list.maker
SELECT maker, model FROM car_makers INNER JOIN model_list ON car_makers.id = model_list.maker","SELECT maker, model FROM car_makers, model_list WHERE car_makers.id = model_list.maker"
48,937,Tell me the owner id and last name of the owner who spent the most on treatments of his or her dogs.,dog_kennels,extra,"SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT owners.owner_id, owners.last_name, SUM(treatments.cost_of_treatment) as total_spent FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN treatments ON dogs.dog_id = treatments.dog_id GROUP BY owners.owner_id ORDER BY total_spent DESC LIMIT 1
SELECT owners.owner_id, owners.last_name, SUM(treatments.cost_of_treatment) as total_spent FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN treatments ON dogs.dog_id = treatments.dog_id GROUP BY owners.owner_id ORDER BY total_spent DESC LIMIT 1
SELECT owners.owner_id, owners.last_name, SUM(treatments.cost_of_treatment) as total_spent FROM treatments JOIN dogs ON treatments.dog_id = dogs.dog_id JOIN owners ON dogs.owner_id = owners.owner_id GROUP BY owners.owner_id ORDER BY total_spent DESC LIMIT 1
SELECT owners.owner_id, owners.last_name, SUM(treatments.cost_of_treatment) as total_spent FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN treatments ON dogs.dog_id = treatments.dog_id GROUP BY owners.owner_id ORDER BY total_spent DESC LIMIT 1
SELECT owners.owner_id, owners.last_name, SUM(treatments.cost_of_treatment) as total_spent FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN treatments ON dogs.dog_id = treatments.dog_id GROUP BY owners.owner_id ORDER BY total_spent DESC LIMIT 1
SELECT owners.owner_id, owners.last_name, SUM(treatments.cost_of_treatment) as total_spent FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN treatments ON dogs.dog_id = treatments.dog_id GROUP BY owners.owner_id ORDER BY total_spent DESC LIMIT 1
SELECT owners.owner_id, owners.last_name, SUM(treatments.cost_of_treatment) as total_spent FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN treatments ON dogs.dog_id = treatments.dog_id GROUP BY owners.owner_id ORDER BY total_spent DESC LIMIT 1","SELECT owners.owner_id, owners.last_name, SUM(treatments.cost_of_treatment) as total_spent FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN treatments ON dogs.dog_id = treatments.dog_id GROUP BY owners.owner_id ORDER BY total_spent DESC LIMIT 1"
49,345,Show all template type codes that are not used by any document.,cre_Doc_Template_Mgt,hard,SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id,7,"SELECT templates.template_type_code  FROM templates  LEFT JOIN documents ON templates.template_type_code = documents.ref_template_types  WHERE documents.ref_template_types IS NULL
SELECT templates.template_type_code  FROM templates  LEFT JOIN documents ON templates.template_id = documents.template_id  WHERE documents.template_id IS NULL
SELECT templates.template_type_code  FROM templates  LEFT JOIN documents ON templates.template_type_code = documents.ref_template_types  WHERE documents.ref_template_types IS NULL
SELECT templates.template_type_code  FROM templates  LEFT JOIN documents ON templates.template_type_code = documents.ref_template_types  WHERE documents.ref_template_types IS NULL
SELECT templates.template_type_code  FROM templates  LEFT JOIN documents ON templates.template_type_code = documents.ref_template_types  WHERE documents.ref_template_types IS NULL
SELECT templates.template_type_code  FROM templates  LEFT JOIN documents ON templates.template_type_code = documents.ref_template_types  WHERE documents.ref_template_types IS NULL
SELECT templates.template_type_code  FROM templates  LEFT JOIN documents ON templates.template_type_code = documents.ref_template_types  WHERE documents.ref_template_types IS NULL",SELECT templates.template_type_code  FROM templates  LEFT JOIN documents ON templates.template_type_code = documents.ref_template_types  WHERE documents.ref_template_types IS NULL
50,41,Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015.,concert_singer,extra,"SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015",7,"SELECT stadium.name, stadium.location FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year IN (2014, 2015) GROUP BY stadium.stadium_id HAVING COUNT(DISTINCT concert.year) = 2
SELECT stadium.name, stadium.location FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year IN (2014, 2015) GROUP BY stadium.stadium_id HAVING COUNT(DISTINCT concert.year) = 2
SELECT stadium.name, stadium.location FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year IN (2014, 2015) GROUP BY stadium.stadium_id HAVING COUNT(DISTINCT concert.year) = 2
SELECT stadium.name, stadium.location FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year IN (2014, 2015) GROUP BY stadium.stadium_id HAVING COUNT(DISTINCT concert.year) = 2
SELECT stadium.name, stadium.location FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year IN (2014, 2015) GROUP BY stadium.stadium_id HAVING COUNT(DISTINCT concert.year) = 2
SELECT stadium.name, stadium.location FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year IN (2014, 2015) GROUP BY stadium.stadium_id HAVING COUNT(DISTINCT concert.year) = 2
SELECT stadium.name, stadium.location FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year IN (2014, 2015) GROUP BY stadium.stadium_id HAVING COUNT(DISTINCT concert.year) = 2","SELECT stadium.name, stadium.location FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year IN (2014, 2015) GROUP BY stadium.stadium_id HAVING COUNT(DISTINCT concert.year) = 2"
51,712,Which language is the most popular in Aruba?,world_1,extra,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Aruba"" ORDER BY Percentage DESC LIMIT 1",7,"SELECT language FROM countrylanguage WHERE countrycode = ""ABW"" ORDER BY percentage DESC LIMIT 1
SELECT language FROM countrylanguage WHERE countrycode = ""ABW"" ORDER BY percentage DESC LIMIT 1
SELECT language FROM countrylanguage WHERE countrycode = ""ABW"" ORDER BY percentage DESC LIMIT 1
SELECT language FROM countrylanguage WHERE countrycode = ""ABW"" ORDER BY percentage DESC LIMIT 1
SELECT language FROM countrylanguage WHERE countrycode = ""ABW"" ORDER BY percentage DESC LIMIT 1
SELECT language FROM countrylanguage WHERE countrycode = ""ABW"" ORDER BY percentage DESC LIMIT 1
SELECT language FROM countrylanguage WHERE countrycode = ""ABW"" ORDER BY percentage DESC LIMIT 1","SELECT language FROM countrylanguage WHERE countrycode = ""ABW"" ORDER BY percentage DESC LIMIT 1"
52,108,What is the name of the country with the most car makers?,car_1,extra,SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;,7,"SELECT c.countryname, COUNT(cm.maker) AS car_makers FROM countries AS c JOIN car_makers AS cm ON c.countryid = cm.country GROUP BY c.countryname ORDER BY car_makers DESC LIMIT 1
SELECT c.countryname, COUNT(cm.maker) AS car_makers FROM countries AS c JOIN car_makers AS cm ON c.countryid = cm.country GROUP BY c.countryname ORDER BY car_makers DESC LIMIT 1
SELECT c.countryname, COUNT(cm.maker) AS car_makers FROM countries AS c JOIN car_makers AS cm ON c.countryid = cm.country GROUP BY c.countryname ORDER BY car_makers DESC LIMIT 1
SELECT c.countryname, COUNT(cm.maker) AS car_makers FROM countries AS c JOIN car_makers AS cm ON c.countryid = cm.country GROUP BY c.countryname ORDER BY car_makers DESC LIMIT 1
SELECT c.countryname, COUNT(cm.maker) AS car_makers FROM countries AS c JOIN car_makers AS cm ON c.countryid = cm.country GROUP BY c.countryname ORDER BY car_makers DESC LIMIT 1
SELECT c.countryname, COUNT(cm.maker) AS car_makers FROM countries AS c JOIN car_makers AS cm ON c.countryid = cm.country GROUP BY c.countryname ORDER BY car_makers DESC LIMIT 1
SELECT c.countryname, COUNT(cm.maker) AS car_makers FROM countries AS c JOIN car_makers AS cm ON c.countryid = cm.country GROUP BY c.countryname ORDER BY car_makers DESC LIMIT 1","SELECT c.countryname, COUNT(cm.maker) AS car_makers FROM countries AS c JOIN car_makers AS cm ON c.countryid = cm.country GROUP BY c.countryname ORDER BY car_makers DESC LIMIT 1"
53,720,What is the name of country that has the shortest life expectancy in Asia?,world_1,hard,"SELECT Name FROM country WHERE Continent  =  ""Asia"" ORDER BY LifeExpectancy LIMIT 1",7,"SELECT country.name  FROM country  WHERE country.lifeexpectancy = (SELECT MIN(lifeexpectancy) FROM country WHERE continent='Asia') AND country.continent='Asia'
SELECT country.name FROM country WHERE country.lifeexpectancy = (SELECT MIN(lifeexpectancy) FROM country WHERE continent='Asia') AND country.continent='Asia'
SELECT country.name  FROM country  WHERE country.lifeexpectancy = (SELECT MIN(lifeexpectancy) FROM country WHERE continent='Asia') AND country.continent='Asia'
SELECT country.name FROM country WHERE country.lifeexpectancy = (SELECT MIN(lifeexpectancy) FROM country WHERE continent = 'Asia') AND country.continent = 'Asia'
SELECT country.name  FROM country  WHERE country.lifeexpectancy = (SELECT MIN(lifeexpectancy) FROM country WHERE continent='Asia') AND country.continent='Asia'
SELECT country.name  FROM country  WHERE country.lifeexpectancy = (SELECT MIN(lifeexpectancy) FROM country WHERE continent='Asia') AND country.continent='Asia'
SELECT country.name  FROM country  WHERE country.lifeexpectancy = (SELECT MIN(lifeexpectancy) FROM country WHERE continent='Asia') AND country.continent='Asia'",SELECT country.name  FROM country  WHERE country.lifeexpectancy = (SELECT MIN(lifeexpectancy) FROM country WHERE continent='Asia') AND country.continent='Asia'
54,776,Which Asian countries have a population that is larger than any country in Africa?,world_1,extra,"SELECT Name FROM country WHERE Continent  =  ""Asia""  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  ""Africa"")",7,"SELECT c1.name AS Asian_Country, c2.name AS Africa_Country FROM country c1 JOIN country c2 ON c1.continent = 'Asia' AND c2.continent = 'Africa' WHERE c1.population > c2.population
SELECT c1.name AS Asian_Country, c2.name AS Africa_Country FROM country c1 JOIN country c2 ON c1.continent = 'Asia' AND c2.continent = 'Africa' WHERE c1.population > c2.population
SELECT c1.name AS Asian_Country, c2.name AS Africa_Country FROM country c1 JOIN country c2 ON c1.continent = 'Asia' AND c2.continent = 'Africa' WHERE c1.population > c2.population
SELECT c1.name AS Asian_Country, c2.name AS Africa_Country FROM country c1 JOIN country c2 ON c1.continent = 'Asia' AND c2.continent = 'Africa' WHERE c1.population > c2.population
SELECT c1.name AS Asian_Country, c2.name AS Africa_Country FROM country c1 JOIN country c2 ON c1.continent = 'Asia' AND c2.continent = 'Africa' WHERE c1.population > c2.population
SELECT c1.name AS Asian_Country, c2.name AS Africa_Country FROM country c1 JOIN country c2 ON c1.continent = 'Asia' AND c2.continent = 'Africa' WHERE c1.population > c2.population
SELECT A.name AS Asian_Country, A.population AS Asian_Population, MAX(F.population) AS Max_African_Population FROM country A JOIN (SELECT countrycode FROM city GROUP BY countrycode) C ON A.code = C.countrycode JOIN city CI ON C.countrycode = CI.countrycode JOIN (SELECT code, population FROM country WHERE continent = 'Africa') F ON A.code != F.code WHERE A.continent = 'Asia' GROUP BY A.name HAVING Asian_Population > MAX(F.population)","SELECT c1.name AS Asian_Country, c2.name AS Africa_Country FROM country c1 JOIN country c2 ON c1.continent = 'Asia' AND c2.continent = 'Africa' WHERE c1.population > c2.population"
55,530,"For each semester, what is the name and id of the one with the most students registered?",student_transcripts_tracking,extra,"SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT s.semester_name, c.course_name, c.course_id, COUNT(sec.
SELECT s.semester_name, c.course_name, c.course_id, COUNT(sec.
SELECT s.semester_name, c.course_name, c.course_id, COUNT(sec.
SELECT s.semester_name, c.course_name, c.course_id, COUNT(sec.
SELECT s.semester_name, c.course_name, c.course_id, COUNT(sec.
SELECT s.semester_name, c.course_name, c.course_id, COUNT(sec.
SELECT s.semester_name, c.course_name, c.course_id, COUNT(sec.","SELECT s.semester_name, c.course_name, c.course_id, COUNT(sec."
56,151,Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500?,car_1,extra,SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;,7,"SELECT DISTINCT model FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  WHERE car_makers.fullname = 'General Motors' OR cars_data.weight > 3500
SELECT DISTINCT model FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  WHERE car_makers.fullname = 'General Motors' OR cars_data.weight > 3500
SELECT DISTINCT model FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  WHERE car_makers.fullname = 'General Motors' OR cars_data.weight > 3500
SELECT DISTINCT model FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  WHERE car_makers.fullname = 'General Motors' OR cars_data.weight > 3500
SELECT DISTINCT model FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  WHERE car_makers.fullname = 'General Motors' OR cars_data.weight > 3500
SELECT DISTINCT model FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  WHERE car_makers.fullname = 'General Motors' OR cars_data.weight > 3500
SELECT DISTINCT model FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  WHERE car_makers.fullname = 'General Motors' OR cars_data.weight > 3500",SELECT DISTINCT model FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  WHERE car_makers.fullname = 'General Motors' OR cars_data.weight > 3500
57,792,Return the country name and the numbers of languages spoken for each country that speaks at least 3 languages.,world_1,medium,"SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2",7,"SELECT c.name AS country_name, COUNT(cl.language) AS language_count FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode GROUP BY c.name HAVING language_count >= 3
SELECT c.name AS country_name, COUNT(cl.language) AS language_count FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode GROUP BY c.name HAVING language_count >= 3
SELECT c.name AS country_name, COUNT(cl.language) AS language_count FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode GROUP BY c.name HAVING language_count >= 3
SELECT c.name AS country_name, COUNT(cl.language) AS language_count FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode GROUP BY c.name HAVING language_count >= 3
SELECT c.name AS country_name, COUNT(cl.language) AS language_count FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode GROUP BY c.name HAVING language_count >= 3
SELECT c.name AS country_name, COUNT(cl.language) AS language_count FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode GROUP BY c.name HAVING COUNT(cl.language) >= 3
SELECT c.name AS country_name, COUNT(cl.language) AS language_count FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode GROUP BY c.name HAVING language_count >= 3","SELECT c.name AS country_name, COUNT(cl.language) AS language_count FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode GROUP BY c.name HAVING language_count >= 3"
58,934,What is the name of the breed with the most dogs?,dog_kennels,extra,SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1,7,"SELECT breed_name, COUNT(*) as dog_count FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY breed_name ORDER BY dog_count DESC LIMIT 1
SELECT breed_name, COUNT(*) as dog_count FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY breed_name ORDER BY dog_count DESC LIMIT 1
SELECT breed_name, COUNT(dog_id) AS dog_count FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY breed_name ORDER BY dog_count DESC LIMIT 1
SELECT breed_name, COUNT(dog_id) AS dog_count FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY breed_name ORDER BY dog_count DESC LIMIT 1
SELECT breed_name, COUNT(*) as dog_count FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY breed_name ORDER BY dog_count DESC LIMIT 1
SELECT breeds.breed_name, COUNT(dogs.dog_id) AS dog_count FROM breeds JOIN dogs ON breeds.breed_code = dogs.breed_code GROUP BY breeds.breed_name ORDER BY dog_count DESC LIMIT 1
SELECT breed_name, COUNT(dog_id) AS dog_count FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY breed_name ORDER BY dog_count DESC LIMIT 1","SELECT breed_name, COUNT(*) as dog_count FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY breed_name ORDER BY dog_count DESC LIMIT 1"
59,939,Give me the description of the treatment type whose total cost is the lowest.,dog_kennels,extra,SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1,7,"SELECT treatment_types.treatment_type_description, MIN(treatments.cost_of_treatment) as LowestCost FROM treatment_types JOIN treatments ON treatment_types.treatment_type_code = treatments.treatment_type_code GROUP BY treatment_types.treatment_type_description ORDER BY LowestCost ASC LIMIT 1
SELECT treatment_types.treatment_type_description, SUM(treatments.cost_of_treatment) AS total_cost FROM treatments JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code GROUP BY treatment_types.treatment_type_description ORDER BY total_cost ASC LIMIT 1
SELECT treatment_types.treatment_type_description, MIN(treatments.cost_of_treatment) as LowestCost FROM treatment_types JOIN treatments ON treatment_types.treatment_type_code = treatments.treatment_type_code GROUP BY treatment_types.treatment_type_description ORDER BY LowestCost ASC LIMIT 1
SELECT treatment_types.treatment_type_description, MIN(treatments.cost_of_treatment) as LowestCost FROM treatment_types JOIN treatments ON treatment_types.treatment_type_code = treatments.treatment_type_code GROUP BY treatment_types.treatment_type_description ORDER BY LowestCost ASC LIMIT 1
SELECT treatment_types.treatment_type_description, MIN(treatments.cost_of_treatment) as LowestCost FROM treatment_types JOIN treatments ON treatment_types.treatment_type_code = treatments.treatment_type_code GROUP BY treatment_types.treatment_type_description ORDER BY LowestCost ASC LIMIT 1
SELECT treatment_types.treatment_type_description, MIN(treatments.cost_of_treatment) as LowestCost FROM treatment_types JOIN treatments ON treatment_types.treatment_type_code = treatments.treatment_type_code GROUP BY treatment_types.treatment_type_description ORDER BY LowestCost ASC LIMIT 1
SELECT treatment_types.treatment_type_description, MIN(treatments.cost_of_treatment) as LowestCost FROM treatment_types JOIN treatments ON treatment_types.treatment_type_code = treatments.treatment_type_code GROUP BY treatment_types.treatment_type_description ORDER BY LowestCost ASC LIMIT 1","SELECT treatment_types.treatment_type_description, MIN(treatments.cost_of_treatment) as LowestCost FROM treatment_types JOIN treatments ON treatment_types.treatment_type_code = treatments.treatment_type_code GROUP BY treatment_types.treatment_type_description ORDER BY LowestCost ASC LIMIT 1"
60,877,How many high schoolers are in each grade?,network_1,medium,"SELECT grade ,  count(*) FROM Highschooler GROUP BY grade",7,"SELECT grade, COUNT(*) as count FROM highschooler GROUP BY grade
SELECT grade, COUNT(*) as count FROM highschooler GROUP BY grade
SELECT grade, COUNT(*) as count FROM highschooler GROUP BY grade
SELECT grade, COUNT(*) as count FROM highschooler GROUP BY grade
SELECT grade, COUNT(*) as count FROM highschooler GROUP BY grade
SELECT grade, COUNT(*) as count FROM highschooler GROUP BY grade
SELECT grade, COUNT(*) as count FROM highschooler GROUP BY grade","SELECT grade, COUNT(*) as count FROM highschooler GROUP BY grade"
61,346,What are the codes of template types that are not used for any document?,cre_Doc_Template_Mgt,hard,SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id,7,"SELECT ref_template_types.template_type_code  FROM ref_template_types  LEFT JOIN templates ON ref_template_types.template_type_code = templates.template_type_code  WHERE templates.template_type_code IS NULL
SELECT ref_template_types.template_type_code  FROM ref_template_types  LEFT JOIN templates ON ref_template_types.template_type_code = templates.template_type_code  WHERE templates.template_type_code IS NULL
SELECT ref_template_types.template_type_code  FROM ref_template_types  LEFT JOIN templates ON ref_template_types.template_type_code = templates.template_type_code  WHERE templates.template_type_code IS NULL
SELECT ref_template_types.template_type_code  FROM ref_template_types  LEFT JOIN templates ON ref_template_types.template_type_code = templates.template_type_code  WHERE templates.template_type_code IS NULL
SELECT ref_template_types.template_type_code  FROM ref_template_types  LEFT JOIN templates ON ref_template_types.template_type_code = templates.template_type_code  WHERE templates.template_type_code IS NULL
SELECT ref_template_types.template_type_code  FROM ref_template_types  LEFT JOIN templates ON ref_template_types.template_type_code = templates.template_type_code  WHERE templates.template_type_code IS NULL
SELECT ref_template_types.template_type_code  FROM ref_template_types  LEFT JOIN templates ON ref_template_types.template_type_code = templates.template_type_code  WHERE templates.template_type_code IS NULL",SELECT ref_template_types.template_type_code  FROM ref_template_types  LEFT JOIN templates ON ref_template_types.template_type_code = templates.template_type_code  WHERE templates.template_type_code IS NULL
62,717,What region does Angola belong to and what is its population?,world_1,medium,"SELECT Population ,  Region FROM country WHERE Name  =  ""Angola""",7,"SELECT country.region, country.population FROM country WHERE country.name = 'Angola'
SELECT country.region, country.population FROM country WHERE country.name = 'Angola'
SELECT country.region, country.population FROM country WHERE country.name = 'Angola'
SELECT country.region, country.population FROM country WHERE country.name = 'Angola'
SELECT country.region, country.population FROM country WHERE country.name = 'Angola'
SELECT c.region, c.population FROM country c WHERE c.name = 'Angola'
SELECT country.region, country.population FROM country WHERE country.name = 'Angola'","SELECT country.region, country.population FROM country WHERE country.name = 'Angola'"
63,175,Which are the car makers which produce at least 2 models and more than 3 car makers ? List the id and the maker .,car_1,extra,"select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;",7,"SELECT car_makers.id, car_makers.maker  FROM car_makers  INNER JOIN (     SELECT maker, COUNT(DISTINCT model) AS model_count      FROM model_list      GROUP BY maker      HAVING model_count >= 2 ) AS two_models_or_more ON car_makers.id = two_models_or_more.maker  GROUP BY car_makers.id, car_makers.maker  HAVING COUNT(DISTINCT car_makers.country) > 3
SELECT car_makers.id, car_makers.maker  FROM car_makers  JOIN (     SELECT maker, COUNT(model) AS model_count      FROM model_list      GROUP BY maker      HAVING model_count >= 2 ) AS two_models_or_more ON car_makers.id = two_models_or_more.maker  GROUP BY car_makers.id  HAVING COUNT(car_makers.id) > 3
SELECT car_makers.id, car_makers.maker FROM car_makers JOIN (     SELECT maker, COUNT(DISTINCT model) AS model_count     FROM model_list     GROUP BY maker     HAVING model_count >= 2 ) AS two_models ON car_makers.id = two_models.maker GROUP BY car_makers.id, car_makers.maker HAVING COUNT(DISTINCT car_makers.country) > 3
SELECT car_makers.id, car_makers.maker  FROM car_makers  JOIN (     SELECT maker, COUNT(DISTINCT model) AS model_count      FROM model_list      GROUP BY maker      HAVING model_count >= 2 ) AS two_models_or_more ON car_makers.id = two_models_or_more.maker  GROUP BY car_makers.id, car_makers.maker  HAVING COUNT(DISTINCT car_makers.country) > 3
SELECT car_makers.id, car_makers.maker  FROM car_makers  JOIN (     SELECT maker, COUNT(model) AS model_count      FROM model_list      GROUP BY maker      HAVING model_count >= 2 ) AS two_models_or_more ON car_makers.id = two_models_or_more.maker  GROUP BY car_makers.id  HAVING COUNT(car_makers.id) > 3
SELECT car_makers.id, car_makers.maker  FROM car_makers  JOIN (     SELECT maker, COUNT(DISTINCT model) AS model_count      FROM model_list      GROUP BY maker      HAVING model_count >= 2 ) AS two_models  ON car_makers.id = two_models.maker  GROUP BY car_makers.id  HAVING COUNT(DISTINCT car_makers.country) > 3
SELECT car_makers.id, car_makers.maker  FROM car_makers  INNER JOIN (     SELECT maker, COUNT(DISTINCT model) AS model_count      FROM model_list      GROUP BY maker      HAVING model_count >= 2 ) AS two_models ON car_makers.id = two_models.maker  GROUP BY car_makers.id, car_makers.maker  HAVING COUNT(DISTINCT car_makers.country) > 3","SELECT car_makers.id, car_makers.maker  FROM car_makers  JOIN (     SELECT maker, COUNT(model) AS model_count      FROM model_list      GROUP BY maker      HAVING model_count >= 2 ) AS two_models_or_more ON car_makers.id = two_models_or_more.maker  GROUP BY car_makers.id  HAVING COUNT(car_makers.id) > 3"
64,982,How many professionals did not operate any treatment on dogs?,dog_kennels,extra,SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments ),7,"SELECT COUNT(DISTINCT professionals.professional_id)  FROM professionals  LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id  WHERE treatments.treatment_id IS NULL
SELECT COUNT(DISTINCT professionals.professional_id)  FROM professionals  LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id  WHERE treatments.treatment_id IS NULL
SELECT COUNT(DISTINCT professionals.professional_id)  FROM professionals  LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id  WHERE treatments.treatment_id IS NULL
SELECT COUNT(DISTINCT professionals.professional_id)  FROM professionals  LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id  WHERE treatments.treatment_id IS NULL
SELECT COUNT(DISTINCT professionals.professional_id)  FROM professionals  LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id  WHERE treatments.treatment_id IS NULL
SELECT COUNT(DISTINCT professionals.professional_id)  FROM professionals  LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id  WHERE treatments.treatment_id IS NULL
SELECT COUNT(DISTINCT professionals.professional_id)  FROM professionals  LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id  WHERE treatments.treatment_id IS NULL",SELECT COUNT(DISTINCT professionals.professional_id)  FROM professionals  LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id  WHERE treatments.treatment_id IS NULL
65,562,"What is the id, line 1, and line 2 of the address with the most students?",student_transcripts_tracking,extra,"SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT a.address_id, a.line_1, a.line_2 FROM addresses a 
SELECT a.address_id, a.line_1, a.line_2 FROM addresses a 
SELECT a.address_id, a.line_1, a.line_2, COUNT(s.
SELECT a.address_id, a.line_1, a.line_2 FROM addresses a 
SELECT addresses.address_id, addresses.line_1, addresses.line_2 FROM addresses JO
SELECT a.address_id, a.line_1, a.line_2 FROM addresses a 
SELECT a.address_id, a.line_1, a.line_2 FROM addresses a ","SELECT a.address_id, a.line_1, a.line_2 FROM addresses a "
66,487,"Find the first name, country code and birth date of the winner who has the highest rank points in all matches.",wta_1,hard,"SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1",7,"SELECT players.first_name, players.country_code, players.birth_date FROM players JOIN rankings ON players.player_id = rankings.player_id WHERE rankings.ranking_points = (SELECT MAX(ranking_points) FROM rankings) AND players.player_id IN (SELECT winner_id FROM matches UNION SELECT loser_id FROM matches)
SELECT players.first_name, players.country_code, players.birth_date FROM players JOIN rankings ON players.player_id = rankings.player_id WHERE rankings.ranking_points = (SELECT MAX(ranking_points) FROM rankings) AND players.player_id IN (SELECT winner_id FROM matches UNION SELECT loser_id FROM matches)
SELECT players.first_name, players.country_code, players.birth_date FROM players JOIN rankings ON players.player_id = rankings.player_id WHERE rankings.ranking_points = (SELECT MAX(ranking_points) FROM rankings) AND players.player_id IN (SELECT winner_id FROM matches UNION SELECT loser_id FROM matches)
SELECT players.first_name, players.country_code, players.birth_date FROM players JOIN rankings ON players.player_id = rankings.player_id WHERE rankings.ranking_points = (SELECT MAX(ranking_points) FROM rankings) AND players.player_id IN (SELECT winner_id FROM matches UNION SELECT loser_id FROM matches)
SELECT players.first_name, players.country_code, players.birth_date FROM players JOIN rankings ON players.player_id = rankings.player_id WHERE rankings.ranking_points = (SELECT MAX(ranking_points) FROM rankings) AND players.player_id IN (SELECT winner_id FROM matches UNION SELECT loser_id FROM matches)
SELECT players.first_name, players.country_code, players.birth_date FROM players JOIN rankings ON players.player_id = rankings.player_id WHERE rankings.ranking_points = (SELECT MAX(ranking_points) FROM rankings) AND players.player_id IN (SELECT winner_id FROM matches UNION SELECT loser_id FROM matches)
SELECT players.first_name, players.country_code, players.birth_date FROM players JOIN rankings ON players.player_id = rankings.player_id WHERE rankings.ranking_points = (SELECT MAX(ranking_points) FROM rankings) AND players.player_id IN (SELECT winner_id FROM matches UNION SELECT loser_id FROM matches)","SELECT players.first_name, players.country_code, players.birth_date FROM players JOIN rankings ON players.player_id = rankings.player_id WHERE rankings.ranking_points = (SELECT MAX(ranking_points) FROM rankings) AND players.player_id IN (SELECT winner_id FROM matches UNION SELECT loser_id FROM matches)"
67,477,Find the codes of countries that have more than 50 players.,wta_1,easy,SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50,7,"SELECT country_code  FROM players  GROUP BY country_code  HAVING COUNT(player_id) > 50
SELECT country_code  FROM players  GROUP BY country_code  HAVING COUNT(player_id) > 50
SELECT country_code  FROM players  GROUP BY country_code  HAVING COUNT(player_id) > 50
SELECT country_code  FROM players  GROUP BY country_code  HAVING COUNT(player_id) > 50
SELECT country_code  FROM players  GROUP BY country_code  HAVING COUNT(player_id) > 50
SELECT country_code  FROM players  GROUP BY country_code  HAVING COUNT(player_id) > 50
SELECT country_code  FROM players  GROUP BY country_code  HAVING COUNT(player_id) > 50",SELECT country_code  FROM players  GROUP BY country_code  HAVING COUNT(player_id) > 50
68,954,List the names of the dogs of the rarest breed and the treatment dates of them.,dog_kennels,extra,"SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",7,"SELECT d.name, t.date_of_treatment FROM dogs d JOIN treatments t ON d.dog_id = t.dog_id WHERE d.breed_code = (     SELECT breed_code     FROM dogs     GROUP BY breed_code     ORDER BY COUNT(*)     LIMIT 1 )
SELECT d.name, t.date_of_treatment FROM dogs d JOIN treatments t ON d.dog_id = t.dog_id WHERE d.breed_code =      (SELECT breed_code      FROM dogs      GROUP BY breed_code      ORDER BY COUNT(*)      LIMIT 1) ORDER BY t.date_of_treatment
SELECT d.name, t.date_of_treatment FROM dogs d JOIN treatments t ON d.dog_id = t.dog_id WHERE d.breed_code = (     SELECT breed_code     FROM dogs     GROUP BY breed_code     ORDER BY COUNT(*)     LIMIT 1 ) ORDER BY t.date_of_treatment
SELECT d.name, t.date_of_treatment FROM dogs d JOIN treatments t ON d.dog_id = t.dog_id WHERE d.breed_code = (     SELECT breed_code     FROM dogs     GROUP BY breed_code     ORDER BY COUNT(*)     LIMIT 1 ) ORDER BY t.date_of_treatment
SELECT d.name, t.date_of_treatment FROM dogs d JOIN treatments t ON d.dog_id = t.dog_id WHERE d.breed_code = (     SELECT breed_code     FROM dogs     GROUP BY breed_code     ORDER BY COUNT(*)     LIMIT 1 )
SELECT d.name, t.date_of_treatment FROM dogs d JOIN treatments t ON d.dog_id = t.dog_id WHERE d.breed_code = (     SELECT breed_code     FROM dogs     GROUP BY breed_code     ORDER BY COUNT(*)     LIMIT 1 ) ORDER BY t.date_of_treatment
SELECT dogs.name, treatments.date_of_treatment FROM dogs INNER JOIN treatments ON dogs.dog_id = treatments.dog_id WHERE dogs.breed_code = (     SELECT breed_code     FROM breeds     WHERE breed_name = (         SELECT breed_name         FROM breeds         GROUP BY breed_name         ORDER BY COUNT(*)         LIMIT 1     ) ) ORDER BY treatments.date_of_treatment","SELECT d.name, t.date_of_treatment FROM dogs d JOIN treatments t ON d.dog_id = t.dog_id WHERE d.breed_code = (     SELECT breed_code     FROM dogs     GROUP BY breed_code     ORDER BY COUNT(*)     LIMIT 1 ) ORDER BY t.date_of_treatment"
69,276,Which shops' number products is above the average? Give me the shop names.,employee_hire_evaluation,hard,SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop),7,"SELECT shop.name FROM shop WHERE number_products > (SELECT AVG(number_products) FROM shop) 
SELECT shop.name FROM shop WHERE number_products > (SELECT AVG(number_products) FROM shop) 
SELECT shop.name  FROM shop  WHERE number_products > (SELECT AVG(number_products) FROM shop) 
SELECT shop.name  FROM shop  WHERE number_products > (SELECT AVG(number_products) FROM shop) 
SELECT shop.name  FROM shop  WHERE number_products > (SELECT AVG(number_products) FROM shop) 
SELECT shop.name  FROM shop  WHERE number_products > (SELECT AVG(number_products) FROM shop) 
SELECT shop.name  FROM shop  WHERE number_products > (SELECT AVG(number_products) FROM shop) ",SELECT shop.name  FROM shop  WHERE number_products > (SELECT AVG(number_products) FROM shop) 
70,211,How many flights depart from City 'Aberdeen' and have destination City 'Ashley'?,flight_2,hard,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  ""Ashley"" AND T3.City  =  ""Aberdeen""",7,"SELECT COUNT(*) FROM flights  INNER JOIN airports AS source ON flights.sourceairport = source.airportcode  INNER JOIN airports AS dest ON flights.destairport = dest.airportcode  WHERE source.city = 'Aberdeen' AND dest.city = 'Ashley'
SELECT COUNT(*) FROM flights  INNER JOIN airports AS source ON flights.sourceairport = source.airportcode  INNER JOIN airports AS dest ON flights.destairport = dest.airportcode  WHERE source.city = 'Aberdeen' AND dest.city = 'Ashley'
SELECT COUNT(*) FROM flights INNER JOIN airports AS source ON flights.sourceairport = source.airportcode INNER JOIN airports AS dest ON flights.destairport = dest.airportcode WHERE source.city = 'Aberdeen' AND dest.city = 'Ashley'
SELECT COUNT(*) FROM flights  INNER JOIN airports AS source ON flights.sourceairport = source.airportcode  INNER JOIN airports AS dest ON flights.destairport = dest.airportcode  WHERE source.city = 'Aberdeen' AND dest.city = 'Ashley'
SELECT COUNT(*) FROM flights  INNER JOIN airports AS source ON flights.sourceairport = source.airportcode  INNER JOIN airports AS dest ON flights.destairport = dest.airportcode  WHERE source.city = 'Aberdeen' AND dest.city = 'Ashley'
SELECT COUNT(*) FROM flights  INNER JOIN airports AS source ON flights.sourceairport = source.airportcode  INNER JOIN airports AS dest ON flights.destairport = dest.airportcode  WHERE source.city = 'Aberdeen' AND dest.city = 'Ashley'
SELECT COUNT(*) FROM flights  INNER JOIN airports AS source ON flights.sourceairport = source.airportcode  INNER JOIN airports AS dest ON flights.destairport = dest.airportcode  WHERE source.city = 'Aberdeen' AND dest.city = 'Ashley'",SELECT COUNT(*) FROM flights  INNER JOIN airports AS source ON flights.sourceairport = source.airportcode  INNER JOIN airports AS dest ON flights.destairport = dest.airportcode  WHERE source.city = 'Aberdeen' AND dest.city = 'Ashley'
71,350,Return the template type description of the template type with the code AD.,cre_Doc_Template_Mgt,easy,"SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  ""AD""",7,"SELECT ref_template_types.template_type_description  FROM ref_template_types  WHERE ref_template_types.template_type_code = 'AD'
SELECT ref_template_types.template_type_description  FROM ref_template_types  WHERE ref_template_types.template_type_code = 'AD'
SELECT ref_template_types.template_type_description  FROM ref_template_types  WHERE ref_template_types.template_type_code = 'AD'
SELECT ref_template_types.template_type_description  FROM ref_template_types  WHERE ref_template_types.template_type_code = 'AD'
SELECT ref_template_types.template_type_description  FROM ref_template_types  WHERE ref_template_types.template_type_code = 'AD'
SELECT ref_template_types.template_type_description  FROM ref_template_types  WHERE ref_template_types.template_type_code = 'AD'
SELECT ref_template_types.template_type_description  FROM ref_template_types  WHERE ref_template_types.template_type_code = 'AD'",SELECT ref_template_types.template_type_description  FROM ref_template_types  WHERE ref_template_types.template_type_code = 'AD'
72,918,Which states have both owners and professionals living there?,dog_kennels,hard,SELECT state FROM Owners INTERSECT SELECT state FROM Professionals,7,"SELECT DISTINCT owners.state  FROM owners  INNER JOIN professionals ON owners.state = professionals.state
SELECT DISTINCT o.state  FROM owners o  JOIN professionals p ON o.state = p.state
SELECT DISTINCT o.state  FROM owners o  JOIN professionals p ON o.state = p.state
SELECT DISTINCT o.state  FROM owners o  JOIN professionals p ON o.state = p.state
SELECT DISTINCT owners.state  FROM owners  INNER JOIN professionals ON owners.state = professionals.state
SELECT DISTINCT o.state  FROM owners o  JOIN professionals p ON o.state = p.state
SELECT DISTINCT o.state  FROM owners o JOIN professionals p ON o.state = p.state",SELECT DISTINCT o.state  FROM owners o  JOIN professionals p ON o.state = p.state
73,980,How many owners temporarily do not have any dogs?,dog_kennels,extra,SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs ),7,"SELECT COUNT(*) FROM owners  LEFT JOIN dogs ON owners.owner_id = dogs.owner_id  WHERE dogs.owner_id IS NULL AND owners.date_departed IS NOT NULL
SELECT COUNT(DISTINCT owner_id)  FROM owners  LEFT JOIN dogs ON owners.owner_id = dogs.owner_id  WHERE dogs.owner_id IS NULL AND owners.date_departed IS NOT NULL
SELECT COUNT(DISTINCT owner_id)  FROM owners  LEFT JOIN dogs ON owners.owner_id = dogs.owner_id  WHERE dogs.owner_id IS NULL AND owners.date_departed IS NOT NULL
SELECT COUNT(*) FROM owners  LEFT JOIN dogs ON owners.owner_id = dogs.owner_id  WHERE dogs.owner_id IS NULL AND owners.date_departed IS NOT NULL
SELECT COUNT(DISTINCT owner_id)  FROM owners  LEFT JOIN dogs ON owners.owner_id = dogs.owner_id  WHERE dogs.owner_id IS NULL AND owners.date_departed IS NOT NULL
SELECT COUNT(DISTINCT owners.owner_id)  FROM owners  LEFT JOIN dogs ON owners.owner_id = dogs.owner_id  WHERE dogs.dog_id IS NULL AND owners.owner_id NOT IN (SELECT owner_id FROM dogs WHERE date_departed IS NOT NULL)
SELECT COUNT(DISTINCT owners.owner_id)  FROM owners  LEFT JOIN dogs ON owners.owner_id = dogs.owner_id  WHERE dogs.dog_id IS NULL AND owners.owner_id NOT IN (SELECT owner_id FROM dogs WHERE date_departed IS NOT NULL)",SELECT COUNT(DISTINCT owner_id)  FROM owners  LEFT JOIN dogs ON owners.owner_id = dogs.owner_id  WHERE dogs.owner_id IS NULL AND owners.date_departed IS NOT NULL
74,929,"Give me the id, role and email of the professionals who did not perform any treatment on dogs.",dog_kennels,extra,"SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id",7,"SELECT professionals.professional_id, professionals.role_code, professionals.email_address FROM professionals LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id LEFT JOIN dogs ON treatments.dog_id = dogs.dog_id WHERE dogs.breed_code NOT IN (SELECT breed_code FROM breeds WHERE breed_name = 'dog') AND professionals.role_code = 'professional' GROUP BY professionals.professional_id
SELECT professionals.professional_id, professionals.role_code, professionals.email_address FROM professionals LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id LEFT JOIN dogs ON treatments.dog_id = dogs.dog_id WHERE dogs.breed_code NOT IN (SELECT breed_code FROM breeds WHERE breed_name = 'dog') AND professionals.role_code = 'professional' GROUP BY professionals.professional_id
SELECT professionals.professional_id, professionals.role_code, professionals.email_address FROM professionals LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id LEFT JOIN dogs ON treatments.dog_id = dogs.dog_id WHERE dogs.breed_code NOT IN (SELECT breed_code FROM breeds WHERE breed_name = 'dog') AND professionals.role_code = 'professional' GROUP BY professionals.professional_id
SELECT professionals.professional_id, professionals.role_code, professionals.email_address FROM professionals LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id LEFT JOIN dogs ON treatments.dog_id = dogs.dog_id WHERE dogs.breed_code NOT IN (SELECT breed_code FROM breeds WHERE breed_name = 'dog') AND professionals.role_code = 'professional' GROUP BY professionals.professional_id
SELECT professionals.professional_id, professionals.role_code, professionals.email_address FROM professionals LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id LEFT JOIN dogs ON treatments.dog_id = dogs.dog_id WHERE dogs.breed_code NOT IN (SELECT breed_code FROM breeds WHERE breed_name = 'dog') AND professionals.role_code = 'professional' GROUP BY professionals.professional_id
SELECT professionals.professional_id, professionals.role_code, professionals.email_address FROM professionals LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id LEFT JOIN dogs ON treatments.dog_id = dogs.dog_id WHERE dogs.breed_code NOT IN (SELECT breed_code FROM breeds WHERE breed_name = 'dog') AND professionals.role_code = 'professional' GROUP BY professionals.professional_id
SELECT professionals.professional_id, professionals.role_code, professionals.email_address FROM professionals LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id LEFT JOIN dogs ON treatments.dog_id = dogs.dog_id WHERE dogs.breed_code NOT IN (SELECT breed_code FROM breeds WHERE breed_name = 'dog') AND professionals.role_code = 'professional' GROUP BY professionals.professional_id","SELECT professionals.professional_id, professionals.role_code, professionals.email_address FROM professionals LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id LEFT JOIN dogs ON treatments.dog_id = dogs.dog_id WHERE dogs.breed_code NOT IN (SELECT breed_code FROM breeds WHERE breed_name = 'dog') AND professionals.role_code = 'professional' GROUP BY professionals.professional_id"
75,1003,What are the names of singers ordered by ascending net worth?,singer,easy,SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC,7,"SELECT name FROM singer ORDER BY net_worth_millions ASC
SELECT name FROM singer ORDER BY net_worth_millions ASC
SELECT name FROM singer ORDER BY net_worth_millions ASC
SELECT name FROM singer ORDER BY net_worth_millions ASC
SELECT name FROM singer ORDER BY net_worth_millions ASC
SELECT name FROM singer ORDER BY net_worth_millions ASC
SELECT name FROM singer ORDER BY net_worth_millions ASC",SELECT name FROM singer ORDER BY net_worth_millions ASC
76,170,What is the maximum mpg of the cars that had 8 cylinders or that were produced before 1980 ?,car_1,medium,select max(mpg) from cars_data where cylinders  =  8 or year  <  1980,7,"SELECT MAX(mpg) FROM cars_data WHERE cylinders = 8 OR year < 1980
SELECT MAX(mpg)  FROM cars_data  WHERE cylinders = 8 OR year < 1980
SELECT MAX(mpg) FROM cars_data WHERE cylinders = 8 OR year < 1980
SELECT MAX(mpg) FROM cars_data WHERE cylinders = 8 OR year < 1980
SELECT MAX(mpg) FROM cars_data WHERE cylinders = 8 OR year < 1980
SELECT MAX(mpg) FROM cars_data WHERE cylinders = 8 OR year < 1980
SELECT MAX(mpg)  FROM cars_data  WHERE cylinders = 8 OR year < 1980",SELECT MAX(mpg) FROM cars_data WHERE cylinders = 8 OR year < 1980
77,537,Find the kind of program which most number of students are enrolled in?,student_transcripts_tracking,extra,SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1,7,"SELECT dp.degree_summary_name, COUNT(se.student_id) as student_count FROM degree_programs dp JO
SELECT dp.degree_summary_name, COUNT(se.student_id) as student_count FROM degree_programs dp JO
SELECT dp.degree_summary_name, COUNT(se.student_id) as student_count FROM degree_programs dp JO
SELECT dp.degree_summary_name, COUNT(se.student_id) as student_count FROM degree_programs dp JO
SELECT dp.degree_summary_name, COUNT(se.student_id) as student_count FROM degree_programs dp JO
SELECT dp.degree_summary_name, COUNT(se.student_id) as student_count FROM degree_programs dp JO
SELECT dp.degree_summary_name, COUNT(se.student_id) as student_count FROM degree_programs dp JO","SELECT dp.degree_summary_name, COUNT(se.student_id) as student_count FROM degree_programs dp JO"
78,594,What are the titles of all cartoons directed by Ben Jones or Brandon Vietti?,tvshow,medium,"SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"" OR Directed_by = ""Brandon Vietti"";",7,"SELECT c.title  FROM cartoon c  WHERE c.directed_by = 'Ben Jones' OR c.directed_by = 'Brandon Vietti'
SELECT c.title  FROM cartoon c  WHERE c.directed_by IN ('Ben Jones', 'Brandon Vietti')  AND c.channel IN (SELECT t.id FROM tv_channel t WHERE t.content = 'cartoon')  AND c.id IN (SELECT s.id FROM tv_series s WHERE s.channel = c.channel)
SELECT c.title  FROM cartoon AS c  WHERE c.directed_by = 'Ben Jones' OR c.directed_by = 'Brandon Vietti'
SELECT c.title  FROM cartoon c  WHERE c.directed_by IN ('Ben Jones', 'Brandon Vietti')  AND c.channel IN (SELECT t.id FROM tv_channel t WHERE t.content = 'cartoon')  AND c.id IN (SELECT s.id FROM tv_series s WHERE s.channel = c.channel)
SELECT c.title  FROM cartoon c  WHERE c.directed_by = 'Ben Jones' OR c.directed_by = 'Brandon Vietti'
SELECT c.title  FROM cartoon c  WHERE c.directed_by = 'Ben Jones' OR c.directed_by = 'Brandon Vietti'
SELECT c.title  FROM cartoon c  WHERE c.directed_by = 'Ben Jones' OR c.directed_by = 'Brandon Vietti'",SELECT c.title  FROM cartoon c  WHERE c.directed_by = 'Ben Jones' OR c.directed_by = 'Brandon Vietti'
79,970,"Which professionals live in a city containing the substring 'West'? List his or her role, street, city and state.",dog_kennels,medium,"SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'",7,"SELECT role_code, street, city, state  FROM professionals  WHERE city LIKE '%West%'
SELECT role_code, street, city, state  FROM professionals  WHERE city LIKE '%West%'
SELECT role_code, street, city, state  FROM professionals  WHERE city LIKE '%West%'
SELECT role_code, street, city, state  FROM professionals  WHERE city LIKE '%West%'
SELECT role_code, street, city, state  FROM professionals  WHERE city LIKE '%West%'
SELECT role_code, street, city, state  FROM professionals  WHERE city LIKE '%West%'
SELECT role_code, street, city, state  FROM professionals  WHERE city LIKE '%West%'","SELECT role_code, street, city, state  FROM professionals  WHERE city LIKE '%West%'"
80,373,What is the document id and name with greatest number of paragraphs?,cre_Doc_Template_Mgt,extra,"SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT documents.document_id, documents.document_name, COUNT(paragraphs.paragraph_id) as num_paragraphs FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id, documents.document_name ORDER BY num_paragraphs DESC LIMIT 1
SELECT documents.document_id, documents.document_name, COUNT(paragraphs.paragraph_id) as num_paragraphs FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id, documents.document_name ORDER BY num_paragraphs DESC LIMIT 1
SELECT documents.document_id, documents.document_name, COUNT(paragraphs.paragraph_id) as num_paragraphs FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id, documents.document_name ORDER BY num_paragraphs DESC LIMIT 1
SELECT documents.document_id, documents.document_name, COUNT(paragraphs.paragraph_id) as num_paragraphs FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id, documents.document_name ORDER BY num_paragraphs DESC LIMIT 1
SELECT documents.document_id, documents.document_name, COUNT(paragraphs.paragraph_id) as num_paragraphs FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id, documents.document_name ORDER BY num_paragraphs DESC LIMIT 1
SELECT documents.document_id, documents.document_name, COUNT(paragraphs.paragraph_id) as paragraph_count FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id, documents.document_name ORDER BY paragraph_count DESC LIMIT 1
SELECT documents.document_id, documents.document_name, COUNT(paragraphs.paragraph_id) AS paragraph_count FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id, documents.document_name ORDER BY paragraph_count DESC LIMIT 1","SELECT documents.document_id, documents.document_name, COUNT(paragraphs.paragraph_id) as num_paragraphs FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id, documents.document_name ORDER BY num_paragraphs DESC LIMIT 1"
81,655,What is the money rank of the poker player with the highest earnings?,poker_player,medium,SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1,7,"SELECT poker_player.money_rank FROM poker_player INNER JOIN people ON poker_player.people_id = people.people_id ORDER BY poker_player.earnings DESC LIMIT 1
SELECT poker_player.money_rank FROM poker_player INNER JOIN people ON poker_player.people_id = people.people_id WHERE earnings = (SELECT MAX(earnings) FROM poker_player)
SELECT poker_player.money_rank FROM poker_player INNER JOIN people ON poker_player.people_id = people.people_id ORDER BY poker_player.earnings DESC LIMIT 1
SELECT poker_player.money_rank FROM poker_player INNER JOIN people ON poker_player.people_id = people.people_id ORDER BY poker_player.earnings DESC LIMIT 1
SELECT poker_player.money_rank FROM poker_player INNER JOIN people ON poker_player.people_id = people.people_id ORDER BY poker_player.earnings DESC LIMIT 1
SELECT poker_player.money_rank FROM poker_player INNER JOIN people ON poker_player.people_id = people.people_id WHERE earnings = (SELECT MAX(earnings) FROM poker_player)
SELECT poker_player.money_rank FROM poker_player INNER JOIN people ON poker_player.people_id = people.people_id ORDER BY poker_player.earnings DESC LIMIT 1",SELECT poker_player.money_rank FROM poker_player INNER JOIN people ON poker_player.people_id = people.people_id ORDER BY poker_player.earnings DESC LIMIT 1
82,684,What are the names of people who do not play poker?,poker_player,hard,SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player),7,"SELECT people.name  FROM people  LEFT JOIN poker_player  ON people.people_id = poker_player.people_id  WHERE poker_player.people_id IS NULL
SELECT people.name  FROM people  LEFT JOIN poker_player  ON people.people_id = poker_player.people_id  WHERE poker_player.people_id IS NULL
SELECT people.name  FROM people  LEFT JOIN poker_player  ON people.people_id = poker_player.people_id  WHERE poker_player.people_id IS NULL
SELECT people.name  FROM people  LEFT JOIN poker_player  ON people.people_id = poker_player.people_id  WHERE poker_player.people_id IS NULL
SELECT people.name  FROM people  LEFT JOIN poker_player  ON people.people_id = poker_player.people_id  WHERE poker_player.people_id IS NULL
SELECT people.name  FROM people  LEFT JOIN poker_player  ON people.people_id = poker_player.people_id  WHERE poker_player.people_id IS NULL
SELECT people.name  FROM people  LEFT JOIN poker_player  ON people.people_id = poker_player.people_id  WHERE poker_player.people_id IS NULL",SELECT people.name  FROM people  LEFT JOIN poker_player  ON people.people_id = poker_player.people_id  WHERE poker_player.people_id IS NULL
83,426,What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?,museum_visit,extra,SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011,7,"SELECT visitor.name  FROM visitor  JOIN visit ON visitor.id = visit.visitor_id  JOIN museum ON visit.museum_id = museum.museum_id  WHERE museum.open_year < 2009 OR museum.open_year > 2011 GROUP BY visitor.name HAVING COUNT(DISTINCT museum.open_year) > 1
SELECT visitor.name  FROM visitor  JOIN visit ON visitor.id = visit.visitor_id  JOIN museum ON visit.museum_id = museum.museum_id  WHERE museum.open_year < 2009 OR museum.open_year > 2011  GROUP BY visitor.name  HAVING COUNT(DISTINCT museum.open_year) > 1
SELECT visitor.name  FROM visitor  JOIN visit ON visitor.id = visit.visitor_id  JOIN museum ON visit.museum_id = museum.museum_id  WHERE museum.open_year < 2009 OR museum.open_year > 2011 GROUP BY visitor.name HAVING COUNT(DISTINCT museum.open_year) > 1
SELECT visitor.name  FROM visitor  JOIN visit ON visitor.id = visit.visitor_id  JOIN museum ON visit.museum_id = museum.museum_id  WHERE museum.open_year < 2009 OR museum.open_year > 2011 GROUP BY visitor.name HAVING COUNT(DISTINCT museum.open_year) > 1
SELECT visitor.name FROM visitor JOIN visit ON visitor.id = visit.visitor_id JOIN museum ON visit.museum_id = museum.museum_id WHERE museum.open_year < 2009 OR museum.open_year > 2011 GROUP BY visitor.name HAVING COUNT(DISTINCT museum.open_year) > 1
SELECT visitor.name  FROM visitor  JOIN visit ON visitor.id = visit.visitor_id  JOIN museum ON visit.museum_id = museum.museum_id  WHERE museum.open_year < 2009 OR museum.open_year > 2011 GROUP BY visitor.name HAVING COUNT(DISTINCT museum.open_year) > 1
SELECT visitor.name  FROM visitor  JOIN visit ON visitor.id = visit.visitor_id  JOIN museum ON visit.museum_id = museum.museum_id  WHERE museum.open_year < 2009 OR museum.open_year > 2011 GROUP BY visitor.name HAVING COUNT(DISTINCT museum.open_year) > 1",SELECT visitor.name  FROM visitor  JOIN visit ON visitor.id = visit.visitor_id  JOIN museum ON visit.museum_id = museum.museum_id  WHERE museum.open_year < 2009 OR museum.open_year > 2011 GROUP BY visitor.name HAVING COUNT(DISTINCT museum.open_year) > 1
84,931,"Return the owner id, first name and last name of the owner who has the most dogs.",dog_kennels,extra,"SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT owners.owner_id, owners.first_name, owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id GROUP BY owners.owner_id, owners.first_name, owners.last_name ORDER BY COUNT(dogs.dog_id) DESC LIMIT 1
SELECT owners.owner_id, owners.first_name, owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id GROUP BY owners.owner_id, owners.first_name, owners.last_name ORDER BY COUNT(dogs.dog_id) DESC LIMIT 1
SELECT owners.owner_id, owners.first_name, owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id GROUP BY owners.owner_id, owners.first_name, owners.last_name ORDER BY COUNT(dogs.dog_id) DESC LIMIT 1
SELECT owners.owner_id, owners.first_name, owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id GROUP BY owners.owner_id, owners.first_name, owners.last_name ORDER BY COUNT(dogs.dog_id) DESC LIMIT 1
SELECT owners.owner_id, owners.first_name, owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id GROUP BY owners.owner_id, owners.first_name, owners.last_name ORDER BY COUNT(dogs.dog_id) DESC LIMIT 1
SELECT owners.owner_id, owners.first_name, owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id GROUP BY owners.owner_id, owners.first_name, owners.last_name ORDER BY COUNT(dogs.dog_id) DESC LIMIT 1
SELECT owners.owner_id, owners.first_name, owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id GROUP BY owners.owner_id, owners.first_name, owners.last_name ORDER BY COUNT(dogs.dog_id) DESC LIMIT 1","SELECT owners.owner_id, owners.first_name, owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id GROUP BY owners.owner_id, owners.first_name, owners.last_name ORDER BY COUNT(dogs.dog_id) DESC LIMIT 1"
85,101,Find the make and production time of the cars that were produced in the earliest year?,car_1,extra,"SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);",7,"SELECT c.makeid, c.model, c.make, cd.year, cm.maker FROM car_names c JOIN cars_data cd ON c.makeid = cd.id JOIN car_makers cm ON c.maker = cm.id WHERE cd.year = (SELECT MIN(year) FROM cars_data) ORDER BY cd.year ASC
SELECT c.make, c.year FROM car_names AS c JOIN (     SELECT MIN(year) AS earliest_year     FROM cars_data ) AS e ON c.year = e.earliest_year
SELECT c.make, c.year FROM car_names AS c JOIN (     SELECT MIN(year) AS earliest_year     FROM cars_data ) AS e ON c.year = e.earliest_year
SELECT c.make, c.year FROM car_names AS c JOIN (     SELECT MIN(year) AS earliest_year     FROM cars_data ) AS e ON c.year = e.earliest_year
SELECT c.make, c.year FROM car_names AS cn JOIN car_makers AS cm ON cn.makeid = cm.id JOIN model_list AS ml ON cn.model = ml.modelid JOIN cars_data AS cd ON cn.makeid = cd.id WHERE c.year = (SELECT MIN(year) FROM cars_data)
SELECT c.makeid, c.model, c.make, cd.year, cm.maker, cm.fullname FROM car_names c JOIN cars_data cd ON c.makeid = cd.id JOIN car_makers cm ON c.makeid = cm.id WHERE cd.year = (SELECT MIN(year) FROM cars_data)
SELECT c.make, c.year FROM car_names AS cn JOIN model_list AS ml ON cn.makeid = ml.modelid JOIN car_makers AS cm ON ml.maker = cm.id JOIN cars_data AS cd ON cn.makeid = cd.id WHERE c.year = (SELECT MIN(year) FROM cars_data)","SELECT c.make, c.year FROM car_names AS c JOIN (     SELECT MIN(year) AS earliest_year     FROM cars_data ) AS e ON c.year = e.earliest_year"
86,461,Find the year that has the most number of matches.,wta_1,hard,SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,7,"SELECT year, COUNT(*) as match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1
SELECT year, COUNT(*) as match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1
SELECT year, COUNT(*) as match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1
SELECT year, COUNT(*) as match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1
SELECT year, COUNT(*) as match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1
SELECT year, COUNT(*) as match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1
SELECT year, COUNT(*) as match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1","SELECT year, COUNT(*) as match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1"
87,831,Return the average attendance across all shows.,orchestra,easy,SELECT avg(Attendance) FROM SHOW,7,"SELECT AVG(attendance) FROM show
SELECT AVG(attendance) FROM show
SELECT AVG(attendance) FROM show
SELECT AVG(attendance) FROM show
SELECT AVG(attendance) FROM show
SELECT AVG(attendance) FROM show
SELECT AVG(attendance) FROM show",SELECT AVG(attendance) FROM show
88,303,"What is the document id, template id and description for document named ""Robbin CV""?",cre_Doc_Template_Mgt,medium,"SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  ""Robbin CV""",7,"SELECT documents.document_id, templates.template_id, documents.document_description FROM documents INNER JOIN templates ON documents.template_id = templates.template_id WHERE documents.document_name = 'Robbin CV'
SELECT documents.document_id, templates.template_id, documents.document_description FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE documents.document_name = 'Robbin CV'
SELECT documents.document_id, templates.template_id, documents.document_description FROM documents INNER JOIN templates ON documents.template_id = templates.template_id WHERE documents.document_name = 'Robbin CV'
SELECT documents.document_id, templates.template_id, documents.document_description FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE documents.document_name = 'Robbin CV'
SELECT documents.document_id, templates.template_id, documents.document_description FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE documents.document_name = 'Robbin CV'
SELECT documents.document_id, templates.template_id, documents.document_description FROM documents INNER JOIN templates ON documents.template_id = templates.template_id WHERE documents.document_name = 'Robbin CV'
SELECT documents.document_id, templates.template_id, documents.document_description FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE documents.document_name = 'Robbin CV'","SELECT documents.document_id, templates.template_id, documents.document_description FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE documents.document_name = 'Robbin CV'"
89,794,Find the number of cities in each district whose population is greater than the average population of cities?,world_1,extra,"SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District",7,"SELECT district, COUNT(id) as num_cities FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district
SELECT district, COUNT(id) as num_cities FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district
SELECT district, COUNT(id) as num_cities FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district
SELECT district, COUNT(id) as num_cities FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district
SELECT district, COUNT(id) as num_cities FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district
SELECT district, COUNT(id) as num_cities FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district
SELECT district, COUNT(id) as num_cities FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district","SELECT district, COUNT(id) as num_cities FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district"
90,974,How many dogs have an age below the average?,dog_kennels,hard,SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs ),7,"SELECT COUNT(*) FROM dogs WHERE age < (SELECT AVG(age) FROM dogs)
SELECT COUNT(*) FROM dogs WHERE age < (SELECT AVG(age) FROM dogs)
SELECT COUNT(*) FROM dogs WHERE age < (SELECT AVG(age) FROM dogs)
SELECT COUNT(*) FROM dogs WHERE age < (SELECT AVG(age) FROM dogs)
SELECT COUNT(*) FROM dogs WHERE age < (SELECT AVG(age) FROM dogs)
SELECT COUNT(*) FROM dogs WHERE age < (SELECT AVG(age) FROM dogs)
SELECT COUNT(*) FROM dogs WHERE age < (SELECT AVG(age) FROM dogs)",SELECT COUNT(*) FROM dogs WHERE age < (SELECT AVG(age) FROM dogs)
91,285,Find the name of the shops that do not hire any employee.,employee_hire_evaluation,hard,SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring),7,"SELECT shop.name  FROM shop  LEFT JOIN hiring ON shop.shop_id = hiring.shop_id  WHERE hiring.employee_id IS NULL
SELECT shop.name FROM shop LEFT JOIN hiring ON shop.shop_id = hiring.shop_id WHERE hiring.employee_id IS NULL
SELECT shop.name  FROM shop  LEFT JOIN hiring ON shop.shop_id = hiring.shop_id  WHERE hiring.employee_id IS NULL
SELECT shop.name  FROM shop  LEFT JOIN hiring ON shop.shop_id = hiring.shop_id  WHERE hiring.employee_id IS NULL
SELECT shop.name  FROM shop  LEFT JOIN hiring ON shop.shop_id = hiring.shop_id  WHERE hiring.employee_id IS NULL
SELECT shop.name FROM shop LEFT JOIN hiring ON shop.shop_id = hiring.shop_id WHERE hiring.employee_id IS NULL
SELECT shop.name  FROM shop  LEFT JOIN hiring ON shop.shop_id = hiring.shop_id  WHERE hiring.employee_id IS NULL",SELECT shop.name  FROM shop  LEFT JOIN hiring ON shop.shop_id = hiring.shop_id  WHERE hiring.employee_id IS NULL
92,67,Find the type and weight of the youngest pet.,pets_1,medium,"SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1",7,"SELECT pets.pettype, pets.weight FROM pets INNER JOIN (SELECT has_pet.stuid, MIN(student.age) as min_age FROM has_pet INNER JOIN student ON has_pet.stuid = student.stuid GROUP BY has_pet.stuid) AS youngest_pet ON pets.stuid = youngest_pet.stuid WHERE pets.pet_age = youngest_pet.min_age
SELECT pets.pettype, pets.weight FROM pets INNER JOIN (SELECT has_pet.stuid, MIN(student.age) as min_age FROM has_pet INNER JOIN student ON has_pet.stuid = student.stuid GROUP BY has_pet.stuid) AS youngest_pet ON pets.stuid = youngest_pet.stuid WHERE pets.pet_age = youngest_pet.min_age
SELECT pets.pettype, pets.weight FROM pets INNER JOIN (     SELECT has_pet.stuid, MIN(pets.pet_age) as youngest_age     FROM has_pet     INNER JOIN pets ON has_pet.petid = pets.petid     GROUP BY has_pet.stuid ) as youngest_pets ON pets.petid = youngest_pets.petid WHERE pets.pet_age = youngest_pets.youngest_age
SELECT pets.pettype, pets.weight FROM pets INNER JOIN (     SELECT has_pet.stuid, MIN(pets.pet_age) as youngest_age     FROM has_pet     INNER JOIN pets ON has_pet.petid = pets.petid     GROUP BY has_pet.stuid ) as youngest_pets ON pets.petid = youngest_pets.petid WHERE pets.pet_age = youngest_pets.youngest_age
SELECT pets.pettype, pets.weight FROM pets INNER JOIN (SELECT has_pet.stuid, MIN(student.age) as min_age FROM has_pet INNER JOIN student ON has_pet.stuid = student.stuid GROUP BY has_pet.stuid) AS youngest_pet ON pets.stuid = youngest_pet.stuid WHERE pets.pet_age = youngest_pet.min_age
SELECT pets.pettype, pets.weight FROM pets INNER JOIN (     SELECT has_pet.stuid, MIN(pets.pet_age) as youngest_age     FROM has_pet     INNER JOIN pets ON has_pet.petid = pets.petid     GROUP BY has_pet.stuid ) as youngest_pets ON pets.petid = youngest_pets.petid AND pets.pet_age = youngest_pets.youngest_age
SELECT pets.pettype, pets.weight FROM pets INNER JOIN (SELECT has_pet.stuid, MIN(student.age) as min_age FROM has_pet INNER JOIN student ON has_pet.stuid = student.stuid GROUP BY has_pet.stuid) AS youngest_pet ON pets.stuid = youngest_pet.stuid WHERE pets.pet_age = youngest_pet.min_age","SELECT pets.pettype, pets.weight FROM pets INNER JOIN (SELECT has_pet.stuid, MIN(student.age) as min_age FROM has_pet INNER JOIN student ON has_pet.stuid = student.stuid GROUP BY has_pet.stuid) AS youngest_pet ON pets.stuid = youngest_pet.stuid WHERE pets.pet_age = youngest_pet.min_age"
93,510,How many courses are there?,student_transcripts_tracking,easy,SELECT count(*) FROM Courses,7,"SELECT COUNT(*) FROM courses
SELECT COUNT(*) FROM courses
SELECT COUNT(*) FROM courses
SELECT COUNT(*) FROM courses
SELECT COUNT(*) FROM courses
SELECT COUNT(*) FROM courses
SELECT COUNT(*) FROM courses",SELECT COUNT(*) FROM courses
94,379,Show the document id with paragraph text 'Brazil' and 'Ireland'.,cre_Doc_Template_Mgt,hard,SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland',7,"SELECT documents.document_id  FROM documents  INNER JOIN paragraphs ON documents.document_id = paragraphs.document_id  WHERE paragraphs.paragraph_text LIKE '%Brazil%' OR paragraphs.paragraph_text LIKE '%Ireland%'
SELECT documents.document_id  FROM documents  INNER JOIN paragraphs ON documents.document_id = paragraphs.document_id  WHERE paragraphs.paragraph_text LIKE '%Brazil%' OR paragraphs.paragraph_text LIKE '%Ireland%'
SELECT documents.document_id  FROM documents  JOIN paragraphs ON documents.document_id = paragraphs.document_id  WHERE paragraphs.paragraph_text LIKE '%Brazil%' OR paragraphs.paragraph_text LIKE '%Ireland%'
SELECT documents.document_id  FROM documents  INNER JOIN paragraphs ON documents.document_id = paragraphs.document_id  WHERE paragraphs.paragraph_text LIKE '%Brazil%' OR paragraphs.paragraph_text LIKE '%Ireland%'
SELECT documents.document_id  FROM documents  INNER JOIN paragraphs ON documents.document_id = paragraphs.document_id  WHERE paragraphs.paragraph_text LIKE '%Brazil%' OR paragraphs.paragraph_text LIKE '%Ireland%'
SELECT documents.document_id  FROM documents  INNER JOIN paragraphs ON documents.document_id = paragraphs.document_id  WHERE paragraphs.paragraph_text LIKE '%Brazil%' OR paragraphs.paragraph_text LIKE '%Ireland%'
SELECT documents.document_id  FROM documents  JOIN paragraphs ON documents.document_id = paragraphs.document_id  WHERE paragraphs.paragraph_text LIKE '%Brazil%' OR paragraphs.paragraph_text LIKE '%Ireland%'",SELECT documents.document_id  FROM documents  INNER JOIN paragraphs ON documents.document_id = paragraphs.document_id  WHERE paragraphs.paragraph_text LIKE '%Brazil%' OR paragraphs.paragraph_text LIKE '%Ireland%'
95,694,What are the contestant numbers and names of the contestants who had at least two votes?,voter_1,medium,"SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2",7,"SELECT contestants.contestant_number, contestants.contestant_name  FROM contestants  JOIN votes ON contestants.contestant_number = votes.contestant_number  GROUP BY votes.contestant_number  HAVING COUNT(votes.vote_id) >= 2
SELECT contestants.contestant_number, contestants.contestant_name  FROM contestants  JOIN votes ON contestants.contestant_number = votes.contestant_number  GROUP BY votes.contestant_number  HAVING COUNT(votes.vote_id) >= 2
SELECT contestants.contestant_number, contestants.contestant_name  FROM contestants  JOIN votes ON contestants.contestant_number = votes.contestant_number  GROUP BY votes.contestant_number  HAVING COUNT(votes.vote_id) >= 2
SELECT contestants.contestant_number, contestants.contestant_name  FROM contestants  JOIN votes ON contestants.contestant_number = votes.contestant_number  GROUP BY votes.contestant_number  HAVING COUNT(votes.vote_id) >= 2
SELECT contestants.contestant_number, contestants.contestant_name  FROM contestants  INNER JOIN votes ON contestants.contestant_number = votes.contestant_number  GROUP BY votes.contestant_number  HAVING COUNT(votes.vote_id) >= 2
SELECT contestants.contestant_number, contestants.contestant_name  FROM contestants  JOIN votes ON contestants.contestant_number = votes.contestant_number  GROUP BY votes.contestant_number  HAVING COUNT(votes.vote_id) >= 2
SELECT contestants.contestant_number, contestants.contestant_name  FROM contestants  JOIN votes ON contestants.contestant_number = votes.contestant_number  GROUP BY votes.contestant_number  HAVING COUNT(votes.vote_id) >= 2","SELECT contestants.contestant_number, contestants.contestant_name  FROM contestants  JOIN votes ON contestants.contestant_number = votes.contestant_number  GROUP BY votes.contestant_number  HAVING COUNT(votes.vote_id) >= 2"
96,977,Show me the cost of the most recently performed treatment.,dog_kennels,medium,SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1,7,"SELECT MAX(treatments.cost_of_treatment) AS most_recent_treatment_cost FROM treatments JOIN (SELECT dogs.dog_id, MAX(treatments.date_of_treatment) AS most_recent_treatment_date       FROM treatments       JOIN dogs ON treatments.dog_id = dogs.dog_id       GROUP BY dogs.dog_id) AS recent_treatments ON treatments.dog_id = recent_treatments.dog_id AND treatments.date_of_treatment = recent_treatments.most_recent_treatment_
SELECT MAX(treatments.cost_of_treatment) AS max_cost FROM treatments
SELECT MAX(treatments.cost_of_treatment) AS most_recent_treatment_cost FROM treatments JOIN (SELECT dogs.dog_id, MAX(treatments.date_of_treatment) AS most_recent_treatment_date       FROM dogs       JOIN treatments ON dogs.dog_id = treatments.dog_id       GROUP BY dogs.dog_id) AS recent_treatments ON treatments.dog_id = recent_treatments.dog_id AND treatments.date_of_treatment = recent_treatments.most_recent_treatment_
SELECT MAX(treatments.cost_of_treatment) AS most_recent_treatment_cost FROM treatments JOIN (SELECT dogs.dog_id, MAX(treatments.date_of_treatment) AS most_recent_treatment_date       FROM treatments       JOIN dogs ON treatments.dog_id = dogs.dog_id       GROUP BY dogs.dog_id) AS recent_treatments ON treatments.dog_id = recent_treatments.dog_id AND treatments.date_of_treatment = recent_treatments.most_recent_treatment_
SELECT MAX(treatments.cost_of_treatment) AS max_cost FROM treatments
SELECT MAX(treatments.cost_of_treatment) AS most_recent_treatment_cost FROM treatments JOIN (SELECT dogs.dog_id, MAX(treatments.date_of_treatment) AS most_recent_treatment_date       FROM dogs       JOIN treatments ON dogs.dog_id = treatments.dog_id       GROUP BY dogs.dog_id) AS recent_treatments ON treatments.dog_id = recent_treatments.dog_id AND treatments.date_of_treatment = recent_treatments.most_recent_treatment_
SELECT MAX(treatments.cost_of_treatment) AS most_recent_treatment_cost FROM treatments JOIN (SELECT dogs.dog_id, MAX(treatments.date_of_treatment) AS most_recent_treatment_date       FROM treatments       JOIN dogs ON treatments.dog_id = dogs.dog_id       GROUP BY dogs.dog_id) AS recent_treatments ON treatments.dog_id = recent_treatments.dog_id AND treatments.date_of_treatment = recent_treatments.most_recent_treatment_","SELECT MAX(treatments.cost_of_treatment) AS most_recent_treatment_cost FROM treatments JOIN (SELECT dogs.dog_id, MAX(treatments.date_of_treatment) AS most_recent_treatment_date       FROM treatments       JOIN dogs ON treatments.dog_id = dogs.dog_id       GROUP BY dogs.dog_id) AS recent_treatments ON treatments.dog_id = recent_treatments.dog_id AND treatments.date_of_treatment = recent_treatments.most_recent_treatment_"
97,821,Return the codes of countries for which Spanish is the predominantly spoken language.,world_1,medium,"SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  ""Spanish"" GROUP BY CountryCode",7,"SELECT country.code FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'Spanish' AND countrylanguage.percentage >= 50
SELECT country.code  FROM country  JOIN countrylanguage  ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language = 'Spanish' AND countrylanguage.percentage >= 50
SELECT country.code FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'Spanish' AND countrylanguage.percentage >= 50
SELECT country.code  FROM country  JOIN countrylanguage  ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language = 'Spanish' AND countrylanguage.percentage > 50
SELECT country.code FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'Spanish' AND countrylanguage.percentage >= 50
SELECT country.code  FROM country  JOIN countrylanguage  ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language = 'Spanish' AND countrylanguage.percentage > 50
SELECT country.code FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'Spanish' AND countrylanguage.percentage >= 50",SELECT country.code FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'Spanish' AND countrylanguage.percentage >= 50
98,29,What are the names of the stadiums without any concerts?,concert_singer,hard,SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert),7,"SELECT stadium.name  FROM stadium  LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id  WHERE concert.stadium_id IS NULL
SELECT stadium.name  FROM stadium  LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id  WHERE concert.stadium_id IS NULL
SELECT stadium.name  FROM stadium  LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id  WHERE concert.stadium_id IS NULL
SELECT stadium.name  FROM stadium  LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id  WHERE concert.stadium_id IS NULL
SELECT stadium.name  FROM stadium  LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id  WHERE concert.stadium_id IS NULL
SELECT stadium.name  FROM stadium  LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id  WHERE concert.stadium_id IS NULL
SELECT stadium.name  FROM stadium  LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id  WHERE concert.stadium_id IS NULL",SELECT stadium.name  FROM stadium  LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id  WHERE concert.stadium_id IS NULL
99,818,What is the total number of countries where Spanish is spoken by the largest percentage of people?,world_1,extra,"SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  ""Spanish"" GROUP BY CountryCode",7,"SELECT COUNT(*)  FROM (     SELECT c.name      FROM country c      JOIN countrylanguage cl ON c.code = cl.countrycode      WHERE cl.language = 'Spanish' AND cl.percentage = (         SELECT MAX(percentage)          FROM countrylanguage          WHERE language = 'Spanish'     ) )
SELECT COUNT(*) FROM (SELECT c.name FROM country c JOIN countrylanguage cl ON c.code = cl.countrycode WHERE cl.language = 'Spanish' AND cl.percentage = (SELECT MAX(percentage) FROM countrylanguage WHERE language = 'Spanish') GROUP BY c.name)
SELECT COUNT(*) FROM (     SELECT c.name AS country_name, cl.language, cl.percentage     FROM country AS c     JOIN countrylanguage AS cl ON c.code = cl.countrycode     WHERE cl.language = 'Spanish' AND cl.percentage = (         SELECT MAX(percentage) FROM countrylanguage WHERE language = 'Spanish'     ) )
SELECT COUNT(*) FROM (SELECT c.name FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode WHERE cl.language = 'Spanish' AND cl.percentage = (SELECT MAX(percentage) FROM countrylanguage WHERE language = 'Spanish') GROUP BY c.name)
SELECT COUNT(*) FROM (     SELECT c.name AS country_name, cl.language, cl.percentage     FROM country AS c     JOIN countrylanguage AS cl ON c.code = cl.countrycode     WHERE cl.language = 'Spanish' AND cl.percentage = (         SELECT MAX(percentage) FROM countrylanguage WHERE language = 'Spanish'     ) )
SELECT COUNT(*) FROM (     SELECT c.name AS country_name, cl.language, cl.percentage     FROM country AS c     JOIN countrylanguage AS cl ON c.code = cl.countrycode     WHERE cl.language = 'Spanish' AND cl.percentage = (         SELECT MAX(percentage) FROM countrylanguage WHERE language = 'Spanish'     ) )
SELECT COUNT(*) FROM (SELECT c.name FROM country c JOIN countrylanguage cl ON c.code = cl.countrycode WHERE cl.language = 'Spanish' AND cl.percentage = (SELECT MAX(percentage) FROM countrylanguage WHERE language = 'Spanish') GROUP BY c.name)","SELECT COUNT(*) FROM (     SELECT c.name AS country_name, cl.language, cl.percentage     FROM country AS c     JOIN countrylanguage AS cl ON c.code = cl.countrycode     WHERE cl.language = 'Spanish' AND cl.percentage = (         SELECT MAX(percentage) FROM countrylanguage WHERE language = 'Spanish'     ) )"
