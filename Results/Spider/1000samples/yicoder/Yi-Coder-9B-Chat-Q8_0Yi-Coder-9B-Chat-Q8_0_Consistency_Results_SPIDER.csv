,Qid,Question,Db_Id,hardness,Query Gold,Repeated,Query Generated,Most Frequent Query
0,550,What are the last name of the students who live in North Carolina but have not registered in any degree programs?,student_transcripts_tracking,extra,SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id,7,"SELECT students.last_name FROM students LEFT JOIN student_enrolment ON students.student
SELECT students.last_name FROM students LEFT JOIN student_enrolment ON students.student
SELECT students.last_name FROM students LEFT JOIN student_enrolment ON students.student
SELECT students.last_name  FROM students  INNER JOIN addresses ON students.current
SELECT students.last_name FROM students LEFT JOIN student_enrolment ON students.student
SELECT students.last_name FROM students LEFT JOIN student_enrolment ON students.student
SELECT students.last_name FROM students LEFT JOIN student_enrolment ON students.student",SELECT students.last_name FROM students LEFT JOIN student_enrolment ON students.student
1,976,How much does the most recent treatment cost?,dog_kennels,medium,SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1,7,"SELECT MAX(treatment_types.treatment_type_description), MAX(treatments.cost_of_treatment) FROM treatments INNER JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code
SELECT MAX(treatment_types.treatment_type_description), MAX(treatments.cost_of_treatment) FROM treatments INNER JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code
SELECT MAX(treatment_types.treatment_type_description), MAX(treatments.cost_of_treatment) FROM treatments INNER JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code
SELECT MAX(treatment_types.treatment_type_description), MAX(treatments.cost_of_treatment) FROM treatments INNER JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code
SELECT MAX(treatment_types.treatment_type_description), MAX(treatments.cost_of_treatment) FROM treatments INNER JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code
SELECT MAX(treatment_types.treatment_type_description), MAX(treatments.cost_of_treatment) FROM treatments INNER JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code
SELECT MAX(treatment_types.treatment_type_description), MAX(treatments.cost_of_treatment) FROM treatments INNER JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code","SELECT MAX(treatment_types.treatment_type_description), MAX(treatments.cost_of_treatment) FROM treatments INNER JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code"
2,499,What are the ids and names of the battles that led to more than 10 people killed in total.,battle_death,hard,"SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10",7,"SELECT battle.id, battle.name FROM battle JOIN death ON battle.id = death.caused_by_ship_id JOIN ship ON death.caused_by_ship_id = ship.id GROUP BY battle.id, battle.name HAVING SUM(death.killed) > 10
SELECT battle.id, battle.name FROM battle JOIN death ON battle.id = death.caused_by_ship_id JOIN ship ON death.caused_by_ship_id = ship.id GROUP BY battle.id, battle.name HAVING SUM(death.killed) > 10
SELECT battle.id, battle.name  FROM battle  JOIN death ON battle.id = death.caused_by_ship_id  JOIN ship ON death.caused_by_ship_id = ship.id  GROUP BY battle.id, battle.name  HAVING SUM(death.killed) > 10
SELECT battle.id, battle.name  FROM battle  JOIN death ON battle.id = death.caused_by_ship_id  JOIN ship ON death.caused_by_ship_id = ship.id  GROUP BY battle.id, battle.name  HAVING SUM(death.killed) > 10
SELECT battle.id, battle.name  FROM battle  JOIN death ON battle.id = death.caused_by_ship_id  JOIN ship ON death.caused_by_ship_id = ship.id  GROUP BY battle.id, battle.name  HAVING SUM(death.killed) > 10
SELECT battle.id, battle.name  FROM battle  JOIN death ON battle.id = death.caused_by_ship_id  JOIN ship ON death.caused_by_ship_id = ship.id  GROUP BY battle.id, battle.name  HAVING SUM(death.killed) > 10
SELECT battle.id, battle.name FROM battle JOIN death ON battle.id = death.caused_by_ship_id JOIN ship ON death.caused_by_ship_id = ship.id GROUP BY battle.id, battle.name HAVING SUM(death.killed) > 10","SELECT battle.id, battle.name  FROM battle  JOIN death ON battle.id = death.caused_by_ship_id  JOIN ship ON death.caused_by_ship_id = ship.id  GROUP BY battle.id, battle.name  HAVING SUM(death.killed) > 10"
3,238,Which airlines have departing flights from both APG and CVO airports?,flight_2,extra,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""APG"" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""CVO""",7,"SELECT DISTINCT airlines.airline FROM airlines JOIN flights ON airlines.abbreviation = flights.airline WHERE flights.sourceairport IN (SELECT airportcode FROM airports WHERE airportcode = 'APG' OR airportcode = 'CVO') AND flights.destairport IN (SELECT airportcode FROM airports WHERE airportcode = 'APG' OR airportcode = 'CVO')
SELECT DISTINCT airlines.airline  FROM airlines  JOIN flights ON airlines.abbreviation = flights.airline  WHERE flights.sourceairport IN (SELECT airportcode FROM airports WHERE airportcode = 'APG' OR airportcode = 'CVO') AND flights.destairport IN (SELECT airportcode FROM airports WHERE airportcode = 'APG' OR airportcode = 'CVO')
SELECT DISTINCT airlines.airline FROM airlines JOIN flights ON airlines.abbreviation = flights.airline WHERE flights.sourceairport IN (SELECT airportcode FROM airports WHERE airportcode = 'APG' OR airportcode = 'CVO') AND flights.destairport IN (SELECT airportcode FROM airports WHERE airportcode = 'APG' OR airportcode = 'CVO')
SELECT DISTINCT airlines.airline  FROM airlines  JOIN flights ON airlines.abbreviation = flights.airline  WHERE flights.sourceairport IN (SELECT airportcode FROM airports WHERE airportcode = 'APG' OR airportcode = 'CVO') AND flights.destairport IN (SELECT airportcode FROM airports WHERE airportcode = 'APG' OR airportcode = 'CVO')
SELECT DISTINCT f.airline  FROM flights AS f  JOIN airlines AS a ON f.airline = a.abbreviation  WHERE f.sourceairport IN (SELECT airportcode FROM airports WHERE airportcode IN ('APG', 'CVO'))
SELECT DISTINCT airlines.airline FROM airlines JOIN flights ON airlines.abbreviation = flights.airline WHERE flights.sourceairport IN (SELECT airportcode FROM airports WHERE airportcode = 'APG' OR airportcode = 'CVO') AND flights.destairport IN (SELECT airportcode FROM airports WHERE airportcode = 'APG' OR airportcode = 'CVO')
SELECT DISTINCT airlines.airline  FROM airlines  JOIN flights ON airlines.abbreviation = flights.airline  WHERE flights.sourceairport IN (SELECT airportcode FROM airports WHERE airportcode = 'APG' OR airportcode = 'CVO') AND flights.destairport IN (SELECT airportcode FROM airports WHERE airportcode = 'APG' OR airportcode = 'CVO')",SELECT DISTINCT airlines.airline FROM airlines JOIN flights ON airlines.abbreviation = flights.airline WHERE flights.sourceairport IN (SELECT airportcode FROM airports WHERE airportcode = 'APG' OR airportcode = 'CVO') AND flights.destairport IN (SELECT airportcode FROM airports WHERE airportcode = 'APG' OR airportcode = 'CVO')
4,445,Find the name of tourney that has more than 10 matches.,wta_1,easy,SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10,7,"SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(match_num) > 10
SELECT DISTINCT matches.tourney_name  FROM matches  GROUP BY matches.tourney_name  HAVING COUNT(matches.match_num) > 10
SELECT DISTINCT matches.tourney_name  FROM matches  GROUP BY matches.tourney_name  HAVING COUNT(matches.match_num) > 10
SELECT DISTINCT matches.tourney_name  FROM matches  GROUP BY matches.tourney_name  HAVING COUNT(matches.match_num) > 10
SELECT DISTINCT matches.tourney_name  FROM matches  GROUP BY matches.tourney_name  HAVING COUNT(matches.match_num) > 10
SELECT DISTINCT matches.tourney_name  FROM matches  GROUP BY matches.tourney_name  HAVING COUNT(matches.match_num) > 10
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(match_num) > 10",SELECT DISTINCT matches.tourney_name  FROM matches  GROUP BY matches.tourney_name  HAVING COUNT(matches.match_num) > 10
5,844,Show the name of the conductor that has conducted the most number of orchestras.,orchestra,extra,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1,7,"SELECT c.name, COUNT(o.orchestra_id) as num_orchestras FROM conductor c JOIN orchestra o ON c.conductor_id = o.conductor_id GROUP BY c.conductor_id ORDER BY num_orchestras DESC LIMIT 1
SELECT c.name, COUNT(o.orchestra_id) as num_orchestras FROM conductor as c JOIN orchestra as o ON c.conductor_id = o.conductor_id GROUP BY c.conductor_id ORDER BY num_orchestras DESC LIMIT 1
SELECT c.name, COUNT(o.orchestra_id) as num_orchestras FROM conductor as c JOIN orchestra as o ON c.conductor_id = o.conductor_id GROUP BY c.conductor_id ORDER BY num_orchestras DESC LIMIT 1
SELECT c.name, COUNT(o.orchestra_id) as num_orchestras FROM conductor as c JOIN orchestra as o ON c.conductor_id = o.conductor_id GROUP BY c.conductor_id ORDER BY num_orchestras DESC LIMIT 1
SELECT c.name, COUNT(o.orchestra_id) as num_orchestras FROM conductor c JOIN orchestra o ON c.conductor_id = o.conductor_id GROUP BY c.conductor_id ORDER BY num_orchestras DESC LIMIT 1
SELECT c.name, COUNT(o.orchestra_id) as num_orchestras FROM conductor as c JOIN orchestra as o ON c.conductor_id = o.conductor_id GROUP BY c.conductor_id ORDER BY num_orchestras DESC LIMIT 1
SELECT c.name, COUNT(o.orchestra_id) as num_orchestras FROM conductor as c JOIN orchestra as o ON c.conductor_id = o.conductor_id GROUP BY c.conductor_id ORDER BY num_orchestras DESC LIMIT 1","SELECT c.name, COUNT(o.orchestra_id) as num_orchestras FROM conductor as c JOIN orchestra as o ON c.conductor_id = o.conductor_id GROUP BY c.conductor_id ORDER BY num_orchestras DESC LIMIT 1"
6,205,How many flights have destination ATO?,flight_2,easy,"SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  ""ATO""",7,"SELECT COUNT(*) FROM flights WHERE destairport = 'ATO'
SELECT COUNT(*) FROM flights WHERE destairport = 'ATO'
SELECT COUNT(*) FROM flights WHERE destairport = 'ATO'
SELECT COUNT(*) FROM flights WHERE destairport = 'ATO'
SELECT COUNT(*) FROM flights WHERE destairport = 'ATO'
SELECT COUNT(*) FROM flights WHERE destairport = 'ATO'
SELECT COUNT(*) FROM flights WHERE destairport = 'ATO'",SELECT COUNT(*) FROM flights WHERE destairport = 'ATO'
7,427,Find the number of visitors who did not visit any museum opened after 2010.,museum_visit,extra,SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010),7,"SELECT COUNT(DISTINCT visitor.id)  FROM visitor  LEFT JOIN visit ON visitor.id = visit.visitor_id  LEFT JOIN museum ON visit.museum_id = museum.museum_id  WHERE museum.open_year <= 2010 OR museum.open_year IS NULL
SELECT COUNT(DISTINCT visitor.id)  FROM visitor  LEFT JOIN visit ON visitor.id = visit.visitor_id  LEFT JOIN museum ON visit.museum_id = museum.museum_id  WHERE museum.open_year <= 2010 OR museum.open_year IS NULL
SELECT COUNT(DISTINCT visitor.id)  FROM visitor  LEFT JOIN visit ON visitor.id = visit.visitor_id  LEFT JOIN museum ON visit.museum_id = museum.museum_id  WHERE museum.open_year <= 2010 OR museum.open_year IS NULL
SELECT COUNT(DISTINCT visitor.id)  FROM visitor  LEFT JOIN visit ON visitor.id = visit.visitor_id  LEFT JOIN museum ON visit.museum_id = museum.museum_id  WHERE museum.open_year <= 2010 OR museum.open_year IS NULL
SELECT COUNT(DISTINCT visitor.id) FROM visitor LEFT JOIN visit ON visitor.id = visit.visitor_id LEFT JOIN museum ON visit.museum_id = museum.museum_id WHERE museum.open_year <= 2010 OR museum.open_year IS NULL
SELECT COUNT(DISTINCT visitor.id)  FROM visitor  LEFT JOIN visit ON visitor.id = visit.visitor_id  LEFT JOIN museum ON visit.museum_id = museum.museum_id  WHERE museum.open_year <= 2010 OR museum.open_year IS NULL
SELECT COUNT(DISTINCT visitor.id) FROM visitor LEFT JOIN visit ON visitor.id = visit.visitor_id LEFT JOIN museum ON visit.museum_id = museum.museum_id WHERE museum.open_year <= 2010 OR museum.open_year IS NULL",SELECT COUNT(DISTINCT visitor.id)  FROM visitor  LEFT JOIN visit ON visitor.id = visit.visitor_id  LEFT JOIN museum ON visit.museum_id = museum.museum_id  WHERE museum.open_year <= 2010 OR museum.open_year IS NULL
8,919,Find the states where both owners and professionals live.,dog_kennels,hard,SELECT state FROM Owners INTERSECT SELECT state FROM Professionals,7,"SELECT DISTINCT owners.state  FROM owners  INNER JOIN professionals ON owners.state = professionals.state
SELECT DISTINCT owners.state  FROM owners  INNER JOIN professionals ON owners.state = professionals.state
SELECT DISTINCT owners.state  FROM owners  INNER JOIN professionals ON owners.state = professionals.state
SELECT DISTINCT owners.state  FROM owners  INNER JOIN professionals ON owners.state = professionals.state
SELECT DISTINCT owners.state  FROM owners  INNER JOIN professionals ON owners.state = professionals.state
SELECT DISTINCT owners.state  FROM owners  INNER JOIN professionals ON owners.state = professionals.state
SELECT DISTINCT owners.state  FROM owners  INNER JOIN professionals ON owners.state = professionals.state",SELECT DISTINCT owners.state  FROM owners  INNER JOIN professionals ON owners.state = professionals.state
9,71,Find the average and maximum age for each type of pet.,pets_1,medium,"SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype",7,"SELECT p.pettype, AVG(s.age) as average_age, MAX(s.age) as max_age FROM has_pet hp JOIN pets p ON hp.petid = p.petid JOIN student s ON hp.stuid = s.stuid GROUP BY p.pettype
SELECT p.pettype, AVG(s.age) as average_age, MAX(s.age) as max_age FROM has_pet hp JOIN pets p ON hp.petid = p.petid JOIN student s ON hp.stuid = s.stuid GROUP BY p.pettype
SELECT p.pettype, AVG(s.age) AS average_age, MAX(s.age) AS max_age FROM has_pet hp JOIN pets p ON hp.petid = p.petid JOIN student s ON hp.stuid = s.stuid GROUP BY p.pettype
SELECT p.pettype, AVG(s.age) as average_age, MAX(s.age) as max_age FROM has_pet hp JOIN pets p ON hp.petid = p.petid JOIN student s ON hp.stuid = s.stuid GROUP BY p.pettype
SELECT p.pettype, AVG(s.age) as average_age, MAX(s.age) as max_age FROM has_pet hp JOIN pets p ON hp.petid = p.petid JOIN student s ON hp.stuid = s.stuid GROUP BY p.pettype
SELECT p.pettype, AVG(s.age) as average_age, MAX(s.age) as max_age FROM has_pet hp JOIN pets p ON hp.petid = p.petid JOIN student s ON hp.stuid = s.stuid GROUP BY p.pettype
SELECT p.pettype, AVG(s.age) as average_age, MAX(s.age) as max_age FROM has_pet hp JOIN pets p ON hp.petid = p.petid JOIN student s ON hp.stuid = s.stuid GROUP BY p.pettype","SELECT p.pettype, AVG(s.age) as average_age, MAX(s.age) as max_age FROM has_pet hp JOIN pets p ON hp.petid = p.petid JOIN student s ON hp.stuid = s.stuid GROUP BY p.pettype"
10,459,Find the first name and country code of the player who did the most number of tours.,wta_1,hard,"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1",7,"SELECT players.first_name, players.country_code FROM players JOIN (     SELECT winner_id AS player_id, COUNT(*) AS tours     FROM matches     GROUP BY winner_id     UNION ALL     SELECT loser_id AS player_id, COUNT(*) AS tours     FROM matches     GROUP BY loser_id ) tour_counts ON players.player_id = tour_counts.player_id GROUP BY tour_counts.player_id ORDER BY SUM(tour_counts.tours) DESC LIMIT 1
SELECT players.first_name, players.country_code FROM players JOIN (     SELECT winner_id AS player_id, COUNT(*) AS tours     FROM matches     GROUP BY winner_id     UNION ALL     SELECT loser_id AS player_id, COUNT(*) AS tours     FROM matches     GROUP BY loser_id ) tour_counts ON players.player_id = tour_counts.player_id ORDER BY tour_counts.tours DESC LIMIT 1
SELECT players.first_name, players.country_code FROM players JOIN (     SELECT winner_id AS player_id, COUNT(*) AS tours     FROM matches     GROUP BY winner_id     UNION ALL     SELECT loser_id AS player_id, COUNT(*) AS tours     FROM matches     GROUP BY loser_id ) tour_counts ON players.player_id = tour_counts.player_id GROUP BY tour_counts.player_id ORDER BY SUM(tour_counts.tours) DESC LIMIT 1
SELECT players.first_name, players.country_code FROM players JOIN (     SELECT winner_id AS player_id, COUNT(*) AS tours     FROM matches     GROUP BY winner_id     UNION ALL     SELECT loser_id AS player_id, COUNT(*) AS tours     FROM matches     GROUP BY loser_id ) tour_counts ON players.player_id = tour_counts.player_id GROUP BY tour_counts.player_id ORDER BY SUM(tour_counts.tours) DESC LIMIT 1
SELECT players.first_name, players.country_code FROM players JOIN (     SELECT winner_id AS player_id, COUNT(*) AS tours     FROM matches     GROUP BY winner_id     UNION ALL     SELECT loser_id AS player_id, COUNT(*) AS tours     FROM matches     GROUP BY loser_id ) tour_counts ON players.player_id = tour_counts.player_id GROUP BY tour_counts.player_id ORDER BY SUM(tour_counts.tours) DESC LIMIT 1
SELECT players.first_name, players.country_code FROM players JOIN (     SELECT winner_id AS player_id, COUNT(*) AS tours     FROM matches     GROUP BY winner_id     UNION ALL     SELECT loser_id AS player_id, COUNT(*) AS tours     FROM matches     GROUP BY loser_id ) tour_counts ON players.player_id = tour_counts.player_id GROUP BY tour_counts.player_id ORDER BY SUM(tour_counts.tours) DESC LIMIT 1
SELECT players.first_name, players.country_code FROM players JOIN (     SELECT winner_id AS player_id, COUNT(*) AS tours     FROM matches     GROUP BY winner_id     UNION ALL     SELECT loser_id AS player_id, COUNT(*) AS tours     FROM matches     GROUP BY loser_id ) tour_counts ON players.player_id = tour_counts.player_id GROUP BY tour_counts.player_id ORDER BY SUM(tour_counts.tours) DESC LIMIT 1","SELECT players.first_name, players.country_code FROM players JOIN (     SELECT winner_id AS player_id, COUNT(*) AS tours     FROM matches     GROUP BY winner_id     UNION ALL     SELECT loser_id AS player_id, COUNT(*) AS tours     FROM matches     GROUP BY loser_id ) tour_counts ON players.player_id = tour_counts.player_id GROUP BY tour_counts.player_id ORDER BY SUM(tour_counts.tours) DESC LIMIT 1"
11,770,What is the total number of unique official languages spoken in the countries that are founded before 1930?,world_1,medium,"SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  ""T""",7,"SELECT COUNT(DISTINCT language)  FROM country  INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE indepyear < 1930 AND isofficial = 'T'
SELECT COUNT(DISTINCT language)  FROM country  INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE isofficial = 'T' AND indepyear < 1930
SELECT COUNT(DISTINCT language)  FROM country  INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE isofficial = 'T' AND indepyear < 1930
SELECT COUNT(DISTINCT language)  FROM country  INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE country.indepyear < 1930 AND countrylanguage.isofficial = 'T' 
SELECT COUNT(DISTINCT language)  FROM country  INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE isofficial = 'T' AND indepyear < 1930
SELECT COUNT(DISTINCT language)  FROM country  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE indepyear < 1930 AND isofficial = 'T'
SELECT COUNT(DISTINCT language)  FROM country  INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE indepyear < 1930 AND isofficial = 'T'",SELECT COUNT(DISTINCT language)  FROM country  INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE isofficial = 'T' AND indepyear < 1930
12,7,What are the names and release years for all the songs of the youngest singer?,concert_singer,medium,"SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1",7,"SELECT s.name, s.song_release_year  FROM singer AS s  WHERE s.age = (SELECT MIN(age) FROM singer) AND s.singer_id IN (SELECT si.singer_id FROM singer_in_concert AS si)
SELECT s.name, s.song_release_year FROM singer AS s WHERE s.age = (SELECT MIN(age) FROM singer) AND s.singer_id IN (SELECT si.singer_id FROM singer_in_concert AS si)
SELECT s.name, s.song_release_year FROM singer AS s WHERE s.age = (SELECT MIN(age) FROM singer) AND s.singer_id IN (SELECT si.singer_id FROM singer_in_concert AS si)
SELECT s.name, s.song_release_year FROM singer AS s WHERE s.age = (SELECT MIN(age) FROM singer) AND s.singer_id IN (SELECT si.singer_id FROM singer_in_concert AS si)
SELECT s.name, s.song_release_year FROM singer AS s WHERE s.age = (SELECT MIN(age) FROM singer) AND s.singer_id IN (SELECT si.singer_id FROM singer_in_concert AS si)
SELECT s.name, s.song_release_year FROM singer AS s WHERE s.age = (SELECT MIN(age) FROM singer) AND s.singer_id IN (SELECT si.singer_id FROM singer_in_concert AS si)
SELECT s.name, s.song_release_year FROM singer AS s WHERE s.age = (SELECT MIN(age) FROM singer) AND s.singer_id IN (SELECT si.singer_id FROM singer_in_concert AS si)","SELECT s.name, s.song_release_year FROM singer AS s WHERE s.age = (SELECT MIN(age) FROM singer) AND s.singer_id IN (SELECT si.singer_id FROM singer_in_concert AS si)"
13,558,"What is the first, middle, and last name of the earliest school graduate?",student_transcripts_tracking,medium,"SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1",7,"SELECT first_name, middle_name, last_name FROM students WHERE date_first_registered = (SELECT MIN(date
SELECT first_name, middle_name, last_name FROM students ORDER BY date_first_registered ASC LIMIT 
SELECT first_name, middle_name, last_name FROM students WHERE date_first_registered = (SELECT MIN(date
SELECT first_name, middle_name, last_name FROM students WHERE date_first_registered = (SELECT MIN(date
SELECT first_name, middle_name, last_name FROM students ORDER BY date_first_registered ASC LIMIT 
SELECT first_name, middle_name, last_name FROM students ORDER BY date_first_registered ASC LIMIT 
SELECT first_name, middle_name, last_name FROM students WHERE date_first_registered = (SELECT MIN(date","SELECT first_name, middle_name, last_name FROM students WHERE date_first_registered = (SELECT MIN(date"
14,586,What are the titles of the cartoons sorted alphabetically?,tvshow,easy,SELECT Title FROM Cartoon ORDER BY title,7,"SELECT title FROM cartoon ORDER BY title ASC
SELECT title FROM cartoon ORDER BY title ASC
SELECT title FROM cartoon ORDER BY title ASC
SELECT title FROM cartoon ORDER BY title ASC
SELECT title FROM cartoon ORDER BY title ASC
SELECT title FROM cartoon ORDER BY title ASC
SELECT title FROM cartoon ORDER BY title ASC",SELECT title FROM cartoon ORDER BY title ASC
15,894,Show ids of all students who do not have any friends.,network_1,hard,SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend,7,"SELECT id FROM highschooler  LEFT JOIN friend ON highschooler.id = friend.student_id  WHERE friend.friend_id IS NULL
SELECT id FROM highschooler  LEFT JOIN friend ON highschooler.id = friend.student_id  WHERE friend.friend_id IS NULL
SELECT id FROM highschooler  LEFT JOIN friend ON highschooler.id = friend.student_id  WHERE friend.friend_id IS NULL
SELECT id FROM highschooler  LEFT JOIN friend ON highschooler.id = friend.student_id  WHERE friend.friend_id IS NULL
SELECT id FROM highschooler  LEFT JOIN friend ON highschooler.id = friend.student_id  WHERE friend.friend_id IS NULL
SELECT id FROM highschooler  LEFT JOIN friend ON highschooler.id = friend.student_id  WHERE friend.friend_id IS NULL
SELECT id FROM highschooler  LEFT JOIN friend ON highschooler.id = friend.student_id  WHERE friend.friend_id IS NULL",SELECT id FROM highschooler  LEFT JOIN friend ON highschooler.id = friend.student_id  WHERE friend.friend_id IS NULL
16,177,What are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model?,car_1,extra,"SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';",7,"SELECT c.countryid, c.countryname FROM countries AS c JOIN car_makers AS cm ON c.countryid = cm.country JOIN (     SELECT maker, COUNT(*) as car_makers_count     FROM car_makers     GROUP BY maker     HAVING COUNT(*) > 3 OR EXISTS (         SELECT 1         FROM model_list AS ml         WHERE ml.maker = car_makers.maker AND ml.model = 'fiat'     ) ) AS subquery ON subquery.maker = cm.maker GROUP BY c.countryid, c.countryname
SELECT c.countryid, c.countryname  FROM countries AS c  JOIN car_makers AS cm ON c.countryid = cm.country  JOIN model_list AS ml ON cm.id = ml.maker  WHERE ml.model IN (SELECT model FROM model_list GROUP BY maker HAVING COUNT(model) > 3 OR maker = 'fiat')  GROUP BY c.countryid, c.countryname
SELECT c.countryid, c.countryname FROM countries AS c JOIN car_makers AS cm ON c.countryid = cm.country JOIN (     SELECT maker, COUNT(*) as maker_count     FROM car_makers     GROUP BY maker     HAVING COUNT(*) > 3 OR EXISTS (         SELECT 1         FROM model_list AS ml         WHERE ml.maker = car_makers.maker AND ml.model = 'fiat'     ) ) AS subquery ON subquery.maker = cm.maker GROUP BY c.countryid, c.countryname
SELECT c.countryid, c.countryname  FROM countries AS c  JOIN car_makers AS cm ON c.countryid = cm.country  JOIN model_list AS ml ON cm.id = ml.maker  WHERE ml.model IN (SELECT model FROM model_list GROUP BY maker HAVING COUNT(model) > 3 OR maker = 'fiat')  GROUP BY c.countryid, c.countryname
SELECT c.countryid, c.countryname FROM countries AS c JOIN car_makers AS cm ON c.countryid = cm.country JOIN (     SELECT maker, COUNT(*) as car_makers_count     FROM car_makers     GROUP BY maker     HAVING COUNT(*) > 3 OR EXISTS (         SELECT 1         FROM model_list AS ml         WHERE ml.maker = car_makers.maker AND ml.model = 'fiat'     ) ) AS subquery ON subquery.maker = cm.maker GROUP BY c.countryid, c.countryname
SELECT c.countryid, c.countryname FROM countries AS c JOIN car_makers AS cm ON c.countryid = cm.country JOIN (     SELECT maker, COUNT(*) AS num_makers     FROM car_makers     GROUP BY maker     HAVING num_makers > 3 ) AS m ON cm.maker = m.maker JOIN model_list AS ml ON cm.maker = ml.maker WHERE ml.model = 'fiat' 
SELECT c.countryid, c.countryname  FROM countries AS c  JOIN car_makers AS cm ON c.countryid = cm.country  JOIN model_list AS ml ON cm.id = ml.maker  WHERE ml.model IN (SELECT model FROM model_list GROUP BY maker HAVING COUNT(model) > 3 OR maker IN (SELECT maker FROM model_list WHERE model = 'fiat'))","SELECT c.countryid, c.countryname FROM countries AS c JOIN car_makers AS cm ON c.countryid = cm.country JOIN (     SELECT maker, COUNT(*) as car_makers_count     FROM car_makers     GROUP BY maker     HAVING COUNT(*) > 3 OR EXISTS (         SELECT 1         FROM model_list AS ml         WHERE ml.maker = car_makers.maker AND ml.model = 'fiat'     ) ) AS subquery ON subquery.maker = cm.maker GROUP BY c.countryid, c.countryname"
17,918,Which states have both owners and professionals living there?,dog_kennels,hard,SELECT state FROM Owners INTERSECT SELECT state FROM Professionals,7,"SELECT DISTINCT owners.state  FROM owners  INNER JOIN professionals ON owners.state = professionals.state
SELECT DISTINCT owners.state  FROM owners  INNER JOIN professionals ON owners.state = professionals.state
SELECT DISTINCT owners.state  FROM owners  INNER JOIN professionals ON owners.state = professionals.state
SELECT DISTINCT owners.state  FROM owners  INNER JOIN professionals ON owners.state = professionals.state
SELECT DISTINCT o.state  FROM owners o  JOIN professionals p ON o.state = p.state
SELECT DISTINCT owners.state  FROM owners  INNER JOIN professionals ON owners.state = professionals.state
SELECT DISTINCT o.state  FROM owners o JOIN professionals p ON o.state = p.state",SELECT DISTINCT owners.state  FROM owners  INNER JOIN professionals ON owners.state = professionals.state
18,103,Which distinct car models are the produced after 1980?,car_1,hard,SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;,7,"SELECT DISTINCT model FROM model_list  JOIN car_names ON model_list.modelid = car_names.makeid  JOIN cars_data ON car_names.makeid = cars_data.id  WHERE cars_data.year > 1980
SELECT DISTINCT model FROM model_list  JOIN car_names ON model_list.modelid = car_names.makeid  JOIN cars_data ON car_names.makeid = cars_data.id  WHERE cars_data.year > 1980
SELECT DISTINCT model FROM model_list  JOIN car_names ON model_list.modelid = car_names.makeid  JOIN cars_data ON car_names.makeid = cars_data.id  WHERE cars_data.year > 1980
SELECT DISTINCT model FROM model_list  JOIN car_names ON model_list.modelid = car_names.makeid  JOIN cars_data ON car_names.makeid = cars_data.id  WHERE cars_data.year > 1980
SELECT DISTINCT model FROM model_list  JOIN car_names ON model_list.modelid = car_names.makeid  JOIN cars_data ON car_names.makeid = cars_data.id  WHERE cars_data.year > 1980
SELECT DISTINCT model FROM model_list  JOIN car_names ON model_list.modelid = car_names.makeid  JOIN cars_data ON car_names.makeid = cars_data.id  WHERE cars_data.year > 1980
SELECT DISTINCT model FROM model_list  JOIN car_names ON model_list.modelid = car_names.makeid  JOIN cars_data ON car_names.makeid = cars_data.id  WHERE cars_data.year > 1980",SELECT DISTINCT model FROM model_list  JOIN car_names ON model_list.modelid = car_names.makeid  JOIN cars_data ON car_names.makeid = cars_data.id  WHERE cars_data.year > 1980
19,307,How many documents are using the template with type code 'PPT'?,cre_Doc_Template_Mgt,medium,SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT',7,"SELECT COUNT(documents.document_id)  FROM documents  INNER JOIN templates ON documents.template_id = templates.template_id  WHERE templates.template_type_code = 'PPT'
SELECT COUNT(documents.document_id)  FROM documents  INNER JOIN templates ON documents.template_id = templates.template_id  WHERE templates.template_type_code = 'PPT'
SELECT COUNT(documents.document_id)  FROM documents  INNER JOIN templates ON documents.template_id = templates.template_id  WHERE templates.template_type_code = 'PPT'
SELECT COUNT(documents.document_id)  FROM documents  INNER JOIN templates ON documents.template_id = templates.template_id  WHERE templates.template_type_code = 'PPT'
SELECT COUNT(documents.document_id)  FROM documents  INNER JOIN templates ON documents.template_id = templates.template_id  WHERE templates.template_type_code = 'PPT'
SELECT COUNT(*) FROM documents  INNER JOIN templates ON documents.template_id = templates.template_id  WHERE templates.template_type_code = 'PPT'
SELECT COUNT(documents.document_id)  FROM documents  INNER JOIN templates ON documents.template_id = templates.template_id  WHERE templates.template_type_code = 'PPT'",SELECT COUNT(documents.document_id)  FROM documents  INNER JOIN templates ON documents.template_id = templates.template_id  WHERE templates.template_type_code = 'PPT'
20,99,Find the name of the makers that produced some cars in the year of 1970?,car_1,extra,SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';,7,"SELECT car_makers.maker  FROM car_makers  INNER JOIN model_list ON car_makers.id = model_list.maker  INNER JOIN car_names ON model_list.modelid = car_names.model  INNER JOIN cars_data ON car_names.makeid = cars_data.id  WHERE cars_data.year = 1970
SELECT DISTINCT car_makers.maker FROM car_makers INNER JOIN model_list ON car_makers.id = model_list.maker INNER JOIN car_names ON model_list.modelid = car_names.model INNER JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.year = 1970
SELECT DISTINCT car_makers.maker  FROM car_makers  INNER JOIN model_list ON car_makers.id = model_list.maker  INNER JOIN car_names ON model_list.modelid = car_names.model  INNER JOIN cars_data ON car_names.makeid = cars_data.id  WHERE cars_data.year = 1970
SELECT DISTINCT car_makers.maker  FROM car_makers  INNER JOIN model_list ON car_makers.id = model_list.maker  INNER JOIN car_names ON model_list.modelid = car_names.model  INNER JOIN cars_data ON car_names.makeid = cars_data.id  WHERE cars_data.year = 1970
SELECT DISTINCT car_makers.maker  FROM car_makers  JOIN model_list ON car_makers.id = model_list.maker  JOIN car_names ON model_list.modelid = car_names.model  JOIN cars_data ON car_names.makeid = cars_data.id  WHERE cars_data.year = 1970
SELECT DISTINCT car_makers.maker  FROM car_makers  JOIN model_list ON car_makers.id = model_list.maker  JOIN car_names ON model_list.modelid = car_names.model  JOIN cars_data ON car_names.makeid = cars_data.id  WHERE cars_data.year = 1970
SELECT car_makers.maker  FROM car_makers  INNER JOIN model_list ON car_makers.id = model_list.maker  INNER JOIN car_names ON model_list.modelid = car_names.model  INNER JOIN cars_data ON car_names.makeid = cars_data.id  WHERE cars_data.year = 1970",SELECT car_makers.maker  FROM car_makers  INNER JOIN model_list ON car_makers.id = model_list.maker  INNER JOIN car_names ON model_list.modelid = car_names.model  INNER JOIN cars_data ON car_names.makeid = cars_data.id  WHERE cars_data.year = 1970
21,265,Which cities do more than one employee under age 30 come from?,employee_hire_evaluation,medium,SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1,7,"SELECT city FROM employee WHERE age < 30 GROUP BY city HAVING COUNT(employee_id) > 1
SELECT city FROM employee WHERE age < 30 GROUP BY city HAVING COUNT(employee_id) > 1
SELECT city  FROM employee  WHERE age < 30  GROUP BY city  HAVING COUNT(employee_id) > 1
SELECT city FROM employee WHERE age < 30 GROUP BY city HAVING COUNT(employee_id) > 1
SELECT city FROM employee WHERE age < 30 GROUP BY city HAVING COUNT(employee_id) > 1
SELECT city  FROM employee  WHERE age < 30  GROUP BY city  HAVING COUNT(employee_id) > 1
SELECT city FROM employee WHERE age < 30 GROUP BY city HAVING COUNT(employee_id) > 1",SELECT city FROM employee WHERE age < 30 GROUP BY city HAVING COUNT(employee_id) > 1
22,335,What the smallest version number and its template type code?,cre_Doc_Template_Mgt,medium,"SELECT min(Version_Number) ,  template_type_code FROM Templates",7,"SELECT MIN(version_number), template_type_code  FROM templates  JOIN ref_template_types  ON templates.template_type_code = ref_template_types.template_type_code
SELECT MIN(version_number), template_type_code  FROM templates  INNER JOIN ref_template_types  ON templates.template_type_code = ref_template_types.template_type_code
SELECT MIN(version_number), template_type_code  FROM templates  INNER JOIN ref_template_types  ON templates.template_type_code = ref_template_types.template_type_code
SELECT MIN(version_number), template_type_code  FROM templates  JOIN ref_template_types  ON templates.template_type_code = ref_template_types.template_type_code
SELECT MIN(version_number), template_type_code  FROM templates  JOIN ref_template_types  ON templates.template_type_code = ref_template_types.template_type_code
SELECT MIN(version_number), template_type_code  FROM templates  JOIN ref_template_types  ON templates.template_type_code = ref_template_types.template_type_code
SELECT MIN(version_number), template_type_code  FROM templates  JOIN ref_template_types  ON templates.template_type_code = ref_template_types.template_type_code","SELECT MIN(version_number), template_type_code  FROM templates  JOIN ref_template_types  ON templates.template_type_code = ref_template_types.template_type_code"
23,263,What is the number of employees from each city?,employee_hire_evaluation,medium,"SELECT count(*) ,  city FROM employee GROUP BY city",7,"SELECT city, COUNT(employee_id) FROM employee GROUP BY city
SELECT city, COUNT(employee_id) as Number_of_Employees FROM employee GROUP BY city
SELECT city, COUNT(employee_id) as Number_of_Employees FROM employee GROUP BY city
SELECT city, COUNT(employee_id) as Number_of_Employees FROM employee GROUP BY city
SELECT city, COUNT(employee_id) as Number_of_Employees FROM employee GROUP BY city
SELECT city, COUNT(employee_id) as Number_of_Employees FROM employee GROUP BY city
SELECT city, COUNT(employee_id) FROM employee GROUP BY city","SELECT city, COUNT(employee_id) as Number_of_Employees FROM employee GROUP BY city"
24,115,How many car models are produced in the usa?,car_1,hard,SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';,7,"SELECT COUNT(DISTINCT model)  FROM car_names  INNER JOIN countries ON car_names.makeid = countries.countryid  WHERE countries.countryname = 'USA'
SELECT COUNT(DISTINCT model)  FROM car_names  INNER JOIN countries ON car_names.makeid = countries.countryid  WHERE countries.countryname = 'USA'
SELECT COUNT(DISTINCT model)  FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  JOIN countries ON car_makers.country = countries.countryid  WHERE countries.countryname = 'USA'
SELECT COUNT(DISTINCT model)  FROM car_names  INNER JOIN countries ON car_names.makeid = countries.countryid  WHERE countries.countryname = 'USA'
SELECT COUNT(DISTINCT model)  FROM car_names  INNER JOIN countries ON car_names.makeid = countries.countryid  WHERE countries.countryname = 'USA'
SELECT COUNT(DISTINCT model)  FROM car_names  INNER JOIN countries ON car_names.makeid = countries.countryid  WHERE countries.countryname = 'USA'
SELECT COUNT(DISTINCT model)  FROM car_names  INNER JOIN countries ON car_names.makeid = countries.countryid  WHERE countries.countryname = 'USA'",SELECT COUNT(DISTINCT model)  FROM car_names  INNER JOIN countries ON car_names.makeid = countries.countryid  WHERE countries.countryname = 'USA'
25,332,Return the type code of the template type that the most templates belong to.,cre_Doc_Template_Mgt,hard,SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1,7,"SELECT templates.template_type_code  FROM templates  GROUP BY templates.template_type_code  ORDER BY COUNT(templates.template_type_code) DESC  LIMIT 1
SELECT templates.template_type_code  FROM templates  GROUP BY templates.template_type_code  ORDER BY COUNT(templates.template_type_code) DESC  LIMIT 1
SELECT templates.template_type_code  FROM templates  GROUP BY templates.template_type_code  ORDER BY COUNT(templates.template_type_code) DESC  LIMIT 1
SELECT templates.template_type_code  FROM templates  GROUP BY templates.template_type_code  ORDER BY COUNT(templates.template_type_code) DESC  LIMIT 1
SELECT templates.template_type_code  FROM templates  GROUP BY templates.template_type_code  ORDER BY COUNT(templates.template_type_code) DESC  LIMIT 1
SELECT templates.template_type_code  FROM templates  GROUP BY templates.template_type_code  ORDER BY COUNT(templates.template_type_code) DESC  LIMIT 1
SELECT templates.template_type_code  FROM templates  GROUP BY templates.template_type_code  ORDER BY COUNT(templates.template_type_code) DESC  LIMIT 1",SELECT templates.template_type_code  FROM templates  GROUP BY templates.template_type_code  ORDER BY COUNT(templates.template_type_code) DESC  LIMIT 1
26,180,What country is Jetblue Airways affiliated with?,flight_2,easy,"SELECT Country FROM AIRLINES WHERE Airline  =  ""JetBlue Airways""",7,"SELECT country FROM airlines WHERE airline = 'Jetblue Airways'
SELECT country FROM airlines WHERE airline = ""Jetblue Airways""
SELECT country FROM airlines WHERE airline = 'Jetblue Airways'
SELECT country FROM airlines WHERE airline = 'Jetblue Airways'
SELECT country FROM airlines WHERE airline = 'Jetblue Airways'
SELECT country FROM airlines WHERE airline = 'Jetblue Airways'
SELECT country FROM airlines WHERE airline = 'Jetblue Airways'",SELECT country FROM airlines WHERE airline = 'Jetblue Airways'
27,108,What is the name of the country with the most car makers?,car_1,extra,SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;,7,"SELECT c.countryname, COUNT(cm.maker) AS car_makers FROM countries AS c JOIN car_makers AS cm ON c.countryid = cm.country GROUP BY c.countryname ORDER BY car_makers DESC LIMIT 1
SELECT c.countryname, COUNT(cm.maker) AS car_makers FROM countries AS c JOIN car_makers AS cm ON c.countryid = cm.country GROUP BY c.countryname ORDER BY car_makers DESC LIMIT 1
SELECT c.countryname, COUNT(cm.maker) AS car_makers FROM countries AS c JOIN car_makers AS cm ON c.countryid = cm.country GROUP BY c.countryname ORDER BY car_makers DESC LIMIT 1
SELECT c.countryname, COUNT(cm.maker) AS car_makers FROM countries AS c JOIN car_makers AS cm ON c.countryid = cm.country GROUP BY c.countryname ORDER BY car_makers DESC LIMIT 1
SELECT c.countryname, COUNT(cm.maker) AS car_makers FROM countries AS c JOIN car_makers AS cm ON c.countryid = cm.country GROUP BY c.countryname ORDER BY car_makers DESC LIMIT 1
SELECT c.countryname, COUNT(cm.maker) AS car_makers FROM countries AS c JOIN car_makers AS cm ON c.countryid = cm.country GROUP BY c.countryname ORDER BY car_makers DESC LIMIT 1
SELECT c.countryname, COUNT(cm.maker) AS car_makers FROM countries AS c JOIN car_makers AS cm ON c.countryid = cm.country GROUP BY c.countryname ORDER BY car_makers DESC LIMIT 1","SELECT c.countryname, COUNT(cm.maker) AS car_makers FROM countries AS c JOIN car_makers AS cm ON c.countryid = cm.country GROUP BY c.countryname ORDER BY car_makers DESC LIMIT 1"
28,286,Which shops run with no employees? Find the shop names,employee_hire_evaluation,hard,SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring),7,"SELECT shop.name  FROM shop  LEFT JOIN hiring ON shop.shop_id = hiring.shop_id  WHERE hiring.employee_id IS NULL
SELECT shop.name  FROM shop  LEFT JOIN hiring ON shop.shop_id = hiring.shop_id  WHERE hiring.employee_id IS NULL
SELECT shop.name  FROM shop  LEFT JOIN hiring ON shop.shop_id = hiring.shop_id  WHERE hiring.employee_id IS NULL
SELECT shop.name  FROM shop  LEFT JOIN hiring ON shop.shop_id = hiring.shop_id  WHERE hiring.employee_id IS NULL
SELECT shop.name  FROM shop  LEFT JOIN hiring ON shop.shop_id = hiring.shop_id  WHERE hiring.employee_id IS NULL
SELECT shop.name  FROM shop  LEFT JOIN hiring ON shop.shop_id = hiring.shop_id  WHERE hiring.employee_id IS NULL
SELECT shop.name  FROM shop  LEFT JOIN hiring ON shop.shop_id = hiring.shop_id  WHERE hiring.employee_id IS NULL",SELECT shop.name  FROM shop  LEFT JOIN hiring ON shop.shop_id = hiring.shop_id  WHERE hiring.employee_id IS NULL
29,741,Give the name of the nation that uses the greatest amount of languages.,world_1,extra,SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1,7,"SELECT country.name, COUNT(countrylanguage.language) AS language_count FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY countrylanguage.countrycode ORDER BY language_count DESC LIMIT 1
SELECT country.name, COUNT(countrylanguage.language) AS language_count FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY countrylanguage.countrycode ORDER BY language_count DESC LIMIT 1
SELECT country.name, COUNT(countrylanguage.language) AS language_count FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY countrylanguage.countrycode ORDER BY language_count DESC LIMIT 1
SELECT c.name, COUNT(cl.language) AS language_count FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode GROUP BY c.code ORDER BY language_count DESC LIMIT 1
SELECT country.name, COUNT(countrylanguage.language) AS language_count FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY countrylanguage.countrycode ORDER BY language_count DESC LIMIT 1
SELECT country.name, COUNT(countrylanguage.language) AS language_count FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY countrylanguage.countrycode ORDER BY language_count DESC LIMIT 1
SELECT country.name, COUNT(countrylanguage.language) AS language_count FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY countrylanguage.countrycode ORDER BY language_count DESC LIMIT 1","SELECT country.name, COUNT(countrylanguage.language) AS language_count FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY countrylanguage.countrycode ORDER BY language_count DESC LIMIT 1"
30,762,"Find the name, population and expected life length of asian country with the largest area?",world_1,hard,"SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  ""Asia"" ORDER BY SurfaceArea DESC LIMIT 1",7,"SELECT c.name, c.population, c.lifeexpectancy  FROM country c  WHERE c.continent = 'Asia'  ORDER BY c.surfacearea DESC  LIMIT 1
SELECT c.name, c.population, c.lifeexpectancy  FROM country c  WHERE c.continent = 'Asia'  ORDER BY c.surfacearea DESC  LIMIT 1
SELECT c.name, c.population, c.lifeexpectancy  FROM country c  WHERE c.continent = 'Asia'  ORDER BY c.surfacearea DESC  LIMIT 1
SELECT c.name, c.population, c.lifeexpectancy  FROM country c  WHERE c.continent = 'Asia'  ORDER BY c.surfacearea DESC  LIMIT 1
SELECT c.name, c.population, c.lifeexpectancy  FROM country c  WHERE c.continent = 'Asia'  ORDER BY c.surfacearea DESC  LIMIT 1
SELECT c.name, c.population, c.lifeexpectancy  FROM country c  WHERE c.continent = 'Asia'  ORDER BY c.surfacearea DESC  LIMIT 1
SELECT c.name, c.population, c.lifeexpectancy  FROM country c  WHERE c.continent = 'Asia'  ORDER BY c.surfacearea DESC  LIMIT 1","SELECT c.name, c.population, c.lifeexpectancy  FROM country c  WHERE c.continent = 'Asia'  ORDER BY c.surfacearea DESC  LIMIT 1"
31,515,Which department offers the most number of degrees? List department name and id.,student_transcripts_tracking,extra,"SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT d.department_id, d.department_name, COUNT(dp.degree_program_id) AS degree_count
SELECT d.department_id, d.department_name, COUNT(dp.degree_program_id) AS degree_count
SELECT d.department_id, d.department_name, COUNT(dp.degree_program_id) AS degree_count
SELECT d.department_id, d.department_name, COUNT(dp.degree_program_id) AS degree_count
SELECT d.department_id, d.department_name, COUNT(dp.degree_program_id) AS degree_count
SELECT d.department_id, d.department_name, COUNT(dp.degree_program_id) AS degree_count
SELECT d.department_id, d.department_name, COUNT(dp.degree_program_id) AS degree_count","SELECT d.department_id, d.department_name, COUNT(dp.degree_program_id) AS degree_count"
32,326,Count the number of templates of the type CV.,cre_Doc_Template_Mgt,easy,"SELECT count(*) FROM Templates WHERE template_type_code  =  ""CV""",7,"SELECT COUNT(*)  FROM templates  INNER JOIN ref_template_types  ON templates.template_type_code = ref_template_types.template_type_code  WHERE ref_template_types.template_type_description = 'CV'
SELECT COUNT(*)  FROM templates  INNER JOIN ref_template_types  ON templates.template_type_code = ref_template_types.template_type_code  WHERE ref_template_types.template_type_description = 'CV'
SELECT COUNT(*)  FROM templates  INNER JOIN ref_template_types  ON templates.template_type_code = ref_template_types.template_type_code  WHERE ref_template_types.template_type_description = 'CV'
SELECT COUNT(*)  FROM templates  INNER JOIN ref_template_types  ON templates.template_type_code = ref_template_types.template_type_code  WHERE ref_template_types.template_type_description = 'CV'
SELECT COUNT(*) FROM templates INNER JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE ref_template_types.template_type_description = 'CV'
SELECT COUNT(*)  FROM templates  INNER JOIN ref_template_types  ON templates.template_type_code = ref_template_types.template_type_code  WHERE ref_template_types.template_type_description = 'CV'
SELECT COUNT(*)  FROM templates  INNER JOIN ref_template_types  ON templates.template_type_code = ref_template_types.template_type_code  WHERE ref_template_types.template_type_description = 'CV'",SELECT COUNT(*)  FROM templates  INNER JOIN ref_template_types  ON templates.template_type_code = ref_template_types.template_type_code  WHERE ref_template_types.template_type_description = 'CV'
33,362,What are the details for the paragraph that includes the text 'Korea ' ?,cre_Doc_Template_Mgt,medium,select other_details from paragraphs where paragraph_text like 'korea',7,"SELECT paragraphs.paragraph_id, paragraphs.paragraph_text, paragraphs.other_details  FROM paragraphs  INNER JOIN documents ON paragraphs.document_id = documents.document_id  INNER JOIN templates ON documents.template_id = templates.template_id  INNER JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code  WHERE paragraphs.paragraph_text LIKE '%Korea%'
SELECT paragraphs.paragraph_id, paragraphs.document_id, paragraphs.paragraph_text, paragraphs.other_details  FROM paragraphs  INNER JOIN documents ON paragraphs.document_id = documents.document_id  INNER JOIN templates ON documents.template_id = templates.template_id  INNER JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code  WHERE paragraphs.paragraph_text LIKE '%Korea%'
SELECT paragraphs.paragraph_id, paragraphs.paragraph_text, paragraphs.other_details  FROM paragraphs  INNER JOIN documents ON paragraphs.document_id = documents.document_id  INNER JOIN templates ON documents.template_id = templates.template_id  INNER JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code  WHERE paragraphs.paragraph_text LIKE '%Korea%'
SELECT paragraphs.paragraph_id, paragraphs.document_id, paragraphs.paragraph_text, paragraphs.other_details  FROM paragraphs  INNER JOIN documents ON paragraphs.document_id = documents.document_id  INNER JOIN templates ON documents.template_id = templates.template_id  INNER JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code  WHERE paragraphs.paragraph_text LIKE '%Korea%'
SELECT paragraphs.paragraph_id, paragraphs.document_id, paragraphs.paragraph_text, paragraphs.other_details  FROM paragraphs  INNER JOIN documents ON paragraphs.document_id = documents.document_id  INNER JOIN templates ON documents.template_id = templates.template_id  INNER JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code  WHERE paragraphs.paragraph_text LIKE '%Korea%'
SELECT paragraphs.paragraph_id, paragraphs.paragraph_text, paragraphs.other_details FROM paragraphs INNER JOIN documents ON paragraphs.document_id = documents.document_id INNER JOIN templates ON documents.template_id = templates.template_id INNER JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE paragraphs.paragraph_text LIKE '%Korea%'
SELECT paragraphs.paragraph_id, paragraphs.document_id, paragraphs.paragraph_text, paragraphs.other_details  FROM paragraphs  INNER JOIN documents ON paragraphs.document_id = documents.document_id  INNER JOIN templates ON documents.template_id = templates.template_id  INNER JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code  WHERE paragraphs.paragraph_text LIKE '%Korea%'","SELECT paragraphs.paragraph_id, paragraphs.document_id, paragraphs.paragraph_text, paragraphs.other_details  FROM paragraphs  INNER JOIN documents ON paragraphs.document_id = documents.document_id  INNER JOIN templates ON documents.template_id = templates.template_id  INNER JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code  WHERE paragraphs.paragraph_text LIKE '%Korea%'"
34,709,What is the continent name which Anguilla belongs to?,world_1,easy,"SELECT Continent FROM country WHERE Name  =  ""Anguilla""",7,"SELECT continent FROM country WHERE code = (SELECT countrycode FROM city WHERE name = 'Anguilla')
SELECT continent FROM country WHERE code = (SELECT countrycode FROM city WHERE name = 'Anguilla')
SELECT continent FROM country WHERE code IN (SELECT countrycode FROM city WHERE name = 'Anguilla')
SELECT continent  FROM country  WHERE code IN (SELECT countrycode FROM city WHERE name = 'Anguilla')
SELECT continent  FROM country  WHERE code IN (SELECT countrycode FROM city WHERE name = 'Anguilla')
SELECT continent FROM country WHERE code = (SELECT countrycode FROM city WHERE name = 'Anguilla')
SELECT continent FROM country WHERE code = (SELECT countrycode FROM city WHERE name = 'Anguilla')",SELECT continent FROM country WHERE code = (SELECT countrycode FROM city WHERE name = 'Anguilla')
35,138,What is the average edispl for all volvos?,car_1,medium,SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';,7,"SELECT AVG(edispl)  FROM cars_data  INNER JOIN car_names ON cars_data.id = car_names.makeid  INNER JOIN model_list ON car_names.model = model_list.modelid  INNER JOIN car_makers ON model_list.maker = car_makers.id  INNER JOIN countries ON car_makers.country = countries.countryid  WHERE car_makers.maker = 'volvo' AND countries.continent = 'contid'
SELECT AVG(edispl)  FROM cars_data  INNER JOIN car_names ON cars_data.id = car_names.makeid  INNER JOIN model_list ON car_names.model = model_list.modelid  INNER JOIN car_makers ON model_list.maker = car_makers.id  INNER JOIN countries ON car_makers.country = countries.countryid  WHERE car_makers.maker = 'volvo' AND countries.continent = 'contid'
SELECT AVG(edispl)  FROM cars_data  INNER JOIN car_names ON cars_data.id = car_names.makeid  INNER JOIN model_list ON car_names.model = model_list.modelid  INNER JOIN car_makers ON model_list.maker = car_makers.id  INNER JOIN countries ON car_makers.country = countries.countryid  WHERE car_makers.maker = 'volvo' AND countries.continent = 'contid'
SELECT AVG(edispl)  FROM cars_data  INNER JOIN car_names ON cars_data.id = car_names.makeid  INNER JOIN model_list ON car_names.model = model_list.modelid  INNER JOIN car_makers ON model_list.maker = car_makers.id  INNER JOIN countries ON car_makers.country = countries.countryid  WHERE car_makers.maker = 'volvo' AND countries.continent = 'contid'
SELECT AVG(edispl)  FROM cars_data  INNER JOIN car_names ON cars_data.id = car_names.makeid  INNER JOIN model_list ON car_names.model = model_list.modelid  INNER JOIN car_makers ON model_list.maker = car_makers.id  INNER JOIN countries ON car_makers.country = countries.countryid  WHERE car_makers.maker = 'volvo' AND countries.continent = 'contid'
SELECT AVG(edispl)  FROM cars_data  INNER JOIN car_names ON cars_data.id = car_names.makeid  INNER JOIN model_list ON car_names.model = model_list.modelid  INNER JOIN car_makers ON model_list.maker = car_makers.id  INNER JOIN countries ON car_makers.country = countries.countryid  WHERE car_makers.maker = 'volvo' AND countries.continent = 'contid'
SELECT AVG(edispl)  FROM cars_data  INNER JOIN car_names ON cars_data.id = car_names.makeid  INNER JOIN model_list ON car_names.model = model_list.modelid  INNER JOIN car_makers ON model_list.maker = car_makers.id  INNER JOIN countries ON car_makers.country = countries.countryid  WHERE car_makers.maker = 'volvo' AND countries.continent = 'contid'",SELECT AVG(edispl)  FROM cars_data  INNER JOIN car_names ON cars_data.id = car_names.makeid  INNER JOIN model_list ON car_names.model = model_list.modelid  INNER JOIN car_makers ON model_list.maker = car_makers.id  INNER JOIN countries ON car_makers.country = countries.countryid  WHERE car_makers.maker = 'volvo' AND countries.continent = 'contid'
36,531,What is the description of the department whose name has the substring the computer?,student_transcripts_tracking,medium,SELECT department_description FROM Departments WHERE department_name LIKE '%computer%',7,"SELECT department_description  FROM departments  WHERE department_name LIKE '%computer%'
SELECT department_description FROM departments WHERE department_name LIKE '%computer%'
SELECT department_description FROM departments WHERE department_name LIKE '%computer%'
SELECT department_description  FROM departments  WHERE department_name LIKE '%computer%'
SELECT department_description  FROM departments  WHERE department_name LIKE '%computer%'
SELECT department_description  FROM departments  WHERE department_name LIKE '%computer%'
SELECT department_description FROM departments WHERE department_name LIKE '%computer%'",SELECT department_description  FROM departments  WHERE department_name LIKE '%computer%'
37,478,What are the codes of countries with more than 50 players?,wta_1,easy,SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50,7,"SELECT country_code  FROM players  GROUP BY country_code  HAVING COUNT(player_id) > 50
SELECT country_code  FROM players  GROUP BY country_code  HAVING COUNT(player_id) > 50
SELECT country_code  FROM players  GROUP BY country_code  HAVING COUNT(player_id) > 50
SELECT country_code  FROM players  GROUP BY country_code  HAVING COUNT(player_id) > 50
SELECT country_code  FROM players  GROUP BY country_code  HAVING COUNT(player_id) > 50
SELECT country_code  FROM players  GROUP BY country_code  HAVING COUNT(player_id) > 50
SELECT country_code  FROM players  GROUP BY country_code  HAVING COUNT(player_id) > 50",SELECT country_code  FROM players  GROUP BY country_code  HAVING COUNT(player_id) > 50
38,984,"List the dog name, age and weight of the dogs who have been abandoned? 1 stands for yes, and 0 stands for no.",dog_kennels,medium,"SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1",7,"SELECT dogs.name, dogs.age, dogs.weight  FROM dogs  WHERE dogs.abandoned_yn = 1
SELECT dogs.name, dogs.age, dogs.weight  FROM dogs  WHERE dogs.abandoned_yn = 1
SELECT dogs.name, dogs.age, dogs.weight  FROM dogs  WHERE dogs.abandoned_yn = 1
SELECT name, age, weight  FROM dogs  WHERE abandoned_yn = 1
SELECT dogs.name, dogs.age, dogs.weight  FROM dogs  WHERE dogs.abandoned_yn = 1
SELECT dogs.name, dogs.age, dogs.weight  FROM dogs  WHERE dogs.abandoned_yn = 1
SELECT dogs.name, dogs.age, dogs.weight  FROM dogs  WHERE dogs.abandoned_yn = 1","SELECT dogs.name, dogs.age, dogs.weight  FROM dogs  WHERE dogs.abandoned_yn = 1"
39,509,How many courses in total are listed?,student_transcripts_tracking,easy,SELECT count(*) FROM Courses,7,"SELECT COUNT(*) FROM courses
SELECT COUNT(*) FROM courses
SELECT COUNT(*) FROM courses
SELECT COUNT(*) FROM courses
SELECT COUNT(*) FROM courses
SELECT COUNT(*) FROM courses
SELECT COUNT(*) FROM courses",SELECT COUNT(*) FROM courses
40,764,What is average life expectancy in the countries where English is not the official language?,world_1,extra,"SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND T2.IsOfficial  =  ""T"")",7,"SELECT AVG(country.lifeexpectancy) FROM country INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English' AND countrylanguage.isofficial = 'f'
SELECT AVG(country.lifeexpectancy)  FROM country  INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language = 'English' AND countrylanguage.isofficial = 0
SELECT AVG(country.lifeexpectancy) FROM country INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English' AND countrylanguage.isofficial = 'f'
SELECT AVG(country.lifeexpectancy)  FROM country  INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language = 'English' AND countrylanguage.isofficial = 0
SELECT AVG(country.lifeexpectancy)  FROM country  INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language = 'English' AND countrylanguage.isofficial = 0
SELECT AVG(country.lifeexpectancy)  FROM country  INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language = 'English' AND countrylanguage.isofficial = 0
SELECT AVG(country.lifeexpectancy)  FROM country  INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language = 'English' AND countrylanguage.isofficial = 0",SELECT AVG(country.lifeexpectancy)  FROM country  INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language = 'English' AND countrylanguage.isofficial = 0
41,898,Show the ids of high schoolers who have friends and are also liked by someone else.,network_1,hard,SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes,7,"SELECT h.id  FROM highschooler h  JOIN friend f ON h.id = f.student_id  JOIN likes l ON h.id = l.student_id  WHERE h.grade >= 9 AND h.grade <= 12
SELECT highschooler.id  FROM highschooler  INNER JOIN friend ON highschooler.id = friend.student_id  INNER JOIN likes ON highschooler.id = likes.student_id  WHERE highschooler.grade >= 9 AND highschooler.grade <= 12
SELECT highschooler.id  FROM highschooler  INNER JOIN friend ON highschooler.id = friend.student_id  INNER JOIN likes ON highschooler.id = likes.liked_id  WHERE highschooler.grade >= 9 AND highschooler.grade <= 12
SELECT h.id  FROM highschooler h  JOIN friend f ON h.id = f.student_id  JOIN likes l ON h.id = l.student_id  WHERE h.grade >= 9 AND h.grade <= 12
SELECT h.id  FROM highschooler h  JOIN friend f ON h.id = f.student_id  JOIN likes l ON h.id = l.student_id  WHERE h.grade >= 9 AND h.grade <= 12
SELECT highschooler.id  FROM highschooler  INNER JOIN friend ON highschooler.id = friend.student_id  INNER JOIN likes ON highschooler.id = likes.liked_id  WHERE highschooler.grade >= 9 AND highschooler.grade <= 12
SELECT h.id  FROM highschooler h  JOIN friend f ON h.id = f.student_id  JOIN likes l ON h.id = l.student_id  WHERE h.grade >= 9 AND h.grade <= 12",SELECT h.id  FROM highschooler h  JOIN friend f ON h.id = f.student_id  JOIN likes l ON h.id = l.student_id  WHERE h.grade >= 9 AND h.grade <= 12
42,627,Find the number of cartoons directed by each of the listed directors.,tvshow,medium,"SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by",7,"SELECT c.directed_by, COUNT(*) as number_of_cartoons FROM cartoon as c WHERE c.directed_by IN (     SELECT t.series_name     FROM tv_channel as t     WHERE t.content = 'cartoon' ) GROUP BY c.directed_by
SELECT c.directed_by, COUNT(*) as num_cartoons FROM cartoon c JOIN tv_series t ON c.id = t.id JOIN tv_channel ch ON t.channel = ch.id WHERE ch.content = 'cartoon' GROUP BY c.directed_by
SELECT c.directed_by, COUNT(*) as num_cartoons FROM cartoon as c WHERE c.directed_by IN (     SELECT t.series_name     FROM tv_channel as t     WHERE t.content = 'cartoon' ) GROUP BY c.directed_by
SELECT c.directed_by, COUNT(*) as number_of_cartoons FROM cartoon as c WHERE c.directed_by IN (SELECT t.series_name FROM tv_channel as t) GROUP BY c.directed_by
SELECT c.directed_by, COUNT(*) as num_cartoons FROM cartoon as c WHERE c.directed_by IN (     SELECT t.series_name     FROM tv_channel as t     WHERE t.content = 'cartoon' ) GROUP BY c.directed_by
SELECT c.directed_by, COUNT(*) as num_cartoons FROM cartoon c JOIN tv_channel tc ON c.channel = tc.id WHERE tc.content = 'cartoon' GROUP BY c.directed_by
SELECT c.directed_by, COUNT(*) as num_cartoons FROM cartoon as c WHERE c.directed_by IN (     SELECT t.series_name     FROM tv_channel as t     WHERE t.content = 'cartoon' ) GROUP BY c.directed_by","SELECT c.directed_by, COUNT(*) as num_cartoons FROM cartoon as c WHERE c.directed_by IN (     SELECT t.series_name     FROM tv_channel as t     WHERE t.content = 'cartoon' ) GROUP BY c.directed_by"
43,879,Return the grade that has the greatest number of high schoolers.,network_1,hard,SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1,7,"SELECT grade FROM highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1
SELECT grade FROM highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1
SELECT grade FROM highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1
SELECT grade FROM highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1
SELECT grade FROM highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1
SELECT grade FROM highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1
SELECT grade FROM highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1",SELECT grade FROM highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1
44,29,What are the names of the stadiums without any concerts?,concert_singer,hard,SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert),7,"SELECT stadium.name  FROM stadium  LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id  WHERE concert.stadium_id IS NULL
SELECT stadium.name  FROM stadium  LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id  WHERE concert.stadium_id IS NULL
SELECT stadium.name  FROM stadium  LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id  WHERE concert.stadium_id IS NULL
SELECT stadium.name  FROM stadium  LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id  WHERE concert.stadium_id IS NULL
SELECT stadium.name  FROM stadium  LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id  WHERE concert.stadium_id IS NULL
SELECT stadium.name  FROM stadium  LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id  WHERE concert.stadium_id IS NULL
SELECT stadium.name  FROM stadium  LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id  WHERE concert.stadium_id IS NULL",SELECT stadium.name  FROM stadium  LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id  WHERE concert.stadium_id IS NULL
45,88,What is the number of continents?,car_1,easy,SELECT count(*) FROM CONTINENTS;,7,"SELECT COUNT(DISTINCT continent) FROM countries
SELECT COUNT(DISTINCT continent) FROM countries
SELECT COUNT(DISTINCT continent) FROM countries
SELECT COUNT(DISTINCT continent) FROM countries
SELECT COUNT(DISTINCT continent) FROM countries
SELECT COUNT(DISTINCT continent) FROM countries
SELECT COUNT(DISTINCT continent) FROM countries",SELECT COUNT(DISTINCT continent) FROM countries
46,461,Find the year that has the most number of matches.,wta_1,hard,SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,7,"SELECT year, COUNT(*) as match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1
SELECT year, COUNT(*) as match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1
SELECT year, COUNT(*) as match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1
SELECT year, COUNT(*) as match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1
SELECT year, COUNT(*) as match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1
SELECT year, COUNT(*) as match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1
SELECT year, COUNT(*) as match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1","SELECT year, COUNT(*) as match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1"
47,954,List the names of the dogs of the rarest breed and the treatment dates of them.,dog_kennels,extra,"SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",7,"SELECT d.name, t.date_of_treatment FROM dogs d JOIN treatments t ON d.dog_id = t.dog_id WHERE d.breed_code = (     SELECT breed_code     FROM dogs     GROUP BY breed_code     ORDER BY COUNT(*)     LIMIT 1 ) ORDER BY t.date_of_treatment
SELECT d.name, t.date_of_treatment FROM dogs d JOIN treatments t ON d.dog_id = t.dog_id WHERE d.breed_code = (     SELECT breed_code     FROM dogs     GROUP BY breed_code     ORDER BY COUNT(*)     LIMIT 1 ) ORDER BY t.date_of_treatment
SELECT d.name, t.date_of_treatment FROM dogs d JOIN treatments t ON d.dog_id = t.dog_id WHERE d.breed_code = (     SELECT breed_code     FROM dogs     GROUP BY breed_code     ORDER BY COUNT(*)     LIMIT 1 ) ORDER BY t.date_of_treatment
SELECT d.name, t.date_of_treatment FROM dogs d JOIN treatments t ON d.dog_id = t.dog_id WHERE d.breed_code = (     SELECT breed_code     FROM dogs     GROUP BY breed_code     ORDER BY COUNT(*)     LIMIT 1 ) ORDER BY t.date_of_treatment
SELECT d.name, t.date_of_treatment FROM dogs d JOIN treatments t ON d.dog_id = t.dog_id WHERE d.breed_code = (     SELECT breed_code     FROM dogs     GROUP BY breed_code     ORDER BY COUNT(*)     LIMIT 1 ) ORDER BY t.date_of_treatment
SELECT d.name, t.date_of_treatment FROM dogs d JOIN treatments t ON d.dog_id = t.dog_id WHERE d.breed_code =      (SELECT breed_code      FROM dogs      GROUP BY breed_code      ORDER BY COUNT(*)      LIMIT 1) ORDER BY t.date_of_treatment
SELECT d.name, t.date_of_treatment FROM dogs d JOIN treatments t ON d.dog_id = t.dog_id WHERE d.breed_code = (     SELECT breed_code     FROM dogs     GROUP BY breed_code     ORDER BY COUNT(*)     LIMIT 1 ) ORDER BY t.date_of_treatment","SELECT d.name, t.date_of_treatment FROM dogs d JOIN treatments t ON d.dog_id = t.dog_id WHERE d.breed_code = (     SELECT breed_code     FROM dogs     GROUP BY breed_code     ORDER BY COUNT(*)     LIMIT 1 ) ORDER BY t.date_of_treatment"
48,90,"For each continent, list its id, name, and how many countries it has?",car_1,medium,"SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;",7,"SELECT c.contid, c.continent, COUNT(co.countryid) AS country_count FROM continents AS c LEFT JOIN countries AS co ON c.contid = co.continent GROUP BY c.contid, c.continent
SELECT c.contid, c.continent, COUNT(co.countryid) AS country_count FROM continents AS c LEFT JOIN countries AS co ON c.contid = co.continent GROUP BY c.contid, c.continent
SELECT c.contid, c.continent, COUNT(co.countryid) AS country_count FROM continents AS c LEFT JOIN countries AS co ON c.contid = co.continent GROUP BY c.contid
SELECT c.contid, c.continent, COUNT(co.countryid) AS country_count FROM continents AS c LEFT JOIN countries AS co ON c.contid = co.continent GROUP BY c.contid, c.continent
SELECT c.contid, c.continent, COUNT(co.countryid) as country_count FROM continents c LEFT JOIN countries co ON c.contid = co.continent GROUP BY c.contid, c.continent
SELECT c.contid, c.continent, COUNT(co.countryid) AS country_count FROM continents AS c LEFT JOIN countries AS co ON c.contid = co.continent GROUP BY c.contid, c.continent
SELECT c.contid, c.continent, COUNT(co.countryid) AS country_count FROM continents AS c LEFT JOIN countries AS co ON c.contid = co.continent GROUP BY c.contid, c.continent","SELECT c.contid, c.continent, COUNT(co.countryid) AS country_count FROM continents AS c LEFT JOIN countries AS co ON c.contid = co.continent GROUP BY c.contid, c.continent"
49,727,Give the total surface area covered by countries in Asia or Europe.,world_1,medium,"SELECT sum(SurfaceArea) FROM country WHERE Continent  =  ""Asia"" OR Continent  =  ""Europe""",7,"SELECT SUM(surfacearea) FROM country WHERE continent IN ('Asia', 'Europe')
SELECT SUM(surfacearea) FROM country WHERE continent IN ('Asia', 'Europe')
SELECT SUM(surfacearea) FROM country WHERE continent IN ('Asia', 'Europe')
SELECT SUM(surfacearea) FROM country WHERE continent IN ('Asia', 'Europe')
SELECT SUM(surfacearea) FROM country WHERE continent IN ('Asia', 'Europe')
SELECT SUM(surfacearea) FROM country WHERE continent IN ('Asia', 'Europe')
SELECT SUM(surfacearea) FROM country WHERE continent IN ('Asia', 'Europe')","SELECT SUM(surfacearea) FROM country WHERE continent IN ('Asia', 'Europe')"
50,676,Give the nationality that is most common across all people.,poker_player,hard,SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1,7,"SELECT people.nationality FROM people INNER JOIN poker_player ON people.people_id = poker_player.people_id GROUP BY people.nationality ORDER BY COUNT(*) DESC LIMIT 1
SELECT people.nationality FROM people INNER JOIN poker_player ON people.people_id = poker_player.people_id GROUP BY people.nationality ORDER BY COUNT(*) DESC LIMIT 1
SELECT people.nationality FROM people INNER JOIN poker_player ON people.people_id = poker_player.people_id GROUP BY people.nationality ORDER BY COUNT(*) DESC LIMIT 1
SELECT people.nationality FROM people INNER JOIN poker_player ON people.people_id = poker_player.people_id GROUP BY people.nationality ORDER BY COUNT(poker_player.people_id) DESC LIMIT 1
SELECT people.nationality FROM people INNER JOIN poker_player ON people.people_id = poker_player.people_id GROUP BY people.nationality ORDER BY COUNT(poker_player.people_id) DESC LIMIT 1
SELECT people.nationality FROM people INNER JOIN poker_player ON people.people_id = poker_player.people_id GROUP BY people.nationality ORDER BY COUNT(poker_player.people_id) DESC LIMIT 1
SELECT people.nationality FROM people INNER JOIN poker_player ON people.people_id = poker_player.people_id GROUP BY people.nationality ORDER BY COUNT(*) DESC LIMIT 1",SELECT people.nationality FROM people INNER JOIN poker_player ON people.people_id = poker_player.people_id GROUP BY people.nationality ORDER BY COUNT(*) DESC LIMIT 1
51,18,What is the name and capacity for the stadium with highest average attendance?,concert_singer,medium,"SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1",7,"SELECT s.name, s.capacity  FROM stadium AS s  WHERE s.average = (SELECT MAX(average) FROM stadium)
SELECT s.name, s.capacity  FROM stadium AS s  WHERE s.average = (SELECT MAX(average) FROM stadium) 
SELECT s.name, s.capacity  FROM stadium AS s  WHERE s.average = (SELECT MAX(average) FROM stadium) 
SELECT s.name, s.capacity  FROM stadium AS s  WHERE s.average = (SELECT MAX(average) FROM stadium) 
SELECT stadium.name, stadium.capacity FROM stadium WHERE stadium.average = (SELECT MAX(average) FROM stadium)
SELECT stadium.name, stadium.capacity FROM stadium WHERE stadium.average = (SELECT MAX(average) FROM stadium)
SELECT stadium.name, stadium.capacity FROM stadium WHERE stadium.average = (SELECT MAX(average) FROM stadium)","SELECT s.name, s.capacity  FROM stadium AS s  WHERE s.average = (SELECT MAX(average) FROM stadium) "
52,767,How many people live in countries that do not speak English?,world_1,extra,"SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"")",7,"SELECT COUNT(city.population)  FROM city  INNER JOIN country ON city.countrycode = country.code  LEFT JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language != 'English' OR countrylanguage.language IS NULL
SELECT COUNT(city.population)  FROM city  INNER JOIN country ON city.countrycode = country.code  LEFT JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language != 'English' OR countrylanguage.language IS NULL
SELECT COUNT(city.population)  FROM city  INNER JOIN country ON city.countrycode = country.code  LEFT JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language != 'English' OR countrylanguage.language IS NULL
SELECT COUNT(city.id)  FROM city  INNER JOIN country ON city.countrycode = country.code  LEFT JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language <> 'English' OR countrylanguage.language IS NULL
SELECT COUNT(city.id)  FROM city  INNER JOIN country ON city.countrycode = country.code  LEFT JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode  WHERE countrylanguage.language <> 'English' OR countrylanguage.language IS NULL
SELECT COUNT(city.population)  FROM city  INNER JOIN country ON city.countrycode = country.code  LEFT JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language != 'English' OR countrylanguage.language IS NULL
SELECT COUNT(city.population)  FROM city  INNER JOIN country ON city.countrycode = country.code  LEFT JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language <> 'English' OR countrylanguage.language IS NULL",SELECT COUNT(city.population)  FROM city  INNER JOIN country ON city.countrycode = country.code  LEFT JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language != 'English' OR countrylanguage.language IS NULL
53,490,How many players are there for each hand type?,wta_1,medium,"SELECT count(*) ,  hand FROM players GROUP BY hand",7,"SELECT hand, COUNT(*) as count FROM players GROUP BY hand
SELECT hand, COUNT(*) as count FROM players GROUP BY hand
SELECT hand, COUNT(*) as count FROM players GROUP BY hand
SELECT hand, COUNT(*) as count FROM players GROUP BY hand
SELECT hand, COUNT(*) as count FROM players GROUP BY hand
SELECT hand, COUNT(*) as count FROM players GROUP BY hand
SELECT hand, COUNT(*) as count FROM players GROUP BY hand","SELECT hand, COUNT(*) as count FROM players GROUP BY hand"
54,915,What is the average grade of students who have friends?,network_1,hard,SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id),7,"SELECT AVG(highschooler.grade) FROM highschooler INNER JOIN friend ON highschooler.id = friend.student_id WHERE highschooler.id IN (SELECT friend.friend_id FROM friend WHERE friend.student_id IN (SELECT highschooler.id FROM highschooler))
SELECT AVG(highschooler.grade) FROM highschooler INNER JOIN friend ON highschooler.id = friend.student_id WHERE highschooler.id IN (SELECT friend_id FROM friend GROUP BY friend_id HAVING COUNT(student_id) > 1)
SELECT AVG(highschooler.grade) FROM highschooler INNER JOIN friend ON highschooler.id = friend.student_id WHERE highschooler.id IN (SELECT friend_id FROM friend)
SELECT AVG(highschooler.grade) FROM highschooler INNER JOIN friend ON highschooler.id = friend.student_id WHERE highschooler.id IN (SELECT friend_id FROM friend)
SELECT AVG(highschooler.grade) FROM highschooler INNER JOIN friend ON highschooler.id = friend.student_id WHERE highschooler.id IN (SELECT friend_id FROM friend)
SELECT AVG(highschooler.grade) FROM highschooler INNER JOIN friend ON highschooler.id = friend.student_id WHERE highschooler.id IN (SELECT friend.friend_id FROM friend WHERE friend.student_id IN (SELECT highschooler.id FROM highschooler))
SELECT AVG(highschooler.grade) FROM highschooler INNER JOIN friend ON highschooler.id = friend.student_id WHERE highschooler.id IN (SELECT friend_id FROM friend)",SELECT AVG(highschooler.grade) FROM highschooler INNER JOIN friend ON highschooler.id = friend.student_id WHERE highschooler.id IN (SELECT friend_id FROM friend)
55,281,Find the names of employees who never won any award in the evaluation.,employee_hire_evaluation,hard,SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation),7,"SELECT employee.name  FROM employee  LEFT JOIN evaluation ON employee.employee_id = evaluation.employee_id  WHERE evaluation.employee_id IS NULL
SELECT employee.name  FROM employee  LEFT JOIN evaluation ON employee.employee_id = evaluation.employee_id  WHERE evaluation.employee_id IS NULL
SELECT employee.name  FROM employee  LEFT JOIN evaluation ON employee.employee_id = evaluation.employee_id  WHERE evaluation.employee_id IS NULL
SELECT employee.name  FROM employee  LEFT JOIN evaluation ON employee.employee_id = evaluation.employee_id  WHERE evaluation.employee_id IS NULL
SELECT employee.name  FROM employee  LEFT JOIN evaluation ON employee.employee_id = evaluation.employee_id  WHERE evaluation.employee_id IS NULL
SELECT employee.name  FROM employee  LEFT JOIN evaluation ON employee.employee_id = evaluation.employee_id  WHERE evaluation.employee_id IS NULL
SELECT employee.name  FROM employee  LEFT JOIN evaluation ON employee.employee_id = evaluation.employee_id  WHERE evaluation.employee_id IS NULL",SELECT employee.name  FROM employee  LEFT JOIN evaluation ON employee.employee_id = evaluation.employee_id  WHERE evaluation.employee_id IS NULL
56,931,"Return the owner id, first name and last name of the owner who has the most dogs.",dog_kennels,extra,"SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT owners.owner_id, owners.first_name, owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id GROUP BY owners.owner_id, owners.first_name, owners.last_name ORDER BY COUNT(dogs.dog_id) DESC LIMIT 1
SELECT owners.owner_id, owners.first_name, owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id GROUP BY owners.owner_id, owners.first_name, owners.last_name ORDER BY COUNT(dogs.dog_id) DESC LIMIT 1
SELECT owners.owner_id, owners.first_name, owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id GROUP BY owners.owner_id, owners.first_name, owners.last_name ORDER BY COUNT(dogs.dog_id) DESC LIMIT 1
SELECT owners.owner_id, owners.first_name, owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id GROUP BY owners.owner_id, owners.first_name, owners.last_name ORDER BY COUNT(dogs.dog_id) DESC LIMIT 1
SELECT owners.owner_id, owners.first_name, owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id GROUP BY owners.owner_id, owners.first_name, owners.last_name ORDER BY COUNT(dogs.dog_id) DESC LIMIT 1
SELECT owners.owner_id, owners.first_name, owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id GROUP BY owners.owner_id, owners.first_name, owners.last_name ORDER BY COUNT(dogs.dog_id) DESC LIMIT 1
SELECT owners.owner_id, owners.first_name, owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id GROUP BY owners.owner_id, owners.first_name, owners.last_name ORDER BY COUNT(dogs.dog_id) DESC LIMIT 1","SELECT owners.owner_id, owners.first_name, owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id GROUP BY owners.owner_id, owners.first_name, owners.last_name ORDER BY COUNT(dogs.dog_id) DESC LIMIT 1"
57,505,"Show names, results and bulgarian commanders of the battles with no ships lost in the 'English Channel'.",battle_death,extra,"SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'",7,"SELECT battle.name, battle.result, battle.bulgarian_commander FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON ship.id = death.caused_by_ship_id WHERE battle.location = 'English Channel' AND ship.disposition_of_ship = 'Lost' GROUP BY battle.name
SELECT battle.name, battle.result, battle.bulgarian_commander FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON ship.id = death.caused_by_ship_id WHERE battle.location = 'English Channel' AND ship.disposition_of_ship = 'Lost' GROUP BY battle.name
SELECT battle.name, battle.result, battle.bulgarian_commander FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON ship.id = death.caused_by_ship_id WHERE battle.location = 'English Channel' AND ship.disposition_of_ship = 'Lost' GROUP BY battle.name
SELECT battle.name, battle.result, battle.bulgarian_commander FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON ship.id = death.caused_by_ship_id WHERE battle.location = 'English Channel' AND ship.disposition_of_ship = 'Lost' GROUP BY battle.name
SELECT battle.name, battle.result, battle.bulgarian_commander FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON ship.id = death.caused_by_ship_id WHERE battle.location = 'English Channel' AND ship.disposition_of_ship = 'Lost' GROUP BY battle.name
SELECT battle.name, battle.result, battle.bulgarian_commander FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON ship.id = death.caused_by_ship_id WHERE battle.location = 'English Channel' AND ship.disposition_of_ship = 'Lost' GROUP BY battle.name
SELECT battle.name, battle.result, battle.bulgarian_commander FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON ship.id = death.caused_by_ship_id WHERE battle.location = 'English Channel' AND ship.disposition_of_ship = 'Lost' GROUP BY battle.name","SELECT battle.name, battle.result, battle.bulgarian_commander FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON ship.id = death.caused_by_ship_id WHERE battle.location = 'English Channel' AND ship.disposition_of_ship = 'Lost' GROUP BY battle.name"
58,766,What is the total number of people living in the nations that do not use English?,world_1,extra,"SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"")",7,"SELECT COUNT(*) FROM city INNER JOIN country ON city.countrycode = country.code INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language != 'English'
SELECT COUNT(*) FROM city INNER JOIN country ON city.countrycode = country.code INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language != 'English'
SELECT COUNT(c.population) FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode WHERE cl.language != 'English'
SELECT COUNT(*) FROM city INNER JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode WHERE countrylanguage.language != 'English'
SELECT COUNT(*) FROM city INNER JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode WHERE countrylanguage.language != 'English'
SELECT COUNT(*) FROM city INNER JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode WHERE countrylanguage.language != 'English'
SELECT COUNT(*) FROM city INNER JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode WHERE countrylanguage.language != 'English'",SELECT COUNT(*) FROM city INNER JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode WHERE countrylanguage.language != 'English'
59,675,What is the most common nationality of people?,poker_player,hard,SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1,7,"SELECT people.nationality, COUNT(*) as count FROM people JOIN poker_player ON people.people_id = poker_player.people_id GROUP BY people.nationality ORDER BY count DESC LIMIT 1
SELECT people.nationality, COUNT(*) as count FROM people JOIN poker_player ON people.people_id = poker_player.people_id GROUP BY people.nationality ORDER BY count DESC LIMIT 1
SELECT people.nationality, COUNT(*) as count FROM people JOIN poker_player ON people.people_id = poker_player.people_id GROUP BY people.nationality ORDER BY count DESC LIMIT 1
SELECT people.nationality, COUNT(*) as count FROM people JOIN poker_player ON people.people_id = poker_player.people_id GROUP BY people.nationality ORDER BY count DESC LIMIT 1
SELECT people.nationality, COUNT(*) as count FROM people JOIN poker_player ON people.people_id = poker_player.people_id GROUP BY people.nationality ORDER BY count DESC LIMIT 1
SELECT people.nationality, COUNT(*) as count FROM people JOIN poker_player ON people.people_id = poker_player.people_id GROUP BY people.nationality ORDER BY count DESC LIMIT 1
SELECT people.nationality, COUNT(*) as count FROM people JOIN poker_player ON people.people_id = poker_player.people_id GROUP BY people.nationality ORDER BY count DESC LIMIT 1","SELECT people.nationality, COUNT(*) as count FROM people JOIN poker_player ON people.people_id = poker_player.people_id GROUP BY people.nationality ORDER BY count DESC LIMIT 1"
60,229,Which airline has most number of flights?,flight_2,extra,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1,7,"SELECT airlines.airline, COUNT(flights.flightno) AS flight_count FROM airlines JOIN flights ON airlines.abbreviation = flights.airline GROUP BY airlines.airline ORDER BY flight_count DESC LIMIT 1
SELECT airlines.airline, COUNT(flights.flightno) as flight_count FROM airlines JOIN flights ON airlines.abbreviation = flights.airline GROUP BY airlines.airline ORDER BY flight_count DESC LIMIT 1
SELECT airlines.airline, COUNT(flights.flightno) AS flight_count FROM airlines JOIN flights ON airlines.abbreviation = flights.airline GROUP BY airlines.airline ORDER BY flight_count DESC LIMIT 1
SELECT airlines.airline, COUNT(flights.flightno) AS flight_count FROM airlines JOIN flights ON airlines.abbreviation = flights.airline GROUP BY airlines.airline ORDER BY flight_count DESC LIMIT 1
SELECT airlines.airline, COUNT(flights.flightno) as flight_count FROM airlines JOIN flights ON airlines.abbreviation = flights.airline GROUP BY airlines.airline ORDER BY flight_count DESC LIMIT 1
SELECT airlines.airline, COUNT(flights.flightno) AS flight_count FROM airlines JOIN flights ON airlines.abbreviation = flights.airline GROUP BY airlines.airline ORDER BY flight_count DESC LIMIT 1
SELECT airlines.airline, COUNT(flights.flightno) AS flight_count FROM airlines JOIN flights ON airlines.abbreviation = flights.airline GROUP BY airlines.airline ORDER BY flight_count DESC LIMIT 1","SELECT airlines.airline, COUNT(flights.flightno) AS flight_count FROM airlines JOIN flights ON airlines.abbreviation = flights.airline GROUP BY airlines.airline ORDER BY flight_count DESC LIMIT 1"
61,958,What are the arriving date and the departing date of the dogs who have gone through a treatment?,dog_kennels,medium,"SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id",7,"SELECT dogs.date_arrived, dogs.date_departed  FROM dogs  JOIN treatments ON dogs.dog_id = treatments.dog_id  WHERE dogs.date_departed IS NOT NULL
SELECT dogs.date_arrived, dogs.date_departed  FROM dogs  JOIN treatments ON dogs.dog_id = treatments.dog_id  WHERE dogs.date_departed IS NOT NULL
SELECT dogs.date_arrived, dogs.date_departed FROM dogs JOIN treatments ON dogs.dog_id = treatments.dog_id WHERE dogs.date_arrived IS NOT NULL AND dogs.date_departed IS NOT NULL
SELECT dogs.date_arrived, dogs.date_departed FROM dogs JOIN treatments ON dogs.dog_id = treatments.dog_id WHERE dogs.date_arrived IS NOT NULL AND dogs.date_departed IS NOT NULL
SELECT dogs.date_arrived, dogs.date_departed  FROM dogs  JOIN treatments ON dogs.dog_id = treatments.dog_id  WHERE dogs.date_departed IS NOT NULL
SELECT dogs.date_arrived, dogs.date_departed FROM dogs JOIN treatments ON dogs.dog_id = treatments.dog_id WHERE dogs.date_arrived IS NOT NULL AND dogs.date_departed IS NOT NULL
SELECT dogs.date_arrived, dogs.date_departed  FROM dogs  JOIN treatments ON dogs.dog_id = treatments.dog_id  WHERE dogs.date_departed IS NOT NULL","SELECT dogs.date_arrived, dogs.date_departed  FROM dogs  JOIN treatments ON dogs.dog_id = treatments.dog_id  WHERE dogs.date_departed IS NOT NULL"
62,917,What is the lowest grade of students who do not have any friends?,network_1,extra,SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id),7,"SELECT MIN(highschooler.grade) FROM highschooler WHERE highschooler.id NOT IN (     SELECT student_id FROM friend     UNION     SELECT friend_id FROM friend ) AND highschooler.id NOT IN (     SELECT student_id FROM likes     UNION     SELECT liked_id FROM likes )
SELECT MIN(highschooler.grade) FROM highschooler WHERE highschooler.id NOT IN (     SELECT student_id FROM friend     UNION     SELECT friend_id FROM friend ) AND highschooler.id NOT IN (     SELECT student_id FROM likes     UNION     SELECT liked_id FROM likes )
SELECT MIN(highschooler.grade) FROM highschooler LEFT JOIN friend ON highschooler.id = friend.student_id WHERE friend.student_id IS NULL
SELECT MIN(highschooler.grade) FROM highschooler LEFT JOIN friend ON highschooler.id = friend.student_id WHERE friend.friend_id IS NULL
SELECT MIN(highschooler.grade) FROM highschooler LEFT JOIN friend ON highschooler.id = friend.student_id WHERE friend.friend_id IS NULL
SELECT MIN(highschooler.grade) FROM highschooler LEFT JOIN friend ON highschooler.id = friend.student_id WHERE friend.friend_id IS NULL
SELECT MIN(highschooler.grade) FROM highschooler LEFT JOIN friend ON highschooler.id = friend.student_id WHERE friend.student_id IS NULL",SELECT MIN(highschooler.grade) FROM highschooler LEFT JOIN friend ON highschooler.id = friend.student_id WHERE friend.friend_id IS NULL
63,129,Which countries in europe have at least 3 car manufacturers?,car_1,extra,SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;,7,"SELECT c.countryname, COUNT(DISTINCT cm.maker) as num_makers FROM countries as c JOIN car_makers as cm ON c.countryid = cm.country WHERE c.continent = 'Europe' GROUP BY c.countryname HAVING num_makers >= 3
SELECT c.countryname, COUNT(DISTINCT cm.maker) as num_makers FROM countries as c JOIN car_makers as cm ON c.countryid = cm.country WHERE c.continent = 'Europe' GROUP BY c.countryname HAVING num_makers >= 3
SELECT c.countryname, COUNT(DISTINCT cm.maker) as num_makers FROM countries as c JOIN car_makers as cm ON c.countryid = cm.country WHERE c.continent = 'Europe' GROUP BY c.countryname HAVING num_makers >= 3
SELECT c.countryname, COUNT(DISTINCT cm.maker) as num_makers FROM countries as c JOIN car_makers as cm ON c.countryid = cm.country WHERE c.continent = 'Europe' GROUP BY c.countryname HAVING num_makers >= 3
SELECT c.countryname, COUNT(DISTINCT cm.maker) as num_makers FROM countries as c JOIN car_makers as cm ON c.countryid = cm.country WHERE c.continent = 'Europe' GROUP BY c.countryname HAVING num_makers >= 3
SELECT c.countryname, COUNT(DISTINCT cm.maker) as num_makers FROM countries as c JOIN car_makers as cm ON c.countryid = cm.country WHERE c.continent = 'Europe' GROUP BY c.countryname HAVING num_makers >= 3
SELECT c.countryname, COUNT(DISTINCT cm.maker) as num_makers FROM countries as c JOIN car_makers as cm ON c.countryid = cm.country WHERE c.continent = 'Europe' GROUP BY c.countryname HAVING num_makers >= 3","SELECT c.countryname, COUNT(DISTINCT cm.maker) as num_makers FROM countries as c JOIN car_makers as cm ON c.countryid = cm.country WHERE c.continent = 'Europe' GROUP BY c.countryname HAVING num_makers >= 3"
64,278,Which employee received the most awards in evaluations? Give me the employee name.,employee_hire_evaluation,extra,SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1,7,"SELECT e.name AS Employee_Name, COUNT(ev.employee_id) AS Number_of_Awards FROM employee e JOIN evaluation ev ON e.employee_id = ev.employee_id GROUP BY ev.employee_id ORDER BY Number_of_Awards DESC LIMIT 1
SELECT employee.name, COUNT(evaluation.employee_id) AS awards_count FROM employee JOIN evaluation ON employee.employee_id = evaluation.employee_id GROUP BY evaluation.employee_id ORDER BY awards_count DESC LIMIT 1
SELECT e.name AS EmployeeName, COUNT(ev.employee_id) AS AwardCount FROM evaluation AS ev JOIN employee AS e ON ev.employee_id = e.employee_id GROUP BY ev.employee_id ORDER BY AwardCount DESC LIMIT 1
SELECT e.name FROM employee AS e JOIN evaluation AS ev ON e.employee_id = ev.employee_id GROUP BY e.employee_id ORDER BY COUNT(ev.year_awarded) DESC LIMIT 1
SELECT e.name  FROM evaluation AS ev  JOIN employee AS e ON ev.employee_id = e.employee_id  GROUP BY ev.employee_id  ORDER BY COUNT(ev.employee_id) DESC  LIMIT 1
SELECT e.name  FROM evaluation AS ev  JOIN employee AS e ON ev.employee_id = e.employee_id  GROUP BY ev.employee_id  ORDER BY COUNT(ev.employee_id) DESC  LIMIT 1
SELECT e.name AS Employee_Name, COUNT(ev.employee_id) AS Number_of_Awards FROM employee AS e JOIN evaluation AS ev ON e.employee_id = ev.employee_id GROUP BY ev.employee_id ORDER BY Number_of_Awards DESC LIMIT 1",SELECT e.name  FROM evaluation AS ev  JOIN employee AS e ON ev.employee_id = e.employee_id  GROUP BY ev.employee_id  ORDER BY COUNT(ev.employee_id) DESC  LIMIT 1
65,34,"What are the names , themes , and number of singers for every concert ?",concert_singer,medium,"select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id",7,"SELECT c.concert_name, c.theme, COUNT(sic.singer_id) as num_singers FROM concert as c JOIN singer_in_concert as sic ON c.concert_id = sic.concert_id GROUP BY c.concert_id
SELECT c.concert_name, c.theme, COUNT(sic.singer_id) as number_of_singers FROM concert as c JOIN singer_in_concert as sic ON c.concert_id = sic.concert_id GROUP BY c.concert_id
SELECT c.concert_name, c.theme, COUNT(sic.singer_id) as number_of_singers FROM concert as c JOIN singer_in_concert as sic ON c.concert_id = sic.concert_id GROUP BY c.concert_id
SELECT c.concert_name, c.theme, COUNT(sic.singer_id) as number_of_singers FROM concert as c JOIN singer_in_concert as sic ON c.concert_id = sic.concert_id GROUP BY c.concert_id
SELECT c.concert_name, c.theme, COUNT(sic.singer_id) as num_singers FROM concert as c JOIN singer_in_concert as sic ON c.concert_id = sic.concert_id GROUP BY c.concert_id
SELECT c.concert_name, c.theme, COUNT(sic.singer_id) as number_of_singers FROM concert as c JOIN singer_in_concert as sic ON c.concert_id = sic.concert_id GROUP BY c.concert_id
SELECT c.concert_name, c.theme, COUNT(sic.singer_id) as number_of_singers FROM concert as c JOIN singer_in_concert as sic ON c.concert_id = sic.concert_id GROUP BY c.concert_id","SELECT c.concert_name, c.theme, COUNT(sic.singer_id) as number_of_singers FROM concert as c JOIN singer_in_concert as sic ON c.concert_id = sic.concert_id GROUP BY c.concert_id"
66,887,Return the name of the high school student with the most friends.,network_1,extra,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,7,"SELECT h.name FROM highschooler AS h JOIN friend AS f ON h.id = f.student_id GROUP BY h.name ORDER BY COUNT(f.friend_id) DESC LIMIT 1
SELECT h.name FROM highschooler AS h JOIN friend AS f ON h.id = f.student_id GROUP BY h.name ORDER BY COUNT(f.friend_id) DESC LIMIT 1
SELECT h.name FROM highschooler h JOIN (     SELECT student_id, COUNT(*) as friend_count     FROM friend     GROUP BY student_id     ORDER BY friend_count DESC     LIMIT 1 ) f ON h.id = f.student_id
SELECT h.name FROM highschooler h JOIN (SELECT student_id, COUNT(*) as friend_count       FROM friend       GROUP BY student_id       ORDER BY friend_count DESC       LIMIT 1) f ON h.id = f.student_id
SELECT h.name FROM highschooler AS h JOIN (SELECT student_id, COUNT(*) AS friend_count       FROM friend       GROUP BY student_id       ORDER BY friend_count DESC       LIMIT 1) AS f ON h.id = f.student_id
SELECT h.name FROM highschooler AS h JOIN (SELECT student_id, COUNT(*) AS friend_count       FROM friend       GROUP BY student_id       ORDER BY friend_count DESC       LIMIT 1) AS f ON h.id = f.student_id
SELECT h.name FROM highschooler AS h JOIN (SELECT student_id, COUNT(*) AS friend_count       FROM friend       GROUP BY student_id       ORDER BY friend_count DESC       LIMIT 1) AS f ON h.id = f.student_id","SELECT h.name FROM highschooler AS h JOIN (SELECT student_id, COUNT(*) AS friend_count       FROM friend       GROUP BY student_id       ORDER BY friend_count DESC       LIMIT 1) AS f ON h.id = f.student_id"
67,611,"List the title of all  Cartoons showed on TV Channel with series name ""Sky Radio"".",tvshow,medium,"SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = ""Sky Radio"";",7,"SELECT c.title  FROM cartoon c  JOIN tv_series ts ON c.id = ts.id  JOIN tv_channel tc ON ts.channel = tc.id  WHERE tc.series_name = 'Sky Radio'
SELECT c.title  FROM cartoon c  JOIN tv_series ts ON c.id = ts.id  JOIN tv_channel tc ON ts.channel = tc.id  WHERE tc.series_name = 'Sky Radio'
SELECT c.title  FROM cartoon c  JOIN tv_series ts ON c.id = ts.id  JOIN tv_channel tc ON ts.channel = tc.id  WHERE tc.series_name = 'Sky Radio'
SELECT c.title  FROM cartoon c  JOIN tv_series ts ON c.id = ts.id  JOIN tv_channel tc ON ts.channel = tc.id  WHERE tc.series_name = 'Sky Radio'
SELECT c.title  FROM cartoon AS c  JOIN tv_series AS t  ON c.id = t.id  JOIN tv_channel AS tc  ON t.channel = tc.id  WHERE tc.series_name = 'Sky Radio'
SELECT c.title  FROM cartoon c  JOIN tv_series ts ON c.id = ts.id  JOIN tv_channel tc ON ts.channel = tc.id  WHERE tc.series_name = 'Sky Radio'
SELECT c.title  FROM cartoon c  JOIN tv_series ts ON c.id = ts.id  JOIN tv_channel tc ON ts.channel = tc.id  WHERE tc.series_name = 'Sky Radio'",SELECT c.title  FROM cartoon c  JOIN tv_series ts ON c.id = ts.id  JOIN tv_channel tc ON ts.channel = tc.id  WHERE tc.series_name = 'Sky Radio'
68,239,Find all airlines that have flights from airport 'CVO' but not from 'APG'.,flight_2,extra,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""CVO"" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""APG""",7,"SELECT airlines.airline FROM airlines JOIN flights ON airlines.airline = flights.airline WHERE flights.sourceairport = 'CVO' EXCEPT SELECT airlines.airline FROM airlines JOIN flights ON airlines.airline = flights.airline WHERE flights.sourceairport = 'APG'
SELECT airlines.airline FROM airlines JOIN flights ON airlines.airline = flights.airline WHERE flights.sourceairport = 'CVO' EXCEPT SELECT airlines.airline FROM airlines JOIN flights ON airlines.airline = flights.airline WHERE flights.sourceairport = 'APG'
SELECT airlines.airline FROM airlines JOIN flights ON airlines.airline = flights.airline WHERE flights.sourceairport = 'CVO' EXCEPT SELECT airlines.airline FROM airlines JOIN flights ON airlines.airline = flights.airline WHERE flights.sourceairport = 'APG'
SELECT airlines.airline FROM airlines JOIN flights ON airlines.airline = flights.airline WHERE flights.sourceairport = 'CVO' EXCEPT SELECT airlines.airline FROM airlines JOIN flights ON airlines.airline = flights.airline WHERE flights.sourceairport = 'APG'
SELECT airlines.airline FROM airlines JOIN flights ON airlines.airline = flights.airline WHERE flights.sourceairport = 'CVO' EXCEPT SELECT airlines.airline FROM airlines JOIN flights ON airlines.airline = flights.airline WHERE flights.sourceairport = 'APG'
SELECT airlines.airline FROM airlines JOIN flights ON airlines.airline = flights.airline WHERE flights.sourceairport = 'CVO' EXCEPT SELECT airlines.airline FROM airlines JOIN flights ON airlines.airline = flights.airline WHERE flights.sourceairport = 'APG'
SELECT airlines.airline FROM airlines JOIN flights ON airlines.airline = flights.airline WHERE flights.sourceairport = 'CVO' EXCEPT SELECT airlines.airline FROM airlines JOIN flights ON airlines.airline = flights.airline WHERE flights.sourceairport = 'APG'",SELECT airlines.airline FROM airlines JOIN flights ON airlines.airline = flights.airline WHERE flights.sourceairport = 'CVO' EXCEPT SELECT airlines.airline FROM airlines JOIN flights ON airlines.airline = flights.airline WHERE flights.sourceairport = 'APG'
69,426,What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?,museum_visit,extra,SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011,7,"SELECT visitor.name  FROM visitor  JOIN visit ON visitor.id = visit.visitor_id  JOIN museum ON visit.museum_id = museum.museum_id  WHERE museum.open_year < 2009 OR museum.open_year > 2011  GROUP BY visitor.name  HAVING COUNT(DISTINCT CASE WHEN museum.open_year < 2009 THEN museum.museum_id END) > 0  AND COUNT(DISTINCT CASE WHEN museum.open_year > 2011 THEN museum.museum_id END) > 0
SELECT visitor.name  FROM visitor  JOIN visit ON visitor.id = visit.visitor_id  JOIN museum ON visit.museum_id = museum.museum_id  WHERE museum.open_year < 2009 OR museum.open_year > 2011 GROUP BY visitor.name HAVING COUNT(DISTINCT museum.open_year) > 1
SELECT visitor.name FROM visitor JOIN visit ON visitor.id = visit.visitor_id JOIN museum ON visit.museum_id = museum.museum_id WHERE museum.open_year < 2009 OR museum.open_year > 2011 GROUP BY visitor.name HAVING COUNT(DISTINCT museum.open_year) > 1
SELECT visitor.name  FROM visitor  JOIN visit ON visitor.id = visit.visitor_id  JOIN museum ON visit.museum_id = museum.museum_id  WHERE museum.open_year < 2009 OR museum.open_year > 2011 GROUP BY visitor.name HAVING COUNT(DISTINCT museum.open_year) > 1
SELECT visitor.name  FROM visitor  JOIN visit ON visitor.id = visit.visitor_id  JOIN museum ON visit.museum_id = museum.museum_id  WHERE museum.open_year < 2009 OR museum.open_year > 2011 GROUP BY visitor.name HAVING COUNT(DISTINCT museum.open_year) > 1
SELECT visitor.name  FROM visitor  JOIN visit ON visitor.id = visit.visitor_id  JOIN museum ON visit.museum_id = museum.museum_id  WHERE museum.open_year < 2009 OR museum.open_year > 2011 GROUP BY visitor.name HAVING COUNT(DISTINCT museum.open_year) > 1
SELECT visitor.name  FROM visitor  JOIN visit ON visitor.id = visit.visitor_id  JOIN museum ON visit.museum_id = museum.museum_id  WHERE museum.open_year < 2009 OR museum.open_year > 2011 GROUP BY visitor.name HAVING COUNT(DISTINCT museum.open_year) > 1",SELECT visitor.name  FROM visitor  JOIN visit ON visitor.id = visit.visitor_id  JOIN museum ON visit.museum_id = museum.museum_id  WHERE museum.open_year < 2009 OR museum.open_year > 2011 GROUP BY visitor.name HAVING COUNT(DISTINCT museum.open_year) > 1
70,402,What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher?,course_teach,hard,"SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name",7,"SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id ORDER BY t.name ASC
SELECT t.name, c.course FROM teacher AS t JOIN course_arrange AS ca ON t.teacher_id = ca.teacher_id JOIN course AS c ON ca.course_id = c.course_id ORDER BY t.name ASC
SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id ORDER BY t.name ASC
SELECT t.name, c.course FROM teacher AS t JOIN course_arrange AS ca ON t.teacher_id = ca.teacher_id JOIN course AS c ON ca.course_id = c.course_id ORDER BY t.name ASC
SELECT t.name, c.course FROM teacher AS t JOIN course_arrange AS ca ON t.teacher_id = ca.teacher_id JOIN course AS c ON ca.course_id = c.course_id ORDER BY t.name ASC
SELECT t.name, c.course FROM teacher AS t JOIN course_arrange AS ca ON t.teacher_id = ca.teacher_id JOIN course AS c ON ca.course_id = c.course_id ORDER BY t.name ASC
SELECT t.name, c.course FROM teacher AS t JOIN course_arrange AS ca ON t.teacher_id = ca.teacher_id JOIN course AS c ON ca.course_id = c.course_id ORDER BY t.name ASC","SELECT t.name, c.course FROM teacher AS t JOIN course_arrange AS ca ON t.teacher_id = ca.teacher_id JOIN course AS c ON ca.course_id = c.course_id ORDER BY t.name ASC"
71,803,Return the names of the 3 most populated countries.,world_1,medium,SELECT Name FROM country ORDER BY Population DESC LIMIT 3,7,"SELECT city.name FROM city ORDER BY city.population DESC LIMIT 3
SELECT city.name FROM city ORDER BY city.population DESC LIMIT 3
SELECT city.name, city.population  FROM city  ORDER BY city.population DESC  LIMIT 3
SELECT city.name FROM city ORDER BY city.population DESC LIMIT 3
SELECT city.name FROM city ORDER BY city.population DESC LIMIT 3
SELECT city.name FROM city ORDER BY city.population DESC LIMIT 3
SELECT city.name FROM city ORDER BY city.population DESC LIMIT 3",SELECT city.name FROM city ORDER BY city.population DESC LIMIT 3
72,64,What are the ids of the students who do not own cats as pets?,pets_1,hard,SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat',7,"SELECT student.stuid  FROM student  LEFT JOIN has_pet ON student.stuid = has_pet.stuid  LEFT JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype != 'cat' OR pets.pettype IS NULL
SELECT student.stuid  FROM student  LEFT JOIN has_pet ON student.stuid = has_pet.stuid  LEFT JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype != 'cat' OR pets.pettype IS NULL
SELECT student.stuid  FROM student  LEFT JOIN has_pet ON student.stuid = has_pet.stuid  LEFT JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype != 'cat' OR pets.pettype IS NULL
SELECT student.stuid FROM student LEFT JOIN has_pet ON student.stuid = has_pet.stuid LEFT JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype != 'cat' OR pets.pettype IS NULL
SELECT student.stuid  FROM student  LEFT JOIN has_pet ON student.stuid = has_pet.stuid  LEFT JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype != 'cat' OR pets.pettype IS NULL
SELECT student.stuid  FROM student  LEFT JOIN has_pet ON student.stuid = has_pet.stuid  LEFT JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype != 'cat' OR pets.pettype IS NULL
SELECT student.stuid  FROM student  LEFT JOIN has_pet ON student.stuid = has_pet.stuid  LEFT JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype != 'cat' OR pets.pettype IS NULL",SELECT student.stuid  FROM student  LEFT JOIN has_pet ON student.stuid = has_pet.stuid  LEFT JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype != 'cat' OR pets.pettype IS NULL
73,89,"How many countries does each continent have? List the continent id, continent name and the number of countries.",car_1,medium,"SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;",7,"SELECT c.contid, c.continent, COUNT(DISTINCT co.countryid) AS num_countries FROM continents AS c JOIN countries AS co ON c.contid = co.continent GROUP BY c.contid, c.continent
SELECT c.contid, c.continent, COUNT(co.countryid) AS num_countries FROM continents AS c LEFT JOIN countries AS co ON c.contid = co.continent GROUP BY c.contid, c.continent
SELECT c.contid, c.continent, COUNT(DISTINCT co.countryid) AS num_countries FROM continents AS c JOIN countries AS co ON c.contid = co.continent GROUP BY c.contid, c.continent
SELECT c.contid, c.continent, COUNT(DISTINCT co.countryid) AS num_countries FROM continents AS c LEFT JOIN countries AS co ON c.contid = co.continent GROUP BY c.contid, c.continent
SELECT c.contid, c.continent, COUNT(co.countryid) AS num_countries FROM continents AS c LEFT JOIN countries AS co ON c.contid = co.continent GROUP BY c.contid, c.continent
SELECT c.contid, c.continent, COUNT(DISTINCT co.countryid) AS num_countries FROM continents AS c JOIN countries AS co ON c.contid = co.continent GROUP BY c.contid, c.continent
SELECT c.contid, c.continent, COUNT(co.countryid) AS num_countries FROM continents AS c LEFT JOIN countries AS co ON c.contid = co.continent GROUP BY c.contid, c.continent","SELECT c.contid, c.continent, COUNT(DISTINCT co.countryid) AS num_countries FROM continents AS c JOIN countries AS co ON c.contid = co.continent GROUP BY c.contid, c.continent"
74,296,Count the number of distinct store locations.,employee_hire_evaluation,easy,SELECT count(DISTINCT LOCATION) FROM shop,7,"SELECT COUNT(DISTINCT location) FROM shop
SELECT COUNT(DISTINCT location) FROM shop
SELECT COUNT(DISTINCT location) FROM shop
SELECT COUNT(DISTINCT location) FROM shop
SELECT COUNT(DISTINCT location) FROM shop
SELECT COUNT(DISTINCT location) FROM shop
SELECT COUNT(DISTINCT location) FROM shop",SELECT COUNT(DISTINCT location) FROM shop
75,748,What are the names of nations where both English and French are official languages?,world_1,extra,"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND T2.IsOfficial  =  ""T"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""French"" AND T2.IsOfficial  =  ""T""",7,"SELECT country.name  FROM country  JOIN countrylanguage  ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language IN ('English', 'French')  GROUP BY country.name  HAVING COUNT(DISTINCT countrylanguage.language) = 2
SELECT country.name  FROM country  JOIN countrylanguage  ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language IN ('English', 'French')  GROUP BY country.name  HAVING COUNT(DISTINCT countrylanguage.language) = 2
SELECT country.name  FROM country  JOIN countrylanguage  ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language IN ('English', 'French')  GROUP BY country.name  HAVING COUNT(DISTINCT countrylanguage.language) = 2
SELECT country.name  FROM country  JOIN countrylanguage  ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language IN ('English', 'French')  GROUP BY country.name  HAVING COUNT(DISTINCT countrylanguage.language) = 2
SELECT country.name  FROM country  JOIN countrylanguage  ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language IN ('English', 'French')  GROUP BY country.name  HAVING COUNT(DISTINCT countrylanguage.language) = 2
SELECT country.name  FROM country  JOIN countrylanguage  ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language IN ('English', 'French')  GROUP BY country.name  HAVING COUNT(DISTINCT countrylanguage.language) = 2
SELECT country.name  FROM country  JOIN countrylanguage  ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language IN ('English', 'French')  GROUP BY country.name  HAVING COUNT(DISTINCT countrylanguage.language) = 2","SELECT country.name  FROM country  JOIN countrylanguage  ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language IN ('English', 'French')  GROUP BY country.name  HAVING COUNT(DISTINCT countrylanguage.language) = 2"
76,792,Return the country name and the numbers of languages spoken for each country that speaks at least 3 languages.,world_1,medium,"SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2",7,"SELECT c.name AS country_name, COUNT(cl.language) AS language_count FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode GROUP BY c.name HAVING language_count >= 3
SELECT c.name AS country_name, COUNT(cl.language) AS language_count FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode GROUP BY c.name HAVING language_count >= 3
SELECT c.name AS Country, COUNT(cl.language) AS Languages_Spoken FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode GROUP BY c.name HAVING COUNT(cl.language) >= 3
SELECT c.name AS country_name, COUNT(cl.language) AS language_count FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode GROUP BY c.name HAVING language_count >= 3
SELECT c.name AS country_name, COUNT(cl.language) AS language_count FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode GROUP BY c.name HAVING COUNT(cl.language) >= 3
SELECT c.name AS country_name, COUNT(cl.language) AS language_count FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode GROUP BY c.name HAVING COUNT(cl.language) >= 3
SELECT c.name AS country_name, COUNT(cl.language) AS language_count FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode GROUP BY c.name HAVING COUNT(cl.language) >= 3","SELECT c.name AS country_name, COUNT(cl.language) AS language_count FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode GROUP BY c.name HAVING language_count >= 3"
77,193,Which airline has abbreviation 'UAL'?,flight_2,easy,"SELECT Airline FROM AIRLINES WHERE Abbreviation  =  ""UAL""",7,"SELECT airline FROM airlines WHERE abbreviation = 'UAL'
SELECT airline FROM airlines WHERE abbreviation = 'UAL'
SELECT airline FROM airlines WHERE abbreviation = 'UAL'
SELECT airline FROM airlines WHERE abbreviation = 'UAL'
SELECT airline FROM airlines WHERE abbreviation = 'UAL'
SELECT airline FROM airlines WHERE abbreviation = 'UAL'
SELECT airline FROM airlines WHERE abbreviation = 'UAL'",SELECT airline FROM airlines WHERE abbreviation = 'UAL'
78,240,Which airlines have departures from CVO but not from APG airports?,flight_2,extra,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""CVO"" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""APG""",7,"SELECT airlines.airline FROM airlines JOIN flights ON airlines.abbreviation = flights.airline WHERE flights.sourceairport = 'CVO' AND airlines.airline NOT IN (     SELECT airlines.airline     FROM airlines     JOIN flights ON airlines.abbreviation = flights.airline     WHERE flights.sourceairport = 'APG' )
SELECT airlines.airline FROM airlines JOIN flights ON airlines.abbreviation = flights.airline WHERE flights.sourceairport = 'CVO' AND airlines.airline NOT IN (     SELECT airlines.airline     FROM airlines     JOIN flights ON airlines.abbreviation = flights.airline     WHERE flights.sourceairport = 'APG' )
SELECT airlines.airline FROM airlines JOIN flights ON airlines.abbreviation = flights.airline WHERE flights.sourceairport = 'CVO' AND airlines.airline NOT IN (     SELECT airlines.airline     FROM airlines     JOIN flights ON airlines.abbreviation = flights.airline     WHERE flights.sourceairport = 'APG' )
SELECT airlines.airline FROM airlines INNER JOIN flights ON airlines.abbreviation = flights.airline WHERE flights.sourceairport = 'CVO' EXCEPT SELECT airlines.airline FROM airlines INNER JOIN flights ON airlines.abbreviation = flights.airline WHERE flights.sourceairport = 'APG'
SELECT airlines.airline FROM airlines JOIN flights ON airlines.abbreviation = flights.airline WHERE flights.sourceairport = 'CVO' EXCEPT SELECT airlines.airline FROM airlines JOIN flights ON airlines.abbreviation = flights.airline WHERE flights.sourceairport = 'APG'
SELECT airlines.airline FROM airlines JOIN flights ON airlines.abbreviation = flights.airline WHERE flights.sourceairport = 'CVO' AND airlines.airline NOT IN (     SELECT airlines.airline     FROM airlines     JOIN flights ON airlines.abbreviation = flights.airline     WHERE flights.sourceairport = 'APG' )
SELECT airlines.airline  FROM airlines  JOIN flights ON airlines.abbreviation = flights.airline  WHERE flights.sourceairport = 'CVO'  AND airlines.airline NOT IN (     SELECT airlines.airline      FROM airlines      JOIN flights ON airlines.abbreviation = flights.airline      WHERE flights.sourceairport = 'APG' )",SELECT airlines.airline FROM airlines JOIN flights ON airlines.abbreviation = flights.airline WHERE flights.sourceairport = 'CVO' AND airlines.airline NOT IN (     SELECT airlines.airline     FROM airlines     JOIN flights ON airlines.abbreviation = flights.airline     WHERE flights.sourceairport = 'APG' )
79,65,Find the first name and age of students who have a dog but do not have a cat as a pet.,pets_1,extra,"SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",7,"SELECT student.fname, student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'dog' EXCEPT SELECT student.fname, student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat'
SELECT student.fname, student.age  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'dog'  EXCEPT  SELECT student.fname, student.age  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat'
SELECT student.fname, student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'dog' EXCEPT SELECT student.fname, student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat'
SELECT student.fname, student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'dog' EXCEPT SELECT student.fname, student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat'
SELECT student.fname, student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'dog' EXCEPT SELECT student.fname, student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat'
SELECT student.fname, student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'dog' EXCEPT SELECT student.fname, student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat'
SELECT student.fname, student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'dog' EXCEPT SELECT student.fname, student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat'","SELECT student.fname, student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'dog' EXCEPT SELECT student.fname, student.age FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype = 'cat'"
80,683,List the names of people that are not poker players.,poker_player,hard,SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player),7,"SELECT people.name  FROM people  LEFT JOIN poker_player  ON people.people_id = poker_player.people_id  WHERE poker_player.people_id IS NULL
SELECT people.name  FROM people  LEFT JOIN poker_player  ON people.people_id = poker_player.people_id  WHERE poker_player.people_id IS NULL
SELECT people.name  FROM people  LEFT JOIN poker_player  ON people.people_id = poker_player.people_id  WHERE poker_player.people_id IS NULL
SELECT people.name  FROM people  LEFT JOIN poker_player ON people.people_id = poker_player.people_id  WHERE poker_player.people_id IS NULL
SELECT people.name  FROM people  LEFT JOIN poker_player  ON people.people_id = poker_player.people_id  WHERE poker_player.people_id IS NULL
SELECT people.name  FROM people  LEFT JOIN poker_player  ON people.people_id = poker_player.people_id  WHERE poker_player.people_id IS NULL
SELECT people.name  FROM people  LEFT JOIN poker_player  ON people.people_id = poker_player.people_id  WHERE poker_player.people_id IS NULL",SELECT people.name  FROM people  LEFT JOIN poker_player  ON people.people_id = poker_player.people_id  WHERE poker_player.people_id IS NULL
81,928,"Which professional did not operate any treatment on dogs? List the professional's id, role and email.",dog_kennels,extra,"SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id",7,"SELECT professionals.professional_id, professionals.role_code, professionals.email_address FROM professionals LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id WHERE treatments.professional_id IS NULL
SELECT professionals.professional_id, professionals.role_code, professionals.email_address FROM professionals LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id WHERE treatments.professional_id IS NULL
SELECT professionals.professional_id, professionals.role_code, professionals.email_address FROM professionals LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id WHERE treatments.professional_id IS NULL
SELECT professionals.professional_id, professionals.role_code, professionals.email_address FROM professionals LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id WHERE treatments.professional_id IS NULL
SELECT professionals.professional_id, professionals.role_code, professionals.email_address FROM professionals LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id WHERE treatments.professional_id IS NULL
SELECT professionals.professional_id, professionals.role_code, professionals.email_address FROM professionals LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id WHERE treatments.professional_id IS NULL
SELECT professionals.professional_id, professionals.role_code, professionals.email_address FROM professionals LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id WHERE treatments.professional_id IS NULL","SELECT professionals.professional_id, professionals.role_code, professionals.email_address FROM professionals LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id WHERE treatments.professional_id IS NULL"
82,219,How many United Airlines flights go to City 'Aberdeen'?,flight_2,hard,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  ""Aberdeen"" AND T3.Airline  =  ""United Airlines""",7,"SELECT COUNT(*) FROM flights  INNER JOIN airlines ON flights.airline = airlines.abbreviation  INNER JOIN airports ON flights.destairport = airports.airportcode  WHERE airlines.airline = 'United Airlines' AND airports.city = 'Aberdeen'
SELECT COUNT(*) FROM flights  INNER JOIN airlines ON flights.airline = airlines.abbreviation  INNER JOIN airports ON flights.destairport = airports.airportcode  WHERE airlines.airline = 'United Airlines' AND airports.city = 'Aberdeen'
SELECT COUNT(*) FROM flights  INNER JOIN airlines ON flights.airline = airlines.abbreviation  INNER JOIN airports ON flights.destairport = airports.airportcode  WHERE airlines.airline = 'United Airlines' AND airports.city = 'Aberdeen'
SELECT COUNT(*) FROM flights  INNER JOIN airlines ON flights.airline = airlines.abbreviation  INNER JOIN airports ON flights.destairport = airports.airportcode  WHERE airlines.airline = 'United Airlines' AND airports.city = 'Aberdeen'
SELECT COUNT(*) FROM flights  INNER JOIN airlines ON flights.airline = airlines.abbreviation  INNER JOIN airports ON flights.destairport = airports.airportcode  WHERE airlines.airline = 'United Airlines' AND airports.city = 'Aberdeen'
SELECT COUNT(*) FROM flights  INNER JOIN airlines ON flights.airline = airlines.abbreviation  INNER JOIN airports ON flights.destairport = airports.airportcode  WHERE airlines.airline = 'United Airlines' AND airports.city = 'Aberdeen'
SELECT COUNT(*) FROM flights  INNER JOIN airlines ON flights.airline = airlines.abbreviation  INNER JOIN airports ON flights.destairport = airports.airportcode  WHERE airlines.airline = 'United Airlines' AND airports.city = 'Aberdeen'",SELECT COUNT(*) FROM flights  INNER JOIN airlines ON flights.airline = airlines.abbreviation  INNER JOIN airports ON flights.destairport = airports.airportcode  WHERE airlines.airline = 'United Airlines' AND airports.city = 'Aberdeen'
83,628,How many cartoons did each director create?,tvshow,medium,"SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by",7,"SELECT c.directed_by, COUNT(c.id) as num_cartoons FROM cartoon as c GROUP BY c.directed_by
SELECT c.directed_by, COUNT(c.id) as num_cartoons FROM cartoon c GROUP BY c.directed_by
SELECT c.directed_by, COUNT(c.id) as num_cartoons FROM cartoon c GROUP BY c.directed_by
SELECT c.directed_by, COUNT(c.id) as num_cartoons FROM cartoon as c GROUP BY c.directed_by
SELECT c.directed_by, COUNT(c.id) as num_cartoons FROM cartoon as c GROUP BY c.directed_by
SELECT c.directed_by, COUNT(c.id) as num_cartoons FROM cartoon as c GROUP BY c.directed_by
SELECT c.directed_by, COUNT(c.id) as num_cartoons FROM cartoon as c GROUP BY c.directed_by","SELECT c.directed_by, COUNT(c.id) as num_cartoons FROM cartoon as c GROUP BY c.directed_by"
84,452,What are the first names and country codes for players who won both the WTA Championships and the Australian Open?,wta_1,extra,"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'",7,"SELECT players.first_name, players.country_code FROM players JOIN matches AS WTA_Champs ON players.player_id = WTA_Champs.winner_id JOIN matches AS Australian_Open ON players.player_id = Australian_Open.winner_id WHERE WTA_Champs.tourney_name = 'WTA Championships' AND Australian_Open.tourney_name = 'Australian Open' GROUP BY players.player_id HAVING COUNT(DISTINCT WTA_Champs.tourney_name, Australian_Open.tourney_name) = 2
SELECT players.first_name, players.country_code FROM players JOIN matches AS WTA_Champs ON players.player_id = WTA_Champs.winner_id JOIN matches AS Australian_Open ON players.player_id = Australian_Open.winner_id WHERE WTA_Champs.tourney_name = 'WTA Championships' AND Australian_Open.tourney_name = 'Australian Open' GROUP BY players.player_id HAVING COUNT(DISTINCT WTA_Champs.tourney_name, Australian_Open.tourney_name) = 2
SELECT players.first_name, players.country_code FROM players JOIN matches AS WTA_Champs ON players.player_id = WTA_Champs.winner_id JOIN matches AS Australian_Open ON players.player_id = Australian_Open.winner_id WHERE WTA_Champs.tourney_name = 'WTA Championships' AND Australian_Open.tourney_name = 'Australian Open' GROUP BY players.player_id HAVING COUNT(DISTINCT WTA_Champs.tourney_name) > 0 AND COUNT(DISTINCT Australian_Open.tourney_name) > 0
SELECT players.first_name, players.country_code FROM players JOIN matches AS WTA_Champs ON players.player_id = WTA_Champs.winner_id JOIN matches AS Australian_Open ON players.player_id = Australian_Open.winner_id WHERE WTA_Champs.tourney_name = 'WTA Championships' AND Australian_Open.tourney_name = 'Australian Open' GROUP BY players.player_id HAVING COUNT(DISTINCT WTA_Champs.tourney_name, Australian_Open.tourney_name) = 2
SELECT players.first_name, players.country_code FROM players JOIN matches AS WTA_Champs ON players.player_id = WTA_Champs.winner_id JOIN matches AS Australian_Open ON players.player_id = Australian_Open.winner_id WHERE WTA_Champs.tourney_name = 'WTA Championships' AND Australian_Open.tourney_name = 'Australian Open' GROUP BY players.player_id HAVING COUNT(DISTINCT WTA_Champs.tourney_name, Australian_Open.tourney_name) = 2
SELECT players.first_name, players.country_code FROM players JOIN matches AS WTA_Champs ON players.player_id = WTA_Champs.winner_id JOIN matches AS Australian_Open ON players.player_id = Australian_Open.winner_id WHERE WTA_Champs.tourney_name = 'WTA Championships' AND Australian_Open.tourney_name = 'Australian Open' GROUP BY players.player_id HAVING COUNT(DISTINCT WTA_Champs.tourney_name, Australian_Open.tourney_name) = 2
SELECT players.first_name, players.country_code FROM players JOIN matches AS WTA_Champs ON players.player_id = WTA_Champs.winner_id JOIN matches AS Australian_Open ON players.player_id = Australian_Open.winner_id WHERE WTA_Champs.tourney_name = 'WTA Championships' AND Australian_Open.tourney_name = 'Australian Open' GROUP BY players.player_id HAVING COUNT(DISTINCT WTA_Champs.tourney_name, Australian_Open.tourney_name) = 2","SELECT players.first_name, players.country_code FROM players JOIN matches AS WTA_Champs ON players.player_id = WTA_Champs.winner_id JOIN matches AS Australian_Open ON players.player_id = Australian_Open.winner_id WHERE WTA_Champs.tourney_name = 'WTA Championships' AND Australian_Open.tourney_name = 'Australian Open' GROUP BY players.player_id HAVING COUNT(DISTINCT WTA_Champs.tourney_name, Australian_Open.tourney_name) = 2"
85,485,How many different winners both participated in the WTA Championships and were left handed?,wta_1,medium,SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L',7,"SELECT COUNT(DISTINCT winner_id)  FROM matches  WHERE winner_hand = 'L' AND tourney_level = 'WTA' AND winner_id IN (SELECT player_id FROM players WHERE hand = 'L')
SELECT COUNT(DISTINCT winner_id)  FROM matches  WHERE winner_hand = 'L' AND tourney_level = 'WTA' AND winner_id IN (SELECT player_id FROM players WHERE hand = 'L')
SELECT COUNT(DISTINCT winner_id)  FROM matches  WHERE winner_hand = 'L' AND tourney_level = 'WTA' AND winner_id IN (SELECT player_id FROM players WHERE hand = 'L')
SELECT COUNT(DISTINCT winner_id)  FROM matches  WHERE winner_hand = 'L' AND tourney_level = 'WTA' AND winner_id IN (SELECT player_id FROM players WHERE hand = 'L')
SELECT COUNT(DISTINCT winner_id)  FROM matches  WHERE winner_hand = 'L' AND tourney_level = 'WTA' AND winner_id IN (SELECT player_id FROM players WHERE hand = 'L')
SELECT COUNT(DISTINCT winner_id)  FROM matches  WHERE winner_hand = 'L' AND tourney_level = 'WTA' AND winner_id IN (SELECT player_id FROM players WHERE hand = 'L')
SELECT COUNT(DISTINCT winner_id)  FROM matches  WHERE winner_hand = 'L' AND tourney_level = 'WTA' AND winner_id IN (SELECT player_id FROM players WHERE hand = 'L')",SELECT COUNT(DISTINCT winner_id)  FROM matches  WHERE winner_hand = 'L' AND tourney_level = 'WTA' AND winner_id IN (SELECT player_id FROM players WHERE hand = 'L')
86,124,What are the names and ids of all countries with at least one car maker?,car_1,medium,"SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;",7,"SELECT DISTINCT c.countryname, c.countryid  FROM countries AS c  JOIN car_makers AS cm ON c.countryid = cm.country  WHERE c.continent IN (SELECT contid FROM continents)
SELECT DISTINCT c.countryname, c.countryid  FROM countries AS c  JOIN car_makers AS cm ON c.countryid = cm.country  WHERE c.continent IN ('contid', 'continent') AND cm.id IN (     SELECT maker      FROM model_list      UNION      SELECT id      FROM car_makers  ) 
SELECT DISTINCT c.countryname, c.countryid  FROM countries AS c  JOIN car_makers AS cm ON c.countryid = cm.country  WHERE c.continent IN ('contid', 'continent')
SELECT DISTINCT c.countryname, c.countryid  FROM countries AS c  JOIN car_makers AS cm ON c.countryid = cm.country  WHERE c.continent IN ('contid', 'continent')
SELECT DISTINCT c.countryname, c.countryid  FROM countries AS c  JOIN car_makers AS cm ON c.countryid = cm.country  WHERE c.continent IN ('contid', 'continent') AND cm.id IS NOT NULL
SELECT DISTINCT c.countryname, c.countryid  FROM countries AS c  JOIN car_makers AS cm ON c.countryid = cm.country  WHERE c.continent IN ('contid', 'continent') AND cm.id IS NOT NULL
SELECT DISTINCT c.countryname, c.countryid  FROM countries AS c  JOIN car_makers AS cm ON c.countryid = cm.country  WHERE c.continent IN ('contid', 'continent')","SELECT DISTINCT c.countryname, c.countryid  FROM countries AS c  JOIN car_makers AS cm ON c.countryid = cm.country  WHERE c.continent IN ('contid', 'continent')"
87,247,"What are flight numbers of flights departing from Airport ""APG""?",flight_2,easy,"SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  ""APG""",7,"SELECT flightno FROM flights WHERE sourceairport = ""APG""
SELECT flightno FROM flights WHERE sourceairport = ""APG""
SELECT flightno FROM flights WHERE sourceairport = ""APG""
SELECT flightno FROM flights WHERE sourceairport = ""APG""
SELECT flightno FROM flights WHERE sourceairport = ""APG""
SELECT flightno FROM flights WHERE sourceairport = ""APG""
SELECT flightno FROM flights WHERE sourceairport = ""APG""","SELECT flightno FROM flights WHERE sourceairport = ""APG"""
88,31,Show names for all stadiums except for stadiums having a concert in year 2014.,concert_singer,hard,SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014,7,"SELECT stadium.name  FROM stadium  LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id  WHERE concert.year != 2014 OR concert.year IS NULL
SELECT stadium.name  FROM stadium  LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id  WHERE concert.year != 2014 OR concert.year IS NULL
SELECT stadium.name  FROM stadium  LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id  WHERE concert.year != 2014 OR concert.year IS NULL
SELECT stadium.name  FROM stadium  LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id  WHERE concert.year != 2014 OR concert.year IS NULL
SELECT stadium.name  FROM stadium  LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id  WHERE concert.year != 2014 OR concert.year IS NULL
SELECT stadium.name  FROM stadium  LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id  WHERE concert.year != 2014 OR concert.year IS NULL
SELECT stadium.name  FROM stadium  LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id  WHERE concert.year != 2014 OR concert.year IS NULL",SELECT stadium.name  FROM stadium  LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id  WHERE concert.year != 2014 OR concert.year IS NULL
89,389,Show the name of teachers aged either 32 or 33?,course_teach,medium,SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33,7,"SELECT teacher.name  FROM teacher  WHERE teacher.age IN (32, 33)
SELECT teacher.name  FROM teacher  WHERE teacher.age IN (32, 33)
SELECT teacher.name  FROM teacher  WHERE teacher.age IN (32, 33)
SELECT teacher.name  FROM teacher  WHERE teacher.age IN (32, 33)
SELECT teacher.name  FROM teacher  WHERE teacher.age IN (32, 33)
SELECT teacher.name  FROM teacher  WHERE teacher.age IN (32, 33)
SELECT teacher.name  FROM teacher  WHERE teacher.age IN (32, 33)","SELECT teacher.name  FROM teacher  WHERE teacher.age IN (32, 33)"
90,165,"For the cars with 4 cylinders, which model has the largest horsepower?",car_1,extra,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;,7,"SELECT model FROM cars_data  INNER JOIN car_names ON cars_data.id = car_names.makeid  WHERE cylinders = 4  ORDER BY horsepower DESC  LIMIT 1
SELECT model, MAX(horsepower)  FROM cars_data  JOIN car_names ON cars_data.id = car_names.makeid  JOIN model_list ON car_names.model = model_list.modelid  WHERE cylinders = 4
SELECT model, MAX(horsepower)  FROM cars_data  INNER JOIN car_names ON cars_data.id = car_names.makeid  WHERE cylinders = 4
SELECT model, MAX(horsepower) FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid JOIN model_list ON car_names.model = model_list.modelid WHERE cylinders = 4
SELECT model, MAX(horsepower)  FROM cars_data  INNER JOIN car_names ON cars_data.id = car_names.makeid  WHERE cylinders = 4
SELECT model, MAX(horsepower)  FROM cars_data  INNER JOIN car_names ON cars_data.id = car_names.makeid  WHERE cylinders = 4
SELECT model, MAX(horsepower)  FROM cars_data  INNER JOIN car_names ON cars_data.id = car_names.makeid  WHERE cylinders = 4","SELECT model, MAX(horsepower)  FROM cars_data  INNER JOIN car_names ON cars_data.id = car_names.makeid  WHERE cylinders = 4"
91,707,How much surface area do the countires in the Carribean cover together?,world_1,easy,"SELECT sum(SurfaceArea) FROM country WHERE Region  =  ""Caribbean""",7,"SELECT SUM(surfacearea) FROM country WHERE continent = 'Caribbean'
SELECT SUM(surfacearea) FROM country WHERE continent='Caribbean'
SELECT SUM(surfacearea) FROM country WHERE continent='Caribbean'
SELECT SUM(surfacearea) FROM country WHERE continent='Caribbean'
SELECT SUM(surfacearea) FROM country WHERE continent='Caribbean'
SELECT SUM(surfacearea) FROM country WHERE continent='Caribbean'
SELECT SUM(surfacearea) FROM country WHERE continent='Caribbean'",SELECT SUM(surfacearea) FROM country WHERE continent='Caribbean'
92,1021,what are the different names of the singers that have sales more than 300000?,singer,medium,SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000,7,"SELECT DISTINCT s.name  FROM singer AS s  JOIN song AS t  ON s.singer_id = t.singer_id  WHERE t.sales > 300000
SELECT DISTINCT s.name  FROM singer AS s  JOIN song AS t  ON s.singer_id = t.singer_id  WHERE t.sales > 300000
SELECT DISTINCT s.name  FROM singer AS s  JOIN song AS t  ON s.singer_id = t.singer_id  WHERE t.sales > 300000
SELECT DISTINCT s.name  FROM singer AS s  JOIN song AS t  ON s.singer_id = t.singer_id  WHERE t.sales > 300000
SELECT DISTINCT s.name  FROM singer AS s  JOIN song AS t  ON s.singer_id = t.singer_id  WHERE t.sales > 300000
SELECT DISTINCT s.name  FROM singer AS s  JOIN song AS t  ON s.singer_id = t.singer_id  WHERE t.sales > 300000
SELECT DISTINCT s.name  FROM singer AS s  JOIN song AS t  ON s.singer_id = t.singer_id  WHERE t.sales > 300000",SELECT DISTINCT s.name  FROM singer AS s  JOIN song AS t  ON s.singer_id = t.singer_id  WHERE t.sales > 300000
93,58,What are the first names of every student who has a cat or dog as a pet?,pets_1,extra,SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog',7,"SELECT student.fname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' OR pets.pettype = 'dog'
SELECT student.fname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' OR pets.pettype = 'dog'
SELECT student.fname  FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' OR pets.pettype = 'dog'
SELECT student.fname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' OR pets.pettype = 'dog'
SELECT student.fname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' OR pets.pettype = 'dog'
SELECT student.fname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' OR pets.pettype = 'dog'
SELECT student.fname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' OR pets.pettype = 'dog'",SELECT student.fname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' OR pets.pettype = 'dog'
94,527,List the section_name in reversed lexicographical order.,student_transcripts_tracking,easy,SELECT section_name FROM Sections ORDER BY section_name DESC,7,"SELECT section_name FROM sections ORDER BY section_name DESC
SELECT section_name FROM sections ORDER BY section_name DESC
SELECT section_name FROM sections ORDER BY section_name DESC
SELECT section_name FROM sections ORDER BY section_name DESC
SELECT section_name FROM sections ORDER BY section_name DESC
SELECT section_name FROM sections ORDER BY section_name DESC
SELECT section_name FROM sections ORDER BY section_name DESC",SELECT section_name FROM sections ORDER BY section_name DESC
95,790,"What are the population, name and leader of the country with the largest area?",world_1,medium,"SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1",7,"SELECT country.population, country.name, country.headofstate FROM country ORDER BY country.surfacearea DESC LIMIT 1
SELECT country.population, country.name, country.headofstate FROM country ORDER BY country.surfacearea DESC LIMIT 1
SELECT country.population, country.name, country.headofstate FROM country ORDER BY country.surfacearea DESC LIMIT 1
SELECT country.population, country.name, country.headofstate FROM country ORDER BY country.surfacearea DESC LIMIT 1
SELECT country.population, country.name, country.headofstate FROM country ORDER BY country.surfacearea DESC LIMIT 1
SELECT country.population, country.name, country.headofstate FROM country ORDER BY country.surfacearea DESC LIMIT 1
SELECT country.population, country.name, country.headofstate FROM country ORDER BY country.surfacearea DESC LIMIT 1","SELECT country.population, country.name, country.headofstate FROM country ORDER BY country.surfacearea DESC LIMIT 1"
96,795,How many cities in each district have a population that is above the average population across all cities?,world_1,extra,"SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District",7,"SELECT district, COUNT(name) AS num_cities FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district
SELECT district, COUNT(*) as num_cities_above_avg_population FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district
SELECT district, COUNT(name) AS num_cities FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district
SELECT district, COUNT(name) AS num_cities FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district
SELECT district, COUNT(id) as num_cities FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district
SELECT district, COUNT(name) AS num_cities FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district
SELECT district, COUNT(name) AS num_cities FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district","SELECT district, COUNT(name) AS num_cities FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district"
97,211,How many flights depart from City 'Aberdeen' and have destination City 'Ashley'?,flight_2,hard,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  ""Ashley"" AND T3.City  =  ""Aberdeen""",7,"SELECT COUNT(*) FROM flights  INNER JOIN airports AS source ON flights.sourceairport = source.airportcode  INNER JOIN airports AS dest ON flights.destairport = dest.airportcode  WHERE source.city = 'Aberdeen' AND dest.city = 'Ashley'
SELECT COUNT(*) FROM flights  JOIN airports AS source ON flights.sourceairport = source.airportcode  JOIN airports AS dest ON flights.destairport = dest.airportcode  WHERE source.city = 'Aberdeen' AND dest.city = 'Ashley'
SELECT COUNT(*) FROM flights  INNER JOIN airports AS source ON flights.sourceairport = source.airportcode  INNER JOIN airports AS dest ON flights.destairport = dest.airportcode  WHERE source.city = 'Aberdeen' AND dest.city = 'Ashley'
SELECT COUNT(*) FROM flights  INNER JOIN airports AS source ON flights.sourceairport = source.airportcode  INNER JOIN airports AS dest ON flights.destairport = dest.airportcode  WHERE source.city = 'Aberdeen' AND dest.city = 'Ashley'
SELECT COUNT(*) FROM flights  INNER JOIN airports AS source ON flights.sourceairport = source.airportcode  INNER JOIN airports AS dest ON flights.destairport = dest.airportcode  WHERE source.city = 'Aberdeen' AND dest.city = 'Ashley'
SELECT COUNT(*) FROM flights  INNER JOIN airports AS source ON flights.sourceairport = source.airportcode  INNER JOIN airports AS dest ON flights.destairport = dest.airportcode  WHERE source.city = 'Aberdeen' AND dest.city = 'Ashley'
SELECT COUNT(*) FROM flights  INNER JOIN airports AS source ON flights.sourceairport = source.airportcode  INNER JOIN airports AS dest ON flights.destairport = dest.airportcode  WHERE source.city = 'Aberdeen' AND dest.city = 'Ashley'",SELECT COUNT(*) FROM flights  INNER JOIN airports AS source ON flights.sourceairport = source.airportcode  INNER JOIN airports AS dest ON flights.destairport = dest.airportcode  WHERE source.city = 'Aberdeen' AND dest.city = 'Ashley'
98,79,Find the number of pets for each student who has any pet and student id.,pets_1,medium,"SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid",7,"SELECT has_pet.stuid, COUNT(has_pet.petid) as num_pets FROM has_pet JOIN student ON has_pet.stuid = student.stuid JOIN pets ON has_pet.petid = pets.petid GROUP BY has_pet.stuid
SELECT has_pet.stuid, COUNT(has_pet.petid) as num_pets FROM has_pet JOIN student ON has_pet.stuid = student.stuid JOIN pets ON has_pet.petid = pets.petid GROUP BY has_pet.stuid
SELECT has_pet.stuid, COUNT(has_pet.petid) as num_pets FROM has_pet JOIN student ON has_pet.stuid = student.stuid JOIN pets ON has_pet.petid = pets.petid GROUP BY has_pet.stuid
SELECT has_pet.stuid, COUNT(has_pet.petid) as num_pets FROM has_pet JOIN students ON has_pet.stuid = students.stuid JOIN pets ON has_pet.petid = pets.petid GROUP BY has_pet.stuid
SELECT has_pet.stuid, COUNT(has_pet.petid) as num_pets FROM has_pet JOIN student ON has_pet.stuid = student.stuid JOIN pets ON has_pet.petid = pets.petid GROUP BY has_pet.stuid
SELECT has_pet.stuid, COUNT(has_pet.petid) as num_pets FROM has_pet JOIN student ON has_pet.stuid = student.stuid JOIN pets ON has_pet.petid = pets.petid GROUP BY has_pet.stuid
SELECT has_pet.stuid, COUNT(has_pet.petid) as num_pets FROM has_pet JOIN student ON has_pet.stuid = student.stuid JOIN pets ON has_pet.petid = pets.petid GROUP BY has_pet.stuid","SELECT has_pet.stuid, COUNT(has_pet.petid) as num_pets FROM has_pet JOIN student ON has_pet.stuid = student.stuid JOIN pets ON has_pet.petid = pets.petid GROUP BY has_pet.stuid"
99,95,Which model of the car has the minimum horsepower?,car_1,hard,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;,7,"SELECT model FROM model_list  INNER JOIN car_makers ON model_list.maker = car_makers.id  INNER JOIN car_names ON model_list.model = car_names.model  INNER JOIN cars_data ON car_names.makeid = cars_data.id  WHERE horsepower = (SELECT MIN(horsepower) FROM cars_data)
SELECT model, MIN(horsepower) as min_horsepower FROM car_names INNER JOIN cars_data ON car_names.makeid = cars_data.id GROUP BY model
SELECT model FROM model_list  INNER JOIN car_makers ON model_list.maker = car_makers.id  INNER JOIN car_names ON model_list.model = car_names.model  INNER JOIN cars_data ON car_names.makeid = cars_data.id  WHERE horsepower = (SELECT MIN(horsepower) FROM cars_data)
SELECT model FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  JOIN cars_data ON car_makers.id = cars_data.id  ORDER BY horsepower ASC  LIMIT 1
SELECT model FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  JOIN cars_data ON car_makers.id = cars_data.id  ORDER BY horsepower ASC  LIMIT 1
SELECT model FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  JOIN cars_data ON car_makers.id = cars_data.id  ORDER BY horsepower ASC  LIMIT 1
SELECT model, MIN(horsepower) as min_horsepower FROM car_names JOIN cars_data ON car_names.makeid = cars_data.id GROUP BY model",SELECT model FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  JOIN cars_data ON car_makers.id = cars_data.id  ORDER BY horsepower ASC  LIMIT 1
100,1020,Show distinct names of singers that have songs with sales more than 300000.,singer,medium,SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000,7,"SELECT DISTINCT s.name  FROM singer AS s  JOIN song AS t  ON s.singer_id = t.singer_id  WHERE t.sales > 300000
SELECT DISTINCT s.name  FROM singer AS s  JOIN song AS t  ON s.singer_id = t.singer_id  WHERE t.sales > 300000
SELECT DISTINCT s.name  FROM singer AS s  JOIN song AS t  ON s.singer_id = t.singer_id  WHERE t.sales > 300000
SELECT DISTINCT s.name  FROM singer AS s  JOIN song AS t  ON s.singer_id = t.singer_id  WHERE t.sales > 300000
SELECT DISTINCT s.name  FROM singer AS s  JOIN song AS t  ON s.singer_id = t.singer_id  WHERE t.sales > 300000
SELECT DISTINCT s.name  FROM singer AS s  JOIN song AS t  ON s.singer_id = t.singer_id  WHERE t.sales > 300000
SELECT DISTINCT s.name  FROM singer AS s  JOIN song AS t  ON s.singer_id = t.singer_id  WHERE t.sales > 300000",SELECT DISTINCT s.name  FROM singer AS s  JOIN song AS t  ON s.singer_id = t.singer_id  WHERE t.sales > 300000
101,953,What are each owner's first name and their dogs's name?,dog_kennels,medium,"SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",7,"SELECT owners.first_name, dogs.name, dogs.breed_code, dogs.size_code FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id
SELECT owners.first_name, dogs.name, dogs.breed_code, dogs.size_code FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id
SELECT owners.first_name, dogs.name, dogs.breed_code, dogs.size_code FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id
SELECT owners.first_name, dogs.name, dogs.breed_code, dogs.size_code FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id
SELECT owners.first_name, dogs.name, dogs.breed_code, dogs.size_code FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id
SELECT owners.first_name, dogs.name, dogs.breed_code, dogs.size_code FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id
SELECT owners.first_name, dogs.name, dogs.breed_code, dogs.size_code FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id","SELECT owners.first_name, dogs.name, dogs.breed_code, dogs.size_code FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id"
102,595,Which country has the most of TV Channels? List the country and number of TV Channels it has.,tvshow,hard,"SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;",7,"SELECT t.country, COUNT(t.id) as num_channels FROM tv_channel as t GROUP BY t.country ORDER BY num_channels DESC LIMIT 1
SELECT tv_channel.country, COUNT(tv_channel.id) as Number_of_Channels FROM tv_channel GROUP BY tv_channel.country ORDER BY Number_of_Channels DESC LIMIT 1
SELECT t.country, COUNT(t.id) as num_channels FROM tv_channel as t GROUP BY t.country ORDER BY num_channels DESC LIMIT 1
SELECT t.country, COUNT(t.id) as num_channels FROM tv_channel as t GROUP BY t.country ORDER BY num_channels DESC LIMIT 1
SELECT t.country, COUNT(t.id) as num_channels FROM tv_channel as t GROUP BY t.country ORDER BY num_channels DESC LIMIT 1
SELECT tv_channel.country, COUNT(tv_channel.id) as Number_of_TV_Channels FROM tv_channel GROUP BY tv_channel.country ORDER BY Number_of_TV_Channels DESC LIMIT 1
SELECT t.country, COUNT(t.id) as Number_of_Channels FROM tv_channel as t GROUP BY t.country ORDER BY Number_of_Channels DESC LIMIT 1","SELECT t.country, COUNT(t.id) as num_channels FROM tv_channel as t GROUP BY t.country ORDER BY num_channels DESC LIMIT 1"
103,811,Give the total population and average surface area corresponding to countries in North America that have a surface area greater than 3000 .,world_1,hard,"select sum(population) ,  avg(surfacearea) from country where continent  =  ""north america"" and surfacearea  >  3000",7,"SELECT SUM(country.population), AVG(country.surfacearea) FROM country WHERE country.continent = 'North America' AND country.surfacearea > 3000
SELECT SUM(country.population), AVG(country.surfacearea) FROM country WHERE country.continent = 'North America' AND country.surfacearea > 3000
SELECT SUM(country.population), AVG(country.surfacearea) FROM country WHERE country.continent = 'North America' AND country.surfacearea > 3000
SELECT SUM(country.population), AVG(country.surfacearea) FROM country WHERE country.continent = 'North America' AND country.surfacearea > 3000
SELECT SUM(country.population), AVG(country.surfacearea) FROM country WHERE country.continent = 'North America' AND country.surfacearea > 3000
SELECT SUM(country.population), AVG(country.surfacearea) FROM country WHERE country.continent = 'North America' AND country.surfacearea > 3000
SELECT SUM(country.population), AVG(country.surfacearea) FROM country WHERE country.continent = 'North America' AND country.surfacearea > 3000","SELECT SUM(country.population), AVG(country.surfacearea) FROM country WHERE country.continent = 'North America' AND country.surfacearea > 3000"
104,172,What are the different models wthat are lighter than 3500 but were not built by the Ford Motor Company?,car_1,extra,SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';,7,"SELECT DISTINCT model FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  JOIN car_names ON model_list.model = car_names.model  JOIN cars_data ON car_names.makeid = cars_data.id  WHERE cars_data.weight < 3500 AND car_makers.maker != 'Ford Motor Company'
SELECT DISTINCT model FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  JOIN countries ON car_makers.country = countries.countryid  JOIN car_names ON model_list.modelid = car_names.makeid  JOIN cars_data ON car_names.makeid = cars_data.id  WHERE cars_data.weight < 3500 AND car_makers.maker != 'Ford Motor Company'
SELECT DISTINCT model FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  JOIN car_names ON model_list.model = car_names.model  JOIN cars_data ON car_names.makeid = cars_data.id  WHERE cars_data.weight < 3500 AND car_makers.maker != 'Ford Motor Company'
SELECT DISTINCT model  FROM car_names  INNER JOIN model_list ON car_names.makeid = model_list.modelid  INNER JOIN car_makers ON model_list.maker = car_makers.id  INNER JOIN cars_data ON car_names.makeid = cars_data.id  WHERE cars_data.weight < 3500 AND car_makers.fullname NOT LIKE '%Ford Motor Company%'
SELECT DISTINCT model FROM car_names  INNER JOIN model_list ON car_names.makeid = model_list.modelid  INNER JOIN car_makers ON model_list.maker = car_makers.id  INNER JOIN cars_data ON car_names.makeid = cars_data.id  WHERE cars_data.weight < 3500 AND car_makers.fullname NOT LIKE '%Ford Motor Company%'
SELECT DISTINCT model  FROM car_names  INNER JOIN model_list ON car_names.makeid = model_list.modelid  INNER JOIN car_makers ON model_list.maker = car_makers.id  INNER JOIN cars_data ON car_names.makeid = cars_data.id  WHERE cars_data.weight < 3500 AND car_makers.maker != 'Ford'
SELECT DISTINCT model FROM car_names  INNER JOIN model_list ON car_names.makeid = model_list.modelid  INNER JOIN car_makers ON model_list.maker = car_makers.id  INNER JOIN cars_data ON car_names.makeid = cars_data.id  WHERE cars_data.weight < 3500 AND car_makers.fullname NOT LIKE '%Ford Motor Company%'",SELECT DISTINCT model FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  JOIN car_names ON model_list.model = car_names.model  JOIN cars_data ON car_names.makeid = cars_data.id  WHERE cars_data.weight < 3500 AND car_makers.maker != 'Ford Motor Company'
105,123,What are the countries having at least one car maker? List name and id.,car_1,medium,"SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;",7,"SELECT c.countryname, c.countryid FROM countries AS c JOIN car_makers AS cm ON c.countryid = cm.country JOIN continents AS cont ON c.continent = cont.contid WHERE cont.continent IN ('Europe', 'Asia', 'North America', 'South America', 'Africa', 'Oceania') GROUP BY c.countryname, c.countryid HAVING COUNT(cm.id) >= 1
SELECT c.countryname, c.countryid  FROM countries AS c  JOIN car_makers AS cm ON c.countryid = cm.country  JOIN continents AS cont ON c.continent = cont.contid  GROUP BY c.countryid  HAVING COUNT(cm.id) >= 1
SELECT c.countryname, c.countryid FROM countries AS c JOIN car_makers AS cm ON c.countryid = cm.country JOIN continents AS cont ON c.continent = cont.contid WHERE cont.continent IN ('Europe', 'Asia', 'North America', 'South America', 'Africa', 'Oceania') GROUP BY c.countryname, c.countryid HAVING COUNT(cm.id) >= 1
SELECT c.countryname, c.countryid FROM countries AS c JOIN car_makers AS cm ON c.countryid = cm.country GROUP BY c.countryid HAVING COUNT(cm.id) >= 1
SELECT c.countryname, c.countryid FROM countries AS c JOIN car_makers AS cm ON c.countryid = cm.country JOIN continents AS cont ON c.continent = cont.contid WHERE cont.continent IN ('Europe', 'Asia', 'North America', 'South America', 'Africa', 'Oceania') GROUP BY c.countryname, c.countryid HAVING COUNT(cm.id) >= 1
SELECT c.countryname, c.countryid  FROM countries AS c  JOIN car_makers AS cm ON c.countryid = cm.country  JOIN continents AS cont ON c.continent = cont.contid  GROUP BY c.countryid  HAVING COUNT(cm.id) >= 1
SELECT c.countryname, c.countryid FROM countries AS c JOIN car_makers AS cm ON c.countryid = cm.country JOIN continents AS cont ON c.continent = cont.contid WHERE cont.continent IN ('Europe', 'Asia', 'North America', 'South America', 'Africa', 'Oceania') GROUP BY c.countryname, c.countryid HAVING COUNT(cm.id) >= 1","SELECT c.countryname, c.countryid FROM countries AS c JOIN car_makers AS cm ON c.countryid = cm.country JOIN continents AS cont ON c.continent = cont.contid WHERE cont.continent IN ('Europe', 'Asia', 'North America', 'South America', 'Africa', 'Oceania') GROUP BY c.countryname, c.countryid HAVING COUNT(cm.id) >= 1"
106,936,Which owner has paid for the most treatments on his or her dogs? List the owner id and last name.,dog_kennels,extra,"SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT o.owner_id, o.last_name, COUNT(t.treatment_id) AS num_treatments FROM owners o JOIN dogs d ON o.owner_id = d.owner_id JOIN treatments t ON d.dog_id = t.dog_id GROUP BY o.owner_id, o.last_name ORDER BY num_treatments DESC LIMIT 1
SELECT o.owner_id, o.last_name, COUNT(t.treatment_id) AS num_treatments FROM owners o JOIN dogs d ON o.owner_id = d.owner_id JOIN treatments t ON d.dog_id = t.dog_id GROUP BY o.owner_id, o.last_name ORDER BY num_treatments DESC LIMIT 1
SELECT o.owner_id, o.last_name, COUNT(t.treatment_id) AS num_treatments FROM owners o JOIN dogs d ON o.owner_id = d.owner_id JOIN treatments t ON d.dog_id = t.dog_id GROUP BY o.owner_id, o.last_name ORDER BY num_treatments DESC LIMIT 1
SELECT o.owner_id, o.last_name, COUNT(t.treatment_id) AS num_treatments FROM owners o JOIN dogs d ON o.owner_id = d.owner_id JOIN treatments t ON d.dog_id = t.dog_id GROUP BY o.owner_id, o.last_name ORDER BY num_treatments DESC LIMIT 1
SELECT owners.owner_id, owners.last_name, COUNT(treatments.treatment_id) AS treatment_count FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN treatments ON dogs.dog_id = treatments.dog_id GROUP BY owners.owner_id ORDER BY treatment_count DESC LIMIT 1
SELECT owners.owner_id, owners.last_name, COUNT(treatments.treatment_id) as treatment_count FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN treatments ON dogs.dog_id = treatments.dog_id GROUP BY owners.owner_id ORDER BY treatment_count DESC LIMIT 1
SELECT owners.owner_id, owners.last_name, COUNT(treatments.treatment_id) as treatment_count FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN treatments ON dogs.dog_id = treatments.dog_id GROUP BY owners.owner_id ORDER BY treatment_count DESC LIMIT 1","SELECT o.owner_id, o.last_name, COUNT(t.treatment_id) AS num_treatments FROM owners o JOIN dogs d ON o.owner_id = d.owner_id JOIN treatments t ON d.dog_id = t.dog_id GROUP BY o.owner_id, o.last_name ORDER BY num_treatments DESC LIMIT 1"
107,911,What are the names of high schoolers who have a grade of over 5 and have 2 or more friends?,network_1,hard,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2,7,"SELECT highschooler.name  FROM highschooler  JOIN friend ON highschooler.id = friend.student_id  JOIN (SELECT student_id FROM friend GROUP BY student_id HAVING COUNT(friend_id) >= 2) AS friends_count ON highschooler.id = friends_count.student_id  WHERE highschooler.grade > 5 GROUP BY highschooler.id, highschooler.name
SELECT highschooler.name  FROM highschooler  JOIN friend ON highschooler.id = friend.student_id GROUP BY highschooler.id HAVING COUNT(friend.friend_id) >= 2 AND highschooler.grade > 5
SELECT highschooler.name  FROM highschooler  JOIN friend ON highschooler.id = friend.student_id  JOIN (SELECT student_id FROM friend GROUP BY student_id HAVING COUNT(friend_id) >= 2) AS friends_count ON highschooler.id = friends_count.student_id  WHERE highschooler.grade > 5 GROUP BY highschooler.id
SELECT highschooler.name  FROM highschooler  JOIN friend ON highschooler.id = friend.student_id  JOIN (SELECT student_id FROM friend GROUP BY student_id HAVING COUNT(friend_id) >= 2) AS friends_count ON highschooler.id = friends_count.student_id  WHERE highschooler.grade > 5 GROUP BY highschooler.id
SELECT highschooler.name  FROM highschooler  INNER JOIN friend ON highschooler.id = friend.student_id  INNER JOIN likes ON highschooler.id = likes.student_id  WHERE highschooler.grade > 5  GROUP BY highschooler.id  HAVING COUNT(friend.friend_id) >= 2 AND COUNT(likes.liked_id) >= 2
SELECT highschooler.name  FROM highschooler  JOIN friend ON highschooler.id = friend.student_id  JOIN (SELECT student_id FROM friend GROUP BY student_id HAVING COUNT(friend_id) >= 2) AS friends_count ON highschooler.id = friends_count.student_id  WHERE highschooler.grade > 5 GROUP BY highschooler.id
SELECT highschooler.name  FROM highschooler  JOIN friend ON highschooler.id = friend.student_id  JOIN (SELECT student_id FROM friend GROUP BY student_id HAVING COUNT(friend_id) >= 2) AS friends_count ON highschooler.id = friends_count.student_id  WHERE highschooler.grade > 5 GROUP BY highschooler.id",SELECT highschooler.name  FROM highschooler  JOIN friend ON highschooler.id = friend.student_id  JOIN (SELECT student_id FROM friend GROUP BY student_id HAVING COUNT(friend_id) >= 2) AS friends_count ON highschooler.id = friends_count.student_id  WHERE highschooler.grade > 5 GROUP BY highschooler.id
108,299,"List document IDs, document names, and document descriptions for all documents.",cre_Doc_Template_Mgt,medium,"SELECT document_id ,  document_name ,  document_description FROM Documents",7,"SELECT documents.document_id, documents.document_name, documents.document_description FROM documents JOIN templates ON documents.template_id = templates.template_id JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code
SELECT documents.document_id, documents.document_name, documents.document_description  FROM documents  JOIN templates ON documents.template_id = templates.template_id  JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code
SELECT documents.document_id, documents.document_name, documents.document_description FROM documents JOIN templates ON documents.template_id = templates.template_id JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code
SELECT documents.document_id, documents.document_name, documents.document_description  FROM documents  JOIN templates ON documents.template_id = templates.template_id  JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code
SELECT documents.document_id, documents.document_name, documents.document_description  FROM documents  JOIN templates ON documents.template_id = templates.template_id  JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code
SELECT documents.document_id, documents.document_name, documents.document_description FROM documents JOIN templates ON documents.template_id = templates.template_id JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code
SELECT documents.document_id, documents.document_name, documents.document_description FROM documents JOIN templates ON documents.template_id = templates.template_id JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code","SELECT documents.document_id, documents.document_name, documents.document_description FROM documents JOIN templates ON documents.template_id = templates.template_id JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code"
109,576,What is the id of the semester that had both Masters and Bachelors students enrolled?,student_transcripts_tracking,extra,SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor',7,"SELECT semesters.semester_id FROM semesters JOIN student_enrolment ON semesters.se
SELECT semesters.semester_id FROM semesters JOIN student_enrolment ON semesters.se
SELECT semesters.semester_id FROM semesters JOIN student_enrolment ON semesters.se
SELECT semesters.semester_id FROM semesters JOIN student_enrolment ON semesters.se
SELECT semesters.semester_id FROM semesters JOIN student_enrolment ON semesters.se
SELECT semesters.semester_id FROM semesters JOIN student_enrolment ON semesters.se
SELECT semesters.semester_id FROM semesters JOIN student_enrolment ON semesters.se",SELECT semesters.semester_id FROM semesters JOIN student_enrolment ON semesters.se
110,804,What are the names of the nations with the 3 lowest populations?,world_1,medium,SELECT Name FROM country ORDER BY Population ASC LIMIT 3,7,"SELECT name FROM country ORDER BY population ASC LIMIT 3
SELECT name FROM country ORDER BY population ASC LIMIT 3
SELECT name FROM country ORDER BY population ASC LIMIT 3
SELECT name FROM country ORDER BY population ASC LIMIT 3
SELECT name FROM country ORDER BY population ASC LIMIT 3
SELECT name FROM country ORDER BY population ASC LIMIT 3
SELECT name FROM country ORDER BY population ASC LIMIT 3",SELECT name FROM country ORDER BY population ASC LIMIT 3
111,97,Find the model of the car whose weight is below the average weight.,car_1,extra,SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA),7,"SELECT c.model FROM car_names AS c JOIN cars_data AS d ON c.makeid = d.id WHERE d.weight < (SELECT AVG(weight) FROM cars_data)
SELECT c.model FROM car_names AS c JOIN cars_data AS d ON c.makeid = d.id WHERE d.weight < (SELECT AVG(weight) FROM cars_data)
SELECT c.model FROM car_names AS c JOIN cars_data AS d ON c.makeid = d.id WHERE d.weight < (SELECT AVG(weight) FROM cars_data)
SELECT c.model FROM car_names AS c JOIN cars_data AS d ON c.makeid = d.id WHERE d.weight < (SELECT AVG(weight) FROM cars_data)
SELECT c.model FROM car_names AS c JOIN cars_data AS d ON c.makeid = d.id WHERE d.weight < (SELECT AVG(weight) FROM cars_data)
SELECT c.model FROM car_names AS c JOIN cars_data AS d ON c.makeid = d.id WHERE d.weight < (SELECT AVG(weight) FROM cars_data)
SELECT c.model FROM car_names AS c JOIN cars_data AS d ON c.makeid = d.id WHERE d.weight < (SELECT AVG(weight) FROM cars_data)",SELECT c.model FROM car_names AS c JOIN cars_data AS d ON c.makeid = d.id WHERE d.weight < (SELECT AVG(weight) FROM cars_data)
112,760,Find the city with the largest population that uses English.,world_1,extra,"SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  ""English"" ORDER BY T1.Population DESC LIMIT 1",7,"SELECT city.name, city.population FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode WHERE countrylanguage.language = 'English' ORDER BY city.population DESC LIMIT 1
SELECT city.name, city.population FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode WHERE countrylanguage.language = 'English' ORDER BY city.population DESC LIMIT 1
SELECT city.name, city.population FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode WHERE countrylanguage.language = 'English' ORDER BY city.population DESC LIMIT 1
SELECT city.name, city.population FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode WHERE countrylanguage.language = 'English' ORDER BY city.population DESC LIMIT 1
SELECT city.name, city.population FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode WHERE countrylanguage.language = 'English' ORDER BY city.population DESC LIMIT 1
SELECT city.name, city.population FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode WHERE countrylanguage.language = 'English' ORDER BY city.population DESC LIMIT 1
SELECT city.name, city.population FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode WHERE countrylanguage.language = 'English' ORDER BY city.population DESC LIMIT 1","SELECT city.name, city.population FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode WHERE countrylanguage.language = 'English' ORDER BY city.population DESC LIMIT 1"
113,747,Give the names of nations that speak both English and French.,world_1,extra,"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""French""",7,"SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language IN ('English', 'French') GROUP BY country.name HAVING COUNT(DISTINCT countrylanguage.language) = 2
SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language IN ('English', 'French') GROUP BY country.name HAVING COUNT(DISTINCT countrylanguage.language) = 2
SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language IN ('English', 'French') GROUP BY country.name HAVING COUNT(DISTINCT countrylanguage.language) = 2
SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language IN ('English', 'French') GROUP BY country.name HAVING COUNT(DISTINCT countrylanguage.language) = 2
SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language IN ('English', 'French') GROUP BY country.name HAVING COUNT(DISTINCT countrylanguage.language) = 2
SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language IN ('English', 'French') GROUP BY country.name HAVING COUNT(DISTINCT countrylanguage.language) = 2
SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language IN ('English', 'French') GROUP BY country.name HAVING COUNT(DISTINCT countrylanguage.language) = 2","SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language IN ('English', 'French') GROUP BY country.name HAVING COUNT(DISTINCT countrylanguage.language) = 2"
114,500,What is the ship id and name that caused most total injuries?,battle_death,extra,"SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1",7,"SELECT ship.id, ship.name, SUM(death.injured) as total_injuries FROM ship JOIN death ON ship.id = death.caused_by_ship_id GROUP BY ship.id, ship.name ORDER BY total_injuries DESC LIMIT 1
SELECT ship.id, ship.name, SUM(death.injured) as total_injuries FROM ship JOIN death ON ship.id = death.caused_by_ship_id GROUP BY ship.id, ship.name ORDER BY total_injuries DESC LIMIT 1
SELECT ship.id, ship.name, SUM(death.injured) as total_injuries FROM ship JOIN death ON ship.id = death.caused_by_ship_id GROUP BY ship.id, ship.name ORDER BY total_injuries DESC LIMIT 1
SELECT ship.id, ship.name, SUM(death.injured) as total_injuries FROM ship JOIN death ON ship.id = death.caused_by_ship_id GROUP BY ship.id, ship.name ORDER BY total_injuries DESC LIMIT 1
SELECT ship.id, ship.name, SUM(death.injured) as total_injuries FROM ship JOIN death ON ship.id = death.caused_by_ship_id GROUP BY ship.id, ship.name ORDER BY total_injuries DESC LIMIT 1
SELECT ship.id, ship.name, SUM(death.injured) as total_injuries FROM ship JOIN death ON ship.id = death.caused_by_ship_id GROUP BY ship.id, ship.name ORDER BY total_injuries DESC LIMIT 1
SELECT ship.id, ship.name, SUM(death.injured) as total_injuries FROM ship JOIN death ON ship.id = death.caused_by_ship_id GROUP BY ship.id, ship.name ORDER BY total_injuries DESC LIMIT 1","SELECT ship.id, ship.name, SUM(death.injured) as total_injuries FROM ship JOIN death ON ship.id = death.caused_by_ship_id GROUP BY ship.id, ship.name ORDER BY total_injuries DESC LIMIT 1"
115,376,Return the id of the document with the fewest paragraphs.,cre_Doc_Template_Mgt,hard,SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1,7,"SELECT documents.document_id  FROM documents  JOIN paragraphs ON documents.document_id = paragraphs.document_id  GROUP BY documents.document_id  ORDER BY COUNT(paragraphs.paragraph_id) ASC  LIMIT 1
SELECT documents.document_id  FROM documents  JOIN paragraphs ON documents.document_id = paragraphs.document_id  GROUP BY documents.document_id  ORDER BY COUNT(paragraphs.paragraph_id) ASC  LIMIT 1
SELECT documents.document_id  FROM documents  JOIN paragraphs ON documents.document_id = paragraphs.document_id  GROUP BY documents.document_id  ORDER BY COUNT(paragraphs.paragraph_id) ASC  LIMIT 1
SELECT documents.document_id  FROM documents  JOIN paragraphs ON documents.document_id = paragraphs.document_id  GROUP BY documents.document_id  ORDER BY COUNT(paragraphs.paragraph_id) ASC  LIMIT 1
SELECT documents.document_id  FROM documents  JOIN paragraphs ON documents.document_id = paragraphs.document_id  GROUP BY documents.document_id  ORDER BY COUNT(paragraphs.paragraph_id) ASC  LIMIT 1
SELECT documents.document_id  FROM documents  JOIN paragraphs ON documents.document_id = paragraphs.document_id  GROUP BY documents.document_id  ORDER BY COUNT(paragraphs.paragraph_id) ASC  LIMIT 1
SELECT documents.document_id  FROM documents  JOIN paragraphs ON documents.document_id = paragraphs.document_id  GROUP BY documents.document_id  ORDER BY COUNT(paragraphs.paragraph_id) ASC  LIMIT 1",SELECT documents.document_id  FROM documents  JOIN paragraphs ON documents.document_id = paragraphs.document_id  GROUP BY documents.document_id  ORDER BY COUNT(paragraphs.paragraph_id) ASC  LIMIT 1
116,864,Show the names and grades of each high schooler.,network_1,medium,"SELECT name ,  grade FROM Highschooler",7,"SELECT h.name, h.grade FROM highschooler AS h
SELECT h.name, h.grade FROM highschooler h
SELECT name, grade FROM highschooler
SELECT h.name, h.grade FROM highschooler h
SELECT Highschooler.name, Highschooler.grade FROM Highschooler WHERE Highschooler.id IN (SELECT student_id FROM friend) AND Highschooler.id IN (SELECT liked_id FROM likes)
SELECT h.name, h.grade FROM highschooler h
SELECT h.name, h.grade FROM highschooler AS h","SELECT h.name, h.grade FROM highschooler h"
117,24,Show the stadium name and capacity with most number of concerts in year 2014 or after.,concert_singer,extra,"SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT stadium.name, stadium.capacity FROM stadium JOIN (     SELECT concert.stadium_id, COUNT(*) as num_concerts     FROM concert     WHERE year >= 2014     GROUP BY concert.stadium_id     ORDER BY num_concerts DESC     LIMIT 1 ) as most_concerts ON stadium.stadium_id = most_concerts.stadium_id
SELECT stadium.name, stadium.capacity FROM stadium JOIN (     SELECT concert.stadium_id, COUNT(*) as num_concerts     FROM concert     WHERE year >= 2014     GROUP BY concert.stadium_id     ORDER BY num_concerts DESC     LIMIT 1 ) as most_concerts ON stadium.stadium_id = most_concerts.stadium_id
SELECT stadium.name, stadium.capacity FROM stadium JOIN (     SELECT concert.stadium_id, COUNT(*) as num_concerts     FROM concert     WHERE year >= 2014     GROUP BY concert.stadium_id     ORDER BY num_concerts DESC     LIMIT 1 ) as most_concerts ON stadium.stadium_id = most_concerts.stadium_id
SELECT stadium.name, stadium.capacity FROM stadium JOIN (     SELECT concert.stadium_id, COUNT(*) as num_concerts     FROM concert     WHERE year >= 2014     GROUP BY concert.stadium_id     ORDER BY num_concerts DESC     LIMIT 1 ) as most_concerts ON stadium.stadium_id = most_concerts.stadium_id
SELECT stadium.name, stadium.capacity FROM stadium JOIN (SELECT concert.stadium_id, COUNT(*) as num_concerts       FROM concert       WHERE year >= 2014       GROUP BY concert.stadium_id       ORDER BY num_concerts DESC       LIMIT 1) as most_concerts ON stadium.stadium_id = most_concerts.stadium_id
SELECT stadium.name, stadium.capacity FROM stadium JOIN (     SELECT concert.stadium_id, COUNT(*) as num_concerts     FROM concert     WHERE year >= 2014     GROUP BY concert.stadium_id     ORDER BY num_concerts DESC     LIMIT 1 ) as most_concerts ON stadium.stadium_id = most_concerts.stadium_id
SELECT stadium.name, stadium.capacity FROM stadium JOIN (     SELECT concert.stadium_id, COUNT(*) as num_concerts     FROM concert     WHERE year >= 2014     GROUP BY concert.stadium_id     ORDER BY num_concerts DESC     LIMIT 1 ) as most_concerts ON stadium.stadium_id = most_concerts.stadium_id","SELECT stadium.name, stadium.capacity FROM stadium JOIN (     SELECT concert.stadium_id, COUNT(*) as num_concerts     FROM concert     WHERE year >= 2014     GROUP BY concert.stadium_id     ORDER BY num_concerts DESC     LIMIT 1 ) as most_concerts ON stadium.stadium_id = most_concerts.stadium_id"
118,982,How many professionals did not operate any treatment on dogs?,dog_kennels,extra,SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments ),7,"SELECT COUNT(DISTINCT professionals.professional_id)  FROM professionals  LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id  WHERE treatments.treatment_id IS NULL
SELECT COUNT(DISTINCT professionals.professional_id)  FROM professionals  LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id  WHERE treatments.treatment_id IS NULL
SELECT COUNT(DISTINCT professionals.professional_id)  FROM professionals  LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id  WHERE treatments.treatment_id IS NULL
SELECT COUNT(DISTINCT professionals.professional_id)  FROM professionals  LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id  WHERE treatments.treatment_id IS NULL
SELECT COUNT(DISTINCT professionals.professional_id)  FROM professionals  LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id  WHERE treatments.treatment_id IS NULL
SELECT COUNT(DISTINCT professionals.professional_id)  FROM professionals  LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id  WHERE treatments.treatment_id IS NULL
SELECT COUNT(DISTINCT professionals.professional_id)  FROM professionals  LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id  WHERE treatments.treatment_id IS NULL",SELECT COUNT(DISTINCT professionals.professional_id)  FROM professionals  LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id  WHERE treatments.treatment_id IS NULL
119,284,Which shop has the most employees? Give me the shop name.,employee_hire_evaluation,extra,SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1,7,"SELECT s.name, COUNT(h.employee_id) AS num_employees FROM shop AS s JOIN hiring AS h ON s.shop_id = h.shop_id GROUP BY s.shop_id ORDER BY num_employees DESC LIMIT 1
SELECT s.name, COUNT(h.employee_id) AS employee_count FROM shop AS s JOIN hiring AS h ON s.shop_id = h.shop_id GROUP BY s.shop_id ORDER BY employee_count DESC LIMIT 1
SELECT s.name, COUNT(h.employee_id) AS employee_count FROM shop AS s JOIN hiring AS h ON s.shop_id = h.shop_id GROUP BY s.shop_id ORDER BY employee_count DESC LIMIT 1
SELECT s.name, COUNT(h.employee_id) AS employee_count FROM shop AS s JOIN hiring AS h ON s.shop_id = h.shop_id GROUP BY s.shop_id ORDER BY employee_count DESC LIMIT 1
SELECT s.name, COUNT(h.employee_id) AS num_employees FROM shop AS s JOIN hiring AS h ON s.shop_id = h.shop_id GROUP BY s.shop_id ORDER BY num_employees DESC LIMIT 1
SELECT s.name, COUNT(h.employee_id) AS num_employees FROM shop AS s JOIN hiring AS h ON s.shop_id = h.shop_id GROUP BY s.shop_id ORDER BY num_employees DESC LIMIT 1
SELECT s.name, COUNT(h.employee_id) AS employee_count FROM shop AS s JOIN hiring AS h ON s.shop_id = h.shop_id GROUP BY s.shop_id ORDER BY employee_count DESC LIMIT 1","SELECT s.name, COUNT(h.employee_id) AS employee_count FROM shop AS s JOIN hiring AS h ON s.shop_id = h.shop_id GROUP BY s.shop_id ORDER BY employee_count DESC LIMIT 1"
120,152,What are the different models created by either the car maker General Motors or weighed more than 3500?,car_1,extra,SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;,7,"SELECT DISTINCT model FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  WHERE car_makers.maker IN ('General Motors')  OR (SELECT weight FROM cars_data WHERE cars_data.id = car_names.makeid AND weight > 3500)
SELECT DISTINCT model FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  WHERE car_makers.maker IN (SELECT id FROM car_makers WHERE maker = 'General Motors')  OR (SELECT weight FROM cars_data WHERE model_list.model = cars_data.id) > 3500
SELECT DISTINCT model FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  WHERE car_makers.maker IN (SELECT id FROM car_makers WHERE maker = 'General Motors')  OR (SELECT weight FROM cars_data WHERE model_list.model = cars_data.id) > 3500
SELECT DISTINCT model FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  WHERE car_makers.maker IN (SELECT id FROM car_makers WHERE maker = 'General Motors')  OR (SELECT weight FROM cars_data WHERE model_list.model = cars_data.id) > 3500
SELECT DISTINCT model FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  WHERE car_makers.maker IN (SELECT id FROM car_makers WHERE maker = 'General Motors')  OR (SELECT weight FROM cars_data WHERE model_list.model = cars_data.id) > 3500
SELECT DISTINCT model FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  WHERE car_makers.maker IN (SELECT id FROM car_makers WHERE maker = 'General Motors')  OR (SELECT weight FROM cars_data WHERE model_list.model = cars_data.id) > 3500
SELECT DISTINCT model FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  WHERE car_makers.maker IN (SELECT id FROM car_makers WHERE maker = 'General Motors')  OR (SELECT weight FROM cars_data WHERE model_list.model = cars_data.id) > 3500",SELECT DISTINCT model FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  WHERE car_makers.maker IN (SELECT id FROM car_makers WHERE maker = 'General Motors')  OR (SELECT weight FROM cars_data WHERE model_list.model = cars_data.id) > 3500
121,488,"What is the first name, country code, and birth date of the player with the most winner rank points across all matches?",wta_1,hard,"SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1",7,"SELECT players.first_name, players.country_code, players.birth_date FROM players JOIN (     SELECT winner_id AS player_id, SUM(winner_rank_points) AS total_rank_points     FROM matches     GROUP BY winner_id     ORDER BY total_rank_points DESC     LIMIT 1 ) AS most_rank_points ON players.player_id = most_rank_points.player_id
SELECT players.first_name, players.country_code, players.birth_date FROM players JOIN (     SELECT winner_id AS player_id, SUM(winner_rank_points) AS total_rank_points     FROM matches     GROUP BY winner_id     ORDER BY total_rank_points DESC     LIMIT 1 ) AS most_rank_points ON players.player_id = most_rank_points.player_id
SELECT players.first_name, players.country_code, players.birth_date FROM players JOIN (     SELECT winner_id     FROM (         SELECT winner_id, SUM(winner_rank_points) AS total_rank_points         FROM matches         GROUP BY winner_id         ORDER BY total_rank_points DESC         LIMIT 1     ) ) AS winners ON players.player_id = winners.winner_id
SELECT players.first_name, players.country_code, players.birth_date FROM players JOIN (     SELECT winner_id AS player_id, SUM(winner_rank_points) AS total_rank_points     FROM matches     GROUP BY winner_id     ORDER BY total_rank_points DESC     LIMIT 1 ) AS most_rank_points ON players.player_id = most_rank_points.player_id
SELECT players.first_name, players.country_code, players.birth_date FROM players JOIN (     SELECT winner_id     FROM (         SELECT winner_id, SUM(winner_rank_points) AS total_rank_points         FROM matches         GROUP BY winner_id     )     ORDER BY total_rank_points DESC     LIMIT 1 ) AS most_rank_points ON players.player_id = most_rank_points.winner_id
SELECT players.first_name, players.country_code, players.birth_date FROM players JOIN (     SELECT winner_id     FROM (         SELECT winner_id, SUM(winner_rank_points) as total_points         FROM matches         GROUP BY winner_id         ORDER BY total_points DESC         LIMIT 1     ) ) AS winners ON players.player_id = winners.winner_id
SELECT players.first_name, players.country_code, players.birth_date FROM players JOIN (     SELECT winner_id     FROM (         SELECT winner_id, SUM(winner_rank_points) as total_rank_points         FROM matches         GROUP BY winner_id     )     ORDER BY total_rank_points DESC     LIMIT 1 ) as winners ON players.player_id = winners.winner_id","SELECT players.first_name, players.country_code, players.birth_date FROM players JOIN (     SELECT winner_id AS player_id, SUM(winner_rank_points) AS total_rank_points     FROM matches     GROUP BY winner_id     ORDER BY total_rank_points DESC     LIMIT 1 ) AS most_rank_points ON players.player_id = most_rank_points.player_id"
122,945,Which professionals have operated a treatment that costs less than the average? Give me theor first names and last names.,dog_kennels,extra,"SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )",7,"SELECT professionals.first_name, professionals.last_name FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id GROUP BY professionals.professional_id HAVING AVG(treatments.cost_of_treatment) < (SELECT AVG(cost_of_treatment) FROM treatments)
SELECT professionals.first_name, professionals.last_name FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id GROUP BY professionals.professional_id HAVING AVG(treatments.cost_of_treatment) < (SELECT AVG(cost_of_treatment) FROM treatments)
SELECT professionals.first_name, professionals.last_name FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id GROUP BY professionals.professional_id HAVING AVG(treatments.cost_of_treatment) < (SELECT AVG(cost_of_treatment) FROM treatments)
SELECT professionals.first_name, professionals.last_name FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id GROUP BY professionals.professional_id HAVING AVG(treatments.cost_of_treatment) < (SELECT AVG(cost_of_treatment) FROM treatments)
SELECT professionals.first_name, professionals.last_name FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id GROUP BY professionals.professional_id HAVING AVG(treatments.cost_of_treatment) < (SELECT AVG(cost_of_treatment) FROM treatments)
SELECT professionals.first_name, professionals.last_name FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id GROUP BY professionals.professional_id HAVING AVG(treatments.cost_of_treatment) < (SELECT AVG(cost_of_treatment) FROM treatments)
SELECT professionals.first_name, professionals.last_name FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id GROUP BY professionals.professional_id HAVING AVG(treatments.cost_of_treatment) < (SELECT AVG(cost_of_treatment) FROM treatments)","SELECT professionals.first_name, professionals.last_name FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id GROUP BY professionals.professional_id HAVING AVG(treatments.cost_of_treatment) < (SELECT AVG(cost_of_treatment) FROM treatments)"
123,197,Which city and country is the Alton airport at?,flight_2,medium,"SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  ""Alton""",7,"SELECT airports.city, airports.country FROM airports WHERE airports.airportname = 'Alton Airport'
SELECT airports.city, airports.country FROM airports WHERE airports.airportname = 'Alton Airport'
SELECT airports.city, airports.country FROM airports WHERE airports.airportname = 'Alton Airport'
SELECT airports.city, airports.country FROM airports WHERE airports.airportname = 'Alton Airport'
SELECT airports.city, airports.country FROM airports WHERE airports.airportname = 'Alton Airport'
SELECT airports.city, airports.country FROM airports WHERE airports.airportname = 'Alton Airport'
SELECT airports.city, airports.country FROM airports WHERE airports.airportname = 'Alton Airport'","SELECT airports.city, airports.country FROM airports WHERE airports.airportname = 'Alton Airport'"
124,785,What are the names of cities in Europe for which English is not the official language?,world_1,extra,SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English'),7,"SELECT city.name  FROM city  JOIN country ON city.countrycode = country.code  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE country.continent = 'Europe' AND countrylanguage.language = 'English' AND countrylanguage.isofficial = 'F'
SELECT city.name  FROM city  JOIN country ON city.countrycode = country.code  JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode  WHERE country.continent = 'Europe' AND countrylanguage.language = 'English' AND countrylanguage.isofficial = 'F'
SELECT city.name  FROM city  JOIN country ON city.countrycode = country.code  JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode  WHERE country.continent = 'Europe' AND countrylanguage.language = 'English' AND countrylanguage.isofficial = 'F'
SELECT city.name  FROM city  JOIN country ON city.countrycode = country.code  JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode  WHERE country.continent = 'Europe' AND countrylanguage.language = 'English' AND countrylanguage.isofficial = 'F'
SELECT city.name  FROM city  JOIN country ON city.countrycode = country.code  JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode  WHERE country.continent = 'Europe' AND countrylanguage.language = 'English' AND countrylanguage.isofficial = 'F'
SELECT city.name  FROM city  JOIN country ON city.countrycode = country.code  JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode  WHERE country.continent = 'Europe' AND countrylanguage.language = 'English' AND countrylanguage.isofficial = 'F'
SELECT city.name  FROM city  JOIN country ON city.countrycode = country.code  JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode  WHERE country.continent = 'Europe' AND countrylanguage.language = 'English' AND countrylanguage.isofficial = 'F'",SELECT city.name  FROM city  JOIN country ON city.countrycode = country.code  JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode  WHERE country.continent = 'Europe' AND countrylanguage.language = 'English' AND countrylanguage.isofficial = 'F'
125,220,Count the number of United Airlines flights that arrive in Aberdeen.,flight_2,hard,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  ""Aberdeen"" AND T3.Airline  =  ""United Airlines""",7,"SELECT COUNT(*) FROM flights  JOIN airlines ON flights.airline = airlines.abbreviation  JOIN airports ON flights.destairport = airports.airportcode  WHERE airlines.airline = 'United Airlines' AND airports.city = 'Aberdeen'
SELECT COUNT(*) FROM flights  INNER JOIN airlines ON flights.airline = airlines.abbreviation  INNER JOIN airports ON flights.destairport = airports.airportcode  WHERE airlines.airline = 'United Airlines' AND airports.city = 'Aberdeen'
SELECT COUNT(*) FROM flights  JOIN airlines ON flights.airline = airlines.abbreviation  JOIN airports ON flights.destairport = airports.airportcode  WHERE airlines.airline = 'United Airlines' AND airports.city = 'Aberdeen'
SELECT COUNT(*) FROM flights  JOIN airlines ON flights.airline = airlines.abbreviation  JOIN airports ON flights.destairport = airports.airportcode  WHERE airlines.airline = 'United Airlines' AND airports.city = 'Aberdeen'
SELECT COUNT(*) FROM flights  INNER JOIN airlines ON flights.airline = airlines.abbreviation  INNER JOIN airports ON flights.destairport = airports.airportcode  WHERE airlines.airline = 'United Airlines' AND airports.city = 'Aberdeen'
SELECT COUNT(*) FROM flights  INNER JOIN airlines ON flights.airline = airlines.abbreviation  INNER JOIN airports ON flights.destairport = airports.airportcode  WHERE airlines.airline = 'United Airlines' AND airports.city = 'Aberdeen'
SELECT COUNT(*) FROM flights  INNER JOIN airlines ON flights.airline = airlines.abbreviation  INNER JOIN airports ON flights.destairport = airports.airportcode  WHERE airlines.airline = 'United Airlines' AND airports.city = 'Aberdeen'",SELECT COUNT(*) FROM flights  INNER JOIN airlines ON flights.airline = airlines.abbreviation  INNER JOIN airports ON flights.destairport = airports.airportcode  WHERE airlines.airline = 'United Airlines' AND airports.city = 'Aberdeen'
126,1024,Show the names of singers and the total sales of their songs.,singer,medium,"SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",7,"SELECT singer.name, SUM(song.sales) as total_sales FROM singer JOIN song ON singer.singer_id = song.singer_id GROUP BY singer.name
SELECT singer.name, SUM(song.sales) as total_sales FROM singer JOIN song ON singer.singer_id = song.singer_id GROUP BY singer.name
SELECT singer.name, SUM(song.sales) as total_sales FROM singer JOIN song ON singer.singer_id = song.singer_id GROUP BY singer.name
SELECT singer.name, SUM(song.sales) as total_sales FROM singer JOIN song ON singer.singer_id = song.singer_id GROUP BY singer.name
SELECT singer.name, SUM(song.sales) as total_sales FROM singer JOIN song ON singer.singer_id = song.singer_id GROUP BY singer.name
SELECT singer.name, SUM(song.sales) as total_sales FROM singer JOIN song ON singer.singer_id = song.singer_id GROUP BY singer.name
SELECT singer.name, SUM(song.sales) as total_sales FROM singer JOIN song ON singer.singer_id = song.singer_id GROUP BY singer.name","SELECT singer.name, SUM(song.sales) as total_sales FROM singer JOIN song ON singer.singer_id = song.singer_id GROUP BY singer.name"
127,344,Return the code of the template type that is most commonly used in documents.,cre_Doc_Template_Mgt,extra,SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1,7,"SELECT templates.template_type_code  FROM templates  JOIN documents ON templates.template_id = documents.template_id  GROUP BY templates.template_type_code  ORDER BY COUNT(*) DESC  LIMIT 1
SELECT templates.template_type_code  FROM templates  JOIN documents ON templates.template_id = documents.template_id  GROUP BY templates.template_type_code  ORDER BY COUNT(*) DESC  LIMIT 1
SELECT templates.template_type_code  FROM templates  JOIN documents ON templates.template_id = documents.template_id  GROUP BY templates.template_type_code  ORDER BY COUNT(*) DESC  LIMIT 1
SELECT templates.template_type_code  FROM templates  JOIN documents ON templates.template_id = documents.template_id  GROUP BY templates.template_type_code  ORDER BY COUNT(*) DESC  LIMIT 1
SELECT templates.template_type_code  FROM templates  JOIN documents ON templates.template_id = documents.template_id  GROUP BY templates.template_type_code  ORDER BY COUNT(*) DESC  LIMIT 1
SELECT templates.template_type_code  FROM templates  JOIN documents ON templates.template_id = documents.template_id  GROUP BY templates.template_type_code  ORDER BY COUNT(*) DESC  LIMIT 1
SELECT templates.template_type_code  FROM templates  JOIN documents ON templates.template_id = documents.template_id  GROUP BY templates.template_type_code  ORDER BY COUNT(*) DESC  LIMIT 1",SELECT templates.template_type_code  FROM templates  JOIN documents ON templates.template_id = documents.template_id  GROUP BY templates.template_type_code  ORDER BY COUNT(*) DESC  LIMIT 1
128,654,Return the average earnings across all poker players.,poker_player,easy,SELECT avg(Earnings) FROM poker_player,7,"SELECT AVG(earnings) as average_earnings FROM poker_player
SELECT AVG(earnings) FROM poker_player
SELECT AVG(earnings) FROM poker_player
SELECT AVG(earnings) FROM poker_player
SELECT AVG(earnings) as average_earnings FROM poker_player
SELECT AVG(earnings) as average_earnings FROM poker_player
SELECT AVG(earnings) FROM poker_player",SELECT AVG(earnings) FROM poker_player
129,173,What are the name of the countries where there is not a single car maker?,car_1,hard,SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;,7,"SELECT countryname FROM countries WHERE countryid NOT IN (SELECT country FROM car_makers)
SELECT countryname FROM countries WHERE countryid NOT IN (SELECT DISTINCT country FROM car_makers)
SELECT countryname FROM countries WHERE countryid NOT IN (SELECT DISTINCT country FROM car_makers)
SELECT countryname FROM countries WHERE countryid NOT IN (SELECT country FROM car_makers)
SELECT countryname FROM countries WHERE countryid NOT IN (SELECT DISTINCT country FROM car_makers)
SELECT countryname  FROM countries  LEFT JOIN car_makers  ON countries.countryid = car_makers.country  WHERE car_makers.country IS NULL
SELECT countryname FROM countries WHERE countryid NOT IN (SELECT DISTINCT country FROM car_makers)",SELECT countryname FROM countries WHERE countryid NOT IN (SELECT DISTINCT country FROM car_makers)
130,996,What are all the possible breed type and size type combinations?,dog_kennels,medium,"SELECT DISTINCT breed_code ,  size_code FROM dogs",7,"SELECT DISTINCT b.breed_name, s.size_description FROM dogs AS d JOIN breeds AS b ON d.breed_code = b.breed_code JOIN sizes AS s ON d.size_code = s.size_code
SELECT DISTINCT b.breed_name, s.size_description FROM breeds b JOIN dogs d ON b.breed_code = d.breed_code JOIN sizes s ON d.size_code = s.size_code
SELECT DISTINCT b.breed_name, s.size_description FROM breeds b JOIN dogs d ON b.breed_code = d.breed_code JOIN sizes s ON d.size_code = s.size_code
SELECT DISTINCT b.breed_name, s.size_description FROM dogs AS d JOIN breeds AS b ON d.breed_code = b.breed_code JOIN sizes AS s ON d.size_code = s.size_code
SELECT DISTINCT b.breed_name, s.size_description FROM dogs AS d JOIN breeds AS b ON d.breed_code = b.breed_code JOIN sizes AS s ON d.size_code = s.size_code
SELECT DISTINCT b.breed_name, s.size_description FROM dogs d INNER JOIN breeds b ON d.breed_code = b.breed_code INNER JOIN sizes s ON d.size_code = s.size_code
SELECT DISTINCT b.breed_name, s.size_description FROM dogs AS d JOIN breeds AS b ON d.breed_code = b.breed_code JOIN sizes AS s ON d.size_code = s.size_code","SELECT DISTINCT b.breed_name, s.size_description FROM dogs AS d JOIN breeds AS b ON d.breed_code = b.breed_code JOIN sizes AS s ON d.size_code = s.size_code"
131,133,"Which model saves the most gasoline? That is to say, have the maximum miles per gallon.",car_1,hard,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;,7,"SELECT model FROM car_names INNER JOIN cars_data ON car_names.makeid = cars_data.id ORDER BY mpg DESC LIMIT 1
SELECT model FROM car_names  INNER JOIN cars_data ON car_names.makeid = cars_data.id  ORDER BY mpg DESC  LIMIT 1
SELECT model FROM car_names INNER JOIN cars_data ON car_names.makeid = cars_data.id ORDER BY mpg DESC LIMIT 1
SELECT model FROM car_names INNER JOIN cars_data ON car_names.makeid = cars_data.id ORDER BY mpg DESC LIMIT 1
SELECT model FROM car_names INNER JOIN cars_data ON car_names.makeid = cars_data.id ORDER BY mpg DESC LIMIT 1
SELECT model FROM car_names INNER JOIN cars_data ON car_names.makeid = cars_data.id ORDER BY mpg DESC LIMIT 1
SELECT model FROM car_names INNER JOIN cars_data ON car_names.makeid = cars_data.id ORDER BY mpg DESC LIMIT 1",SELECT model FROM car_names INNER JOIN cars_data ON car_names.makeid = cars_data.id ORDER BY mpg DESC LIMIT 1
132,11,How many singers are from each country?,concert_singer,medium,"SELECT country ,  count(*) FROM singer GROUP BY country",7,"SELECT country, COUNT(singer_id) as num_singers FROM singer GROUP BY country
SELECT country, COUNT(singer_id) as num_singers FROM singer GROUP BY country
SELECT country, COUNT(singer_id) as num_singers FROM singer GROUP BY country
SELECT country, COUNT(singer_id) as num_singers FROM singer GROUP BY country
SELECT country, COUNT(singer_id) as num_singers FROM singer GROUP BY country
SELECT country, COUNT(singer_id) as num_singers FROM singer GROUP BY country
SELECT country, COUNT(singer_id) as Number_of_Singers FROM singer GROUP BY country","SELECT country, COUNT(singer_id) as num_singers FROM singer GROUP BY country"
133,175,Which are the car makers which produce at least 2 models and more than 3 car makers ? List the id and the maker .,car_1,extra,"select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;",7,"SELECT car_makers.id, car_makers.maker  FROM car_makers  INNER JOIN (     SELECT maker, COUNT(DISTINCT model) AS model_count      FROM model_list      GROUP BY maker      HAVING model_count >= 2 ) AS two_models_or_more ON car_makers.id = two_models_or_more.maker  GROUP BY car_makers.id, car_makers.maker  HAVING COUNT(DISTINCT car_makers.country) > 3
SELECT car_makers.id, car_makers.maker  FROM car_makers  JOIN (     SELECT maker, COUNT(DISTINCT model) AS model_count      FROM model_list      GROUP BY maker      HAVING model_count >= 2 ) AS two_models_or_more ON car_makers.id = two_models_or_more.maker  GROUP BY car_makers.id, car_makers.maker  HAVING COUNT(DISTINCT car_makers.country) > 3
SELECT car_makers.id, car_makers.maker  FROM car_makers  JOIN (     SELECT maker, COUNT(model) AS model_count      FROM model_list      GROUP BY maker      HAVING model_count >= 2 ) AS models ON car_makers.id = models.maker  GROUP BY car_makers.id, car_makers.maker  HAVING COUNT(car_makers.id) > 3
SELECT car_makers.id, car_makers.maker  FROM car_makers  INNER JOIN (     SELECT maker, COUNT(DISTINCT model) AS model_count      FROM model_list      GROUP BY maker      HAVING model_count >= 2 ) AS two_models_or_more ON car_makers.id = two_models_or_more.maker  GROUP BY car_makers.id, car_makers.maker  HAVING COUNT(DISTINCT car_makers.country) > 3
SELECT car_makers.id, car_makers.maker  FROM car_makers  INNER JOIN (     SELECT maker, COUNT(DISTINCT model) AS model_count      FROM model_list      GROUP BY maker      HAVING model_count >= 2 ) AS two_models_or_more ON car_makers.id = two_models_or_more.maker  GROUP BY car_makers.id, car_makers.maker  HAVING COUNT(DISTINCT car_makers.country) > 3
SELECT car_makers.id, car_makers.maker  FROM car_makers  INNER JOIN (     SELECT maker, COUNT(DISTINCT model) AS model_count      FROM model_list      GROUP BY maker      HAVING model_count >= 2 ) AS two_models_or_more ON car_makers.id = two_models_or_more.maker  GROUP BY car_makers.id, car_makers.maker  HAVING COUNT(DISTINCT car_makers.country) > 3
SELECT car_makers.id, car_makers.maker  FROM car_makers  JOIN (     SELECT maker, COUNT(model) AS model_count      FROM model_list      GROUP BY maker      HAVING model_count >= 2 ) AS two_models_or_more ON car_makers.id = two_models_or_more.maker  GROUP BY car_makers.id  HAVING COUNT(car_makers.id) > 3","SELECT car_makers.id, car_makers.maker  FROM car_makers  INNER JOIN (     SELECT maker, COUNT(DISTINCT model) AS model_count      FROM model_list      GROUP BY maker      HAVING model_count >= 2 ) AS two_models_or_more ON car_makers.id = two_models_or_more.maker  GROUP BY car_makers.id, car_makers.maker  HAVING COUNT(DISTINCT car_makers.country) > 3"
134,225,What is the code of airport that has the highest number of flights?,flight_2,extra,SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1,7,"SELECT sourceairport as airportcode, COUNT(*) as num_flights FROM flights GROUP BY sourceairport ORDER BY num_flights DESC LIMIT 1
SELECT sourceairport as airport_code, COUNT(*) as num_flights FROM flights GROUP BY sourceairport ORDER BY num_flights DESC LIMIT 1
SELECT sourceairport as airport_code, COUNT(*) as num_flights FROM flights GROUP BY sourceairport ORDER BY num_flights DESC LIMIT 1
SELECT sourceairport as airport_code, COUNT(*) as num_flights FROM flights GROUP BY sourceairport ORDER BY num_flights DESC LIMIT 1
SELECT sourceairport as airport_code, COUNT(*) as num_flights FROM flights GROUP BY sourceairport ORDER BY num_flights DESC LIMIT 1
SELECT sourceairport as airport_code, COUNT(*) as num_flights FROM flights GROUP BY sourceairport ORDER BY num_flights DESC LIMIT 1
SELECT sourceairport as airportcode, COUNT(*) as num_flights FROM flights GROUP BY sourceairport ORDER BY num_flights DESC LIMIT 1","SELECT sourceairport as airport_code, COUNT(*) as num_flights FROM flights GROUP BY sourceairport ORDER BY num_flights DESC LIMIT 1"
135,59,Find the first name of students who have both cat and dog pets .,pets_1,extra,select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog',7,"SELECT student.fname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype IN ('cat', 'dog') GROUP BY student.stuid HAVING COUNT(DISTINCT pets.pettype) = 2
SELECT student.fname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype IN ('cat', 'dog') GROUP BY student.stuid HAVING COUNT(DISTINCT pets.pettype) = 2
SELECT DISTINCT s.fname  FROM student s  JOIN has_pet hp ON s.stuid = hp.stuid  JOIN pets p ON hp.petid = p.petid  WHERE p.pettype IN ('cat', 'dog')  GROUP BY s.stuid  HAVING COUNT(DISTINCT p.pettype) = 2
SELECT student.fname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype IN ('cat', 'dog')  GROUP BY student.stuid  HAVING COUNT(DISTINCT pets.pettype) = 2
SELECT student.fname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype IN ('cat', 'dog') GROUP BY student.stuid HAVING COUNT(DISTINCT pets.pettype) = 2
SELECT student.fname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype IN ('cat', 'dog') GROUP BY student.stuid HAVING COUNT(DISTINCT pets.pettype) = 2
SELECT student.fname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype IN ('cat', 'dog') GROUP BY student.stuid HAVING COUNT(DISTINCT pets.pettype) = 2","SELECT student.fname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype IN ('cat', 'dog') GROUP BY student.stuid HAVING COUNT(DISTINCT pets.pettype) = 2"
136,939,Give me the description of the treatment type whose total cost is the lowest.,dog_kennels,extra,SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1,7,"SELECT treatment_types.treatment_type_description, MIN(treatments.cost_of_treatment) as LowestCost FROM treatment_types JOIN treatments ON treatment_types.treatment_type_code = treatments.treatment_type_code GROUP BY treatment_types.treatment_type_description ORDER BY LowestCost ASC LIMIT 1
SELECT treatment_types.treatment_type_description, MIN(treatments.cost_of_treatment) as LowestCost FROM treatment_types JOIN treatments ON treatment_types.treatment_type_code = treatments.treatment_type_code GROUP BY treatment_types.treatment_type_description ORDER BY LowestCost ASC LIMIT 1
SELECT treatment_types.treatment_type_description, MIN(treatments.cost_of_treatment) as LowestCost FROM treatment_types JOIN treatments ON treatment_types.treatment_type_code = treatments.treatment_type_code GROUP BY treatment_types.treatment_type_description ORDER BY LowestCost ASC LIMIT 1
SELECT treatment_types.treatment_type_description, MIN(treatments.cost_of_treatment) as LowestCost FROM treatment_types JOIN treatments ON treatment_types.treatment_type_code = treatments.treatment_type_code GROUP BY treatment_types.treatment_type_description ORDER BY LowestCost ASC LIMIT 1
SELECT treatment_types.treatment_type_description, MIN(treatments.cost_of_treatment) as LowestCost FROM treatment_types JOIN treatments ON treatment_types.treatment_type_code = treatments.treatment_type_code GROUP BY treatment_types.treatment_type_description ORDER BY LowestCost ASC LIMIT 1
SELECT treatment_types.treatment_type_description, MIN(treatments.cost_of_treatment) as LowestCost FROM treatment_types JOIN treatments ON treatment_types.treatment_type_code = treatments.treatment_type_code GROUP BY treatment_types.treatment_type_description ORDER BY LowestCost ASC LIMIT 1
SELECT treatment_types.treatment_type_description, MIN(treatments.cost_of_treatment) as LowestCost FROM treatment_types JOIN treatments ON treatment_types.treatment_type_code = treatments.treatment_type_code GROUP BY treatment_types.treatment_type_description ORDER BY LowestCost ASC LIMIT 1","SELECT treatment_types.treatment_type_description, MIN(treatments.cost_of_treatment) as LowestCost FROM treatment_types JOIN treatments ON treatment_types.treatment_type_code = treatments.treatment_type_code GROUP BY treatment_types.treatment_type_description ORDER BY LowestCost ASC LIMIT 1"
137,310,"What are all different template ids used for documents, and how many times were each of them used?",cre_Doc_Template_Mgt,medium,"SELECT template_id ,  count(*) FROM Documents GROUP BY template_id",7,"SELECT ref_template_types.template_type_code, COUNT(documents.template_id) as count FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code JOIN documents ON templates.template_id = documents.template_id GROUP BY ref_template_types.template_type_code
SELECT ref_template_types.template_type_code, COUNT(documents.template_id) as count FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code JOIN documents ON templates.template_id = documents.template_id GROUP BY ref_template_types.template_type_code
SELECT ref_template_types.template_type_code, COUNT(documents.template_id) as template_count FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code JOIN documents ON templates.template_id = documents.template_id GROUP BY ref_template_types.template_type_code
SELECT ref_template_types.template_type_code, COUNT(documents.template_id) as count FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code JOIN documents ON templates.template_id = documents.template_id GROUP BY ref_template_types.template_type_code
SELECT ref_template_types.template_type_code, COUNT(documents.template_id) as count FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code JOIN documents ON templates.template_id = documents.template_id GROUP BY ref_template_types.template_type_code
SELECT ref_template_types.template_type_code, COUNT(documents.template_id) as count FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code JOIN documents ON templates.template_id = documents.template_id GROUP BY ref_template_types.template_type_code
SELECT ref_template_types.template_type_code, COUNT(documents.template_id)  FROM ref_template_types  JOIN templates ON ref_template_types.template_type_code = templates.template_type_code  JOIN documents ON templates.template_id = documents.template_id  GROUP BY ref_template_types.template_type_code","SELECT ref_template_types.template_type_code, COUNT(documents.template_id) as count FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code JOIN documents ON templates.template_id = documents.template_id GROUP BY ref_template_types.template_type_code"
138,283,What is the name of the shop that is hiring the largest number of employees?,employee_hire_evaluation,extra,SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1,7,"SELECT s.name FROM shop s JOIN (SELECT h.shop_id, COUNT(h.employee_id) as employee_count       FROM hiring h       GROUP BY h.shop_id) h ON s.shop_id = h.shop_id ORDER BY h.employee_count DESC LIMIT 1
SELECT s.name FROM shop s JOIN (SELECT h.shop_id, COUNT(h.employee_id) as employee_count       FROM hiring h       GROUP BY h.shop_id) hc ON s.shop_id = hc.shop_id ORDER BY hc.employee_count DESC LIMIT 1
SELECT shop.name  FROM shop  JOIN hiring ON shop.shop_id = hiring.shop_id  GROUP BY shop.shop_id  ORDER BY COUNT(hiring.employee_id) DESC  LIMIT 1
SELECT shop.name  FROM shop  JOIN hiring ON shop.shop_id = hiring.shop_id  GROUP BY shop.shop_id  ORDER BY COUNT(hiring.employee_id) DESC  LIMIT 1
SELECT s.name FROM shop s JOIN (     SELECT h.shop_id, COUNT(h.employee_id) as employee_count     FROM hiring h     GROUP BY h.shop_id     ORDER BY employee_count DESC     LIMIT 1 ) h ON s.shop_id = h.shop_id
SELECT s.name FROM shop s JOIN (     SELECT h.shop_id, COUNT(h.employee_id) as employee_count     FROM hiring h     GROUP BY h.shop_id     ORDER BY employee_count DESC     LIMIT 1 ) h ON s.shop_id = h.shop_id
SELECT shop.name  FROM shop  JOIN hiring ON shop.shop_id = hiring.shop_id  GROUP BY shop.shop_id  ORDER BY COUNT(hiring.employee_id) DESC  LIMIT 1",SELECT shop.name  FROM shop  JOIN hiring ON shop.shop_id = hiring.shop_id  GROUP BY shop.shop_id  ORDER BY COUNT(hiring.employee_id) DESC  LIMIT 1
139,232,What is the abbreviation of the airilne has the fewest flights and what country is it in?,flight_2,extra,"SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1",7,"SELECT airlines.abbreviation, airlines.country FROM airlines JOIN flights ON airlines.airline = flights.airline GROUP BY airlines.airline ORDER BY COUNT(flights.flightno) LIMIT 1
SELECT airlines.abbreviation, airlines.country FROM airlines JOIN flights ON airlines.airline = flights.airline GROUP BY airlines.airline ORDER BY COUNT(flights.flightno) LIMIT 1
SELECT airlines.abbreviation, airlines.country FROM airlines JOIN flights ON airlines.airline = flights.airline GROUP BY airlines.airline ORDER BY COUNT(flights.flightno) LIMIT 1
SELECT airlines.abbreviation, airlines.country FROM airlines JOIN flights ON airlines.airline = flights.airline GROUP BY airlines.airline ORDER BY COUNT(flights.flightno) LIMIT 1
SELECT airlines.abbreviation, airlines.country FROM airlines JOIN flights ON airlines.airline = flights.airline GROUP BY airlines.airline ORDER BY COUNT(flights.flightno) LIMIT 1
SELECT airlines.abbreviation, airlines.country FROM airlines JOIN flights ON airlines.airline = flights.airline GROUP BY airlines.airline ORDER BY COUNT(flights.flightno) LIMIT 1
SELECT airlines.abbreviation, airlines.country FROM airlines JOIN flights ON airlines.airline = flights.airline GROUP BY airlines.airline ORDER BY COUNT(flights.flightno) LIMIT 1","SELECT airlines.abbreviation, airlines.country FROM airlines JOIN flights ON airlines.airline = flights.airline GROUP BY airlines.airline ORDER BY COUNT(flights.flightno) LIMIT 1"
140,619,"What is the air date of TV series with Episode ""A Love of a Lifetime""?",tvshow,easy,"SELECT Air_Date FROM TV_series WHERE Episode = ""A Love of a Lifetime"";",7,"SELECT tv_series.air_date FROM tv_series WHERE tv_series.episode = ""A Love of a Lifetime""
SELECT tv_series.air_date FROM tv_series WHERE tv_series.episode = 'A Love of a Lifetime'
SELECT tv_series.air_date FROM tv_series WHERE tv_series.episode = 'A Love of a Lifetime'
SELECT tv_series.air_date FROM tv_series WHERE tv_series.episode = ""A Love of a Lifetime""
SELECT tv_series.air_date FROM tv_series WHERE tv_series.episode = ""A Love of a Lifetime""
SELECT tv_series.air_date FROM tv_series WHERE tv_series.episode = 'A Love of a Lifetime'
SELECT tv_series.air_date FROM tv_series WHERE tv_series.episode = 'A Love of a Lifetime'",SELECT tv_series.air_date FROM tv_series WHERE tv_series.episode = 'A Love of a Lifetime'
141,84,What is the last name of the student who has a cat that is 3 years old?,pets_1,hard,SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat',7,"SELECT student.lname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' AND pets.pet_age = 3
SELECT student.lname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' AND pets.pet_age = 3
SELECT student.lname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' AND pets.pet_age = 3
SELECT student.lname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' AND pets.pet_age = 3
SELECT student.lname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' AND pets.pet_age = 3
SELECT student.lname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' AND pets.pet_age = 3
SELECT student.lname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' AND pets.pet_age = 3",SELECT student.lname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' AND pets.pet_age = 3
142,293,Which district has both stores with less than 3000 products and stores with more than 10000 products?,employee_hire_evaluation,hard,SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000,7,"SELECT shop.district  FROM shop  JOIN hiring ON shop.shop_id = hiring.shop_id  JOIN employee ON hiring.employee_id = employee.employee_id  WHERE shop.number_products < 3000  AND shop.district IN (     SELECT shop.district      FROM shop      WHERE shop.number_products > 10000 ) GROUP BY shop.district
SELECT shop.district FROM shop WHERE shop.number_products < 3000 INTERSECT SELECT shop.district FROM shop WHERE shop.number_products > 10000
SELECT shop.district  FROM shop  JOIN hiring ON shop.shop_id = hiring.shop_id  JOIN employee ON hiring.employee_id = employee.employee_id  WHERE shop.number_products < 3000  AND shop.district IN (     SELECT shop.district      FROM shop      WHERE shop.number_products > 10000 ) GROUP BY shop.district
SELECT shop.district  FROM shop  JOIN hiring ON shop.shop_id = hiring.shop_id  JOIN employee ON hiring.employee_id = employee.employee_id  WHERE shop.number_products < 3000  AND shop.district IN (     SELECT shop.district      FROM shop      WHERE shop.number_products > 10000 ) GROUP BY shop.district
SELECT shop.district  FROM shop  JOIN hiring ON shop.shop_id = hiring.shop_id  JOIN employee ON hiring.employee_id = employee.employee_id  WHERE shop.number_products < 3000  AND shop.district IN (     SELECT shop.district      FROM shop      WHERE shop.number_products > 10000 ) GROUP BY shop.district
SELECT shop.district  FROM shop  JOIN hiring ON shop.shop_id = hiring.shop_id  JOIN employee ON hiring.employee_id = employee.employee_id  WHERE shop.number_products < 3000  INTERSECT  SELECT shop.district  FROM shop  JOIN hiring ON shop.shop_id = hiring.shop_id  JOIN employee ON hiring.employee_id = employee.employee_id  WHERE shop.number_products > 10000
SELECT shop.district  FROM shop  JOIN hiring ON shop.shop_id = hiring.shop_id  JOIN employee ON hiring.employee_id = employee.employee_id  WHERE shop.number_products < 3000  INTERSECT  SELECT shop.district  FROM shop  JOIN hiring ON shop.shop_id = hiring.shop_id  JOIN employee ON hiring.employee_id = employee.employee_id  WHERE shop.number_products > 10000",SELECT shop.district  FROM shop  JOIN hiring ON shop.shop_id = hiring.shop_id  JOIN employee ON hiring.employee_id = employee.employee_id  WHERE shop.number_products < 3000  AND shop.district IN (     SELECT shop.district      FROM shop      WHERE shop.number_products > 10000 ) GROUP BY shop.district
143,199,What is the airport name for airport 'AKO'?,flight_2,easy,"SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  ""AKO""",7,"SELECT airportname FROM airports WHERE airportcode = 'AKO'
SELECT airportname FROM airports WHERE airportcode = 'AKO'
SELECT airportname FROM airports WHERE airportcode = 'AKO'
SELECT airportname FROM airports WHERE airportcode = 'AKO'
SELECT airportname FROM airports WHERE airportcode = 'AKO'
SELECT airportname FROM airports WHERE airportcode = 'AKO'
SELECT airportname FROM airports WHERE airportcode = 'AKO'",SELECT airportname FROM airports WHERE airportcode = 'AKO'
144,927,Find the first names that are used for professionals or owners but are not used as dog names.,dog_kennels,hard,SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs,7,"SELECT DISTINCT professionals.first_name FROM professionals WHERE professionals.first_name NOT IN (SELECT dogs.name FROM dogs) UNION SELECT DISTINCT owners.first_name FROM owners WHERE owners.first_name NOT IN (SELECT dogs.name FROM dogs)
SELECT DISTINCT professionals.first_name FROM professionals WHERE professionals.first_name NOT IN (SELECT dogs.name FROM dogs) UNION SELECT DISTINCT owners.first_name FROM owners WHERE owners.first_name NOT IN (SELECT dogs.name FROM dogs)
SELECT DISTINCT professionals.first_name FROM professionals WHERE professionals.first_name IN (     SELECT owners.first_name FROM owners ) AND professionals.first_name NOT IN (     SELECT dogs.name FROM dogs )
SELECT DISTINCT professionals.first_name FROM professionals WHERE professionals.first_name IN (     SELECT owners.first_name FROM owners ) AND professionals.first_name NOT IN (     SELECT dogs.name FROM dogs )
SELECT DISTINCT professionals.first_name FROM professionals WHERE professionals.first_name NOT IN (SELECT dogs.name FROM dogs) UNION SELECT DISTINCT owners.first_name FROM owners WHERE owners.first_name NOT IN (SELECT dogs.name FROM dogs)
SELECT DISTINCT professionals.first_name FROM professionals WHERE professionals.first_name NOT IN (SELECT dogs.name FROM dogs) UNION SELECT DISTINCT owners.first_name FROM owners WHERE owners.first_name NOT IN (SELECT dogs.name FROM dogs)
SELECT DISTINCT professionals.first_name FROM professionals WHERE professionals.first_name NOT IN (SELECT dogs.name FROM dogs) UNION SELECT DISTINCT owners.first_name FROM owners WHERE owners.first_name NOT IN (SELECT dogs.name FROM dogs)",SELECT DISTINCT professionals.first_name FROM professionals WHERE professionals.first_name NOT IN (SELECT dogs.name FROM dogs) UNION SELECT DISTINCT owners.first_name FROM owners WHERE owners.first_name NOT IN (SELECT dogs.name FROM dogs)
145,463,Find the name and rank points of the winner who won the most times.,wta_1,hard,"SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",7,"SELECT winner_name, MAX(winner_rank_points) FROM (     SELECT winner_name, COUNT(*) as win_count, MAX(winner_rank_points) as max_rank_points     FROM matches     GROUP BY winner_name     ORDER BY win_count DESC, max_rank_points DESC     LIMIT 1 )
SELECT winner_name, MAX(winner_rank_points) FROM (     SELECT winner_name, COUNT(*) as win_count, MAX(winner_rank_points) as winner_rank_points     FROM matches     GROUP BY winner_name     ORDER BY win_count DESC     LIMIT 1 )
SELECT winner_name, winner_rank_points FROM matches GROUP BY winner_name ORDER BY COUNT(*) DESC, winner_rank_points DESC LIMIT 1
SELECT winner_name, MAX(winner_rank_points) FROM (     SELECT winner_name, COUNT(*) as win_count, MAX(winner_rank_points) as max_rank_points     FROM matches     GROUP BY winner_name     ORDER BY win_count DESC, max_rank_points DESC     LIMIT 1 )
SELECT winner_name, winner_rank_points FROM matches GROUP BY winner_name ORDER BY COUNT(*) DESC, winner_rank_points DESC LIMIT 1
SELECT winner_name, MAX(winner_rank_points) FROM (     SELECT winner_name, COUNT(*) as win_count, MAX(winner_rank_points) as winner_rank_points     FROM matches     GROUP BY winner_name     ORDER BY win_count DESC     LIMIT 1 )
SELECT winner_name, winner_rank_points FROM matches GROUP BY winner_name ORDER BY COUNT(*) DESC, winner_rank_points DESC LIMIT 1","SELECT winner_name, winner_rank_points FROM matches GROUP BY winner_name ORDER BY COUNT(*) DESC, winner_rank_points DESC LIMIT 1"
146,106,What is the name of each continent and how many car makers are there in each one?,car_1,hard,"SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;",7,"SELECT c.continent, COUNT(DISTINCT cm.maker) as car_makers FROM continents as c JOIN countries as co ON c.contid = co.continent JOIN car_makers as cm ON co.countryid = cm.country GROUP BY c.continent
SELECT c.continent, COUNT(DISTINCT cm.maker) as car_makers FROM continents as c JOIN countries as co ON c.contid = co.continent JOIN car_makers as cm ON co.countryid = cm.country GROUP BY c.continent
SELECT c.continent, COUNT(DISTINCT cm.maker) as car_makers FROM continents as c JOIN countries as co ON c.contid = co.continent JOIN car_makers as cm ON co.countryid = cm.country GROUP BY c.continent
SELECT c.continent, COUNT(DISTINCT cm.maker) as car_makers FROM continents as c JOIN countries as co ON c.contid = co.continent JOIN car_makers as cm ON co.countryid = cm.country GROUP BY c.continent
SELECT c.continent, COUNT(DISTINCT cm.maker) as car_makers FROM continents as c JOIN countries as co ON c.contid = co.continent JOIN car_makers as cm ON co.countryid = cm.country GROUP BY c.continent
SELECT c.continent, COUNT(DISTINCT cm.id) as car_makers FROM continents as c JOIN countries as co ON c.contid = co.continent JOIN car_makers as cm ON co.countryid = cm.country GROUP BY c.continent
SELECT c.continent, COUNT(DISTINCT cm.maker) as car_makers FROM continents as c JOIN countries as co ON c.contid = co.continent JOIN car_makers as cm ON co.countryid = cm.country GROUP BY c.continent","SELECT c.continent, COUNT(DISTINCT cm.maker) as car_makers FROM continents as c JOIN countries as co ON c.contid = co.continent JOIN car_makers as cm ON co.countryid = cm.country GROUP BY c.continent"
147,287,Find the number of employees hired in each shop; show the shop name as well.,employee_hire_evaluation,medium,"SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name",7,"SELECT s.name AS Shop_Name, COUNT(h.employee_id) AS Number_of_Employees FROM shop AS s JOIN hiring AS h ON s.shop_id = h.shop_id GROUP BY s.name
SELECT s.name AS Shop_Name, COUNT(h.employee_id) AS Number_of_Employees FROM shop AS s JOIN hiring AS h ON s.shop_id = h.shop_id GROUP BY s.name
SELECT s.name AS Shop_Name, COUNT(h.employee_id) AS Number_of_Employees FROM shop AS s JOIN hiring AS h ON s.shop_id = h.shop_id GROUP BY s.name
SELECT s.name AS Shop_Name, COUNT(h.employee_id) AS Number_of_Employees FROM shop AS s JOIN hiring AS h ON s.shop_id = h.shop_id GROUP BY s.name
SELECT s.name AS Shop_Name, COUNT(h.employee_id) AS Number_of_Employees FROM shop AS s JOIN hiring AS h ON s.shop_id = h.shop_id GROUP BY s.name
SELECT s.name AS Shop_Name, COUNT(h.employee_id) AS Number_of_Employees FROM shop AS s JOIN hiring AS h ON s.shop_id = h.shop_id GROUP BY s.name
SELECT s.name AS Shop_Name, COUNT(h.employee_id) AS Number_of_Employees FROM shop AS s JOIN hiring AS h ON s.shop_id = h.shop_id GROUP BY s.name","SELECT s.name AS Shop_Name, COUNT(h.employee_id) AS Number_of_Employees FROM shop AS s JOIN hiring AS h ON s.shop_id = h.shop_id GROUP BY s.name"
148,698,What is the area code in which the most voters voted?,voter_1,extra,SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1,7,"SELECT area_code, MAX(votes)  FROM (     SELECT v.state, a.area_code, COUNT(v.vote_id) as votes      FROM votes v      JOIN contestants c ON v.contestant_number = c.contestant_number      JOIN area_code_state a ON v.state = a.state      GROUP BY v.state, a.area_code ) GROUP BY area_code ORDER BY MAX(votes) DESC LIMIT 1
SELECT area_code, MAX(votes) FROM (SELECT area_code, COUNT(*) as votes FROM votes GROUP BY area_code)
SELECT area_code, MAX(votes)  FROM (     SELECT v.area_code, COUNT(*) as votes      FROM votes v      JOIN area_code_state acs ON v.state = acs.state      GROUP BY v.area_code )  AS subquery
SELECT area_code, MAX(votes) FROM (SELECT area_code, COUNT(*) as votes FROM votes GROUP BY area_code)
SELECT area_code, MAX(votes) FROM (SELECT area_code, COUNT(vote_id) as votes FROM votes GROUP BY area_code)
SELECT area_code, MAX(votes) FROM (SELECT area_code, COUNT(vote_id) as votes FROM votes GROUP BY area_code)
SELECT area_code, MAX(votes) FROM (SELECT area_code, COUNT(*) as votes FROM votes GROUP BY area_code)","SELECT area_code, MAX(votes) FROM (SELECT area_code, COUNT(*) as votes FROM votes GROUP BY area_code)"
149,787,Return the different names of cities that are in Asia and for which Chinese is the official language.,world_1,hard,"SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  ""Asia""",7,"SELECT DISTINCT city.name  FROM city  JOIN country ON city.countrycode = country.code  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE country.continent = 'Asia' AND countrylanguage.language = 'Chinese' AND countrylanguage.isofficial = 'T'
SELECT DISTINCT city.name  FROM city  JOIN country ON city.countrycode = country.code  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE country.continent = 'Asia' AND countrylanguage.language = 'Chinese' AND countrylanguage.isofficial = 'T'
SELECT DISTINCT city.name  FROM city  JOIN country ON city.countrycode = country.code  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE country.continent = 'Asia' AND countrylanguage.language = 'Chinese' AND countrylanguage.isofficial = 'T'
SELECT DISTINCT city.name  FROM city  JOIN country ON city.countrycode = country.code  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE country.continent = 'Asia' AND countrylanguage.language = 'Chinese' AND countrylanguage.isofficial = 'T'
SELECT DISTINCT city.name  FROM city  JOIN country ON city.countrycode = country.code  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE country.continent = 'Asia' AND countrylanguage.language = 'Chinese' AND countrylanguage.isofficial = 'T'
SELECT DISTINCT city.name  FROM city  JOIN country ON city.countrycode = country.code  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE country.continent = 'Asia' AND countrylanguage.language = 'Chinese' AND countrylanguage.isofficial = 'T'
SELECT DISTINCT city.name  FROM city  JOIN country ON city.countrycode = country.code  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE country.continent = 'Asia' AND countrylanguage.language = 'Chinese' AND countrylanguage.isofficial = 'T'",SELECT DISTINCT city.name  FROM city  JOIN country ON city.countrycode = country.code  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE country.continent = 'Asia' AND countrylanguage.language = 'Chinese' AND countrylanguage.isofficial = 'T'
150,379,Show the document id with paragraph text 'Brazil' and 'Ireland'.,cre_Doc_Template_Mgt,hard,SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland',7,"SELECT documents.document_id  FROM documents  INNER JOIN paragraphs ON documents.document_id = paragraphs.document_id  WHERE paragraphs.paragraph_text LIKE '%Brazil%' OR paragraphs.paragraph_text LIKE '%Ireland%'
SELECT documents.document_id  FROM documents  INNER JOIN paragraphs ON documents.document_id = paragraphs.document_id  WHERE paragraphs.paragraph_text LIKE '%Brazil%' OR paragraphs.paragraph_text LIKE '%Ireland%'
SELECT documents.document_id  FROM documents  JOIN paragraphs ON documents.document_id = paragraphs.document_id  WHERE paragraphs.paragraph_text LIKE '%Brazil%' OR paragraphs.paragraph_text LIKE '%Ireland%'
SELECT documents.document_id  FROM documents  INNER JOIN paragraphs ON documents.document_id = paragraphs.document_id  WHERE paragraphs.paragraph_text LIKE '%Brazil%' OR paragraphs.paragraph_text LIKE '%Ireland%'
SELECT documents.document_id  FROM documents  INNER JOIN paragraphs ON documents.document_id = paragraphs.document_id  WHERE paragraphs.paragraph_text LIKE '%Brazil%' OR paragraphs.paragraph_text LIKE '%Ireland%'
SELECT documents.document_id  FROM documents  INNER JOIN paragraphs ON documents.document_id = paragraphs.document_id  WHERE paragraphs.paragraph_text LIKE '%Brazil%' OR paragraphs.paragraph_text LIKE '%Ireland%'
SELECT documents.document_id  FROM documents  INNER JOIN paragraphs ON documents.document_id = paragraphs.document_id  WHERE paragraphs.paragraph_text LIKE '%Brazil%' OR paragraphs.paragraph_text LIKE '%Ireland%'",SELECT documents.document_id  FROM documents  INNER JOIN paragraphs ON documents.document_id = paragraphs.document_id  WHERE paragraphs.paragraph_text LIKE '%Brazil%' OR paragraphs.paragraph_text LIKE '%Ireland%'
151,836,List names of conductors in descending order of years of work.,orchestra,easy,SELECT Name FROM conductor ORDER BY Year_of_Work DESC,7,"SELECT name FROM conductor ORDER BY year_of_work DESC
SELECT name FROM conductor ORDER BY year_of_work DESC
SELECT name FROM conductor ORDER BY year_of_work DESC
SELECT name FROM conductor ORDER BY year_of_work DESC
SELECT name FROM conductor ORDER BY year_of_work DESC
SELECT name FROM conductor ORDER BY year_of_work DESC
SELECT name FROM conductor ORDER BY year_of_work DESC",SELECT name FROM conductor ORDER BY year_of_work DESC
152,679,List the names and birth dates of people in ascending alphabetical order of name.,poker_player,medium,"SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC",7,"SELECT people.name, people.birth_date  FROM people  INNER JOIN poker_player ON people.people_id = poker_player.people_id  ORDER BY people.name ASC
SELECT people.name, people.birth_date  FROM people  INNER JOIN poker_player ON people.people_id = poker_player.people_id  ORDER BY people.name ASC
SELECT people.name, people.birth_date  FROM people  INNER JOIN poker_player ON people.people_id = poker_player.people_id  ORDER BY people.name ASC
SELECT people.name, people.birth_date  FROM people  INNER JOIN poker_player ON people.people_id = poker_player.people_id  ORDER BY people.name ASC
SELECT people.name, people.birth_date  FROM people  ORDER BY people.name ASC
SELECT people.name, people.birth_date  FROM people  INNER JOIN poker_player ON people.people_id = poker_player.people_id  ORDER BY people.name ASC
SELECT people.name, people.birth_date  FROM people  INNER JOIN poker_player ON people.people_id = poker_player.people_id  ORDER BY people.name ASC","SELECT people.name, people.birth_date  FROM people  INNER JOIN poker_player ON people.people_id = poker_player.people_id  ORDER BY people.name ASC"
153,116,What is the count of the car models produced in the United States?,car_1,hard,SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';,7,"SELECT COUNT(DISTINCT model)  FROM car_names  INNER JOIN car_makers ON car_names.makeid = car_makers.id  INNER JOIN countries ON car_makers.country = countries.countryid  WHERE countries.countryname = 'United States'
SELECT COUNT(DISTINCT model)  FROM car_names  INNER JOIN car_makers ON car_names.makeid = car_makers.id  INNER JOIN countries ON car_makers.country = countries.countryid  WHERE countries.countryname = 'United States'
SELECT COUNT(DISTINCT model)  FROM car_names  INNER JOIN car_makers ON car_names.makeid = car_makers.id  INNER JOIN countries ON car_makers.country = countries.countryid  WHERE countries.countryname = 'United States'
SELECT COUNT(DISTINCT model)  FROM car_names  INNER JOIN car_makers ON car_names.makeid = car_makers.id  INNER JOIN countries ON car_makers.country = countries.countryid  WHERE countries.countryname = 'United States'
SELECT COUNT(DISTINCT model)  FROM car_names  INNER JOIN car_makers ON car_names.makeid = car_makers.id  INNER JOIN countries ON car_makers.country = countries.countryid  WHERE countries.countryname = 'United States'
SELECT COUNT(DISTINCT model)  FROM car_names  INNER JOIN car_makers ON car_names.makeid = car_makers.id  INNER JOIN countries ON car_makers.country = countries.countryid  WHERE countries.countryname = 'United States'
SELECT COUNT(DISTINCT model)  FROM car_names  INNER JOIN car_makers ON car_names.makeid = car_makers.id  INNER JOIN countries ON car_makers.country = countries.countryid  WHERE countries.countryname = 'United States'",SELECT COUNT(DISTINCT model)  FROM car_names  INNER JOIN car_makers ON car_names.makeid = car_makers.id  INNER JOIN countries ON car_makers.country = countries.countryid  WHERE countries.countryname = 'United States'
154,1002,List the name of singers in ascending order of net worth.,singer,easy,SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC,7,"SELECT name FROM singer ORDER BY net_worth_millions ASC
SELECT name FROM singer ORDER BY net_worth_millions ASC
SELECT name FROM singer ORDER BY net_worth_millions ASC
SELECT name FROM singer ORDER BY net_worth_millions ASC
SELECT name FROM singer ORDER BY net_worth_millions ASC
SELECT name FROM singer ORDER BY net_worth_millions ASC
SELECT name FROM singer ORDER BY net_worth_millions ASC",SELECT name FROM singer ORDER BY net_worth_millions ASC
155,775,Which African countries have a smaller population than that of any country in Asia?,world_1,extra,"SELECT Name FROM country WHERE Continent  =  ""Africa""  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  ""Asia"")",7,"SELECT c1.name AS African_Country, c2.name AS Asian_Country FROM country c1 JOIN country c2 ON c1.population < c2.population WHERE c1.continent = 'Africa' AND c2.continent = 'Asia'
SELECT c1.name AS African_Country, c2.name AS Asian_Country FROM country c1 JOIN country c2 ON c1.population < c2.population WHERE c1.continent = 'Africa' AND c2.continent = 'Asia'
SELECT c1.name AS African_Country, c2.name AS Asian_Country FROM country c1 JOIN country c2 ON c1.population < c2.population WHERE c1.continent = 'Africa' AND c2.continent = 'Asia'
SELECT c1.name AS AfricanCountry, c2.name AS AsianCountry FROM country c1 JOIN country c2 ON c1.population < c2.population WHERE c1.continent = 'Africa' AND c2.continent = 'Asia'
SELECT c1.name AS AfricanCountry, c2.name AS AsianCountry FROM country c1 JOIN country c2 ON c1.population < c2.population WHERE c1.continent = 'Africa' AND c2.continent = 'Asia'
SELECT c1.name AS AfricanCountry, c2.name AS AsianCountry FROM country c1 JOIN country c2 ON c1.population < c2.population WHERE c1.continent = 'Africa' AND c2.continent = 'Asia'
SELECT c1.name AS AfricanCountry, c2.name AS AsianCountry FROM country c1 JOIN country c2 ON c1.population < c2.population WHERE c1.continent = 'Africa' AND c2.continent = 'Asia'","SELECT c1.name AS AfricanCountry, c2.name AS AsianCountry FROM country c1 JOIN country c2 ON c1.population < c2.population WHERE c1.continent = 'Africa' AND c2.continent = 'Asia'"
156,1029,What are the citizenships that are shared by singers with a birth year before 1945 and after 1955?,singer,hard,SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955,7,"SELECT DISTINCT s.citizenship  FROM singer AS s  JOIN song AS so ON s.singer_id = so.singer_id  WHERE s.birth_year < 1945 AND s.birth_year > 1955
SELECT DISTINCT s.citizenship  FROM singer AS s  JOIN song AS so ON s.singer_id = so.singer_id  WHERE s.birth_year < 1945 AND s.birth_year > 1955
SELECT DISTINCT s.citizenship  FROM singer AS s  JOIN song AS so ON s.singer_id = so.singer_id  WHERE s.birth_year < 1945 AND s.birth_year > 1955
SELECT DISTINCT s.citizenship  FROM singer AS s  WHERE s.birth_year < 1945 AND s.birth_year > 1955
SELECT DISTINCT s.citizenship  FROM singer AS s  JOIN song AS so ON s.singer_id = so.singer_id  WHERE s.birth_year < 1945 OR s.birth_year > 1955
SELECT DISTINCT s.citizenship  FROM singer AS s  WHERE s.birth_year < 1945  INTERSECT  SELECT DISTINCT s.citizenship  FROM singer AS s  WHERE s.birth_year > 1955
SELECT DISTINCT s.citizenship  FROM singer AS s  WHERE s.birth_year < 1945  INTERSECT  SELECT DISTINCT s.citizenship  FROM singer AS s  WHERE s.birth_year > 1955",SELECT DISTINCT s.citizenship  FROM singer AS s  JOIN song AS so ON s.singer_id = so.singer_id  WHERE s.birth_year < 1945 AND s.birth_year > 1955
157,746,What are the names of nations speak both English and French?,world_1,extra,"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""French""",7,"SELECT country.name  FROM country  JOIN countrylanguage  ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language IN ('English', 'French')  GROUP BY country.name  HAVING COUNT(DISTINCT countrylanguage.language) = 2
SELECT country.name  FROM country  JOIN countrylanguage  ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language IN ('English', 'French')  GROUP BY country.name  HAVING COUNT(DISTINCT countrylanguage.language) = 2
SELECT country.name  FROM country  JOIN countrylanguage  ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language IN ('English', 'French')  GROUP BY country.name  HAVING COUNT(DISTINCT countrylanguage.language) = 2
SELECT country.name  FROM country  JOIN countrylanguage  ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language IN ('English', 'French')  GROUP BY country.name  HAVING COUNT(DISTINCT countrylanguage.language) = 2
SELECT country.name  FROM country  JOIN countrylanguage  ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language IN ('English', 'French')  GROUP BY country.name  HAVING COUNT(DISTINCT countrylanguage.language) = 2
SELECT country.name  FROM country  JOIN countrylanguage  ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language IN ('English', 'French')  GROUP BY country.name  HAVING COUNT(DISTINCT countrylanguage.language) = 2
SELECT country.name  FROM country  JOIN countrylanguage  ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language IN ('English', 'French')  GROUP BY country.name  HAVING COUNT(DISTINCT countrylanguage.language) = 2","SELECT country.name  FROM country  JOIN countrylanguage  ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language IN ('English', 'French')  GROUP BY country.name  HAVING COUNT(DISTINCT countrylanguage.language) = 2"
158,17,What is the average and maximum capacities for all stadiums ?,concert_singer,medium,"select avg(capacity) ,  max(capacity) from stadium",7,"SELECT AVG(capacity) AS average_capacity, MAX(capacity) AS max_capacity FROM stadium
SELECT AVG(capacity) AS average_capacity, MAX(capacity) AS max_capacity FROM stadium
SELECT AVG(capacity) AS average_capacity, MAX(capacity) AS max_capacity FROM stadium
SELECT AVG(capacity) AS average_capacity, MAX(capacity) AS max_capacity FROM stadium
SELECT AVG(capacity) AS average_capacity, MAX(capacity) AS max_capacity FROM stadium
SELECT AVG(capacity) AS average_capacity, MAX(capacity) AS max_capacity FROM stadium
SELECT AVG(capacity) AS average_capacity, MAX(capacity) AS max_capacity FROM stadium","SELECT AVG(capacity) AS average_capacity, MAX(capacity) AS max_capacity FROM stadium"
159,158,"For a volvo model, how many cylinders does the version with least accelerate have?",car_1,extra,SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;,7,"SELECT MIN(cylinders)  FROM cars_data  INNER JOIN car_names ON cars_data.id = car_names.makeid  INNER JOIN model_list ON car_names.model = model_list.modelid  INNER JOIN car_makers ON model_list.maker = car_makers.id  WHERE car_makers.maker = 'volvo' AND MIN(cars_data.accelerate)
SELECT MIN(cylinders)  FROM cars_data  INNER JOIN car_names ON cars_data.id = car_names.makeid  INNER JOIN model_list ON car_names.model = model_list.modelid  INNER JOIN car_makers ON model_list.maker = car_makers.id  WHERE car_makers.maker = 'volvo' AND MIN(cars_data.accelerate)
SELECT MIN(cylinders)  FROM cars_data  INNER JOIN car_names ON cars_data.id = car_names.makeid  INNER JOIN model_list ON car_names.model = model_list.modelid  INNER JOIN car_makers ON model_list.maker = car_makers.id  WHERE car_makers.maker = 'volvo' AND MIN(cars_data.accelerate)
SELECT MIN(cylinders)  FROM cars_data  INNER JOIN car_names ON cars_data.id = car_names.makeid  INNER JOIN model_list ON car_names.model = model_list.modelid  INNER JOIN car_makers ON model_list.maker = car_makers.id  WHERE car_makers.maker = 'volvo' AND MIN(cars_data.accelerate)
SELECT MIN(cylinders)  FROM cars_data  INNER JOIN car_names ON cars_data.id = car_names.makeid  INNER JOIN model_list ON car_names.model = model_list.modelid  INNER JOIN car_makers ON model_list.maker = car_makers.id  WHERE car_makers.maker = 'volvo' AND MIN(cars_data.accelerate)
SELECT MIN(cylinders)  FROM cars_data  INNER JOIN car_names ON cars_data.id = car_names.makeid  INNER JOIN model_list ON car_names.model = model_list.modelid  INNER JOIN car_makers ON model_list.maker = car_makers.id  WHERE car_makers.maker = 'volvo' AND MIN(cars_data.accelerate)
SELECT MIN(cylinders)  FROM cars_data  INNER JOIN car_names ON cars_data.id = car_names.makeid  INNER JOIN model_list ON car_names.model = model_list.modelid  INNER JOIN car_makers ON model_list.maker = car_makers.id  WHERE car_makers.maker = 'volvo' AND MIN(cars_data.accelerate)",SELECT MIN(cylinders)  FROM cars_data  INNER JOIN car_names ON cars_data.id = car_names.makeid  INNER JOIN model_list ON car_names.model = model_list.modelid  INNER JOIN car_makers ON model_list.maker = car_makers.id  WHERE car_makers.maker = 'volvo' AND MIN(cars_data.accelerate)
160,912,How many likes does Kyle have?,network_1,medium,"SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  ""Kyle""",7,"SELECT COUNT(*) FROM likes WHERE student_id IN (SELECT id FROM highschooler WHERE name = 'Kyle')
SELECT COUNT(*) FROM likes WHERE student_id IN (SELECT id FROM highschooler WHERE name = 'Kyle') AND liked_id IN (SELECT id FROM highschooler WHERE grade = 'highschooler')
SELECT COUNT(*) FROM likes WHERE student_id IN (SELECT id FROM highschooler WHERE name = 'Kyle') AND liked_id IN (SELECT id FROM highschooler WHERE grade = 'highschooler')
SELECT COUNT(*) FROM likes WHERE student_id IN (SELECT id FROM highschooler WHERE name = 'Kyle') AND liked_id IN (SELECT id FROM highschooler WHERE grade = 'highschooler')
SELECT COUNT(*) FROM likes WHERE student_id IN (SELECT id FROM highschooler WHERE name = 'Kyle') AND liked_id IN (SELECT id FROM highschooler WHERE grade = 'highschooler')
SELECT COUNT(*) FROM likes WHERE student_id IN (SELECT id FROM highschooler WHERE name = 'Kyle')
SELECT COUNT(*) FROM likes WHERE student_id IN (SELECT id FROM highschooler WHERE name = 'Kyle') AND liked_id IN (SELECT id FROM highschooler WHERE grade = 'highschooler')",SELECT COUNT(*) FROM likes WHERE student_id IN (SELECT id FROM highschooler WHERE name = 'Kyle') AND liked_id IN (SELECT id FROM highschooler WHERE grade = 'highschooler')
161,526,What are the names and ids of every course with less than 2 sections?,student_transcripts_tracking,medium,"SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2",7,"SELECT c.course_id, c.course_name FROM courses AS c LEFT JOIN sections AS s ON c.course
SELECT c.course_id, c.course_name FROM courses AS c LEFT JOIN sections AS s ON c.course
SELECT c.course_id, c.course_name FROM courses AS c LEFT JOIN sections AS s ON c.course
SELECT c.course_id, c.course_name FROM courses AS c LEFT JOIN sections AS s ON c.course
SELECT c.course_id, c.course_name FROM courses AS c LEFT JOIN sections AS s ON c.course
SELECT c.course_id, c.course_name FROM courses AS c LEFT JOIN sections AS s ON c.course
SELECT c.course_id, c.course_name FROM courses AS c LEFT JOIN sections AS s ON c.course","SELECT c.course_id, c.course_name FROM courses AS c LEFT JOIN sections AS s ON c.course"
162,464,"What is the name of the winner who has won the most matches, and how many rank points does this player have?",wta_1,hard,"SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",7,"SELECT p.first_name, p.last_name, p.country_code, COUNT(m.winner_id) AS matches_won, SUM(m.winner_rank_points) AS total_rank_points FROM players AS p JOIN matches AS m ON p.player_id = m.winner_id GROUP BY m.winner_id ORDER BY matches_won DESC, total_rank_points DESC LIMIT 1
SELECT p.first_name, p.last_name, p.country_code, COUNT(m.winner_id) AS matches_won, SUM(m.winner_rank_points) AS total_rank_points FROM players AS p JOIN matches AS m ON p.player_id = m.winner_id GROUP BY m.winner_id ORDER BY matches_won DESC, total_rank_points DESC LIMIT 1
SELECT p.first_name, p.last_name, p.country_code, COUNT(m.winner_id) AS matches_won, MAX(r.ranking_points) AS max_rank_points FROM players AS p JOIN matches AS m ON p.player_id = m.winner_id JOIN rankings AS r ON p.player_id = r.player_id GROUP BY m.winner_id ORDER BY matches_won DESC, max_rank_points DESC LIMIT 1
SELECT p.first_name, p.last_name, p.country_code, COUNT(m.winner_id) AS matches_won, SUM(m.winner_rank_points) AS total_rank_points FROM players AS p JOIN matches AS m ON p.player_id = m.winner_id GROUP BY m.winner_id ORDER BY matches_won DESC, total_rank_points DESC LIMIT 1
SELECT p.first_name, p.last_name, p.country_code, COUNT(m.winner_id) AS matches_won, SUM(m.winner_rank_points) AS total_rank_points FROM players AS p JOIN matches AS m ON p.player_id = m.winner_id GROUP BY m.winner_id ORDER BY matches_won DESC, total_rank_points DESC LIMIT 1
SELECT p.first_name, p.last_name, p.country_code, COUNT(m.winner_id) AS matches_won, SUM(m.winner_rank_points) AS total_rank_points FROM players AS p JOIN matches AS m ON p.player_id = m.winner_id GROUP BY m.winner_id ORDER BY matches_won DESC, total_rank_points DESC LIMIT 1
SELECT p.first_name, p.last_name, p.country_code, COUNT(m.winner_id) AS matches_won, SUM(m.winner_rank_points) AS total_rank_points FROM players AS p JOIN matches AS m ON p.player_id = m.winner_id GROUP BY m.winner_id ORDER BY matches_won DESC, total_rank_points DESC LIMIT 1","SELECT p.first_name, p.last_name, p.country_code, COUNT(m.winner_id) AS matches_won, SUM(m.winner_rank_points) AS total_rank_points FROM players AS p JOIN matches AS m ON p.player_id = m.winner_id GROUP BY m.winner_id ORDER BY matches_won DESC, total_rank_points DESC LIMIT 1"
163,401,Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name.,course_teach,hard,"SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name",7,"SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id ORDER BY t.name ASC
SELECT t.name, c.course FROM teacher AS t JOIN course_arrange AS ca ON t.teacher_id = ca.teacher_id JOIN course AS c ON ca.course_id = c.course_id ORDER BY t.name ASC
SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id ORDER BY t.name ASC
SELECT t.name, c.course FROM teacher AS t JOIN course_arrange AS ca ON t.teacher_id = ca.teacher_id JOIN course AS c ON ca.course_id = c.course_id ORDER BY t.name ASC
SELECT t.name, c.course FROM teacher AS t JOIN course_arrange AS ca ON t.teacher_id = ca.teacher_id JOIN course AS c ON ca.course_id = c.course_id ORDER BY t.name ASC
SELECT t.name, c.course FROM teacher AS t JOIN course_arrange AS ca ON t.teacher_id = ca.teacher_id JOIN course AS c ON ca.course_id = c.course_id ORDER BY t.name ASC
SELECT t.name, c.course FROM teacher AS t JOIN course_arrange AS ca ON t.teacher_id = ca.teacher_id JOIN course AS c ON ca.course_id = c.course_id ORDER BY t.name ASC","SELECT t.name, c.course FROM teacher AS t JOIN course_arrange AS ca ON t.teacher_id = ca.teacher_id JOIN course AS c ON ca.course_id = c.course_id ORDER BY t.name ASC"
164,849,How many orchestras does each record company manage?,orchestra,medium,"SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company",7,"SELECT orchestra.record_company, COUNT(orchestra.orchestra_id) as num_orchestras FROM orchestra GROUP BY orchestra.record_company
SELECT orchestra.record_company, COUNT(orchestra.orchestra_id) as num_orchestras FROM orchestra GROUP BY orchestra.record_company
SELECT orchestra.record_company, COUNT(orchestra.orchestra_id) as num_orchestras FROM orchestra GROUP BY orchestra.record_company
SELECT orchestra.record_company, COUNT(orchestra.orchestra_id) as num_orchestras FROM orchestra GROUP BY orchestra.record_company
SELECT orchestra.record_company, COUNT(orchestra.orchestra_id) as num_orchestras FROM orchestra GROUP BY orchestra.record_company
SELECT orchestra.record_company, COUNT(orchestra.orchestra_id) as num_orchestras FROM orchestra GROUP BY orchestra.record_company
SELECT orchestra.record_company, COUNT(orchestra.orchestra_id) as num_orchestras FROM orchestra GROUP BY orchestra.record_company","SELECT orchestra.record_company, COUNT(orchestra.orchestra_id) as num_orchestras FROM orchestra GROUP BY orchestra.record_company"
165,1033,What are the names of properties that are either houses or apartments with more than 1 room?,real_estate_properties,hard,"SELECT property_name FROM Properties WHERE property_type_code  =  ""House"" UNION SELECT property_name FROM Properties WHERE property_type_code  =  ""Apartment"" AND room_count  >  1",7,"SELECT properties.property_name FROM properties JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code JOIN other_available_features ON properties.property_type_code = other_available_features.feature_type_code WHERE (ref_property_types.property_type_description = 'House' OR ref_property_types.property_type_description = 'Apartment') AND properties.room_count > 1
SELECT properties.property_name FROM properties JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code JOIN other_available_features ON other_available_features.feature_type_code = ref_property_types.property_type_code WHERE (ref_property_types.property_type_description = 'House' OR ref_property_types.property_type_description = 'Apartment') AND properties.room_count > 1
SELECT properties.property_name  FROM properties  JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code  JOIN other_available_features ON properties.property_type_code = other_available_features.feature_type_code  WHERE (ref_property_types.property_type_description = 'House' OR ref_property_types.property_type_description = 'Apartment')  AND properties.room_count > 1
SELECT properties.property_name FROM properties JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code JOIN other_available_features ON properties.property_type_code = other_available_features.feature_type_code WHERE (ref_property_types.property_type_description = 'House' OR ref_property_types.property_type_description = 'Apartment') AND properties.room_count > 1
SELECT properties.property_name  FROM properties  JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code  JOIN other_available_features ON properties.property_type_code = other_available_features.feature_type_code  WHERE (ref_property_types.property_type_description = 'House' OR ref_property_types.property_type_description = 'Apartment')  AND properties.room_count > 1
SELECT properties.property_name FROM properties JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code JOIN other_available_features ON properties.property_type_code = other_available_features.feature_type_code WHERE (ref_property_types.property_type_description = 'House' OR ref_property_types.property_type_description = 'Apartment') AND properties.room_count > 1
SELECT properties.property_name  FROM properties  JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code  JOIN other_available_features ON properties.property_type_code = other_available_features.feature_type_code  WHERE (ref_property_types.property_type_description = 'House' OR ref_property_types.property_type_description = 'Apartment')  AND properties.room_count > 1",SELECT properties.property_name FROM properties JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code JOIN other_available_features ON properties.property_type_code = other_available_features.feature_type_code WHERE (ref_property_types.property_type_description = 'House' OR ref_property_types.property_type_description = 'Apartment') AND properties.room_count > 1
166,230,What airline serves the most flights?,flight_2,extra,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1,7,"SELECT airline, COUNT(*) as flight_count FROM flights GROUP BY airline ORDER BY flight_count DESC LIMIT 1
SELECT airlines.airline, COUNT(flights.flightno) AS flight_count FROM airlines JOIN flights ON airlines.abbreviation = flights.airline GROUP BY airlines.airline ORDER BY flight_count DESC LIMIT 1
SELECT airline, COUNT(*) as flight_count FROM flights GROUP BY airline ORDER BY flight_count DESC LIMIT 1
SELECT airlines.airline, COUNT(flights.flightno) AS flight_count FROM airlines JOIN flights ON airlines.abbreviation = flights.airline GROUP BY airlines.airline ORDER BY flight_count DESC LIMIT 1
SELECT airlines.airline, COUNT(flights.flightno) AS flight_count FROM airlines JOIN flights ON airlines.abbreviation = flights.airline GROUP BY airlines.airline ORDER BY flight_count DESC LIMIT 1
SELECT airline, COUNT(*) as flight_count FROM flights GROUP BY airline ORDER BY flight_count DESC LIMIT 1
SELECT airline, COUNT(*) as flight_count FROM flights GROUP BY airline ORDER BY flight_count DESC LIMIT 1","SELECT airline, COUNT(*) as flight_count FROM flights GROUP BY airline ORDER BY flight_count DESC LIMIT 1"
167,715,Give me Brazil’s population and life expectancies.,world_1,medium,"SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  ""Brazil""",7,"SELECT country.population, country.lifeexpectancy FROM country WHERE country.name = 'Brazil'
SELECT country.population, country.lifeexpectancy FROM country WHERE country.name = 'Brazil'
SELECT country.population, country.lifeexpectancy FROM country WHERE country.name = 'Brazil'
SELECT country.population, country.lifeexpectancy FROM country WHERE country.name = 'Brazil'
SELECT country.population, country.lifeexpectancy FROM country WHERE country.name = 'Brazil'
SELECT country.population, country.lifeexpectancy FROM country WHERE country.name = 'Brazil'
SELECT country.population, country.lifeexpectancy FROM country WHERE country.name = 'Brazil'","SELECT country.population, country.lifeexpectancy FROM country WHERE country.name = 'Brazil'"
168,276,Which shops' number products is above the average? Give me the shop names.,employee_hire_evaluation,hard,SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop),7,"SELECT shop.name FROM shop WHERE number_products > (SELECT AVG(number_products) FROM shop) 
SELECT shop.name  FROM shop  WHERE number_products > (SELECT AVG(number_products) FROM shop) 
SELECT shop.name  FROM shop  WHERE number_products > (SELECT AVG(number_products) FROM shop) 
SELECT shop.name FROM shop WHERE number_products > (SELECT AVG(number_products) FROM shop) 
SELECT shop.name  FROM shop  WHERE number_products > (SELECT AVG(number_products) FROM shop) 
SELECT shop.name  FROM shop  WHERE number_products > (SELECT AVG(number_products) FROM shop) 
SELECT shop.name  FROM shop  WHERE number_products > (SELECT AVG(number_products) FROM shop) ",SELECT shop.name  FROM shop  WHERE number_products > (SELECT AVG(number_products) FROM shop) 
169,512,What are the descriptions for all the math courses?,student_transcripts_tracking,easy,SELECT course_description FROM Courses WHERE course_name  =  'math',7,"SELECT course_description FROM courses WHERE course_name LIKE '%Math%'
SELECT course_description FROM courses WHERE course_name LIKE '%Math%'
SELECT course_description FROM courses WHERE course_name LIKE '%Math%'
SELECT course_description FROM courses WHERE course_name LIKE '%Math%'
SELECT course_description FROM courses WHERE course_name LIKE '%Math%'
SELECT course_description FROM courses WHERE course_name LIKE '%Math%'
SELECT course_description FROM courses WHERE course_name LIKE ""%Math%""",SELECT course_description FROM courses WHERE course_name LIKE '%Math%'
170,43,Find the number of concerts happened in the stadium with the highest capacity .,concert_singer,hard,select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1),7,"SELECT COUNT(*) FROM concert WHERE stadium_id = (SELECT stadium_id FROM stadium WHERE capacity = (SELECT MAX(capacity) FROM stadium))
SELECT COUNT(*) FROM concert WHERE stadium_id = (SELECT stadium_id FROM stadium WHERE capacity = (SELECT MAX(capacity) FROM stadium))
SELECT COUNT(*)  FROM concert  WHERE stadium_id =      (SELECT stadium_id       FROM stadium       ORDER BY capacity DESC       LIMIT 1)
SELECT COUNT(*)  FROM concert  WHERE stadium_id =      (SELECT stadium_id       FROM stadium       ORDER BY capacity DESC       LIMIT 1)
SELECT COUNT(*)  FROM concert  WHERE stadium_id =      (SELECT stadium_id       FROM stadium       ORDER BY capacity DESC       LIMIT 1)
SELECT COUNT(*)  FROM concert  WHERE stadium_id =      (SELECT stadium_id       FROM stadium       ORDER BY capacity DESC       LIMIT 1)
SELECT COUNT(*)  FROM concert  WHERE stadium_id =      (SELECT stadium_id       FROM stadium       ORDER BY capacity DESC       LIMIT 1)",SELECT COUNT(*)  FROM concert  WHERE stadium_id =      (SELECT stadium_id       FROM stadium       ORDER BY capacity DESC       LIMIT 1)
171,956,Which dogs are owned by someone who lives in Virginia? List the owner's first name and the dog's name.,dog_kennels,medium,"SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'",7,"SELECT owners.first_name, dogs.name, dogs.breed_code FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id WHERE owners.state = 'Virginia'
SELECT owners.first_name, dogs.name, dogs.breed_code FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id WHERE owners.state = 'Virginia'
SELECT owners.first_name, dogs.name, dogs.breed_code FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id WHERE owners.state = 'Virginia'
SELECT owners.first_name, dogs.name, dogs.breed_code FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id WHERE owners.state = 'Virginia'
SELECT owners.first_name, dogs.name, dogs.breed_code FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id WHERE owners.state = 'Virginia'
SELECT owners.first_name, dogs.name, dogs.breed_code FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id WHERE owners.state = 'Virginia'
SELECT owners.first_name, dogs.name, dogs.breed_code FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id WHERE owners.state = 'Virginia'","SELECT owners.first_name, dogs.name, dogs.breed_code FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id WHERE owners.state = 'Virginia'"
172,934,What is the name of the breed with the most dogs?,dog_kennels,extra,SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1,7,"SELECT breed_name, COUNT(*) as num_dogs FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY breed_name ORDER BY num_dogs DESC LIMIT 1
SELECT breed_name, COUNT(dog_id) AS dog_count FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY breed_name ORDER BY dog_count DESC LIMIT 1
SELECT breed_name, COUNT(dog_id) AS dog_count FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY breed_name ORDER BY dog_count DESC LIMIT 1
SELECT breed_name, COUNT(dog_id) AS dog_count FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY breed_name ORDER BY dog_count DESC LIMIT 1
SELECT breed_name, COUNT(dog_id) AS dog_count FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY breed_name ORDER BY dog_count DESC LIMIT 1
SELECT breed_name, COUNT(dog_id) AS dog_count FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY breed_name ORDER BY dog_count DESC LIMIT 1
SELECT breed_name, COUNT(dog_id) AS dog_count FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY breed_name ORDER BY dog_count DESC LIMIT 1","SELECT breed_name, COUNT(dog_id) AS dog_count FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY breed_name ORDER BY dog_count DESC LIMIT 1"
173,582,What is the description for the section named h?,student_transcripts_tracking,easy,SELECT section_description FROM Sections WHERE section_name  =  'h',7,"SELECT section_description FROM sections WHERE section_name = 'h'
SELECT section_description FROM sections WHERE section_name = 'h'
SELECT section_description FROM sections WHERE section_name = 'h'
SELECT section_description FROM sections WHERE section_name = 'h'
SELECT section_description FROM sections WHERE section_name = 'h'
SELECT section_description FROM sections WHERE section_name = 'h'
SELECT section_description FROM sections WHERE section_name = 'h'",SELECT section_description FROM sections WHERE section_name = 'h'
174,886,What is the name of the high schooler who has the greatest number of friends?,network_1,extra,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,7,"SELECT h.name FROM highschooler AS h JOIN (SELECT student_id, COUNT(*) AS friend_count FROM friend GROUP BY student_id) AS f ON h.id = f.student_id ORDER BY f.friend_count DESC LIMIT 1
SELECT h.name FROM highschooler AS h JOIN (SELECT student_id, COUNT(*) AS friend_count FROM friend GROUP BY student_id) AS f ON h.id = f.student_id ORDER BY f.friend_count DESC LIMIT 1
SELECT h.name FROM highschooler AS h JOIN (SELECT student_id, COUNT(*) AS friend_count FROM friend GROUP BY student_id) AS f ON h.id = f.student_id ORDER BY f.friend_count DESC LIMIT 1
SELECT h.name FROM highschooler AS h JOIN (SELECT student_id, COUNT(*) AS friend_count       FROM friend       GROUP BY student_id       ORDER BY friend_count DESC       LIMIT 1) AS f ON h.id = f.student_id
SELECT h.name FROM highschooler AS h JOIN (SELECT student_id, COUNT(*) AS num_friends FROM friend GROUP BY student_id ORDER BY num_friends DESC LIMIT 1) AS f ON h.id = f.student_id
SELECT h.name FROM highschooler AS h JOIN (SELECT student_id, COUNT(*) AS friend_count FROM friend GROUP BY student_id) AS f ON h.id = f.student_id ORDER BY f.friend_count DESC LIMIT 1
SELECT h.name FROM highschooler AS h JOIN (SELECT student_id, COUNT(*) AS friend_count FROM friend GROUP BY student_id) AS f ON h.id = f.student_id ORDER BY f.friend_count DESC LIMIT 1","SELECT h.name FROM highschooler AS h JOIN (SELECT student_id, COUNT(*) AS friend_count FROM friend GROUP BY student_id) AS f ON h.id = f.student_id ORDER BY f.friend_count DESC LIMIT 1"
175,990,How much does each charge type costs? List both charge type and amount.,dog_kennels,medium,"SELECT charge_type ,  charge_amount FROM Charges",7,"SELECT charge_type, SUM(charge_amount) as Total_Cost FROM charges GROUP BY charge_type
SELECT charge_type, SUM(charge_amount) as Total_Cost FROM charges GROUP BY charge_type
SELECT charge_type, SUM(charge_amount) as Total_Cost FROM charges GROUP BY charge_type
SELECT charge_type, SUM(charge_amount) AS total_charge FROM charges GROUP BY charge_type
SELECT charge_type, SUM(charge_amount) as Total_Cost FROM charges GROUP BY charge_type
SELECT charge_type, SUM(charge_amount) as Total_Cost FROM charges GROUP BY charge_type
SELECT charge_type, SUM(charge_amount) as Total_Cost FROM charges GROUP BY charge_type","SELECT charge_type, SUM(charge_amount) as Total_Cost FROM charges GROUP BY charge_type"
176,231,Find the abbreviation and country of the airline that has fewest number of flights?,flight_2,extra,"SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1",7,"SELECT airlines.abbreviation, airlines.country FROM airlines JOIN flights ON airlines.airline = flights.airline GROUP BY airlines.airline ORDER BY COUNT(flights.flightno) ASC LIMIT 1
SELECT airlines.abbreviation, airlines.country FROM airlines JOIN flights ON airlines.airline = flights.airline GROUP BY airlines.airline ORDER BY COUNT(flights.flightno) LIMIT 1
SELECT airlines.abbreviation, airlines.country FROM airlines JOIN flights ON airlines.airline = flights.airline GROUP BY airlines.airline ORDER BY COUNT(flights.flightno) ASC LIMIT 1
SELECT airlines.abbreviation, airlines.country FROM airlines JOIN flights ON airlines.airline = flights.airline GROUP BY airlines.airline ORDER BY COUNT(flights.flightno) ASC LIMIT 1
SELECT airlines.abbreviation, airlines.country FROM airlines JOIN flights ON airlines.airline = flights.airline GROUP BY airlines.airline ORDER BY COUNT(flights.flightno) ASC LIMIT 1
SELECT airlines.abbreviation, airlines.country FROM airlines JOIN flights ON airlines.airline = flights.airline GROUP BY airlines.airline ORDER BY COUNT(flights.flightno) ASC LIMIT 1
SELECT airlines.abbreviation, airlines.country FROM airlines JOIN flights ON airlines.airline = flights.airline GROUP BY airlines.airline ORDER BY COUNT(flights.flightno) ASC LIMIT 1","SELECT airlines.abbreviation, airlines.country FROM airlines JOIN flights ON airlines.airline = flights.airline GROUP BY airlines.airline ORDER BY COUNT(flights.flightno) ASC LIMIT 1"
177,294,Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products.,employee_hire_evaluation,hard,SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000,7,"SELECT DISTINCT s1.district  FROM shop AS s1  JOIN shop AS s2 ON s1.district = s2.district  WHERE s1.number_products < 3000 AND s2.number_products > 10000
SELECT DISTINCT s1.district  FROM shop AS s1  JOIN shop AS s2 ON s1.district = s2.district  WHERE s1.number_products < 3000 AND s2.number_products > 10000
SELECT DISTINCT s1.district FROM shop AS s1 JOIN shop AS s2 ON s1.district = s2.district WHERE s1.number_products < 3000 AND s2.number_products > 10000
SELECT DISTINCT s1.district  FROM shop s1 JOIN shop s2 ON s1.district = s2.district WHERE s1.number_products < 3000 AND s2.number_products > 10000
SELECT DISTINCT s1.district  FROM shop AS s1  JOIN shop AS s2 ON s1.district = s2.district  WHERE s1.number_products < 3000 AND s2.number_products > 10000
SELECT DISTINCT s1.district  FROM shop AS s1  JOIN shop AS s2 ON s1.district = s2.district  WHERE s1.number_products < 3000 AND s2.number_products > 10000
SELECT DISTINCT s1.district FROM shop AS s1 JOIN shop AS s2 ON s1.district = s2.district WHERE s1.number_products < 3000 AND s2.number_products > 10000",SELECT DISTINCT s1.district  FROM shop AS s1  JOIN shop AS s2 ON s1.district = s2.district  WHERE s1.number_products < 3000 AND s2.number_products > 10000
178,1,What is the total number of singers?,concert_singer,easy,SELECT count(*) FROM singer,7,"SELECT COUNT(*) FROM singer
SELECT COUNT(*) FROM singer
SELECT COUNT(*) FROM singer
SELECT COUNT(*) FROM singer
SELECT COUNT(*) FROM singer
SELECT COUNT(*) FROM singer
SELECT COUNT(*) FROM singer",SELECT COUNT(*) FROM singer
179,439,Find the highest rank of losers in all matches.,wta_1,easy,SELECT min(loser_rank) FROM matches,7,"SELECT MAX(loser_rank) as highest_rank_of_losers FROM matches
SELECT MAX(loser_rank) as highest_rank_of_losers FROM matches
SELECT MAX(loser_rank) as highest_rank_of_losers FROM matches
SELECT MAX(loser_rank) as highest_rank_of_losers FROM matches
SELECT MAX(loser_rank) as highest_rank_of_losers FROM matches
SELECT MAX(loser_rank) as highest_rank_of_losers FROM matches
SELECT MAX(loser_rank) as highest_rank_of_losers FROM matches",SELECT MAX(loser_rank) as highest_rank_of_losers FROM matches
180,776,Which Asian countries have a population that is larger than any country in Africa?,world_1,extra,"SELECT Name FROM country WHERE Continent  =  ""Asia""  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  ""Africa"")",7,"SELECT c1.name AS Asian_Country, c2.name AS Africa_Country FROM country c1 JOIN country c2 ON c1.continent = 'Asia' AND c2.continent = 'Africa' WHERE c1.population > c2.population
SELECT c1.name AS Asian_Country, c2.name AS Africa_Country FROM country c1 JOIN country c2 ON c1.continent = 'Asia' AND c2.continent = 'Africa' WHERE c1.population > c2.population
SELECT A.name AS Asian_Country, A.population AS Asian_Population, MAX(F.population) AS Max_African_Population FROM country A JOIN (SELECT countrycode FROM city GROUP BY countrycode) C ON A.code = C.countrycode JOIN city CI ON C.countrycode = CI.countrycode JOIN (SELECT code, population FROM country WHERE continent = 'Africa') F ON A.code != F.code WHERE A.continent = 'Asia' GROUP BY A.name HAVING Asian_Population > MAX(F.population)
SELECT c1.name AS Asian_Country, c2.name AS Africa_Country FROM country c1 JOIN country c2 ON c1.continent = 'Asia' AND c2.continent = 'Africa' WHERE c1.population > c2.population
SELECT c1.name, c1.population  FROM country c1  JOIN (SELECT MAX(c2.population) as max_african_population        FROM country c2        WHERE c2.continent = 'Africa') as africa  WHERE c1.continent = 'Asia' AND c1.population > africa.max_african_population
SELECT c1.name AS Asian_Country, c2.name AS Africa_Country FROM country c1 JOIN country c2 ON c1.continent = 'Asia' AND c2.continent = 'Africa' WHERE c1.population > c2.population
SELECT A.name AS Asian_Country, A.population AS Asian_Population, MAX(F.population) AS Max_African_Population FROM country A JOIN (SELECT countrycode FROM city GROUP BY countrycode) C ON A.code = C.countrycode JOIN city CI ON C.countrycode = CI.countrycode JOIN (SELECT code, population FROM country WHERE continent = 'Africa') F ON A.code != F.code WHERE A.continent = 'Asia' GROUP BY A.name HAVING Asian_Population > MAX(F.population)","SELECT c1.name AS Asian_Country, c2.name AS Africa_Country FROM country c1 JOIN country c2 ON c1.continent = 'Asia' AND c2.continent = 'Africa' WHERE c1.population > c2.population"
181,774,What are the African countries that have a  population less than any country in Asia?,world_1,extra,"SELECT Name FROM country WHERE Continent  =  ""Africa""  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  ""Asia"")",7,"SELECT c1.name AS African_Country, c2.name AS Asian_Country FROM country c1 JOIN country c2 ON c1.population < c2.population WHERE c1.continent = 'Africa' AND c2.continent = 'Asia' ORDER BY c1.population DESC
SELECT c1.name AS African_Country, c2.name AS Asian_Country FROM country c1 JOIN country c2 ON c1.population < c2.population WHERE c1.continent = 'Africa' AND c2.continent = 'Asia' ORDER BY c1.population DESC
SELECT c1.name AS African_Country, c2.name AS Asian_Country FROM country AS c1 JOIN country AS c2 ON c1.population < c2.population WHERE c1.continent = 'Africa' AND c2.continent = 'Asia' GROUP BY African_Country HAVING MIN(c2.population)
SELECT c1.name AS African_Country, c2.name AS Asian_Country FROM country c1 JOIN country c2 ON c1.population < c2.population WHERE c1.continent = 'Africa' AND c2.continent = 'Asia' ORDER BY c1.population DESC
SELECT c1.name AS African_Country FROM country c1 WHERE c1.continent = 'Africa' AND c1.population < ALL (     SELECT c2.population     FROM country c2     WHERE c2.continent = 'Asia' )
SELECT c1.name AS African_Country, c2.name AS Asian_Country FROM country AS c1 JOIN country AS c2 ON c1.population < c2.population WHERE c1.continent = 'Africa' AND c2.continent = 'Asia' GROUP BY African_Country HAVING MAX(c2.population) 
SELECT c1.name AS African_Country, c2.name AS Asian_Country FROM country c1 JOIN country c2 ON c1.population < c2.population WHERE c1.continent = 'Africa' AND c2.continent = 'Asia' ORDER BY c1.population DESC","SELECT c1.name AS African_Country, c2.name AS Asian_Country FROM country c1 JOIN country c2 ON c1.population < c2.population WHERE c1.continent = 'Africa' AND c2.continent = 'Asia' ORDER BY c1.population DESC"
182,644,What are the ids of the TV channels that do not have any cartoons directed by Ben Jones?,tvshow,hard,SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones',7,"SELECT tv_channel.id  FROM tv_channel  LEFT JOIN cartoon ON tv_channel.id = cartoon.channel  WHERE cartoon.directed_by != 'Ben Jones' OR cartoon.directed_by IS NULL
SELECT tv_channel.id  FROM tv_channel  LEFT JOIN cartoon ON tv_channel.id = cartoon.channel  WHERE cartoon.directed_by != 'Ben Jones' OR cartoon.directed_by IS NULL
SELECT tv_channel.id  FROM tv_channel  LEFT JOIN cartoon ON tv_channel.id = cartoon.channel  WHERE cartoon.directed_by != 'Ben Jones' OR cartoon.directed_by IS NULL
SELECT tv_channel.id  FROM tv_channel  LEFT JOIN cartoon ON tv_channel.id = cartoon.channel  WHERE cartoon.directed_by != 'Ben Jones' OR cartoon.directed_by IS NULL
SELECT tv_channel.id  FROM tv_channel  LEFT JOIN cartoon ON tv_channel.id = cartoon.channel  WHERE cartoon.directed_by != 'Ben Jones' OR cartoon.directed_by IS NULL
SELECT tv_channel.id  FROM tv_channel  LEFT JOIN cartoon ON tv_channel.id = cartoon.channel  WHERE cartoon.directed_by != 'Ben Jones' OR cartoon.directed_by IS NULL
SELECT tv_channel.id  FROM tv_channel  LEFT JOIN cartoon ON tv_channel.id = cartoon.channel  WHERE cartoon.directed_by != 'Ben Jones' OR cartoon.directed_by IS NULL",SELECT tv_channel.id  FROM tv_channel  LEFT JOIN cartoon ON tv_channel.id = cartoon.channel  WHERE cartoon.directed_by != 'Ben Jones' OR cartoon.directed_by IS NULL
183,487,"Find the first name, country code and birth date of the winner who has the highest rank points in all matches.",wta_1,hard,"SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1",7,"SELECT players.first_name, players.country_code, players.birth_date FROM players JOIN rankings ON players.player_id = rankings.player_id WHERE rankings.ranking_points = (SELECT MAX(ranking_points) FROM rankings) AND players.player_id IN (SELECT winner_id FROM matches UNION SELECT loser_id FROM matches)
SELECT players.first_name, players.country_code, players.birth_date FROM players JOIN rankings ON players.player_id = rankings.player_id WHERE rankings.ranking_points = (SELECT MAX(ranking_points) FROM rankings) AND players.player_id IN (SELECT winner_id FROM matches UNION SELECT loser_id FROM matches)
SELECT players.first_name, players.country_code, players.birth_date FROM players JOIN rankings ON players.player_id = rankings.player_id WHERE rankings.ranking_points = (SELECT MAX(ranking_points) FROM rankings) AND players.player_id IN (SELECT winner_id FROM matches UNION SELECT loser_id FROM matches)
SELECT players.first_name, players.country_code, players.birth_date FROM players JOIN rankings ON players.player_id = rankings.player_id WHERE rankings.ranking_points = (SELECT MAX(ranking_points) FROM rankings) AND players.player_id IN (SELECT winner_id FROM matches UNION SELECT loser_id FROM matches)
SELECT players.first_name, players.country_code, players.birth_date FROM players JOIN rankings ON players.player_id = rankings.player_id WHERE rankings.ranking_points = (SELECT MAX(ranking_points) FROM rankings) AND players.player_id IN (SELECT winner_id FROM matches UNION SELECT loser_id FROM matches)
SELECT players.first_name, players.country_code, players.birth_date FROM players JOIN rankings ON players.player_id = rankings.player_id WHERE rankings.ranking_points = (SELECT MAX(ranking_points) FROM rankings) AND players.player_id IN (SELECT winner_id FROM matches UNION SELECT loser_id FROM matches)
SELECT players.first_name, players.country_code, players.birth_date FROM players JOIN rankings ON players.player_id = rankings.player_id WHERE rankings.ranking_points = (SELECT MAX(ranking_points) FROM rankings) AND players.player_id IN (SELECT winner_id FROM matches UNION SELECT loser_id FROM matches)","SELECT players.first_name, players.country_code, players.birth_date FROM players JOIN rankings ON players.player_id = rankings.player_id WHERE rankings.ranking_points = (SELECT MAX(ranking_points) FROM rankings) AND players.player_id IN (SELECT winner_id FROM matches UNION SELECT loser_id FROM matches)"
184,536,"What are the first, middle, and last names for everybody enrolled in a Bachelors program?",student_transcripts_tracking,hard,"SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'",7,"SELECT first_name, middle_name, last_name  FROM students  INNER JOIN student
SELECT s.first_name, s.middle_name, s.last_name FROM students AS s 
SELECT first_name, middle_name, last_name  FROM students  INNER JOIN student
SELECT first_name, middle_name, last_name FROM students INNER JOIN student_enrol
SELECT s.first_name, s.middle_name, s.last_name FROM students s JO
SELECT first_name, middle_name, last_name FROM students JOIN student_enrolment ON
SELECT first_name, middle_name, last_name FROM students JOIN student_enrolment ON","SELECT first_name, middle_name, last_name  FROM students  INNER JOIN student"
185,832,"What are the maximum and minimum share of performances whose type is not ""Live final"".",orchestra,medium,"SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != ""Live final""",7,"SELECT MAX(share) AS max_share, MIN(share) AS min_share FROM performance WHERE type != 'Live final'
SELECT MAX(share) AS max_share, MIN(share) AS min_share FROM performance WHERE type != 'Live final'
SELECT MAX(share) AS max_share, MIN(share) AS min_share FROM performance WHERE type != 'Live final'
SELECT MAX(share) AS max_share, MIN(share) AS min_share FROM performance WHERE type != 'Live final'
SELECT MAX(share) AS max_share, MIN(share) AS min_share FROM performance WHERE type != 'Live final'
SELECT MAX(share) AS max_share, MIN(share) AS min_share FROM performance WHERE type != 'Live final'
SELECT MAX(share) as max_share, MIN(share) as min_share FROM performance WHERE type != 'Live final'","SELECT MAX(share) AS max_share, MIN(share) AS min_share FROM performance WHERE type != 'Live final'"
186,658,Return the maximum final tables made across all poker players who have earnings below 200000.,poker_player,easy,SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000,7,"SELECT MAX(final_table_made)  FROM poker_player  WHERE earnings < 200000
SELECT MAX(final_table_made)  FROM poker_player  WHERE earnings < 200000
SELECT MAX(poker_player.final_table_made)  FROM poker_player  INNER JOIN people ON poker_player.people_id = people.people_id  WHERE poker_player.earnings < 200000
SELECT MAX(final_table_made)  FROM poker_player  WHERE earnings < 200000
SELECT MAX(final_table_made)  FROM poker_player  WHERE earnings < 200000
SELECT MAX(poker_player.final_table_made)  FROM poker_player  INNER JOIN people ON poker_player.people_id = people.people_id  WHERE poker_player.earnings < 200000
SELECT MAX(poker_player.final_table_made)  FROM poker_player  JOIN people ON poker_player.people_id = people.people_id  WHERE poker_player.earnings < 200000",SELECT MAX(final_table_made)  FROM poker_player  WHERE earnings < 200000
187,346,What are the codes of template types that are not used for any document?,cre_Doc_Template_Mgt,hard,SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id,7,"SELECT ref_template_types.template_type_code  FROM ref_template_types  LEFT JOIN templates ON ref_template_types.template_type_code = templates.template_type_code  WHERE templates.template_type_code IS NULL
SELECT ref_template_types.template_type_code  FROM ref_template_types  LEFT JOIN templates ON ref_template_types.template_type_code = templates.template_type_code  WHERE templates.template_type_code IS NULL
SELECT ref_template_types.template_type_code  FROM ref_template_types  LEFT JOIN templates ON ref_template_types.template_type_code = templates.template_type_code  WHERE templates.template_type_code IS NULL
SELECT ref_template_types.template_type_code  FROM ref_template_types  LEFT JOIN templates ON ref_template_types.template_type_code = templates.template_type_code  WHERE templates.template_type_code IS NULL
SELECT ref_template_types.template_type_code  FROM ref_template_types  LEFT JOIN templates ON ref_template_types.template_type_code = templates.template_type_code  WHERE templates.template_type_code IS NULL
SELECT ref_template_types.template_type_code  FROM ref_template_types  LEFT JOIN templates ON ref_template_types.template_type_code = templates.template_type_code  WHERE templates.template_type_code IS NULL
SELECT ref_template_types.template_type_code  FROM ref_template_types  LEFT JOIN templates ON ref_template_types.template_type_code = templates.template_type_code  WHERE templates.template_type_code IS NULL",SELECT ref_template_types.template_type_code  FROM ref_template_types  LEFT JOIN templates ON ref_template_types.template_type_code = templates.template_type_code  WHERE templates.template_type_code IS NULL
188,596,What is the country with the most number of TV Channels and how many does it have?,tvshow,hard,"SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;",7,"SELECT tv_channel.country, COUNT(tv_channel.id) as Number_of_Channels FROM tv_channel GROUP BY tv_channel.country ORDER BY Number_of_Channels DESC LIMIT 1
SELECT tv_channel.country, COUNT(tv_channel.id) as NumberOfChannels FROM tv_channel GROUP BY tv_channel.country ORDER BY NumberOfChannels DESC LIMIT 1
SELECT tv_channel.country, COUNT(tv_channel.id) as num_channels FROM tv_channel GROUP BY tv_channel.country ORDER BY num_channels DESC LIMIT 1
SELECT tv_channel.country, COUNT(tv_channel.id) as NumberOfChannels FROM tv_channel GROUP BY tv_channel.country ORDER BY NumberOfChannels DESC LIMIT 1
SELECT tv_channel.country, COUNT(tv_channel.id) as Number_of_Channels FROM tv_channel GROUP BY tv_channel.country ORDER BY Number_of_Channels DESC LIMIT 1
SELECT tv_channel.country, COUNT(tv_channel.id) as total_channels FROM tv_channel GROUP BY tv_channel.country ORDER BY total_channels DESC LIMIT 1
SELECT tv_channel.country, COUNT(tv_channel.id) as Number_of_Channels FROM tv_channel GROUP BY tv_channel.country ORDER BY Number_of_Channels DESC LIMIT 1","SELECT tv_channel.country, COUNT(tv_channel.id) as Number_of_Channels FROM tv_channel GROUP BY tv_channel.country ORDER BY Number_of_Channels DESC LIMIT 1"
189,312,Return the id and type code of the template that is used for the greatest number of documents.,cre_Doc_Template_Mgt,extra,"SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT templates.template_id, templates.template_type_code  FROM templates  JOIN documents ON templates.template_id = documents.template_id  GROUP BY templates.template_id, templates.template_type_code  ORDER BY COUNT(documents.document_id) DESC  LIMIT 1
SELECT templates.template_id, templates.template_type_code  FROM templates  JOIN documents ON templates.template_id = documents.template_id  GROUP BY templates.template_id, templates.template_type_code  ORDER BY COUNT(documents.document_id) DESC  LIMIT 1
SELECT templates.template_id, templates.template_type_code  FROM templates  JOIN documents ON templates.template_id = documents.template_id  GROUP BY templates.template_id, templates.template_type_code  ORDER BY COUNT(documents.document_id) DESC  LIMIT 1
SELECT templates.template_id, templates.template_type_code  FROM templates  JOIN documents ON templates.template_id = documents.template_id  GROUP BY templates.template_id, templates.template_type_code  ORDER BY COUNT(documents.document_id) DESC  LIMIT 1
SELECT templates.template_id, templates.template_type_code  FROM templates  JOIN documents ON templates.template_id = documents.template_id  GROUP BY templates.template_id, templates.template_type_code  ORDER BY COUNT(documents.document_id) DESC  LIMIT 1
SELECT templates.template_id, templates.template_type_code  FROM templates  JOIN documents ON templates.template_id = documents.template_id  GROUP BY templates.template_id, templates.template_type_code  ORDER BY COUNT(documents.document_id) DESC  LIMIT 1
SELECT templates.template_id, templates.template_type_code  FROM templates  JOIN documents ON templates.template_id = documents.template_id  GROUP BY templates.template_id, templates.template_type_code  ORDER BY COUNT(documents.document_id) DESC  LIMIT 1","SELECT templates.template_id, templates.template_type_code  FROM templates  JOIN documents ON templates.template_id = documents.template_id  GROUP BY templates.template_id, templates.template_type_code  ORDER BY COUNT(documents.document_id) DESC  LIMIT 1"
190,212,How many flights fly from Aberdeen to Ashley?,flight_2,hard,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  ""Ashley"" AND T3.City  =  ""Aberdeen""",7,"SELECT COUNT(*) FROM flights WHERE sourceairport = (SELECT airportcode FROM airports WHERE airportname = 'Aberdeen') AND destairport = (SELECT airportcode FROM airports WHERE airportname = 'Ashley')
SELECT COUNT(*) FROM flights WHERE sourceairport IN (SELECT airportcode FROM airports WHERE city = 'Aberdeen') AND destairport IN (SELECT airportcode FROM airports WHERE city = 'Ashley')
SELECT COUNT(*) FROM flights WHERE sourceairport IN (SELECT airportcode FROM airports WHERE city = 'Aberdeen') AND destairport IN (SELECT airportcode FROM airports WHERE city = 'Ashley')
SELECT COUNT(*) FROM flights WHERE sourceairport IN (SELECT airportcode FROM airports WHERE city = 'Aberdeen') AND destairport IN (SELECT airportcode FROM airports WHERE city = 'Ashley')
SELECT COUNT(*) FROM flights WHERE sourceairport IN (SELECT airportcode FROM airports WHERE city = 'Aberdeen') AND destairport IN (SELECT airportcode FROM airports WHERE city = 'Ashley')
SELECT COUNT(*) FROM flights WHERE sourceairport IN (SELECT airportcode FROM airports WHERE city = 'Aberdeen') AND destairport IN (SELECT airportcode FROM airports WHERE city = 'Ashley')
SELECT COUNT(*) FROM flights WHERE sourceairport IN (SELECT airportcode FROM airports WHERE city = 'Aberdeen') AND destairport IN (SELECT airportcode FROM airports WHERE city = 'Ashley')",SELECT COUNT(*) FROM flights WHERE sourceairport IN (SELECT airportcode FROM airports WHERE city = 'Aberdeen') AND destairport IN (SELECT airportcode FROM airports WHERE city = 'Ashley')
191,961,Who owns the youngest dog? Give me his or her last name.,dog_kennels,extra,SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs ),7,"SELECT owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id WHERE dogs.age = (SELECT MIN(age) FROM dogs) 
SELECT owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id WHERE dogs.age = (SELECT MIN(age) FROM dogs) 
SELECT owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id WHERE dogs.age = (SELECT MIN(age) FROM dogs) 
SELECT owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id WHERE dogs.age = (SELECT MIN(age) FROM dogs) 
SELECT owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id WHERE dogs.age = (SELECT MIN(age) FROM dogs) 
SELECT owners.last_name  FROM owners  INNER JOIN dogs ON owners.owner_id = dogs.owner_id  WHERE dogs.age = (SELECT MIN(age) FROM dogs) 
SELECT owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id WHERE dogs.age = (SELECT MIN(age) FROM dogs) ",SELECT owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id WHERE dogs.age = (SELECT MIN(age) FROM dogs) 
192,547,What's the name of the course with most number of enrollments?,student_transcripts_tracking,extra,SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1,7,"SELECT c.course_name, COUNT(sec.section_id) as enrollment_count FROM courses c JOIN sections sec ON
SELECT c.course_name, COUNT(sec.section_id) as enrollment_count FROM courses c JOIN sections sec ON
SELECT c.course_name, COUNT(sec.section_id) as enrollment_count FROM courses c JOIN sections sec ON
SELECT c.course_name, COUNT(sec.section_id) as enrollment_count FROM courses c JOIN sections sec ON
SELECT c.course_name, COUNT(sec.section_id) as enrollment_count FROM courses c JOIN sections sec ON
SELECT c.course_name, COUNT(sec.section_id) as enrollments FROM courses c JOIN sections sec ON c
SELECT c.course_name, COUNT(sec.section_id) as enrollment_count FROM courses c JOIN sections sec ON","SELECT c.course_name, COUNT(sec.section_id) as enrollment_count FROM courses c JOIN sections sec ON"
193,553,What is the phone number of the man with the first name Timmothy and the last name Ward?,student_transcripts_tracking,medium,SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward',7,"SELECT cell_mobile_number  FROM students  WHERE first_name = 'Timmothy'
SELECT cell_mobile_number  FROM students  WHERE first_name = 'Timmothy'
SELECT cell_mobile_number  FROM students  WHERE first_name = 'Timmothy'
SELECT cell_mobile_number  FROM students  WHERE first_name = 'Timmothy'
SELECT cell_mobile_number  FROM students  WHERE first_name = 'Timmothy'
SELECT cell_mobile_number  FROM students  WHERE first_name = 'Timmothy'
SELECT cell_mobile_number FROM students WHERE first_name = 'Timmothy' AND last_name = 'W",SELECT cell_mobile_number  FROM students  WHERE first_name = 'Timmothy'
194,674,How many people are there of each nationality?,poker_player,medium,"SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality",7,"SELECT nationality, COUNT(*) as count FROM people GROUP BY nationality
SELECT nationality, COUNT(*) as count FROM people GROUP BY nationality
SELECT nationality, COUNT(*) as count FROM people GROUP BY nationality
SELECT nationality, COUNT(*) as count FROM people GROUP BY nationality
SELECT nationality, COUNT(*) as count FROM people GROUP BY nationality
SELECT nationality, COUNT(*) as count FROM people GROUP BY nationality
SELECT nationality, COUNT(*) as people_count FROM people GROUP BY nationality","SELECT nationality, COUNT(*) as count FROM people GROUP BY nationality"
195,712,Which language is the most popular in Aruba?,world_1,extra,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Aruba"" ORDER BY Percentage DESC LIMIT 1",7,"SELECT language FROM countrylanguage WHERE countrycode = ""ABW"" ORDER BY percentage DESC LIMIT 1
SELECT countrylanguage.language FROM country INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.name = 'Aruba' ORDER BY countrylanguage.percentage DESC LIMIT 1
SELECT language FROM countrylanguage WHERE countrycode = ""ABW"" ORDER BY percentage DESC LIMIT 1
SELECT language FROM countrylanguage WHERE countrycode = ""ABW"" ORDER BY percentage DESC LIMIT 1
SELECT language FROM countrylanguage WHERE countrycode = ""ABW"" ORDER BY percentage DESC LIMIT 1
SELECT language FROM countrylanguage WHERE countrycode = ""ABW"" ORDER BY percentage DESC LIMIT 1
SELECT countrylanguage.language FROM country INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.name = ""Aruba"" ORDER BY countrylanguage.percentage DESC LIMIT 1","SELECT language FROM countrylanguage WHERE countrycode = ""ABW"" ORDER BY percentage DESC LIMIT 1"
196,53,Find the number of dog pets that are raised by female students (with sex F).,pets_1,hard,SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog',7,"SELECT COUNT(*) FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE student.sex = 'F' AND pets.pettype = 'dog'
SELECT COUNT(*) FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE student.sex = 'F' AND pets.pettype = 'dog'
SELECT COUNT(*) FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE student.sex = 'F' AND pets.pettype = 'dog'
SELECT COUNT(*) FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE student.sex = 'F' AND pets.pettype = 'dog'
SELECT COUNT(*) FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE student.sex = 'F' AND pets.pettype = 'dog'
SELECT COUNT(*) FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE student.sex = 'F' AND pets.pettype = 'dog'
SELECT COUNT(*) FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE student.sex = 'F' AND pets.pettype = 'dog'",SELECT COUNT(*) FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE student.sex = 'F' AND pets.pettype = 'dog'
197,510,How many courses are there?,student_transcripts_tracking,easy,SELECT count(*) FROM Courses,7,"SELECT COUNT(*) FROM courses
SELECT COUNT(*) FROM courses
SELECT COUNT(*) FROM courses
SELECT COUNT(*) FROM courses
SELECT COUNT(*) FROM courses
SELECT COUNT(*) FROM courses
SELECT COUNT(*) FROM courses",SELECT COUNT(*) FROM courses
198,327,What is the version number and template type code for the template with version number later than 5?,cre_Doc_Template_Mgt,medium,"SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5",7,"SELECT templates.version_number, templates.template_type_code  FROM templates  INNER JOIN ref_template_types  ON templates.template_type_code = ref_template_types.template_type_code  WHERE templates.version_number > 5
SELECT templates.version_number, templates.template_type_code  FROM templates  INNER JOIN ref_template_types  ON templates.template_type_code = ref_template_types.template_type_code  WHERE templates.version_number > 5
SELECT templates.version_number, templates.template_type_code  FROM templates  INNER JOIN ref_template_types  ON templates.template_type_code = ref_template_types.template_type_code  WHERE templates.version_number > 5
SELECT templates.version_number, templates.template_type_code  FROM templates  INNER JOIN ref_template_types  ON templates.template_type_code = ref_template_types.template_type_code  WHERE templates.version_number > 5
SELECT templates.version_number, templates.template_type_code  FROM templates  INNER JOIN ref_template_types  ON templates.template_type_code = ref_template_types.template_type_code  WHERE templates.version_number > 5
SELECT templates.version_number, templates.template_type_code  FROM templates  INNER JOIN ref_template_types  ON templates.template_type_code = ref_template_types.template_type_code  WHERE templates.version_number > 5
SELECT templates.version_number, templates.template_type_code FROM templates JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE templates.version_number > 5","SELECT templates.version_number, templates.template_type_code  FROM templates  INNER JOIN ref_template_types  ON templates.template_type_code = ref_template_types.template_type_code  WHERE templates.version_number > 5"
199,697,How many contestants did not get voted?,voter_1,extra,SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes ),7,"SELECT COUNT(*) FROM contestants LEFT JOIN votes ON contestants.contestant_number = votes.contestant_number WHERE votes.contestant_number IS NULL
SELECT COUNT(*) FROM contestants LEFT JOIN votes ON contestants.contestant_number = votes.contestant_number WHERE votes.contestant_number IS NULL
SELECT COUNT(*) FROM contestants LEFT JOIN votes ON contestants.contestant_number = votes.contestant_number WHERE votes.contestant_number IS NULL
SELECT COUNT(*) FROM contestants LEFT JOIN votes ON contestants.contestant_number = votes.contestant_number WHERE votes.contestant_number IS NULL
SELECT COUNT(*) FROM contestants LEFT JOIN votes ON contestants.contestant_number = votes.contestant_number WHERE votes.contestant_number IS NULL
SELECT COUNT(*) FROM contestants LEFT JOIN votes ON contestants.contestant_number = votes.contestant_number WHERE votes.contestant_number IS NULL
SELECT COUNT(*) FROM contestants LEFT JOIN votes ON contestants.contestant_number = votes.contestant_number WHERE votes.contestant_number IS NULL",SELECT COUNT(*) FROM contestants LEFT JOIN votes ON contestants.contestant_number = votes.contestant_number WHERE votes.contestant_number IS NULL
200,355,"What are the template ids with template type description ""Presentation"".",cre_Doc_Template_Mgt,medium,"SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  ""Presentation""",7,"SELECT templates.template_id  FROM templates  INNER JOIN ref_template_types  ON templates.template_type_code = ref_template_types.template_type_code  WHERE ref_template_types.template_type_description = 'Presentation'
SELECT templates.template_id  FROM templates  INNER JOIN ref_template_types  ON templates.template_type_code = ref_template_types.template_type_code  WHERE ref_template_types.template_type_description = 'Presentation'
SELECT templates.template_id  FROM templates  INNER JOIN ref_template_types  ON templates.template_type_code = ref_template_types.template_type_code  WHERE ref_template_types.template_type_description = 'Presentation'
SELECT templates.template_id  FROM templates  INNER JOIN ref_template_types  ON templates.template_type_code = ref_template_types.template_type_code  WHERE ref_template_types.template_type_description = 'Presentation'
SELECT templates.template_id  FROM templates  INNER JOIN ref_template_types  ON templates.template_type_code = ref_template_types.template_type_code  WHERE ref_template_types.template_type_description = 'Presentation'
SELECT templates.template_id  FROM templates  INNER JOIN ref_template_types  ON templates.template_type_code = ref_template_types.template_type_code  WHERE ref_template_types.template_type_description = 'Presentation'
SELECT templates.template_id  FROM templates  INNER JOIN ref_template_types  ON templates.template_type_code = ref_template_types.template_type_code  WHERE ref_template_types.template_type_description = 'Presentation'",SELECT templates.template_id  FROM templates  INNER JOIN ref_template_types  ON templates.template_type_code = ref_template_types.template_type_code  WHERE ref_template_types.template_type_description = 'Presentation'
201,27,What is the year that had the most concerts?,concert_singer,hard,SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,7,"SELECT year, COUNT(*) as num_concerts FROM concert GROUP BY year ORDER BY num_concerts DESC LIMIT 1
SELECT year, COUNT(*) as num_concerts FROM concert GROUP BY year ORDER BY num_concerts DESC LIMIT 1
SELECT year, COUNT(*) as num_concerts FROM concert GROUP BY year ORDER BY num_concerts DESC LIMIT 1
SELECT year, COUNT(*) as num_concerts FROM concert GROUP BY year ORDER BY num_concerts DESC LIMIT 1
SELECT year, COUNT(*) as num_concerts FROM concert GROUP BY year ORDER BY num_concerts DESC LIMIT 1
SELECT year, COUNT(*) as num_concerts FROM concert GROUP BY year ORDER BY num_concerts DESC LIMIT 1
SELECT year, COUNT(*) as num_concerts FROM concert GROUP BY year ORDER BY num_concerts DESC LIMIT 1","SELECT year, COUNT(*) as num_concerts FROM concert GROUP BY year ORDER BY num_concerts DESC LIMIT 1"
202,587,"List all cartoon directed by ""Ben Jones"".",tvshow,easy,"SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"";",7,"SELECT c.title  FROM cartoon AS c  JOIN tv_series AS t  ON c.id = t.channel  WHERE c.directed_by = 'Ben Jones'
SELECT c.title  FROM cartoon AS c  JOIN tv_series AS t  ON c.id = t.channel  WHERE c.directed_by = 'Ben Jones'
SELECT c.title  FROM cartoon AS c  JOIN tv_series AS t  ON c.id = t.channel  WHERE c.directed_by = 'Ben Jones'
SELECT c.title  FROM cartoon AS c  JOIN tv_series AS t  ON c.id = t.channel  JOIN tv_channel AS ch  ON ch.id = t.channel  WHERE c.directed_by = ""Ben Jones""
SELECT c.title  FROM cartoon AS c  JOIN tv_series AS ts ON c.id = ts.id  WHERE c.directed_by = 'Ben Jones'
SELECT c.title  FROM cartoon AS c  JOIN tv_series AS t  ON c.id = t.channel  JOIN tv_channel AS ch  ON ch.id = t.channel  WHERE c.directed_by = ""Ben Jones""
SELECT c.title  FROM cartoon AS c  JOIN tv_series AS t  ON c.id = t.channel  WHERE c.directed_by = 'Ben Jones'",SELECT c.title  FROM cartoon AS c  JOIN tv_series AS t  ON c.id = t.channel  WHERE c.directed_by = 'Ben Jones'
203,187,How many airlines do we have?,flight_2,easy,SELECT count(*) FROM AIRLINES,7,"SELECT COUNT(*) FROM airlines
SELECT COUNT(*) FROM airlines
SELECT COUNT(*) FROM airlines
SELECT COUNT(*) FROM airlines
SELECT COUNT(*) FROM airlines
SELECT COUNT(*) FROM airlines
SELECT COUNT(*) FROM airlines",SELECT COUNT(*) FROM airlines
204,54,How many dog pets are raised by female students?,pets_1,hard,SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog',7,"SELECT COUNT(*)  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE student.sex = 'female' AND pets.pettype = 'dog'
SELECT COUNT(*)  FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE student.sex = 'female' AND pets.pettype = 'dog'
SELECT COUNT(*)  FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE student.sex = 'female' AND pets.pettype = 'dog'
SELECT COUNT(*)  FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE student.sex = 'female' AND pets.pettype = 'dog'
SELECT COUNT(*)  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE student.sex = 'female' AND pets.pettype = 'dog'
SELECT COUNT(*)  FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE student.sex = 'female' AND pets.pettype = 'dog'
SELECT COUNT(*)  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE student.sex = 'female' AND pets.pettype = 'dog'",SELECT COUNT(*)  FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE student.sex = 'female' AND pets.pettype = 'dog'
205,476,What is the code of the country with the most players?,wta_1,hard,SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1,7,"SELECT country_code, COUNT(*) as player_count FROM players GROUP BY country_code ORDER BY player_count DESC LIMIT 1
SELECT country_code, COUNT(*) as num_players FROM players GROUP BY country_code ORDER BY num_players DESC LIMIT 1
SELECT country_code, COUNT(*) as player_count FROM players GROUP BY country_code ORDER BY player_count DESC LIMIT 1
SELECT country_code, COUNT(*) as num_players FROM players GROUP BY country_code ORDER BY num_players DESC LIMIT 1
SELECT country_code, COUNT(*) as player_count FROM players GROUP BY country_code ORDER BY player_count DESC LIMIT 1
SELECT country_code, COUNT(*) as player_count FROM players GROUP BY country_code ORDER BY player_count DESC LIMIT 1
SELECT country_code, COUNT(*) as player_count FROM players GROUP BY country_code ORDER BY player_count DESC LIMIT 1","SELECT country_code, COUNT(*) as player_count FROM players GROUP BY country_code ORDER BY player_count DESC LIMIT 1"
206,740,What is name of the country that speaks the largest number of languages?,world_1,extra,SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1,7,"SELECT country.name, COUNT(countrylanguage.language) AS language_count FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY countrylanguage.countrycode ORDER BY language_count DESC LIMIT 1
SELECT country.name, COUNT(countrylanguage.language) AS language_count FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY countrylanguage.countrycode ORDER BY language_count DESC LIMIT 1
SELECT country.name, COUNT(countrylanguage.language) AS language_count FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.name ORDER BY language_count DESC LIMIT 1
SELECT country.name, COUNT(countrylanguage.language) AS language_count FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY countrylanguage.countrycode ORDER BY language_count DESC LIMIT 1
SELECT country.name, COUNT(countrylanguage.language) AS language_count FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY countrylanguage.countrycode ORDER BY language_count DESC LIMIT 1
SELECT country.name, COUNT(countrylanguage.language) AS language_count FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY countrylanguage.countrycode ORDER BY language_count DESC LIMIT 1
SELECT country.name, COUNT(countrylanguage.language) AS language_count FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY countrylanguage.countrycode ORDER BY language_count DESC LIMIT 1","SELECT country.name, COUNT(countrylanguage.language) AS language_count FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY countrylanguage.countrycode ORDER BY language_count DESC LIMIT 1"
207,366,What are the paragraph texts for the document with the name 'Customer reviews'?,cre_Doc_Template_Mgt,medium,"SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  ""Customer reviews""",7,"SELECT paragraphs.paragraph_text  FROM paragraphs  INNER JOIN documents ON paragraphs.document_id = documents.document_id  WHERE documents.document_name = 'Customer reviews'
SELECT paragraphs.paragraph_text  FROM paragraphs  INNER JOIN documents ON paragraphs.document_id = documents.document_id  WHERE documents.document_name = 'Customer reviews'
SELECT paragraphs.paragraph_text  FROM paragraphs  JOIN documents ON paragraphs.document_id = documents.document_id  WHERE documents.document_name = 'Customer reviews'
SELECT paragraphs.paragraph_text  FROM paragraphs  INNER JOIN documents ON paragraphs.document_id = documents.document_id  WHERE documents.document_name = 'Customer reviews'
SELECT paragraphs.paragraph_text  FROM paragraphs  INNER JOIN documents ON paragraphs.document_id = documents.document_id  WHERE documents.document_name = 'Customer reviews'
SELECT paragraphs.paragraph_text  FROM paragraphs  INNER JOIN documents ON paragraphs.document_id = documents.document_id  WHERE documents.document_name = 'Customer reviews'
SELECT paragraphs.paragraph_text  FROM paragraphs  INNER JOIN documents ON paragraphs.document_id = documents.document_id  WHERE documents.document_name = 'Customer reviews'",SELECT paragraphs.paragraph_text  FROM paragraphs  INNER JOIN documents ON paragraphs.document_id = documents.document_id  WHERE documents.document_name = 'Customer reviews'
208,322,What are the different template type codes?,cre_Doc_Template_Mgt,easy,SELECT DISTINCT template_type_code FROM Templates,7,"SELECT DISTINCT template_type_code FROM ref_template_types
SELECT DISTINCT template_type_code FROM ref_template_types
SELECT DISTINCT template_type_code FROM ref_template_types
SELECT DISTINCT template_type_code FROM ref_template_types
SELECT DISTINCT template_type_code FROM ref_template_types
SELECT DISTINCT template_type_code FROM ref_template_types
SELECT DISTINCT template_type_code FROM ref_template_types",SELECT DISTINCT template_type_code FROM ref_template_types
209,352,"Return the type code of the template type with the description ""Book"".",cre_Doc_Template_Mgt,easy,"SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  ""Book""",7,"SELECT template_type_code FROM ref_template_types WHERE template_type_description = 'Book'
SELECT template_type_code FROM ref_template_types WHERE template_type_description = 'Book'
SELECT template_type_code  FROM ref_template_types  WHERE template_type_description = 'Book'
SELECT template_type_code FROM ref_template_types WHERE template_type_description = 'Book'
SELECT template_type_code FROM ref_template_types WHERE template_type_description = 'Book'
SELECT template_type_code FROM ref_template_types WHERE template_type_description = 'Book'
SELECT template_type_code  FROM ref_template_types  WHERE template_type_description = 'Book'",SELECT template_type_code FROM ref_template_types WHERE template_type_description = 'Book'
210,535,"Who is enrolled in a Bachelor degree program? List the first name, middle name, last name.",student_transcripts_tracking,hard,"SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'",7,"SELECT students.first_name, students.middle_name, students.last_name FROM students INNER
SELECT students.first_name, students.middle_name, students.last_name FROM students INNER
SELECT students.first_name, students.middle_name, students.last_name FROM students INNER
SELECT students.first_name, students.middle_name, students.last_name FROM students INNER
SELECT students.first_name, students.middle_name, students.last_name FROM students INNER
SELECT students.first_name, students.middle_name, students.last_name FROM students JOIN
SELECT students.first_name, students.middle_name, students.last_name FROM students INNER","SELECT students.first_name, students.middle_name, students.last_name FROM students INNER"
211,258,Which airports do not have departing or arriving flights?,flight_2,hard,SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights),7,"SELECT airports.airportcode, airports.airportname  FROM airports  LEFT JOIN flights ON airports.airportcode = flights.sourceairport OR airports.airportcode = flights.destairport  WHERE flights.sourceairport IS NULL AND flights.destairport IS NULL
SELECT airports.airportcode, airports.airportname  FROM airports  LEFT JOIN flights ON airports.airportcode = flights.sourceairport OR airports.airportcode = flights.destairport  WHERE flights.sourceairport IS NULL AND flights.destairport IS NULL
SELECT airports.airportcode, airports.airportname  FROM airports  LEFT JOIN flights ON airports.airportcode = flights.sourceairport OR airports.airportcode = flights.destairport  WHERE flights.sourceairport IS NULL AND flights.destairport IS NULL
SELECT airports.airportcode, airports.airportname  FROM airports  LEFT JOIN flights ON airports.airportcode = flights.sourceairport OR airports.airportcode = flights.destairport  WHERE flights.sourceairport IS NULL AND flights.destairport IS NULL
SELECT airports.airportcode, airports.airportname  FROM airports  LEFT JOIN flights ON airports.airportcode = flights.sourceairport OR airports.airportcode = flights.destairport  WHERE flights.sourceairport IS NULL AND flights.destairport IS NULL
SELECT airports.airportcode, airports.airportname  FROM airports  LEFT JOIN flights ON airports.airportcode = flights.sourceairport OR airports.airportcode = flights.destairport  WHERE flights.sourceairport IS NULL AND flights.destairport IS NULL
SELECT airports.airportcode, airports.airportname  FROM airports  LEFT JOIN flights ON airports.airportcode = flights.sourceairport OR airports.airportcode = flights.destairport  WHERE flights.sourceairport IS NULL AND flights.destairport IS NULL","SELECT airports.airportcode, airports.airportname  FROM airports  LEFT JOIN flights ON airports.airportcode = flights.sourceairport OR airports.airportcode = flights.destairport  WHERE flights.sourceairport IS NULL AND flights.destairport IS NULL"
212,856,Show the record companies shared by orchestras founded before 2003 and after 2003.,orchestra,hard,SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003,7,"SELECT orchestra.record_company  FROM orchestra  JOIN performance ON orchestra.orchestra_id = performance.orchestra_id  WHERE orchestra.year_of_founded < 2003  INTERSECT  SELECT orchestra.record_company  FROM orchestra  JOIN performance ON orchestra.orchestra_id = performance.orchestra_id  WHERE orchestra.year_of_founded > 2003
SELECT orchestra.record_company  FROM orchestra  JOIN performance ON orchestra.orchestra_id = performance.orchestra_id  WHERE orchestra.year_of_founded < 2003  INTERSECT  SELECT orchestra.record_company  FROM orchestra  JOIN performance ON orchestra.orchestra_id = performance.orchestra_id  WHERE orchestra.year_of_founded > 2003
SELECT orchestra.record_company  FROM orchestra  JOIN performance ON orchestra.orchestra_id = performance.orchestra_id  WHERE orchestra.year_of_founded < 2003  INTERSECT  SELECT orchestra.record_company  FROM orchestra  JOIN performance ON orchestra.orchestra_id = performance.orchestra_id  WHERE orchestra.year_of_founded > 2003
SELECT orchestra.record_company  FROM orchestra  JOIN performance ON orchestra.orchestra_id = performance.orchestra_id  WHERE orchestra.year_of_founded < 2003  INTERSECT  SELECT orchestra.record_company  FROM orchestra  JOIN performance ON orchestra.orchestra_id = performance.orchestra_id  WHERE orchestra.year_of_founded > 2003
SELECT orchestra.record_company  FROM orchestra  JOIN performance ON orchestra.orchestra_id = performance.orchestra_id  WHERE orchestra.year_of_founded < 2003  INTERSECT  SELECT orchestra.record_company  FROM orchestra  JOIN performance ON orchestra.orchestra_id = performance.orchestra_id  WHERE orchestra.year_of_founded > 2003
SELECT orchestra.record_company  FROM orchestra  JOIN performance ON orchestra.orchestra_id = performance.orchestra_id  WHERE orchestra.year_of_founded < 2003  INTERSECT  SELECT orchestra.record_company  FROM orchestra  JOIN performance ON orchestra.orchestra_id = performance.orchestra_id  WHERE orchestra.year_of_founded > 2003
SELECT orchestra.record_company  FROM orchestra  JOIN performance ON orchestra.orchestra_id = performance.orchestra_id  WHERE orchestra.year_of_founded < 2003  INTERSECT  SELECT orchestra.record_company  FROM orchestra  JOIN performance ON orchestra.orchestra_id = performance.orchestra_id  WHERE orchestra.year_of_founded > 2003",SELECT orchestra.record_company  FROM orchestra  JOIN performance ON orchestra.orchestra_id = performance.orchestra_id  WHERE orchestra.year_of_founded < 2003  INTERSECT  SELECT orchestra.record_company  FROM orchestra  JOIN performance ON orchestra.orchestra_id = performance.orchestra_id  WHERE orchestra.year_of_founded > 2003
213,783,Return the codes of countries that do not speak English and do not have Republics for governments.,world_1,hard,"SELECT Code FROM country WHERE GovernmentForm != ""Republic"" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  ""English""",7,"SELECT country.code  FROM country  LEFT JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language <> 'English'  AND country.governmentform NOT LIKE '%Republic%'
SELECT country.code  FROM country  LEFT JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language <> 'English'  AND country.governmentform NOT LIKE '%Republic%'
SELECT country.code FROM country LEFT JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language <> 'English' AND country.governmentform NOT LIKE '%Republic%'
SELECT country.code  FROM country  LEFT JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language <> 'English'  AND country.governmentform NOT LIKE '%Republic%'
SELECT country.code  FROM country  LEFT JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language <> 'English'  AND country.governmentform NOT LIKE '%Republic%'
SELECT country.code  FROM country  LEFT JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language <> 'English'  AND country.governmentform NOT LIKE '%Republic%'
SELECT country.code  FROM country  LEFT JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language <> 'English'  AND country.governmentform NOT LIKE '%Republic%'",SELECT country.code  FROM country  LEFT JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language <> 'English'  AND country.governmentform NOT LIKE '%Republic%'
214,842,Show the names of conductors that have conducted more than one orchestras.,orchestra,medium,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1,7,"SELECT c.name  FROM conductor AS c  JOIN orchestra AS o ON c.conductor_id = o.conductor_id  GROUP BY c.conductor_id  HAVING COUNT(DISTINCT o.orchestra_id) > 1
SELECT c.name  FROM conductor AS c  JOIN orchestra AS o ON c.conductor_id = o.conductor_id  GROUP BY c.conductor_id  HAVING COUNT(DISTINCT o.orchestra_id) > 1
SELECT c.name  FROM conductor AS c  JOIN orchestra AS o ON c.conductor_id = o.conductor_id  GROUP BY c.conductor_id  HAVING COUNT(DISTINCT o.orchestra_id) > 1
SELECT c.name  FROM conductor AS c  JOIN orchestra AS o ON c.conductor_id = o.conductor_id  GROUP BY c.conductor_id  HAVING COUNT(DISTINCT o.orchestra_id) > 1
SELECT c.name  FROM conductor AS c  JOIN orchestra AS o ON c.conductor_id = o.conductor_id  GROUP BY c.conductor_id  HAVING COUNT(DISTINCT o.orchestra_id) > 1
SELECT c.name  FROM conductor AS c  JOIN orchestra AS o ON c.conductor_id = o.conductor_id  GROUP BY c.conductor_id  HAVING COUNT(DISTINCT o.orchestra_id) > 1
SELECT c.name  FROM conductor AS c  JOIN orchestra AS o ON c.conductor_id = o.conductor_id  GROUP BY c.conductor_id  HAVING COUNT(DISTINCT o.orchestra_id) > 1",SELECT c.name  FROM conductor AS c  JOIN orchestra AS o ON c.conductor_id = o.conductor_id  GROUP BY c.conductor_id  HAVING COUNT(DISTINCT o.orchestra_id) > 1
215,925,What are the names of the dogs for which the owner has not spend more than 1000 for treatment ?,dog_kennels,hard,select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 ),7,"SELECT dogs.name FROM dogs JOIN owners ON dogs.owner_id = owners.owner_id JOIN treatments ON dogs.dog_id = treatments.dog_id JOIN charge ON treatments.treatment_id = charge.charge_id WHERE charge.charge_amount <= 1000
SELECT dogs.name  FROM dogs  JOIN owners ON dogs.owner_id = owners.owner_id  JOIN treatments ON dogs.dog_id = treatments.dog_id  JOIN charge ON treatments.treatment_id = charge.charge_id  WHERE charge.charge_amount <= 1000
SELECT dogs.name  FROM dogs  JOIN owners ON dogs.owner_id = owners.owner_id  JOIN treatments ON dogs.dog_id = treatments.dog_id  JOIN charge ON treatments.treatment_id = charge.charge_id  WHERE charge.charge_amount <= 1000
SELECT dogs.name  FROM dogs  JOIN owners ON dogs.owner_id = owners.owner_id  JOIN treatments ON dogs.dog_id = treatments.dog_id  JOIN charge ON treatments.treatment_id = charge.charge_id  WHERE charge.charge_amount <= 1000
SELECT dogs.name  FROM dogs  JOIN owners ON dogs.owner_id = owners.owner_id  JOIN treatments ON dogs.dog_id = treatments.dog_id  JOIN charge ON treatments.treatment_id = charge.charge_id  WHERE charge.charge_amount <= 1000
SELECT dogs.name  FROM dogs  JOIN owners ON dogs.owner_id = owners.owner_id  JOIN treatments ON dogs.dog_id = treatments.dog_id  JOIN charge ON treatments.treatment_id = charge.charge_id  WHERE charge.charge_amount <= 1000
SELECT dogs.name  FROM dogs  JOIN owners ON dogs.owner_id = owners.owner_id  JOIN treatments ON dogs.dog_id = treatments.dog_id  JOIN charge ON treatments.treatment_id = charge.charge_id  WHERE charge.charge_amount <= 1000",SELECT dogs.name  FROM dogs  JOIN owners ON dogs.owner_id = owners.owner_id  JOIN treatments ON dogs.dog_id = treatments.dog_id  JOIN charge ON treatments.treatment_id = charge.charge_id  WHERE charge.charge_amount <= 1000
216,583,Find the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582 .,student_transcripts_tracking,hard,select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582',7,"SELECT students.first_name FROM students 
SELECT students.first_name FROM students 
SELECT students.first_name  FROM
SELECT students.first_name FROM students 
SELECT students.first_name FROM students 
SELECT students.first_name FROM students 
SELECT students.first_name FROM students ",SELECT students.first_name FROM students 
217,166,"For all of the 4 cylinder cars, which model has the most horsepower?",car_1,extra,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;,7,"SELECT model, MAX(horsepower) FROM car_names JOIN cars_data ON car_names.makeid = cars_data.id WHERE cylinders = 4
SELECT model, MAX(horsepower) FROM car_names INNER JOIN cars_data ON car_names.makeid = cars_data.id WHERE cylinders = 4
SELECT model, MAX(horsepower) FROM car_names INNER JOIN cars_data ON car_names.makeid = cars_data.id WHERE cylinders = 4
SELECT model, MAX(horsepower) FROM car_names JOIN cars_data ON car_names.makeid = cars_data.id WHERE cylinders = 4
SELECT model, MAX(horsepower) FROM car_names INNER JOIN cars_data ON car_names.makeid = cars_data.id WHERE cylinders = 4
SELECT model, MAX(horsepower) FROM car_names INNER JOIN cars_data ON car_names.makeid = cars_data.id WHERE cylinders = 4
SELECT model, MAX(horsepower) FROM car_names INNER JOIN cars_data ON car_names.makeid = cars_data.id WHERE cylinders = 4","SELECT model, MAX(horsepower) FROM car_names INNER JOIN cars_data ON car_names.makeid = cars_data.id WHERE cylinders = 4"
218,528,What are the names of the sections in reverse alphabetical order?,student_transcripts_tracking,easy,SELECT section_name FROM Sections ORDER BY section_name DESC,7,"SELECT section_name FROM sections ORDER BY section_name DESC
SELECT section_name FROM sections ORDER BY section_name DESC
SELECT section_name FROM sections ORDER BY section_name DESC
SELECT section_name FROM sections ORDER BY section_name DESC
SELECT section_name FROM sections ORDER BY section_name DESC
SELECT section_name FROM sections ORDER BY section_name DESC
SELECT section_name FROM sections ORDER BY section_name DESC",SELECT section_name FROM sections ORDER BY section_name DESC
219,185,List the airport code and name in the city of Anthony.,flight_2,medium,"SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  ""Anthony""",7,"SELECT airports.airportcode, airports.airportname  FROM airports  INNER JOIN airlines ON airports.country = airlines.country  WHERE airports.city = ""Anthony""
SELECT airports.airportcode, airports.airportname  FROM airports  INNER JOIN airlines ON airports.country = airlines.country  WHERE airports.city = ""Anthony""
SELECT airports.airportcode, airports.airportname  FROM airports  INNER JOIN airlines ON airports.country = airlines.country  WHERE airports.city = ""Anthony""
SELECT airports.airportcode, airports.airportname  FROM airports  INNER JOIN airlines ON airports.country = airlines.country  WHERE airports.city = ""Anthony""
SELECT airports.airportcode, airports.airportname  FROM airports  INNER JOIN airlines ON airports.country = airlines.country  WHERE airports.city = ""Anthony""
SELECT airports.airportcode, airports.airportname  FROM airports  INNER JOIN airlines ON airports.country = airlines.country  WHERE airports.city = ""Anthony""
SELECT airports.airportcode, airports.airportname  FROM airports  INNER JOIN airlines ON airports.country = airlines.country  WHERE airports.city = ""Anthony""","SELECT airports.airportcode, airports.airportname  FROM airports  INNER JOIN airlines ON airports.country = airlines.country  WHERE airports.city = ""Anthony"""
220,860,Show the years in which orchestras that have given more than one performance are founded.,orchestra,medium,SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1,7,"SELECT o.year_of_founded FROM orchestra AS o JOIN performance AS p ON o.orchestra_id = p.orchestra_id GROUP BY o.orchestra_id, o.year_of_founded HAVING COUNT(p.performance_id) > 1
SELECT o.year_of_founded FROM orchestra AS o JOIN performance AS p ON o.orchestra_id = p.orchestra_id GROUP BY o.orchestra_id, o.year_of_founded HAVING COUNT(p.performance_id) > 1
SELECT o.year_of_founded FROM orchestra AS o JOIN performance AS p ON o.orchestra_id = p.orchestra_id GROUP BY o.orchestra_id, o.year_of_founded HAVING COUNT(p.performance_id) > 1
SELECT o.year_of_founded FROM orchestra AS o JOIN performance AS p ON o.orchestra_id = p.orchestra_id GROUP BY o.orchestra_id, o.year_of_founded HAVING COUNT(p.performance_id) > 1
SELECT o.year_of_founded FROM orchestra AS o JOIN performance AS p ON o.orchestra_id = p.orchestra_id GROUP BY o.orchestra_id, o.year_of_founded HAVING COUNT(p.performance_id) > 1
SELECT o.year_of_founded FROM orchestra AS o JOIN performance AS p ON o.orchestra_id = p.orchestra_id GROUP BY o.year_of_founded HAVING COUNT(DISTINCT p.performance_id) > 1
SELECT o.year_of_founded FROM orchestra AS o JOIN performance AS p ON o.orchestra_id = p.orchestra_id GROUP BY o.year_of_founded HAVING COUNT(DISTINCT p.performance_id) > 1","SELECT o.year_of_founded FROM orchestra AS o JOIN performance AS p ON o.orchestra_id = p.orchestra_id GROUP BY o.orchestra_id, o.year_of_founded HAVING COUNT(p.performance_id) > 1"
221,131,What is the maximum horsepower and the make of the car models with 3 cylinders?,car_1,extra,"SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;",7,"SELECT MAX(horsepower), car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.modelid = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.cylinders = 3
SELECT MAX(horsepower), car_makers.maker FROM car_makers INNER JOIN model_list ON car_makers.id = model_list.maker INNER JOIN car_names ON model_list.modelid = car_names.model INNER JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.cylinders = 3
SELECT MAX(horsepower), car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.modelid = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.cylinders = 3
SELECT MAX(horsepower), car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.modelid = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.cylinders = 3
SELECT MAX(horsepower), car_makers.maker  FROM car_makers  JOIN model_list ON car_makers.id = model_list.maker  JOIN car_names ON model_list.modelid = car_names.model  JOIN cars_data ON car_names.makeid = cars_data.id  WHERE cars_data.cylinders = 3
SELECT MAX(horsepower), car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.modelid = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.cylinders = 3
SELECT MAX(horsepower), car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.modelid = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.cylinders = 3","SELECT MAX(horsepower), car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.modelid = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.cylinders = 3"
222,141,Which model has the most version(make) of cars?,car_1,hard,SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;,7,"SELECT ml.model, COUNT(cn.makeid) as make_count FROM model_list ml JOIN car_names cn ON ml.modelid = cn.makeid GROUP BY ml.model ORDER BY make_count DESC LIMIT 1
SELECT ml.model, COUNT(cn.makeid) as car_count FROM model_list ml JOIN car_names cn ON ml.modelid = cn.makeid GROUP BY ml.model ORDER BY car_count DESC LIMIT 1
SELECT ml.model, COUNT(cn.makeid) as make_count FROM model_list ml JOIN car_names cn ON ml.modelid = cn.makeid GROUP BY ml.model ORDER BY make_count DESC LIMIT 1
SELECT ml.model, COUNT(cn.makeid) as car_count FROM model_list ml JOIN car_names cn ON ml.modelid = cn.makeid GROUP BY ml.model ORDER BY car_count DESC LIMIT 1
SELECT ml.model, COUNT(cn.makeid) as make_count FROM model_list ml JOIN car_names cn ON ml.modelid = cn.makeid GROUP BY ml.model ORDER BY make_count DESC LIMIT 1
SELECT ml.model, COUNT(cn.makeid) as car_count FROM model_list ml JOIN car_names cn ON ml.modelid = cn.makeid GROUP BY ml.model ORDER BY car_count DESC LIMIT 1
SELECT ml.model, COUNT(cn.makeid) as make_count FROM model_list ml JOIN car_names cn ON ml.modelid = cn.makeid GROUP BY ml.model ORDER BY make_count DESC LIMIT 1","SELECT ml.model, COUNT(cn.makeid) as make_count FROM model_list ml JOIN car_names cn ON ml.modelid = cn.makeid GROUP BY ml.model ORDER BY make_count DESC LIMIT 1"
223,664,"What are the names of poker players, ordered ascending by the number of final tables they have made?",poker_player,medium,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made,7,"SELECT people.name  FROM poker_player  JOIN people ON poker_player.people_id = people.people_id  GROUP BY people.people_id  ORDER BY SUM(poker_player.final_table_made) ASC
SELECT people.name  FROM poker_player  JOIN people ON poker_player.people_id = people.people_id  GROUP BY people.people_id  ORDER BY SUM(poker_player.final_table_made) ASC
SELECT people.name  FROM poker_player  JOIN people ON poker_player.people_id = people.people_id  GROUP BY people.people_id  ORDER BY SUM(poker_player.final_table_made) ASC
SELECT people.name  FROM poker_player  JOIN people ON poker_player.people_id = people.people_id  GROUP BY people.people_id  ORDER BY SUM(poker_player.final_table_made) ASC
SELECT people.name  FROM poker_player  JOIN people ON poker_player.people_id = people.people_id  GROUP BY people.people_id  ORDER BY SUM(poker_player.final_table_made) ASC
SELECT people.name  FROM poker_player  JOIN people ON poker_player.people_id = people.people_id  GROUP BY people.people_id  ORDER BY SUM(poker_player.final_table_made) ASC
SELECT people.name FROM poker_player INNER JOIN people ON poker_player.people_id = people.people_id ORDER BY poker_player.final_table_made ASC",SELECT people.name  FROM poker_player  JOIN people ON poker_player.people_id = people.people_id  GROUP BY people.people_id  ORDER BY SUM(poker_player.final_table_made) ASC
224,725,Give the average life expectancy for countries in Africa which are republics?,world_1,medium,"SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  ""Africa"" AND GovernmentForm  =  ""Republic""",7,"SELECT AVG(lifeexpectancy) FROM country WHERE continent = 'Africa' AND governmentform = 'Republic'
SELECT AVG(lifeexpectancy) FROM country WHERE continent = 'Africa' AND governmentform = 'Republic'
SELECT AVG(lifeexpectancy) FROM country WHERE continent = 'Africa' AND governmentform = 'Republic'
SELECT AVG(lifeexpectancy) FROM country WHERE continent = 'Africa' AND governmentform = 'Republic'
SELECT AVG(lifeexpectancy) FROM country WHERE continent = 'Africa' AND governmentform = 'Republic'
SELECT AVG(lifeexpectancy) FROM country WHERE continent = 'Africa' AND governmentform = 'Republic'
SELECT AVG(lifeexpectancy) FROM country WHERE continent = 'Africa' AND governmentform = 'Republic'",SELECT AVG(lifeexpectancy) FROM country WHERE continent = 'Africa' AND governmentform = 'Republic'
225,955,Which dogs are of the rarest breed? Show their names and treatment dates.,dog_kennels,extra,"SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",7,"SELECT dogs.name, MIN(treatments.date_of_treatment) FROM dogs LEFT JOIN treatments ON dogs.dog_id = treatments.dog_id GROUP BY dogs.breed_code ORDER BY COUNT(*) ASC LIMIT 1
SELECT d.name, t.date_of_treatment FROM dogs d JOIN treatments t ON d.dog_id = t.dog_id JOIN (     SELECT breed_code, COUNT(*) as breed_count     FROM dogs     GROUP BY breed_code ) bc ON d.breed_code = bc.breed_code WHERE bc.breed_count = (     SELECT MIN(breed_count)     FROM (         SELECT breed_code, COUNT(*) as breed_count         FROM dogs         GROUP BY breed_code     ) ) ORDER BY
SELECT dogs.name, MIN(treatments.date_of_treatment) FROM dogs LEFT JOIN treatments ON dogs.dog_id = treatments.dog_id GROUP BY dogs.breed_code ORDER BY COUNT(*) ASC LIMIT 1
SELECT d.name, t.date_of_treatment FROM dogs d JOIN treatments t ON d.dog_id = t.dog_id JOIN (     SELECT breed_code, COUNT(*) as breed_count     FROM dogs     GROUP BY breed_code ) bc ON d.breed_code = bc.breed_code WHERE bc.breed_count = (     SELECT MIN(breed_count)     FROM (         SELECT breed_code, COUNT(*) as breed_count         FROM dogs         GROUP BY breed_code     ) ) ORDER BY
SELECT dogs.name, MIN(treatments.date_of_treatment) FROM dogs LEFT JOIN treatments ON dogs.dog_id = treatments.dog_id GROUP BY dogs.breed_code ORDER BY COUNT(*) ASC LIMIT 1
SELECT dogs.name, MIN(treatments.date_of_treatment) as treatment_date FROM dogs LEFT JOIN treatments ON dogs.dog_id = treatments.dog_id GROUP BY dogs.breed_code ORDER BY COUNT(*) ASC LIMIT 1
SELECT d.name, t.date_of_treatment FROM dogs d JOIN treatments t ON d.dog_id = t.dog_id JOIN (     SELECT breed_code, COUNT(*) as breed_count     FROM dogs     GROUP BY breed_code ) bc ON d.breed_code = bc.breed_code WHERE bc.breed_count = (     SELECT MIN(breed_count)     FROM (         SELECT breed_code, COUNT(*) as breed_count         FROM dogs         GROUP BY breed_code     ) ) ORDER BY","SELECT dogs.name, MIN(treatments.date_of_treatment) FROM dogs LEFT JOIN treatments ON dogs.dog_id = treatments.dog_id GROUP BY dogs.breed_code ORDER BY COUNT(*) ASC LIMIT 1"
226,134,What is the car model with the highest mpg ?,car_1,hard,select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;,7,"SELECT model FROM car_names  INNER JOIN cars_data ON car_names.makeid = cars_data.id  ORDER BY cars_data.mpg DESC  LIMIT 1
SELECT model FROM car_names  INNER JOIN cars_data ON car_names.makeid = cars_data.id  ORDER BY cars_data.mpg DESC  LIMIT 1
SELECT model FROM car_names  INNER JOIN cars_data ON car_names.makeid = cars_data.id  ORDER BY cars_data.mpg DESC  LIMIT 1
SELECT model FROM car_names  INNER JOIN cars_data ON car_names.makeid = cars_data.id  WHERE mpg = (SELECT MAX(mpg) FROM cars_data)
SELECT model FROM car_names  INNER JOIN cars_data ON car_names.makeid = cars_data.id  WHERE mpg = (SELECT MAX(mpg) FROM cars_data)
SELECT model FROM car_names  INNER JOIN cars_data ON car_names.makeid = cars_data.id  WHERE mpg = (SELECT MAX(mpg) FROM cars_data)
SELECT model FROM car_names  INNER JOIN cars_data ON car_names.makeid = cars_data.id  WHERE mpg = (SELECT MAX(mpg) FROM cars_data)",SELECT model FROM car_names  INNER JOIN cars_data ON car_names.makeid = cars_data.id  WHERE mpg = (SELECT MAX(mpg) FROM cars_data)
227,74,What is the average weight for each type of pet?,pets_1,medium,"SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype",7,"SELECT pettype, AVG(weight) as Average_Weight FROM pets GROUP BY pettype
SELECT pettype, AVG(weight) as AverageWeight FROM pets GROUP BY pettype
SELECT pettype, AVG(weight) as AverageWeight FROM pets GROUP BY pettype
SELECT pettype, AVG(weight) as AverageWeight FROM pets GROUP BY pettype
SELECT pettype, AVG(weight) as AverageWeight FROM pets GROUP BY pettype
SELECT pettype, AVG(weight) as average_weight FROM pets GROUP BY pettype
SELECT pettype, AVG(weight) as AverageWeight FROM pets GROUP BY pettype","SELECT pettype, AVG(weight) as AverageWeight FROM pets GROUP BY pettype"
228,373,What is the document id and name with greatest number of paragraphs?,cre_Doc_Template_Mgt,extra,"SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT documents.document_id, documents.document_name, COUNT(paragraphs.paragraph_id) as num_paragraphs FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id, documents.document_name ORDER BY num_paragraphs DESC LIMIT 1
SELECT documents.document_id, documents.document_name, COUNT(paragraphs.paragraph_id) as paragraph_count FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id, documents.document_name ORDER BY paragraph_count DESC LIMIT 1
SELECT documents.document_id, documents.document_name, COUNT(paragraphs.paragraph_id) as paragraph_count FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id, documents.document_name ORDER BY paragraph_count DESC LIMIT 1
SELECT documents.document_id, documents.document_name, COUNT(paragraphs.paragraph_id) AS paragraph_count FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id, documents.document_name ORDER BY paragraph_count DESC LIMIT 1
SELECT documents.document_id, documents.document_name, COUNT(paragraphs.paragraph_id) as paragraph_count FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id, documents.document_name ORDER BY paragraph_count DESC LIMIT 1
SELECT documents.document_id, documents.document_name, COUNT(paragraphs.paragraph_id) as paragraph_count FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id, documents.document_name ORDER BY paragraph_count DESC LIMIT 1
SELECT documents.document_id, documents.document_name, COUNT(paragraphs.paragraph_id) as paragraph_count FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id, documents.document_name ORDER BY paragraph_count DESC LIMIT 1","SELECT documents.document_id, documents.document_name, COUNT(paragraphs.paragraph_id) as paragraph_count FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id, documents.document_name ORDER BY paragraph_count DESC LIMIT 1"
229,880,Show me all grades that have at least 4 students.,network_1,easy,SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4,7,"SELECT highschooler.grade FROM highschooler JOIN friend ON highschooler.id = friend.student_id GROUP BY highschooler.grade HAVING COUNT(DISTINCT friend.friend_id) >= 4
SELECT highschooler.grade FROM highschooler JOIN friend ON highschooler.id = friend.student_id GROUP BY highschooler.grade HAVING COUNT(DISTINCT friend.friend_id) >= 4
SELECT highschooler.grade FROM highschooler JOIN friend ON highschooler.id = friend.student_id GROUP BY highschooler.grade HAVING COUNT(DISTINCT friend.friend_id) >= 4
SELECT highschooler.grade FROM highschooler JOIN friend ON highschooler.id = friend.student_id GROUP BY highschooler.grade HAVING COUNT(DISTINCT friend.friend_id) >= 4
SELECT highschooler.grade FROM highschooler JOIN friend ON highschooler.id = friend.student_id GROUP BY highschooler.grade HAVING COUNT(DISTINCT friend.friend_id) >= 4
SELECT highschooler.grade FROM highschooler JOIN friend ON highschooler.id = friend.student_id GROUP BY highschooler.grade HAVING COUNT(DISTINCT friend.friend_id) >= 4
SELECT highschooler.grade FROM highschooler JOIN friend ON highschooler.id = friend.student_id GROUP BY highschooler.grade HAVING COUNT(DISTINCT friend.friend_id) >= 4",SELECT highschooler.grade FROM highschooler JOIN friend ON highschooler.id = friend.student_id GROUP BY highschooler.grade HAVING COUNT(DISTINCT friend.friend_id) >= 4
230,447,List the names of all winners who played in both 2013 and 2016.,wta_1,hard,SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016,7,"SELECT DISTINCT p.first_name, p.last_name FROM players AS p JOIN matches AS m1 ON p.player_id = m1.winner_id JOIN matches AS m2 ON p.player_id = m2.winner_id WHERE m1.year = 2013 AND m2.year = 2016
SELECT DISTINCT p.first_name, p.last_name FROM players AS p JOIN matches AS m1 ON p.player_id = m1.winner_id JOIN matches AS m2 ON p.player_id = m2.winner_id WHERE m1.year = 2013 AND m2.year = 2016
SELECT DISTINCT p.first_name, p.last_name FROM players AS p JOIN matches AS m1 ON p.player_id = m1.winner_id JOIN matches AS m2 ON p.player_id = m2.winner_id WHERE m1.year = 2013 AND m2.year = 2016
SELECT DISTINCT p.first_name, p.last_name FROM players AS p JOIN matches AS m1 ON p.player_id = m1.winner_id JOIN matches AS m2 ON p.player_id = m2.winner_id WHERE m1.year = 2013 AND m2.year = 2016
SELECT DISTINCT p.first_name, p.last_name FROM players AS p JOIN matches AS m1 ON p.player_id = m1.winner_id JOIN matches AS m2 ON p.player_id = m2.winner_id WHERE m1.year = 2013 AND m2.year = 2016
SELECT DISTINCT p.first_name, p.last_name FROM players AS p JOIN matches AS m1 ON p.player_id = m1.winner_id JOIN matches AS m2 ON p.player_id = m2.winner_id WHERE m1.year = 2013 AND m2.year = 2016
SELECT DISTINCT p.first_name, p.last_name FROM players AS p JOIN matches AS m1 ON p.player_id = m1.winner_id JOIN matches AS m2 ON p.player_id = m2.winner_id WHERE m1.year = 2013 AND m2.year = 2016","SELECT DISTINCT p.first_name, p.last_name FROM players AS p JOIN matches AS m1 ON p.player_id = m1.winner_id JOIN matches AS m2 ON p.player_id = m2.winner_id WHERE m1.year = 2013 AND m2.year = 2016"
231,13,What are all the song names by singers who are older than average?,concert_singer,hard,SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer),7,"SELECT s.song_name  FROM singer AS s  WHERE s.age > (SELECT AVG(s.age) FROM singer AS s)
SELECT s.song_name  FROM singer AS s  WHERE s.age > (SELECT AVG(s.age) FROM singer AS s)
SELECT s.song_name  FROM singer AS s  WHERE s.age > (SELECT AVG(s.age) FROM singer AS s)
SELECT s.song_name  FROM singer AS s  WHERE s.age > (SELECT AVG(s.age) FROM singer AS s)
SELECT s.song_name  FROM singer AS s  WHERE s.age > (SELECT AVG(s.age) FROM singer AS s)
SELECT s.song_name  FROM singer AS s  WHERE s.age > (SELECT AVG(s.age) FROM singer AS s)
SELECT s.song_name  FROM singer AS s  WHERE s.age > (SELECT AVG(s.age) FROM singer AS s)",SELECT s.song_name  FROM singer AS s  WHERE s.age > (SELECT AVG(s.age) FROM singer AS s)
232,896,Show names of all high school students who do not have any friends.,network_1,hard,SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id,7,"SELECT h.name FROM highschooler h LEFT JOIN friend f ON h.id = f.student_id WHERE f.friend_id IS NULL AND h.grade BETWEEN 9 AND 12
SELECT h.name FROM highschooler h LEFT JOIN friend f ON h.id = f.student_id WHERE f.friend_id IS NULL AND h.grade BETWEEN 9 AND 12
SELECT h.name FROM highschooler h LEFT JOIN friend f ON h.id = f.student_id WHERE f.student_id IS NULL AND h.grade BETWEEN 9 AND 12
SELECT h.name FROM highschooler h LEFT JOIN friend f ON h.id = f.student_id WHERE h.grade BETWEEN 9 AND 12 AND f.student_id IS NULL
SELECT h.name FROM highschooler AS h LEFT JOIN friend AS f ON h.id = f.student_id WHERE h.grade BETWEEN 9 AND 12 AND f.student_id IS NULL
SELECT h.name FROM highschooler h LEFT JOIN friend f ON h.id = f.student_id WHERE f.student_id IS NULL AND h.grade BETWEEN 9 AND 12
SELECT h.name FROM highschooler h LEFT JOIN friend f ON h.id = f.student_id WHERE f.friend_id IS NULL AND h.grade BETWEEN 9 AND 12",SELECT h.name FROM highschooler h LEFT JOIN friend f ON h.id = f.student_id WHERE f.friend_id IS NULL AND h.grade BETWEEN 9 AND 12
233,274,"Sort all the shops by number products in descending order, and return the name, location and district of each shop.",employee_hire_evaluation,medium,"SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC",7,"SELECT shop.name, shop.location, shop.district FROM shop ORDER BY shop.number_products DESC
SELECT shop.name, shop.location, shop.district FROM shop ORDER BY shop.number_products DESC
SELECT shop.name, shop.location, shop.district FROM shop ORDER BY shop.number_products DESC
SELECT shop.name, shop.location, shop.district FROM shop ORDER BY shop.number_products DESC
SELECT shop.name, shop.location, shop.district FROM shop ORDER BY shop.number_products DESC
SELECT shop.name, shop.location, shop.district FROM shop ORDER BY shop.number_products DESC
SELECT shop.name, shop.location, shop.district FROM shop ORDER BY shop.number_products DESC","SELECT shop.name, shop.location, shop.district FROM shop ORDER BY shop.number_products DESC"
234,190,Return the number of  airports.,flight_2,easy,SELECT count(*) FROM AIRPORTS,7,"SELECT COUNT(*) FROM airports INNER JOIN airlines ON airports.airline_id = airlines.uid
SELECT COUNT(*) FROM airports INNER JOIN airlines ON airports.airline_id = airlines.uid
SELECT COUNT(*) FROM airports INNER JOIN airlines ON airports.uid = airlines.uid
SELECT COUNT(*) FROM airports INNER JOIN airlines ON airports.airline_id = airlines.uid
SELECT COUNT(*) FROM airports INNER JOIN airlines ON airports.uid = airlines.uid
SELECT COUNT(*) FROM airports INNER JOIN airlines ON airports.uid = airlines.uid
SELECT COUNT(*) FROM airports INNER JOIN airlines ON airports.airline_id = airlines.uid",SELECT COUNT(*) FROM airports INNER JOIN airlines ON airports.airline_id = airlines.uid
235,50,List the maximum weight and type for each type of pet.,pets_1,medium,"SELECT max(weight) ,  petType FROM pets GROUP BY petType",7,"SELECT p.pettype, MAX(p.weight), 'Type' FROM pets AS p JOIN has_pet AS hp ON p.petid = hp.petid GROUP BY p.pettype
SELECT p.pettype, MAX(p.weight), 'Type' FROM pets p JOIN has_pet hp ON p.petid = hp.petid GROUP BY p.pettype
SELECT p.pettype, MAX(p.weight), 'Type' FROM pets AS p JOIN has_pet AS hp ON p.petid = hp.petid GROUP BY p.pettype
SELECT p.pettype, MAX(p.weight), 'has' FROM pets p JOIN has_pet hp ON p.petid = hp.petid GROUP BY p.pettype
SELECT p.pettype, MAX(p.weight), 'Type' FROM pets AS p JOIN has_pet AS hp ON p.petid = hp.petid GROUP BY p.pettype
SELECT p.pettype, MAX(p.weight), 'Type' FROM pets AS p JOIN has_pet AS hp ON p.petid = hp.petid GROUP BY p.pettype
SELECT p.pettype, MAX(p.weight), 'Type' FROM pets p JOIN has_pet hp ON p.petid = hp.petid GROUP BY p.pettype","SELECT p.pettype, MAX(p.weight), 'Type' FROM pets AS p JOIN has_pet AS hp ON p.petid = hp.petid GROUP BY p.pettype"
236,340,What are the names of documents that use templates with the code BK?,cre_Doc_Template_Mgt,medium,"SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  ""BK""",7,"SELECT documents.document_name  FROM documents  INNER JOIN templates ON documents.template_id = templates.template_id  WHERE templates.template_type_code = 'BK'
SELECT documents.document_name  FROM documents  INNER JOIN templates ON documents.template_id = templates.template_id  WHERE templates.template_type_code = 'BK'
SELECT documents.document_name  FROM documents  INNER JOIN templates ON documents.template_id = templates.template_id  WHERE templates.template_type_code = 'BK'
SELECT documents.document_name  FROM documents  INNER JOIN templates ON documents.template_id = templates.template_id  WHERE templates.template_type_code = 'BK'
SELECT documents.document_name  FROM documents  INNER JOIN templates ON documents.template_id = templates.template_id  WHERE templates.template_type_code = 'BK'
SELECT documents.document_name  FROM documents  INNER JOIN templates ON documents.template_id = templates.template_id  WHERE templates.template_type_code = 'BK'
SELECT documents.document_name  FROM documents  INNER JOIN templates ON documents.template_id = templates.template_id  WHERE templates.template_type_code = 'BK'",SELECT documents.document_name  FROM documents  INNER JOIN templates ON documents.template_id = templates.template_id  WHERE templates.template_type_code = 'BK'
237,1005,What are the birth years and citizenships of the singers?,singer,medium,"SELECT Birth_Year ,  Citizenship FROM singer",7,"SELECT birth_year, citizenship FROM singer
SELECT birth_year, citizenship FROM singer
SELECT birth_year, citizenship FROM singer
SELECT birth_year, citizenship FROM singer
SELECT birth_year, citizenship FROM singer
SELECT birth_year, citizenship FROM singer
SELECT birth_year, citizenship FROM singer","SELECT birth_year, citizenship FROM singer"
238,221,Which city has most number of arriving flights?,flight_2,extra,SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1,7,"SELECT airports.city, COUNT(flights.destairport) as ArrivingFlights FROM airports JOIN flights ON airports.airportcode = flights.destairport GROUP BY airports.city ORDER BY ArrivingFlights DESC LIMIT 1
SELECT airports.city, COUNT(flights.destairport) AS num_arriving_flights FROM airports JOIN flights ON airports.airportcode = flights.destairport GROUP BY airports.city ORDER BY num_arriving_flights DESC LIMIT 1
SELECT airports.city, COUNT(flights.destairport) as ArrivingFlights FROM airports JOIN flights ON airports.airportcode = flights.destairport GROUP BY airports.city ORDER BY ArrivingFlights DESC LIMIT 1
SELECT airports.city, COUNT(flights.destairport) as ArrivingFlights FROM airports JOIN flights ON airports.airportcode = flights.destairport GROUP BY airports.city ORDER BY ArrivingFlights DESC LIMIT 1
SELECT airports.city, COUNT(flights.destairport) as ArrivingFlights FROM airports JOIN flights ON airports.airportcode = flights.destairport GROUP BY airports.city ORDER BY ArrivingFlights DESC LIMIT 1
SELECT airports.city, COUNT(flights.destairport) as ArrivingFlights FROM airports INNER JOIN flights ON airports.airportcode = flights.destairport GROUP BY airports.city ORDER BY ArrivingFlights DESC LIMIT 1
SELECT airports.city, COUNT(flights.destairport) as ArrivingFlights FROM airports JOIN flights ON airports.airportcode = flights.destairport GROUP BY airports.city ORDER BY ArrivingFlights DESC LIMIT 1","SELECT airports.city, COUNT(flights.destairport) as ArrivingFlights FROM airports JOIN flights ON airports.airportcode = flights.destairport GROUP BY airports.city ORDER BY ArrivingFlights DESC LIMIT 1"
239,867,What is the grade of each high schooler?,network_1,easy,SELECT grade FROM Highschooler,7,"SELECT highschooler.name, highschooler.grade FROM highschooler
SELECT highschooler.name, highschooler.grade FROM highschooler
SELECT highschooler.name, highschooler.grade FROM highschooler
SELECT highschooler.name, highschooler.grade FROM highschooler
SELECT highschooler.name, highschooler.grade FROM highschooler
SELECT highschooler.name, highschooler.grade FROM highschooler
SELECT highschooler.name, highschooler.grade FROM highschooler","SELECT highschooler.name, highschooler.grade FROM highschooler"
240,423,Find the name and age of the visitor who bought the most tickets at once.,museum_visit,hard,"SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1",7,"SELECT visitor.name, visitor.age FROM visitor JOIN visit ON visitor.id = visit.visitor_id WHERE visit.num_of_ticket = (SELECT MAX(num_of_ticket) FROM visit)
SELECT visitor.name, visitor.age FROM visitor JOIN visit ON visitor.id = visit.visitor_id WHERE visit.num_of_ticket = (SELECT MAX(num_of_ticket) FROM visit)
SELECT visitor.name, visitor.age FROM visitor JOIN visit ON visitor.id = visit.visitor_id WHERE visit.num_of_ticket = (SELECT MAX(num_of_ticket) FROM visit)
SELECT visitor.name, visitor.age FROM visitor JOIN visit ON visitor.id = visit.visitor_id WHERE visit.num_of_ticket = (SELECT MAX(num_of_ticket) FROM visit)
SELECT visitor.name, visitor.age FROM visitor JOIN visit ON visitor.id = visit.visitor_id WHERE visit.num_of_ticket = (SELECT MAX(num_of_ticket) FROM visit)
SELECT visitor.name, visitor.age FROM visitor JOIN visit ON visitor.id = visit.visitor_id WHERE visit.num_of_ticket = (SELECT MAX(num_of_ticket) FROM visit)
SELECT visitor.name, visitor.age FROM visitor JOIN visit ON visitor.id = visit.visitor_id WHERE visit.num_of_ticket = (SELECT MAX(num_of_ticket) FROM visit)","SELECT visitor.name, visitor.age FROM visitor JOIN visit ON visitor.id = visit.visitor_id WHERE visit.num_of_ticket = (SELECT MAX(num_of_ticket) FROM visit)"
241,409,List the names of teachers who have not been arranged to teach courses.,course_teach,hard,SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange),7,"SELECT t.name  FROM teacher t  LEFT JOIN course_arrange ca ON t.teacher_id = ca.teacher_id  WHERE ca.course_id IS NULL
SELECT t.name  FROM teacher t  LEFT JOIN course_arrange ca ON t.teacher_id = ca.teacher_id  WHERE ca.teacher_id IS NULL
SELECT t.name  FROM teacher t  LEFT JOIN course_arrange ca ON t.teacher_id = ca.teacher_id  WHERE ca.course_id IS NULL
SELECT t.name  FROM teacher t  LEFT JOIN course_arrange ca ON t.teacher_id = ca.teacher_id  WHERE ca.course_id IS NULL
SELECT t.name  FROM teacher t  LEFT JOIN course_arrange ca ON t.teacher_id = ca.teacher_id  WHERE ca.teacher_id IS NULL
SELECT t.name  FROM teacher t  LEFT JOIN course_arrange ca ON t.teacher_id = ca.teacher_id  WHERE ca.teacher_id IS NULL
SELECT t.name  FROM teacher t  LEFT JOIN course_arrange ca ON t.teacher_id = ca.teacher_id  WHERE ca.teacher_id IS NULL",SELECT t.name  FROM teacher t  LEFT JOIN course_arrange ca ON t.teacher_id = ca.teacher_id  WHERE ca.teacher_id IS NULL
242,214,Give the number of Jetblue Airways flights.,flight_2,medium,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = ""JetBlue Airways""",7,"SELECT COUNT(*) FROM flights WHERE airline = 'Jetblue Airways'
SELECT COUNT(*) FROM flights WHERE airline = 'Jetblue Airways'
SELECT COUNT(*) FROM flights WHERE airline = 'Jetblue Airways'
SELECT COUNT(*) FROM flights WHERE airline = 'Jetblue Airways'
SELECT COUNT(*) FROM flights WHERE airline = 'Jetblue Airways'
SELECT COUNT(*) FROM flights WHERE airline = 'Jetblue Airways'
SELECT COUNT(*) FROM flights WHERE airline = 'Jetblue Airways'",SELECT COUNT(*) FROM flights WHERE airline = 'Jetblue Airways'
243,625,"List the Episode of all  TV series showed on TV Channel with series name ""Sky Radio"".",tvshow,medium,"SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = ""Sky Radio"";",7,"SELECT tv_series.episode FROM tv_series JOIN tv_channel ON tv_series.channel = tv_channel.id WHERE tv_channel.series_name = 'Sky Radio'
SELECT tv_series.episode FROM tv_series JOIN tv_channel ON tv_series.channel = tv_channel.id WHERE tv_channel.series_name = 'Sky Radio'
SELECT tv_series.episode FROM tv_series JOIN tv_channel ON tv_series.channel = tv_channel.id WHERE tv_channel.series_name = 'Sky Radio'
SELECT tv_series.episode FROM tv_series JOIN tv_channel ON tv_series.channel = tv_channel.id WHERE tv_channel.series_name = 'Sky Radio'
SELECT tv_series.episode FROM tv_series JOIN tv_channel ON tv_series.channel = tv_channel.id WHERE tv_channel.series_name = 'Sky Radio'
SELECT tv_series.episode FROM tv_series JOIN tv_channel ON tv_series.channel = tv_channel.id WHERE tv_channel.series_name = 'Sky Radio'
SELECT tv_series.episode FROM tv_series JOIN tv_channel ON tv_series.channel = tv_channel.id WHERE tv_channel.series_name = 'Sky Radio'",SELECT tv_series.episode FROM tv_series JOIN tv_channel ON tv_series.channel = tv_channel.id WHERE tv_channel.series_name = 'Sky Radio'
244,160,What is the number of cars with a greater accelerate than the one with the most horsepower?,car_1,hard,SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );,7,"SELECT COUNT(*) FROM cars_data WHERE accelerate > (SELECT MAX(horsepower) FROM cars_data)
SELECT COUNT(*) FROM cars_data WHERE accelerate > (SELECT MAX(horsepower) FROM cars_data)
SELECT COUNT(*) FROM cars_data WHERE accelerate > (SELECT MAX(horsepower) FROM cars_data)
SELECT COUNT(*) FROM cars_data WHERE accelerate > (SELECT MAX(horsepower) FROM cars_data)
SELECT COUNT(*) FROM cars_data WHERE accelerate > (SELECT MAX(horsepower) FROM cars_data)
SELECT COUNT(*) FROM cars_data WHERE accelerate > (SELECT MAX(horsepower) FROM cars_data)
SELECT COUNT(*) FROM cars_data WHERE accelerate > (SELECT MAX(horsepower) FROM cars_data)",SELECT COUNT(*) FROM cars_data WHERE accelerate > (SELECT MAX(horsepower) FROM cars_data)
245,333,Show all template type codes with less than three templates.,cre_Doc_Template_Mgt,easy,SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3,7,"SELECT templates.template_type_code  FROM templates  GROUP BY templates.template_type_code  HAVING COUNT(templates.template_id) < 3
SELECT templates.template_type_code  FROM templates  GROUP BY templates.template_type_code  HAVING COUNT(templates.template_id) < 3
SELECT templates.template_type_code  FROM templates  GROUP BY templates.template_type_code  HAVING COUNT(templates.template_id) < 3
SELECT templates.template_type_code  FROM templates  GROUP BY templates.template_type_code  HAVING COUNT(templates.template_id) < 3
SELECT templates.template_type_code  FROM templates  GROUP BY templates.template_type_code  HAVING COUNT(templates.template_id) < 3
SELECT templates.template_type_code  FROM templates  GROUP BY templates.template_type_code  HAVING COUNT(templates.template_id) < 3
SELECT templates.template_type_code  FROM templates  GROUP BY templates.template_type_code  HAVING COUNT(templates.template_id) < 3",SELECT templates.template_type_code  FROM templates  GROUP BY templates.template_type_code  HAVING COUNT(templates.template_id) < 3
246,178,What are the ids and names of all countries that either have more than 3 car makers or produce fiat model ?,car_1,extra,"select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';",7,"SELECT c.countryid, c.countryname FROM countries AS c JOIN car_makers AS cm ON c.countryid = cm.country JOIN model_list AS ml ON cm.id = ml.maker JOIN car_names AS cn ON ml.model = cn.model WHERE c.continent = 'continents' GROUP BY c.countryid, c.countryname HAVING COUNT(DISTINCT cm.id) > 3 OR SUM(CASE WHEN ml.model = 'fiat' THEN 1 ELSE 0 END) > 0
SELECT c.countryid, c.countryname FROM countries AS c LEFT JOIN car_makers AS cm ON c.countryid = cm.country LEFT JOIN model_list AS ml ON cm.id = ml.maker WHERE c.continent = 'contid' AND (     SELECT COUNT(*) FROM car_makers WHERE country = c.countryid ) > 3 OR ml.model = 'fiat' GROUP BY c.countryid
SELECT c.countryid, c.countryname FROM countries AS c JOIN car_makers AS cm ON c.countryid = cm.country JOIN model_list AS ml ON cm.id = ml.maker JOIN car_names AS cn ON ml.model = cn.model WHERE c.continent = 'continents' GROUP BY c.countryid, c.countryname HAVING COUNT(DISTINCT cm.id) > 3 OR SUM(CASE WHEN ml.model = 'fiat' THEN 1 ELSE 0 END) > 0
SELECT c.countryid, c.countryname FROM countries AS c LEFT JOIN car_makers AS cm ON c.countryid = cm.country LEFT JOIN model_list AS ml ON cm.id = ml.maker WHERE c.continent = 'contid' AND (     SELECT COUNT(*) FROM car_makers WHERE country = c.countryid ) > 3 OR ml.model = 'fiat' GROUP BY c.countryid
SELECT c.countryid, c.countryname FROM countries AS c JOIN car_makers AS cm ON c.countryid = cm.country JOIN model_list AS ml ON cm.id = ml.maker JOIN car_names AS cn ON ml.model = cn.model WHERE c.continent = 'continents' GROUP BY c.countryid, c.countryname HAVING COUNT(DISTINCT cm.id) > 3 OR SUM(CASE WHEN ml.model = 'fiat' THEN 1 ELSE 0 END) > 0
SELECT c.countryid, c.countryname FROM countries AS c JOIN car_makers AS cm ON c.countryid = cm.country JOIN model_list AS ml ON cm.id = ml.maker JOIN car_names AS cn ON ml.model = cn.model WHERE c.continent = 'continents' GROUP BY c.countryid, c.countryname HAVING COUNT(cm.id) > 3 OR SUM(CASE WHEN ml.model = 'fiat' THEN 1 ELSE 0 END) > 0
SELECT c.countryid, c.countryname FROM countries AS c JOIN car_makers AS cm ON c.countryid = cm.country JOIN model_list AS ml ON cm.id = ml.maker JOIN car_names AS cn ON ml.model = cn.model WHERE c.continent = 'continents' GROUP BY c.countryid, c.countryname HAVING COUNT(DISTINCT cm.id) > 3 OR SUM(CASE WHEN ml.model = 'fiat' THEN 1 ELSE 0 END) > 0","SELECT c.countryid, c.countryname FROM countries AS c JOIN car_makers AS cm ON c.countryid = cm.country JOIN model_list AS ml ON cm.id = ml.maker JOIN car_names AS cn ON ml.model = cn.model WHERE c.continent = 'continents' GROUP BY c.countryid, c.countryname HAVING COUNT(DISTINCT cm.id) > 3 OR SUM(CASE WHEN ml.model = 'fiat' THEN 1 ELSE 0 END) > 0"
247,743,Which continent speaks the most languages?,world_1,extra,SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1,7,"SELECT c.continent, COUNT(cl.language) AS language_count FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode GROUP BY c.continent ORDER BY language_count DESC LIMIT 1
SELECT c.continent, COUNT(cl.language) AS language_count FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode GROUP BY c.continent ORDER BY language_count DESC LIMIT 1
SELECT c.continent, COUNT(cl.language) AS language_count FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode GROUP BY c.continent ORDER BY language_count DESC LIMIT 1
SELECT c.continent, COUNT(cl.language) AS language_count FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode GROUP BY c.continent ORDER BY language_count DESC LIMIT 1
SELECT c.continent, COUNT(cl.language) AS language_count FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode GROUP BY c.continent ORDER BY language_count DESC LIMIT 1
SELECT c.continent, COUNT(cl.language) AS language_count FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode GROUP BY c.continent ORDER BY language_count DESC LIMIT 1
SELECT c.continent, COUNT(cl.language) AS language_count FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode GROUP BY c.continent ORDER BY language_count DESC LIMIT 1","SELECT c.continent, COUNT(cl.language) AS language_count FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode GROUP BY c.continent ORDER BY language_count DESC LIMIT 1"
248,541,"Which student has enrolled for the most times in any program? List the id, first name, middle name, last name, the number of enrollments and student id.",student_transcripts_tracking,extra,"SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT s.student_id, s.first
SELECT s.student_id, s.first
SELECT s.student_id, s.first
SELECT s.student_id, s.first
SELECT s.student_id, s.first
SELECT s.student_id, s.first
SELECT s.student_id, s.first","SELECT s.student_id, s.first"
249,380,What are the ids of documents that contain the paragraph text 'Brazil' and 'Ireland'?,cre_Doc_Template_Mgt,hard,SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland',7,"SELECT documents.document_id  FROM documents  INNER JOIN paragraphs ON documents.document_id = paragraphs.document_id  WHERE paragraphs.paragraph_text LIKE '%Brazil%'  AND paragraphs.paragraph_text LIKE '%Ireland%'
SELECT documents.document_id  FROM documents  INNER JOIN paragraphs ON documents.document_id = paragraphs.document_id  WHERE paragraphs.paragraph_text LIKE '%Brazil%'  AND paragraphs.paragraph_text LIKE '%Ireland%'
SELECT documents.document_id  FROM documents  INNER JOIN paragraphs ON documents.document_id = paragraphs.document_id  WHERE paragraphs.paragraph_text LIKE '%Brazil%'  AND paragraphs.paragraph_text LIKE '%Ireland%'
SELECT documents.document_id  FROM documents  INNER JOIN paragraphs ON documents.document_id = paragraphs.document_id  WHERE paragraphs.paragraph_text LIKE '%Brazil%' AND paragraphs.paragraph_text LIKE '%Ireland%'
SELECT documents.document_id  FROM documents  INNER JOIN paragraphs ON documents.document_id = paragraphs.document_id  WHERE paragraphs.paragraph_text LIKE '%Brazil%' AND paragraphs.paragraph_text LIKE '%Ireland%'
SELECT documents.document_id  FROM documents  INNER JOIN paragraphs ON documents.document_id = paragraphs.document_id  WHERE paragraphs.paragraph_text LIKE '%Brazil%' AND paragraphs.paragraph_text LIKE '%Ireland%'
SELECT documents.document_id  FROM documents  INNER JOIN paragraphs ON documents.document_id = paragraphs.document_id  WHERE paragraphs.paragraph_text LIKE '%Brazil%' AND paragraphs.paragraph_text LIKE '%Ireland%'",SELECT documents.document_id  FROM documents  INNER JOIN paragraphs ON documents.document_id = paragraphs.document_id  WHERE paragraphs.paragraph_text LIKE '%Brazil%' AND paragraphs.paragraph_text LIKE '%Ireland%'
250,853,What is the record company used by the greatest number of orchestras?,orchestra,hard,SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1,7,"SELECT o.record_company  FROM orchestra AS o  GROUP BY o.record_company  ORDER BY COUNT(o.orchestra_id) DESC  LIMIT 1
SELECT orchestra.record_company, COUNT(orchestra.orchestra_id) as count FROM orchestra GROUP BY orchestra.record_company ORDER BY count DESC LIMIT 1
SELECT orchestra.record_company, COUNT(orchestra.orchestra_id) as number_of_orchestras FROM orchestra GROUP BY orchestra.record_company ORDER BY number_of_orchestras DESC LIMIT 1
SELECT o.record_company FROM orchestra AS o GROUP BY o.record_company ORDER BY COUNT(o.orchestra_id) DESC LIMIT 1
SELECT orchestra.record_company, COUNT(orchestra.orchestra_id) as Number_of_Orchestras FROM orchestra GROUP BY orchestra.record_company ORDER BY Number_of_Orchestras DESC LIMIT 1
SELECT orchestra.record_company, COUNT(orchestra.orchestra_id) as Number_of_Orchestras FROM orchestra GROUP BY orchestra.record_company ORDER BY Number_of_Orchestras DESC LIMIT 1
SELECT orchestra.record_company, COUNT(orchestra.orchestra_id) as num_orchestras FROM orchestra GROUP BY orchestra.record_company ORDER BY num_orchestras DESC LIMIT 1","SELECT orchestra.record_company, COUNT(orchestra.orchestra_id) as Number_of_Orchestras FROM orchestra GROUP BY orchestra.record_company ORDER BY Number_of_Orchestras DESC LIMIT 1"
251,96,What is the model of the car with the smallest amount of horsepower?,car_1,hard,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;,7,"SELECT model FROM cars_data  INNER JOIN car_names ON cars_data.id = car_names.makeid  ORDER BY horsepower ASC  LIMIT 1
SELECT c.model FROM car_names AS c JOIN cars_data AS d ON c.makeid = d.id WHERE d.horsepower = (SELECT MIN(horsepower) FROM cars_data)
SELECT model FROM cars_data  INNER JOIN car_names ON cars_data.id = car_names.makeid  ORDER BY horsepower ASC  LIMIT 1
SELECT model FROM cars_data INNER JOIN car_names ON cars_data.id = car_names.makeid ORDER BY horsepower LIMIT 1
SELECT model FROM cars_data  INNER JOIN car_names ON cars_data.id = car_names.makeid  ORDER BY horsepower ASC  LIMIT 1
SELECT model FROM cars_data INNER JOIN car_names ON cars_data.id = car_names.makeid ORDER BY horsepower LIMIT 1
SELECT model FROM cars_data INNER JOIN car_names ON cars_data.id = car_names.makeid ORDER BY horsepower ASC LIMIT 1",SELECT model FROM cars_data  INNER JOIN car_names ON cars_data.id = car_names.makeid  ORDER BY horsepower ASC  LIMIT 1
252,280,Which employee received the biggest bonus? Give me the employee name.,employee_hire_evaluation,hard,SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1,7,"SELECT e.name  FROM evaluation AS ev  JOIN employee AS e ON ev.employee_id = e.employee_id  WHERE ev.bonus = (SELECT MAX(bonus) FROM evaluation)
SELECT e.name FROM evaluation AS ev JOIN employee AS e ON ev.employee_id = e.employee_id WHERE ev.bonus = (SELECT MAX(bonus) FROM evaluation)
SELECT e.name FROM evaluation AS ev JOIN employee AS e ON ev.employee_id = e.employee_id WHERE ev.bonus = (SELECT MAX(bonus) FROM evaluation)
SELECT e.name FROM evaluation AS ev JOIN employee AS e ON ev.employee_id = e.employee_id WHERE ev.bonus = (SELECT MAX(bonus) FROM evaluation)
SELECT e.name FROM evaluation AS ev JOIN employee AS e ON ev.employee_id = e.employee_id WHERE ev.bonus = (SELECT MAX(bonus) FROM evaluation)
SELECT e.name FROM evaluation AS ev JOIN employee AS e ON ev.employee_id = e.employee_id WHERE ev.bonus = (SELECT MAX(bonus) FROM evaluation)
SELECT e.name  FROM evaluation AS ev  JOIN employee AS e ON ev.employee_id = e.employee_id  WHERE ev.bonus = (SELECT MAX(bonus) FROM evaluation)",SELECT e.name FROM evaluation AS ev JOIN employee AS e ON ev.employee_id = e.employee_id WHERE ev.bonus = (SELECT MAX(bonus) FROM evaluation)
253,1027,What is the sname of every sing that does not have any song?,singer,hard,SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song),7,"SELECT s.sname  FROM sing s  LEFT JOIN song so ON s.sing_id = so.sing_id  WHERE so.song_id IS NULL
SELECT s.sname  FROM sing AS s  LEFT JOIN song AS song ON s.sing_id = song.sing_id  WHERE song.song_id IS NULL
SELECT sname FROM sing WHERE NOT EXISTS (SELECT 1 FROM song WHERE song.singer_id = sing.singer_id)
SELECT s.sname  FROM sing s  LEFT JOIN song so ON s.sing_id = so.sing_id  WHERE so.song_id IS NULL
SELECT s.sname  FROM sing AS s  LEFT JOIN song AS song ON s.sing_id = song.sing_id  WHERE song.song_id IS NULL
SELECT s.sname  FROM sing s  LEFT JOIN song so ON s.sing_id = so.sing_id  WHERE so.song_id IS NULL
SELECT s.sname  FROM sing s  LEFT JOIN song so ON s.sing_id = so.sing_id  WHERE so.song_id IS NULL",SELECT s.sname  FROM sing s  LEFT JOIN song so ON s.sing_id = so.sing_id  WHERE so.song_id IS NULL
254,513,What is the zip code of the address in the city Port Chelsea?,student_transcripts_tracking,easy,SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea',7,"SELECT zip_postcode FROM addresses WHERE city = 'Port Chelsea'
SELECT zip_postcode FROM addresses WHERE city = 'Port Chelsea'
SELECT zip_postcode FROM addresses WHERE city = 'Port Chelsea'
SELECT zip_postcode FROM addresses WHERE city = 'Port Chelsea'
SELECT zip_postcode FROM addresses WHERE city = 'Port Chelsea'
SELECT zip_postcode FROM addresses WHERE city = 'Port Chelsea'
SELECT zip_postcode FROM addresses WHERE city = 'Port Chelsea'",SELECT zip_postcode FROM addresses WHERE city = 'Port Chelsea'
255,171,Which models are lighter than 3500 but not built by the 'Ford Motor Company'?,car_1,extra,SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';,7,"SELECT DISTINCT c.model FROM car_names AS c JOIN cars_data AS d ON c.makeid = d.id JOIN car_makers AS m ON c.makeid = m.id WHERE d.weight < 3500 AND m.fullname != 'Ford Motor Company'
SELECT DISTINCT c.model FROM car_names AS c JOIN cars_data AS d ON c.makeid = d.id JOIN model_list AS m ON c.model = m.modelid JOIN car_makers AS a ON m.maker = a.id WHERE d.weight < 3500 AND a.fullname != 'Ford Motor Company'
SELECT DISTINCT c.model  FROM car_names AS c  JOIN cars_data AS d ON c.makeid = d.id  JOIN car_makers AS m ON c.makeid = m.id  WHERE d.weight < 3500 AND m.fullname != 'Ford Motor Company'
SELECT DISTINCT c.model FROM car_names AS c JOIN cars_data AS d ON c.makeid = d.id JOIN model_list AS m ON c.model = m.modelid JOIN car_makers AS a ON m.maker = a.id WHERE d.weight < 3500 AND a.fullname != 'Ford Motor Company'
SELECT DISTINCT c.model FROM car_names AS c JOIN cars_data AS d ON c.makeid = d.id JOIN car_makers AS m ON c.makeid = m.id WHERE d.weight < 3500 AND m.fullname != 'Ford Motor Company'
SELECT DISTINCT c.model FROM car_names AS c JOIN cars_data AS d ON c.makeid = d.id JOIN car_makers AS m ON c.makeid = m.id WHERE d.weight < 3500 AND m.fullname != 'Ford Motor Company'
SELECT DISTINCT c.model FROM car_names AS c JOIN cars_data AS d ON c.makeid = d.id JOIN model_list AS m ON c.model = m.modelid JOIN car_makers AS a ON m.maker = a.id WHERE d.weight < 3500 AND a.fullname != 'Ford Motor Company'",SELECT DISTINCT c.model FROM car_names AS c JOIN cars_data AS d ON c.makeid = d.id JOIN car_makers AS m ON c.makeid = m.id WHERE d.weight < 3500 AND m.fullname != 'Ford Motor Company'
256,194,Give the airline with abbreviation 'UAL'.,flight_2,easy,"SELECT Airline FROM AIRLINES WHERE Abbreviation  =  ""UAL""",7,"SELECT uid, airline, abbreviation, country FROM airlines WHERE abbreviation = 'UAL'
SELECT * FROM airlines WHERE abbreviation = 'UAL'
SELECT uid, airline, abbreviation, country FROM airlines WHERE abbreviation = 'UAL'
SELECT uid, airline, abbreviation, country FROM airlines WHERE abbreviation = 'UAL'
SELECT uid, airline, abbreviation, country FROM airlines WHERE abbreviation = 'UAL'
SELECT uid, airline, abbreviation, country FROM airlines WHERE abbreviation = 'UAL'
SELECT uid, airline, abbreviation, country FROM airlines WHERE abbreviation = 'UAL'","SELECT uid, airline, abbreviation, country FROM airlines WHERE abbreviation = 'UAL'"
257,142,What model has the most different versions?,car_1,hard,SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;,7,"SELECT model FROM model_list JOIN (SELECT maker, COUNT(DISTINCT model) AS model_count FROM model_list GROUP BY maker ORDER BY model_count DESC LIMIT 1) AS most_versions ON model_list.maker = most_versions.maker
SELECT model FROM model_list JOIN (SELECT maker, COUNT(DISTINCT model) AS model_count FROM model_list GROUP BY maker ORDER BY model_count DESC LIMIT 1) AS most_versions ON model_list.maker = most_versions.maker
SELECT model FROM model_list JOIN (SELECT maker, COUNT(DISTINCT model) AS model_count FROM model_list GROUP BY maker ORDER BY model_count DESC LIMIT 1) AS most_versions ON model_list.maker = most_versions.maker
SELECT model FROM model_list JOIN (SELECT maker, COUNT(DISTINCT model) AS model_count FROM model_list GROUP BY maker ORDER BY model_count DESC LIMIT 1) AS most_versions ON model_list.maker = most_versions.maker
SELECT model FROM model_list JOIN (SELECT maker, COUNT(DISTINCT model) AS model_count FROM model_list GROUP BY maker ORDER BY model_count DESC LIMIT 1) AS most_versions ON model_list.maker = most_versions.maker
SELECT model FROM model_list JOIN (SELECT maker, COUNT(DISTINCT model) AS model_count FROM model_list GROUP BY maker ORDER BY model_count DESC LIMIT 1) AS most_versions ON model_list.maker = most_versions.maker
SELECT model FROM model_list JOIN (SELECT maker, COUNT(DISTINCT model) AS model_count FROM model_list GROUP BY maker ORDER BY model_count DESC LIMIT 1) AS most_versions ON model_list.maker = most_versions.maker","SELECT model FROM model_list JOIN (SELECT maker, COUNT(DISTINCT model) AS model_count FROM model_list GROUP BY maker ORDER BY model_count DESC LIMIT 1) AS most_versions ON model_list.maker = most_versions.maker"
258,516,What is the name and id of the department with the most number of degrees ?,student_transcripts_tracking,extra,"select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1",7,"SELECT departments.department_name, departments.department_id FROM departments JOIN degree_programs ON departments.
SELECT departments.department_id, departments.department_name FROM departments JOIN degree_programs ON departments.
SELECT departments.department_name, departments.department_id FROM departments JOIN degree_programs ON departments.
SELECT departments.department_id, departments.department_name FROM departments JOIN degree_programs ON departments.
SELECT departments.department_id, departments.department_name FROM departments JOIN degree_programs ON departments.
SELECT departments.department_id, departments.department_name FROM departments JOIN degree_programs ON departments.
SELECT departments.department_id, departments.department_name FROM departments JOIN degree_programs ON departments.","SELECT departments.department_id, departments.department_name FROM departments JOIN degree_programs ON departments."
259,830,What is the average attendance of shows?,orchestra,easy,SELECT avg(Attendance) FROM SHOW,7,"SELECT AVG(attendance) as average_attendance FROM show
SELECT AVG(attendance) AS average_attendance FROM show
SELECT AVG(attendance) AS average_attendance FROM show
SELECT AVG(attendance) FROM show
SELECT AVG(attendance) AS average_attendance FROM show
SELECT AVG(attendance) as average_attendance FROM show
SELECT AVG(attendance) AS average_attendance FROM show",SELECT AVG(attendance) AS average_attendance FROM show
260,1015,What is the most common singer citizenship ?,singer,hard,select citizenship from singer group by citizenship order by count(*) desc limit 1,7,"SELECT s.citizenship, COUNT(*) as count FROM singer as s JOIN song as so ON s.singer_id = so.singer_id GROUP BY s.citizenship ORDER BY count DESC LIMIT 1
SELECT citizenship, COUNT(*) as count  FROM singer  GROUP BY citizenship  ORDER BY count DESC  LIMIT 1
SELECT s.citizenship, COUNT(*) as count FROM singer as s JOIN song as so ON s.singer_id = so.singer_id GROUP BY s.citizenship ORDER BY count DESC LIMIT 1
SELECT s.citizenship, COUNT(*) as count FROM singer as s JOIN song as so ON s.singer_id = so.singer_id GROUP BY s.citizenship ORDER BY count DESC LIMIT 1
SELECT s.citizenship, COUNT(*) as count FROM singer as s JOIN song as so ON s.singer_id = so.singer_id GROUP BY s.citizenship ORDER BY count DESC LIMIT 1
SELECT s.citizenship, COUNT(*) as count FROM singer as s JOIN song as so ON s.singer_id = so.singer_id GROUP BY s.citizenship ORDER BY count DESC LIMIT 1
SELECT citizenship, COUNT(*) as count  FROM singer  GROUP BY citizenship  ORDER BY count DESC  LIMIT 1","SELECT s.citizenship, COUNT(*) as count FROM singer as s JOIN song as so ON s.singer_id = so.singer_id GROUP BY s.citizenship ORDER BY count DESC LIMIT 1"
261,780,What are the country codes of countries where people use languages other than English?,world_1,easy,"SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != ""English""",7,"SELECT DISTINCT country.code  FROM country  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language <> 'English'
SELECT country.code  FROM country  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language != 'English'
SELECT DISTINCT country.code  FROM country  JOIN countrylanguage  ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language <> 'English'
SELECT DISTINCT country.code  FROM country  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language <> 'English'
SELECT country.code  FROM country  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language != 'English'
SELECT DISTINCT country.code  FROM country  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language <> 'English'
SELECT DISTINCT country.code  FROM country  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language != 'English'",SELECT DISTINCT country.code  FROM country  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language <> 'English'
262,828,What are the record companies of orchestras in descending order of years in which they were founded?,orchestra,easy,SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC,7,"SELECT orchestra.record_company, orchestra.year_of_founded FROM orchestra JOIN conductor ON orchestra.conductor_id = conductor.conductor_id ORDER BY orchestra.year_of_founded DESC
SELECT orchestra.record_company, orchestra.year_of_founded FROM orchestra JOIN conductor ON orchestra.conductor_id = conductor.conductor_id ORDER BY orchestra.year_of_founded DESC
SELECT orchestra.record_company, orchestra.year_of_founded FROM orchestra JOIN conductor ON orchestra.conductor_id = conductor.conductor_id ORDER BY orchestra.year_of_founded DESC
SELECT orchestra.record_company, orchestra.year_of_founded FROM orchestra JOIN conductor ON orchestra.conductor_id = conductor.conductor_id ORDER BY orchestra.year_of_founded DESC
SELECT orchestra.record_company, orchestra.year_of_founded FROM orchestra JOIN conductor ON orchestra.conductor_id = conductor.conductor_id ORDER BY orchestra.year_of_founded DESC
SELECT orchestra.record_company, orchestra.year_of_founded FROM orchestra INNER JOIN conductor ON orchestra.conductor_id = conductor.conductor_id ORDER BY orchestra.year_of_founded DESC
SELECT orchestra.record_company, orchestra.year_of_founded FROM orchestra JOIN conductor ON orchestra.conductor_id = conductor.conductor_id ORDER BY orchestra.year_of_founded DESC","SELECT orchestra.record_company, orchestra.year_of_founded FROM orchestra JOIN conductor ON orchestra.conductor_id = conductor.conductor_id ORDER BY orchestra.year_of_founded DESC"
263,668,Return the money rank of the poker player with the greatest height.,poker_player,hard,SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1,7,"SELECT poker_player.money_rank  FROM poker_player  INNER JOIN people  ON poker_player.people_id = people.people_id  WHERE people.height = (SELECT MAX(height) FROM people)
SELECT poker_player.money_rank FROM poker_player JOIN people ON poker_player.people_id = people.people_id WHERE people.height = (SELECT MAX(height) FROM people)
SELECT poker_player.money_rank  FROM poker_player  INNER JOIN people  ON poker_player.people_id = people.people_id  WHERE people.height = (SELECT MAX(height) FROM people)
SELECT poker_player.money_rank  FROM poker_player  INNER JOIN people ON poker_player.people_id = people.people_id  WHERE people.height = (SELECT MAX(height) FROM people)
SELECT poker_player.money_rank  FROM poker_player  JOIN people ON poker_player.people_id = people.people_id  ORDER BY people.height DESC  LIMIT 1
SELECT poker_player.money_rank FROM poker_player JOIN people ON poker_player.people_id = people.people_id WHERE people.height = (SELECT MAX(height) FROM people)
SELECT poker_player.money_rank  FROM poker_player  INNER JOIN people  ON poker_player.people_id = people.people_id  WHERE people.height = (SELECT MAX(height) FROM people)",SELECT poker_player.money_rank  FROM poker_player  INNER JOIN people  ON poker_player.people_id = people.people_id  WHERE people.height = (SELECT MAX(height) FROM people)
264,941,Find the owner id and zip code of the owner who spent the most money in total for his or her dogs.,dog_kennels,extra,"SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",7,"SELECT owners.owner_id, owners.zip_code FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN treatments ON dogs.dog_id = treatments.dog_id JOIN charges ON treatments.treatment_type_code = charges.charge_type GROUP BY owners.owner_id ORDER BY SUM(charges.charge_amount) DESC LIMIT 1
SELECT owners.owner_id, owners.zip_code FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN treatments ON dogs.dog_id = treatments.dog_id JOIN charges ON treatments.treatment_type_code = charges.charge_type GROUP BY owners.owner_id ORDER BY SUM(charges.charge_amount) DESC LIMIT 1
SELECT owners.owner_id, owners.zip_code FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN treatments ON dogs.dog_id = treatments.dog_id JOIN charges ON treatments.treatment_type_code = charges.charge_type GROUP BY owners.owner_id ORDER BY SUM(charges.charge_amount) DESC LIMIT 1
SELECT owners.owner_id, owners.zip_code FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN treatments ON dogs.dog_id = treatments.dog_id JOIN charges ON treatments.treatment_type_code = charges.charge_type GROUP BY owners.owner_id ORDER BY SUM(charges.charge_amount) DESC LIMIT 1
SELECT owners.owner_id, owners.zip_code FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN treatments ON dogs.dog_id = treatments.dog_id JOIN charges ON treatments.treatment_type_code = charges.charge_type GROUP BY owners.owner_id ORDER BY SUM(charges.charge_amount) DESC LIMIT 1
SELECT owners.owner_id, owners.zip_code FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN treatments ON dogs.dog_id = treatments.dog_id JOIN charges ON treatments.treatment_type_code = charges.charge_type GROUP BY owners.owner_id ORDER BY SUM(charges.charge_amount) DESC LIMIT 1
SELECT owners.owner_id, owners.zip_code FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN treatments ON dogs.dog_id = treatments.dog_id JOIN charges ON treatments.treatment_type_code = charges.charge_type GROUP BY owners.owner_id ORDER BY SUM(charges.charge_amount) DESC LIMIT 1","SELECT owners.owner_id, owners.zip_code FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN treatments ON dogs.dog_id = treatments.dog_id JOIN charges ON treatments.treatment_type_code = charges.charge_type GROUP BY owners.owner_id ORDER BY SUM(charges.charge_amount) DESC LIMIT 1"
265,916,Find the minimum grade of students who have no friends.,network_1,extra,SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id),7,"SELECT MIN(highschooler.grade) FROM highschooler LEFT JOIN friend ON highschooler.id = friend.student_id WHERE friend.friend_id IS NULL
SELECT MIN(highschooler.grade)  FROM highschooler  WHERE highschooler.id NOT IN (SELECT friend.student_id FROM friend)  AND highschooler.id NOT IN (SELECT friend.friend_id FROM friend)
SELECT MIN(highschooler.grade)  FROM highschooler  WHERE highschooler.id NOT IN (SELECT friend.student_id FROM friend)  AND highschooler.id NOT IN (SELECT friend.friend_id FROM friend)
SELECT MIN(highschooler.grade) FROM highschooler LEFT JOIN friend ON highschooler.id = friend.student_id WHERE friend.friend_id IS NULL
SELECT MIN(highschooler.grade) FROM highschooler LEFT JOIN friend ON highschooler.id = friend.student_id WHERE friend.student_id IS NULL
SELECT MIN(highschooler.grade) FROM highschooler LEFT JOIN friend ON highschooler.id = friend.student_id WHERE friend.student_id IS NULL
SELECT MIN(highschooler.grade) FROM highschooler LEFT JOIN friend ON highschooler.id = friend.student_id WHERE friend.friend_id IS NULL",SELECT MIN(highschooler.grade) FROM highschooler LEFT JOIN friend ON highschooler.id = friend.student_id WHERE friend.friend_id IS NULL
266,448,What are the names of players who won in both 2013 and 2016?,wta_1,hard,SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016,7,"SELECT DISTINCT p.first_name, p.last_name FROM players AS p JOIN matches AS m1 ON p.player_id = m1.winner_id JOIN matches AS m2 ON p.player_id = m2.winner_id WHERE m1.year = 2013 AND m2.year = 2016
SELECT DISTINCT p.first_name, p.last_name FROM players p JOIN matches m1 ON p.player_id = m1.winner_id JOIN matches m2 ON p.player_id = m2.winner_id WHERE m1.year = 2013 AND m2.year = 2016
SELECT DISTINCT p.first_name, p.last_name FROM players AS p JOIN matches AS m1 ON p.player_id = m1.winner_id JOIN matches AS m2 ON p.player_id = m2.winner_id WHERE m1.year = 2013 AND m2.year = 2016
SELECT DISTINCT p.first_name, p.last_name FROM players AS p JOIN matches AS m1 ON p.player_id = m1.winner_id JOIN matches AS m2 ON p.player_id = m2.winner_id WHERE m1.year = 2013 AND m2.year = 2016
SELECT DISTINCT p.first_name, p.last_name FROM players AS p JOIN matches AS m1 ON p.player_id = m1.winner_id JOIN matches AS m2 ON p.player_id = m2.winner_id WHERE m1.year = 2013 AND m2.year = 2016
SELECT DISTINCT p.first_name, p.last_name FROM players AS p JOIN matches AS m1 ON p.player_id = m1.winner_id JOIN matches AS m2 ON p.player_id = m2.winner_id WHERE m1.year = 2013 AND m2.year = 2016
SELECT DISTINCT p.first_name, p.last_name FROM players AS p JOIN matches AS m1 ON p.player_id = m1.winner_id JOIN matches AS m2 ON p.player_id = m2.winner_id WHERE m1.year = 2013 AND m2.year = 2016","SELECT DISTINCT p.first_name, p.last_name FROM players AS p JOIN matches AS m1 ON p.player_id = m1.winner_id JOIN matches AS m2 ON p.player_id = m2.winner_id WHERE m1.year = 2013 AND m2.year = 2016"
267,837,"What are the names of conductors, sorted descending by the number of years they have worked?",orchestra,easy,SELECT Name FROM conductor ORDER BY Year_of_Work DESC,7,"SELECT c.name  FROM conductor AS c  ORDER BY c.year_of_work DESC
SELECT c.name  FROM conductor AS c  ORDER BY c.year_of_work DESC
SELECT c.name  FROM conductor AS c  ORDER BY c.year_of_work DESC
SELECT c.name  FROM conductor AS c  ORDER BY c.year_of_work DESC
SELECT c.name FROM conductor AS c ORDER BY c.year_of_work DESC
SELECT c.name FROM conductor AS c ORDER BY c.year_of_work DESC
SELECT c.name FROM conductor AS c ORDER BY c.year_of_work DESC",SELECT c.name  FROM conductor AS c  ORDER BY c.year_of_work DESC
268,777,What are the Asian countries which have a population larger than that of any country in Africa?,world_1,extra,"SELECT Name FROM country WHERE Continent  =  ""Asia""  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  ""Africa"")",7,"SELECT A.name AS Asian_Country, A.population AS Asian_Population, MAX(F.population) AS Max_African_Population FROM country A JOIN (SELECT countrycode, population FROM city UNION SELECT code, population FROM country WHERE continent = 'Africa') F ON A.code = F.countrycode WHERE A.continent = 'Asia' GROUP BY A.name HAVING Asian_Population > MAX(F.population)
SELECT c1.name AS Asian_Country, c2.name AS Africa_Country FROM country c1 JOIN country c2 ON c1.population > c2.population WHERE c1.continent = 'Asia' AND c2.continent = 'Africa' GROUP BY c1.name HAVING COUNT(c2.name) = (     SELECT COUNT(*)     FROM country c3     WHERE c3.continent = 'Africa' ) 
SELECT c1.name AS Asian_Country, c2.name AS Africa_Country, c1.population AS Asian_Population, c2.population AS Africa_Population FROM country c1 JOIN country c2 ON c1.population > c2.population WHERE c1.continent = 'Asia' AND c2.continent = 'Africa'
SELECT c1.name AS Asian_Country, c2.name AS Africa_Country, c1.population AS Asian_Population, c2.population AS Africa_Population FROM country c1 JOIN country c2 ON c1.continent <> c2.continent WHERE c1.continent = 'Asia' AND c2.continent = 'Africa' AND c1.population > c2.population
SELECT c1.name AS Asian_Country, c2.name AS Africa_Country FROM country c1 JOIN country c2 ON c1.population > c2.population WHERE c1.continent = 'Asia' AND c2.continent = 'Africa' GROUP BY c1.name HAVING COUNT(c2.name) = (SELECT COUNT(*) FROM country WHERE continent = 'Africa') 
SELECT c1.name AS Asian_Country, c2.name AS Africa_Country, c1.population AS Asian_Population, c2.population AS Africa_Population FROM country c1 JOIN country c2 ON c1.continent = 'Asia' AND c2.continent = 'Africa' WHERE c1.population > c2.population
SELECT c1.name AS Asian_Country, c2.name AS Africa_Country, c1.population AS Asian_Population, c2.population AS Africa_Population FROM country c1 JOIN country c2 ON c1.continent <> c2.continent WHERE c1.continent = 'Asia' AND c2.continent = 'Africa' AND c1.population > c2.population","SELECT c1.name AS Asian_Country, c2.name AS Africa_Country, c1.population AS Asian_Population, c2.population AS Africa_Population FROM country c1 JOIN country c2 ON c1.continent <> c2.continent WHERE c1.continent = 'Asia' AND c2.continent = 'Africa' AND c1.population > c2.population"
269,270,What are the manager name and district of the shop that sells the largest number of products?,employee_hire_evaluation,medium,"SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1",7,"SELECT s.manager_name, s.district FROM shop AS s JOIN (     SELECT shop_id, MAX(number_products) as max_products     FROM shop     GROUP BY shop_id ) AS sp ON s.shop_id = sp.shop_id WHERE s.number_products = sp.max_products
SELECT s.manager_name, s.district FROM shop s JOIN (     SELECT shop_id, MAX(number_products) as max_products     FROM shop     GROUP BY shop_id ) sp ON s.shop_id = sp.shop_id JOIN hiring h ON s.shop_id = h.shop_id JOIN employee e ON h.employee_id = e.employee_id WHERE s.number_products = sp.max_products AND e.name = s.manager_name
SELECT s.manager_name, s.district FROM shop AS s JOIN (     SELECT shop_id, MAX(number_products) as max_products     FROM shop     GROUP BY shop_id ) AS sp ON s.shop_id = sp.shop_id WHERE s.number_products = sp.max_products
SELECT s.manager_name, s.district FROM shop AS s JOIN (     SELECT shop_id, MAX(number_products) as max_products     FROM shop     GROUP BY shop_id ) AS sp ON s.shop_id = sp.shop_id WHERE s.number_products = sp.max_products
SELECT s.manager_name, s.district FROM shop AS s JOIN (     SELECT shop_id, MAX(number_products) as max_products     FROM shop     GROUP BY shop_id ) AS sp ON s.shop_id = sp.shop_id WHERE s.number_products = sp.max_products
SELECT s.manager_name, s.district FROM shop AS s JOIN (     SELECT shop_id, MAX(number_products) as max_products     FROM shop     GROUP BY shop_id ) AS sp ON s.shop_id = sp.shop_id WHERE s.number_products = sp.max_products
SELECT s.manager_name, s.district FROM shop s JOIN (     SELECT shop_id, MAX(number_products) as max_products     FROM shop     GROUP BY shop_id ) sp ON s.shop_id = sp.shop_id JOIN hiring h ON s.shop_id = h.shop_id JOIN employee e ON h.employee_id = e.employee_id WHERE s.number_products = sp.max_products AND e.name = s.manager_name","SELECT s.manager_name, s.district FROM shop AS s JOIN (     SELECT shop_id, MAX(number_products) as max_products     FROM shop     GROUP BY shop_id ) AS sp ON s.shop_id = sp.shop_id WHERE s.number_products = sp.max_products"
270,174,What are the names of the countries with no car makers?,car_1,hard,SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;,7,"SELECT countries.countryname FROM countries LEFT JOIN car_makers ON countries.countryid = car_makers.country WHERE car_makers.country IS NULL
SELECT countries.countryname FROM countries LEFT JOIN car_makers ON countries.countryid = car_makers.country WHERE car_makers.country IS NULL
SELECT DISTINCT c.countryname  FROM countries AS c  LEFT JOIN car_makers AS cm ON c.countryid = cm.country  WHERE cm.country IS NULL
SELECT countries.countryname  FROM countries  LEFT JOIN car_makers  ON countries.countryid = car_makers.country  WHERE car_makers.country IS NULL
SELECT DISTINCT c.countryname  FROM countries AS c  LEFT JOIN car_makers AS cm ON c.countryid = cm.country  WHERE cm.country IS NULL
SELECT countries.countryname FROM countries LEFT JOIN car_makers ON countries.countryid = car_makers.country WHERE car_makers.country IS NULL
SELECT DISTINCT c.countryname  FROM countries c  LEFT JOIN car_makers cm ON c.countryid = cm.country  WHERE cm.country IS NULL",SELECT countries.countryname FROM countries LEFT JOIN car_makers ON countries.countryid = car_makers.country WHERE car_makers.country IS NULL
271,810,What is the total population and average area of countries in the continent of North America whose area is bigger than 3000 ?,world_1,hard,"select sum(population) ,  avg(surfacearea) from country where continent  =  ""north america"" and surfacearea  >  3000",7,"SELECT SUM(population) AS total_population, AVG(surfacearea) AS average_area FROM country WHERE continent = 'North America' AND surfacearea > 3000
SELECT SUM(population) AS total_population, AVG(surfacearea) AS average_area FROM country WHERE continent = 'North America' AND surfacearea > 3000
SELECT SUM(population) AS total_population, AVG(surfacearea) AS average_area FROM country WHERE continent = 'North America' AND surfacearea > 3000
SELECT SUM(population) AS total_population, AVG(surfacearea) AS average_area FROM country WHERE continent = 'North America' AND surfacearea > 3000
SELECT SUM(population) AS total_population, AVG(surfacearea) AS average_area FROM country WHERE continent = 'North America' AND surfacearea > 3000
SELECT SUM(population) AS total_population, AVG(surfacearea) AS average_area FROM country WHERE continent = 'North America' AND surfacearea > 3000
SELECT SUM(population) AS total_population, AVG(surfacearea) AS average_area FROM country WHERE continent = 'North America' AND surfacearea > 3000","SELECT SUM(population) AS total_population, AVG(surfacearea) AS average_area FROM country WHERE continent = 'North America' AND surfacearea > 3000"
272,710,Which region is the city Kabul located in?,world_1,medium,"SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  ""Kabul""",7,"SELECT country.region  FROM country  INNER JOIN city ON country.code = city.countrycode  WHERE city.name = 'Kabul'
SELECT country.region  FROM country  JOIN city ON country.code = city.countrycode  WHERE city.name = 'Kabul'
SELECT country.region  FROM country  JOIN city ON country.code = city.countrycode  WHERE city.name = 'Kabul'
SELECT country.region  FROM country  JOIN city ON country.code = city.countrycode  WHERE city.name = 'Kabul'
SELECT country.region  FROM country  JOIN city ON country.code = city.countrycode  WHERE city.name = 'Kabul'
SELECT country.region  FROM country  JOIN city ON country.code = city.countrycode  WHERE city.name = 'Kabul'
SELECT country.region  FROM country  JOIN city ON country.code = city.countrycode  WHERE city.name = 'Kabul'",SELECT country.region  FROM country  JOIN city ON country.code = city.countrycode  WHERE city.name = 'Kabul'
273,902,Count the number of likes for each student id.,network_1,medium,"SELECT student_id ,  count(*) FROM Likes GROUP BY student_id",7,"SELECT likes.student_id, COUNT(*) as num_likes FROM likes GROUP BY likes.student_id
SELECT likes.student_id, COUNT(*) as num_likes FROM likes GROUP BY likes.student_id
SELECT likes.student_id, COUNT(*) as num_likes FROM likes GROUP BY likes.student_id
SELECT likes.student_id, COUNT(*) as num_likes FROM likes GROUP BY likes.student_id
SELECT likes.student_id, COUNT(*) as num_likes FROM likes GROUP BY likes.student_id
SELECT likes.student_id, COUNT(*) as num_likes FROM likes GROUP BY likes.student_id
SELECT likes.student_id, COUNT(*) as num_likes FROM likes GROUP BY likes.student_id","SELECT likes.student_id, COUNT(*) as num_likes FROM likes GROUP BY likes.student_id"
274,1025,"For each singer name, what is the total sales for their songs?",singer,medium,"SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",7,"SELECT singer.name, SUM(song.sales) as total_sales FROM singer JOIN song ON singer.singer_id = song.singer_id GROUP BY singer.name
SELECT singer.name, SUM(song.sales) as total_sales FROM singer JOIN song ON singer.singer_id = song.singer_id GROUP BY singer.name
SELECT singer.name, SUM(song.sales) as total_sales FROM singer JOIN song ON singer.singer_id = song.singer_id GROUP BY singer.name
SELECT singer.name, SUM(song.sales) as total_sales FROM singer JOIN song ON singer.singer_id = song.singer_id GROUP BY singer.name
SELECT singer.name, SUM(song.sales) as total_sales FROM singer JOIN song ON singer.singer_id = song.singer_id GROUP BY singer.name
SELECT singer.name, SUM(song.sales) as total_sales FROM singer JOIN song ON singer.singer_id = song.singer_id GROUP BY singer.name
SELECT singer.name, SUM(song.sales) as total_sales FROM singer JOIN song ON singer.singer_id = song.singer_id GROUP BY singer.name","SELECT singer.name, SUM(song.sales) as total_sales FROM singer JOIN song ON singer.singer_id = song.singer_id GROUP BY singer.name"
275,818,What is the total number of countries where Spanish is spoken by the largest percentage of people?,world_1,extra,"SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  ""Spanish"" GROUP BY CountryCode",7,"SELECT COUNT(*) FROM (SELECT c.name FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode WHERE cl.language = 'Spanish' AND cl.percentage = (SELECT MAX(percentage) FROM countrylanguage WHERE language = 'Spanish') GROUP BY c.name)
SELECT COUNT(*) FROM (     SELECT c.name AS country_name, cl.language, cl.percentage     FROM country AS c     JOIN countrylanguage AS cl ON c.code = cl.countrycode     WHERE cl.language = 'Spanish'     ORDER BY cl.percentage DESC     LIMIT 1 )
SELECT COUNT(*) FROM (     SELECT c.name AS country_name, cl.language, cl.percentage     FROM country AS c     JOIN countrylanguage AS cl ON c.code = cl.countrycode     WHERE cl.language = 'Spanish' AND cl.percentage = (         SELECT MAX(percentage) FROM countrylanguage WHERE language = 'Spanish'     ) )
SELECT COUNT(*) FROM (SELECT c.name FROM country c JOIN countrylanguage cl ON c.code = cl.countrycode WHERE cl.language = 'Spanish' AND cl.percentage = (SELECT MAX(percentage) FROM countrylanguage WHERE language = 'Spanish') GROUP BY c.name)
SELECT COUNT(*) FROM (     SELECT c.name AS country_name, cl.language, cl.percentage     FROM country AS c     JOIN countrylanguage AS cl ON c.code = cl.countrycode     WHERE cl.language = 'Spanish' AND cl.percentage = (         SELECT MAX(percentage) FROM countrylanguage WHERE language = 'Spanish'     ) )
SELECT COUNT(*) FROM (     SELECT c.name AS country_name, cl.language, cl.percentage     FROM country AS c     JOIN countrylanguage AS cl ON c.code = cl.countrycode     WHERE cl.language = 'Spanish' AND cl.percentage = (         SELECT MAX(percentage) FROM countrylanguage WHERE language = 'Spanish'     ) )
SELECT COUNT(*) FROM (     SELECT c.name AS country_name, MAX(cl.percentage) AS max_percentage     FROM country AS c     JOIN countrylanguage AS cl ON c.code = cl.countrycode     WHERE cl.language = 'Spanish'     GROUP BY c.name     HAVING MAX(cl.percentage) = cl.percentage )","SELECT COUNT(*) FROM (     SELECT c.name AS country_name, cl.language, cl.percentage     FROM country AS c     JOIN countrylanguage AS cl ON c.code = cl.countrycode     WHERE cl.language = 'Spanish' AND cl.percentage = (         SELECT MAX(percentage) FROM countrylanguage WHERE language = 'Spanish'     ) )"
276,514,What is the zip code for Port Chelsea?,student_transcripts_tracking,easy,SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea',7,"SELECT zip_postcode FROM addresses WHERE city = 'Port Chelsea'
SELECT zip_postcode FROM addresses WHERE city = 'Port Chelsea'
SELECT zip_postcode FROM addresses WHERE city = 'Port Chelsea'
SELECT zip_postcode FROM addresses WHERE city = 'Port Chelsea'
SELECT zip_postcode FROM addresses WHERE city = 'Port Chelsea'
SELECT zip_postcode FROM addresses WHERE city = 'Port Chelsea'
SELECT zip_postcode FROM addresses WHERE city = 'Port Chelsea'",SELECT zip_postcode FROM addresses WHERE city = 'Port Chelsea'
277,639,find the pixel aspect ratio and nation of the tv channels that do not use English.,tvshow,medium,"SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'",7,"SELECT tv_channel.pixel_aspect_ratio_par, tv_channel.country FROM tv_channel LEFT JOIN tv_series ON tv_channel.id = tv_series.channel LEFT JOIN cartoon ON tv_channel.id = cartoon.channel WHERE tv_channel.language != 'English'
SELECT tv_channel.pixel_aspect_ratio_par, tv_channel.country FROM tv_channel LEFT JOIN tv_series ON tv_channel.id = tv_series.channel LEFT JOIN cartoon ON tv_channel.id = cartoon.channel WHERE tv_channel.language != 'English'
SELECT tv_channel.pixel_aspect_ratio_par, tv_channel.country FROM tv_channel LEFT JOIN tv_series ON tv_channel.id = tv_series.channel LEFT JOIN cartoon ON tv_channel.id = cartoon.channel WHERE tv_channel.language != 'English'
SELECT tv_channel.pixel_aspect_ratio_par, tv_channel.country FROM tv_channel LEFT JOIN tv_series ON tv_channel.id = tv_series.channel LEFT JOIN cartoon ON tv_channel.id = cartoon.channel WHERE tv_channel.language != 'English'
SELECT tv_channel.pixel_aspect_ratio_par, tv_channel.country FROM tv_channel LEFT JOIN tv_series ON tv_channel.id = tv_series.channel LEFT JOIN cartoon ON tv_channel.id = cartoon.channel WHERE tv_channel.language != 'English'
SELECT tv_channel.pixel_aspect_ratio_par, tv_channel.country FROM tv_channel LEFT JOIN tv_series ON tv_channel.id = tv_series.channel LEFT JOIN cartoon ON tv_channel.id = cartoon.channel WHERE tv_channel.language != 'English'
SELECT tv_channel.pixel_aspect_ratio_par, tv_channel.country FROM tv_channel LEFT JOIN tv_series ON tv_channel.id = tv_series.channel LEFT JOIN cartoon ON tv_channel.id = cartoon.channel WHERE tv_channel.language != 'English'","SELECT tv_channel.pixel_aspect_ratio_par, tv_channel.country FROM tv_channel LEFT JOIN tv_series ON tv_channel.id = tv_series.channel LEFT JOIN cartoon ON tv_channel.id = cartoon.channel WHERE tv_channel.language != 'English'"
278,159,How many cars have a larger accelerate than the car with the largest horsepower?,car_1,hard,SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );,7,"SELECT COUNT(*) FROM cars_data WHERE accelerate > (SELECT MAX(horsepower) FROM cars_data)
SELECT COUNT(*) FROM cars_data WHERE accelerate > (SELECT MAX(horsepower) FROM cars_data)
SELECT COUNT(*) FROM cars_data WHERE accelerate > (SELECT MAX(horsepower) FROM cars_data)
SELECT COUNT(*) FROM cars_data WHERE accelerate > (SELECT MAX(horsepower) FROM cars_data)
SELECT COUNT(*) FROM cars_data WHERE accelerate > (SELECT MAX(horsepower) FROM cars_data)
SELECT COUNT(*) FROM cars_data WHERE accelerate > (SELECT MAX(horsepower) FROM cars_data)
SELECT COUNT(*) FROM cars_data WHERE accelerate > (SELECT MAX(horsepower) FROM cars_data)",SELECT COUNT(*) FROM cars_data WHERE accelerate > (SELECT MAX(horsepower) FROM cars_data)
279,616,What are 3 most highly rated episodes in the TV series table and what were those ratings?,tvshow,medium,"SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;",7,"SELECT ts.episode, ts.rating FROM tv_series ts ORDER BY ts.rating DESC LIMIT 3
SELECT ts.episode, ts.rating FROM tv_series ts ORDER BY ts.rating DESC LIMIT 3
SELECT tv_series.episode, tv_series.rating FROM tv_series ORDER BY tv_series.rating DESC LIMIT 3
SELECT ts.episode, ts.rating FROM tv_series ts ORDER BY ts.rating DESC LIMIT 3
SELECT ts.episode, ts.rating FROM tv_series AS ts ORDER BY ts.rating DESC LIMIT 3
SELECT ts.episode, ts.rating FROM tv_series AS ts ORDER BY ts.rating DESC LIMIT 3
SELECT ts.episode, ts.rating FROM tv_series AS ts ORDER BY ts.rating DESC LIMIT 3","SELECT ts.episode, ts.rating FROM tv_series ts ORDER BY ts.rating DESC LIMIT 3"
280,562,"What is the id, line 1, and line 2 of the address with the most students?",student_transcripts_tracking,extra,"SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT a.address_id, a.line_1, a.line_2 FROM addresses a 
SELECT a.address_id, a.line_1, a.line_2 FROM addresses a 
SELECT a.address_id, a.line_1, a.line_2 FROM addresses a 
SELECT a.address_id, a.line_1, a.line_2 FROM addresses a 
SELECT a.address_id, a.line_1, a.line_2 FROM addresses a 
SELECT addresses.address_id, addresses.line_1, addresses.line_2 FROM addresses JO
SELECT a.address_id, a.line_1, a.line_2 FROM addresses a ","SELECT a.address_id, a.line_1, a.line_2 FROM addresses a "
281,468,What are the names of the winner and loser who played in the longest match?,wta_1,medium,"SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1",7,"SELECT p1.first_name || ' ' || p1.last_name AS winner_name,         p2.first_name || ' ' || p2.last_name AS loser_name  FROM matches AS m  JOIN players AS p1 ON m.winner_id = p1.player_id  JOIN players AS p2 ON m.loser_id = p2.player_id  WHERE m.minutes = (SELECT MAX(minutes) FROM matches)
SELECT p1.first_name || ' ' || p1.last_name AS winner_name, p2.first_name || ' ' || p2.last_name AS loser_name FROM players AS p1 JOIN players AS p2 ON p1.player_id = matches.winner_id AND p2.player_id = matches.loser_id WHERE matches.minutes = (SELECT MAX(minutes) FROM matches)
SELECT p1.first_name || ' ' || p1.last_name AS winner_name, p2.first_name || ' ' || p2.last_name AS loser_name FROM players AS p1 JOIN players AS p2 ON p1.player_id = matches.winner_id AND p2.player_id = matches.loser_id WHERE matches.minutes = (SELECT MAX(minutes) FROM matches)
SELECT p1.first_name || ' ' || p1.last_name AS winner_name, p2.first_name || ' ' || p2.last_name AS loser_name FROM matches AS m JOIN players AS p1 ON m.winner_id = p1.player_id JOIN players AS p2 ON m.loser_id = p2.player_id WHERE m.minutes = (SELECT MAX(minutes) FROM matches)
SELECT p1.first_name || ' ' || p1.last_name AS winner_name,        p2.first_name || ' ' || p2.last_name AS loser_name FROM (SELECT winner_id,              MAX(minutes) AS max_minutes       FROM matches       GROUP BY winner_id, loser_id) AS m JOIN players AS p1 ON m.winner_id = p1.player_id JOIN players AS p2 ON m.loser_id = p2.player_id ORDER BY m.max_minutes DESC LIMIT 1
SELECT p1.first_name || ' ' || p1.last_name AS winner_name, p2.first_name || ' ' || p2.last_name AS loser_name FROM matches AS m JOIN players AS p1 ON m.winner_id = p1.player_id JOIN players AS p2 ON m.loser_id = p2.player_id WHERE m.minutes = (SELECT MAX(minutes) FROM matches)
SELECT p1.first_name || ' ' || p1.last_name AS winner_name, p2.first_name || ' ' || p2.last_name AS loser_name FROM players AS p1 JOIN players AS p2 ON p1.player_id = matches.winner_id AND p2.player_id = matches.loser_id WHERE matches.minutes = (SELECT MAX(minutes) FROM matches)","SELECT p1.first_name || ' ' || p1.last_name AS winner_name, p2.first_name || ' ' || p2.last_name AS loser_name FROM players AS p1 JOIN players AS p2 ON p1.player_id = matches.winner_id AND p2.player_id = matches.loser_id WHERE matches.minutes = (SELECT MAX(minutes) FROM matches)"
282,691,What is last date created of votes from the state 'CA'?,voter_1,easy,SELECT max(created) FROM votes WHERE state  =  'CA',7,"SELECT MAX(created) FROM votes WHERE state = 'CA'
SELECT MAX(created) FROM votes WHERE state = 'CA'
SELECT MAX(created) FROM votes WHERE state = 'CA'
SELECT MAX(created) FROM votes WHERE state = 'CA'
SELECT MAX(created) FROM votes WHERE state = 'CA'
SELECT MAX(created) FROM votes WHERE state = 'CA'
SELECT MAX(created) FROM votes WHERE state = 'CA'",SELECT MAX(created) FROM votes WHERE state = 'CA'
283,975,Count the number of dogs of an age below the average.,dog_kennels,hard,SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs ),7,"SELECT COUNT(*) FROM dogs WHERE age < (SELECT AVG(age) FROM dogs)
SELECT COUNT(*) FROM dogs WHERE age < (SELECT AVG(age) FROM dogs)
SELECT COUNT(*) FROM dogs WHERE age < (SELECT AVG(age) FROM dogs)
SELECT COUNT(*) FROM dogs WHERE age < (SELECT AVG(age) FROM dogs)
SELECT COUNT(*) FROM dogs WHERE age < (SELECT AVG(age) FROM dogs)
SELECT COUNT(*) FROM dogs WHERE age < (SELECT AVG(age) FROM dogs)
SELECT COUNT(*) FROM dogs WHERE age < (SELECT AVG(age) FROM dogs)",SELECT COUNT(*) FROM dogs WHERE age < (SELECT AVG(age) FROM dogs)
284,736,What is the total number of languages used in Aruba?,world_1,medium,"SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Aruba""",7,"SELECT COUNT(DISTINCT language) FROM countrylanguage WHERE countrycode = (SELECT code FROM country WHERE name = 'Aruba')
SELECT COUNT(DISTINCT language) FROM countrylanguage WHERE countrycode = (SELECT code FROM country WHERE name = 'Aruba')
SELECT COUNT(DISTINCT language) FROM countrylanguage WHERE countrycode = (SELECT code FROM country WHERE name = 'Aruba')
SELECT COUNT(DISTINCT language) FROM countrylanguage WHERE countrycode = (SELECT code FROM country WHERE name = 'Aruba')
SELECT COUNT(DISTINCT language) FROM countrylanguage WHERE countrycode = (SELECT code FROM country WHERE name = 'Aruba')
SELECT COUNT(DISTINCT language) FROM countrylanguage WHERE countrycode = (SELECT code FROM country WHERE name = 'Aruba')
SELECT COUNT(DISTINCT language) FROM countrylanguage WHERE countrycode = (SELECT code FROM country WHERE name = 'Aruba')",SELECT COUNT(DISTINCT language) FROM countrylanguage WHERE countrycode = (SELECT code FROM country WHERE name = 'Aruba')
285,1000,How many singers are there?,singer,easy,SELECT count(*) FROM singer,7,"SELECT COUNT(*) FROM singer
SELECT COUNT(*) FROM singer
SELECT COUNT(*) FROM singer
SELECT COUNT(*) FROM singer
SELECT COUNT(*) FROM singer
SELECT COUNT(*) FROM singer
SELECT COUNT(*) FROM singer",SELECT COUNT(*) FROM singer
286,475,find the code of the country where has the greatest number of players.,wta_1,hard,SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1,7,"SELECT country_code, COUNT(*) as num_players FROM players GROUP BY country_code ORDER BY num_players DESC LIMIT 1
SELECT country_code, COUNT(*) as num_players FROM players GROUP BY country_code ORDER BY num_players DESC LIMIT 1
SELECT country_code, COUNT(*) as num_players FROM players GROUP BY country_code ORDER BY num_players DESC LIMIT 1
SELECT p.country_code FROM players p JOIN (     SELECT country_code, COUNT(*) as player_count     FROM players     GROUP BY country_code ) pc ON p.country_code = pc.country_code ORDER BY pc.player_count DESC LIMIT 1
SELECT country_code, COUNT(*) as num_players FROM players GROUP BY country_code ORDER BY num_players DESC LIMIT 1
SELECT country_code, COUNT(*) as num_players FROM players GROUP BY country_code ORDER BY num_players DESC LIMIT 1
SELECT country_code, COUNT(*) as num_players FROM players GROUP BY country_code ORDER BY num_players DESC LIMIT 1","SELECT country_code, COUNT(*) as num_players FROM players GROUP BY country_code ORDER BY num_players DESC LIMIT 1"
287,900,Show name of all students who have some friends and also are liked by someone else.,network_1,hard,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id,7,"SELECT h.name  FROM highschooler h  JOIN friend f ON h.id = f.student_id  JOIN likes l ON h.id = l.student_id  GROUP BY h.id, h.name  HAVING COUNT(f.friend_id) > 0 AND COUNT(l.liked_id) > 0
SELECT h.name  FROM highschooler h  JOIN friend f ON h.id = f.student_id  JOIN likes l ON h.id = l.student_id  GROUP BY h.id, h.name  HAVING COUNT(f.friend_id) > 0 AND COUNT(l.liked_id) > 0
SELECT h.name  FROM highschooler h  JOIN friend f ON h.id = f.student_id  JOIN likes l ON h.id = l.student_id  GROUP BY h.id, h.name  HAVING COUNT(f.friend_id) > 0 AND COUNT(l.liked_id) > 0
SELECT h.name FROM highschooler h JOIN friend f ON h.id = f.student_id JOIN likes l ON h.id = l.student_id GROUP BY h.id, h.name HAVING COUNT(f.friend_id) > 0 AND COUNT(l.liked_id) > 0
SELECT h.name  FROM highschooler h  JOIN friend f ON h.id = f.student_id  JOIN likes l ON h.id = l.student_id  GROUP BY h.id, h.name  HAVING COUNT(f.friend_id) > 0 AND COUNT(l.liked_id) > 0
SELECT h.name  FROM highschooler h  JOIN friend f ON h.id = f.student_id  JOIN likes l ON h.id = l.student_id  GROUP BY h.name
SELECT h.name  FROM highschooler h  JOIN friend f ON h.id = f.student_id  JOIN likes l ON h.id = l.student_id  GROUP BY h.id, h.name  HAVING COUNT(f.friend_id) > 0 AND COUNT(l.liked_id) > 0","SELECT h.name  FROM highschooler h  JOIN friend f ON h.id = f.student_id  JOIN likes l ON h.id = l.student_id  GROUP BY h.id, h.name  HAVING COUNT(f.friend_id) > 0 AND COUNT(l.liked_id) > 0"
288,76,What are the different first names and ages of the students who do have pets?,pets_1,medium,"SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid",7,"SELECT DISTINCT s.fname, s.age  FROM student s  JOIN has_pet hp ON s.stuid = hp.stuid  JOIN pets p ON hp.petid = p.petid
SELECT DISTINCT s.fname, s.age  FROM student s  JOIN has_pet hp ON s.stuid = hp.stuid  WHERE hp.petid IN (SELECT petid FROM pets) 
SELECT DISTINCT s.fname, s.age  FROM student AS s  JOIN has_pet AS hp ON s.stuid = hp.stuid  JOIN pets AS p ON hp.petid = p.petid
SELECT DISTINCT s.fname, s.age  FROM student AS s  JOIN has_pet AS hp ON s.stuid = hp.stuid  JOIN pets AS p ON hp.petid = p.petid
SELECT DISTINCT s.fname, s.age FROM student AS s JOIN has_pet AS hp ON s.stuid = hp.stuid JOIN pets AS p ON hp.petid = p.petid
SELECT DISTINCT s.fname, s.age  FROM student AS s  JOIN has_pet AS hp ON s.stuid = hp.stuid  JOIN pets AS p ON hp.petid = p.petid
SELECT DISTINCT s.fname, s.age  FROM student AS s  JOIN has_pet AS hp ON s.stuid = hp.stuid  JOIN pets AS p ON hp.petid = p.petid","SELECT DISTINCT s.fname, s.age  FROM student AS s  JOIN has_pet AS hp ON s.stuid = hp.stuid  JOIN pets AS p ON hp.petid = p.petid"
289,393,Show different hometown of teachers and the number of teachers from each hometown.,course_teach,medium,"SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown",7,"SELECT t.hometown, COUNT(t.teacher_id)  FROM teacher t  JOIN course_arrange ca ON t.teacher_id = ca.teacher_id  GROUP BY t.hometown
SELECT t.hometown, COUNT(t.teacher_id) FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id GROUP BY t.hometown
SELECT teacher.hometown, COUNT(teacher.teacher_id) FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id GROUP BY teacher.hometown
SELECT t.hometown, COUNT(t.teacher_id) as teacher_count FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id GROUP BY t.hometown
SELECT t.hometown, COUNT(t.teacher_id)  FROM teacher t  JOIN course_arrange ca ON t.teacher_id = ca.teacher_id  GROUP BY t.hometown
SELECT t.hometown, COUNT(t.teacher_id) FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id GROUP BY t.hometown
SELECT t.hometown, COUNT(t.teacher_id)  FROM teacher t  JOIN course_arrange ca ON t.teacher_id = ca.teacher_id  GROUP BY t.hometown","SELECT t.hometown, COUNT(t.teacher_id)  FROM teacher t  JOIN course_arrange ca ON t.teacher_id = ca.teacher_id  GROUP BY t.hometown"
290,39,what is the name and nation of the singer who have a song having 'Hey' in its name?,concert_singer,medium,"SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'",7,"SELECT singer.name, singer.country  FROM singer  JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id  JOIN concert ON singer_in_concert.concert_id = concert.concert_id  WHERE singer.song_name LIKE '%Hey%'
SELECT singer.name, singer.country FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE singer.song_name LIKE '%Hey%'
SELECT singer.name, singer.country  FROM singer  JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id  JOIN concert ON singer_in_concert.concert_id = concert.concert_id  WHERE singer.song_name LIKE '%Hey%'
SELECT singer.name, singer.country  FROM singer  JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id  JOIN concert ON singer_in_concert.concert_id = concert.concert_id  WHERE singer.song_name LIKE '%Hey%'
SELECT singer.name, singer.country  FROM singer  JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id  JOIN concert ON singer_in_concert.concert_id = concert.concert_id  WHERE singer.song_name LIKE '%Hey%'
SELECT singer.name, singer.country  FROM singer  JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id  JOIN concert ON singer_in_concert.concert_id = concert.concert_id  WHERE singer.song_name LIKE '%Hey%'
SELECT singer.name, singer.country  FROM singer  JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id  JOIN concert ON singer_in_concert.concert_id = concert.concert_id  WHERE singer.song_name LIKE '%Hey%'","SELECT singer.name, singer.country  FROM singer  JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id  JOIN concert ON singer_in_concert.concert_id = concert.concert_id  WHERE singer.song_name LIKE '%Hey%'"
291,25,What is the name and capacity of the stadium with the most concerts after 2013 ?,concert_singer,extra,"select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1",7,"SELECT stadium.name, stadium.capacity FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year > 2013 GROUP BY stadium.stadium_id ORDER BY COUNT(concert.concert_id) DESC LIMIT 1
SELECT stadium.name, stadium.capacity  FROM stadium  JOIN concert ON stadium.stadium_id = concert.stadium_id  WHERE concert.year > 2013  GROUP BY stadium.stadium_id  ORDER BY COUNT(concert.concert_id) DESC  LIMIT 1
SELECT stadium.name, stadium.capacity FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year > 2013 GROUP BY stadium.stadium_id ORDER BY COUNT(concert.concert_id) DESC LIMIT 1
SELECT stadium.name, stadium.capacity FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year > 2013 GROUP BY stadium.stadium_id ORDER BY COUNT(concert.concert_id) DESC LIMIT 1
SELECT stadium.name, stadium.capacity FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year > 2013 GROUP BY stadium.stadium_id ORDER BY COUNT(concert.concert_id) DESC LIMIT 1
SELECT stadium.name, stadium.capacity FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year > 2013 GROUP BY stadium.stadium_id ORDER BY COUNT(concert.concert_id) DESC LIMIT 1
SELECT stadium.name, stadium.capacity FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year > 2013 GROUP BY stadium.stadium_id ORDER BY COUNT(concert.concert_id) DESC LIMIT 1","SELECT stadium.name, stadium.capacity FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year > 2013 GROUP BY stadium.stadium_id ORDER BY COUNT(concert.concert_id) DESC LIMIT 1"
292,667,What is the money rank of the tallest poker player?,poker_player,hard,SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1,7,"SELECT poker_player.money_rank FROM poker_player INNER JOIN people ON poker_player.people_id = people.people_id WHERE people.height = (SELECT MAX(people.height) FROM people)
SELECT poker_player.money_rank FROM poker_player INNER JOIN people ON poker_player.people_id = people.people_id WHERE people.height = (SELECT MAX(people.height) FROM people)
SELECT poker_player.money_rank  FROM poker_player  JOIN people ON poker_player.people_id = people.people_id  WHERE people.height = (SELECT MAX(people.height) FROM people)
SELECT poker_player.money_rank FROM poker_player INNER JOIN people ON poker_player.people_id = people.people_id WHERE people.height = (SELECT MAX(people.height) FROM people)
SELECT poker_player.money_rank FROM poker_player INNER JOIN people ON poker_player.people_id = people.people_id WHERE people.height = (SELECT MAX(people.height) FROM people)
SELECT poker_player.money_rank FROM poker_player INNER JOIN people ON poker_player.people_id = people.people_id WHERE people.height = (SELECT MAX(people.height) FROM people)
SELECT poker_player.money_rank FROM poker_player JOIN people ON poker_player.people_id = people.people_id WHERE people.height = (SELECT MAX(people.height) FROM people)",SELECT poker_player.money_rank FROM poker_player INNER JOIN people ON poker_player.people_id = people.people_id WHERE people.height = (SELECT MAX(people.height) FROM people)
293,910,Show the names of students who have a grade higher than 5 and have at least 2 friends.,network_1,hard,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2,7,"SELECT highschooler.name  FROM highschooler  INNER JOIN (SELECT student_id FROM friend GROUP BY student_id HAVING COUNT(friend_id) >= 2) AS friends  ON highschooler.id = friends.student_id  WHERE highschooler.grade > 5
SELECT highschooler.name  FROM highschooler  INNER JOIN (SELECT student_id FROM friend GROUP BY student_id HAVING COUNT(friend_id) >= 2) AS friends  ON highschooler.id = friends.student_id  WHERE highschooler.grade > 5
SELECT highschooler.name  FROM highschooler  JOIN friend ON highschooler.id = friend.student_id JOIN (SELECT student_id FROM friend GROUP BY student_id HAVING COUNT(*) >= 2) AS friends_count ON highschooler.id = friends_count.student_id WHERE highschooler.grade > 5
SELECT highschooler.name  FROM highschooler  JOIN (SELECT student_id        FROM friend        GROUP BY student_id        HAVING COUNT(friend_id) >= 2) AS friends  ON highschooler.id = friends.student_id  WHERE highschooler.grade > 5
SELECT highschooler.name  FROM highschooler  INNER JOIN likes ON highschooler.id = likes.student_id  INNER JOIN (SELECT friend.student_id, COUNT(friend.friend_id) as friend_count              FROM friend              GROUP BY friend.student_id) as friends_count ON highschooler.id = friends_count.student_id  WHERE highschooler.grade > 5 AND friends_count.friend_count >= 2
SELECT highschooler.name FROM highschooler  INNER JOIN (SELECT student_id FROM friend GROUP BY student_id HAVING COUNT(friend_id) >= 2) AS friends  ON highschooler.id = friends.student_id  INNER JOIN likes ON highschooler.id = likes.student_id  WHERE likes.liked_id > 5
SELECT highschooler.name  FROM highschooler  INNER JOIN (SELECT student_id FROM friend GROUP BY student_id HAVING COUNT(friend_id) >= 2) AS friends  ON highschooler.id = friends.student_id  WHERE highschooler.grade > 5",SELECT highschooler.name  FROM highschooler  INNER JOIN (SELECT student_id FROM friend GROUP BY student_id HAVING COUNT(friend_id) >= 2) AS friends  ON highschooler.id = friends.student_id  WHERE highschooler.grade > 5
294,251,"What are flight numbers of flights departing from City ""Aberdeen ""?",flight_2,medium,"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""",7,"SELECT flights.flightno FROM flights INNER JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = ""Aberdeen""
SELECT flights.flightno FROM flights INNER JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = ""Aberdeen""
SELECT flights.flightno FROM flights INNER JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = ""Aberdeen""
SELECT flights.flightno FROM flights INNER JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = ""Aberdeen""
SELECT flights.flightno FROM flights INNER JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = ""Aberdeen""
SELECT flightno FROM flights WHERE sourceairport IN (SELECT airportcode FROM airports WHERE city = ""Aberdeen"")
SELECT flights.flightno FROM flights INNER JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = ""Aberdeen""","SELECT flights.flightno FROM flights INNER JOIN airports ON flights.sourceairport = airports.airportcode WHERE airports.city = ""Aberdeen"""
295,530,"For each semester, what is the name and id of the one with the most students registered?",student_transcripts_tracking,extra,"SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT s.semester_name, c.course_name, c.course_id, COUNT(sec.
SELECT s.semester_name, c.course_name, c.course_id, COUNT(sec.
SELECT s.semester_name, c.course_name, c.course_id, COUNT(sec.
SELECT s.semester_name, c.course_name, c.course_id, COUNT(sec.
SELECT s.semester_name, c.course_name, c.course_id, COUNT(sec.
SELECT s.semester_name, c.course_name, c.course_id, COUNT(sec.
SELECT s.semester_name, c.course_name, c.course_id, COUNT(sec.","SELECT s.semester_name, c.course_name, c.course_id, COUNT(sec."
296,157,"For model volvo, how many cylinders does the car with the least accelerate have?",car_1,extra,SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;,7,"SELECT MIN(cylinders) FROM cars_data INNER JOIN car_names ON cars_data.id = car_names.makeid INNER JOIN model_list ON car_names.model = model_list.modelid WHERE model_list.model = 'volvo' ORDER BY accelerate ASC
SELECT MIN(cylinders) FROM cars_data INNER JOIN car_names ON cars_data.id = car_names.makeid INNER JOIN model_list ON car_names.model = model_list.modelid INNER JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.maker = 'volvo' ORDER BY accelerate ASC
SELECT MIN(cylinders) FROM cars_data INNER JOIN car_names ON cars_data.id = car_names.makeid INNER JOIN model_list ON car_names.model = model_list.modelid WHERE model_list.model = 'volvo' ORDER BY accelerate ASC
SELECT MIN(cylinders) FROM cars_data INNER JOIN car_names ON cars_data.id = car_names.makeid INNER JOIN model_list ON car_names.model = model_list.modelid WHERE model_list.model = 'volvo' ORDER BY accelerate ASC
SELECT MIN(cylinders) FROM cars_data INNER JOIN car_names ON cars_data.id = car_names.makeid INNER JOIN model_list ON car_names.model = model_list.modelid WHERE model_list.model = 'volvo' ORDER BY accelerate ASC
SELECT MIN(cylinders) FROM cars_data INNER JOIN car_names ON cars_data.id = car_names.makeid INNER JOIN model_list ON car_names.model = model_list.modelid WHERE model_list.model = 'volvo' ORDER BY accelerate ASC
SELECT MIN(cylinders) FROM cars_data INNER JOIN car_names ON cars_data.id = car_names.makeid INNER JOIN model_list ON car_names.model = model_list.modelid WHERE model_list.model = 'volvo' ORDER BY accelerate ASC",SELECT MIN(cylinders) FROM cars_data INNER JOIN car_names ON cars_data.id = car_names.makeid INNER JOIN model_list ON car_names.model = model_list.modelid WHERE model_list.model = 'volvo' ORDER BY accelerate ASC
297,1014,Please show the most common citizenship of singers.,singer,hard,SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1,7,"SELECT citizenship, COUNT(*) as count FROM singer GROUP BY citizenship ORDER BY count DESC LIMIT 1
SELECT citizenship, COUNT(*) as count FROM singer GROUP BY citizenship ORDER BY count DESC LIMIT 1
SELECT citizenship, COUNT(*) as count  FROM singer  GROUP BY citizenship  ORDER BY count DESC  LIMIT 1
SELECT citizenship, COUNT(*) as count FROM singer GROUP BY citizenship ORDER BY count DESC LIMIT 1
SELECT citizenship, COUNT(*) as count FROM singer GROUP BY citizenship ORDER BY count DESC LIMIT 1
SELECT citizenship, COUNT(*) as count FROM singer GROUP BY citizenship ORDER BY count DESC LIMIT 1
SELECT citizenship, COUNT(*) as count FROM singer GROUP BY citizenship ORDER BY count DESC LIMIT 1","SELECT citizenship, COUNT(*) as count FROM singer GROUP BY citizenship ORDER BY count DESC LIMIT 1"
298,826,"What are the names of conductors whose nationalities are not ""USA""?",orchestra,easy,SELECT Name FROM conductor WHERE Nationality != 'USA',7,"SELECT name  FROM conductor  WHERE nationality != 'USA'
SELECT name  FROM conductor  WHERE nationality != 'USA'
SELECT name  FROM conductor  WHERE nationality != 'USA'
SELECT name  FROM conductor  WHERE nationality != 'USA'
SELECT name  FROM conductor  WHERE nationality != 'USA'
SELECT name  FROM conductor  WHERE nationality != 'USA'
SELECT name  FROM conductor  WHERE nationality != 'USA'",SELECT name  FROM conductor  WHERE nationality != 'USA'
299,872,Show the ID of the high schooler named Kyle.,network_1,easy,"SELECT ID FROM Highschooler WHERE name  =  ""Kyle""",7,"SELECT id FROM highschooler WHERE name = 'Kyle'
SELECT id FROM highschooler WHERE name = 'Kyle'
SELECT id FROM highschooler WHERE name = 'Kyle'
SELECT id FROM highschooler WHERE name = 'Kyle'
SELECT id FROM highschooler WHERE name = 'Kyle'
SELECT id FROM highschooler WHERE name = 'Kyle'
SELECT id FROM highschooler WHERE name = 'Kyle'",SELECT id FROM highschooler WHERE name = 'Kyle'
300,210,Return the number of flights arriving in Aberdeen.,flight_2,medium,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""",7,"SELECT COUNT(*) FROM flights INNER JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'
SELECT COUNT(*) FROM flights INNER JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'
SELECT COUNT(*) FROM flights INNER JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'
SELECT COUNT(*) FROM flights INNER JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'
SELECT COUNT(*) FROM flights INNER JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'
SELECT COUNT(*) FROM flights INNER JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'
SELECT COUNT(*) FROM flights INNER JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'",SELECT COUNT(*) FROM flights INNER JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'
301,42,What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015?,concert_singer,extra,"SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015",7,"SELECT stadium.name, stadium.location FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year IN (2014, 2015) GROUP BY stadium.stadium_id HAVING COUNT(DISTINCT concert.year) = 2
SELECT stadium.name, stadium.location FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year IN (2014, 2015) GROUP BY stadium.stadium_id HAVING COUNT(DISTINCT concert.year) = 2
SELECT stadium.name, stadium.location FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year IN (2014, 2015) GROUP BY stadium.stadium_id HAVING COUNT(DISTINCT concert.year) = 2
SELECT stadium.name, stadium.location FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year IN (2014, 2015) GROUP BY stadium.stadium_id HAVING COUNT(DISTINCT concert.year) = 2
SELECT stadium.name, stadium.location FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year IN (2014, 2015) GROUP BY stadium.stadium_id HAVING COUNT(DISTINCT concert.year) = 2
SELECT stadium.name, stadium.location FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year IN (2014, 2015) GROUP BY stadium.stadium_id HAVING COUNT(DISTINCT concert.year) = 2
SELECT stadium.name, stadium.location FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year IN (2014, 2015) GROUP BY stadium.stadium_id HAVING COUNT(DISTINCT concert.year) = 2","SELECT stadium.name, stadium.location FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year IN (2014, 2015) GROUP BY stadium.stadium_id HAVING COUNT(DISTINCT concert.year) = 2"
302,82,What is the first name and gender of the all the students who have more than one pet?,pets_1,medium,"SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1",7,"SELECT student.fname, student.sex  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  GROUP BY has_pet.stuid  HAVING COUNT(has_pet.petid) > 1
SELECT student.fname, student.sex  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  GROUP BY has_pet.stuid  HAVING COUNT(has_pet.petid) > 1
SELECT student.fname, student.sex  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  GROUP BY has_pet.stuid  HAVING COUNT(has_pet.petid) > 1
SELECT student.fname, student.sex  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  GROUP BY has_pet.stuid  HAVING COUNT(has_pet.petid) > 1
SELECT student.fname, student.sex  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  GROUP BY has_pet.stuid  HAVING COUNT(has_pet.petid) > 1
SELECT student.fname, student.sex  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  GROUP BY has_pet.stuid  HAVING COUNT(has_pet.petid) > 1
SELECT student.fname, student.sex  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  GROUP BY has_pet.stuid  HAVING COUNT(has_pet.petid) > 1","SELECT student.fname, student.sex  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  GROUP BY has_pet.stuid  HAVING COUNT(has_pet.petid) > 1"
303,130,What are the names of all European countries with at least 3 manufacturers?,car_1,extra,SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;,7,"SELECT c.countryname  FROM countries AS c  JOIN car_makers AS cm ON c.countryid = cm.country  WHERE c.continent = 'Europe'  GROUP BY c.countryname  HAVING COUNT(cm.id) >= 3
SELECT c.countryname  FROM countries AS c  JOIN car_makers AS cm ON c.countryid = cm.country  WHERE c.continent = 'Europe'  GROUP BY c.countryname  HAVING COUNT(cm.id) >= 3
SELECT c.countryname  FROM countries AS c  JOIN car_makers AS cm ON c.countryid = cm.country  WHERE c.continent = 'Europe'  GROUP BY c.countryname  HAVING COUNT(cm.id) >= 3
SELECT c.countryname  FROM countries AS c  JOIN car_makers AS cm ON c.countryid = cm.country  WHERE c.continent = 'Europe'  GROUP BY c.countryname  HAVING COUNT(cm.id) >= 3
SELECT c.countryname FROM countries AS c JOIN car_makers AS cm ON c.countryid = cm.country WHERE c.continent = 'Europe' GROUP BY c.countryid HAVING COUNT(cm.id) >= 3
SELECT c.countryname  FROM countries AS c  JOIN car_makers AS cm ON c.countryid = cm.country  WHERE c.continent = 'Europe'  GROUP BY c.countryname  HAVING COUNT(cm.id) >= 3
SELECT c.countryname  FROM countries AS c  JOIN car_makers AS cm ON c.countryid = cm.country  WHERE c.continent = 'Europe'  GROUP BY c.countryid  HAVING COUNT(cm.id) >= 3",SELECT c.countryname  FROM countries AS c  JOIN car_makers AS cm ON c.countryid = cm.country  WHERE c.continent = 'Europe'  GROUP BY c.countryname  HAVING COUNT(cm.id) >= 3
304,935,Which breed do the most dogs have? Give me the breed name.,dog_kennels,extra,SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1,7,"SELECT breed_name, COUNT(*) as dog_count FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY breed_name ORDER BY dog_count DESC LIMIT 1
SELECT breed_name, COUNT(*) as dog_count FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY breed_name ORDER BY dog_count DESC LIMIT 1
SELECT breed_name, COUNT(*) as dog_count FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY breed_name ORDER BY dog_count DESC LIMIT 1
SELECT breed_name, COUNT(*) as dog_count FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY breed_name ORDER BY dog_count DESC LIMIT 1
SELECT breed_name, COUNT(*) as dog_count FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY breed_name ORDER BY dog_count DESC LIMIT 1
SELECT breed_name, COUNT(*) as dog_count FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY breed_name ORDER BY dog_count DESC LIMIT 1
SELECT breed_name, COUNT(*) as dog_count FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY breed_name ORDER BY dog_count DESC LIMIT 1","SELECT breed_name, COUNT(*) as dog_count FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY breed_name ORDER BY dog_count DESC LIMIT 1"
305,590,What is the number of cartoones written by Joseph Kuhr?,tvshow,easy,"SELECT count(*) FROM Cartoon WHERE Written_by = ""Joseph Kuhr"";",7,"SELECT COUNT(*) FROM cartoon WHERE written_by = ""Joseph Kuhr""
SELECT COUNT(*) FROM cartoon WHERE written_by = ""Joseph Kuhr""
SELECT COUNT(*) FROM cartoon WHERE written_by = ""Joseph Kuhr""
SELECT COUNT(*) FROM cartoon WHERE written_by = 'Joseph Kuhr'
SELECT COUNT(*) FROM cartoon WHERE written_by = ""Joseph Kuhr""
SELECT COUNT(*) FROM cartoon WHERE written_by = ""Joseph Kuhr""
SELECT COUNT(*) FROM cartoon WHERE written_by = ""Joseph Kuhr""","SELECT COUNT(*) FROM cartoon WHERE written_by = ""Joseph Kuhr"""
306,874,How many high schoolers are there in grade 9 or 10?,network_1,medium,SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10,7,"SELECT COUNT(*) FROM highschooler WHERE grade IN (9, 10)
SELECT COUNT(*) FROM highschooler WHERE grade IN (9, 10)
SELECT COUNT(*) FROM highschooler WHERE grade IN (9, 10)
SELECT COUNT(*) FROM highschooler WHERE grade IN (9, 10)
SELECT COUNT(*) FROM highschooler WHERE grade IN (9, 10)
SELECT COUNT(*) FROM highschooler WHERE grade IN (9, 10)
SELECT COUNT(*) FROM highschooler WHERE grade IN (9, 10)","SELECT COUNT(*) FROM highschooler WHERE grade IN (9, 10)"
307,163,How many cars has over 6 cylinders?,car_1,easy,SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;,7,"SELECT COUNT(*) FROM cars_data WHERE cylinders > 6
SELECT COUNT(*) FROM cars_data WHERE cylinders > 6
SELECT COUNT(*) FROM cars_data WHERE cylinders > 6
SELECT COUNT(*) FROM cars_data WHERE cylinders > 6
SELECT COUNT(*) FROM cars_data WHERE cylinders > 6
SELECT COUNT(*) FROM cars_data WHERE cylinders > 6
SELECT COUNT(*) FROM cars_data WHERE cylinders > 6",SELECT COUNT(*) FROM cars_data WHERE cylinders > 6
308,721,Give the name of the country in Asia with the lowest life expectancy.,world_1,hard,"SELECT Name FROM country WHERE Continent  =  ""Asia"" ORDER BY LifeExpectancy LIMIT 1",7,"SELECT country.name FROM country WHERE country.continent = 'Asia' ORDER BY country.lifeexpectancy ASC LIMIT 1
SELECT country.name FROM country WHERE country.continent = 'Asia' ORDER BY country.lifeexpectancy ASC LIMIT 1
SELECT country.name FROM country WHERE country.continent = 'Asia' ORDER BY country.lifeexpectancy ASC LIMIT 1
SELECT country.name FROM country WHERE country.continent = 'Asia' ORDER BY country.lifeexpectancy ASC LIMIT 1
SELECT country.name FROM country WHERE country.continent = 'Asia' ORDER BY country.lifeexpectancy ASC LIMIT 1
SELECT country.name FROM country WHERE country.continent = 'Asia' ORDER BY country.lifeexpectancy ASC LIMIT 1
SELECT country.name FROM country WHERE country.continent = 'Asia' ORDER BY country.lifeexpectancy ASC LIMIT 1",SELECT country.name FROM country WHERE country.continent = 'Asia' ORDER BY country.lifeexpectancy ASC LIMIT 1
309,992,How much does the most expensive charge type costs?,dog_kennels,easy,SELECT max(charge_amount) FROM Charges,7,"SELECT MAX(charge_amount) as MostExpensiveCharge FROM charges
SELECT MAX(charge_amount) as MostExpensiveCharge FROM charges
SELECT MAX(charge_amount) as MostExpensiveCharge FROM charges
SELECT MAX(charge_amount) as MostExpensiveCharge FROM charges
SELECT MAX(charge_amount) as MostExpensiveCharge FROM charges
SELECT MAX(charge_amount) as MostExpensiveCharge FROM charges
SELECT MAX(charge_amount) as MostExpensiveCharge FROM charges",SELECT MAX(charge_amount) as MostExpensiveCharge FROM charges
310,170,What is the maximum mpg of the cars that had 8 cylinders or that were produced before 1980 ?,car_1,medium,select max(mpg) from cars_data where cylinders  =  8 or year  <  1980,7,"SELECT MAX(mpg) FROM cars_data WHERE cylinders = 8 OR year < 1980
SELECT MAX(mpg) FROM cars_data WHERE cylinders = 8 OR year < 1980
SELECT MAX(mpg) FROM cars_data WHERE cylinders = 8 OR year < 1980
SELECT MAX(mpg) FROM cars_data WHERE cylinders = 8 OR year < 1980
SELECT MAX(mpg) FROM cars_data WHERE cylinders = 8 OR year < 1980
SELECT MAX(mpg) FROM cars_data WHERE cylinders = 8 OR year < 1980
SELECT MAX(mpg) FROM cars_data WHERE cylinders = 8 OR year < 1980",SELECT MAX(mpg) FROM cars_data WHERE cylinders = 8 OR year < 1980
311,395,List the most common hometown of teachers.,course_teach,hard,SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1,7,"SELECT t.hometown, COUNT(*) as count FROM teacher as t JOIN course_arrange as ca ON t.teacher_id = ca.teacher_id GROUP BY t.hometown ORDER BY count DESC LIMIT 1
SELECT t.hometown, COUNT(*) as count FROM teacher as t JOIN course_arrange as ca ON t.teacher_id = ca.teacher_id GROUP BY t.hometown ORDER BY count DESC LIMIT 1
SELECT t.hometown, COUNT(*) as count FROM teacher as t JOIN course_arrange as ca ON t.teacher_id = ca.teacher_id GROUP BY t.hometown ORDER BY count DESC LIMIT 1
SELECT t.hometown, COUNT(*) as count FROM teacher as t JOIN course_arrange as ca ON t.teacher_id = ca.teacher_id GROUP BY t.hometown ORDER BY count DESC LIMIT 1
SELECT t.hometown, COUNT(*) as count FROM teacher as t JOIN course_arrange as ca ON t.teacher_id = ca.teacher_id GROUP BY t.hometown ORDER BY count DESC LIMIT 1
SELECT teacher.hometown, COUNT(*) as count FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id GROUP BY teacher.hometown ORDER BY count DESC LIMIT 1
SELECT t.hometown, COUNT(*) as count FROM teacher as t JOIN course_arrange as ca ON t.teacher_id = ca.teacher_id GROUP BY t.hometown ORDER BY count DESC LIMIT 1","SELECT t.hometown, COUNT(*) as count FROM teacher as t JOIN course_arrange as ca ON t.teacher_id = ca.teacher_id GROUP BY t.hometown ORDER BY count DESC LIMIT 1"
312,965,List the arrival date and the departure date for all the dogs.,dog_kennels,medium,"SELECT date_arrived ,  date_departed FROM Dogs",7,"SELECT date_arrived, date_departed FROM dogs
SELECT date_arrived, date_departed FROM dogs
SELECT date_arrived, date_departed FROM dogs
SELECT date_arrived, date_departed FROM dogs
SELECT date_arrived, date_departed FROM dogs
SELECT date_arrived, date_departed FROM dogs
SELECT date_arrived, date_departed FROM dogs","SELECT date_arrived, date_departed FROM dogs"
313,980,How many owners temporarily do not have any dogs?,dog_kennels,extra,SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs ),7,"SELECT COUNT(DISTINCT owner_id)  FROM owners  LEFT JOIN dogs ON owners.owner_id = dogs.owner_id  WHERE dogs.owner_id IS NULL AND owners.date_departed IS NOT NULL
SELECT COUNT(*) FROM owners  LEFT JOIN dogs ON owners.owner_id = dogs.owner_id  WHERE dogs.owner_id IS NULL AND owners.date_departed IS NOT NULL
SELECT COUNT(DISTINCT owners.owner_id)  FROM owners  LEFT JOIN dogs ON owners.owner_id = dogs.owner_id  WHERE dogs.dog_id IS NULL AND owners.owner_id NOT IN (SELECT owner_id FROM dogs WHERE date_departed IS NOT NULL)
SELECT COUNT(*) FROM owners LEFT JOIN dogs ON owners.owner_id = dogs.owner_id WHERE dogs.owner_id IS NULL AND owners.owner_id NOT IN (SELECT owner_id FROM dogs WHERE date_departed IS NOT NULL)
SELECT COUNT(DISTINCT owner_id)  FROM owners  LEFT JOIN dogs ON owners.owner_id = dogs.owner_id  WHERE dogs.owner_id IS NULL AND owners.date_departed IS NOT NULL
SELECT COUNT(DISTINCT owner_id)  FROM owners  LEFT JOIN dogs ON owners.owner_id = dogs.owner_id  WHERE dogs.owner_id IS NULL AND owners.date_departed IS NOT NULL
SELECT COUNT(DISTINCT owner_id)  FROM owners  LEFT JOIN dogs ON owners.owner_id = dogs.owner_id  WHERE dogs.owner_id IS NULL AND owners.date_departed IS NOT NULL",SELECT COUNT(DISTINCT owner_id)  FROM owners  LEFT JOIN dogs ON owners.owner_id = dogs.owner_id  WHERE dogs.owner_id IS NULL AND owners.date_departed IS NOT NULL
314,451,What are the country code and first name of the players who won in both tourney WTA Championships and Australian Open?,wta_1,extra,"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'",7,"SELECT DISTINCT players.country_code, players.first_name FROM players JOIN matches AS WTA_matches ON players.player_id = WTA_matches.winner_id JOIN matches AS AO_matches ON players.player_id = AO_matches.winner_id WHERE WTA_matches.tourney_name = 'WTA Championships' AND AO_matches.tourney_name = 'Australian Open' AND WTA_matches.year = AO_matches.year
SELECT DISTINCT players.country_code, players.first_name FROM players JOIN matches AS WTA_matches ON players.player_id = WTA_matches.winner_id JOIN matches AS AO_matches ON players.player_id = AO_matches.winner_id WHERE WTA_matches.tourney_name = 'WTA Championships' AND AO_matches.tourney_name = 'Australian Open' AND WTA_matches.year = AO_matches.year
SELECT DISTINCT players.country_code, players.first_name FROM players JOIN matches AS WTA_matches ON players.player_id = WTA_matches.winner_id JOIN matches AS AO_matches ON players.player_id = AO_matches.winner_id WHERE WTA_matches.tourney_name = 'WTA Championships' AND AO_matches.tourney_name = 'Australian Open' AND WTA_matches.year = AO_matches.year
SELECT DISTINCT players.country_code, players.first_name  FROM players  JOIN matches  ON players.player_id = matches.winner_id  WHERE matches.tourney_name IN ('WTA Championships', 'Australian Open')  AND players.player_id IN  (SELECT winner_id  FROM matches  WHERE tourney_name = 'WTA Championships'  INTERSECT  SELECT winner_id  FROM matches  WHERE tourney_name = 'Australian Open') 
SELECT DISTINCT players.country_code, players.first_name FROM players JOIN matches AS WTA_matches ON players.player_id = WTA_matches.winner_id JOIN matches AS AUS_matches ON players.player_id = AUS_matches.winner_id WHERE WTA_matches.tourney_name = 'WTA Championships' AND AUS_matches.tourney_name = 'Australian Open' AND WTA_matches.year = AUS_matches.year
SELECT DISTINCT players.country_code, players.first_name FROM players JOIN matches AS WTA_matches ON players.player_id = WTA_matches.winner_id JOIN matches AS AUS_matches ON players.player_id = AUS_matches.winner_id WHERE WTA_matches.tourney_name = 'WTA Championships' AND AUS_matches.tourney_name = 'Australian Open' AND WTA_matches.year = AUS_matches.year
SELECT DISTINCT players.country_code, players.first_name FROM players JOIN matches AS WTA_matches ON players.player_id = WTA_matches.winner_id JOIN matches AS AO_matches ON players.player_id = AO_matches.winner_id WHERE WTA_matches.tourney_name = 'WTA Championships' AND AO_matches.tourney_name = 'Australian Open' AND WTA_matches.year = AO_matches.year","SELECT DISTINCT players.country_code, players.first_name FROM players JOIN matches AS WTA_matches ON players.player_id = WTA_matches.winner_id JOIN matches AS AO_matches ON players.player_id = AO_matches.winner_id WHERE WTA_matches.tourney_name = 'WTA Championships' AND AO_matches.tourney_name = 'Australian Open' AND WTA_matches.year = AO_matches.year"
315,852,List the record company shared by the most number of orchestras.,orchestra,hard,SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1,7,"SELECT orchestra.record_company FROM orchestra GROUP BY orchestra.record_company ORDER BY COUNT(orchestra.orchestra_id) DESC LIMIT 1
SELECT orchestra.record_company  FROM orchestra  GROUP BY orchestra.record_company  ORDER BY COUNT(orchestra.orchestra_id) DESC  LIMIT 1
SELECT orchestra.record_company  FROM orchestra  GROUP BY orchestra.record_company  ORDER BY COUNT(orchestra.orchestra_id) DESC  LIMIT 1
SELECT orchestra.record_company  FROM orchestra  GROUP BY orchestra.record_company  ORDER BY COUNT(orchestra.orchestra_id) DESC  LIMIT 1
SELECT orchestra.record_company  FROM orchestra  GROUP BY orchestra.record_company  ORDER BY COUNT(orchestra.orchestra_id) DESC  LIMIT 1
SELECT orchestra.record_company FROM orchestra GROUP BY orchestra.record_company ORDER BY COUNT(orchestra.orchestra_id) DESC LIMIT 1
SELECT orchestra.record_company  FROM orchestra  GROUP BY orchestra.record_company  ORDER BY COUNT(orchestra.orchestra_id) DESC  LIMIT 1",SELECT orchestra.record_company  FROM orchestra  GROUP BY orchestra.record_company  ORDER BY COUNT(orchestra.orchestra_id) DESC  LIMIT 1
316,167,"Among the cars with more than lowest horsepower, which ones do not have more than 3 cylinders? List the car makeid and make name.",car_1,extra,"SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;",7,"SELECT car_makers.id, car_makers.maker FROM car_makers INNER JOIN (     SELECT model_list.maker, car_names.makeid     FROM model_list     INNER JOIN car_names ON model_list.modelid = car_names.model     INNER JOIN cars_data ON model_list.modelid = cars_data.id     WHERE cars_data.horsepower > (SELECT MIN(horsepower) FROM cars_data)     AND cars_data.cylinders <= 3 ) AS subquery ON car_makers.id = subquery.maker 
SELECT car_makers.id, car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.modelid = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.horsepower > (SELECT MIN(horsepower) FROM cars_data) AND cars_data.cylinders <= 3
SELECT car_makers.id, car_makers.maker  FROM car_makers  JOIN model_list ON car_makers.id = model_list.maker  JOIN car_names ON model_list.modelid = car_names.model  JOIN cars_data ON car_names.makeid = cars_data.id  WHERE cars_data.horsepower > (SELECT MIN(horsepower) FROM cars_data)  AND cars_data.cylinders <= 3
SELECT car_makers.id, car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.modelid = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.horsepower > (SELECT MIN(horsepower) FROM cars_data) AND cars_data.cylinders <= 3
SELECT car_makers.id, car_makers.maker FROM car_makers INNER JOIN (     SELECT model_list.maker, car_names.makeid     FROM model_list     INNER JOIN car_names ON model_list.modelid = car_names.model     INNER JOIN cars_data ON model_list.modelid = cars_data.id     WHERE cars_data.horsepower > (SELECT MIN(horsepower) FROM cars_data)     AND cars_data.cylinders <= 3 ) AS subquery ON car_makers.id = subquery.maker 
SELECT car_makers.id, car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.modelid = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.horsepower > (SELECT MIN(horsepower) FROM cars_data) AND cars_data.cylinders <= 3
SELECT car_makers.id, car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.modelid = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.horsepower > (SELECT MIN(horsepower) FROM cars_data) AND cars_data.cylinders <= 3","SELECT car_makers.id, car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.modelid = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.horsepower > (SELECT MIN(horsepower) FROM cars_data) AND cars_data.cylinders <= 3"
317,282,What are the names of the employees who never received any evaluation?,employee_hire_evaluation,hard,SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation),7,"SELECT employee.name  FROM employee  LEFT JOIN evaluation ON employee.employee_id = evaluation.employee_id  WHERE evaluation.employee_id IS NULL
SELECT employee.name  FROM employee  LEFT JOIN evaluation ON employee.employee_id = evaluation.employee_id  WHERE evaluation.employee_id IS NULL
SELECT employee.name  FROM employee  LEFT JOIN evaluation ON employee.employee_id = evaluation.employee_id  WHERE evaluation.employee_id IS NULL
SELECT employee.name  FROM employee  LEFT JOIN evaluation ON employee.employee_id = evaluation.employee_id  WHERE evaluation.employee_id IS NULL
SELECT employee.name  FROM employee  LEFT JOIN evaluation ON employee.employee_id = evaluation.employee_id  WHERE evaluation.employee_id IS NULL
SELECT employee.name  FROM employee  LEFT JOIN evaluation ON employee.employee_id = evaluation.employee_id  WHERE evaluation.employee_id IS NULL
SELECT employee.name  FROM employee  LEFT JOIN evaluation ON employee.employee_id = evaluation.employee_id  WHERE evaluation.employee_id IS NULL",SELECT employee.name  FROM employee  LEFT JOIN evaluation ON employee.employee_id = evaluation.employee_id  WHERE evaluation.employee_id IS NULL
318,815,Give the language that is spoken in the most countries.,world_1,hard,SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1,7,"SELECT language, COUNT(*) as num_countries FROM countrylanguage GROUP BY language ORDER BY num_countries DESC LIMIT 1
SELECT language, COUNT(*) as count FROM countrylanguage GROUP BY language ORDER BY count DESC LIMIT 1
SELECT language, COUNT(*) as count FROM countrylanguage GROUP BY language ORDER BY count DESC LIMIT 1
SELECT language, COUNT(*) as count FROM countrylanguage GROUP BY language ORDER BY count DESC LIMIT 1
SELECT language, COUNT(*) as count FROM countrylanguage GROUP BY language ORDER BY count DESC LIMIT 1
SELECT language, COUNT(*) as count FROM countrylanguage GROUP BY language ORDER BY count DESC LIMIT 1
SELECT language, COUNT(*) as count FROM countrylanguage GROUP BY language ORDER BY count DESC LIMIT 1","SELECT language, COUNT(*) as count FROM countrylanguage GROUP BY language ORDER BY count DESC LIMIT 1"
319,241,Find all airlines that have at least 10 flights.,flight_2,medium,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10,7,"SELECT airlines.airline FROM airlines JOIN flights ON airlines.airline = flights.airline GROUP BY airlines.airline HAVING COUNT(flights.flightno) >= 10
SELECT airlines.airline FROM airlines JOIN flights ON airlines.airline = flights.airline GROUP BY airlines.airline HAVING COUNT(flights.flightno) >= 10
SELECT airlines.airline FROM airlines JOIN flights ON airlines.airline = flights.airline GROUP BY airlines.airline HAVING COUNT(flights.flightno) >= 10
SELECT airlines.airline FROM airlines JOIN flights ON airlines.airline = flights.airline GROUP BY airlines.airline HAVING COUNT(flights.flightno) >= 10
SELECT airlines.airline FROM airlines JOIN flights ON airlines.airline = flights.airline GROUP BY airlines.airline HAVING COUNT(flights.flightno) >= 10
SELECT airlines.airline FROM airlines JOIN flights ON airlines.airline = flights.airline GROUP BY airlines.airline HAVING COUNT(flights.flightno) >= 10
SELECT airlines.airline FROM airlines JOIN flights ON airlines.airline = flights.airline GROUP BY airlines.airline HAVING COUNT(flights.flightno) >= 10",SELECT airlines.airline FROM airlines JOIN flights ON airlines.airline = flights.airline GROUP BY airlines.airline HAVING COUNT(flights.flightno) >= 10
320,959,Find the arriving date and the departing date of the dogs that received a treatment.,dog_kennels,medium,"SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id",7,"SELECT dogs.date_arrived, dogs.date_departed FROM dogs JOIN treatments ON dogs.dog_id = treatments.dog_id WHERE dogs.date_arrived IS NOT NULL AND dogs.date_departed IS NOT NULL
SELECT dogs.date_arrived, dogs.date_departed  FROM dogs  JOIN treatments ON dogs.dog_id = treatments.dog_id  WHERE dogs.date_departed IS NOT NULL
SELECT dogs.date_arrived, dogs.date_departed FROM dogs JOIN treatments ON dogs.dog_id = treatments.dog_id WHERE dogs.date_arrived IS NOT NULL AND dogs.date_departed IS NOT NULL
SELECT dogs.date_arrived, dogs.date_departed FROM dogs JOIN treatments ON dogs.dog_id = treatments.dog_id WHERE dogs.date_arrived IS NOT NULL AND dogs.date_departed IS NOT NULL
SELECT dogs.date_arrived, dogs.date_departed  FROM dogs  JOIN treatments ON dogs.dog_id = treatments.dog_id  WHERE dogs.date_departed IS NOT NULL
SELECT dogs.date_arrived, dogs.date_departed FROM dogs JOIN treatments ON dogs.dog_id = treatments.dog_id WHERE dogs.date_arrived IS NOT NULL AND dogs.date_departed IS NOT NULL
SELECT dogs.date_arrived, dogs.date_departed FROM dogs JOIN treatments ON dogs.dog_id = treatments.dog_id WHERE dogs.date_arrived IS NOT NULL AND dogs.date_departed IS NOT NULL","SELECT dogs.date_arrived, dogs.date_departed FROM dogs JOIN treatments ON dogs.dog_id = treatments.dog_id WHERE dogs.date_arrived IS NOT NULL AND dogs.date_departed IS NOT NULL"
321,1031,What is the feature type name of feature AirCon?,real_estate_properties,medium,"SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  ""AirCon""",7,"SELECT feature_type_name  FROM ref_feature_types  INNER JOIN other_available_features  ON ref_feature_types.feature_type_code = other_available_features.feature_type_code  WHERE feature_name = 'AirCon'
SELECT feature_type_name FROM ref_feature_types WHERE feature_type_code = (SELECT feature_type_code FROM other_available_features WHERE feature_name = 'AirCon')
SELECT feature_type_name  FROM ref_feature_types  INNER JOIN other_available_features  ON ref_feature_types.feature_type_code = other_available_features.feature_type_code  WHERE feature_name = 'AirCon'
SELECT feature_type_name  FROM ref_feature_types  INNER JOIN other_available_features  ON ref_feature_types.feature_type_code = other_available_features.feature_type_code  WHERE feature_name = 'AirCon'
SELECT feature_type_name  FROM ref_feature_types  INNER JOIN other_available_features  ON ref_feature_types.feature_type_code = other_available_features.feature_type_code  WHERE feature_name = 'AirCon'
SELECT feature_type_name FROM ref_feature_types INNER JOIN other_available_features ON ref_feature_types.feature_type_code = other_available_features.feature_type_code WHERE feature_name = 'AirCon'
SELECT feature_type_name  FROM ref_feature_types  INNER JOIN other_available_features  ON ref_feature_types.feature_type_code = other_available_features.feature_type_code  WHERE feature_name = 'AirCon'",SELECT feature_type_name  FROM ref_feature_types  INNER JOIN other_available_features  ON ref_feature_types.feature_type_code = other_available_features.feature_type_code  WHERE feature_name = 'AirCon'
322,486,Find the number of left handed winners who participated in the WTA Championships.,wta_1,medium,SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L',7,"SELECT COUNT(*)  FROM matches  JOIN players ON matches.winner_id = players.player_id  WHERE players.hand = 'L' AND matches.tourney_level = 'WTA'
SELECT COUNT(*)  FROM matches  JOIN players ON matches.winner_id = players.player_id  WHERE players.hand = 'L' AND matches.tourney_level = 'WTA'
SELECT COUNT(*)  FROM matches  JOIN players ON matches.winner_id = players.player_id  WHERE players.hand = 'L' AND matches.tourney_level = 'WTA'
SELECT COUNT(*)  FROM matches  JOIN players ON matches.winner_id = players.player_id  WHERE players.hand = 'L' AND matches.tourney_level = 'WTA'
SELECT COUNT(*)  FROM matches  JOIN players ON matches.winner_id = players.player_id  WHERE players.hand = 'L' AND matches.tourney_level = 'WTA'
SELECT COUNT(*)  FROM matches  JOIN players ON matches.winner_id = players.player_id  WHERE players.hand = 'L' AND matches.tourney_level = 'WTA'
SELECT COUNT(*)  FROM matches  JOIN players ON matches.winner_id = players.player_id  WHERE players.hand = 'L' AND matches.tourney_level = 'WTA'",SELECT COUNT(*)  FROM matches  JOIN players ON matches.winner_id = players.player_id  WHERE players.hand = 'L' AND matches.tourney_level = 'WTA'
323,351,"What is the template type code for template type description ""Book"".",cre_Doc_Template_Mgt,easy,"SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  ""Book""",7,"SELECT template_type_code FROM ref_template_types WHERE template_type_description = 'Book'
SELECT template_type_code FROM ref_template_types WHERE template_type_description = 'Book'
SELECT template_type_code FROM ref_template_types WHERE template_type_description = 'Book'
SELECT template_type_code FROM ref_template_types WHERE template_type_description = ""Book""
SELECT template_type_code FROM ref_template_types WHERE template_type_description = 'Book'
SELECT template_type_code FROM ref_template_types WHERE template_type_description = 'Book'
SELECT template_type_code FROM ref_template_types WHERE template_type_description = 'Book'",SELECT template_type_code FROM ref_template_types WHERE template_type_description = 'Book'
324,102,What is the maker of the carr produced in the earliest year and what year was it?,car_1,extra,"SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);",7,"SELECT c.maker, MIN(d.year) as Earliest_Year FROM car_makers as c JOIN model_list as m ON c.id = m.maker JOIN car_names as n ON m.modelid = n.model JOIN cars_data as d ON n.makeid = d.id GROUP BY c.maker ORDER BY Earliest_Year ASC LIMIT 1
SELECT car_makers.maker, MIN(cars_data.year) as Earliest_Year FROM car_makers JOIN cars_data ON car_makers.id = cars_data.id GROUP BY car_makers.maker ORDER BY Earliest_Year ASC LIMIT 1
SELECT c.maker, MIN(d.year) as Earliest_Year FROM car_makers as c JOIN model_list as m ON c.id = m.maker JOIN car_names as n ON m.modelid = n.model JOIN cars_data as d ON n.makeid = d.id GROUP BY c.maker ORDER BY Earliest_Year ASC LIMIT 1
SELECT c.maker, MIN(d.year) as Earliest_Year FROM car_makers as c JOIN model_list as m ON c.id = m.maker JOIN car_names as n ON m.modelid = n.model JOIN cars_data as d ON n.makeid = d.id GROUP BY c.maker ORDER BY Earliest_Year ASC LIMIT 1
SELECT car_makers.maker, MIN(cars_data.year) as Earliest_Year FROM car_makers JOIN cars_data ON car_makers.id = cars_data.id GROUP BY car_makers.maker ORDER BY Earliest_Year ASC LIMIT 1
SELECT c.maker, MIN(d.year) as Earliest_Year FROM car_makers as c JOIN model_list as m ON c.id = m.maker JOIN car_names as n ON m.modelid = n.model JOIN cars_data as d ON n.makeid = d.id GROUP BY c.maker ORDER BY Earliest_Year ASC LIMIT 1
SELECT car_makers.maker, MIN(cars_data.year) as Earliest_Year FROM car_makers JOIN cars_data ON car_makers.id = cars_data.id GROUP BY car_makers.maker ORDER BY Earliest_Year ASC LIMIT 1","SELECT c.maker, MIN(d.year) as Earliest_Year FROM car_makers as c JOIN model_list as m ON c.id = m.maker JOIN car_names as n ON m.modelid = n.model JOIN cars_data as d ON n.makeid = d.id GROUP BY c.maker ORDER BY Earliest_Year ASC LIMIT 1"
325,567,How many transcripts are released?,student_transcripts_tracking,easy,SELECT count(*) FROM Transcripts,7,"SELECT COUNT(*) FROM transcripts
SELECT COUNT(*) FROM transcripts
SELECT COUNT(*) FROM transcripts
SELECT COUNT(*) FROM transcripts
SELECT COUNT(*) FROM transcripts
SELECT COUNT(*) FROM transcripts
SELECT COUNT(*) FROM transcripts",SELECT COUNT(*) FROM transcripts
326,706,What is the total surface area of the countries in the Caribbean region?,world_1,easy,"SELECT sum(SurfaceArea) FROM country WHERE Region  =  ""Caribbean""",7,"SELECT SUM(surfacearea) FROM country WHERE region = 'Caribbean'
SELECT SUM(surfacearea) FROM country WHERE region = 'Caribbean'
SELECT SUM(surfacearea) FROM country WHERE region = 'Caribbean'
SELECT SUM(surfacearea) FROM country WHERE region = 'Caribbean'
SELECT SUM(surfacearea) FROM country WHERE region = 'Caribbean'
SELECT SUM(surfacearea) FROM country WHERE region = 'Caribbean'
SELECT SUM(surfacearea) FROM country WHERE region = 'Caribbean'",SELECT SUM(surfacearea) FROM country WHERE region = 'Caribbean'
327,438,What is the average rank for winners in all matches?,wta_1,easy,SELECT avg(winner_rank) FROM matches,7,"SELECT AVG(winner_rank) as average_rank FROM (     SELECT winner_rank     FROM matches     WHERE winner_rank IS NOT NULL ) as winners
SELECT AVG(winner_rank) as average_rank FROM (     SELECT winner_rank     FROM matches     WHERE winner_rank IS NOT NULL )
SELECT AVG(winner_rank) as average_rank FROM (     SELECT winner_rank     FROM matches     WHERE winner_rank IS NOT NULL )
SELECT AVG(winner_rank) as average_rank FROM (     SELECT winner_rank     FROM matches     WHERE winner_rank IS NOT NULL )
SELECT AVG(winner_rank) as average_rank FROM (     SELECT winner_rank     FROM matches     WHERE winner_rank IS NOT NULL )
SELECT AVG(winner_rank) as average_rank FROM (     SELECT winner_rank     FROM matches     WHERE winner_rank IS NOT NULL ) as winners
SELECT AVG(winner_rank) as average_rank FROM matches",SELECT AVG(winner_rank) as average_rank FROM (     SELECT winner_rank     FROM matches     WHERE winner_rank IS NOT NULL )
328,572,What is the maximum number of times that a course shows up in different transcripts and what is that course's enrollment id?,student_transcripts_tracking,hard,"SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT MAX(course_count), course_id FROM (     SELECT COUNT(*
SELECT MAX(course_count), course_id FROM (     SELECT COUNT(*
SELECT MAX(course_count), course_id FROM (     SELECT COUNT(*
SELECT MAX(course_count), course_id FROM (     SELECT COUNT(*
SELECT MAX(course_count), course_id FROM (     SELECT COUNT(*
SELECT MAX(course_count), course_id FROM (     SELECT COUNT(*
SELECT MAX(course_count), course_id FROM (     SELECT COUNT(*","SELECT MAX(course_count), course_id FROM (     SELECT COUNT(*"
329,914,Find the average grade of all students who have some friends.,network_1,hard,SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id),7,"SELECT AVG(highschooler.grade) FROM highschooler INNER JOIN friend ON highschooler.id = friend.student_id WHERE highschooler.id IN (SELECT friend_id FROM friend GROUP BY friend_id HAVING COUNT(student_id) > 0)
SELECT AVG(highschooler.grade) FROM highschooler INNER JOIN friend ON highschooler.id = friend.student_id WHERE highschooler.id IN (SELECT friend_id FROM friend GROUP BY friend_id HAVING COUNT(student_id) > 0)
SELECT AVG(highschooler.grade) FROM highschooler INNER JOIN friend ON highschooler.id = friend.student_id WHERE highschooler.id IN (SELECT friend_id FROM friend GROUP BY friend_id HAVING COUNT(student_id) > 0)
SELECT AVG(highschooler.grade) FROM highschooler INNER JOIN friend ON highschooler.id = friend.student_id WHERE highschooler.id IN (SELECT friend_id FROM friend GROUP BY friend_id HAVING COUNT(student_id) > 0)
SELECT AVG(highschooler.grade) FROM highschooler INNER JOIN friend ON highschooler.id = friend.student_id WHERE highschooler.id IN (SELECT friend_id FROM friend GROUP BY friend_id HAVING COUNT(student_id) > 0)
SELECT AVG(highschooler.grade) FROM highschooler INNER JOIN friend ON highschooler.id = friend.student_id WHERE highschooler.id IN (SELECT friend_id FROM friend GROUP BY friend_id HAVING COUNT(student_id) > 0)
SELECT AVG(highschooler.grade) FROM highschooler INNER JOIN friend ON highschooler.id = friend.student_id WHERE highschooler.id IN (SELECT friend_id FROM friend GROUP BY friend_id HAVING COUNT(student_id) > 0)",SELECT AVG(highschooler.grade) FROM highschooler INNER JOIN friend ON highschooler.id = friend.student_id WHERE highschooler.id IN (SELECT friend_id FROM friend GROUP BY friend_id HAVING COUNT(student_id) > 0)
330,543,Which semesters do not have any student enrolled? List the semester name.,student_transcripts_tracking,hard,SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment ),7,"SELECT semesters.semester_name FROM semesters LEFT JOIN student_enrolment ON semesters.semester
SELECT semesters.semester_name FROM semesters LEFT JOIN student_enrolment ON semesters.semester
SELECT semesters.semester_name FROM semesters LEFT JOIN student_enrolment ON semesters.semester
SELECT semesters.semester_name FROM semesters LEFT JOIN student_enrolment ON semesters.semester
SELECT semesters.semester_name FROM semesters LEFT JOIN student_enrolment ON semesters.semester
SELECT semesters.semester_name FROM semesters LEFT JOIN student_enrolment ON semesters.semester
SELECT semesters.semester_name FROM semesters LEFT JOIN student_enrolment ON semesters.semester",SELECT semesters.semester_name FROM semesters LEFT JOIN student_enrolment ON semesters.semester
331,264,Count the number of employees for each city.,employee_hire_evaluation,medium,"SELECT count(*) ,  city FROM employee GROUP BY city",7,"SELECT city, COUNT(employee_id) as NumberOfEmployees FROM employee GROUP BY city
SELECT city, COUNT(employee_id) as Number_of_Employees FROM employee GROUP BY city
SELECT city, COUNT(employee_id) as Number_of_Employees FROM employee GROUP BY city
SELECT city, COUNT(employee_id) as Number_of_Employees FROM employee GROUP BY city
SELECT city, COUNT(employee_id) as Number_of_Employees FROM employee GROUP BY city
SELECT city, COUNT(employee_id) as NumberOfEmployees FROM employee GROUP BY city
SELECT city, COUNT(employee_id) as Number_of_Employees FROM employee GROUP BY city","SELECT city, COUNT(employee_id) as Number_of_Employees FROM employee GROUP BY city"
332,720,What is the name of country that has the shortest life expectancy in Asia?,world_1,hard,"SELECT Name FROM country WHERE Continent  =  ""Asia"" ORDER BY LifeExpectancy LIMIT 1",7,"SELECT country.name  FROM country  WHERE country.lifeexpectancy = (SELECT MIN(lifeexpectancy) FROM country WHERE continent='Asia') AND country.continent='Asia'
SELECT country.name FROM country WHERE country.lifeexpectancy = (SELECT MIN(lifeexpectancy) FROM country WHERE continent='Asia') AND country.continent='Asia'
SELECT country.name FROM country WHERE country.lifeexpectancy = (SELECT MIN(lifeexpectancy) FROM country WHERE continent='Asia') AND country.continent='Asia'
SELECT country.name  FROM country  WHERE country.lifeexpectancy = (SELECT MIN(lifeexpectancy) FROM country WHERE continent='Asia') AND country.continent='Asia'
SELECT country.name FROM country WHERE country.lifeexpectancy = (SELECT MIN(lifeexpectancy) FROM country WHERE continent='Asia') AND country.continent='Asia'
SELECT country.name  FROM country  WHERE country.lifeexpectancy = (SELECT MIN(lifeexpectancy) FROM country WHERE continent='Asia') AND country.continent='Asia'
SELECT country.name  FROM country  WHERE country.lifeexpectancy = (SELECT MIN(lifeexpectancy) FROM country WHERE continent='Asia') AND country.continent='Asia'",SELECT country.name  FROM country  WHERE country.lifeexpectancy = (SELECT MIN(lifeexpectancy) FROM country WHERE continent='Asia') AND country.continent='Asia'
333,302,Return the names and template ids for documents that contain the letter w in their description.,cre_Doc_Template_Mgt,medium,"SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE ""%w%""",7,"SELECT documents.document_name, templates.template_id  FROM documents  JOIN templates ON documents.template_id = templates.template_id  WHERE documents.document_description LIKE '%w%'
SELECT documents.document_name, templates.template_id  FROM documents  JOIN templates ON documents.template_id = templates.template_id  WHERE documents.document_description LIKE '%w%'
SELECT documents.document_name, templates.template_id  FROM documents  JOIN templates ON documents.template_id = templates.template_id  WHERE documents.document_description LIKE '%w%'
SELECT documents.document_name, templates.template_id  FROM documents  JOIN templates ON documents.template_id = templates.template_id  WHERE documents.document_description LIKE '%w%'
SELECT documents.document_name, templates.template_id  FROM documents  JOIN templates ON documents.template_id = templates.template_id  WHERE documents.document_description LIKE '%w%'
SELECT documents.document_name, templates.template_id  FROM documents  JOIN templates ON documents.template_id = templates.template_id  WHERE documents.document_description LIKE '%w%'
SELECT documents.document_name, templates.template_id FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE documents.document_description LIKE '%w%'","SELECT documents.document_name, templates.template_id  FROM documents  JOIN templates ON documents.template_id = templates.template_id  WHERE documents.document_description LIKE '%w%'"
334,850,Please show the record formats of orchestras in ascending order of count.,orchestra,medium,SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC,7,"SELECT major_record_format, COUNT(*) as count FROM orchestra GROUP BY major_record_format ORDER BY count ASC
SELECT orchestra.major_record_format, COUNT(*) as count FROM orchestra GROUP BY orchestra.major_record_format ORDER BY count ASC
SELECT orchestra.major_record_format, COUNT(*) as count FROM orchestra JOIN performance ON orchestra.orchestra_id = performance.orchestra_id JOIN show ON performance.performance_id = show.performance_id GROUP BY orchestra.major_record_format ORDER BY count ASC
SELECT orchestra.major_record_format, COUNT(*) as count FROM orchestra JOIN performance ON orchestra.orchestra_id = performance.orchestra_id JOIN show ON performance.performance_id = show.performance_id GROUP BY orchestra.major_record_format ORDER BY count ASC
SELECT major_record_format, COUNT(*) as count FROM orchestra GROUP BY major_record_format ORDER BY count ASC
SELECT major_record_format, COUNT(*) as count FROM orchestra GROUP BY major_record_format ORDER BY count ASC
SELECT orchestra.major_record_format, COUNT(*) as count FROM orchestra JOIN performance ON orchestra.orchestra_id = performance.orchestra_id JOIN show ON performance.performance_id = show.performance_id GROUP BY orchestra.major_record_format ORDER BY count ASC","SELECT major_record_format, COUNT(*) as count FROM orchestra GROUP BY major_record_format ORDER BY count ASC"
335,1022,Show the names of singers that have more than one song.,singer,medium,SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1,7,"SELECT singer.name  FROM singer  JOIN song ON singer.singer_id = song.singer_id  GROUP BY song.singer_id  HAVING COUNT(song.song_id) > 1
SELECT singer.name  FROM singer  JOIN song ON singer.singer_id = song.singer_id  GROUP BY song.singer_id  HAVING COUNT(song.song_id) > 1
SELECT singer.name  FROM singer  JOIN song ON singer.singer_id = song.singer_id  GROUP BY song.singer_id  HAVING COUNT(song.song_id) > 1
SELECT singer.name  FROM singer  JOIN song  ON singer.singer_id = song.singer_id  GROUP BY song.singer_id  HAVING COUNT(song.song_id) > 1
SELECT singer.name  FROM singer  JOIN song ON singer.singer_id = song.singer_id  GROUP BY singer.singer_id  HAVING COUNT(song.song_id) > 1
SELECT singer.name  FROM singer  JOIN song ON singer.singer_id = song.singer_id  GROUP BY song.singer_id  HAVING COUNT(song.song_id) > 1
SELECT singer.name  FROM singer  JOIN song ON singer.singer_id = song.singer_id  GROUP BY singer.singer_id  HAVING COUNT(song.song_id) > 1",SELECT singer.name  FROM singer  JOIN song ON singer.singer_id = song.singer_id  GROUP BY song.singer_id  HAVING COUNT(song.song_id) > 1
336,36,What are the names of the singers and number of concerts for each person?,concert_singer,medium,"SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id",7,"SELECT s.name AS singer_name, COUNT(c.concert_id) AS number_of_concerts FROM singer AS s JOIN singer_in_concert AS sic ON s.singer_id = sic.singer_id JOIN concert AS c ON sic.concert_id = c.concert_id GROUP BY s.name
SELECT s.name AS singer_name, COUNT(c.concert_id) AS number_of_concerts FROM singer AS s JOIN singer_in_concert AS sic ON s.singer_id = sic.singer_id JOIN concert AS c ON sic.concert_id = c.concert_id GROUP BY s.name
SELECT s.name AS singer_name, COUNT(c.concert_id) AS number_of_concerts FROM singer AS s JOIN singer_in_concert AS sic ON s.singer_id = sic.singer_id JOIN concert AS c ON sic.concert_id = c.concert_id GROUP BY s.name
SELECT s.name AS singer_name, COUNT(c.concert_id) AS number_of_concerts FROM singer AS s JOIN singer_in_concert AS sic ON s.singer_id = sic.singer_id JOIN concert AS c ON sic.concert_id = c.concert_id GROUP BY s.name
SELECT s.name AS singer_name, COUNT(c.concert_id) AS number_of_concerts FROM singer AS s JOIN singer_in_concert AS sic ON s.singer_id = sic.singer_id JOIN concert AS c ON sic.concert_id = c.concert_id GROUP BY s.name
SELECT s.name AS singer_name, COUNT(c.concert_id) AS number_of_concerts FROM singer AS s JOIN singer_in_concert AS sic ON s.singer_id = sic.singer_id JOIN concert AS c ON sic.concert_id = c.concert_id GROUP BY s.name
SELECT s.name AS singer_name, COUNT(c.concert_id) AS number_of_concerts FROM singer AS s JOIN singer_in_concert AS sic ON s.singer_id = sic.singer_id JOIN concert AS c ON sic.concert_id = c.concert_id GROUP BY s.name","SELECT s.name AS singer_name, COUNT(c.concert_id) AS number_of_concerts FROM singer AS s JOIN singer_in_concert AS sic ON s.singer_id = sic.singer_id JOIN concert AS c ON sic.concert_id = c.concert_id GROUP BY s.name"
337,899,What are the ids of students who both have friends and are liked?,network_1,hard,SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes,7,"SELECT id FROM highschooler WHERE id IN (SELECT student_id FROM friend) AND id IN (SELECT student_id FROM likes)
SELECT id FROM highschooler WHERE id IN (SELECT student_id FROM friend) AND id IN (SELECT student_id FROM likes)
SELECT id FROM highschooler WHERE id IN (SELECT student_id FROM friend) AND id IN (SELECT student_id FROM likes)
SELECT id FROM highschooler WHERE id IN (SELECT student_id FROM friend) AND id IN (SELECT student_id FROM likes)
SELECT id FROM highschooler WHERE id IN (SELECT student_id FROM friend) AND id IN (SELECT student_id FROM likes)
SELECT id FROM highschooler WHERE id IN (SELECT student_id FROM friend) AND id IN (SELECT student_id FROM likes)
SELECT id FROM highschooler WHERE id IN (SELECT student_id FROM friend) AND id IN (SELECT student_id FROM likes)",SELECT id FROM highschooler WHERE id IN (SELECT student_id FROM friend) AND id IN (SELECT student_id FROM likes)
338,851,"What are the major record formats of orchestras, sorted by their frequency?",orchestra,medium,SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC,7,"SELECT major_record_format, COUNT(*) as frequency FROM orchestra GROUP BY major_record_format ORDER BY frequency DESC
SELECT major_record_format, COUNT(*) as frequency FROM orchestra GROUP BY major_record_format ORDER BY frequency DESC
SELECT major_record_format, COUNT(*) as frequency FROM orchestra GROUP BY major_record_format ORDER BY frequency DESC
SELECT major_record_format, COUNT(*) as frequency FROM orchestra GROUP BY major_record_format ORDER BY frequency DESC
SELECT major_record_format, COUNT(*) as frequency FROM orchestra GROUP BY major_record_format ORDER BY frequency DESC
SELECT major_record_format, COUNT(*) as frequency FROM orchestra GROUP BY major_record_format ORDER BY frequency DESC
SELECT major_record_format, COUNT(*) as frequency FROM orchestra GROUP BY major_record_format ORDER BY frequency DESC","SELECT major_record_format, COUNT(*) as frequency FROM orchestra GROUP BY major_record_format ORDER BY frequency DESC"
339,943,Find the id and cell phone of the professionals who operate two or more types of treatments.,dog_kennels,medium,"SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",7,"SELECT professionals.professional_id, professionals.cell_number FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code GROUP BY professionals.professional_id HAVING COUNT(DISTINCT treatment_types.treatment_type_code) >= 2
SELECT professionals.professional_id, professionals.cell_number FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code GROUP BY professionals.professional_id HAVING COUNT(DISTINCT treatment_types.treatment_type_code) >= 2
SELECT professionals.professional_id, professionals.cell_number FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code GROUP BY professionals.professional_id HAVING COUNT(DISTINCT treatment_types.treatment_type_code) >= 2
SELECT professionals.professional_id, professionals.cell_number FROM professionals INNER JOIN treatments ON professionals.professional_id = treatments.professional_id GROUP BY professionals.professional_id HAVING COUNT(DISTINCT treatments.treatment_type_code) >= 2
SELECT professionals.professional_id, professionals.cell_number FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code GROUP BY professionals.professional_id HAVING COUNT(DISTINCT treatment_types.treatment_type_code) >= 2
SELECT professionals.professional_id, professionals.cell_number FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code GROUP BY professionals.professional_id HAVING COUNT(DISTINCT treatment_types.treatment_type_code) >= 2
SELECT professionals.professional_id, professionals.cell_number FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code GROUP BY professionals.professional_id HAVING COUNT(DISTINCT treatment_types.treatment_type_code) >= 2","SELECT professionals.professional_id, professionals.cell_number FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code GROUP BY professionals.professional_id HAVING COUNT(DISTINCT treatment_types.treatment_type_code) >= 2"
340,412,"Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low.",museum_visit,medium,SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC,7,"SELECT visitor.name  FROM visitor  WHERE visitor.level_of_membership > 4  ORDER BY visitor.level_of_membership DESC
SELECT visitor.name  FROM visitor  WHERE visitor.level_of_membership > 4  ORDER BY visitor.level_of_membership DESC
SELECT visitor.name  FROM visitor  WHERE visitor.level_of_membership > 4  ORDER BY visitor.level_of_membership DESC
SELECT visitor.name  FROM visitor  WHERE visitor.level_of_membership > 4  ORDER BY visitor.level_of_membership DESC
SELECT visitor.name  FROM visitor  WHERE visitor.level_of_membership > 4  ORDER BY visitor.level_of_membership DESC
SELECT visitor.name  FROM visitor  WHERE visitor.level_of_membership > 4  ORDER BY visitor.level_of_membership DESC
SELECT visitor.name  FROM visitor  WHERE visitor.level_of_membership > 4  ORDER BY visitor.level_of_membership DESC",SELECT visitor.name  FROM visitor  WHERE visitor.level_of_membership > 4  ORDER BY visitor.level_of_membership DESC
341,188,What is the total number of airlines?,flight_2,easy,SELECT count(*) FROM AIRLINES,7,"SELECT COUNT(*) FROM airlines
SELECT COUNT(*) FROM airlines
SELECT COUNT(*) FROM airlines
SELECT COUNT(*) FROM airlines
SELECT COUNT(*) FROM airlines
SELECT COUNT(*) FROM airlines
SELECT COUNT(*) FROM airlines",SELECT COUNT(*) FROM airlines
342,1026,List the name of singers that do not have any song.,singer,hard,SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song),7,"SELECT singer.name  FROM singer  LEFT JOIN song ON singer.singer_id = song.singer_id  WHERE song.song_id IS NULL
SELECT singer.name  FROM singer  LEFT JOIN song ON singer.singer_id = song.singer_id  WHERE song.song_id IS NULL
SELECT singer.name  FROM singer  LEFT JOIN song ON singer.singer_id = song.singer_id  WHERE song.song_id IS NULL
SELECT singer.name  FROM singer  LEFT JOIN song ON singer.singer_id = song.singer_id  WHERE song.song_id IS NULL
SELECT singer.name  FROM singer  LEFT JOIN song ON singer.singer_id = song.singer_id  WHERE song.singer_id IS NULL
SELECT singer.name  FROM singer  LEFT JOIN song ON singer.singer_id = song.singer_id  WHERE song.song_id IS NULL
SELECT singer.name  FROM singer  LEFT JOIN song ON singer.singer_id = song.singer_id  WHERE song.singer_id IS NULL",SELECT singer.name  FROM singer  LEFT JOIN song ON singer.singer_id = song.singer_id  WHERE song.song_id IS NULL
343,304,"Return the document id, template id, and description for the document with the name Robbin CV.",cre_Doc_Template_Mgt,medium,"SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  ""Robbin CV""",7,"SELECT documents.document_id, templates.template_id, documents.document_description FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE documents.document_name = 'Robbin CV'
SELECT documents.document_id, templates.template_id, documents.document_description FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE documents.document_name = 'Robbin CV'
SELECT documents.document_id, templates.template_id, documents.document_description FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE documents.document_name = 'Robbin CV'
SELECT documents.document_id, templates.template_id, documents.document_description FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE documents.document_name = 'Robbin CV'
SELECT documents.document_id, templates.template_id, documents.document_description FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE documents.document_name = 'Robbin CV'
SELECT documents.document_id, templates.template_id, documents.document_description FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE documents.document_name = 'Robbin CV'
SELECT documents.document_id, templates.template_id, documents.document_description FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE documents.document_name = 'Robbin CV'","SELECT documents.document_id, templates.template_id, documents.document_description FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE documents.document_name = 'Robbin CV'"
344,636,What are the countries that are not playing cartoons written by Todd Casey?,tvshow,hard,SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey',7,"SELECT DISTINCT country  FROM tv_channel  WHERE id NOT IN (     SELECT channel      FROM cartoon      WHERE written_by = 'Todd Casey' ) AND content = 'cartoon'
SELECT DISTINCT country  FROM tv_channel  WHERE id NOT IN (     SELECT channel      FROM cartoon      WHERE written_by = 'Todd Casey'      AND content = 'cartoon' )
SELECT DISTINCT tv_channel.country  FROM tv_channel  LEFT JOIN cartoon ON tv_channel.id = cartoon.channel  WHERE cartoon.written_by != 'Todd Casey' OR cartoon.written_by IS NULL
SELECT DISTINCT country  FROM tv_channel  WHERE id NOT IN (     SELECT channel      FROM cartoon      WHERE written_by = 'Todd Casey'      AND content = 'cartoon' )
SELECT DISTINCT country  FROM tv_channel  WHERE id NOT IN (     SELECT channel      FROM cartoon      WHERE written_by = 'Todd Casey'      AND content = 'cartoon' )
SELECT DISTINCT country  FROM tv_channel  WHERE id NOT IN (     SELECT channel      FROM cartoon      WHERE written_by = 'Todd Casey'      AND content = 'cartoon' )
SELECT DISTINCT country  FROM tv_channel  WHERE id NOT IN (     SELECT channel      FROM cartoon      WHERE written_by = 'Todd Casey' ) AND content = 'cartoon'",SELECT DISTINCT country  FROM tv_channel  WHERE id NOT IN (     SELECT channel      FROM cartoon      WHERE written_by = 'Todd Casey'      AND content = 'cartoon' )
345,237,Find all airlines that have flights from both airports 'APG' and 'CVO'.,flight_2,extra,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""APG"" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""CVO""",7,"SELECT airlines.airline FROM airlines JOIN flights ON airlines.airline = flights.airline WHERE flights.sourceairport = 'APG' INTERSECT SELECT airlines.airline FROM airlines JOIN flights ON airlines.airline = flights.airline WHERE flights.sourceairport = 'CVO'
SELECT airlines.uid, airlines.airline, airlines.abbreviation, airlines.country FROM airlines JOIN flights ON airlines.abbreviation = flights.airline WHERE flights.sourceairport = 'APG' OR flights.destairport = 'APG' INTERSECT SELECT airlines.uid, airlines.airline, airlines.abbreviation, airlines.country FROM airlines JOIN flights ON airlines.abbreviation = flights.airline WHERE flights.sourceairport = 'CVO' OR flights.destairport = 'CVO'
SELECT airlines.uid, airlines.airline, airlines.abbreviation, airlines.country FROM airlines JOIN flights ON airlines.abbreviation = flights.airline WHERE flights.sourceairport = 'APG' OR flights.destairport = 'APG' INTERSECT SELECT airlines.uid, airlines.airline, airlines.abbreviation, airlines.country FROM airlines JOIN flights ON airlines.abbreviation = flights.airline WHERE flights.sourceairport = 'CVO' OR flights.destairport = 'CVO'
SELECT airlines.airline FROM airlines JOIN flights ON airlines.abbreviation = flights.airline WHERE flights.sourceairport = 'APG' OR flights.destairport = 'APG' INTERSECT SELECT airlines.airline FROM airlines JOIN flights ON airlines.abbreviation = flights.airline WHERE flights.sourceairport = 'CVO' OR flights.destairport = 'CVO'
SELECT airlines.airline FROM airlines JOIN flights ON airlines.airline = flights.airline WHERE flights.sourceairport = 'APG' INTERSECT SELECT airlines.airline FROM airlines JOIN flights ON airlines.airline = flights.airline WHERE flights.sourceairport = 'CVO'
SELECT airlines.uid, airlines.airline, airlines.abbreviation, airlines.country FROM airlines JOIN flights ON airlines.abbreviation = flights.airline WHERE flights.sourceairport = 'APG' OR flights.destairport = 'APG' INTERSECT SELECT airlines.uid, airlines.airline, airlines.abbreviation, airlines.country FROM airlines JOIN flights ON airlines.abbreviation = flights.airline WHERE flights.sourceairport = 'CVO' OR flights.destairport = 'CVO'
SELECT airlines.uid, airlines.airline, airlines.abbreviation, airlines.country FROM airlines JOIN flights ON airlines.abbreviation = flights.airline WHERE flights.sourceairport = 'APG' OR flights.destairport = 'APG' INTERSECT SELECT airlines.uid, airlines.airline, airlines.abbreviation, airlines.country FROM airlines JOIN flights ON airlines.abbreviation = flights.airline WHERE flights.sourceairport = 'CVO' OR flights.destairport = 'CVO'","SELECT airlines.uid, airlines.airline, airlines.abbreviation, airlines.country FROM airlines JOIN flights ON airlines.abbreviation = flights.airline WHERE flights.sourceairport = 'APG' OR flights.destairport = 'APG' INTERSECT SELECT airlines.uid, airlines.airline, airlines.abbreviation, airlines.country FROM airlines JOIN flights ON airlines.abbreviation = flights.airline WHERE flights.sourceairport = 'CVO' OR flights.destairport = 'CVO'"
346,126,What is the number of cars with a horsepower greater than 150?,car_1,easy,SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;,7,"SELECT COUNT(*) FROM cars_data WHERE horsepower > 150
SELECT COUNT(*) FROM cars_data WHERE horsepower > 150
SELECT COUNT(*) FROM cars_data WHERE horsepower > 150
SELECT COUNT(*) FROM cars_data WHERE horsepower > 150
SELECT COUNT(*) FROM cars_data WHERE horsepower > 150
SELECT COUNT(*) FROM cars_data WHERE horsepower > 150
SELECT COUNT(*) FROM cars_data WHERE horsepower > 150",SELECT COUNT(*) FROM cars_data WHERE horsepower > 150
347,93,"How many models does each car maker produce? List maker full name, id and the number.",car_1,medium,"SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;",7,"SELECT car_makers.fullname, car_makers.id, COUNT(model_list.model) AS model_count FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id
SELECT car_makers.fullname, car_makers.id, COUNT(model_list.model) AS model_count FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id
SELECT car_makers.fullname, car_makers.id, COUNT(model_list.model) AS model_count FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id
SELECT car_makers.fullname, car_makers.id, COUNT(model_list.model) AS model_count FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id
SELECT car_makers.fullname, car_makers.id, COUNT(model_list.model) AS model_count FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.fullname, car_makers.id
SELECT car_makers.fullname, car_makers.id, COUNT(model_list.model) AS model_count FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id
SELECT car_makers.fullname, car_makers.id, COUNT(model_list.model) AS model_count FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id","SELECT car_makers.fullname, car_makers.id, COUNT(model_list.model) AS model_count FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id"
348,778,What are the country codes for countries that do not speak English?,world_1,hard,"SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  ""English""",7,"SELECT country.code, countrylanguage.language FROM country LEFT JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language != 'English' OR countrylanguage.language IS NULL
SELECT country.code, countrylanguage.language FROM country LEFT JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language != 'English' OR countrylanguage.language IS NULL
SELECT country.code, countrylanguage.language FROM country LEFT JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language != 'English' OR countrylanguage.language IS NULL
SELECT country.code, countrylanguage.language FROM country LEFT JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language != 'English' OR countrylanguage.language IS NULL
SELECT country.code, countrylanguage.language FROM country LEFT JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language != 'English' OR countrylanguage.language IS NULL
SELECT country.code, countrylanguage.language  FROM country  LEFT JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language != 'English' OR countrylanguage.language IS NULL
SELECT country.code, countrylanguage.language FROM country LEFT JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language != 'English' OR countrylanguage.language IS NULL","SELECT country.code, countrylanguage.language FROM country LEFT JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language != 'English' OR countrylanguage.language IS NULL"
349,700,List the area codes in which voters voted both for the contestant 'Tabatha Gehling' and the contestant 'Kelly Clauss'.,voter_1,extra,SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss',7,"SELECT votes.state, votes.area_code FROM votes JOIN contestants ON votes.contestant_number = contestants.contestant_number WHERE contestants.contestant_name = 'Tabatha Gehling' INTERSECT SELECT votes.state, votes.area_code FROM votes JOIN contestants ON votes.contestant_number = contestants.contestant_number WHERE contestants.contestant_name = 'Kelly Clauss'
SELECT votes.state, votes.area_code FROM votes JOIN contestants ON votes.contestant_number = contestants.contestant_number WHERE contestants.contestant_name = 'Tabatha Gehling' INTERSECT SELECT votes.state, votes.area_code FROM votes JOIN contestants ON votes.contestant_number = contestants.contestant_number WHERE contestants.contestant_name = 'Kelly Clauss'
SELECT votes.state, votes.area_code FROM votes JOIN contestants ON votes.contestant_number = contestants.contestant_number WHERE contestants.contestant_name IN ('Tabatha Gehling', 'Kelly Clauss') GROUP BY votes.state, votes.area_code HAVING COUNT(DISTINCT contestants.contestant_name) = 2
SELECT votes.state, votes.area_code FROM votes JOIN contestants ON votes.contestant_number = contestants.contestant_number WHERE contestants.contestant_name = 'Tabatha Gehling' INTERSECT SELECT votes.state, votes.area_code FROM votes JOIN contestants ON votes.contestant_number = contestants.contestant_number WHERE contestants.contestant_name = 'Kelly Clauss'
SELECT votes.state, votes.area_code FROM votes JOIN contestants ON votes.contestant_number = contestants.contestant_number WHERE contestants.contestant_name = 'Tabatha Gehling' INTERSECT SELECT votes.state, votes.area_code FROM votes JOIN contestants ON votes.contestant_number = contestants.contestant_number WHERE contestants.contestant_name = 'Kelly Clauss'
SELECT votes.state, votes.area_code FROM votes JOIN contestants ON votes.contestant_number = contestants.contestant_number WHERE contestants.contestant_name IN ('Tabatha Gehling', 'Kelly Clauss') GROUP BY votes.state, votes.area_code HAVING COUNT(DISTINCT contestants.contestant_name) = 2
SELECT votes.state, votes.area_code FROM votes JOIN contestants ON votes.contestant_number = contestants.contestant_number WHERE contestants.contestant_name = 'Tabatha Gehling' INTERSECT SELECT votes.state, votes.area_code FROM votes JOIN contestants ON votes.contestant_number = contestants.contestant_number WHERE contestants.contestant_name = 'Kelly Clauss'","SELECT votes.state, votes.area_code FROM votes JOIN contestants ON votes.contestant_number = contestants.contestant_number WHERE contestants.contestant_name = 'Tabatha Gehling' INTERSECT SELECT votes.state, votes.area_code FROM votes JOIN contestants ON votes.contestant_number = contestants.contestant_number WHERE contestants.contestant_name = 'Kelly Clauss'"
350,881,Which grades have 4 or more high schoolers?,network_1,easy,SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4,7,"SELECT grade FROM highschooler GROUP BY grade HAVING COUNT(*) >= 4
SELECT grade FROM highschooler GROUP BY grade HAVING COUNT(*) >= 4
SELECT grade FROM highschooler GROUP BY grade HAVING COUNT(*) >= 4
SELECT grade FROM highschooler GROUP BY grade HAVING COUNT(*) >= 4
SELECT grade FROM highschooler GROUP BY grade HAVING COUNT(*) >= 4
SELECT grade FROM highschooler GROUP BY grade HAVING COUNT(*) >= 4
SELECT grade FROM highschooler GROUP BY grade HAVING COUNT(*) >= 4",SELECT grade FROM highschooler GROUP BY grade HAVING COUNT(*) >= 4
351,989,Tell me the age of the oldest dog.,dog_kennels,easy,SELECT max(age) FROM Dogs,7,"SELECT MAX(age) FROM dogs
SELECT MAX(age) FROM dogs
SELECT MAX(age) FROM dogs
SELECT MAX(age) FROM dogs
SELECT MAX(age) FROM dogs
SELECT MAX(age) FROM dogs
SELECT MAX(age) FROM dogs",SELECT MAX(age) FROM dogs
352,784,Which cities are in European countries where English is not the official language?,world_1,extra,SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English'),7,"SELECT city.name, country.name FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.continent = 'Europe' AND countrylanguage.language = 'English' AND countrylanguage.isofficial = 'F'
SELECT city.name, country.name FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.continent = 'Europe' AND countrylanguage.language = 'English' AND countrylanguage.isofficial = 'F'
SELECT city.name, country.name FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.continent = 'Europe' AND countrylanguage.language = 'English' AND countrylanguage.isofficial = 'F'
SELECT city.name, country.name FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.continent = 'Europe' AND countrylanguage.language = 'English' AND countrylanguage.isofficial = 'F'
SELECT city.name, country.name FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.continent = 'Europe' AND countrylanguage.language = 'English' AND countrylanguage.isofficial = 'F'
SELECT city.name, country.name FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.continent = 'Europe' AND countrylanguage.language = 'English' AND countrylanguage.isofficial = 'F'
SELECT city.name, country.name FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.continent = 'Europe' AND countrylanguage.language = 'English' AND countrylanguage.isofficial = 'F'","SELECT city.name, country.name FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE country.continent = 'Europe' AND countrylanguage.language = 'English' AND countrylanguage.isofficial = 'F'"
353,923,"Find the id, last name and cell phone of the professionals who live in the state of Indiana or have performed more than two treatments.",dog_kennels,extra,"SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2",7,"SELECT professionals.professional_id, professionals.last_name, professionals.cell_number FROM professionals LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id WHERE professionals.state = 'Indiana' OR COUNT(treatments.treatment_id) > 2 GROUP BY professionals.professional_id
SELECT professionals.professional_id, professionals.last_name, professionals.cell_number FROM professionals JOIN (     SELECT professional_id, COUNT(*) as treatment_count     FROM treatments     GROUP BY professional_id     HAVING COUNT(*) > 2 ) as treated_professionals ON professionals.professional_id = treated_professionals.professional_id WHERE professionals.state = 'Indiana' UNION SELECT professionals.professional_id, professionals.last_name, professionals.cell_number FROM professionals WHERE professionals.
SELECT professionals.professional_id, professionals.last_name, professionals.cell_number FROM professionals JOIN (     SELECT professional_id, COUNT(*) as treatment_count     FROM treatments     GROUP BY professional_id     HAVING COUNT(*) > 2 ) AS treated_professionals ON professionals.professional_id = treated_professionals.professional_id WHERE professionals.state = 'Indiana' UNION SELECT professionals.professional_id, professionals.last_name, professionals.cell_number FROM professionals WHERE professionals.
SELECT professionals.professional_id, professionals.last_name, professionals.cell_number FROM professionals JOIN (     SELECT professional_id, COUNT(*) as treatment_count     FROM treatments     GROUP BY professional_id     HAVING COUNT(*) > 2 ) AS treated_professionals ON professionals.professional_id = treated_professionals.professional_id WHERE professionals.state = 'Indiana' UNION SELECT professionals.professional_id, professionals.last_name, professionals.cell_number FROM professionals WHERE professionals.
SELECT professionals.professional_id, professionals.last_name, professionals.cell_number FROM professionals LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id WHERE professionals.state = 'Indiana' OR COUNT(treatments.treatment_id) > 2 GROUP BY professionals.professional_id
SELECT professionals.professional_id, professionals.last_name, professionals.cell_number FROM professionals JOIN (     SELECT professional_id, COUNT(*) as treatment_count     FROM treatments     GROUP BY professional_id     HAVING COUNT(*) > 2 ) AS treated_professionals ON professionals.professional_id = treated_professionals.professional_id WHERE professionals.state = 'Indiana' UNION SELECT professionals.professional_id, professionals.last_name, professionals.cell_number FROM professionals WHERE professionals.state
SELECT professionals.professional_id, professionals.last_name, professionals.cell_number FROM professionals JOIN (     SELECT professional_id     FROM treatments     GROUP BY professional_id     HAVING COUNT(treatment_id) > 2 ) AS experienced_professionals ON professionals.professional_id = experienced_professionals.professional_id WHERE professionals.state = 'Indiana' UNION SELECT professionals.professional_id, professionals.last_name, professionals.cell_number FROM professionals WHERE professionals.state = 'Indiana","SELECT professionals.professional_id, professionals.last_name, professionals.cell_number FROM professionals LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id WHERE professionals.state = 'Indiana' OR COUNT(treatments.treatment_id) > 2 GROUP BY professionals.professional_id"
354,107,Which of the countries has the most car makers? List the country name.,car_1,extra,SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;,7,"SELECT c.countryname, COUNT(DISTINCT cm.maker) AS car_makers FROM countries AS c JOIN car_makers AS cm ON c.countryid = cm.country GROUP BY c.countryname ORDER BY car_makers DESC LIMIT 1
SELECT c.countryname, COUNT(DISTINCT cm.maker) AS car_makers FROM countries AS c JOIN car_makers AS cm ON c.countryid = cm.country GROUP BY c.countryname ORDER BY car_makers DESC LIMIT 1
SELECT c.countryname, COUNT(DISTINCT cm.maker) AS car_makers FROM countries AS c JOIN car_makers AS cm ON c.countryid = cm.country GROUP BY c.countryname ORDER BY car_makers DESC LIMIT 1
SELECT c.countryname, COUNT(DISTINCT cm.maker) AS car_makers FROM countries AS c JOIN car_makers AS cm ON c.countryid = cm.country GROUP BY c.countryname ORDER BY car_makers DESC LIMIT 1
SELECT c.countryname, COUNT(DISTINCT cm.maker) AS car_makers FROM countries AS c JOIN car_makers AS cm ON c.countryid = cm.country GROUP BY c.countryname ORDER BY car_makers DESC LIMIT 1
SELECT c.countryname, COUNT(DISTINCT cm.maker) AS car_makers FROM countries AS c JOIN car_makers AS cm ON c.countryid = cm.country GROUP BY c.countryname ORDER BY car_makers DESC LIMIT 1
SELECT c.countryname, COUNT(cm.maker) AS car_makers_count FROM countries AS c JOIN car_makers AS cm ON c.countryid = cm.country GROUP BY c.countryname ORDER BY car_makers_count DESC LIMIT 1","SELECT c.countryname, COUNT(DISTINCT cm.maker) AS car_makers FROM countries AS c JOIN car_makers AS cm ON c.countryid = cm.country GROUP BY c.countryname ORDER BY car_makers DESC LIMIT 1"
355,257,Find the name of airports which do not have any flight in and out.,flight_2,hard,SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights),7,"SELECT airports.airportname  FROM airports  LEFT JOIN flights ON airports.airportcode = flights.sourceairport OR airports.airportcode = flights.destairport  WHERE flights.sourceairport IS NULL AND flights.destairport IS NULL
SELECT airports.airportname  FROM airports  LEFT JOIN flights ON airports.airportcode = flights.sourceairport OR airports.airportcode = flights.destairport  WHERE flights.sourceairport IS NULL AND flights.destairport IS NULL
SELECT airports.airportname  FROM airports  LEFT JOIN flights ON airports.airportcode = flights.sourceairport OR airports.airportcode = flights.destairport  WHERE flights.sourceairport IS NULL AND flights.destairport IS NULL
SELECT airports.airportname  FROM airports  LEFT JOIN flights ON airports.airportcode = flights.sourceairport OR airports.airportcode = flights.destairport  WHERE flights.sourceairport IS NULL AND flights.destairport IS NULL
SELECT airports.airportname  FROM airports  LEFT JOIN flights ON airports.airportcode = flights.sourceairport OR airports.airportcode = flights.destairport  WHERE flights.sourceairport IS NULL AND flights.destairport IS NULL
SELECT airports.airportname FROM airports LEFT JOIN flights ON airports.airportcode = flights.sourceairport OR airports.airportcode = flights.destairport WHERE flights.sourceairport IS NULL AND flights.destairport IS NULL
SELECT airports.airportname  FROM airports  LEFT JOIN flights ON airports.airportcode = flights.sourceairport OR airports.airportcode = flights.destairport  WHERE flights.sourceairport IS NULL AND flights.destairport IS NULL",SELECT airports.airportname  FROM airports  LEFT JOIN flights ON airports.airportcode = flights.sourceairport OR airports.airportcode = flights.destairport  WHERE flights.sourceairport IS NULL AND flights.destairport IS NULL
356,430,How many players are there?,wta_1,easy,SELECT count(*) FROM players,7,"SELECT COUNT(*) FROM players
SELECT COUNT(*) FROM players
SELECT COUNT(*) FROM players
SELECT COUNT(*) FROM players
SELECT COUNT(*) FROM players
SELECT COUNT(*) FROM players
SELECT COUNT(*) FROM players",SELECT COUNT(*) FROM players
357,361,Show paragraph details for paragraph with text 'Korea ' .,cre_Doc_Template_Mgt,medium,select other_details from paragraphs where paragraph_text like 'korea',7,"SELECT paragraphs.paragraph_id, paragraphs.paragraph_text, paragraphs.other_details FROM paragraphs JOIN documents ON paragraphs.document_id = documents.document_id JOIN templates ON documents.template_id = templates.template_id JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE paragraphs.paragraph_text = 'Korea'
SELECT paragraphs.paragraph_id, paragraphs.paragraph_text, paragraphs.other_details FROM paragraphs INNER JOIN documents ON paragraphs.document_id = documents.document_id INNER JOIN templates ON documents.template_id = templates.template_id INNER JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE paragraphs.paragraph_text = 'Korea'
SELECT paragraphs.paragraph_id, paragraphs.paragraph_text, paragraphs.other_details FROM paragraphs INNER JOIN documents ON paragraphs.document_id = documents.document_id INNER JOIN templates ON documents.template_id = templates.template_id INNER JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE paragraphs.paragraph_text = 'Korea'
SELECT paragraphs.paragraph_id, paragraphs.paragraph_text, paragraphs.other_details FROM paragraphs INNER JOIN documents ON paragraphs.document_id = documents.document_id INNER JOIN templates ON documents.template_id = templates.template_id INNER JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE paragraphs.paragraph_text = 'Korea'
SELECT paragraphs.paragraph_id, paragraphs.paragraph_text, paragraphs.other_details FROM paragraphs INNER JOIN documents ON paragraphs.document_id = documents.document_id INNER JOIN templates ON documents.template_id = templates.template_id INNER JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE paragraphs.paragraph_text = 'Korea'
SELECT paragraphs.paragraph_id, paragraphs.paragraph_text, paragraphs.other_details FROM paragraphs INNER JOIN documents ON paragraphs.document_id = documents.document_id INNER JOIN templates ON documents.template_id = templates.template_id INNER JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE paragraphs.paragraph_text = 'Korea'
SELECT paragraphs.paragraph_id, paragraphs.paragraph_text, paragraphs.other_details FROM paragraphs INNER JOIN documents ON paragraphs.document_id = documents.document_id INNER JOIN templates ON documents.template_id = templates.template_id INNER JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE paragraphs.paragraph_text = 'Korea'","SELECT paragraphs.paragraph_id, paragraphs.paragraph_text, paragraphs.other_details FROM paragraphs INNER JOIN documents ON paragraphs.document_id = documents.document_id INNER JOIN templates ON documents.template_id = templates.template_id INNER JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE paragraphs.paragraph_text = 'Korea'"
358,410,What are the names of the teachers whose courses have not been arranged?,course_teach,hard,SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange),7,"SELECT teacher.name  FROM teacher  LEFT JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id  WHERE course_arrange.course_id IS NULL
SELECT t.name  FROM teacher t  LEFT JOIN course_arrange ca ON t.teacher_id = ca.teacher_id  LEFT JOIN course c ON ca.course_id = c.course_id  WHERE c.course_id IS NULL
SELECT teacher.name  FROM teacher  LEFT JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id  WHERE course_arrange.course_id IS NULL
SELECT teacher.name  FROM teacher  LEFT JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id  WHERE course_arrange.course_id IS NULL
SELECT teacher.name  FROM teacher  LEFT JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id  WHERE course_arrange.course_id IS NULL
SELECT teacher.name  FROM teacher  LEFT JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id  WHERE course_arrange.course_id IS NULL
SELECT teacher.name  FROM teacher  LEFT JOIN course_arrange  ON teacher.teacher_id = course_arrange.teacher_id  WHERE course_arrange.course_id IS NULL",SELECT teacher.name  FROM teacher  LEFT JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id  WHERE course_arrange.course_id IS NULL
359,236,Which airlines have a flight with destination airport AHD?,flight_2,medium,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  ""AHD""",7,"SELECT airlines.airline FROM airlines JOIN flights ON airlines.abbreviation = flights.airline JOIN airports ON flights.destairport = airports.airportcode WHERE airports.airportcode = 'AHD'
SELECT airlines.airline FROM airlines JOIN flights ON airlines.abbreviation = flights.airline JOIN airports ON flights.destairport = airports.airportcode WHERE airports.airportcode = 'AHD'
SELECT airlines.airline FROM airlines JOIN flights ON airlines.abbreviation = flights.airline JOIN airports ON flights.destairport = airports.airportcode WHERE airports.airportcode = 'AHD'
SELECT airlines.airline FROM airlines JOIN flights ON airlines.abbreviation = flights.airline JOIN airports ON flights.destairport = airports.airportcode WHERE airports.airportcode = 'AHD'
SELECT airlines.airline FROM airlines JOIN flights ON airlines.abbreviation = flights.airline JOIN airports ON flights.destairport = airports.airportcode WHERE airports.airportcode = 'AHD'
SELECT airlines.airline FROM airlines JOIN flights ON airlines.abbreviation = flights.airline JOIN airports ON flights.destairport = airports.airportcode WHERE airports.airportcode = 'AHD'
SELECT airlines.airline FROM airlines JOIN flights ON airlines.abbreviation = flights.airline JOIN airports ON flights.destairport = airports.airportcode WHERE airports.airportcode = 'AHD'",SELECT airlines.airline FROM airlines JOIN flights ON airlines.abbreviation = flights.airline JOIN airports ON flights.destairport = airports.airportcode WHERE airports.airportcode = 'AHD'
360,548,What is the name of the course with the most students enrolled?,student_transcripts_tracking,extra,SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1,7,"SELECT c.course_name FROM courses AS c JOIN student_enrolment_courses AS sec ON c.course_id =
SELECT c.course_name, COUNT(s.student_id) AS student_count FROM courses AS c JOIN student_enrol
SELECT c.course_name, COUNT(s.student_id) AS student_count FROM courses AS c JOIN student_enrol
SELECT c.course_name, COUNT(s.student_id) AS student_count FROM courses AS c JOIN student_enrol
SELECT c.course_name, COUNT(s.student_id) AS student_count FROM courses AS c JOIN student_enrol
SELECT c.course_name, COUNT(s.student_id) AS student_count FROM courses AS c JOIN student_enrol
SELECT c.course_name, COUNT(s.student_id) as student_count FROM courses c JOIN student_enrolment","SELECT c.course_name, COUNT(s.student_id) AS student_count FROM courses AS c JOIN student_enrol"
361,224,Which city is the most frequent source airport?,flight_2,extra,SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1,7,"SELECT airports.city, COUNT(*) as frequency FROM flights JOIN airports ON flights.sourceairport = airports.airportcode GROUP BY airports.city ORDER BY frequency DESC LIMIT 1
SELECT airports.city, COUNT(*) as frequency FROM flights JOIN airports ON flights.sourceairport = airports.airportcode GROUP BY airports.city ORDER BY frequency DESC LIMIT 1
SELECT airports.city, COUNT(*) as frequency FROM flights JOIN airports ON flights.sourceairport = airports.airportcode GROUP BY airports.city ORDER BY frequency DESC LIMIT 1
SELECT airports.city, COUNT(*) as frequency FROM flights JOIN airports ON flights.sourceairport = airports.airportcode GROUP BY airports.city ORDER BY frequency DESC LIMIT 1
SELECT airports.city, COUNT(*) as frequency FROM flights JOIN airports ON flights.sourceairport = airports.airportcode GROUP BY airports.city ORDER BY frequency DESC LIMIT 1
SELECT airports.city, COUNT(*) as frequency FROM flights JOIN airports ON flights.sourceairport = airports.airportcode GROUP BY airports.city ORDER BY frequency DESC LIMIT 1
SELECT airports.city, COUNT(*) as frequency FROM flights JOIN airports ON flights.sourceairport = airports.airportcode GROUP BY airports.city ORDER BY frequency DESC LIMIT 1","SELECT airports.city, COUNT(*) as frequency FROM flights JOIN airports ON flights.sourceairport = airports.airportcode GROUP BY airports.city ORDER BY frequency DESC LIMIT 1"
362,754,What are the countries where either English or Dutch is the official language ?,world_1,extra,"select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  ""english"" and isofficial  =  ""t"" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  ""dutch"" and isofficial  =  ""t""",7,"SELECT country.name  FROM country  JOIN countrylanguage  ON country.code = countrylanguage.countrycode  WHERE (countrylanguage.language = 'English' OR countrylanguage.language = 'Dutch') AND countrylanguage.isofficial = 'T'
SELECT DISTINCT country.name  FROM country  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language IN ('English', 'Dutch') AND countrylanguage.isofficial = 'T'
SELECT country.name  FROM country  JOIN countrylanguage  ON country.code = countrylanguage.countrycode  WHERE (countrylanguage.language = 'English' OR countrylanguage.language = 'Dutch') AND countrylanguage.isofficial = 'T'
SELECT country.name  FROM country  JOIN countrylanguage  ON country.code = countrylanguage.countrycode  WHERE (countrylanguage.language = 'English' OR countrylanguage.language = 'Dutch') AND countrylanguage.isofficial = 'T'
SELECT country.name  FROM country  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE (countrylanguage.language = 'English' OR countrylanguage.language = 'Dutch') AND countrylanguage.isofficial = 'T'
SELECT country.name  FROM country  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE (countrylanguage.language = 'English' OR countrylanguage.language = 'Dutch') AND countrylanguage.isofficial = 'T'
SELECT DISTINCT country.name  FROM country  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE (countrylanguage.language = 'English' OR countrylanguage.language = 'Dutch') AND countrylanguage.isofficial = 'T'",SELECT country.name  FROM country  JOIN countrylanguage  ON country.code = countrylanguage.countrycode  WHERE (countrylanguage.language = 'English' OR countrylanguage.language = 'Dutch') AND countrylanguage.isofficial = 'T'
363,30,Show countries where a singer above age 40 and a singer below 30 are from.,concert_singer,hard,SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30,7,"SELECT DISTINCT s.country  FROM singer AS s  JOIN singer_in_concert ASsic ON s.singer_id =sic.singer_id  JOIN concert AS c ON c.concert_id =sic.concert_id  WHERE s.age > 40  INTERSECT  SELECT DISTINCT s.country  FROM singer AS s  JOIN singer_in_concert ASsic ON s.singer_id =sic.singer_id  JOIN concert AS c ON c.concert_id =sic.concert_id  WHERE s.age < 30
SELECT DISTINCT s.country  FROM singer s  WHERE s.age > 40  INTERSECT  SELECT DISTINCT s.country  FROM singer s  WHERE s.age < 30
SELECT DISTINCT s.country  FROM singer AS s  JOIN singer_in_concert ASsic ON s.singer_id =  sic.singer_id  JOIN concert AS c ON c.concert_id = sic.concert_id  WHERE s.age > 40  INTERSECT  SELECT DISTINCT s.country  FROM singer AS s  JOIN singer_in_concert AS sic ON s.singer_id =  sic.singer_id  JOIN concert AS c ON c.concert_id = sic.concert_id  WHERE s.age < 30
SELECT DISTINCT s.country  FROM singer AS s  JOIN singer_in_concert AS sic ON s.singer_id = sic.singer_id  JOIN concert AS c ON sic.concert_id = c.concert_id  WHERE s.age > 40  INTERSECT  SELECT DISTINCT s.country  FROM singer AS s  JOIN singer_in_concert AS sic ON s.singer_id = sic.singer_id  JOIN concert AS c ON sic.concert_id = c.concert_id  WHERE s.age < 30
SELECT DISTINCT s.country  FROM singer AS s  JOIN singer_in_concert ASsic ON s.singer_id =  sic.singer_id  JOIN concert AS c ON c.concert_id = sic.concert_id  WHERE s.age > 40  INTERSECT  SELECT DISTINCT s.country  FROM singer AS s  JOIN singer_in_concert AS sic ON s.singer_id =  sic.singer_id  JOIN concert AS c ON c.concert_id = sic.concert_id  WHERE s.age < 30
SELECT DISTINCT s.country  FROM singer AS s  JOIN singer_in_concert ASsic ON s.singer_id =sic.singer_id  JOIN concert AS c ON c.concert_id =sic.concert_id  WHERE s.age > 40  INTERSECT  SELECT DISTINCT s.country  FROM singer AS s  JOIN singer_in_concert ASsic ON s.singer_id =sic.singer_id  JOIN concert AS c ON c.concert_id =sic.concert_id  WHERE s.age < 30
SELECT DISTINCT s.country FROM singer AS s WHERE s.age < 30 INTERSECT SELECT DISTINCT s.country FROM singer AS s WHERE s.age > 40",SELECT DISTINCT s.country  FROM singer AS s  JOIN singer_in_concert ASsic ON s.singer_id =sic.singer_id  JOIN concert AS c ON c.concert_id =sic.concert_id  WHERE s.age > 40  INTERSECT  SELECT DISTINCT s.country  FROM singer AS s  JOIN singer_in_concert ASsic ON s.singer_id =sic.singer_id  JOIN concert AS c ON c.concert_id =sic.concert_id  WHERE s.age < 30
364,223,Which city has most number of departing flights?,flight_2,extra,SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1,7,"SELECT airports.city, COUNT(flights.sourceairport) AS num_departing_flights FROM airports JOIN flights ON airports.airportcode = flights.sourceairport GROUP BY airports.city ORDER BY num_departing_flights DESC LIMIT 1
SELECT airports.city, COUNT(flights.sourceairport) AS DepartingFlights FROM airports JOIN flights ON airports.airportcode = flights.sourceairport GROUP BY airports.city ORDER BY DepartingFlights DESC LIMIT 1
SELECT airports.city, COUNT(flights.sourceairport) as DepartingFlights FROM airports JOIN flights ON airports.airportcode = flights.sourceairport GROUP BY airports.city ORDER BY DepartingFlights DESC LIMIT 1
SELECT airports.city, COUNT(flights.sourceairport) AS num_departing_flights FROM airports JOIN flights ON airports.airportcode = flights.sourceairport GROUP BY airports.city ORDER BY num_departing_flights DESC LIMIT 1
SELECT airports.city, COUNT(flights.sourceairport) as DepartingFlights FROM airports JOIN flights ON airports.airportcode = flights.sourceairport GROUP BY airports.city ORDER BY DepartingFlights DESC LIMIT 1
SELECT airports.city, COUNT(flights.sourceairport) as DepartingFlights FROM airports JOIN flights ON airports.airportcode = flights.sourceairport GROUP BY airports.city ORDER BY DepartingFlights DESC LIMIT 1
SELECT airports.city, COUNT(flights.sourceairport) AS num_departing_flights FROM airports JOIN flights ON airports.airportcode = flights.sourceairport GROUP BY airports.city ORDER BY num_departing_flights DESC LIMIT 1","SELECT airports.city, COUNT(flights.sourceairport) AS num_departing_flights FROM airports JOIN flights ON airports.airportcode = flights.sourceairport GROUP BY airports.city ORDER BY num_departing_flights DESC LIMIT 1"
365,474,How many players are from each country?,wta_1,medium,"SELECT count(*) ,  country_code FROM players GROUP BY country_code",7,"SELECT country_code, COUNT(*) as num_players FROM players GROUP BY country_code
SELECT country_code, COUNT(*) as num_players FROM players GROUP BY country_code
SELECT country_code, COUNT(*) as num_players FROM players GROUP BY country_code
SELECT country_code, COUNT(*) as num_players FROM players GROUP BY country_code
SELECT country_code, COUNT(*) as num_players FROM players GROUP BY country_code
SELECT country_code, COUNT(*) as num_players FROM players GROUP BY country_code
SELECT country_code, COUNT(*) as num_players FROM players GROUP BY country_code","SELECT country_code, COUNT(*) as num_players FROM players GROUP BY country_code"
366,978,How many dogs have not gone through any treatment?,dog_kennels,extra,SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments ),7,"SELECT COUNT(*) FROM dogs  LEFT JOIN treatments ON dogs.dog_id = treatments.dog_id  WHERE treatments.dog_id IS NULL AND dogs.breed_code = 'breed_code'
SELECT COUNT(*) FROM dogs  LEFT JOIN treatments ON dogs.dog_id = treatments.dog_id  WHERE treatments.dog_id IS NULL AND dogs.breed_code = 'breed_code'
SELECT COUNT(*) FROM dogs  LEFT JOIN treatments ON dogs.dog_id = treatments.dog_id  WHERE treatments.dog_id IS NULL AND dogs.breed_code = 'breed_code'
SELECT COUNT(*) FROM dogs  LEFT JOIN treatments ON dogs.dog_id = treatments.dog_id  WHERE treatments.dog_id IS NULL AND dogs.breed_code = 'breed_code'
SELECT COUNT(*) FROM dogs  LEFT JOIN treatments ON dogs.dog_id = treatments.dog_id  WHERE treatments.dog_id IS NULL AND dogs.abandoned_yn = 'N'
SELECT COUNT(*) FROM dogs  LEFT JOIN treatments ON dogs.dog_id = treatments.dog_id  WHERE treatments.dog_id IS NULL AND dogs.breed_code = 'breed_code'
SELECT COUNT(*) FROM dogs  LEFT JOIN treatments ON dogs.dog_id = treatments.dog_id  WHERE treatments.dog_id IS NULL AND dogs.breed_code = 'breed_code'",SELECT COUNT(*) FROM dogs  LEFT JOIN treatments ON dogs.dog_id = treatments.dog_id  WHERE treatments.dog_id IS NULL AND dogs.breed_code = 'breed_code'
367,435,Find the average age of losers and winners of all matches.,wta_1,medium,"SELECT avg(loser_age) ,  avg(winner_age) FROM matches",7,"SELECT AVG(loser_age) AS average_loser_age, AVG(winner_age) AS average_winner_age FROM matches
SELECT AVG(loser_age) AS average_loser_age, AVG(winner_age) AS average_winner_age FROM matches
SELECT AVG(loser_age) AS average_loser_age, AVG(winner_age) AS average_winner_age FROM matches
SELECT AVG(loser_age) AS average_loser_age, AVG(winner_age) AS average_winner_age FROM matches
SELECT AVG(loser_age) AS average_loser_age, AVG(winner_age) AS average_winner_age FROM matches
SELECT AVG(loser_age) AS average_loser_age, AVG(winner_age) AS average_winner_age FROM matches
SELECT AVG(loser_age) AS average_loser_age, AVG(winner_age) AS average_winner_age FROM matches","SELECT AVG(loser_age) AS average_loser_age, AVG(winner_age) AS average_winner_age FROM matches"
368,356,Return the ids corresponding to templates with the description 'Presentation'.,cre_Doc_Template_Mgt,medium,"SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  ""Presentation""",7,"SELECT templates.template_id  FROM templates  INNER JOIN ref_template_types  ON templates.template_type_code = ref_template_types.template_type_code  WHERE ref_template_types.template_type_description = 'Presentation'
SELECT templates.template_id  FROM templates  INNER JOIN ref_template_types  ON templates.template_type_code = ref_template_types.template_type_code  WHERE ref_template_types.template_type_description = 'Presentation'
SELECT templates.template_id  FROM templates  INNER JOIN ref_template_types  ON templates.template_type_code = ref_template_types.template_type_code  WHERE ref_template_types.template_type_description = 'Presentation'
SELECT templates.template_id FROM templates INNER JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE ref_template_types.template_type_description = 'Presentation'
SELECT templates.template_id FROM templates INNER JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE ref_template_types.template_type_description = 'Presentation'
SELECT templates.template_id  FROM templates  INNER JOIN ref_template_types  ON templates.template_type_code = ref_template_types.template_type_code  WHERE ref_template_types.template_type_description = 'Presentation'
SELECT templates.template_id  FROM templates  INNER JOIN ref_template_types  ON templates.template_type_code = ref_template_types.template_type_code  WHERE ref_template_types.template_type_description = 'Presentation'",SELECT templates.template_id  FROM templates  INNER JOIN ref_template_types  ON templates.template_type_code = ref_template_types.template_type_code  WHERE ref_template_types.template_type_description = 'Presentation'
369,998,List the first name of all the professionals along with the description of the treatment they have done.,dog_kennels,medium,"SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code",7,"SELECT professionals.first_name, treatment_types.treatment_type_description FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code
SELECT professionals.first_name, treatment_types.treatment_type_description FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code
SELECT professionals.first_name, treatment_types.treatment_type_description FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code
SELECT professionals.first_name, treatment_types.treatment_type_description FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code
SELECT professionals.first_name, treatment_types.treatment_type_description FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code
SELECT professionals.first_name, treatment_types.treatment_type_description FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code
SELECT professionals.first_name, treatment_types.treatment_type_description FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code","SELECT professionals.first_name, treatment_types.treatment_type_description FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code"
370,146,"In 1980, how many cars were made?",car_1,easy,SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;,7,"SELECT COUNT(*) FROM cars_data WHERE year = 1980
SELECT COUNT(*) FROM cars_data WHERE year = 1980
SELECT COUNT(*) FROM cars_data WHERE year = 1980
SELECT COUNT(*) FROM cars_data WHERE year = 1980
SELECT COUNT(*) FROM cars_data WHERE year = 1980
SELECT COUNT(*) FROM cars_data WHERE year = 1980
SELECT COUNT(*) FROM cars_data WHERE year = 1980",SELECT COUNT(*) FROM cars_data WHERE year = 1980
371,73,Find the average weight for each pet type.,pets_1,medium,"SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype",7,"SELECT pettype, AVG(weight) as AverageWeight FROM pets GROUP BY pettype
SELECT pettype, AVG(weight) as AverageWeight FROM pets GROUP BY pettype
SELECT pettype, AVG(weight) as AverageWeight FROM pets GROUP BY pettype
SELECT pettype, AVG(weight) as AverageWeight FROM pets GROUP BY pettype
SELECT pettype, AVG(weight) as AverageWeight FROM pets GROUP BY pettype
SELECT pettype, AVG(weight) as average_weight FROM pets GROUP BY pettype
SELECT pettype, AVG(weight) as AverageWeight FROM pets GROUP BY pettype","SELECT pettype, AVG(weight) as AverageWeight FROM pets GROUP BY pettype"
372,374,Return the id and name of the document with the most paragraphs.,cre_Doc_Template_Mgt,extra,"SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT documents.document_id, documents.document_name, COUNT(paragraphs.paragraph_id) AS paragraph_count FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id, documents.document_name ORDER BY paragraph_count DESC LIMIT 1
SELECT documents.document_id, documents.document_name, COUNT(paragraphs.paragraph_id) AS paragraph_count FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id, documents.document_name ORDER BY paragraph_count DESC LIMIT 1
SELECT documents.document_id, documents.document_name, COUNT(paragraphs.paragraph_id) AS paragraph_count FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id, documents.document_name ORDER BY paragraph_count DESC LIMIT 1
SELECT documents.document_id, documents.document_name, COUNT(paragraphs.paragraph_id) AS paragraph_count FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id, documents.document_name ORDER BY paragraph_count DESC LIMIT 1
SELECT documents.document_id, documents.document_name, COUNT(paragraphs.paragraph_id) AS paragraph_count FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id, documents.document_name ORDER BY paragraph_count DESC LIMIT 1
SELECT documents.document_id, documents.document_name, COUNT(paragraphs.paragraph_id) AS paragraph_count FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id, documents.document_name ORDER BY paragraph_count DESC LIMIT 1
SELECT documents.document_id, documents.document_name, COUNT(paragraphs.paragraph_id) AS paragraph_count FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id, documents.document_name ORDER BY paragraph_count DESC LIMIT 1","SELECT documents.document_id, documents.document_name, COUNT(paragraphs.paragraph_id) AS paragraph_count FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id, documents.document_name ORDER BY paragraph_count DESC LIMIT 1"
373,758,Which languages are spoken by only one country in republic governments?,world_1,hard,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  ""Republic"" GROUP BY T2.Language HAVING COUNT(*)  =  1",7,"SELECT language  FROM countrylanguage  INNER JOIN (SELECT countrycode FROM countrylanguage GROUP BY countrycode HAVING COUNT(countrycode) = 1) AS single_country_languages  ON countrylanguage.countrycode = single_country_languages.countrycode  INNER JOIN country  ON single_country_languages.countrycode = country.code  WHERE governmentform = 'Republic' 
SELECT language  FROM countrylanguage  INNER JOIN (SELECT countrycode FROM countrylanguage GROUP BY countrycode HAVING COUNT(countrycode) = 1) AS single_country_languages  ON countrylanguage.countrycode = single_country_languages.countrycode  INNER JOIN country  ON single_country_languages.countrycode = country.code  WHERE governmentform = 'Republic' 
SELECT language  FROM countrylanguage  INNER JOIN (SELECT countrycode FROM countrylanguage GROUP BY countrycode HAVING COUNT(countrycode) = 1) AS single_country_languages  ON countrylanguage.countrycode = single_country_languages.countrycode  INNER JOIN country  ON single_country_languages.countrycode = country.code  WHERE governmentform = 'Republic' 
SELECT language  FROM countrylanguage  INNER JOIN (SELECT countrycode FROM countrylanguage GROUP BY countrycode HAVING COUNT(countrycode) = 1) AS single_country_languages  ON countrylanguage.countrycode = single_country_languages.countrycode  INNER JOIN country  ON single_country_languages.countrycode = country.code  WHERE governmentform = 'Republic' 
SELECT language  FROM countrylanguage  INNER JOIN (SELECT countrycode FROM countrylanguage GROUP BY countrycode HAVING COUNT(countrycode) = 1) AS single_country_languages  ON countrylanguage.countrycode = single_country_languages.countrycode  WHERE governmentform = 'Republic'
SELECT language  FROM countrylanguage  INNER JOIN (SELECT countrycode FROM countrylanguage GROUP BY countrycode HAVING COUNT(countrycode) = 1) AS single_country_languages  ON countrylanguage.countrycode = single_country_languages.countrycode  WHERE governmentform = 'Republic'
SELECT language  FROM countrylanguage  INNER JOIN (SELECT countrycode FROM countrylanguage GROUP BY countrycode HAVING COUNT(countrycode) = 1) AS single_country_countries  ON countrylanguage.countrycode = single_country_countries.countrycode  INNER JOIN country  ON single_country_countries.countrycode = country.code  WHERE governmentform = 'Republic' ",SELECT language  FROM countrylanguage  INNER JOIN (SELECT countrycode FROM countrylanguage GROUP BY countrycode HAVING COUNT(countrycode) = 1) AS single_country_languages  ON countrylanguage.countrycode = single_country_languages.countrycode  INNER JOIN country  ON single_country_languages.countrycode = country.code  WHERE governmentform = 'Republic' 
374,757,What is the language that is used by the largest number of Asian nations?,world_1,extra,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  ""Asia"" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",7,"SELECT language FROM countrylanguage GROUP BY language HAVING COUNT(countrycode) = (SELECT MAX(AsianCountries) FROM (SELECT COUNT(countrycode) AS AsianCountries FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE continent = 'Asia') GROUP BY language))
SELECT language FROM countrylanguage GROUP BY language HAVING COUNT(countrycode) = (SELECT MAX(n) FROM (SELECT COUNT(countrycode) AS n FROM countrylanguage GROUP BY language))
SELECT language FROM countrylanguage  JOIN country ON country.code = countrylanguage.countrycode  WHERE continent = 'Asia'  GROUP BY language  ORDER BY COUNT(*) DESC  LIMIT 1
SELECT language FROM countrylanguage GROUP BY language HAVING COUNT(countrycode) = (SELECT MAX(AsianCountries) FROM (SELECT COUNT(countrycode) AS AsianCountries FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE continent = 'Asia') GROUP BY language))
SELECT language FROM countrylanguage GROUP BY language HAVING COUNT(countrycode) = (SELECT MAX(AsianCountries) FROM (SELECT COUNT(countrycode) AS AsianCountries FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE continent = 'Asia') GROUP BY language))
SELECT language FROM countrylanguage JOIN country ON country.code = countrylanguage.countrycode WHERE continent = 'Asia' GROUP BY language ORDER BY COUNT(*) DESC LIMIT 1
SELECT language FROM countrylanguage GROUP BY language HAVING COUNT(countrycode) = (SELECT MAX(nations) FROM (SELECT COUNT(countrycode) as nations FROM countrylanguage GROUP BY language)) LIMIT 1",SELECT language FROM countrylanguage GROUP BY language HAVING COUNT(countrycode) = (SELECT MAX(AsianCountries) FROM (SELECT COUNT(countrycode) AS AsianCountries FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE continent = 'Asia') GROUP BY language))
375,176,What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars?,car_1,extra,"SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;",7,"SELECT car_makers.id, car_makers.maker FROM car_makers JOIN (     SELECT maker, COUNT(DISTINCT model) AS model_count, COUNT(DISTINCT id) AS car_count     FROM model_list     JOIN car_names ON model_list.modelid = car_names.makeid     GROUP BY maker ) AS subquery ON car_makers.id = subquery.maker WHERE subquery.model_count >= 2 AND subquery.car_count > 3
SELECT car_makers.id, car_makers.maker FROM car_makers JOIN (     SELECT maker, COUNT(DISTINCT model) AS model_count, COUNT(DISTINCT id) AS car_count     FROM model_list     JOIN car_names ON model_list.modelid = car_names.makeid     GROUP BY maker ) AS subquery ON car_makers.id = subquery.maker WHERE subquery.model_count >= 2 AND subquery.car_count > 3
SELECT car_makers.id, car_makers.maker FROM car_makers JOIN (     SELECT maker, COUNT(DISTINCT model) AS model_count, COUNT(DISTINCT id) AS car_count     FROM model_list     JOIN car_names ON model_list.modelid = car_names.makeid     GROUP BY maker ) AS subquery ON car_makers.id = subquery.maker WHERE subquery.model_count >= 2 AND subquery.car_count > 3
SELECT car_makers.id, car_makers.maker FROM car_makers JOIN (     SELECT maker, COUNT(DISTINCT model) AS model_count, COUNT(DISTINCT id) AS car_count     FROM model_list     JOIN car_names ON model_list.modelid = car_names.makeid     GROUP BY maker ) AS subquery ON car_makers.id = subquery.maker WHERE subquery.model_count >= 2 AND subquery.car_count > 3
SELECT car_makers.id, car_makers.maker FROM car_makers JOIN (     SELECT maker, COUNT(DISTINCT model) AS model_count, COUNT(DISTINCT id) AS car_count     FROM model_list     JOIN car_names ON model_list.modelid = car_names.makeid     GROUP BY maker ) AS subquery ON car_makers.id = subquery.maker WHERE subquery.model_count >= 2 AND subquery.car_count > 3
SELECT car_makers.id, car_makers.maker FROM car_makers JOIN (     SELECT maker, COUNT(DISTINCT model) AS model_count, COUNT(DISTINCT id) AS car_count     FROM model_list     JOIN car_names ON model_list.modelid = car_names.makeid     GROUP BY maker ) AS subquery ON car_makers.id = subquery.maker WHERE subquery.model_count >= 2 AND subquery.car_count > 3
SELECT car_makers.id, car_makers.maker FROM car_makers JOIN (     SELECT maker, COUNT(DISTINCT model) AS model_count, COUNT(DISTINCT id) AS car_count     FROM model_list     JOIN car_names ON model_list.modelid = car_names.makeid     GROUP BY maker ) AS subquery ON car_makers.id = subquery.maker WHERE subquery.model_count >= 2 AND subquery.car_count > 3","SELECT car_makers.id, car_makers.maker FROM car_makers JOIN (     SELECT maker, COUNT(DISTINCT model) AS model_count, COUNT(DISTINCT id) AS car_count     FROM model_list     JOIN car_names ON model_list.modelid = car_names.makeid     GROUP BY maker ) AS subquery ON car_makers.id = subquery.maker WHERE subquery.model_count >= 2 AND subquery.car_count > 3"
376,829,"Return the record companies of orchestras, sorted descending by the years in which they were founded.",orchestra,easy,SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC,7,"SELECT orchestra.record_company  FROM orchestra  JOIN conductor ON orchestra.conductor_id = conductor.conductor_id  ORDER BY orchestra.year_of_founded DESC
SELECT orchestra.record_company  FROM orchestra  JOIN conductor ON orchestra.conductor_id = conductor.conductor_id  ORDER BY orchestra.year_of_founded DESC
SELECT orchestra.record_company  FROM orchestra  JOIN conductor ON orchestra.conductor_id = conductor.conductor_id  ORDER BY orchestra.year_of_founded DESC
SELECT orchestra.record_company  FROM orchestra  INNER JOIN conductor ON orchestra.conductor_id = conductor.conductor_id  ORDER BY orchestra.year_of_founded DESC
SELECT orchestra.record_company  FROM orchestra  JOIN conductor ON orchestra.conductor_id = conductor.conductor_id  ORDER BY orchestra.year_of_founded DESC
SELECT orchestra.record_company  FROM orchestra  JOIN conductor ON orchestra.conductor_id = conductor.conductor_id  ORDER BY orchestra.year_of_founded DESC
SELECT orchestra.record_company  FROM orchestra  JOIN conductor ON orchestra.conductor_id = conductor.conductor_id  ORDER BY orchestra.year_of_founded DESC",SELECT orchestra.record_company  FROM orchestra  JOIN conductor ON orchestra.conductor_id = conductor.conductor_id  ORDER BY orchestra.year_of_founded DESC
377,652,What are the final tables made and best finishes for all poker players?,poker_player,medium,"SELECT Final_Table_Made ,  Best_Finish FROM poker_player",7,"SELECT poker_player.poker_player_id, people.name, poker_player.final_table_made, poker_player.best_finish FROM poker_player INNER JOIN people ON poker_player.people_id = people.people_id
SELECT poker_player.poker_player_id, people.name, poker_player.final_table_made, poker_player.best_finish FROM poker_player INNER JOIN people ON poker_player.people_id = people.people_id
SELECT poker_player.poker_player_id, people.name, poker_player.final_table_made, poker_player.best_finish FROM poker_player JOIN people ON poker_player.people_id = people.people_id
SELECT poker_player.poker_player_id, people.name, poker_player.final_table_made, poker_player.best_finish FROM poker_player JOIN people ON poker_player.people_id = people.people_id
SELECT poker_player.poker_player_id, people.name, poker_player.final_table_made, poker_player.best_finish FROM poker_player JOIN people ON poker_player.people_id = people.people_id
SELECT poker_player.poker_player_id, people.name, poker_player.final_table_made, poker_player.best_finish FROM poker_player INNER JOIN people ON poker_player.people_id = people.people_id
SELECT poker_player.poker_player_id, people.name, poker_player.final_table_made, poker_player.best_finish FROM poker_player JOIN people ON poker_player.people_id = people.people_id","SELECT poker_player.poker_player_id, people.name, poker_player.final_table_made, poker_player.best_finish FROM poker_player JOIN people ON poker_player.people_id = people.people_id"
378,272,What are the minimum and maximum number of products across all the shops?,employee_hire_evaluation,medium,"SELECT min(Number_products) ,  max(Number_products) FROM shop",7,"SELECT MIN(number_products), MAX(number_products) FROM shop
SELECT MIN(number_products), MAX(number_products) FROM shop
SELECT MIN(number_products), MAX(number_products) FROM shop
SELECT MIN(number_products), MAX(number_products) FROM shop
SELECT MIN(number_products), MAX(number_products) FROM shop
SELECT MIN(number_products), MAX(number_products) FROM shop
SELECT MIN(number_products), MAX(number_products) FROM shop","SELECT MIN(number_products), MAX(number_products) FROM shop"
379,196,Return the number of airlines in the USA.,flight_2,easy,"SELECT count(*) FROM AIRLINES WHERE Country  =  ""USA""",7,"SELECT COUNT(*) FROM airlines WHERE country = 'USA'
SELECT COUNT(*) FROM airlines WHERE country='USA'
SELECT COUNT(*) FROM airlines WHERE country='USA'
SELECT COUNT(*) FROM airlines WHERE country='USA'
SELECT COUNT(*) FROM airlines WHERE country = 'USA'
SELECT COUNT(*) FROM airlines WHERE country = 'USA'
SELECT COUNT(*) FROM airlines WHERE country = 'USA'",SELECT COUNT(*) FROM airlines WHERE country = 'USA'
380,907,Give the name of the student with the most likes.,network_1,extra,SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,7,"SELECT highschooler.name FROM highschooler  INNER JOIN likes ON highschooler.id = likes.student_id  GROUP BY highschooler.name  ORDER BY COUNT(likes.liked_id) DESC  LIMIT 1
SELECT highschooler.name FROM highschooler  JOIN likes ON highschooler.id = likes.student_id  GROUP BY highschooler.name  ORDER BY COUNT(likes.liked_id) DESC  LIMIT 1
SELECT highschooler.name FROM highschooler  JOIN likes ON highschooler.id = likes.student_id  GROUP BY highschooler.name  ORDER BY COUNT(likes.liked_id) DESC  LIMIT 1
SELECT highschooler.name FROM highschooler JOIN likes ON highschooler.id = likes.student_id GROUP BY highschooler.name ORDER BY COUNT(likes.liked_id) DESC LIMIT 1
SELECT highschooler.name FROM highschooler INNER JOIN likes ON highschooler.id = likes.student_id GROUP BY highschooler.name ORDER BY COUNT(*) DESC LIMIT 1
SELECT highschooler.name FROM highschooler INNER JOIN likes ON highschooler.id = likes.student_id GROUP BY highschooler.name ORDER BY COUNT(likes.liked_id) DESC LIMIT 1
SELECT highschooler.name FROM highschooler  JOIN likes ON highschooler.id = likes.student_id  GROUP BY highschooler.name  ORDER BY COUNT(likes.liked_id) DESC  LIMIT 1",SELECT highschooler.name FROM highschooler  JOIN likes ON highschooler.id = likes.student_id  GROUP BY highschooler.name  ORDER BY COUNT(likes.liked_id) DESC  LIMIT 1
381,885,What are the names of the high schoolers and how many friends does each have?,network_1,medium,"SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",7,"SELECT h.name, COUNT(f.friend_id) as num_friends FROM highschooler h LEFT JOIN friend f ON h.id = f.student_id WHERE h.grade >= 9 AND h.grade <= 12 GROUP BY h.id
SELECT highschooler.name, COUNT(friend.friend_id) as num_friends FROM highschooler LEFT JOIN friend ON highschooler.id = friend.student_id WHERE highschooler.grade >= 9 AND highschooler.grade <= 12 GROUP BY highschooler.id
SELECT h.name, COUNT(f.friend_id) as num_friends FROM highschooler h LEFT JOIN friend f ON h.id = f.student_id WHERE h.grade >= 9 AND h.grade <= 12 GROUP BY h.id
SELECT h.name, COUNT(f.friend_id) as num_friends FROM highschooler h LEFT JOIN friend f ON h.id = f.student_id WHERE h.grade >= 9 AND h.grade <= 12 GROUP BY h.id
SELECT h.name, COUNT(f.friend_id) as num_friends FROM highschooler h LEFT JOIN friend f ON h.id = f.student_id WHERE h.grade >= 9 AND h.grade <= 12 GROUP BY h.id
SELECT h.name, COUNT(f.friend_id) as num_friends FROM highschooler h LEFT JOIN friend f ON h.id = f.student_id WHERE h.grade >= 9 AND h.grade <= 12 GROUP BY h.id
SELECT highschooler.name, COUNT(friend.friend_id) as num_friends FROM highschooler LEFT JOIN friend ON highschooler.id = friend.student_id WHERE highschooler.grade BETWEEN 9 AND 12 GROUP BY highschooler.id","SELECT h.name, COUNT(f.friend_id) as num_friends FROM highschooler h LEFT JOIN friend f ON h.id = f.student_id WHERE h.grade >= 9 AND h.grade <= 12 GROUP BY h.id"
382,948,List the cost of each treatment and the corresponding treatment type description.,dog_kennels,medium,"SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code",7,"SELECT t.cost_of_treatment, tt.treatment_type_description FROM treatments t JOIN treatment_types tt ON t.treatment_type_code = tt.treatment_type_code
SELECT charges.charge_amount, treatment_types.treatment_type_description FROM charges JOIN treatment_types ON charges.charge_type = treatment_types.treatment_type_code
SELECT charges.charge_amount, treatment_types.treatment_type_description FROM charges JOIN treatment_types ON charges.charge_type = treatment_types.treatment_type_code
SELECT t.cost_of_treatment, tt.treatment_type_description FROM treatments t JOIN treatment_types tt ON t.treatment_type_code = tt.treatment_type_code
SELECT charges.charge_amount, treatment_types.treatment_type_description FROM charges JOIN treatment_types ON charges.charge_type = treatment_types.treatment_type_code
SELECT t.cost_of_treatment, tt.treatment_type_description FROM treatments t JOIN treatment_types tt ON t.treatment_type_code = tt.treatment_type_code
SELECT t.cost_of_treatment, tt.treatment_type_description FROM treatments t JOIN treatment_types tt ON t.treatment_type_code = tt.treatment_type_code","SELECT t.cost_of_treatment, tt.treatment_type_description FROM treatments t JOIN treatment_types tt ON t.treatment_type_code = tt.treatment_type_code"
383,964,What are the arriving date and the departing date of all the dogs?,dog_kennels,medium,"SELECT date_arrived ,  date_departed FROM Dogs",7,"SELECT date_arrived, date_departed FROM dogs
SELECT date_arrived, date_departed FROM dogs
SELECT date_arrived, date_departed FROM dogs
SELECT date_arrived, date_departed FROM dogs
SELECT date_arrived, date_departed FROM dogs
SELECT date_arrived, date_departed FROM dogs
SELECT date_arrived, date_departed FROM dogs","SELECT date_arrived, date_departed FROM dogs"
384,266,Find the cities that have more than one employee under age 30.,employee_hire_evaluation,medium,SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1,7,"SELECT employee.city  FROM employee  WHERE employee.age < 30  GROUP BY employee.city  HAVING COUNT(employee.employee_id) > 1
SELECT employee.city  FROM employee  WHERE employee.age < 30  GROUP BY employee.city  HAVING COUNT(employee.employee_id) > 1
SELECT employee.city  FROM employee  WHERE employee.age < 30  GROUP BY employee.city  HAVING COUNT(employee.employee_id) > 1
SELECT employee.city  FROM employee  WHERE employee.age < 30  GROUP BY employee.city  HAVING COUNT(employee.employee_id) > 1
SELECT employee.city  FROM employee  WHERE employee.age < 30  GROUP BY employee.city  HAVING COUNT(employee.employee_id) > 1
SELECT employee.city  FROM employee  WHERE employee.age < 30  GROUP BY employee.city  HAVING COUNT(employee.employee_id) > 1
SELECT employee.city  FROM employee  WHERE employee.age < 30  GROUP BY employee.city  HAVING COUNT(employee.employee_id) > 1",SELECT employee.city  FROM employee  WHERE employee.age < 30  GROUP BY employee.city  HAVING COUNT(employee.employee_id) > 1
385,897,What are the names of students who have no friends?,network_1,hard,SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id,7,"SELECT name FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend) AND id NOT IN (SELECT friend_id FROM friend)
SELECT name FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend) AND id NOT IN (SELECT friend_id FROM friend)
SELECT name FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend) AND id NOT IN (SELECT friend_id FROM friend)
SELECT name FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend) AND id NOT IN (SELECT friend_id FROM friend)
SELECT name FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend) AND id NOT IN (SELECT friend_id FROM friend)
SELECT name FROM highschooler  LEFT JOIN friend ON highschooler.id = friend.student_id  WHERE friend.student_id IS NULL
SELECT name FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend) AND id NOT IN (SELECT friend_id FROM friend)",SELECT name FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend) AND id NOT IN (SELECT friend_id FROM friend)
386,649,List the earnings of poker players in descending order.,poker_player,easy,SELECT Earnings FROM poker_player ORDER BY Earnings DESC,7,"SELECT earnings FROM poker_player ORDER BY earnings DESC
SELECT earnings FROM poker_player ORDER BY earnings DESC
SELECT earnings FROM poker_player ORDER BY earnings DESC
SELECT earnings FROM poker_player ORDER BY earnings DESC
SELECT earnings FROM poker_player ORDER BY earnings DESC
SELECT earnings FROM poker_player ORDER BY earnings DESC
SELECT earnings FROM poker_player ORDER BY earnings DESC",SELECT earnings FROM poker_player ORDER BY earnings DESC
387,384,What are the names of the teachers ordered by ascending age?,course_teach,easy,SELECT Name FROM teacher ORDER BY Age ASC,7,"SELECT teacher.name FROM teacher INNER JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id ORDER BY teacher.age ASC
SELECT teacher.name FROM teacher INNER JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id ORDER BY teacher.age ASC
SELECT teacher.name FROM teacher INNER JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id ORDER BY teacher.age ASC
SELECT teacher.name FROM teacher INNER JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id ORDER BY teacher.age ASC
SELECT teacher.name FROM teacher INNER JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id ORDER BY teacher.age ASC
SELECT teacher.name  FROM teacher  JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id  ORDER BY teacher.age ASC
SELECT teacher.name FROM teacher  INNER JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id  ORDER BY teacher.age ASC",SELECT teacher.name FROM teacher INNER JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id ORDER BY teacher.age ASC
388,645,find the package option of the tv channel that do not have any cartoon directed by Ben Jones.,tvshow,hard,SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'),7,"SELECT tv_channel.package_option FROM tv_channel LEFT JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.directed_by != 'Ben Jones' OR cartoon.directed_by IS NULL
SELECT tv_channel.package_option  FROM tv_channel  LEFT JOIN cartoon ON tv_channel.id = cartoon.channel  WHERE cartoon.directed_by != 'Ben Jones' OR cartoon.directed_by IS NULL
SELECT tv_channel.package_option FROM tv_channel LEFT JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.directed_by != 'Ben Jones' OR cartoon.directed_by IS NULL
SELECT tv_channel.package_option FROM tv_channel LEFT JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.directed_by != 'Ben Jones' OR cartoon.directed_by IS NULL
SELECT tv_channel.package_option FROM tv_channel LEFT JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.directed_by != 'Ben Jones' OR cartoon.directed_by IS NULL
SELECT tv_channel.package_option FROM tv_channel LEFT JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.directed_by != 'Ben Jones' OR cartoon.directed_by IS NULL
SELECT tv_channel.package_option FROM tv_channel LEFT JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.directed_by != 'Ben Jones' OR cartoon.directed_by IS NULL",SELECT tv_channel.package_option FROM tv_channel LEFT JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.directed_by != 'Ben Jones' OR cartoon.directed_by IS NULL
389,665,What is the birth date of the poker player with the lowest earnings?,poker_player,hard,SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1,7,"SELECT people.birth_date  FROM people  INNER JOIN poker_player ON people.people_id = poker_player.people_id  WHERE poker_player.earnings = (SELECT MIN(earnings) FROM poker_player)
SELECT people.birth_date  FROM people  INNER JOIN poker_player ON people.people_id = poker_player.people_id  WHERE poker_player.earnings = (SELECT MIN(earnings) FROM poker_player)
SELECT people.birth_date  FROM people  INNER JOIN poker_player ON people.people_id = poker_player.people_id  WHERE poker_player.earnings = (SELECT MIN(earnings) FROM poker_player)
SELECT people.birth_date  FROM people  INNER JOIN poker_player ON people.people_id = poker_player.people_id  WHERE poker_player.earnings = (SELECT MIN(earnings) FROM poker_player)
SELECT people.birth_date  FROM people  INNER JOIN poker_player ON people.people_id = poker_player.people_id  WHERE poker_player.earnings = (SELECT MIN(earnings) FROM poker_player)
SELECT people.birth_date  FROM people  INNER JOIN poker_player ON people.people_id = poker_player.people_id  WHERE poker_player.earnings = (SELECT MIN(earnings) FROM poker_player)
SELECT people.birth_date  FROM people  INNER JOIN poker_player ON people.people_id = poker_player.people_id  WHERE poker_player.earnings = (SELECT MIN(earnings) FROM poker_player)",SELECT people.birth_date  FROM people  INNER JOIN poker_player ON people.people_id = poker_player.people_id  WHERE poker_player.earnings = (SELECT MIN(earnings) FROM poker_player)
390,671,What are the names of poker players in descending order of earnings?,poker_player,medium,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC,7,"SELECT people.name  FROM poker_player  JOIN people ON poker_player.people_id = people.people_id  ORDER BY poker_player.earnings DESC
SELECT people.name FROM poker_player INNER JOIN people ON poker_player.people_id = people.people_id ORDER BY poker_player.earnings DESC
SELECT people.name  FROM poker_player  JOIN people ON poker_player.people_id = people.people_id  ORDER BY poker_player.earnings DESC
SELECT people.name  FROM poker_player  JOIN people ON poker_player.people_id = people.people_id  ORDER BY poker_player.earnings DESC
SELECT people.name  FROM poker_player  JOIN people ON poker_player.people_id = people.people_id  ORDER BY poker_player.earnings DESC
SELECT people.name  FROM poker_player  JOIN people ON poker_player.people_id = people.people_id  ORDER BY poker_player.earnings DESC
SELECT people.name  FROM poker_player  JOIN people ON poker_player.people_id = people.people_id  ORDER BY poker_player.earnings DESC",SELECT people.name  FROM poker_player  JOIN people ON poker_player.people_id = people.people_id  ORDER BY poker_player.earnings DESC
391,524,What are the names and descriptions for all the sections?,student_transcripts_tracking,medium,"SELECT section_name ,  section_description FROM Sections",7,"SELECT section_name, section_description FROM sections
SELECT section_name, section_description FROM sections
SELECT section_name, section_description FROM sections
SELECT section_name, section_description FROM sections
SELECT section_name, section_description FROM sections
SELECT section_name, section_description FROM sections
SELECT section_name, section_description FROM sections","SELECT section_name, section_description FROM sections"
392,233,What are airlines that have some flight departing from airport 'AHD'?,flight_2,medium,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""AHD""",7,"SELECT airlines.airline FROM airlines INNER JOIN flights ON airlines.abbreviation = flights.airline WHERE flights.sourceairport = 'AHD'
SELECT airlines.airline FROM airlines INNER JOIN flights ON airlines.abbreviation = flights.airline WHERE flights.sourceairport = 'AHD'
SELECT airlines.airline FROM airlines JOIN flights ON airlines.abbreviation = flights.airline WHERE flights.sourceairport = 'AHD'
SELECT airlines.airline FROM airlines INNER JOIN flights ON airlines.abbreviation = flights.airline WHERE flights.sourceairport = 'AHD'
SELECT airlines.airline FROM airlines JOIN flights ON airlines.abbreviation = flights.airline WHERE flights.sourceairport = 'AHD'
SELECT airlines.airline FROM airlines INNER JOIN flights ON airlines.abbreviation = flights.airline WHERE flights.sourceairport = 'AHD'
SELECT airlines.airline FROM airlines JOIN flights ON airlines.abbreviation = flights.airline WHERE flights.sourceairport = 'AHD'",SELECT airlines.airline FROM airlines INNER JOIN flights ON airlines.abbreviation = flights.airline WHERE flights.sourceairport = 'AHD'
393,457,List the first and last name of all players who are left / L hand in the order of birth date.,wta_1,medium,"SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date",7,"SELECT first_name, last_name  FROM players  WHERE hand = 'L'  ORDER BY birth_date
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC
SELECT first_name, last_name  FROM players  WHERE hand = 'L'  ORDER BY birth_date
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC","SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC"
394,396,What is the most commmon hometowns for teachers?,course_teach,hard,SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1,7,"SELECT teacher.hometown, COUNT(*) as count FROM teacher INNER JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id GROUP BY teacher.hometown ORDER BY count DESC LIMIT 1
SELECT teacher.hometown, COUNT(*) as count FROM teacher INNER JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id GROUP BY teacher.hometown ORDER BY count DESC LIMIT 1
SELECT teacher.hometown, COUNT(*) as count FROM teacher INNER JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id GROUP BY teacher.hometown ORDER BY count DESC LIMIT 1
SELECT teacher.hometown, COUNT(*) as count FROM teacher INNER JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id GROUP BY teacher.hometown ORDER BY count DESC LIMIT 1
SELECT teacher.hometown, COUNT(*) as count FROM teacher INNER JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id GROUP BY teacher.hometown ORDER BY count DESC LIMIT 1
SELECT teacher.hometown, COUNT(*) as count FROM teacher INNER JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id GROUP BY teacher.hometown ORDER BY count DESC LIMIT 1
SELECT teacher.hometown, COUNT(*) as count FROM teacher INNER JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id GROUP BY teacher.hometown ORDER BY count DESC LIMIT 1","SELECT teacher.hometown, COUNT(*) as count FROM teacher INNER JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id GROUP BY teacher.hometown ORDER BY count DESC LIMIT 1"
395,226,What is the airport code of the airport with the most flights?,flight_2,extra,SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1,7,"SELECT airportcode FROM airports JOIN flights ON airports.airportcode = flights.destairport GROUP BY airports.airportcode ORDER BY COUNT(flights.destairport) DESC LIMIT 1
SELECT airportcode FROM airports JOIN flights ON airports.airportcode = flights.destairport GROUP BY airports.airportcode ORDER BY COUNT(*) DESC LIMIT 1
SELECT airportcode FROM airports JOIN flights ON airports.airportcode = flights.destairport GROUP BY airports.airportcode ORDER BY COUNT(*) DESC LIMIT 1
SELECT airportcode FROM airports JOIN flights ON airports.airportcode = flights.destairport GROUP BY airports.airportcode ORDER BY COUNT(flights.destairport) DESC LIMIT 1
SELECT airportcode FROM airports JOIN flights ON airports.airportcode = flights.destairport GROUP BY airports.airportcode ORDER BY COUNT(*) DESC LIMIT 1
SELECT airportcode FROM airports JOIN flights ON airports.airportcode = flights.destairport GROUP BY airports.airportcode ORDER BY COUNT(*) DESC LIMIT 1
SELECT airportcode FROM airports JOIN flights ON airports.airportcode = flights.destairport GROUP BY airports.airportcode ORDER BY COUNT(*) DESC LIMIT 1",SELECT airportcode FROM airports JOIN flights ON airports.airportcode = flights.destairport GROUP BY airports.airportcode ORDER BY COUNT(*) DESC LIMIT 1
396,802,What are names of countries with the top 3 largest population?,world_1,medium,SELECT Name FROM country ORDER BY Population DESC LIMIT 3,7,"SELECT name FROM country ORDER BY population DESC LIMIT 3
SELECT name FROM country ORDER BY population DESC LIMIT 3
SELECT name FROM country ORDER BY population DESC LIMIT 3
SELECT name FROM country ORDER BY population DESC LIMIT 3
SELECT name FROM country ORDER BY population DESC LIMIT 3
SELECT name FROM country ORDER BY population DESC LIMIT 3
SELECT name FROM country ORDER BY population DESC LIMIT 3",SELECT name FROM country ORDER BY population DESC LIMIT 3
397,761,What is the most populace city that speaks English?,world_1,extra,"SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  ""English"" ORDER BY T1.Population DESC LIMIT 1",7,"SELECT city.name, country.name, MAX(city.population) FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English' AND countrylanguage.isofficial = 'T' GROUP BY country.name ORDER BY MAX(city.population) DESC LIMIT 1
SELECT city.name, country.name, countrylanguage.language FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English' AND countrylanguage.isofficial = 'T' ORDER BY city.population DESC LIMIT 1
SELECT city.name, country.name, MAX(city.population) FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English' AND countrylanguage.isofficial = 'T' GROUP BY country.name ORDER BY MAX(city.population) DESC LIMIT 1
SELECT city.name, country.name, countrylanguage.language FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English' AND countrylanguage.isofficial = 'T' ORDER BY city.population DESC LIMIT 1
SELECT city.name, country.name, MAX(city.population) FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English' AND countrylanguage.isofficial = 'T' GROUP BY country.name ORDER BY MAX(city.population) DESC LIMIT 1
SELECT city.name, country.name, MAX(city.population) FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English' AND countrylanguage.isofficial = 'T' GROUP BY country.name ORDER BY MAX(city.population) DESC LIMIT 1
SELECT city.name, country.name FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English' AND countrylanguage.isofficial = 'T' ORDER BY city.population DESC LIMIT 1","SELECT city.name, country.name, MAX(city.population) FROM city JOIN country ON city.countrycode = country.code JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English' AND countrylanguage.isofficial = 'T' GROUP BY country.name ORDER BY MAX(city.population) DESC LIMIT 1"
398,41,Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015.,concert_singer,extra,"SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015",7,"SELECT stadium.name, stadium.location FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year IN (2014, 2015) GROUP BY stadium.stadium_id HAVING COUNT(DISTINCT concert.year) = 2
SELECT stadium.name, stadium.location FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year IN (2014, 2015) GROUP BY stadium.stadium_id HAVING COUNT(DISTINCT concert.year) = 2
SELECT stadium.name, stadium.location FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year IN (2014, 2015) GROUP BY stadium.stadium_id HAVING COUNT(DISTINCT concert.year) = 2
SELECT stadium.name, stadium.location  FROM stadium  JOIN concert ON stadium.stadium_id = concert.stadium_id  WHERE concert.year IN (2014, 2015)  GROUP BY stadium.stadium_id  HAVING COUNT(DISTINCT concert.year) = 2
SELECT stadium.name, stadium.location FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year IN (2014, 2015) GROUP BY stadium.stadium_id HAVING COUNT(DISTINCT concert.year) = 2
SELECT stadium.name, stadium.location FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year IN (2014, 2015) GROUP BY stadium.stadium_id HAVING COUNT(DISTINCT concert.year) = 2
SELECT stadium.name, stadium.location FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year IN (2014, 2015) GROUP BY stadium.stadium_id HAVING COUNT(DISTINCT concert.year) = 2","SELECT stadium.name, stadium.location FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year IN (2014, 2015) GROUP BY stadium.stadium_id HAVING COUNT(DISTINCT concert.year) = 2"
399,637,Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang?,tvshow,extra,"SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'",7,"SELECT tv_channel.series_name, tv_channel.country FROM tv_channel JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.directed_by IN ('Ben Jones', 'Michael Chang') AND tv_channel.content = 'cartoon'
SELECT tv_channel.series_name, tv_channel.country FROM tv_channel JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.directed_by IN ('Ben Jones', 'Michael Chang') AND tv_channel.content = 'cartoon'
SELECT tv_channel.series_name, tv_channel.country FROM tv_channel JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.directed_by IN ('Ben Jones', 'Michael Chang') AND tv_channel.content = 'cartoon'
SELECT tv_channel.series_name, tv_channel.country FROM tv_channel JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.directed_by IN ('Ben Jones', 'Michael Chang') AND tv_channel.content = 'cartoon'
SELECT tv_channel.series_name, tv_channel.country FROM tv_channel JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.directed_by IN ('Ben Jones', 'Michael Chang') AND tv_channel.content = 'cartoon'
SELECT tv_channel.series_name, tv_channel.country FROM tv_channel JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.directed_by IN ('Ben Jones', 'Michael Chang') AND tv_channel.content = 'cartoon'
SELECT tv_channel.series_name, tv_channel.country FROM tv_channel JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.directed_by IN ('Ben Jones', 'Michael Chang') AND tv_channel.content = 'cartoon'","SELECT tv_channel.series_name, tv_channel.country FROM tv_channel JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.directed_by IN ('Ben Jones', 'Michael Chang') AND tv_channel.content = 'cartoon'"
400,981,Find the number of owners who do not own any dogs at this moment.,dog_kennels,extra,SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs ),7,"SELECT COUNT(DISTINCT owner_id)  FROM owners  LEFT JOIN dogs ON owners.owner_id = dogs.owner_id  WHERE dogs.owner_id IS NULL
SELECT COUNT(DISTINCT owner_id)  FROM owners  LEFT JOIN dogs ON owners.owner_id = dogs.owner_id  WHERE dogs.owner_id IS NULL
SELECT COUNT(DISTINCT owner_id)  FROM owners  LEFT JOIN dogs ON owners.owner_id = dogs.owner_id  WHERE dogs.owner_id IS NULL
SELECT COUNT(DISTINCT owner_id)  FROM owners  LEFT JOIN dogs ON owners.owner_id = dogs.owner_id  WHERE dogs.owner_id IS NULL
SELECT COUNT(DISTINCT owner_id)  FROM owners  LEFT JOIN dogs ON owners.owner_id = dogs.owner_id  WHERE dogs.owner_id IS NULL
SELECT COUNT(DISTINCT owner_id)  FROM owners  LEFT JOIN dogs ON owners.owner_id = dogs.owner_id  WHERE dogs.owner_id IS NULL
SELECT COUNT(DISTINCT owner_id)  FROM owners  LEFT JOIN dogs ON owners.owner_id = dogs.owner_id  WHERE dogs.owner_id IS NULL",SELECT COUNT(DISTINCT owner_id)  FROM owners  LEFT JOIN dogs ON owners.owner_id = dogs.owner_id  WHERE dogs.owner_id IS NULL
401,845,What is the name of the conductor who has conducted the most orchestras?,orchestra,extra,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1,7,"SELECT c.name FROM conductor AS c JOIN (     SELECT p.conductor_id, COUNT(DISTINCT p.orchestra_id) AS orchestra_count     FROM performance AS p     GROUP BY p.conductor_id     ORDER BY orchestra_count DESC     LIMIT 1 ) AS o ON c.conductor_id = o.conductor_id
SELECT c.name FROM conductor AS c JOIN (     SELECT p.conductor_id, COUNT(DISTINCT p.orchestra_id) AS orchestra_count     FROM performance AS p     GROUP BY p.conductor_id     ORDER BY orchestra_count DESC     LIMIT 1 ) AS o ON c.conductor_id = o.conductor_id
SELECT c.name, COUNT(o.orchestra_id) as num_orchestras FROM conductor as c JOIN orchestra as o ON c.conductor_id = o.conductor_id GROUP BY c.conductor_id ORDER BY num_orchestras DESC LIMIT 1
SELECT c.name, COUNT(o.orchestra_id) as num_orchestras FROM conductor as c JOIN orchestra as o ON c.conductor_id = o.conductor_id GROUP BY c.conductor_id ORDER BY num_orchestras DESC LIMIT 1
SELECT c.name FROM conductor AS c JOIN (     SELECT p.conductor_id, COUNT(*) AS num_orchestras     FROM performance AS p     GROUP BY p.conductor_id     ORDER BY num_orchestras DESC     LIMIT 1 ) AS o ON c.conductor_id = o.conductor_id
SELECT c.name FROM conductor AS c JOIN (     SELECT p.conductor_id, COUNT(DISTINCT p.orchestra_id) AS orchestra_count     FROM performance AS p     GROUP BY p.conductor_id     ORDER BY orchestra_count DESC     LIMIT 1 ) AS o ON c.conductor_id = o.conductor_id
SELECT c.name FROM conductor AS c JOIN (     SELECT p.conductor_id, COUNT(DISTINCT p.orchestra_id) AS orchestra_count     FROM performance AS p     GROUP BY p.conductor_id     ORDER BY orchestra_count DESC     LIMIT 1 ) AS o ON c.conductor_id = o.conductor_id","SELECT c.name FROM conductor AS c JOIN (     SELECT p.conductor_id, COUNT(DISTINCT p.orchestra_id) AS orchestra_count     FROM performance AS p     GROUP BY p.conductor_id     ORDER BY orchestra_count DESC     LIMIT 1 ) AS o ON c.conductor_id = o.conductor_id"
402,314,What are the template ids of any templates used in more than a single document?,cre_Doc_Template_Mgt,easy,SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1,7,"SELECT templates.template_id  FROM templates  INNER JOIN documents ON templates.template_id = documents.template_id  GROUP BY templates.template_id  HAVING COUNT(documents.document_id) > 1
SELECT templates.template_id  FROM templates  JOIN documents ON templates.template_id = documents.template_id  GROUP BY templates.template_id  HAVING COUNT(documents.document_id) > 1
SELECT templates.template_id  FROM templates  INNER JOIN documents ON templates.template_id = documents.template_id  GROUP BY templates.template_id  HAVING COUNT(documents.document_id) > 1
SELECT templates.template_id  FROM templates  JOIN documents ON templates.template_id = documents.template_id  GROUP BY templates.template_id  HAVING COUNT(documents.document_id) > 1
SELECT templates.template_id  FROM templates  INNER JOIN documents ON templates.template_id = documents.template_id  GROUP BY templates.template_id  HAVING COUNT(documents.document_id) > 1
SELECT templates.template_id  FROM templates  JOIN documents ON templates.template_id = documents.template_id  GROUP BY templates.template_id  HAVING COUNT(documents.document_id) > 1
SELECT templates.template_id  FROM templates  INNER JOIN documents ON templates.template_id = documents.template_id  GROUP BY templates.template_id  HAVING COUNT(documents.document_id) > 1",SELECT templates.template_id  FROM templates  INNER JOIN documents ON templates.template_id = documents.template_id  GROUP BY templates.template_id  HAVING COUNT(documents.document_id) > 1
403,37,List all singer names in concerts in year 2014.,concert_singer,hard,SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014,7,"SELECT s.name  FROM singer AS s  JOIN singer_in_concert AS sic ON s.singer_id = sic.singer_id  JOIN concert AS c ON sic.concert_id = c.concert_id  WHERE c.year = 2014
SELECT singer.name  FROM singer  JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id  JOIN concert ON singer_in_concert.concert_id = concert.concert_id  WHERE concert.year = 2014
SELECT s.name  FROM singer AS s  JOIN singer_in_concert AS sic ON s.singer_id = sic.singer_id  JOIN concert AS c ON sic.concert_id = c.concert_id  WHERE c.year = 2014
SELECT s.name  FROM singer AS s  JOIN singer_in_concert AS sic ON s.singer_id = sic.singer_id  JOIN concert AS c ON sic.concert_id = c.concert_id  WHERE c.year = 2014
SELECT s.name  FROM singer AS s  JOIN singer_in_concert AS sic ON s.singer_id = sic.singer_id  JOIN concert AS c ON sic.concert_id = c.concert_id  WHERE c.year = 2014
SELECT s.name  FROM singer AS s  JOIN singer_in_concert AS sic ON s.singer_id = sic.singer_id  JOIN concert AS c ON sic.concert_id = c.concert_id  WHERE c.year = 2014
SELECT s.name  FROM singer AS s  JOIN singer_in_concert AS sic ON s.singer_id = sic.singer_id  JOIN concert AS c ON sic.concert_id = c.concert_id  WHERE c.year = 2014",SELECT s.name  FROM singer AS s  JOIN singer_in_concert AS sic ON s.singer_id = sic.singer_id  JOIN concert AS c ON sic.concert_id = c.concert_id  WHERE c.year = 2014
404,140,What is the maximum accelerate for all the different cylinders?,car_1,medium,"SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;",7,"SELECT MAX(accelerate) FROM cars_data
SELECT MAX(accelerate) FROM cars_data
SELECT MAX(accelerate) FROM cars_data
SELECT MAX(accelerate) FROM cars_data
SELECT MAX(accelerate) FROM cars_data
SELECT MAX(accelerate) FROM cars_data
SELECT MAX(accelerate) FROM cars_data",SELECT MAX(accelerate) FROM cars_data
405,969,Find the number of professionals who have ever treated dogs.,dog_kennels,easy,SELECT count(DISTINCT professional_id) FROM Treatments,7,"SELECT COUNT(DISTINCT professionals.professional_id)  FROM professionals  JOIN treatments ON professionals.professional_id = treatments.professional_id  JOIN dogs ON treatments.dog_id = dogs.dog_id  WHERE dogs.breed_code IN (SELECT breed_code FROM breeds WHERE breed_name = 'Dog')
SELECT COUNT(DISTINCT professionals.professional_id)  FROM professionals  JOIN treatments ON professionals.professional_id = treatments.professional_id  JOIN dogs ON treatments.dog_id = dogs.dog_id  WHERE dogs.breed_code IN (SELECT breed_code FROM breeds WHERE breed_name = 'Dog')
SELECT COUNT(DISTINCT professionals.professional_id)  FROM professionals  JOIN treatments ON professionals.professional_id = treatments.professional_id  JOIN dogs ON treatments.dog_id = dogs.dog_id  WHERE dogs.breed_code IN (SELECT breed_code FROM breeds WHERE breed_name = 'Dog')
SELECT COUNT(DISTINCT professionals.professional_id)  FROM professionals  JOIN treatments ON professionals.professional_id = treatments.professional_id  JOIN dogs ON treatments.dog_id = dogs.dog_id  WHERE dogs.breed_code IN (SELECT breed_code FROM breeds WHERE breed_name = 'Dog')
SELECT COUNT(DISTINCT professionals.professional_id)  FROM professionals  JOIN treatments ON professionals.professional_id = treatments.professional_id  JOIN dogs ON treatments.dog_id = dogs.dog_id  WHERE dogs.breed_code IN (SELECT breed_code FROM breeds WHERE breed_name = 'Dog')
SELECT COUNT(DISTINCT professionals.professional_id)  FROM professionals  JOIN treatments ON professionals.professional_id = treatments.professional_id  JOIN dogs ON treatments.dog_id = dogs.dog_id  WHERE dogs.breed_code IN (SELECT breed_code FROM breeds WHERE breed_name = 'Dog')
SELECT COUNT(DISTINCT professionals.professional_id)  FROM professionals  JOIN treatments ON professionals.professional_id = treatments.professional_id  JOIN dogs ON treatments.dog_id = dogs.dog_id  WHERE dogs.breed_code IN (SELECT breed_code FROM breeds WHERE breed_name = 'Dog')",SELECT COUNT(DISTINCT professionals.professional_id)  FROM professionals  JOIN treatments ON professionals.professional_id = treatments.professional_id  JOIN dogs ON treatments.dog_id = dogs.dog_id  WHERE dogs.breed_code IN (SELECT breed_code FROM breeds WHERE breed_name = 'Dog')
406,574,What is the date and id of the transcript with the least number of results?,student_transcripts_tracking,extra,"SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1",7,"SELECT MIN(COUNT(transcript_contents.student_course_id)) AS least_number_of_results, transcripts.trans
SELECT transcripts.transcript_date, transcripts.transcript_id FROM transcripts JOIN transcript_contents ON transcripts.transcript
SELECT MIN(COUNT(transcript_contents.student_course_id)) AS least_number_of_results, transcripts.trans
SELECT MIN(COUNT(transcript_contents.student_course_id)), transcripts.transcript_id, transcripts.transcript
SELECT MIN(COUNT(transcript_contents.student_course_id)), transcripts.transcript_id, transcripts.transcript
SELECT transcripts.transcript_date, transcripts.transcript_id FROM transcripts JOIN transcript_contents ON transcripts.transcript
SELECT transcripts.transcript_date, transcripts.transcript_id FROM transcripts JOIN transcript_contents ON transcripts.transcript","SELECT transcripts.transcript_date, transcripts.transcript_id FROM transcripts JOIN transcript_contents ON transcripts.transcript"
407,418,find the names of museums which have more staff than the minimum staff number of all museums opened after 2010.,museum_visit,hard,SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010),7,"SELECT m.name  FROM museum AS m  WHERE m.num_of_staff > (SELECT MIN(m2.num_of_staff)                          FROM museum AS m2                          WHERE m2.open_year > 2010) 
SELECT m1.name  FROM museum AS m1  WHERE m1.num_of_staff > (     SELECT MIN(m2.num_of_staff)      FROM museum AS m2      WHERE m2.open_year > 2010 ) AND m1.museum_id IN (     SELECT DISTINCT m3.museum_id      FROM museum AS m3      WHERE m3.open_year > 2010 )
SELECT m.name  FROM museum AS m  WHERE m.num_of_staff > (SELECT MIN(m2.num_of_staff)                          FROM museum AS m2                          WHERE m2.open_year > 2010) 
SELECT m1.name  FROM museum AS m1  WHERE m1.num_of_staff > (SELECT MIN(m2.num_of_staff)                           FROM museum AS m2                           WHERE m2.open_year > 2010)
SELECT m.name  FROM museum AS m  WHERE m.num_of_staff > (SELECT MIN(m2.num_of_staff)                          FROM museum AS m2                          WHERE m2.open_year > 2010) 
SELECT m.name  FROM museum AS m  WHERE m.num_of_staff > (SELECT MIN(m2.num_of_staff)                          FROM museum AS m2                          WHERE m2.open_year > 2010) 
SELECT m.name  FROM museum AS m  WHERE m.num_of_staff > (SELECT MIN(m2.num_of_staff)                          FROM museum AS m2                          WHERE m2.open_year > 2010) ",SELECT m.name  FROM museum AS m  WHERE m.num_of_staff > (SELECT MIN(m2.num_of_staff)                          FROM museum AS m2                          WHERE m2.open_year > 2010) 
408,662,Give the names of poker players who have earnings above 300000.,poker_player,medium,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000,7,"SELECT people.name  FROM poker_player  JOIN people ON poker_player.people_id = people.people_id  WHERE poker_player.earnings > 300000
SELECT people.name  FROM poker_player  JOIN people ON poker_player.people_id = people.people_id  WHERE poker_player.earnings > 300000
SELECT people.name  FROM poker_player  JOIN people ON poker_player.people_id = people.people_id  WHERE poker_player.earnings > 300000
SELECT people.name  FROM poker_player  JOIN people ON poker_player.people_id = people.people_id  WHERE poker_player.earnings > 300000
SELECT people.name  FROM poker_player  JOIN people ON poker_player.people_id = people.people_id  WHERE poker_player.earnings > 300000
SELECT people.name  FROM poker_player  JOIN people ON poker_player.people_id = people.people_id  WHERE poker_player.earnings > 300000
SELECT people.name  FROM poker_player  JOIN people ON poker_player.people_id = people.people_id  WHERE poker_player.earnings > 300000",SELECT people.name  FROM poker_player  JOIN people ON poker_player.people_id = people.people_id  WHERE poker_player.earnings > 300000
409,498,What are the different ids and names of the battles that lost any 'Brig' type shipes?,battle_death,medium,"SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'",7,"SELECT DISTINCT b.id, b.name  FROM battle AS b  JOIN ship AS s ON b.id = s.lost_in_battle  JOIN death AS d ON s.id = d.caused_by_ship_id  WHERE s.ship_type = 'Brig' AND (d.killed > 0 OR d.injured > 0)
SELECT battle.id, battle.name FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON ship.id = death.caused_by_ship_id WHERE ship.ship_type = 'Brig' GROUP BY battle.id, battle.name
SELECT battle.id, battle.name  FROM battle  JOIN ship ON battle.id = ship.lost_in_battle  JOIN death ON ship.id = death.caused_by_ship_id  WHERE ship.ship_type = 'Brig'  GROUP BY battle.id, battle.name
SELECT battle.id, battle.name  FROM battle  JOIN ship ON battle.id = ship.lost_in_battle  JOIN death ON ship.id = death.caused_by_ship_id  WHERE ship.ship_type = 'Brig'  GROUP BY battle.id, battle.name
SELECT battle.id, battle.name  FROM battle  JOIN ship ON battle.id = ship.lost_in_battle  JOIN death ON ship.id = death.caused_by_ship_id  WHERE ship.ship_type = 'Brig'  GROUP BY battle.id, battle.name
SELECT battle.id, battle.name  FROM battle  INNER JOIN ship ON battle.id = ship.lost_in_battle  INNER JOIN death ON ship.id = death.caused_by_ship_id  WHERE ship.ship_type = 'Brig'  GROUP BY battle.id, battle.name
SELECT battle.id, battle.name  FROM battle  INNER JOIN ship ON battle.id = ship.lost_in_battle  INNER JOIN death ON ship.id = death.caused_by_ship_id  WHERE ship.ship_type = 'Brig'  GROUP BY battle.id, battle.name","SELECT battle.id, battle.name  FROM battle  JOIN ship ON battle.id = ship.lost_in_battle  JOIN death ON ship.id = death.caused_by_ship_id  WHERE ship.ship_type = 'Brig'  GROUP BY battle.id, battle.name"
410,733,What is the number of distinct languages used around the world?,world_1,easy,SELECT count(DISTINCT LANGUAGE) FROM countrylanguage,7,"SELECT COUNT(DISTINCT language) FROM countrylanguage
SELECT COUNT(DISTINCT language) FROM countrylanguage
SELECT COUNT(DISTINCT language) FROM countrylanguage
SELECT COUNT(DISTINCT language) FROM countrylanguage
SELECT COUNT(DISTINCT language) FROM countrylanguage
SELECT COUNT(DISTINCT language) FROM countrylanguage
SELECT COUNT(DISTINCT language) FROM countrylanguage",SELECT COUNT(DISTINCT language) FROM countrylanguage
411,399,Show names of teachers and the courses they are arranged to teach.,course_teach,medium,"SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID",7,"SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id
SELECT teacher.name, course.course FROM teacher INNER JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id INNER JOIN course ON course_arrange.course_id = course.course_id
SELECT t.name, c.course  FROM teacher t  JOIN course_arrange ca ON t.teacher_id = ca.teacher_id  JOIN course c ON ca.course_id = c.course_id
SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id
SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id
SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id
SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id","SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id"
412,779,Return the country codes for countries that do not speak English.,world_1,hard,"SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  ""English""",7,"SELECT country.code  FROM country  LEFT JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language <> 'English' OR countrylanguage.language IS NULL
SELECT country.code  FROM country  LEFT JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language <> 'English' OR countrylanguage.language IS NULL
SELECT country.code  FROM country  LEFT JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language <> 'English' OR countrylanguage.language IS NULL
SELECT country.code  FROM country  LEFT JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language <> 'English' OR countrylanguage.language IS NULL
SELECT country.code  FROM country  LEFT JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language <> 'English' OR countrylanguage.language IS NULL
SELECT c.code  FROM country AS c  LEFT JOIN countrylanguage AS cl ON c.code = cl.countrycode  WHERE cl.language = 'English' AND cl.isofficial = 'F'  GROUP BY c.code
SELECT country.code  FROM country  LEFT JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language <> 'English' OR countrylanguage.language IS NULL",SELECT country.code  FROM country  LEFT JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language <> 'English' OR countrylanguage.language IS NULL
413,663,List the names of poker players ordered by the final tables made in ascending order.,poker_player,medium,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made,7,"SELECT people.name  FROM poker_player  JOIN people ON poker_player.people_id = people.people_id  ORDER BY poker_player.final_table_made ASC
SELECT people.name  FROM poker_player  JOIN people ON poker_player.people_id = people.people_id  ORDER BY poker_player.final_table_made ASC
SELECT people.name  FROM poker_player  JOIN people ON poker_player.people_id = people.people_id  ORDER BY poker_player.final_table_made ASC
SELECT people.name  FROM poker_player  JOIN people ON poker_player.people_id = people.people_id  ORDER BY poker_player.final_table_made ASC
SELECT people.name  FROM poker_player  JOIN people ON poker_player.people_id = people.people_id  ORDER BY poker_player.final_table_made ASC
SELECT people.name  FROM poker_player  JOIN people ON poker_player.people_id = people.people_id  ORDER BY poker_player.final_table_made ASC
SELECT people.name  FROM poker_player  JOIN people ON poker_player.people_id = people.people_id  ORDER BY poker_player.final_table_made ASC",SELECT people.name  FROM poker_player  JOIN people ON poker_player.people_id = people.people_id  ORDER BY poker_player.final_table_made ASC
414,921,Find the average age of the dogs who went through treatments.,dog_kennels,hard,SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments ),7,"SELECT AVG(dogs.age)  FROM dogs  INNER JOIN treatments ON dogs.dog_id = treatments.dog_id  WHERE dogs.age IS NOT NULL
SELECT AVG(dogs.age)  FROM dogs  INNER JOIN treatments ON dogs.dog_id = treatments.dog_id  WHERE dogs.age IS NOT NULL
SELECT AVG(dogs.age) FROM dogs INNER JOIN treatments ON dogs.dog_id = treatments.dog_id WHERE dogs.dog_id IN (SELECT dog_id FROM treatments)
SELECT AVG(dogs.age)  FROM dogs  INNER JOIN treatments ON dogs.dog_id = treatments.dog_id  WHERE dogs.age IS NOT NULL
SELECT AVG(dogs.age) FROM dogs INNER JOIN treatments ON dogs.dog_id = treatments.dog_id WHERE dogs.dog_id IN (SELECT dog_id FROM treatments)
SELECT AVG(dogs.age)  FROM dogs  INNER JOIN treatments ON dogs.dog_id = treatments.dog_id  WHERE dogs.dog_id IN (SELECT dog_id FROM treatments)
SELECT AVG(dogs.age) FROM dogs INNER JOIN treatments ON dogs.dog_id = treatments.dog_id WHERE dogs.dog_id IN (SELECT dog_id FROM treatments)",SELECT AVG(dogs.age)  FROM dogs  INNER JOIN treatments ON dogs.dog_id = treatments.dog_id  WHERE dogs.age IS NOT NULL
415,857,What are the record companies that are used by both orchestras founded before 2003 and those founded after 2003?,orchestra,hard,SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003,7,"SELECT orchestra.record_company  FROM orchestra  WHERE orchestra.year_of_founded < 2003  INTERSECT  SELECT orchestra.record_company  FROM orchestra  WHERE orchestra.year_of_founded > 2003
SELECT DISTINCT orchestra.record_company  FROM orchestra  WHERE EXISTS (SELECT 1 FROM orchestra AS o2 WHERE o2.year_of_founded < 2003 AND o2.record_company = orchestra.record_company)  AND EXISTS (SELECT 1 FROM orchestra AS o3 WHERE o3.year_of_founded > 2003 AND o3.record_company = orchestra.record_company)
SELECT DISTINCT orchestra.record_company  FROM orchestra  WHERE EXISTS (SELECT 1 FROM orchestra AS o2 WHERE o2.year_of_founded < 2003 AND o2.record_company = orchestra.record_company)  AND EXISTS (SELECT 1 FROM orchestra AS o3 WHERE o3.year_of_founded > 2003 AND o3.record_company = orchestra.record_company)
SELECT DISTINCT orchestra.record_company  FROM orchestra  WHERE EXISTS (SELECT 1 FROM orchestra AS o2 WHERE o2.year_of_founded < 2003 AND o2.record_company = orchestra.record_company)  AND EXISTS (SELECT 1 FROM orchestra AS o3 WHERE o3.year_of_founded > 2003 AND o3.record_company = orchestra.record_company)
SELECT DISTINCT orchestra.record_company  FROM orchestra  WHERE EXISTS (SELECT 1 FROM orchestra AS o2 WHERE o2.year_of_founded < 2003 AND o2.record_company = orchestra.record_company)  AND EXISTS (SELECT 1 FROM orchestra AS o3 WHERE o3.year_of_founded > 2003 AND o3.record_company = orchestra.record_company)
SELECT DISTINCT orchestra.record_company  FROM orchestra  WHERE EXISTS (SELECT 1 FROM orchestra AS o2 WHERE o2.year_of_founded < 2003 AND o2.record_company = orchestra.record_company)  AND EXISTS (SELECT 1 FROM orchestra AS o3 WHERE o3.year_of_founded > 2003 AND o3.record_company = orchestra.record_company)
SELECT DISTINCT orchestra.record_company  FROM orchestra  WHERE EXISTS (SELECT 1 FROM orchestra AS o2 WHERE o2.year_of_founded < 2003 AND o2.record_company = orchestra.record_company)  AND EXISTS (SELECT 1 FROM orchestra AS o3 WHERE o3.year_of_founded > 2003 AND o3.record_company = orchestra.record_company)",SELECT DISTINCT orchestra.record_company  FROM orchestra  WHERE EXISTS (SELECT 1 FROM orchestra AS o2 WHERE o2.year_of_founded < 2003 AND o2.record_company = orchestra.record_company)  AND EXISTS (SELECT 1 FROM orchestra AS o3 WHERE o3.year_of_founded > 2003 AND o3.record_company = orchestra.record_company)
416,677,What are the nationalities that are shared by at least two people?,poker_player,easy,SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2,7,"SELECT nationality FROM people GROUP BY nationality HAVING COUNT(people_id) >= 2
SELECT nationality FROM people GROUP BY nationality HAVING COUNT(people_id) >= 2
SELECT nationality FROM people GROUP BY nationality HAVING COUNT(people_id) >= 2
SELECT nationality  FROM people  GROUP BY nationality  HAVING COUNT(people_id) >= 2
SELECT nationality FROM people GROUP BY nationality HAVING COUNT(people_id) >= 2
SELECT nationality  FROM people  GROUP BY nationality  HAVING COUNT(people_id) >= 2
SELECT nationality FROM people GROUP BY nationality HAVING COUNT(people_id) >= 2",SELECT nationality FROM people GROUP BY nationality HAVING COUNT(people_id) >= 2
417,104,What are the different models for the cards produced after 1980?,car_1,hard,SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;,7,"SELECT DISTINCT model FROM model_list  JOIN car_names ON model_list.modelid = car_names.makeid  JOIN cars_data ON car_names.makeid = cars_data.id  WHERE cars_data.year > 1980
SELECT DISTINCT model FROM model_list  JOIN car_names ON model_list.modelid = car_names.makeid  JOIN cars_data ON car_names.makeid = cars_data.id  WHERE cars_data.year > 1980
SELECT DISTINCT model FROM model_list  JOIN car_names ON model_list.modelid = car_names.makeid  JOIN cars_data ON car_names.makeid = cars_data.id  WHERE cars_data.year > 1980
SELECT DISTINCT model FROM model_list  JOIN car_names ON model_list.modelid = car_names.makeid  JOIN cars_data ON car_names.makeid = cars_data.id  WHERE cars_data.year > 1980
SELECT DISTINCT m.model  FROM model_list m  JOIN car_makers c ON m.maker = c.id  JOIN car_names n ON m.modelid = n.makeid  JOIN cars_data d ON n.makeid = d.id  WHERE d.year > 1980
SELECT DISTINCT model FROM model_list  JOIN car_names ON model_list.modelid = car_names.makeid  JOIN cars_data ON car_names.makeid = cars_data.id  WHERE cars_data.year > 1980
SELECT DISTINCT model FROM model_list  JOIN car_names ON model_list.modelid = car_names.makeid  JOIN cars_data ON car_names.makeid = cars_data.id  WHERE cars_data.year > 1980",SELECT DISTINCT model FROM model_list  JOIN car_names ON model_list.modelid = car_names.makeid  JOIN cars_data ON car_names.makeid = cars_data.id  WHERE cars_data.year > 1980
418,692,What are the names of the contestants whose names are not 'Jessie Alloway',voter_1,easy,SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway',7,"SELECT contestants.contestant_name  FROM contestants  WHERE contestants.contestant_name != 'Jessie Alloway'
SELECT contestants.contestant_name  FROM contestants  WHERE contestants.contestant_name != 'Jessie Alloway'
SELECT contestants.contestant_name  FROM contestants  WHERE contestants.contestant_name != 'Jessie Alloway'
SELECT contestants.contestant_name  FROM contestants  WHERE contestants.contestant_name != 'Jessie Alloway'
SELECT contestants.contestant_name  FROM contestants  WHERE contestants.contestant_name != 'Jessie Alloway'
SELECT contestants.contestant_name  FROM contestants  WHERE contestants.contestant_name != 'Jessie Alloway'
SELECT contestants.contestant_name  FROM contestants  WHERE contestants.contestant_name != 'Jessie Alloway'",SELECT contestants.contestant_name  FROM contestants  WHERE contestants.contestant_name != 'Jessie Alloway'
419,119,What is the smallest weight of the car produced with 8 cylinders on 1974 ?,car_1,medium,select min(weight) from cars_data where cylinders  =  8 and year  =  1974,7,"SELECT MIN(weight) FROM cars_data WHERE cylinders = 8 AND year = 1974
SELECT MIN(weight) FROM cars_data WHERE cylinders = 8 AND year = 1974
SELECT MIN(weight)  FROM cars_data  WHERE cylinders = 8 AND year = 1974
SELECT MIN(weight) FROM cars_data WHERE cylinders = 8 AND year = 1974
SELECT MIN(weight) FROM cars_data WHERE cylinders = 8 AND year = 1974
SELECT MIN(weight) FROM cars_data WHERE cylinders = 8 AND year = 1974
SELECT MIN(weight) FROM cars_data WHERE cylinders = 8 AND year = 1974",SELECT MIN(weight) FROM cars_data WHERE cylinders = 8 AND year = 1974
420,277,find the name of employee who was awarded the most times in the evaluation.,employee_hire_evaluation,extra,SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1,7,"SELECT employee.name, COUNT(evaluation.employee_id) as awards_count FROM employee JOIN evaluation ON employee.employee_id = evaluation.employee_id GROUP BY evaluation.employee_id ORDER BY awards_count DESC LIMIT 1
SELECT e.name, COUNT(ev.employee_id) as awards_count FROM employee e JOIN evaluation ev ON e.employee_id = ev.employee_id GROUP BY e.employee_id ORDER BY awards_count DESC LIMIT 1
SELECT e.name, COUNT(ev.employee_id) AS awards_count FROM employee e JOIN evaluation ev ON e.employee_id = ev.employee_id GROUP BY e.employee_id ORDER BY awards_count DESC LIMIT 1
SELECT employee.name, COUNT(evaluation.employee_id) as awards_count FROM employee JOIN evaluation ON employee.employee_id = evaluation.employee_id GROUP BY evaluation.employee_id ORDER BY awards_count DESC LIMIT 1
SELECT e.name, COUNT(ev.employee_id) as awards_count FROM employee e JOIN evaluation ev ON e.employee_id = ev.employee_id GROUP BY ev.employee_id ORDER BY awards_count DESC LIMIT 1
SELECT employee.name, COUNT(evaluation.employee_id) as awards_count FROM employee JOIN evaluation ON employee.employee_id = evaluation.employee_id GROUP BY evaluation.employee_id ORDER BY awards_count DESC LIMIT 1
SELECT e.name, COUNT(ev.employee_id) as awards_count FROM employee e JOIN evaluation ev ON e.employee_id = ev.employee_id GROUP BY e.employee_id ORDER BY awards_count DESC LIMIT 1","SELECT employee.name, COUNT(evaluation.employee_id) as awards_count FROM employee JOIN evaluation ON employee.employee_id = evaluation.employee_id GROUP BY evaluation.employee_id ORDER BY awards_count DESC LIMIT 1"
421,68,"What type of pet is the youngest animal, and how much does it weigh?",pets_1,medium,"SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1",7,"SELECT pettype, weight FROM pets WHERE pet_age = (SELECT MIN(pet_age) FROM pets) LIMIT 1
SELECT pettype, weight FROM pets WHERE pet_age = (SELECT MIN(pet_age) FROM pets) LIMIT 1
SELECT pettype, weight FROM pets WHERE pet_age = (SELECT MIN(pet_age) FROM pets) LIMIT 1
SELECT pettype, weight FROM pets WHERE pet_age = (SELECT MIN(pet_age) FROM pets) LIMIT 1
SELECT pettype, weight FROM pets WHERE pet_age = (SELECT MIN(pet_age) FROM pets) LIMIT 1
SELECT pettype, weight FROM pets WHERE pet_age = (SELECT MIN(pet_age) FROM pets) LIMIT 1
SELECT pettype, weight FROM pets WHERE pet_age = (SELECT MIN(pet_age) FROM pets) LIMIT 1","SELECT pettype, weight FROM pets WHERE pet_age = (SELECT MIN(pet_age) FROM pets) LIMIT 1"
422,308,Count the number of documents that use the PPT template type.,cre_Doc_Template_Mgt,medium,SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT',7,"SELECT COUNT(*) FROM documents  INNER JOIN templates  ON documents.template_id = templates.template_id  WHERE templates.template_type_code = 'PPT'
SELECT COUNT(*) FROM documents  INNER JOIN templates  ON documents.template_id = templates.template_id  WHERE templates.template_type_code = 'PPT'
SELECT COUNT(*) FROM documents  INNER JOIN templates  ON documents.template_id = templates.template_id  WHERE templates.template_type_code = 'PPT'
SELECT COUNT(*) FROM documents  INNER JOIN templates  ON documents.template_id = templates.template_id  WHERE templates.template_type_code = 'PPT'
SELECT COUNT(*) FROM documents  INNER JOIN templates  ON documents.template_id = templates.template_id  WHERE templates.template_type_code = 'PPT'
SELECT COUNT(*) FROM documents  INNER JOIN templates ON documents.template_id = templates.template_id  WHERE templates.template_type_code = 'PPT'
SELECT COUNT(*) FROM documents  INNER JOIN templates  ON documents.template_id = templates.template_id  WHERE templates.template_type_code = 'PPT'",SELECT COUNT(*) FROM documents  INNER JOIN templates  ON documents.template_id = templates.template_id  WHERE templates.template_type_code = 'PPT'
423,245,"What are flight numbers of Airline ""United Airlines""?",flight_2,medium,"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  ""United Airlines""",7,"SELECT flightno FROM flights WHERE airline = ""United Airlines""
SELECT flightno FROM flights WHERE airline = ""United Airlines""
SELECT flightno FROM flights WHERE airline = ""United Airlines""
SELECT flightno FROM flights WHERE airline = ""United Airlines""
SELECT flightno FROM flights WHERE airline = ""United Airlines""
SELECT flightno FROM flights WHERE airline = ""United Airlines""
SELECT flightno FROM flights WHERE airline = ""United Airlines""","SELECT flightno FROM flights WHERE airline = ""United Airlines"""
424,61,Find the major and age of students who do not have a cat pet.,pets_1,extra,"SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",7,"SELECT student.major, student.age  FROM student  LEFT JOIN has_pet ON student.stuid = has_pet.stuid  LEFT JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype != 'cat' OR pets.pettype IS NULL
SELECT student.major, student.age  FROM student  LEFT JOIN has_pet ON student.stuid = has_pet.stuid  LEFT JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype != 'cat' OR pets.pettype IS NULL
SELECT student.major, student.age FROM student LEFT JOIN has_pet ON student.stuid = has_pet.stuid LEFT JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype != 'cat' OR pets.pettype IS NULL
SELECT student.major, student.age  FROM student  LEFT JOIN has_pet ON student.stuid = has_pet.stuid  LEFT JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype != 'cat' OR pets.pettype IS NULL
SELECT student.major, student.age  FROM student  LEFT JOIN has_pet ON student.stuid = has_pet.stuid  LEFT JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype != 'cat' OR pets.pettype IS NULL
SELECT student.major, student.age FROM student LEFT JOIN has_pet ON student.stuid = has_pet.stuid LEFT JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype != 'cat' OR pets.pettype IS NULL
SELECT student.major, student.age  FROM student  LEFT JOIN has_pet ON student.stuid = has_pet.stuid  LEFT JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype != 'cat' OR pets.pettype IS NULL","SELECT student.major, student.age  FROM student  LEFT JOIN has_pet ON student.stuid = has_pet.stuid  LEFT JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype != 'cat' OR pets.pettype IS NULL"
425,544,What is the name of the semester with no students enrolled?,student_transcripts_tracking,hard,SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment ),7,"SELECT semesters.semester_name  FROM semesters  LEFT JOIN student_enrolment ON semesters.semester
SELECT semesters.semester_name  FROM semesters  LEFT JOIN student_enrolment ON semesters.semester
SELECT semesters.semester_name  FROM semesters  LEFT JOIN student_enrolment  ON semesters.se
SELECT semesters.semester_name  FROM semesters  LEFT JOIN student_enrolment ON semesters.semester
SELECT semesters.semester_name  FROM semesters  LEFT JOIN student_enrolment  ON semesters.se
SELECT semesters.semester_name  FROM semesters  LEFT JOIN student_enrolment ON semesters.semester
SELECT semesters.semester_name  FROM semesters  LEFT JOIN student_enrolment  ON semesters.se",SELECT semesters.semester_name  FROM semesters  LEFT JOIN student_enrolment ON semesters.semester
426,5,"What is the average, minimum, and maximum age for all French singers?",concert_singer,medium,"SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'",7,"SELECT AVG(age) AS average_age, MIN(age) AS min_age, MAX(age) AS max_age FROM singer WHERE country = 'France'
SELECT AVG(age) AS average_age, MIN(age) AS min_age, MAX(age) AS max_age FROM singer WHERE country = 'France'
SELECT AVG(age) AS average_age, MIN(age) AS min_age, MAX(age) AS max_age FROM singer WHERE country = 'France'
SELECT AVG(age) AS average_age, MIN(age) AS min_age, MAX(age) AS max_age FROM singer WHERE country = 'France'
SELECT AVG(age) AS average_age, MIN(age) AS min_age, MAX(age) AS max_age FROM singer WHERE country = 'France'
SELECT AVG(age) AS average_age, MIN(age) AS min_age, MAX(age) AS max_age FROM singer WHERE country = 'France'
SELECT AVG(age) AS average_age, MIN(age) AS min_age, MAX(age) AS max_age FROM singer WHERE country = 'France'","SELECT AVG(age) AS average_age, MIN(age) AS min_age, MAX(age) AS max_age FROM singer WHERE country = 'France'"
427,895,What are the ids of high school students who do not have friends?,network_1,hard,SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend,7,"SELECT highschooler.id  FROM highschooler  LEFT JOIN friend ON highschooler.id = friend.student_id  WHERE highschooler.grade BETWEEN 9 AND 12 AND friend.student_id IS NULL
SELECT highschooler.id FROM highschooler LEFT JOIN friend ON highschooler.id = friend.student_id WHERE highschooler.grade BETWEEN 9 AND 12 AND friend.student_id IS NULL
SELECT highschooler.id FROM highschooler LEFT JOIN friend ON highschooler.id = friend.student_id WHERE highschooler.grade BETWEEN 9 AND 12 AND friend.student_id IS NULL
SELECT highschooler.id FROM highschooler LEFT JOIN friend ON highschooler.id = friend.student_id WHERE highschooler.grade BETWEEN 9 AND 12 AND friend.student_id IS NULL
SELECT highschooler.id FROM highschooler LEFT JOIN friend ON highschooler.id = friend.student_id WHERE highschooler.grade BETWEEN 9 AND 12 AND friend.student_id IS NULL
SELECT highschooler.id FROM highschooler LEFT JOIN friend ON highschooler.id = friend.student_id WHERE highschooler.grade BETWEEN 9 AND 12 AND friend.student_id IS NULL
SELECT highschooler.id FROM highschooler LEFT JOIN friend ON highschooler.id = friend.student_id WHERE highschooler.grade BETWEEN 9 AND 12 AND friend.student_id IS NULL",SELECT highschooler.id FROM highschooler LEFT JOIN friend ON highschooler.id = friend.student_id WHERE highschooler.grade BETWEEN 9 AND 12 AND friend.student_id IS NULL
428,151,Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500?,car_1,extra,SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;,7,"SELECT DISTINCT model FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  WHERE car_makers.fullname = 'General Motors' OR cars_data.weight > 3500
SELECT DISTINCT model FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  WHERE car_makers.fullname = 'General Motors' OR cars_data.weight > 3500
SELECT DISTINCT model FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  WHERE car_makers.fullname = 'General Motors' OR cars_data.weight > 3500
SELECT DISTINCT model FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  WHERE car_makers.fullname = 'General Motors' OR cars_data.weight > 3500
SELECT DISTINCT model FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  WHERE car_makers.fullname = 'General Motors' OR cars_data.weight > 3500
SELECT DISTINCT model FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  WHERE car_makers.fullname = 'General Motors' OR cars_data.weight > 3500
SELECT DISTINCT model FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  WHERE car_makers.fullname = 'General Motors' OR cars_data.weight > 3500",SELECT DISTINCT model FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  WHERE car_makers.fullname = 'General Motors' OR cars_data.weight > 3500
429,672,Return the names of poker players sorted by their earnings descending.,poker_player,medium,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC,7,"SELECT people.name  FROM poker_player  JOIN people ON poker_player.people_id = people.people_id  ORDER BY poker_player.earnings DESC
SELECT people.name  FROM poker_player  JOIN people ON poker_player.people_id = people.people_id  ORDER BY poker_player.earnings DESC
SELECT people.name  FROM poker_player  JOIN people ON poker_player.people_id = people.people_id  ORDER BY poker_player.earnings DESC
SELECT people.name  FROM poker_player  JOIN people ON poker_player.people_id = people.people_id  ORDER BY poker_player.earnings DESC
SELECT people.name  FROM poker_player  JOIN people ON poker_player.people_id = people.people_id  ORDER BY poker_player.earnings DESC
SELECT people.name  FROM poker_player  JOIN people ON poker_player.people_id = people.people_id  ORDER BY poker_player.earnings DESC
SELECT people.name  FROM poker_player  JOIN people ON poker_player.people_id = people.people_id  ORDER BY poker_player.earnings DESC",SELECT people.name  FROM poker_player  JOIN people ON poker_player.people_id = people.people_id  ORDER BY poker_player.earnings DESC
430,148,What is the number of car models created by the car maker American Motor Company?,car_1,medium,SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';,7,"SELECT COUNT(*) FROM model_list INNER JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.maker = 'American Motor Company'
SELECT COUNT(*) FROM model_list INNER JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.maker = 'American Motor Company'
SELECT COUNT(*) FROM model_list INNER JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.maker = 'American Motor Company'
SELECT COUNT(*) FROM model_list INNER JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.maker = 'American Motor Company'
SELECT COUNT(*) FROM model_list INNER JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.maker = 'American Motor Company'
SELECT COUNT(*) FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  WHERE car_makers.maker = 'American Motor Company'
SELECT COUNT(*) FROM model_list INNER JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.maker = 'American Motor Company'",SELECT COUNT(*) FROM model_list INNER JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.maker = 'American Motor Company'
431,763,"What are the name, population, and life expectancy of the largest Asian country by land?",world_1,hard,"SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  ""Asia"" ORDER BY SurfaceArea DESC LIMIT 1",7,"SELECT c.name, c.population, c.lifeexpectancy  FROM country c  WHERE c.continent = 'Asia'  ORDER BY c.surfacearea DESC  LIMIT 1
SELECT c.name, c.population, c.lifeexpectancy FROM country c WHERE c.continent = 'Asia' ORDER BY c.surfacearea DESC LIMIT 1
SELECT c.name, c.population, c.lifeexpectancy FROM country c WHERE c.continent = 'Asia' ORDER BY c.surfacearea DESC LIMIT 1
SELECT c.name, c.population, c.lifeexpectancy FROM country c WHERE c.continent = 'Asia' ORDER BY c.surfacearea DESC LIMIT 1
SELECT c.name, c.population, c.lifeexpectancy  FROM country c  WHERE c.continent = 'Asia'  ORDER BY c.surfacearea DESC  LIMIT 1
SELECT c.name, c.population, c.lifeexpectancy FROM country c WHERE c.continent = 'Asia' ORDER BY c.surfacearea DESC LIMIT 1
SELECT c.name, c.population, c.lifeexpectancy  FROM country c  WHERE c.continent = 'Asia'  ORDER BY c.surfacearea DESC  LIMIT 1","SELECT c.name, c.population, c.lifeexpectancy FROM country c WHERE c.continent = 'Asia' ORDER BY c.surfacearea DESC LIMIT 1"
432,699,"What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'?",voter_1,medium,"SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'",7,"SELECT votes.created, votes.state, votes.phone_number FROM votes JOIN contestants ON votes.contestant_number = contestants.contestant_number WHERE contestants.contestant_name = 'Tabatha Gehling'
SELECT votes.created, votes.state, votes.phone_number FROM votes JOIN contestants ON votes.contestant_number = contestants.contestant_number WHERE contestants.contestant_name = 'Tabatha Gehling'
SELECT votes.created, votes.state, votes.phone_number FROM votes JOIN contestants ON votes.contestant_number = contestants.contestant_number WHERE contestants.contestant_name = 'Tabatha Gehling'
SELECT votes.created, votes.state, votes.phone_number  FROM votes  JOIN contestants ON votes.contestant_number = contestants.contestant_number  WHERE contestants.contestant_name = 'Tabatha Gehling'
SELECT votes.created, votes.state, votes.phone_number FROM votes JOIN contestants ON votes.contestant_number = contestants.contestant_number WHERE contestants.contestant_name = 'Tabatha Gehling'
SELECT votes.created, votes.state, votes.phone_number FROM votes JOIN contestants ON votes.contestant_number = contestants.contestant_number WHERE contestants.contestant_name = 'Tabatha Gehling'
SELECT votes.created, votes.state, votes.phone_number FROM votes JOIN contestants ON votes.contestant_number = contestants.contestant_number WHERE contestants.contestant_name = 'Tabatha Gehling'","SELECT votes.created, votes.state, votes.phone_number FROM votes JOIN contestants ON votes.contestant_number = contestants.contestant_number WHERE contestants.contestant_name = 'Tabatha Gehling'"
433,540,What is the program id and the summary of the degree that has the most students enrolled?,student_transcripts_tracking,extra,"SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT dp.degree_program_id, dp.degree_summary_name  FROM degree_programs dp  
SELECT dp.degree_program_id, dp.degree_summary_name FROM degree_programs dp JOIN
SELECT dp.degree_program_id, dp.degree_summary_name  FROM degree_programs dp  
SELECT dp.degree_program_id, dp.degree_summary_name  FROM degree_programs dp  
SELECT dp.degree_program_id, dp.degree_summary_name FROM degree_programs dp JOIN
SELECT dp.degree_program_id, dp.degree_summary_name FROM degree_programs dp JOIN
SELECT dp.degree_program_id, dp.degree_summary_name FROM degree_programs dp JOIN","SELECT dp.degree_program_id, dp.degree_summary_name FROM degree_programs dp JOIN"
434,831,Return the average attendance across all shows.,orchestra,easy,SELECT avg(Attendance) FROM SHOW,7,"SELECT AVG(attendance) FROM show
SELECT AVG(attendance) FROM show
SELECT AVG(attendance) FROM show
SELECT AVG(attendance) FROM show
SELECT AVG(attendance) FROM show
SELECT AVG(attendance) FROM show
SELECT AVG(attendance) FROM show",SELECT AVG(attendance) FROM show
435,150,What are the names and ids of all makers with more than 3 models?,car_1,medium,"SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;",7,"SELECT car_makers.maker, car_makers.id  FROM car_makers  JOIN (     SELECT maker, COUNT(model) AS model_count      FROM model_list      GROUP BY maker ) AS models_count ON car_makers.id = models_count.maker WHERE models_count.model_count > 3
SELECT car_makers.id, car_makers.maker FROM car_makers JOIN (     SELECT maker, COUNT(model) AS model_count     FROM model_list     GROUP BY maker ) AS models ON car_makers.id = models.maker WHERE models.model_count > 3
SELECT car_makers.id, car_makers.maker FROM car_makers JOIN (     SELECT maker, COUNT(model) as model_count     FROM model_list     GROUP BY maker ) as model_counts ON car_makers.id = model_counts.maker WHERE model_count > 3
SELECT car_makers.maker, car_makers.id  FROM car_makers  INNER JOIN model_list ON car_makers.id = model_list.maker  GROUP BY car_makers.maker  HAVING COUNT(model_list.model) > 3
SELECT car_makers.maker, car_makers.id  FROM car_makers  JOIN model_list ON car_makers.id = model_list.maker  GROUP BY car_makers.maker  HAVING COUNT(model_list.model) > 3
SELECT car_makers.id, car_makers.maker FROM car_makers JOIN (     SELECT maker, COUNT(model) AS model_count     FROM model_list     GROUP BY maker ) AS models ON car_makers.id = models.maker WHERE models.model_count > 3
SELECT car_makers.id, car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id, car_makers.maker HAVING COUNT(model_list.model) > 3","SELECT car_makers.id, car_makers.maker FROM car_makers JOIN (     SELECT maker, COUNT(model) AS model_count     FROM model_list     GROUP BY maker ) AS models ON car_makers.id = models.maker WHERE models.model_count > 3"
436,44,What are the number of concerts that occurred in the stadium with the largest capacity ?,concert_singer,hard,select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1),7,"SELECT COUNT(*) FROM concert WHERE stadium_id = (SELECT stadium_id FROM stadium WHERE capacity = (SELECT MAX(capacity) FROM stadium))
SELECT COUNT(*) FROM concert WHERE stadium_id = (SELECT stadium_id FROM stadium WHERE capacity = (SELECT MAX(capacity) FROM stadium))
SELECT COUNT(*) FROM concert WHERE stadium_id = (SELECT stadium_id FROM stadium WHERE capacity = (SELECT MAX(capacity) FROM stadium))
SELECT COUNT(*) FROM concert WHERE stadium_id = (SELECT stadium_id FROM stadium ORDER BY capacity DESC LIMIT 1)
SELECT COUNT(*) FROM concert WHERE stadium_id = (SELECT stadium_id FROM stadium WHERE capacity = (SELECT MAX(capacity) FROM stadium))
SELECT COUNT(*) FROM concert WHERE stadium_id = (SELECT stadium_id FROM stadium WHERE capacity = (SELECT MAX(capacity) FROM stadium))
SELECT COUNT(*) FROM concert WHERE stadium_id = (SELECT stadium_id FROM stadium WHERE capacity = (SELECT MAX(capacity) FROM stadium))",SELECT COUNT(*) FROM concert WHERE stadium_id = (SELECT stadium_id FROM stadium WHERE capacity = (SELECT MAX(capacity) FROM stadium))
437,482,How many matches were played in each year?,wta_1,medium,"SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR",7,"SELECT year, COUNT(*) as matches_played FROM matches GROUP BY year
SELECT year, COUNT(*) as matches_played FROM matches GROUP BY year
SELECT year, COUNT(*) as total_matches FROM matches GROUP BY year
SELECT year, COUNT(*) as matches_played FROM matches GROUP BY year
SELECT year, COUNT(*) as matches_played FROM matches GROUP BY year
SELECT year, COUNT(*) as matches_played FROM matches GROUP BY year
SELECT year, COUNT(*) as matches_played FROM matches GROUP BY year","SELECT year, COUNT(*) as matches_played FROM matches GROUP BY year"
438,243,Find all airlines that have fewer than 200 flights.,flight_2,medium,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200,7,"SELECT airlines.airline FROM airlines LEFT JOIN flights ON airlines.airline = flights.airline GROUP BY airlines.airline HAVING COUNT(flights.flightno) < 200
SELECT airlines.airline FROM airlines LEFT JOIN flights ON airlines.airline = flights.airline GROUP BY airlines.airline HAVING COUNT(flights.flightno) < 200
SELECT airlines.airline FROM airlines LEFT JOIN flights ON airlines.airline = flights.airline GROUP BY airlines.airline HAVING COUNT(flights.flightno) < 200
SELECT airlines.airline FROM airlines LEFT JOIN flights ON airlines.airline = flights.airline GROUP BY airlines.airline HAVING COUNT(flights.flightno) < 200
SELECT airlines.airline FROM airlines LEFT JOIN flights ON airlines.airline = flights.airline GROUP BY airlines.airline HAVING COUNT(flights.flightno) < 200
SELECT airlines.airline  FROM airlines  LEFT JOIN flights ON airlines.airline = flights.airline  GROUP BY airlines.airline  HAVING COUNT(flights.flightno) < 200
SELECT airlines.airline FROM airlines LEFT JOIN flights ON airlines.airline = flights.airline GROUP BY airlines.airline HAVING COUNT(flights.flightno) < 200",SELECT airlines.airline FROM airlines LEFT JOIN flights ON airlines.airline = flights.airline GROUP BY airlines.airline HAVING COUNT(flights.flightno) < 200
439,878,Which grade has the most high schoolers?,network_1,hard,SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1,7,"SELECT grade, COUNT(*) as count FROM highschooler GROUP BY grade ORDER BY count DESC LIMIT 1
SELECT grade, COUNT(*) as count FROM highschooler GROUP BY grade ORDER BY count DESC LIMIT 1
SELECT grade FROM highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1
SELECT grade, COUNT(*) as count FROM highschooler GROUP BY grade ORDER BY count DESC LIMIT 1
SELECT grade FROM highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1
SELECT grade, COUNT(*) as count FROM highschooler GROUP BY grade ORDER BY count DESC LIMIT 1
SELECT grade, COUNT(*) as count FROM highschooler GROUP BY grade ORDER BY count DESC LIMIT 1","SELECT grade, COUNT(*) as count FROM highschooler GROUP BY grade ORDER BY count DESC LIMIT 1"
440,719,How long is the people’s average life expectancy in Central Africa?,world_1,easy,"SELECT avg(LifeExpectancy) FROM country WHERE Region  =  ""Central Africa""",7,"SELECT AVG(lifeexpectancy) FROM country WHERE continent = 'Africa' AND region = 'Central Africa'
SELECT AVG(lifeexpectancy) FROM country WHERE continent = 'Africa' AND region = 'Central Africa'
SELECT AVG(lifeexpectancy) FROM country WHERE continent = 'Africa' AND region = 'Central Africa'
SELECT AVG(lifeexpectancy) FROM country WHERE continent = 'Africa' AND region = 'Central Africa'
SELECT AVG(lifeexpectancy) FROM country WHERE continent = 'Africa' AND region = 'Central Africa'
SELECT AVG(lifeexpectancy) FROM country WHERE continent = 'Africa' AND region = 'Central Africa'
SELECT AVG(lifeexpectancy) FROM country WHERE continent = 'Africa' AND region = 'Central Africa'",SELECT AVG(lifeexpectancy) FROM country WHERE continent = 'Africa' AND region = 'Central Africa'
441,341,Show all template type codes and the number of documents using each type.,cre_Doc_Template_Mgt,medium,"SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code",7,"SELECT ref_template_types.template_type_code, COUNT(documents.document_id)  FROM ref_template_types  LEFT JOIN templates ON ref_template_types.template_type_code = templates.template_type_code  LEFT JOIN documents ON templates.template_id = documents.template_id  GROUP BY ref_template_types.template_type_code
SELECT ref_template_types.template_type_code, COUNT(documents.document_id)  FROM ref_template_types  LEFT JOIN templates ON ref_template_types.template_type_code = templates.template_type_code  LEFT JOIN documents ON templates.template_id = documents.template_id  GROUP BY ref_template_types.template_type_code
SELECT ref_template_types.template_type_code, COUNT(documents.document_id) as document_count FROM ref_template_types LEFT JOIN templates ON ref_template_types.template_type_code = templates.template_type_code LEFT JOIN documents ON templates.template_id = documents.template_id GROUP BY ref_template_types.template_type_code
SELECT ref_template_types.template_type_code, COUNT(documents.document_id)  FROM ref_template_types  LEFT JOIN templates ON ref_template_types.template_type_code = templates.template_type_code  LEFT JOIN documents ON templates.template_id = documents.template_id  GROUP BY ref_template_types.template_type_code
SELECT ref_template_types.template_type_code, COUNT(documents.document_id)  FROM ref_template_types  LEFT JOIN templates ON ref_template_types.template_type_code = templates.template_type_code  LEFT JOIN documents ON templates.template_id = documents.template_id  GROUP BY ref_template_types.template_type_code
SELECT ref_template_types.template_type_code, COUNT(documents.document_id)  FROM ref_template_types  LEFT JOIN templates ON ref_template_types.template_type_code = templates.template_type_code  LEFT JOIN documents ON templates.template_id = documents.template_id  GROUP BY ref_template_types.template_type_code
SELECT ref_template_types.template_type_code, COUNT(documents.document_id)  FROM ref_template_types  LEFT JOIN templates ON ref_template_types.template_type_code = templates.template_type_code  LEFT JOIN documents ON templates.template_id = documents.template_id  GROUP BY ref_template_types.template_type_code","SELECT ref_template_types.template_type_code, COUNT(documents.document_id)  FROM ref_template_types  LEFT JOIN templates ON ref_template_types.template_type_code = templates.template_type_code  LEFT JOIN documents ON templates.template_id = documents.template_id  GROUP BY ref_template_types.template_type_code"
442,920,What is the average age of the dogs who have gone through any treatments?,dog_kennels,hard,SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments ),7,"SELECT AVG(age)  FROM dogs  WHERE dog_id IN (SELECT dog_id FROM treatments)
SELECT AVG(age)  FROM dogs  WHERE dog_id IN (SELECT dog_id FROM treatments)
SELECT AVG(age) FROM dogs WHERE dog_id IN (     SELECT dog_id     FROM treatments )
SELECT AVG(age)  FROM dogs  WHERE dog_id IN (SELECT dog_id FROM treatments)
SELECT AVG(age)  FROM dogs  WHERE dog_id IN (SELECT dog_id FROM treatments)
SELECT AVG(age)  FROM dogs  WHERE dog_id IN (SELECT dog_id FROM treatments)
SELECT AVG(age)  FROM dogs  WHERE dog_id IN (SELECT dog_id FROM treatments)",SELECT AVG(age)  FROM dogs  WHERE dog_id IN (SELECT dog_id FROM treatments)
443,772,What are the countries that have greater surface area than any country in Europe?,world_1,hard,"SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  ""Europe"")",7,"SELECT c1.name AS country_name FROM country AS c1 WHERE c1.surfacearea > ANY (     SELECT c2.surfacearea     FROM country AS c2     WHERE c2.continent = 'Europe' )
SELECT c1.name AS country_name FROM country AS c1 WHERE c1.surfacearea > ALL (     SELECT c2.surfacearea     FROM country AS c2     WHERE c2.continent = 'Europe' ) 
SELECT c1.name AS country_name FROM country AS c1 WHERE c1.surfacearea > ALL (     SELECT c2.surfacearea     FROM country AS c2     WHERE c2.continent = 'Europe' ) 
SELECT c1.name AS Country FROM country c1 WHERE c1.surfacearea > ALL (     SELECT c2.surfacearea     FROM country c2     WHERE c2.continent = 'Europe' ) 
SELECT c1.name AS country_name FROM country AS c1 WHERE c1.surfacearea > ALL (     SELECT c2.surfacearea     FROM country AS c2     WHERE c2.continent = 'Europe' ) 
SELECT c1.name AS country_name FROM country AS c1 WHERE c1.surfacearea > ALL (     SELECT c2.surfacearea     FROM country AS c2     WHERE c2.continent = 'Europe' ) 
SELECT c1.name AS Country FROM country c1 WHERE c1.surfacearea > ALL (     SELECT c2.surfacearea     FROM country c2     WHERE c2.continent = 'Europe' ) ",SELECT c1.name AS country_name FROM country AS c1 WHERE c1.surfacearea > ALL (     SELECT c2.surfacearea     FROM country AS c2     WHERE c2.continent = 'Europe' ) 
444,695,"Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes?",voter_1,extra,"SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1",7,"SELECT contestants.contestant_number, contestants.contestant_name FROM contestants JOIN votes ON contestants.contestant_number = votes.contestant_number GROUP BY votes.contestant_number ORDER BY COUNT(votes.vote_id) ASC LIMIT 1
SELECT contestants.contestant_number, contestants.contestant_name FROM contestants JOIN votes ON contestants.contestant_number = votes.contestant_number GROUP BY votes.contestant_number ORDER BY COUNT(votes.vote_id) ASC LIMIT 1
SELECT contestants.contestant_number, contestants.contestant_name FROM contestants JOIN votes ON contestants.contestant_number = votes.contestant_number GROUP BY votes.contestant_number ORDER BY COUNT(votes.vote_id) ASC LIMIT 1
SELECT contestants.contestant_number, contestants.contestant_name FROM contestants JOIN votes ON contestants.contestant_number = votes.contestant_number GROUP BY votes.contestant_number ORDER BY COUNT(votes.vote_id) ASC LIMIT 1
SELECT contestants.contestant_number, contestants.contestant_name FROM contestants JOIN votes ON contestants.contestant_number = votes.contestant_number GROUP BY votes.contestant_number ORDER BY COUNT(votes.vote_id) ASC LIMIT 1
SELECT contestants.contestant_number, contestants.contestant_name FROM contestants JOIN votes ON contestants.contestant_number = votes.contestant_number GROUP BY votes.contestant_number ORDER BY COUNT(votes.vote_id) ASC LIMIT 1
SELECT contestants.contestant_number, contestants.contestant_name FROM contestants JOIN votes ON contestants.contestant_number = votes.contestant_number GROUP BY votes.contestant_number ORDER BY COUNT(votes.vote_id) ASC LIMIT 1","SELECT contestants.contestant_number, contestants.contestant_name FROM contestants JOIN votes ON contestants.contestant_number = votes.contestant_number GROUP BY votes.contestant_number ORDER BY COUNT(votes.vote_id) ASC LIMIT 1"
445,345,Show all template type codes that are not used by any document.,cre_Doc_Template_Mgt,hard,SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id,7,"SELECT templates.template_type_code  FROM templates  LEFT JOIN documents ON templates.template_type_code = documents.ref_template_types  WHERE documents.ref_template_types IS NULL
SELECT templates.template_type_code  FROM templates  LEFT JOIN documents ON templates.template_type_code = documents.ref_template_types  WHERE documents.ref_template_types IS NULL
SELECT templates.template_type_code  FROM templates  LEFT JOIN documents ON templates.template_type_code = documents.ref_template_types  WHERE documents.ref_template_types IS NULL
SELECT templates.template_type_code  FROM templates  LEFT JOIN documents ON templates.template_type_code = documents.ref_template_types  WHERE documents.ref_template_types IS NULL
SELECT templates.template_type_code  FROM templates  LEFT JOIN documents ON templates.template_type_code = documents.ref_template_types  WHERE documents.ref_template_types IS NULL
SELECT templates.template_type_code  FROM templates  LEFT JOIN documents ON templates.template_type_code = documents.ref_template_types  WHERE documents.ref_template_types IS NULL
SELECT templates.template_type_code  FROM templates  LEFT JOIN documents ON templates.template_type_code = documents.ref_template_types  WHERE documents.ref_template_types IS NULL",SELECT templates.template_type_code  FROM templates  LEFT JOIN documents ON templates.template_type_code = documents.ref_template_types  WHERE documents.ref_template_types IS NULL
446,977,Show me the cost of the most recently performed treatment.,dog_kennels,medium,SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1,7,"SELECT MAX(treatments.cost_of_treatment) AS most_recent_treatment_cost FROM treatments JOIN (SELECT dogs.dog_id, MAX(treatments.date_of_treatment) AS most_recent_treatment_date       FROM dogs       JOIN treatments ON dogs.dog_id = treatments.dog_id       GROUP BY dogs.dog_id) AS recent_treatments ON treatments.dog_id = recent_treatments.dog_id AND treatments.date_of_treatment = recent_treatments.most_recent_treatment_
SELECT MAX(treatments.cost_of_treatment) AS max_cost FROM treatments
SELECT MAX(treatments.cost_of_treatment) AS most_recent_treatment_cost FROM treatments JOIN (SELECT dogs.dog_id, MAX(treatments.date_of_treatment) AS latest_treatment_date       FROM dogs       JOIN treatments ON dogs.dog_id = treatments.dog_id       GROUP BY dogs.dog_id) AS latest_treatments ON treatments.dog_id = latest_treatments.dog_id AND treatments.date_of_treatment = latest_treatments.latest_treatment_date
SELECT MAX(treatments.cost_of_treatment) AS most_recent_treatment_cost FROM treatments ORDER BY treatments.date_of_treatment DESC
SELECT MAX(treatments.cost_of_treatment) AS most_recent_treatment_cost FROM treatments ORDER BY treatments.date_of_treatment DESC
SELECT MAX(treatments.cost_of_treatment) AS most_recent_treatment_cost FROM treatments JOIN (SELECT dogs.dog_id, MAX(treatments.date_of_treatment) AS most_recent_treatment_date       FROM dogs       JOIN treatments ON dogs.dog_id = treatments.dog_id       GROUP BY dogs.dog_id) AS recent_treatments ON treatments.dog_id = recent_treatments.dog_id AND treatments.date_of_treatment = recent_treatments.most_recent_treatment_
SELECT MAX(treatments.cost_of_treatment) AS most_recent_treatment_cost FROM treatments JOIN (SELECT dogs.dog_id, MAX(treatments.date_of_treatment) AS most_recent_treatment_date       FROM dogs       JOIN treatments ON dogs.dog_id = treatments.dog_id       GROUP BY dogs.dog_id) AS recent_treatments ON treatments.dog_id = recent_treatments.dog_id AND treatments.date_of_treatment = recent_treatments.most_recent_treatment_","SELECT MAX(treatments.cost_of_treatment) AS most_recent_treatment_cost FROM treatments JOIN (SELECT dogs.dog_id, MAX(treatments.date_of_treatment) AS most_recent_treatment_date       FROM dogs       JOIN treatments ON dogs.dog_id = treatments.dog_id       GROUP BY dogs.dog_id) AS recent_treatments ON treatments.dog_id = recent_treatments.dog_id AND treatments.date_of_treatment = recent_treatments.most_recent_treatment_"
447,83,Find the last name of the student who has a cat that is age 3.,pets_1,hard,SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat',7,"SELECT student.lname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' AND pets.pet_age = 3
SELECT student.lname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' AND pets.pet_age = 3
SELECT student.lname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' AND pets.pet_age = 3
SELECT student.lname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' AND pets.pet_age = 3
SELECT student.lname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' AND pets.pet_age = 3
SELECT student.lname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' AND pets.pet_age = 3
SELECT student.lname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' AND pets.pet_age = 3",SELECT student.lname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' AND pets.pet_age = 3
448,387,List the name of teachers whose hometown is not `` Little Lever Urban District '' .,course_teach,easy,"select name from teacher where hometown != ""little lever urban district""",7,"SELECT teacher.name  FROM teacher  WHERE teacher.hometown != 'Little Lever Urban District'
SELECT teacher.name  FROM teacher  WHERE teacher.hometown != 'Little Lever Urban District'
SELECT teacher.name  FROM teacher  WHERE teacher.hometown != 'Little Lever Urban District'
SELECT teacher.name  FROM teacher  WHERE teacher.hometown != 'Little Lever Urban District'
SELECT teacher.name  FROM teacher  WHERE teacher.hometown != 'Little Lever Urban District'
SELECT teacher.name  FROM teacher  WHERE teacher.hometown != 'Little Lever Urban District'
SELECT teacher.name  FROM teacher  WHERE teacher.hometown != 'Little Lever Urban District'",SELECT teacher.name  FROM teacher  WHERE teacher.hometown != 'Little Lever Urban District'
449,12,List all song names by singers above the average age.,concert_singer,hard,SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer),7,"SELECT s.song_name  FROM singer AS s  WHERE s.age > (SELECT AVG(s2.age) FROM singer AS s2) 
SELECT s.song_name  FROM singer AS s  WHERE s.age > (SELECT AVG(s.age) FROM singer AS s) ORDER BY s.song_name
SELECT s.song_name  FROM singer AS s  WHERE s.age > (SELECT AVG(s.age) FROM singer AS s) 
SELECT s.song_name  FROM singer AS s  WHERE s.age > (SELECT AVG(s.age) FROM singer AS s) 
SELECT s.song_name  FROM singer AS s  WHERE s.age > (SELECT AVG(s.age) FROM singer AS s) ORDER BY s.song_name
SELECT s.song_name  FROM singer AS s  WHERE s.age > (SELECT AVG(s.age) FROM singer AS s) ORDER BY s.song_name
SELECT s.song_name  FROM singer AS s  WHERE s.age > (SELECT AVG(s.age) FROM singer AS s) ORDER BY s.song_name ASC",SELECT s.song_name  FROM singer AS s  WHERE s.age > (SELECT AVG(s.age) FROM singer AS s) ORDER BY s.song_name
450,343,Which template type code is used by most number of documents?,cre_Doc_Template_Mgt,extra,SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1,7,"SELECT templates.template_type_code, COUNT(documents.document_id) as document_count FROM templates JOIN documents ON templates.template_id = documents.template_id GROUP BY templates.template_type_code ORDER BY document_count DESC LIMIT 1
SELECT templates.template_type_code, COUNT(documents.document_id) as document_count FROM templates JOIN documents ON templates.template_id = documents.template_id GROUP BY templates.template_type_code ORDER BY document_count DESC LIMIT 1
SELECT templates.template_type_code, COUNT(documents.document_id) as document_count FROM templates JOIN documents ON templates.template_id = documents.template_id GROUP BY templates.template_type_code ORDER BY document_count DESC LIMIT 1
SELECT templates.template_type_code, COUNT(documents.document_id) as document_count FROM templates JOIN documents ON templates.template_id = documents.template_id GROUP BY templates.template_type_code ORDER BY document_count DESC LIMIT 1
SELECT templates.template_type_code, COUNT(documents.document_id) as document_count FROM templates JOIN documents ON templates.template_id = documents.template_id GROUP BY templates.template_type_code ORDER BY document_count DESC LIMIT 1
SELECT templates.template_type_code, COUNT(documents.document_id) as document_count FROM templates JOIN documents ON templates.template_id = documents.template_id GROUP BY templates.template_type_code ORDER BY document_count DESC LIMIT 1
SELECT templates.template_type_code, COUNT(documents.document_id) AS document_count FROM templates JOIN documents ON templates.template_id = documents.template_id GROUP BY templates.template_type_code ORDER BY document_count DESC LIMIT 1","SELECT templates.template_type_code, COUNT(documents.document_id) as document_count FROM templates JOIN documents ON templates.template_id = documents.template_id GROUP BY templates.template_type_code ORDER BY document_count DESC LIMIT 1"
451,938,What is the description of the treatment type that costs the least money in total?,dog_kennels,extra,SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1,7,"SELECT treatment_types.treatment_type_description, SUM(treatments.cost_of_treatment) as total_cost FROM treatment_types JOIN treatments ON treatment_types.treatment_type_code = treatments.treatment_type_code GROUP BY treatment_types.treatment_type_description ORDER BY total_cost ASC LIMIT 1
SELECT treatment_types.treatment_type_description FROM treatment_types JOIN charges ON treatment_types.treatment_type_code = charges.charge_type GROUP BY treatment_types.treatment_type_code ORDER BY SUM(charges.charge_amount) ASC LIMIT 1
SELECT treatment_types.treatment_type_description, MIN(treatments.cost_of_treatment) as MinCost FROM treatment_types JOIN treatments ON treatment_types.treatment_type_code = treatments.treatment_type_code GROUP BY treatment_types.treatment_type_description
SELECT treatment_types.treatment_type_description, SUM(treatments.cost_of_treatment) as total_cost FROM treatment_types JOIN treatments ON treatment_types.treatment_type_code = treatments.treatment_type_code GROUP BY treatment_types.treatment_type_description ORDER BY total_cost ASC LIMIT 1
SELECT treatment_types.treatment_type_description, SUM(treatments.cost_of_treatment) as total_cost FROM treatment_types JOIN treatments ON treatment_types.treatment_type_code = treatments.treatment_type_code GROUP BY treatment_types.treatment_type_description ORDER BY total_cost ASC LIMIT 1
SELECT treatment_types.treatment_type_description FROM treatment_types JOIN charges ON treatment_types.treatment_type_code = charges.charge_type GROUP BY treatment_types.treatment_type_code ORDER BY SUM(charges.charge_amount) ASC LIMIT 1
SELECT treatment_types.treatment_type_description FROM treatment_types JOIN charges ON treatment_types.treatment_type_code = charges.charge_type GROUP BY treatment_types.treatment_type_code ORDER BY SUM(charges.charge_amount) ASC LIMIT 1","SELECT treatment_types.treatment_type_description, SUM(treatments.cost_of_treatment) as total_cost FROM treatment_types JOIN treatments ON treatment_types.treatment_type_code = treatments.treatment_type_code GROUP BY treatment_types.treatment_type_description ORDER BY total_cost ASC LIMIT 1"
452,406,What are the names of the teachers and how many courses do they teach?,course_teach,medium,"SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name",7,"SELECT t.name, COUNT(c.course_id) as courses_taught FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id GROUP BY t.teacher_id
SELECT t.name, COUNT(c.course_id) as course_count FROM teacher as t JOIN course_arrange as ca ON t.teacher_id = ca.teacher_id JOIN course as c ON ca.course_id = c.course_id GROUP BY t.teacher_id
SELECT t.name, COUNT(c.course_id) as courses_taught FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id GROUP BY t.teacher_id
SELECT t.name, COUNT(c.course_id) as course_count FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id GROUP BY t.teacher_id
SELECT t.name, COUNT(c.course_id) as courses_taught FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id GROUP BY t.teacher_id
SELECT t.name, COUNT(c.course_id) as courses_taught FROM teacher t LEFT JOIN course_arrange ca ON t.teacher_id = ca.teacher_id LEFT JOIN course c ON ca.course_id = c.course_id GROUP BY t.teacher_id
SELECT t.name, COUNT(c.course_id) as course_count FROM teacher as t JOIN course_arrange as ca ON t.teacher_id = ca.teacher_id JOIN course as c ON ca.course_id = c.course_id GROUP BY t.teacher_id","SELECT t.name, COUNT(c.course_id) as courses_taught FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id GROUP BY t.teacher_id"
453,944,What are the first name and last name of the professionals who have done treatment with cost below average?,dog_kennels,extra,"SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )",7,"SELECT professionals.first_name, professionals.last_name FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id JOIN (SELECT AVG(cost_of_treatment) as avg_cost FROM treatments) as subquery WHERE treatments.cost_of_treatment < subquery.avg_cost
SELECT professionals.first_name, professionals.last_name FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id JOIN (SELECT AVG(cost_of_treatment) as avg_cost       FROM treatments) as subquery WHERE treatments.cost_of_treatment < subquery.avg_cost
SELECT professionals.first_name, professionals.last_name FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id JOIN (SELECT AVG(cost_of_treatment) as average_cost FROM treatments) as subquery WHERE treatments.cost_of_treatment < subquery.average_cost
SELECT professionals.first_name, professionals.last_name FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id JOIN (SELECT AVG(cost_of_treatment) as avg_cost       FROM treatments) as subquery WHERE treatments.cost_of_treatment < subquery.avg_cost
SELECT professionals.first_name, professionals.last_name FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id JOIN (SELECT AVG(cost_of_treatment) as avg_cost       FROM treatments) as subquery WHERE treatments.cost_of_treatment < subquery.avg_cost
SELECT professionals.first_name, professionals.last_name FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id WHERE treatments.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM treatments)
SELECT professionals.first_name, professionals.last_name FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id WHERE treatments.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM treatments)","SELECT professionals.first_name, professionals.last_name FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id JOIN (SELECT AVG(cost_of_treatment) as avg_cost       FROM treatments) as subquery WHERE treatments.cost_of_treatment < subquery.avg_cost"
454,861,What are years of founding for orchestras that have had more than a single performance?,orchestra,medium,SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1,7,"SELECT orchestra.year_of_founded FROM orchestra JOIN performance ON orchestra.orchestra_id = performance.orchestra_id GROUP BY performance.orchestra_id HAVING COUNT(performance.performance_id) > 1
SELECT orchestra.year_of_founded FROM orchestra JOIN performance ON orchestra.orchestra_id = performance.orchestra_id GROUP BY performance.orchestra_id HAVING COUNT(performance.performance_id) > 1
SELECT orchestra.year_of_founded FROM orchestra JOIN performance ON orchestra.orchestra_id = performance.orchestra_id GROUP BY performance.orchestra_id HAVING COUNT(performance.performance_id) > 1
SELECT orchestra.year_of_founded FROM orchestra JOIN performance ON orchestra.orchestra_id = performance.orchestra_id GROUP BY performance.orchestra_id HAVING COUNT(performance.performance_id) > 1
SELECT orchestra.year_of_founded FROM orchestra JOIN performance ON orchestra.orchestra_id = performance.orchestra_id GROUP BY performance.orchestra_id HAVING COUNT(performance.performance_id) > 1
SELECT orchestra.year_of_founded  FROM orchestra  JOIN performance ON orchestra.orchestra_id = performance.orchestra_id  GROUP BY orchestra.orchestra_id  HAVING COUNT(performance.performance_id) > 1
SELECT orchestra.year_of_founded  FROM orchestra  JOIN performance ON orchestra.orchestra_id = performance.orchestra_id  GROUP BY orchestra.orchestra_id  HAVING COUNT(performance.performance_id) > 1",SELECT orchestra.year_of_founded FROM orchestra JOIN performance ON orchestra.orchestra_id = performance.orchestra_id GROUP BY performance.orchestra_id HAVING COUNT(performance.performance_id) > 1
455,909,What are the names of students who have 2 or more likes?,network_1,medium,SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2,7,"SELECT highschooler.name  FROM highschooler  JOIN likes ON highschooler.id = likes.student_id  GROUP BY highschooler.id  HAVING COUNT(likes.liked_id) >= 2
SELECT highschooler.name  FROM highschooler  JOIN likes ON highschooler.id = likes.student_id  GROUP BY highschooler.id  HAVING COUNT(likes.liked_id) >= 2
SELECT highschooler.name  FROM highschooler  JOIN likes ON highschooler.id = likes.student_id  GROUP BY highschooler.id  HAVING COUNT(likes.liked_id) >= 2
SELECT highschooler.name  FROM highschooler  INNER JOIN likes ON highschooler.id = likes.student_id  GROUP BY highschooler.id  HAVING COUNT(likes.liked_id) >= 2
SELECT highschooler.name  FROM highschooler  JOIN likes ON highschooler.id = likes.student_id  GROUP BY highschooler.id  HAVING COUNT(likes.liked_id) >= 2
SELECT highschooler.name  FROM highschooler  INNER JOIN likes ON highschooler.id = likes.student_id  GROUP BY highschooler.id  HAVING COUNT(likes.liked_id) >= 2
SELECT highschooler.name  FROM highschooler  JOIN likes ON highschooler.id = likes.student_id  GROUP BY highschooler.id  HAVING COUNT(likes.liked_id) >= 2",SELECT highschooler.name  FROM highschooler  JOIN likes ON highschooler.id = likes.student_id  GROUP BY highschooler.id  HAVING COUNT(likes.liked_id) >= 2
456,987,Compute the average age of all the dogs.,dog_kennels,easy,SELECT avg(age) FROM Dogs,7,"SELECT AVG(age) FROM dogs
SELECT AVG(age) FROM dogs
SELECT AVG(age) FROM dogs
SELECT AVG(age) FROM dogs
SELECT AVG(age) FROM dogs
SELECT AVG(age) FROM dogs
SELECT AVG(age) FROM dogs",SELECT AVG(age) FROM dogs
457,593,"List the title of all cartoon directed by ""Ben Jones"" or ""Brandon Vietti"".",tvshow,medium,"SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"" OR Directed_by = ""Brandon Vietti"";",7,"SELECT c.title  FROM cartoon c  WHERE c.directed_by IN ('Ben Jones', 'Brandon Vietti')
SELECT c.title  FROM cartoon AS c  WHERE c.directed_by IN ('Ben Jones', 'Brandon Vietti')
SELECT c.title  FROM cartoon AS c  WHERE c.directed_by IN ('Ben Jones', 'Brandon Vietti')
SELECT c.title  FROM cartoon AS c  WHERE c.directed_by IN ('Ben Jones', 'Brandon Vietti')
SELECT c.title  FROM cartoon AS c  WHERE c.directed_by IN ('Ben Jones', 'Brandon Vietti')
SELECT c.title  FROM cartoon AS c  WHERE c.directed_by IN ('Ben Jones', 'Brandon Vietti')
SELECT c.title  FROM cartoon AS c  WHERE c.directed_by IN ('Ben Jones', 'Brandon Vietti')","SELECT c.title  FROM cartoon AS c  WHERE c.directed_by IN ('Ben Jones', 'Brandon Vietti')"
458,248,Give the flight numbers of flights leaving from APG.,flight_2,easy,"SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  ""APG""",7,"SELECT flights.flightno FROM flights INNER JOIN airlines ON flights.airline = airlines.abbreviation WHERE airlines.airportcode = 'APG'
SELECT flights.flightno FROM flights INNER JOIN airlines ON flights.airline = airlines.abbreviation WHERE airlines.airportcode = 'APG'
SELECT flights.flightno FROM flights INNER JOIN airlines ON flights.airline = airlines.abbreviation WHERE airlines.abbreviation = 'APG'
SELECT flights.flightno FROM flights INNER JOIN airlines ON flights.airline = airlines.abbreviation WHERE airlines.abbreviation = 'APG'
SELECT flights.flightno FROM flights INNER JOIN airlines ON flights.airline = airlines.abbreviation WHERE airlines.abbreviation = 'APG'
SELECT flights.flightno FROM flights INNER JOIN airlines ON flights.airline = airlines.abbreviation WHERE airlines.abbreviation = 'APG'
SELECT flights.flightno FROM flights INNER JOIN airlines ON flights.airline = airlines.abbreviation WHERE airlines.abbreviation = 'APG'",SELECT flights.flightno FROM flights INNER JOIN airlines ON flights.airline = airlines.abbreviation WHERE airlines.abbreviation = 'APG'
459,855,What are the orchestras that do not have any performances?,orchestra,hard,SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance),7,"SELECT orchestra.orchestra FROM orchestra LEFT JOIN performance ON orchestra.orchestra_id = performance.orchestra_id WHERE performance.orchestra_id IS NULL
SELECT orchestra.orchestra FROM orchestra LEFT JOIN performance ON orchestra.orchestra_id = performance.orchestra_id WHERE performance.orchestra_id IS NULL
SELECT orchestra.orchestra FROM orchestra LEFT JOIN performance ON orchestra.orchestra_id = performance.orchestra_id WHERE performance.orchestra_id IS NULL
SELECT orchestra.orchestra FROM orchestra LEFT JOIN performance ON orchestra.orchestra_id = performance.orchestra_id WHERE performance.orchestra_id IS NULL
SELECT orchestra.orchestra FROM orchestra LEFT JOIN performance ON orchestra.orchestra_id = performance.orchestra_id WHERE performance.orchestra_id IS NULL
SELECT orchestra.orchestra FROM orchestra LEFT JOIN performance ON orchestra.orchestra_id = performance.orchestra_id WHERE performance.orchestra_id IS NULL
SELECT orchestra.orchestra FROM orchestra LEFT JOIN performance ON orchestra.orchestra_id = performance.orchestra_id WHERE performance.orchestra_id IS NULL",SELECT orchestra.orchestra FROM orchestra LEFT JOIN performance ON orchestra.orchestra_id = performance.orchestra_id WHERE performance.orchestra_id IS NULL
460,930,"Which owner owns the most dogs? List the owner id, first name and last name.",dog_kennels,extra,"SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT owners.owner_id, owners.first_name, owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id GROUP BY owners.owner_id, owners.first_name, owners.last_name ORDER BY COUNT(dogs.dog_id) DESC LIMIT 1
SELECT owners.owner_id, owners.first_name, owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id GROUP BY owners.owner_id, owners.first_name, owners.last_name ORDER BY COUNT(dogs.dog_id) DESC LIMIT 1
SELECT owners.owner_id, owners.first_name, owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id GROUP BY owners.owner_id, owners.first_name, owners.last_name ORDER BY COUNT(dogs.dog_id) DESC LIMIT 1
SELECT owners.owner_id, owners.first_name, owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id GROUP BY owners.owner_id, owners.first_name, owners.last_name ORDER BY COUNT(dogs.dog_id) DESC LIMIT 1
SELECT owners.owner_id, owners.first_name, owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id GROUP BY owners.owner_id, owners.first_name, owners.last_name ORDER BY COUNT(dogs.dog_id) DESC LIMIT 1
SELECT owners.owner_id, owners.first_name, owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id GROUP BY owners.owner_id, owners.first_name, owners.last_name ORDER BY COUNT(dogs.dog_id) DESC LIMIT 1
SELECT owners.owner_id, owners.first_name, owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id GROUP BY owners.owner_id, owners.first_name, owners.last_name ORDER BY COUNT(dogs.dog_id) DESC LIMIT 1","SELECT owners.owner_id, owners.first_name, owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id GROUP BY owners.owner_id, owners.first_name, owners.last_name ORDER BY COUNT(dogs.dog_id) DESC LIMIT 1"
461,620,"When did the episode ""A Love of a Lifetime"" air?",tvshow,easy,"SELECT Air_Date FROM TV_series WHERE Episode = ""A Love of a Lifetime"";",7,"SELECT tv_series.air_date  FROM tv_series  INNER JOIN tv_channel ON tv_series.channel = tv_channel.id  INNER JOIN cartoon ON tv_series.id = cartoon.id  WHERE tv_series.episode = 'A Love of a Lifetime'
SELECT tv_series.air_date FROM tv_series WHERE tv_series.episode = 'A Love of a Lifetime'
SELECT tv_series.air_date FROM tv_series WHERE tv_series.episode = 'A Love of a Lifetime'
SELECT tv_series.air_date  FROM tv_series  JOIN tv_channel ON tv_series.channel = tv_channel.id  WHERE tv_series.episode = 'A Love of a Lifetime'
SELECT tv_series.air_date FROM tv_series WHERE tv_series.episode = 'A Love of a Lifetime'
SELECT tv_series.air_date FROM tv_series WHERE tv_series.episode = 'A Love of a Lifetime'
SELECT tv_series.air_date FROM tv_series WHERE tv_series.episode = 'A Love of a Lifetime'",SELECT tv_series.air_date FROM tv_series WHERE tv_series.episode = 'A Love of a Lifetime'
462,786,Which unique cities are in Asian countries where Chinese is the official language ?,world_1,hard,"select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  ""asia""",7,"SELECT DISTINCT city.name  FROM city  JOIN country ON city.countrycode = country.code  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE country.continent = 'Asia' AND countrylanguage.language = 'Chinese' AND countrylanguage.isofficial = 'T'
SELECT DISTINCT city.name  FROM city  JOIN country ON city.countrycode = country.code  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE country.continent = 'Asia' AND countrylanguage.language = 'Chinese' AND countrylanguage.isofficial = 'T'
SELECT DISTINCT city.name  FROM city  JOIN country ON city.countrycode = country.code  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE country.continent = 'Asia' AND countrylanguage.language = 'Chinese' AND countrylanguage.isofficial = 'T'
SELECT DISTINCT city.name  FROM city  JOIN country ON city.countrycode = country.code  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE country.continent = 'Asia' AND countrylanguage.language = 'Chinese' AND countrylanguage.isofficial = 'T'
SELECT DISTINCT city.name  FROM city  JOIN country ON city.countrycode = country.code  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE country.continent = 'Asia' AND countrylanguage.language = 'Chinese' AND countrylanguage.isofficial = 'T'
SELECT DISTINCT city.name  FROM city  JOIN country ON city.countrycode = country.code  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE country.continent = 'Asia' AND countrylanguage.language = 'Chinese' AND countrylanguage.isofficial = 'T'
SELECT DISTINCT city.name  FROM city  JOIN country ON city.countrycode = country.code  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE country.continent = 'Asia' AND countrylanguage.language = 'Chinese' AND countrylanguage.isofficial = 'T'",SELECT DISTINCT city.name  FROM city  JOIN country ON city.countrycode = country.code  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE country.continent = 'Asia' AND countrylanguage.language = 'Chinese' AND countrylanguage.isofficial = 'T'
463,390,What are the names of the teachers who are aged either 32 or 33?,course_teach,medium,SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33,7,"SELECT teacher.name  FROM teacher  WHERE teacher.age IN (32, 33)
SELECT teacher.name  FROM teacher  WHERE teacher.age IN (32, 33)
SELECT teacher.name  FROM teacher  WHERE teacher.age IN (32, 33)
SELECT teacher.name  FROM teacher  WHERE teacher.age IN (32, 33)
SELECT teacher.name  FROM teacher  WHERE teacher.age IN (32, 33)
SELECT teacher.name  FROM teacher  WHERE teacher.age IN (32, 33)
SELECT teacher.name  FROM teacher  WHERE teacher.age IN (32, 33)","SELECT teacher.name  FROM teacher  WHERE teacher.age IN (32, 33)"
464,891,Return the names of friends of the high school student Kyle.,network_1,hard,"SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  ""Kyle""",7,"SELECT highschooler.name  FROM highschooler  INNER JOIN friend ON highschooler.id = friend.student_id  WHERE friend.friend_id = (SELECT highschooler.id FROM highschooler WHERE highschooler.name = 'Kyle')
SELECT highschooler.name  FROM highschooler  INNER JOIN friend ON highschooler.id = friend.student_id  INNER JOIN highschooler friend_highschooler ON friend.friend_id = friend_highschooler.id  WHERE friend_highschooler.name = 'Kyle'
SELECT highschooler.name  FROM highschooler  INNER JOIN friend ON highschooler.id = friend.student_id  WHERE friend.friend_id = (SELECT highschooler.id FROM highschooler WHERE highschooler.name = 'Kyle')
SELECT highschooler.name  FROM highschooler  INNER JOIN friend ON highschooler.id = friend.student_id  WHERE friend.friend_id IN (SELECT id FROM highschooler WHERE name = 'Kyle')
SELECT highschooler.name  FROM highschooler  INNER JOIN friend ON highschooler.id = friend.student_id  WHERE friend.friend_id = (SELECT highschooler.id FROM highschooler WHERE highschooler.name = 'Kyle')
SELECT highschooler.name  FROM highschooler  INNER JOIN friend ON highschooler.id = friend.student_id  WHERE friend.friend_id = (SELECT highschooler.id FROM highschooler WHERE highschooler.name = 'Kyle')
SELECT highschooler.name  FROM highschooler  INNER JOIN friend ON highschooler.id = friend.student_id  INNER JOIN highschooler AS friend_highschooler ON friend.friend_id = friend_highschooler.id  WHERE friend_highschooler.name = 'Kyle'",SELECT highschooler.name  FROM highschooler  INNER JOIN friend ON highschooler.id = friend.student_id  WHERE friend.friend_id = (SELECT highschooler.id FROM highschooler WHERE highschooler.name = 'Kyle')
465,28,Show the stadium names without any concert.,concert_singer,hard,SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert),7,"SELECT stadium.name  FROM stadium  LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id  WHERE concert.stadium_id IS NULL
SELECT stadium.name  FROM stadium  LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id  WHERE concert.stadium_id IS NULL
SELECT stadium.name  FROM stadium  LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id  WHERE concert.stadium_id IS NULL
SELECT stadium.name  FROM stadium  LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id  WHERE concert.stadium_id IS NULL
SELECT stadium.name  FROM stadium  LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id  WHERE concert.stadium_id IS NULL
SELECT stadium.name  FROM stadium  LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id  WHERE concert.stadium_id IS NULL
SELECT stadium.name  FROM stadium  LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id  WHERE concert.stadium_id IS NULL",SELECT stadium.name  FROM stadium  LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id  WHERE concert.stadium_id IS NULL
466,529,What is the semester which most student registered in? Show both the name and the id.,student_transcripts_tracking,extra,"SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT s.semester_id, s.semester_name, COUNT(se.student_id) as
SELECT s.semester_id, s.semester_name, COUNT(se.student_id) as
SELECT s.semester_id, s.semester_name, COUNT(se.student_id) as
SELECT s.semester_id, s.semester_name, COUNT(se.student_id) as
SELECT s.semester_id, s.semester_name, COUNT(se.student_id) AS
SELECT s.semester_id, s.semester_name, COUNT(se.student_id) as
SELECT s.semester_id, s.semester_name, COUNT(se.student_id) as","SELECT s.semester_id, s.semester_name, COUNT(se.student_id) as"
467,101,Find the make and production time of the cars that were produced in the earliest year?,car_1,extra,"SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);",7,"SELECT c.makeid, c.model, c.make, cd.year, cm.maker FROM car_names c JOIN cars_data cd ON c.makeid = cd.id JOIN car_makers cm ON c.maker = cm.id WHERE cd.year = (SELECT MIN(year) FROM cars_data) ORDER BY cd.year ASC
SELECT c.makeid, c.model, c.make, cd.year, cm.maker FROM car_names c JOIN cars_data cd ON c.makeid = cd.id JOIN car_makers cm ON c.maker = cm.id WHERE cd.year = (SELECT MIN(year) FROM cars_data) ORDER BY cd.year ASC
SELECT c.make, c.year FROM car_names AS c JOIN (     SELECT MIN(year) AS earliest_year     FROM cars_data ) AS e ON c.year = e.earliest_year
SELECT c.makeid, c.model, c.make, cd.year, cm.maker FROM car_names c JOIN cars_data cd ON c.makeid = cd.id JOIN car_makers cm ON c.maker = cm.id WHERE cd.year = (SELECT MIN(year) FROM cars_data) ORDER BY cd.year ASC
SELECT c.make, c.year FROM car_names AS c JOIN (     SELECT MIN(year) AS earliest_year     FROM cars_data ) AS e ON c.year = e.earliest_year
SELECT c.make, c.year FROM car_names AS c JOIN (     SELECT MIN(year) AS earliest_year     FROM cars_data ) AS e ON c.year = e.earliest_year
SELECT c.makeid, c.model, c.make, cd.year, cm.maker FROM car_names c JOIN cars_data cd ON c.makeid = cd.id JOIN car_makers cm ON c.maker = cm.id WHERE cd.year = (SELECT MIN(year) FROM cars_data) ORDER BY cd.year ASC","SELECT c.makeid, c.model, c.make, cd.year, cm.maker FROM car_names c JOIN cars_data cd ON c.makeid = cd.id JOIN car_makers cm ON c.maker = cm.id WHERE cd.year = (SELECT MIN(year) FROM cars_data) ORDER BY cd.year ASC"
468,940,Which owner has paid the largest amount of money in total for their dogs? Show the owner id and zip code.,dog_kennels,extra,"SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",7,"SELECT owners.owner_id, owners.zip_code FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN treatments ON dogs.dog_id = treatments.dog_id JOIN charges ON treatments.treatment_id = charges.charge_id GROUP BY owners.owner_id ORDER BY SUM(charges.charge_amount) DESC LIMIT 1
SELECT owners.owner_id, owners.zip_code FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN treatments ON dogs.dog_id = treatments.dog_id JOIN charges ON treatments.treatment_id = charges.charge_id GROUP BY owners.owner_id ORDER BY SUM(charges.charge_amount) DESC LIMIT 1
SELECT owners.owner_id, owners.zip_code FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN treatments ON dogs.dog_id = treatments.dog_id JOIN charges ON treatments.treatment_id = charges.charge_id GROUP BY owners.owner_id, owners.zip_code ORDER BY SUM(charges.charge_amount) DESC LIMIT 1
SELECT owners.owner_id, owners.zip_code FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN treatments ON dogs.dog_id = treatments.dog_id JOIN charges ON treatments.treatment_id = charges.charge_id GROUP BY owners.owner_id ORDER BY SUM(charges.charge_amount) DESC LIMIT 1
SELECT owners.owner_id, owners.zip_code FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN treatments ON dogs.dog_id = treatments.dog_id JOIN charges ON treatments.treatment_id = charges.charge_id GROUP BY owners.owner_id, owners.zip_code ORDER BY SUM(charges.charge_amount) DESC LIMIT 1
SELECT owners.owner_id, owners.zip_code FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN treatments ON dogs.dog_id = treatments.dog_id JOIN charges ON treatments.treatment_id = charges.charge_id GROUP BY owners.owner_id, owners.zip_code ORDER BY SUM(charges.charge_amount) DESC LIMIT 1
SELECT owners.owner_id, owners.zip_code FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN treatments ON dogs.dog_id = treatments.dog_id JOIN charges ON treatments.treatment_id = charges.charge_id GROUP BY owners.owner_id ORDER BY SUM(charges.charge_amount) DESC LIMIT 1","SELECT owners.owner_id, owners.zip_code FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN treatments ON dogs.dog_id = treatments.dog_id JOIN charges ON treatments.treatment_id = charges.charge_id GROUP BY owners.owner_id ORDER BY SUM(charges.charge_amount) DESC LIMIT 1"
469,538,What is the degree summary name that has the most number of students enrolled?,student_transcripts_tracking,extra,SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1,7,"SELECT dp.degree_summary_name, COUNT(se.student_id) as student_count FROM degree_programs dp 
SELECT dp.degree_summary_name, COUNT(se.student_id) as student_count FROM degree_programs dp 
SELECT dp.degree_summary_name, COUNT(se.student_id) as student_count FROM degree_programs dp 
SELECT dp.degree_summary_name, COUNT(se.student_id) as student_count FROM degree_programs dp 
SELECT dp.degree_summary_name, COUNT(se.student_id) as student_count FROM degree_programs dp 
SELECT dp.degree_summary_name, COUNT(se.student_id) as student_count FROM degree_programs dp 
SELECT dp.degree_summary_name, COUNT(se.student_id) as student_count FROM degree_programs dp ","SELECT dp.degree_summary_name, COUNT(se.student_id) as student_count FROM degree_programs dp "
470,484,What are the names and ranks of the three youngest winners across all matches?,wta_1,medium,"SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3",7,"SELECT winner_name, winner_rank FROM (     SELECT winner_name, winner_rank, MIN(winner_age) AS age     FROM matches     GROUP BY winner_name ) ORDER BY age ASC LIMIT 3
SELECT winner_name, winner_rank FROM (     SELECT winner_name, winner_rank, MIN(winner_age) AS age     FROM matches     GROUP BY winner_name ) ORDER BY age ASC LIMIT 3
SELECT winner_name, winner_rank FROM (     SELECT winner_name, winner_rank, MIN(winner_age) AS age     FROM matches     GROUP BY winner_name ) ORDER BY age ASC LIMIT 3
SELECT winner_name, winner_rank FROM (     SELECT winner_name, winner_rank, MIN(winner_age) AS age     FROM matches     GROUP BY winner_name ) ORDER BY age ASC LIMIT 3
SELECT winner_name, winner_rank FROM (     SELECT winner_name, winner_rank, MIN(winner_age) AS age     FROM matches     GROUP BY winner_name ) ORDER BY age ASC LIMIT 3
SELECT winner_name, winner_rank FROM (     SELECT winner_name, winner_rank, MIN(winner_age) AS age     FROM matches     GROUP BY winner_name ) ORDER BY age ASC LIMIT 3
SELECT winner_name, winner_rank FROM (     SELECT winner_name, winner_rank, MIN(winner_age) AS age     FROM matches     GROUP BY winner_name ) ORDER BY age ASC LIMIT 3","SELECT winner_name, winner_rank FROM (     SELECT winner_name, winner_rank, MIN(winner_age) AS age     FROM matches     GROUP BY winner_name ) ORDER BY age ASC LIMIT 3"
471,756,Which language is the most popular on the Asian continent?,world_1,extra,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  ""Asia"" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",7,"SELECT language FROM countrylanguage JOIN country ON country.code = countrylanguage.countrycode WHERE continent = 'Asia' GROUP BY language ORDER BY SUM(percentage) DESC LIMIT 1
SELECT language FROM countrylanguage  JOIN country ON country.code = countrylanguage.countrycode  WHERE continent = 'Asia'  ORDER BY percentage DESC  LIMIT 1
SELECT language FROM countrylanguage JOIN country ON country.code = countrylanguage.countrycode WHERE continent = 'Asia' GROUP BY language ORDER BY SUM(percentage) DESC LIMIT 1
SELECT language  FROM country  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE continent = 'Asia'  GROUP BY language  ORDER BY COUNT(*) DESC  LIMIT 1
SELECT language FROM countrylanguage  JOIN country ON country.code = countrylanguage.countrycode  WHERE continent = 'Asia'  ORDER BY percentage DESC  LIMIT 1
SELECT language FROM countrylanguage JOIN country ON country.code = countrylanguage.countrycode WHERE continent = 'Asia' GROUP BY language ORDER BY SUM(percentage) DESC LIMIT 1
SELECT language FROM countrylanguage JOIN country ON country.code = countrylanguage.countrycode WHERE continent = 'Asia' GROUP BY language ORDER BY SUM(percentage) DESC LIMIT 1",SELECT language FROM countrylanguage JOIN country ON country.code = countrylanguage.countrycode WHERE continent = 'Asia' GROUP BY language ORDER BY SUM(percentage) DESC LIMIT 1
472,285,Find the name of the shops that do not hire any employee.,employee_hire_evaluation,hard,SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring),7,"SELECT shop.name  FROM shop  LEFT JOIN hiring ON shop.shop_id = hiring.shop_id  WHERE hiring.employee_id IS NULL
SELECT shop.name  FROM shop  LEFT JOIN hiring ON shop.shop_id = hiring.shop_id  WHERE hiring.employee_id IS NULL
SELECT shop.name  FROM shop  LEFT JOIN hiring ON shop.shop_id = hiring.shop_id  WHERE hiring.employee_id IS NULL
SELECT shop.name  FROM shop  LEFT JOIN hiring ON shop.shop_id = hiring.shop_id  WHERE hiring.employee_id IS NULL
SELECT shop.name  FROM shop  LEFT JOIN hiring ON shop.shop_id = hiring.shop_id  WHERE hiring.employee_id IS NULL
SELECT shop.name  FROM shop  LEFT JOIN hiring ON shop.shop_id = hiring.shop_id  WHERE hiring.employee_id IS NULL
SELECT shop.name  FROM shop  LEFT JOIN hiring ON shop.shop_id = hiring.shop_id  WHERE hiring.employee_id IS NULL",SELECT shop.name  FROM shop  LEFT JOIN hiring ON shop.shop_id = hiring.shop_id  WHERE hiring.employee_id IS NULL
473,646,What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones?,tvshow,hard,SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'),7,"SELECT tv_channel.package_option  FROM tv_channel  INNER JOIN cartoon ON tv_channel.id = cartoon.channel  WHERE cartoon.directed_by != 'Ben Jones' AND tv_channel.content = 'tv' AND tv_channel.id NOT IN (     SELECT channel      FROM tv_series      WHERE content = 'cartoon' )
SELECT tv_channel.package_option  FROM tv_channel  INNER JOIN cartoon ON tv_channel.id = cartoon.channel  WHERE cartoon.directed_by != 'Ben Jones' AND tv_channel.content = 'tv' AND tv_channel.id NOT IN (     SELECT channel      FROM tv_series      WHERE content = 'cartoon' )
SELECT tv_channel.package_option  FROM tv_channel  INNER JOIN cartoon ON tv_channel.id = cartoon.channel  WHERE cartoon.directed_by != 'Ben Jones' AND tv_channel.content = 'tv' AND tv_channel.id NOT IN (     SELECT channel      FROM tv_series      WHERE content = 'cartoon' )
SELECT tv_channel.package_option  FROM tv_channel  INNER JOIN cartoon ON tv_channel.id = cartoon.channel  WHERE cartoon.directed_by != 'Ben Jones' AND tv_channel.content = 'tv' AND tv_channel.id NOT IN (     SELECT channel      FROM tv_series      WHERE content = 'cartoon' )
SELECT tv_channel.package_option  FROM tv_channel  INNER JOIN cartoon ON tv_channel.id = cartoon.channel  WHERE cartoon.directed_by != 'Ben Jones' AND tv_channel.content = 'tv' AND tv_channel.id NOT IN (     SELECT channel      FROM tv_series      WHERE content = 'cartoon' )
SELECT tv_channel.package_option  FROM tv_channel  INNER JOIN cartoon ON tv_channel.id = cartoon.channel  WHERE cartoon.directed_by != 'Ben Jones' AND tv_channel.content = 'tv' AND tv_channel.id NOT IN (     SELECT channel      FROM tv_series      WHERE content = 'cartoon' )
SELECT tv_channel.package_option  FROM tv_channel  INNER JOIN cartoon ON tv_channel.id = cartoon.channel  WHERE cartoon.directed_by != 'Ben Jones' AND tv_channel.content = 'tv' AND tv_channel.id NOT IN (     SELECT channel      FROM tv_series      WHERE content = 'cartoon' )",SELECT tv_channel.package_option  FROM tv_channel  INNER JOIN cartoon ON tv_channel.id = cartoon.channel  WHERE cartoon.directed_by != 'Ben Jones' AND tv_channel.content = 'tv' AND tv_channel.id NOT IN (     SELECT channel      FROM tv_series      WHERE content = 'cartoon' )
474,561,Which address holds the most number of students currently? List the address id and all lines.,student_transcripts_tracking,extra,"SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT a.address_id, a.line_1, a.line_2, a.line_3, a
SELECT a.address_id, a.line_1, a.line_2, a.line_3, a
SELECT a.address_id, a.line_1, a.line_2, a.line_3, a
SELECT a.address_id, a.line_1, a.line_2, a.line_3, a
SELECT a.address_id, a.line_1, a.line_2, a.line_3, a
SELECT a.address_id, a.line_1, a.line_2, a.line_3, a
SELECT a.address_id, a.line_1, a.line_2, a.line_3, a","SELECT a.address_id, a.line_1, a.line_2, a.line_3, a"
475,696,What are the number of votes from state 'NY' or 'CA'?,voter_1,medium,SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA',7,"SELECT COUNT(*) FROM votes WHERE state IN ('NY', 'CA')
SELECT COUNT(*) FROM votes WHERE state IN ('NY', 'CA')
SELECT COUNT(*) FROM votes WHERE state IN ('NY', 'CA')
SELECT COUNT(*) FROM votes WHERE state IN ('NY', 'CA')
SELECT COUNT(*) FROM votes WHERE state IN ('NY', 'CA')
SELECT COUNT(*) FROM votes WHERE state IN ('NY', 'CA')
SELECT COUNT(*) FROM votes WHERE state IN ('NY', 'CA')","SELECT COUNT(*) FROM votes WHERE state IN ('NY', 'CA')"
476,820,What are the codes of countries where Spanish is spoken by the largest percentage of people?,world_1,medium,"SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  ""Spanish"" GROUP BY CountryCode",7,"SELECT c.code FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode WHERE cl.language = 'Spanish' ORDER BY cl.percentage DESC LIMIT 1
SELECT c.code FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode WHERE cl.language = 'Spanish' ORDER BY cl.percentage DESC LIMIT 1
SELECT c.code FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode WHERE cl.language = 'Spanish' ORDER BY cl.percentage DESC LIMIT 1
SELECT c.code FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode WHERE cl.language = 'Spanish' ORDER BY cl.percentage DESC LIMIT 1
SELECT c.code FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode WHERE cl.language = 'Spanish' ORDER BY cl.percentage DESC LIMIT 1
SELECT c.code FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode WHERE cl.language = 'Spanish' ORDER BY cl.percentage DESC LIMIT 1
SELECT c.code FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode WHERE cl.language = 'Spanish' ORDER BY cl.percentage DESC LIMIT 1",SELECT c.code FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode WHERE cl.language = 'Spanish' ORDER BY cl.percentage DESC LIMIT 1
477,769,What is the official language used in the country the name of whose head of state is Beatrix.,world_1,medium,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  ""Beatrix"" AND T2.IsOfficial  =  ""T""",7,"SELECT country.name, countrylanguage.language  FROM country  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE country.headofstate = 'Beatrix' AND countrylanguage.isofficial = 'T'
SELECT c.name, cl.language FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode WHERE c.headofstate = 'Beatrix' AND cl.isofficial = 'T'
SELECT c.name, cl.language FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode WHERE c.headofstate = 'Beatrix' AND cl.isofficial = 'T'
SELECT country.name, countrylanguage.language  FROM country  INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE country.headofstate = 'Beatrix' AND countrylanguage.isofficial = 'T'
SELECT country.name, countrylanguage.language  FROM country  INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE country.headofstate = 'Beatrix' AND countrylanguage.isofficial = 'T'
SELECT country.name, countrylanguage.language  FROM country  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE country.headofstate = 'Beatrix' AND countrylanguage.isofficial = 'T'
SELECT c.name, cl.language FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode WHERE c.headofstate = 'Beatrix' AND cl.isofficial = 'T'","SELECT c.name, cl.language FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode WHERE c.headofstate = 'Beatrix' AND cl.isofficial = 'T'"
478,608,"For each language, list the number of TV Channels that use it.",tvshow,medium,"SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE",7,"SELECT tv_channel.language, COUNT(tv_channel.id) as Number_of_TV_Channels FROM tv_channel GROUP BY tv_channel.language
SELECT tv_channel.language, COUNT(tv_channel.id) as Number_of_TV_Channels FROM tv_channel GROUP BY tv_channel.language
SELECT tv_channel.language, COUNT(tv_channel.id) as Number_of_TV_Channels FROM tv_channel GROUP BY tv_channel.language
SELECT tv_channel.language, COUNT(tv_channel.id) as Number_of_TV_Channels FROM tv_channel GROUP BY tv_channel.language
SELECT tv_channel.language, COUNT(tv_channel.id) as Number_of_TV_Channels FROM tv_channel GROUP BY tv_channel.language
SELECT tv_channel.language, COUNT(tv_channel.id) as Number_of_TV_Channels FROM tv_channel GROUP BY tv_channel.language
SELECT tv_channel.language, COUNT(tv_channel.id) as Number_of_TV_Channels FROM tv_channel GROUP BY tv_channel.language","SELECT tv_channel.language, COUNT(tv_channel.id) as Number_of_TV_Channels FROM tv_channel GROUP BY tv_channel.language"
479,666,Return the birth date of the poker player with the lowest earnings.,poker_player,hard,SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1,7,"SELECT people.birth_date  FROM people  INNER JOIN poker_player ON people.people_id = poker_player.people_id  WHERE poker_player.earnings = (SELECT MIN(earnings) FROM poker_player)
SELECT people.birth_date  FROM people  INNER JOIN poker_player ON people.people_id = poker_player.people_id  WHERE poker_player.earnings = (SELECT MIN(earnings) FROM poker_player)
SELECT people.birth_date  FROM people  INNER JOIN poker_player ON people.people_id = poker_player.people_id  WHERE poker_player.earnings = (SELECT MIN(earnings) FROM poker_player)
SELECT people.birth_date  FROM people  INNER JOIN poker_player ON people.people_id = poker_player.people_id  WHERE poker_player.earnings = (SELECT MIN(earnings) FROM poker_player)
SELECT people.birth_date  FROM people  INNER JOIN poker_player ON people.people_id = poker_player.people_id  WHERE poker_player.earnings = (SELECT MIN(earnings) FROM poker_player)
SELECT people.birth_date  FROM people  INNER JOIN poker_player ON people.people_id = poker_player.people_id  WHERE poker_player.earnings = (SELECT MIN(earnings) FROM poker_player)
SELECT people.birth_date  FROM people  INNER JOIN poker_player ON people.people_id = poker_player.people_id  WHERE poker_player.earnings = (SELECT MIN(earnings) FROM poker_player)",SELECT people.birth_date  FROM people  INNER JOIN poker_player ON people.people_id = poker_player.people_id  WHERE poker_player.earnings = (SELECT MIN(earnings) FROM poker_player)
480,986,What is the average age of all the dogs?,dog_kennels,easy,SELECT avg(age) FROM Dogs,7,"SELECT AVG(age) FROM dogs
SELECT AVG(age) FROM dogs
SELECT AVG(age) FROM dogs
SELECT AVG(age) FROM dogs
SELECT AVG(age) FROM dogs
SELECT AVG(age) FROM dogs
SELECT AVG(age) FROM dogs",SELECT AVG(age) FROM dogs
481,924,Which dogs have not cost their owner more than 1000 for treatment ? List the dog names .,dog_kennels,hard,select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 ),7,"SELECT dogs.name  FROM dogs  LEFT JOIN treatments ON dogs.dog_id = treatments.dog_id  LEFT JOIN charges ON treatments.treatment_type_code = charges.charge_type  WHERE charges.charge_amount <= 1000 OR charges.charge_amount IS NULL
SELECT dogs.name  FROM dogs  LEFT JOIN treatments ON dogs.dog_id = treatments.dog_id  LEFT JOIN charges ON treatments.treatment_type_code = charges.charge_type  WHERE charges.charge_amount <= 1000 OR charges.charge_amount IS NULL
SELECT DISTINCT d.name  FROM dogs d  LEFT JOIN treatments t ON d.dog_id = t.dog_id  LEFT JOIN charges c ON t.treatment_id = c.charge_id  WHERE c.charge_amount <= 1000 OR c.charge_amount IS NULL
SELECT dogs.name  FROM dogs  LEFT JOIN treatments ON dogs.dog_id = treatments.dog_id  LEFT JOIN charges ON treatments.treatment_type_code = charges.charge_type  WHERE charges.charge_amount <= 1000 OR charges.charge_amount IS NULL
SELECT dogs.name  FROM dogs  LEFT JOIN treatments ON dogs.dog_id = treatments.dog_id  LEFT JOIN charges ON treatments.treatment_type_code = charges.charge_type  WHERE charges.charge_amount <= 1000 OR charges.charge_amount IS NULL
SELECT dogs.name FROM dogs LEFT JOIN treatments ON dogs.dog_id = treatments.dog_id LEFT JOIN charges ON treatments.treatment_id = charges.charge_id WHERE charges.charge_amount <= 1000 OR charges.charge_amount IS NULL
SELECT dogs.name  FROM dogs  LEFT JOIN treatments ON dogs.dog_id = treatments.dog_id  LEFT JOIN charges ON treatments.treatment_type_code = charges.charge_type  WHERE charges.charge_amount <= 1000 OR charges.charge_amount IS NULL",SELECT dogs.name  FROM dogs  LEFT JOIN treatments ON dogs.dog_id = treatments.dog_id  LEFT JOIN charges ON treatments.treatment_type_code = charges.charge_type  WHERE charges.charge_amount <= 1000 OR charges.charge_amount IS NULL
482,651,List the final tables made and the best finishes of poker players.,poker_player,medium,"SELECT Final_Table_Made ,  Best_Finish FROM poker_player",7,"SELECT poker_player.poker_player_id, people.name, poker_player.final_table_made, poker_player.best_finish FROM poker_player INNER JOIN people ON poker_player.people_id = people.people_id
SELECT poker_player.poker_player_id, people.name, poker_player.final_table_made, poker_player.best_finish FROM poker_player INNER JOIN people ON poker_player.people_id = people.people_id
SELECT poker_player.poker_player_id, people.name, poker_player.final_table_made, poker_player.best_finish FROM poker_player INNER JOIN people ON poker_player.people_id = people.people_id
SELECT poker_player.poker_player_id, people.name, poker_player.final_table_made, poker_player.best_finish FROM poker_player INNER JOIN people ON poker_player.people_id = people.people_id
SELECT poker_player.poker_player_id, people.name, poker_player.final_table_made, poker_player.best_finish FROM poker_player JOIN people ON poker_player.people_id = people.people_id
SELECT poker_player.poker_player_id, people.name, poker_player.final_table_made, poker_player.best_finish FROM poker_player INNER JOIN people ON poker_player.people_id = people.people_id
SELECT poker_player.poker_player_id, people.name, poker_player.final_table_made, poker_player.best_finish FROM poker_player INNER JOIN people ON poker_player.people_id = people.people_id","SELECT poker_player.poker_player_id, people.name, poker_player.final_table_made, poker_player.best_finish FROM poker_player INNER JOIN people ON poker_player.people_id = people.people_id"
483,560,What is the first name of the student whose permanent address is different from his or her current one?,student_transcripts_tracking,easy,SELECT first_name FROM Students WHERE current_address_id != permanent_address_id,7,"SELECT first_name  FROM students  WHERE current_address_id != permanent_address_
SELECT first_name  FROM students  WHERE current_address_id != permanent_address_
SELECT first_name  FROM students  WHERE current_address_id != permanent_address_
SELECT first_name  FROM students  WHERE current_address_id != permanent_address_
SELECT first_name  FROM students  WHERE current_address_id != permanent_address_
SELECT first_name  FROM students  WHERE current_address_id != permanent_address_
SELECT first_name  FROM students  WHERE current_address_id != permanent_address_",SELECT first_name  FROM students  WHERE current_address_id != permanent_address_
484,573,"Show the date of the transcript which shows the least number of results, also list the id.",student_transcripts_tracking,extra,"SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1",7,"SELECT MIN(COUNT(transcript_contents.student_course_id)), transcripts.transcript_date, transcripts
SELECT MIN(COUNT(transcript_contents.student_course_id)), transcripts.transcript_date, transcripts
SELECT MIN(COUNT(transcript_contents.student_course_id)), transcripts.transcript_date, transcripts
SELECT MIN(COUNT(transcript_contents.student_course_id)), transcripts.transcript_date, transcripts
SELECT MIN(transcript_date), transcript_id, COUNT(student_course_id) as ResultCount 
SELECT MIN(COUNT(transcript_contents.student_course_id)), transcripts.transcript_date, transcripts
SELECT MIN(COUNT(transcript_contents.student_course_id)), transcripts.transcript_date, transcripts","SELECT MIN(COUNT(transcript_contents.student_course_id)), transcripts.transcript_date, transcripts"
485,827,"Return the names of conductors that do not have the nationality ""USA"".",orchestra,easy,SELECT Name FROM conductor WHERE Nationality != 'USA',7,"SELECT name  FROM conductor  WHERE nationality != 'USA'
SELECT name  FROM conductor  WHERE nationality != 'USA'
SELECT name  FROM conductor  WHERE nationality != 'USA'
SELECT name  FROM conductor  WHERE nationality != 'USA'
SELECT name  FROM conductor  WHERE nationality != 'USA'
SELECT name  FROM conductor  WHERE nationality != 'USA'
SELECT name  FROM conductor  WHERE nationality != 'USA'",SELECT name  FROM conductor  WHERE nationality != 'USA'
486,209,How many flights arriving in Aberdeen city?,flight_2,medium,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""",7,"SELECT COUNT(*) FROM flights INNER JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'
SELECT COUNT(*) FROM flights  INNER JOIN airports ON flights.destairport = airports.airportcode  WHERE airports.city = 'Aberdeen' AND flights.airline IN (SELECT abbreviation FROM airlines WHERE airlines.country = 'United States')
SELECT COUNT(*) FROM flights INNER JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'
SELECT COUNT(*) FROM flights INNER JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'
SELECT COUNT(*) FROM flights INNER JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'
SELECT COUNT(*) FROM flights INNER JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'
SELECT COUNT(*) FROM flights INNER JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'",SELECT COUNT(*) FROM flights INNER JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'
487,279,Find the name of the employee who got the highest one time bonus.,employee_hire_evaluation,hard,SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1,7,"SELECT employee.name  FROM employee  JOIN evaluation ON employee.employee_id = evaluation.employee_id  WHERE evaluation.bonus = (SELECT MAX(bonus) FROM evaluation)
SELECT employee.name  FROM employee  INNER JOIN evaluation ON employee.employee_id = evaluation.employee_id  WHERE evaluation.bonus = (SELECT MAX(bonus) FROM evaluation)
SELECT employee.name  FROM employee  INNER JOIN evaluation ON employee.employee_id = evaluation.employee_id  WHERE evaluation.bonus = (SELECT MAX(bonus) FROM evaluation)
SELECT employee.name  FROM employee  INNER JOIN evaluation ON employee.employee_id = evaluation.employee_id  WHERE evaluation.bonus = (SELECT MAX(bonus) FROM evaluation)
SELECT employee.name  FROM employee  INNER JOIN evaluation ON employee.employee_id = evaluation.employee_id  WHERE evaluation.bonus = (SELECT MAX(bonus) FROM evaluation)
SELECT employee.name  FROM employee  JOIN evaluation ON employee.employee_id = evaluation.employee_id  WHERE evaluation.bonus = (SELECT MAX(bonus) FROM evaluation)
SELECT employee.name  FROM employee  JOIN evaluation ON employee.employee_id = evaluation.employee_id  WHERE evaluation.bonus = (SELECT MAX(bonus) FROM evaluation)",SELECT employee.name  FROM employee  INNER JOIN evaluation ON employee.employee_id = evaluation.employee_id  WHERE evaluation.bonus = (SELECT MAX(bonus) FROM evaluation)
488,751,How many continents speak Chinese?,world_1,medium,"SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""Chinese""",7,"SELECT COUNT(DISTINCT country.continent) AS num_continents_speak_chinese FROM country INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'Chinese'
SELECT COUNT(DISTINCT country.continent)  FROM country  INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language = 'Chinese'
SELECT COUNT(DISTINCT country.continent) AS num_continents_speak_chinese FROM country INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'Chinese'
SELECT COUNT(DISTINCT country.continent) AS num_continents_speaking_chinese FROM country INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'Chinese'
SELECT COUNT(DISTINCT country.continent) AS num_continents_speak_chinese FROM country INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'Chinese'
SELECT COUNT(DISTINCT country.continent) AS num_continents_speaking_chinese FROM country INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'Chinese'
SELECT COUNT(DISTINCT country.continent) AS num_continents_speak_chinese FROM country INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'Chinese'",SELECT COUNT(DISTINCT country.continent) AS num_continents_speak_chinese FROM country INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'Chinese'
489,542,"What is the first, middle, and last name, along with the id and number of enrollments, for the student who enrolled the most in any program?",student_transcripts_tracking,extra,"SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT s.first_name, s.middle_name
SELECT s.first_name, s.middle_name
SELECT s.first_name, s.middle_name
SELECT students.first_name, students.middle_name
SELECT s.first_name, s.middle_name
SELECT s.first_name, s.middle_name
SELECT s.first_name, s.middle_name","SELECT s.first_name, s.middle_name"
490,149,Which makers designed more than 3 car models? List full name and the id.,car_1,medium,"SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;",7,"SELECT car_makers.id, car_makers.fullname  FROM car_makers  JOIN model_list ON car_makers.id = model_list.maker  GROUP BY car_makers.id, car_makers.fullname  HAVING COUNT(model_list.model) > 3
SELECT car_makers.id, car_makers.fullname  FROM car_makers  JOIN model_list ON car_makers.id = model_list.maker  GROUP BY car_makers.id, car_makers.fullname  HAVING COUNT(model_list.model) > 3
SELECT car_makers.id, car_makers.fullname  FROM car_makers  JOIN model_list ON car_makers.id = model_list.maker  GROUP BY car_makers.id, car_makers.fullname  HAVING COUNT(model_list.model) > 3
SELECT car_makers.id, car_makers.fullname  FROM car_makers  JOIN model_list ON car_makers.id = model_list.maker  GROUP BY car_makers.id, car_makers.fullname  HAVING COUNT(model_list.model) > 3
SELECT car_makers.id, car_makers.fullname  FROM car_makers  JOIN model_list ON car_makers.id = model_list.maker  GROUP BY car_makers.id, car_makers.fullname  HAVING COUNT(model_list.model) > 3
SELECT car_makers.id, car_makers.fullname FROM car_makers JOIN model_list ON car_makers.id = model_list.maker GROUP BY car_makers.id, car_makers.fullname HAVING COUNT(model_list.model) > 3
SELECT car_makers.id, car_makers.fullname  FROM car_makers  JOIN model_list ON car_makers.id = model_list.maker  GROUP BY car_makers.id, car_makers.fullname  HAVING COUNT(model_list.model) > 3","SELECT car_makers.id, car_makers.fullname  FROM car_makers  JOIN model_list ON car_makers.id = model_list.maker  GROUP BY car_makers.id, car_makers.fullname  HAVING COUNT(model_list.model) > 3"
491,967,Count the number of dogs that went through a treatment.,dog_kennels,easy,SELECT count(DISTINCT dog_id) FROM Treatments,7,"SELECT COUNT(*) FROM treatments
SELECT COUNT(*) FROM treatments
SELECT COUNT(*) FROM treatments
SELECT COUNT(*) FROM treatments
SELECT COUNT(*) FROM treatments
SELECT COUNT(*) FROM treatments
SELECT COUNT(*) FROM treatments",SELECT COUNT(*) FROM treatments
492,66,What is the first name of every student who has a dog but does not have a cat?,pets_1,extra,"SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",7,"SELECT fname FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'dog'  EXCEPT  SELECT fname FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat'
SELECT DISTINCT fname  FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'dog'  EXCEPT  SELECT DISTINCT fname  FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat'
SELECT DISTINCT fname  FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE pettype = 'dog'  EXCEPT  SELECT DISTINCT fname  FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE pettype = 'cat'
SELECT DISTINCT s.fname  FROM student AS s  JOIN has_pet AS hp ON s.stuid = hp.stuid  JOIN pets AS p ON hp.petid = p.petid  WHERE p.pettype = 'dog'  EXCEPT  SELECT s.fname  FROM student AS s  JOIN has_pet AS hp ON s.stuid = hp.stuid  JOIN pets AS p ON hp.petid = p.petid  WHERE p.pettype = 'cat'
SELECT DISTINCT student.fname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'dog'  EXCEPT  SELECT DISTINCT student.fname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat'
SELECT fname  FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE pettype = 'dog'  EXCEPT  SELECT fname  FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE pettype = 'cat'
SELECT fname  FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE pettype = 'dog'  EXCEPT  SELECT fname  FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE pettype = 'cat'",SELECT fname  FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE pettype = 'dog'  EXCEPT  SELECT fname  FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE pettype = 'cat'
493,67,Find the type and weight of the youngest pet.,pets_1,medium,"SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1",7,"SELECT pettype, weight FROM pets INNER JOIN (     SELECT petid     FROM has_pet     WHERE stuid = (         SELECT stuid         FROM student         ORDER BY age ASC         LIMIT 1     ) ) AS youngest_pet ON pets.petid = youngest_pet.petid
SELECT pettype, weight  FROM pets  INNER JOIN has_pet ON pets.petid = has_pet.petid  INNER JOIN student ON has_pet.stuid = student.stuid  WHERE student.age = (SELECT MIN(age) FROM student) 
SELECT pets.pettype, pets.weight FROM pets INNER JOIN (SELECT has_pet.stuid, MIN(student.age) as min_age FROM has_pet INNER JOIN student ON has_pet.stuid = student.stuid GROUP BY has_pet.stuid) AS youngest_pet ON pets.stuid = youngest_pet.stuid WHERE pets.pet_age = youngest_pet.min_age
SELECT pets.pettype, pets.weight FROM pets INNER JOIN (     SELECT has_pet.stuid, MIN(pets.pet_age) as youngest_age     FROM has_pet     INNER JOIN pets ON has_pet.petid = pets.petid     GROUP BY has_pet.stuid ) as youngest_pets ON pets.petid = youngest_pets.petid AND pets.pet_age = youngest_pets.youngest_age
SELECT pets.pettype, pets.weight FROM pets INNER JOIN (     SELECT has_pet.stuid, MIN(pets.pet_age) as youngest_age     FROM has_pet     INNER JOIN pets ON has_pet.petid = pets.petid     GROUP BY has_pet.stuid ) as youngest_pets ON pets.petid = youngest_pets.stuid AND pets.pet_age = youngest_pets.youngest_age
SELECT pets.pettype, pets.weight FROM pets INNER JOIN (SELECT has_pet.stuid, MIN(students.age) as age FROM has_pet INNER JOIN students ON has_pet.stuid = students.stuid GROUP BY has_pet.stuid) AS youngest_pets ON pets.stuid = youngest_pets.stuid AND students.age = youngest_pets.age
SELECT pets.pettype, pets.weight FROM pets INNER JOIN (SELECT has_pet.stuid, MIN(student.age) as min_age FROM has_pet INNER JOIN student ON has_pet.stuid = student.stuid GROUP BY has_pet.stuid) AS youngest_pet ON pets.stuid = youngest_pet.stuid WHERE pets.pet_age = youngest_pet.min_age","SELECT pets.pettype, pets.weight FROM pets INNER JOIN (SELECT has_pet.stuid, MIN(student.age) as min_age FROM has_pet INNER JOIN student ON has_pet.stuid = student.stuid GROUP BY has_pet.stuid) AS youngest_pet ON pets.stuid = youngest_pet.stuid WHERE pets.pet_age = youngest_pet.min_age"
494,222,Which city has the most frequent destination airport?,flight_2,extra,SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1,7,"SELECT airports.city, COUNT(flights.destairport) AS frequency FROM flights JOIN airports ON flights.destairport = airports.airportcode GROUP BY airports.city ORDER BY frequency DESC LIMIT 1
SELECT airports.city, COUNT(flights.destairport) AS frequency FROM flights JOIN airports ON flights.destairport = airports.airportcode GROUP BY airports.city ORDER BY frequency DESC LIMIT 1
SELECT airports.city, COUNT(flights.destairport) AS frequency FROM flights JOIN airports ON flights.destairport = airports.airportcode GROUP BY airports.city ORDER BY frequency DESC LIMIT 1
SELECT airports.city, COUNT(flights.destairport) AS frequency FROM flights JOIN airports ON flights.destairport = airports.airportcode GROUP BY airports.city ORDER BY frequency DESC LIMIT 1
SELECT airports.city, COUNT(flights.destairport) AS frequency FROM flights JOIN airports ON airports.airportcode = flights.destairport GROUP BY airports.city ORDER BY frequency DESC LIMIT 1
SELECT airports.city, COUNT(flights.destairport) AS frequency FROM flights JOIN airports ON airports.airportcode = flights.destairport GROUP BY flights.destairport ORDER BY frequency DESC LIMIT 1
SELECT airports.city, COUNT(flights.destairport) AS frequency FROM flights JOIN airports ON flights.destairport = airports.airportcode GROUP BY airports.city ORDER BY frequency DESC LIMIT 1","SELECT airports.city, COUNT(flights.destairport) AS frequency FROM flights JOIN airports ON flights.destairport = airports.airportcode GROUP BY airports.city ORDER BY frequency DESC LIMIT 1"
495,605,List the language used least number of TV Channel. List language and number of TV Channel.,tvshow,hard,"SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;",7,"SELECT language, COUNT(id) as Number_of_TV_Channel FROM tv_channel GROUP BY language ORDER BY Number_of_TV_Channel ASC LIMIT 1
SELECT language, COUNT(*) as count FROM tv_channel GROUP BY language ORDER BY count ASC LIMIT 1
SELECT language, COUNT(*) as count FROM tv_channel GROUP BY language ORDER BY count ASC LIMIT 1
SELECT language, COUNT(*) as count FROM tv_channel GROUP BY language ORDER BY count ASC LIMIT 1
SELECT language, COUNT(id) as Number_of_TV_Channel FROM tv_channel GROUP BY language ORDER BY Number_of_TV_Channel ASC LIMIT 1
SELECT language, COUNT(id) as Number_of_TV_Channel FROM tv_channel GROUP BY language ORDER BY Number_of_TV_Channel ASC LIMIT 1
SELECT language, COUNT(id) as number_of_channel FROM tv_channel GROUP BY language ORDER BY number_of_channel ASC LIMIT 1","SELECT language, COUNT(id) as Number_of_TV_Channel FROM tv_channel GROUP BY language ORDER BY Number_of_TV_Channel ASC LIMIT 1"
496,202,What are the names of airports in Aberdeen?,flight_2,easy,"SELECT AirportName FROM AIRPORTS WHERE City = ""Aberdeen""",7,"SELECT airports.airportname FROM airports WHERE airports.city = 'Aberdeen'
SELECT airports.airportname FROM airports WHERE airports.city = 'Aberdeen'
SELECT airports.airportname FROM airports WHERE airports.city = 'Aberdeen'
SELECT airports.airportname FROM airports WHERE airports.city = 'Aberdeen'
SELECT airports.airportname FROM airports WHERE airports.city = 'Aberdeen'
SELECT airports.airportname FROM airports WHERE airports.city = 'Aberdeen'
SELECT airports.airportname FROM airports WHERE airports.city = 'Aberdeen'",SELECT airports.airportname FROM airports WHERE airports.city = 'Aberdeen'
497,599,"What is the content of TV Channel with serial name ""Sky Radio""?",tvshow,easy,"SELECT Content FROM TV_Channel WHERE series_name = ""Sky Radio"";",7,"SELECT content FROM tv_channel WHERE series_name = ""Sky Radio""
SELECT tv_channel.content FROM tv_channel WHERE tv_channel.series_name = ""Sky Radio""
SELECT content FROM tv_channel WHERE series_name = ""Sky Radio""
SELECT content FROM tv_channel WHERE series_name = ""Sky Radio""
SELECT content FROM tv_channel WHERE series_name = ""Sky Radio""
SELECT content FROM tv_channel WHERE series_name = ""Sky Radio""
SELECT content  FROM tv_channel  WHERE series_name = 'Sky Radio'","SELECT content FROM tv_channel WHERE series_name = ""Sky Radio"""
498,635,which countries' tv channels are not playing any cartoon written by Todd Casey?,tvshow,hard,SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey',7,"SELECT DISTINCT country  FROM tv_channel  WHERE id NOT IN (     SELECT channel      FROM tv_series      WHERE id IN (         SELECT id          FROM cartoon          WHERE written_by = 'Todd Casey'     ) )
SELECT DISTINCT country  FROM tv_channel  WHERE id NOT IN (     SELECT channel      FROM tv_series      WHERE id IN (         SELECT id          FROM cartoon          WHERE written_by = 'Todd Casey'     ) )
SELECT DISTINCT tv_channel.country  FROM tv_channel  LEFT JOIN cartoon ON tv_channel.id = cartoon.channel  WHERE cartoon.written_by != 'Todd Casey' OR cartoon.written_by IS NULL
SELECT DISTINCT country  FROM tv_channel  WHERE id NOT IN (     SELECT channel      FROM tv_series      WHERE id IN (         SELECT id          FROM cartoon          WHERE written_by = 'Todd Casey'     ) )
SELECT DISTINCT country  FROM tv_channel  WHERE id NOT IN (     SELECT channel      FROM tv_series      WHERE id IN (         SELECT id          FROM cartoon          WHERE written_by = 'Todd Casey'     ) )
SELECT DISTINCT country  FROM tv_channel  WHERE id NOT IN (     SELECT channel      FROM tv_series      WHERE id IN (         SELECT id          FROM cartoon          WHERE written_by = 'Todd Casey'     ) )
SELECT DISTINCT country  FROM tv_channel  WHERE id NOT IN (     SELECT channel      FROM tv_series      WHERE id IN (         SELECT id          FROM cartoon          WHERE written_by = 'Todd Casey'     ) )",SELECT DISTINCT country  FROM tv_channel  WHERE id NOT IN (     SELECT channel      FROM tv_series      WHERE id IN (         SELECT id          FROM cartoon          WHERE written_by = 'Todd Casey'     ) )
499,275,Find the names of stores whose number products is more than the average number of products.,employee_hire_evaluation,hard,SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop),7,"SELECT shop.name  FROM shop  WHERE shop.number_products > (SELECT AVG(shop.number_products) FROM shop)
SELECT shop.name  FROM shop  JOIN (SELECT AVG(number_products) as avg_products FROM shop) as subquery  ON shop.number_products > subquery.avg_products
SELECT shop.name  FROM shop  WHERE shop.number_products > (SELECT AVG(shop.number_products) FROM shop)
SELECT shop.name  FROM shop  WHERE shop.number_products > (SELECT AVG(shop.number_products) FROM shop)
SELECT shop.name  FROM shop  WHERE shop.number_products > (SELECT AVG(shop.number_products) FROM shop)
SELECT shop.name  FROM shop  WHERE shop.number_products > (SELECT AVG(shop.number_products) FROM shop)
SELECT shop.name  FROM shop  JOIN (SELECT AVG(number_products) as avg_products FROM shop) as subquery  ON shop.number_products > subquery.avg_products",SELECT shop.name  FROM shop  WHERE shop.number_products > (SELECT AVG(shop.number_products) FROM shop)
500,517,How many departments offer any degree?,student_transcripts_tracking,easy,SELECT count(DISTINCT department_id) FROM Degree_Programs,7,"SELECT COUNT(DISTINCT department_id) AS num_departments FROM degree_programs
SELECT COUNT(DISTINCT department_id) AS num_departments FROM degree_programs
SELECT COUNT(DISTINCT department_id) AS num_departments FROM degree_programs
SELECT COUNT(DISTINCT department_id)  FROM degree_programs
SELECT COUNT(DISTINCT department_id)  FROM degree_programs
SELECT COUNT(DISTINCT department_id)  FROM degree_programs
SELECT COUNT(DISTINCT department_id) AS num_departments FROM degree_programs",SELECT COUNT(DISTINCT department_id) AS num_departments FROM degree_programs
501,819,Count the number of countries for which Spanish is the predominantly spoken language.,world_1,extra,"SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  ""Spanish"" GROUP BY CountryCode",7,"SELECT COUNT(*) FROM country WHERE code IN (SELECT countrycode FROM countrylanguage WHERE language = 'Spanish' AND percentage > 50)
SELECT COUNT(*) FROM country WHERE code IN (SELECT countrycode FROM countrylanguage WHERE language = 'Spanish' AND percentage > 50)
SELECT COUNT(*) FROM country WHERE code IN (SELECT countrycode FROM countrylanguage WHERE language = 'Spanish' AND percentage > 50)
SELECT COUNT(*) FROM country WHERE code IN (SELECT countrycode FROM countrylanguage WHERE language = 'Spanish' AND percentage > 50)
SELECT COUNT(*) FROM country WHERE code IN (SELECT countrycode FROM countrylanguage WHERE language = 'Spanish' AND percentage > 50)
SELECT COUNT(*) FROM country WHERE code IN (SELECT countrycode FROM countrylanguage WHERE language = 'Spanish' AND percentage > 50)
SELECT COUNT(*) FROM country WHERE code IN (SELECT countrycode FROM countrylanguage WHERE language = 'Spanish' AND percentage > 50)",SELECT COUNT(*) FROM country WHERE code IN (SELECT countrycode FROM countrylanguage WHERE language = 'Spanish' AND percentage > 50)
502,55,Find the number of distinct type of pets.,pets_1,easy,SELECT count(DISTINCT pettype) FROM pets,7,"SELECT COUNT(DISTINCT pettype) FROM pets
SELECT COUNT(DISTINCT pettype) FROM pets
SELECT COUNT(DISTINCT pettype) FROM pets
SELECT COUNT(DISTINCT pettype) FROM pets
SELECT COUNT(DISTINCT pettype) FROM pets
SELECT COUNT(DISTINCT pettype) FROM pets
SELECT COUNT(DISTINCT pettype) FROM pets",SELECT COUNT(DISTINCT pettype) FROM pets
503,565,When is the first transcript released? List the date and details.,student_transcripts_tracking,medium,"SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",7,"SELECT MIN(transcript_date) AS first_transcript_release_date, tc.* FROM transcripts t JOIN transcript_
SELECT MIN(transcript_date) as First_Transcript_Released_Date, transcript_id, other_details FROM transcripts
SELECT MIN(transcript_date) AS first_transcript_release_date, tc.* FROM transcripts t JOIN transcript_contents
SELECT MIN(transcript_date) AS first_transcript_release_date, tc.* FROM transcripts t JOIN transcript_
SELECT MIN(transcript_date) as first_transcript_release_date, tc.* FROM transcripts t JOIN transcript_contents
SELECT MIN(transcript_date) as First_Transcript_Released_Date, transcript_id, other_details FROM transcripts
SELECT MIN(transcript_date) AS first_transcript_release_date, tc.* FROM transcripts t JOIN transcript_contents","SELECT MIN(transcript_date) AS first_transcript_release_date, tc.* FROM transcripts t JOIN transcript_"
504,63,Find the id of students who do not have a cat pet.,pets_1,hard,SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat',7,"SELECT student.stuid FROM student LEFT JOIN has_pet ON student.stuid = has_pet.stuid LEFT JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype != 'cat' OR pets.pettype IS NULL
SELECT student.stuid FROM student LEFT JOIN has_pet ON student.stuid = has_pet.stuid LEFT JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype != 'cat' OR pets.pettype IS NULL
SELECT student.stuid FROM student LEFT JOIN has_pet ON student.stuid = has_pet.stuid LEFT JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype != 'cat' OR pets.pettype IS NULL
SELECT student.stuid FROM student LEFT JOIN has_pet ON student.stuid = has_pet.stuid LEFT JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype != 'cat' OR pets.pettype IS NULL
SELECT student.stuid FROM student LEFT JOIN has_pet ON student.stuid = has_pet.stuid LEFT JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype != 'cat' OR pets.pettype IS NULL
SELECT student.stuid FROM student LEFT JOIN has_pet ON student.stuid = has_pet.stuid LEFT JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype != 'cat' OR pets.pettype IS NULL
SELECT student.stuid  FROM student  LEFT JOIN has_pet ON student.stuid = has_pet.stuid  LEFT JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype != 'cat' OR pets.pettype IS NULL",SELECT student.stuid FROM student LEFT JOIN has_pet ON student.stuid = has_pet.stuid LEFT JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype != 'cat' OR pets.pettype IS NULL
505,375,What is the document id with least number of paragraphs?,cre_Doc_Template_Mgt,hard,SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1,7,"SELECT documents.document_id  FROM documents  JOIN paragraphs ON documents.document_id = paragraphs.document_id  GROUP BY documents.document_id  ORDER BY COUNT(paragraphs.paragraph_id) ASC  LIMIT 1
SELECT documents.document_id  FROM documents  JOIN paragraphs ON documents.document_id = paragraphs.document_id  GROUP BY documents.document_id  ORDER BY COUNT(paragraphs.paragraph_id) ASC  LIMIT 1
SELECT documents.document_id  FROM documents  JOIN paragraphs ON documents.document_id = paragraphs.document_id  GROUP BY documents.document_id  ORDER BY COUNT(paragraphs.paragraph_id) ASC  LIMIT 1
SELECT documents.document_id  FROM documents  JOIN paragraphs ON documents.document_id = paragraphs.document_id  GROUP BY documents.document_id  ORDER BY COUNT(paragraphs.paragraph_id) ASC  LIMIT 1
SELECT documents.document_id  FROM documents  JOIN paragraphs ON documents.document_id = paragraphs.document_id  GROUP BY documents.document_id  ORDER BY COUNT(paragraphs.paragraph_id) ASC  LIMIT 1
SELECT documents.document_id  FROM documents  JOIN paragraphs ON documents.document_id = paragraphs.document_id  GROUP BY documents.document_id  ORDER BY COUNT(paragraphs.paragraph_id) ASC  LIMIT 1
SELECT documents.document_id  FROM documents  JOIN paragraphs ON documents.document_id = paragraphs.document_id  GROUP BY documents.document_id  ORDER BY COUNT(paragraphs.paragraph_id) ASC  LIMIT 1",SELECT documents.document_id  FROM documents  JOIN paragraphs ON documents.document_id = paragraphs.document_id  GROUP BY documents.document_id  ORDER BY COUNT(paragraphs.paragraph_id) ASC  LIMIT 1
506,506,What are the notes of the death events which has substring 'East'?,battle_death,medium,SELECT note FROM death WHERE note LIKE '%East%',7,"SELECT death.note  FROM death  JOIN ship ON death.caused_by_ship_id = ship.id  JOIN battle ON ship.lost_in_battle = battle.id  WHERE battle.name LIKE '%East%'
SELECT death.note  FROM death  JOIN ship ON death.caused_by_ship_id = ship.id  JOIN battle ON ship.lost_in_battle = battle.id  WHERE battle.name LIKE '%East%'
SELECT death.note  FROM death  JOIN ship ON death.caused_by_ship_id = ship.id  JOIN battle ON ship.lost_in_battle = battle.id  WHERE battle.name LIKE '%East%'
SELECT death.note  FROM death  INNER JOIN battle ON death.caused_by_ship_id = battle.id  INNER JOIN ship ON death.caused_by_ship_id = ship.id  WHERE battle.name LIKE '%East%'
SELECT death.note  FROM death  JOIN ship ON death.caused_by_ship_id = ship.id  JOIN battle ON ship.lost_in_battle = battle.id  WHERE battle.name LIKE '%East%'
SELECT death.note  FROM death  INNER JOIN battle ON death.caused_by_ship_id = battle.id  INNER JOIN ship ON death.caused_by_ship_id = ship.id  WHERE battle.name LIKE '%East%'
SELECT death.note  FROM death  JOIN ship ON death.caused_by_ship_id = ship.id  JOIN battle ON ship.lost_in_battle = battle.id  WHERE battle.name LIKE '%East%'",SELECT death.note  FROM death  JOIN ship ON death.caused_by_ship_id = ship.id  JOIN battle ON ship.lost_in_battle = battle.id  WHERE battle.name LIKE '%East%'
507,537,Find the kind of program which most number of students are enrolled in?,student_transcripts_tracking,extra,SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1,7,"SELECT dp.degree_summary_name, COUNT(se.student_id) as student_count FROM degree_programs dp JO
SELECT dp.degree_summary_name, COUNT(se.student_id) as student_count FROM degree_programs dp JO
SELECT dp.degree_summary_name, COUNT(se.student_id) as student_count FROM degree_programs dp JO
SELECT dp.degree_summary_name, COUNT(se.student_id) as student_count FROM degree_programs dp JO
SELECT dp.degree_summary_name, COUNT(se.student_id) as student_count FROM degree_programs dp JO
SELECT dp.degree_summary_name, COUNT(se.student_id) as student_count FROM degree_programs dp JO
SELECT dp.degree_summary_name, COUNT(se.student_id) as student_count FROM degree_programs dp JO","SELECT dp.degree_summary_name, COUNT(se.student_id) as student_count FROM degree_programs dp JO"
508,522,How many degrees does the engineering department have?,student_transcripts_tracking,medium,SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer',7,"SELECT COUNT(*) FROM degree_programs WHERE department_id IN (SELECT department_id FROM departments WHERE department_name = 'Engineering')
SELECT COUNT(*) FROM degree_programs WHERE department_id = (SELECT department_id FROM departments WHERE department_name = 'Engineering')
SELECT COUNT(*) FROM degree_programs WHERE department_id IN (SELECT department_id FROM departments WHERE department_name = 'Engineering')
SELECT COUNT(*) FROM degree_programs WHERE department_id IN (SELECT department_id FROM departments WHERE department_name = 'Engineering')
SELECT COUNT(*) FROM degree_programs WHERE department_id IN (SELECT department_id FROM departments WHERE department_name = 'Engineering')
SELECT COUNT(*) FROM degree_programs WHERE department_id IN (SELECT department_id FROM departments WHERE department_name = 'Engineering')
SELECT COUNT(*) FROM degree_programs WHERE department_id IN (SELECT department_id FROM departments WHERE department_name = 'Engineering')",SELECT COUNT(*) FROM degree_programs WHERE department_id IN (SELECT department_id FROM departments WHERE department_name = 'Engineering')
509,21,How many concerts occurred in 2014 or 2015?,concert_singer,medium,SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015,7,"SELECT COUNT(*) FROM concert WHERE year IN (2014, 2015)
SELECT COUNT(*) FROM concert WHERE year IN (2014, 2015)
SELECT COUNT(*) FROM concert WHERE year IN (2014, 2015)
SELECT COUNT(*) FROM concert WHERE year IN (2014, 2015)
SELECT COUNT(*) FROM concert WHERE year IN (2014, 2015)
SELECT COUNT(*) FROM concert WHERE year IN (2014, 2015)
SELECT COUNT(*) FROM concert WHERE year IN (2014, 2015)","SELECT COUNT(*) FROM concert WHERE year IN (2014, 2015)"
510,947,What are the date and the operating professional's first name of each treatment?,dog_kennels,medium,"SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id",7,"SELECT treatments.date_of_treatment, professionals.first_name FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id
SELECT treatments.date_of_treatment, professionals.first_name FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id
SELECT treatments.date_of_treatment, professionals.first_name FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id
SELECT treatments.date_of_treatment, professionals.first_name FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id
SELECT treatments.date_of_treatment, professionals.first_name FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id
SELECT treatments.date_of_treatment, professionals.first_name FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id
SELECT treatments.date_of_treatment, professionals.first_name FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id","SELECT treatments.date_of_treatment, professionals.first_name FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id"
511,983,Find the number of professionals who have not treated any dogs.,dog_kennels,extra,SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments ),7,"SELECT COUNT(*) FROM professionals  LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id  WHERE treatments.professional_id IS NULL AND role_code = 'professional'
SELECT COUNT(*) FROM professionals  LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id  WHERE treatments.professional_id IS NULL AND role_code = 'professional' 
SELECT COUNT(*) FROM professionals  LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id  WHERE treatments.professional_id IS NULL AND role_code = 'professional'
SELECT COUNT(*) FROM professionals  LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id  WHERE treatments.professional_id IS NULL AND professionals.role_code = 'professional'
SELECT COUNT(*) FROM professionals  LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id  WHERE treatments.professional_id IS NULL AND role_code = 'professional' 
SELECT COUNT(*) FROM professionals  LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id  WHERE treatments.professional_id IS NULL AND professionals.role_code = 'professional' 
SELECT COUNT(*) FROM professionals  LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id  WHERE treatments.professional_id IS NULL AND role_code = 'professional' ",SELECT COUNT(*) FROM professionals  LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id  WHERE treatments.professional_id IS NULL AND role_code = 'professional' 
512,922,"Which professionals live in the state of Indiana or have done treatment on more than 2 treatments? List his or her id, last name and cell phone.",dog_kennels,extra,"SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2",7,"SELECT professionals.professional_id, professionals.last_name, professionals.cell_number FROM professionals LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id WHERE professionals.state = 'Indiana' OR COUNT(treatments.treatment_id) > 2 GROUP BY professionals.professional_id
SELECT professionals.professional_id, professionals.last_name, professionals.cell_number FROM professionals LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id WHERE professionals.state = 'Indiana' OR COUNT(treatments.treatment_id) > 2 GROUP BY professionals.professional_id
SELECT professionals.professional_id, professionals.last_name, professionals.cell_number FROM professionals LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id WHERE professionals.state = 'Indiana' OR COUNT(treatments.treatment_id) > 2 GROUP BY professionals.professional_id
SELECT professionals.professional_id, professionals.last_name, professionals.cell_number FROM professionals LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id WHERE professionals.state = 'Indiana' OR COUNT(treatments.treatment_id) > 2 GROUP BY professionals.professional_id
SELECT professionals.professional_id, professionals.last_name, professionals.cell_number FROM professionals LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id WHERE professionals.state = 'Indiana' OR COUNT(treatments.treatment_id) > 2 GROUP BY professionals.professional_id
SELECT professionals.professional_id, professionals.last_name, professionals.cell_number FROM professionals LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id WHERE professionals.state = 'Indiana' OR COUNT(treatments.treatment_id) > 2 GROUP BY professionals.professional_id
SELECT professionals.professional_id, professionals.last_name, professionals.cell_number FROM professionals LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id WHERE professionals.state = 'Indiana' OR COUNT(treatments.treatment_id) > 2 GROUP BY professionals.professional_id","SELECT professionals.professional_id, professionals.last_name, professionals.cell_number FROM professionals LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id WHERE professionals.state = 'Indiana' OR COUNT(treatments.treatment_id) > 2 GROUP BY professionals.professional_id"
513,254,Give the flight numbers of flights arriving in Aberdeen.,flight_2,medium,"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""",7,"SELECT flights.flightno FROM flights INNER JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'
SELECT flights.flightno FROM flights INNER JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'
SELECT flights.flightno FROM flights INNER JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'
SELECT flights.flightno FROM flights INNER JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'
SELECT flights.flightno FROM flights INNER JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'
SELECT flights.flightno FROM flights INNER JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'
SELECT flights.flightno FROM flights INNER JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'",SELECT flights.flightno FROM flights INNER JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'
514,319,"Show template ids, version numbers, and template type codes for all templates.",cre_Doc_Template_Mgt,medium,"SELECT template_id ,  version_number ,  template_type_code FROM Templates",7,"SELECT templates.template_id, templates.version_number, templates.template_type_code FROM templates
SELECT templates.template_id, templates.version_number, templates.template_type_code  FROM templates
SELECT templates.template_id, templates.version_number, templates.template_type_code  FROM templates
SELECT templates.template_id, templates.version_number, templates.template_type_code  FROM templates
SELECT templates.template_id, templates.version_number, templates.template_type_code  FROM templates
SELECT templates.template_id, templates.version_number, templates.template_type_code  FROM templates
SELECT templates.template_id, templates.version_number, templates.template_type_code FROM templates","SELECT templates.template_id, templates.version_number, templates.template_type_code  FROM templates"
515,952,List pairs of the owner's first name and the dogs's name.,dog_kennels,medium,"SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",7,"SELECT owners.first_name, dogs.name, dogs.breed_code FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id
SELECT owners.first_name, dogs.name, dogs.breed_code FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id
SELECT owners.first_name, dogs.name, dogs.breed_code FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id
SELECT owners.first_name, dogs.name, dogs.breed_code FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id
SELECT owners.first_name, dogs.name, dogs.breed_code FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id
SELECT owners.first_name, dogs.name, dogs.breed_code FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id
SELECT owners.first_name, dogs.name, dogs.breed_code FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id","SELECT owners.first_name, dogs.name, dogs.breed_code FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id"
516,128,What is the average weight and year for each year?,car_1,medium,"SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;",7,"SELECT AVG(weight) AS average_weight, year, continent FROM cars_data  JOIN car_names ON cars_data.id = car_names.makeid JOIN model_list ON car_names.model = model_list.modelid JOIN car_makers ON model_list.maker = car_makers.id JOIN countries ON car_makers.country = countries.countryid GROUP BY cars_data.year, countries.continent
SELECT AVG(weight), year, continent FROM cars_data  JOIN car_names ON cars_data.id = car_names.makeid JOIN model_list ON car_names.model = model_list.modelid JOIN car_makers ON model_list.maker = car_makers.id JOIN countries ON car_makers.country = countries.countryid GROUP BY cars_data.year, countries.continent
SELECT AVG(weight), year, continent FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid JOIN model_list ON car_names.model = model_list.modelid JOIN car_makers ON model_list.maker = car_makers.id JOIN countries ON car_makers.country = countries.countryid GROUP BY year, continent
SELECT AVG(weight) AS average_weight, year, continent FROM cars_data  JOIN car_names ON cars_data.id = car_names.makeid JOIN model_list ON car_names.model = model_list.modelid JOIN car_makers ON model_list.maker = car_makers.id JOIN countries ON car_makers.country = countries.countryid GROUP BY cars_data.year, countries.continent
SELECT year, AVG(weight) as average_weight FROM cars_data GROUP BY year
SELECT AVG(weight), year, continent FROM cars_data  JOIN car_names ON cars_data.id = car_names.makeid JOIN model_list ON car_names.model = model_list.modelid JOIN car_makers ON model_list.maker = car_makers.id JOIN countries ON car_makers.country = countries.countryid GROUP BY cars_data.year, countries.continent
SELECT AVG(weight), year, continent FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid JOIN model_list ON car_names.model = model_list.modelid JOIN car_makers ON model_list.maker = car_makers.id JOIN countries ON car_makers.country = countries.countryid GROUP BY year, continent","SELECT AVG(weight) AS average_weight, year, continent FROM cars_data  JOIN car_names ON cars_data.id = car_names.makeid JOIN model_list ON car_names.model = model_list.modelid JOIN car_makers ON model_list.maker = car_makers.id JOIN countries ON car_makers.country = countries.countryid GROUP BY cars_data.year, countries.continent"
517,38,What are the names of the singers who performed in a concert in 2014?,concert_singer,hard,SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014,7,"SELECT singer.name  FROM singer  JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id  JOIN concert ON singer_in_concert.concert_id = concert.concert_id  WHERE concert.year = 2014
SELECT singer.name  FROM singer  JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id  JOIN concert ON singer_in_concert.concert_id = concert.concert_id  WHERE concert.year = 2014
SELECT singer.name  FROM singer  JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id  JOIN concert ON singer_in_concert.concert_id = concert.concert_id  WHERE concert.year = 2014
SELECT singer.name  FROM singer  JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id  JOIN concert ON singer_in_concert.concert_id = concert.concert_id  WHERE concert.year = 2014
SELECT s.name  FROM singer AS s  JOIN singer_in_concert ASsic ON s.singer_id =  sic.singer_id  JOIN concert AS c ON c.concert_id = sic.concert_id  WHERE c.year = 2014
SELECT singer.name  FROM singer  JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id  JOIN concert ON singer_in_concert.concert_id = concert.concert_id  WHERE concert.year = 2014
SELECT singer.name  FROM singer  JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id  JOIN concert ON singer_in_concert.concert_id = concert.concert_id  WHERE concert.year = 2014",SELECT singer.name  FROM singer  JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id  JOIN concert ON singer_in_concert.concert_id = concert.concert_id  WHERE concert.year = 2014
518,890,Show the names of all of the high schooler Kyle's friends.,network_1,hard,"SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  ""Kyle""",7,"SELECT h.name  FROM highschooler h  JOIN friend f ON h.id = f.friend_id  WHERE f.student_id = (SELECT id FROM highschooler WHERE name = 'Kyle')
SELECT h.name  FROM highschooler h  JOIN friend f ON h.id = f.friend_id  WHERE f.student_id = (SELECT id FROM highschooler WHERE name = 'Kyle')
SELECT h.name  FROM highschooler h  JOIN friend f ON h.id = f.friend_id  WHERE f.student_id = (SELECT id FROM highschooler WHERE name = 'Kyle')
SELECT h.name  FROM highschooler h  JOIN friend f ON h.id = f.friend_id  WHERE f.student_id = (SELECT id FROM highschooler WHERE name = 'Kyle')
SELECT h.name  FROM highschooler h  JOIN friend f ON h.id = f.friend_id  WHERE f.student_id = (SELECT id FROM highschooler WHERE name = 'Kyle')
SELECT h.name  FROM highschooler h  JOIN friend f ON h.id = f.friend_id  WHERE f.student_id = (SELECT id FROM highschooler WHERE name = 'Kyle')
SELECT h.name  FROM highschooler h  JOIN friend f ON h.id = f.friend_id  WHERE f.student_id = (SELECT id FROM highschooler WHERE name = 'Kyle')",SELECT h.name  FROM highschooler h  JOIN friend f ON h.id = f.friend_id  WHERE f.student_id = (SELECT id FROM highschooler WHERE name = 'Kyle')
519,403,Show the name of the teacher for the math course.,course_teach,hard,"SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  ""Math""",7,"SELECT teacher.name  FROM teacher  INNER JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id  INNER JOIN course ON course_arrange.course_id = course.course_id  WHERE course.course = 'math'
SELECT teacher.name  FROM teacher  INNER JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id  INNER JOIN course ON course_arrange.course_id = course.course_id  WHERE course.course = 'math'
SELECT teacher.name  FROM teacher  INNER JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id  INNER JOIN course ON course_arrange.course_id = course.course_id  WHERE course.course = 'math'
SELECT teacher.name  FROM teacher  INNER JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id  INNER JOIN course ON course_arrange.course_id = course.course_id  WHERE course.course = 'math'
SELECT teacher.name  FROM teacher  INNER JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id  INNER JOIN course ON course_arrange.course_id = course.course_id  WHERE course.course = 'math'
SELECT teacher.name  FROM teacher  INNER JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id  INNER JOIN course ON course_arrange.course_id = course.course_id  WHERE course.course = 'math'
SELECT teacher.name  FROM teacher  INNER JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id  INNER JOIN course ON course_arrange.course_id = course.course_id  WHERE course.course = 'math'",SELECT teacher.name  FROM teacher  INNER JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id  INNER JOIN course ON course_arrange.course_id = course.course_id  WHERE course.course = 'math'
520,60,What are the students' first names who have both cats and dogs as pets?,pets_1,extra,SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog',7,"SELECT student.fname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype IN ('cat', 'dog') GROUP BY student.fname HAVING COUNT(DISTINCT pets.pettype) = 2
SELECT student.fname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype IN ('cat', 'dog') GROUP BY student.fname HAVING COUNT(DISTINCT pets.pettype) = 2
SELECT student.fname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype IN ('cat', 'dog') GROUP BY student.fname HAVING COUNT(DISTINCT pets.pettype) = 2
SELECT student.fname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype IN ('cat', 'dog') GROUP BY student.fname HAVING COUNT(DISTINCT pets.pettype) = 2
SELECT student.fname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype IN ('cat', 'dog') GROUP BY student.fname HAVING COUNT(DISTINCT pets.pettype) = 2
SELECT student.fname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype IN ('cat', 'dog') GROUP BY student.fname HAVING COUNT(DISTINCT pets.pettype) = 2
SELECT student.fname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype IN ('cat', 'dog') GROUP BY student.fname HAVING COUNT(DISTINCT pets.pettype) = 2","SELECT student.fname  FROM student  JOIN has_pet ON student.stuid = has_pet.stuid  JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype IN ('cat', 'dog') GROUP BY student.fname HAVING COUNT(DISTINCT pets.pettype) = 2"
521,735,How many different forms of governments are there in Africa?,world_1,easy,"SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  ""Africa""",7,"SELECT COUNT(DISTINCT governmentform) FROM country WHERE continent = 'Africa'
SELECT COUNT(DISTINCT governmentform) FROM country WHERE continent = 'Africa'
SELECT COUNT(DISTINCT governmentform) FROM country WHERE continent = 'Africa'
SELECT COUNT(DISTINCT governmentform) FROM country WHERE continent = 'Africa'
SELECT COUNT(DISTINCT governmentform) FROM country WHERE continent = 'Africa'
SELECT COUNT(DISTINCT governmentform) FROM country WHERE continent = 'Africa'
SELECT COUNT(DISTINCT governmentform) FROM country WHERE continent = 'Africa'",SELECT COUNT(DISTINCT governmentform) FROM country WHERE continent = 'Africa'
522,400,What is the name of each teacher and what course they teach?,course_teach,medium,"SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID",7,"SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id
SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id
SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id
SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id
SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id
SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id
SELECT t.name, c.course FROM teacher t INNER JOIN course_arrange ca ON t.teacher_id = ca.teacher_id INNER JOIN course c ON ca.course_id = c.course_id","SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id"
523,353,What are the distinct template type descriptions for the templates ever used by any document?,cre_Doc_Template_Mgt,medium,SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID,7,"SELECT DISTINCT ref_template_types.template_type_description  FROM ref_template_types  INNER JOIN templates ON ref_template_types.template_type_code = templates.template_type_code  INNER JOIN documents ON templates.template_id = documents.template_id
SELECT DISTINCT ref_template_types.template_type_description  FROM ref_template_types  INNER JOIN templates ON ref_template_types.template_type_code = templates.template_type_code  INNER JOIN documents ON templates.template_id = documents.template_id
SELECT DISTINCT ref_template_types.template_type_description  FROM ref_template_types  INNER JOIN templates ON ref_template_types.template_type_code = templates.template_type_code  INNER JOIN documents ON templates.template_id = documents.template_id
SELECT DISTINCT ref_template_types.template_type_description  FROM ref_template_types  INNER JOIN templates ON ref_template_types.template_type_code = templates.template_type_code  INNER JOIN documents ON templates.template_id = documents.template_id
SELECT DISTINCT ref_template_types.template_type_description FROM ref_template_types INNER JOIN templates ON ref_template_types.template_type_code = templates.template_type_code INNER JOIN documents ON templates.template_id = documents.template_id
SELECT DISTINCT ref_template_types.template_type_description  FROM ref_template_types  INNER JOIN templates ON ref_template_types.template_type_code = templates.template_type_code  INNER JOIN documents ON templates.template_id = documents.template_id
SELECT DISTINCT ref_template_types.template_type_description  FROM ref_template_types  INNER JOIN templates ON ref_template_types.template_type_code = templates.template_type_code  INNER JOIN documents ON templates.template_id = documents.template_id",SELECT DISTINCT ref_template_types.template_type_description  FROM ref_template_types  INNER JOIN templates ON ref_template_types.template_type_code = templates.template_type_code  INNER JOIN documents ON templates.template_id = documents.template_id
524,765,Give the mean life expectancy of countries in which English is not the official language.,world_1,extra,"SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND T2.IsOfficial  =  ""T"")",7,"SELECT AVG(country.lifeexpectancy) FROM country INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English' AND countrylanguage.isofficial = 'f'
SELECT AVG(country.lifeexpectancy)  FROM country  INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language = 'English' AND countrylanguage.isofficial = 'f'
SELECT AVG(country.lifeexpectancy)  FROM country  INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language = 'English' AND countrylanguage.isofficial = 'f'
SELECT AVG(country.lifeexpectancy)  FROM country  INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language = 'English' AND countrylanguage.isofficial = 'f'
SELECT AVG(country.lifeexpectancy)  FROM country  INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language = 'English' AND countrylanguage.isofficial = 'f'
SELECT AVG(country.lifeexpectancy) FROM country INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English' AND countrylanguage.isofficial = 'f'
SELECT AVG(country.lifeexpectancy) FROM country INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language = 'English' AND countrylanguage.isofficial = 'f'",SELECT AVG(country.lifeexpectancy)  FROM country  INNER JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language = 'English' AND countrylanguage.isofficial = 'f'
525,122,What are the makers and models?,car_1,medium,"SELECT Maker ,  Model FROM MODEL_LIST;",7,"SELECT maker, model FROM car_makers INNER JOIN model_list ON car_makers.id = model_list.maker
SELECT maker, model FROM car_makers INNER JOIN model_list ON car_makers.id = model_list.maker
SELECT maker, model FROM car_makers INNER JOIN model_list ON car_makers.id = model_list.maker
SELECT maker, model FROM car_makers INNER JOIN model_list ON car_makers.id = model_list.maker
SELECT maker, model FROM car_makers INNER JOIN model_list ON car_makers.id = model_list.maker
SELECT maker, model FROM car_makers INNER JOIN model_list ON car_makers.id = model_list.maker
SELECT maker, model FROM car_makers INNER JOIN model_list ON car_makers.id = model_list.maker","SELECT maker, model FROM car_makers INNER JOIN model_list ON car_makers.id = model_list.maker"
526,507,what are all the addresses including line 1 and line 2?,student_transcripts_tracking,medium,"SELECT line_1 ,  line_2 FROM addresses",7,"SELECT line_1, line_2 FROM addresses
SELECT line_1, line_2 FROM addresses
SELECT line_1, line_2 FROM addresses
SELECT line_1, line_2 FROM addresses
SELECT line_1, line_2 FROM addresses
SELECT line_1, line_2 FROM addresses
SELECT line_1, line_2 FROM addresses","SELECT line_1, line_2 FROM addresses"
527,960,List the last name of the owner owning the youngest dog.,dog_kennels,extra,SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs ),7,"SELECT owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id WHERE dogs.age = (SELECT MIN(age) FROM dogs) LIMIT 1
SELECT owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id WHERE dogs.age = (SELECT MIN(age) FROM dogs)
SELECT owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id WHERE dogs.age = (SELECT MIN(age) FROM dogs)
SELECT owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id WHERE dogs.age = (SELECT MIN(age) FROM dogs)
SELECT owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id WHERE dogs.age = (SELECT MIN(age) FROM dogs)
SELECT owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id WHERE dogs.age = (SELECT MIN(age) FROM dogs)
SELECT owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id WHERE dogs.age = (SELECT MIN(age) FROM dogs)",SELECT owners.last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id WHERE dogs.age = (SELECT MIN(age) FROM dogs)
528,638,What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Michael Chang?,tvshow,extra,"SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'",7,"SELECT tv_channel.series_name, tv_channel.country FROM tv_channel JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.directed_by = 'Ben Jones' OR cartoon.directed_by = 'Michael Chang' GROUP BY tv_channel.series_name, tv_channel.country
SELECT tv_channel.series_name, tv_channel.country FROM tv_channel JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.directed_by = 'Ben Jones' OR cartoon.directed_by = 'Michael Chang' GROUP BY tv_channel.series_name, tv_channel.country
SELECT tv_channel.series_name, tv_channel.country FROM tv_channel JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.directed_by IN ('Ben Jones', 'Michael Chang') AND tv_channel.content = 'cartoon'
SELECT tv_channel.series_name, tv_channel.country FROM tv_channel JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.directed_by = 'Ben Jones' OR cartoon.directed_by = 'Michael Chang' GROUP BY tv_channel.series_name, tv_channel.country
SELECT tv_channel.series_name, tv_channel.country FROM tv_channel JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.directed_by = 'Ben Jones' OR cartoon.directed_by = 'Michael Chang' GROUP BY tv_channel.series_name, tv_channel.country
SELECT tv_channel.series_name, tv_channel.country FROM tv_channel JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.directed_by = 'Ben Jones' OR cartoon.directed_by = 'Michael Chang' GROUP BY tv_channel.series_name, tv_channel.country
SELECT tv_channel.series_name, tv_channel.country FROM tv_channel JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.directed_by = 'Ben Jones' OR cartoon.directed_by = 'Michael Chang' GROUP BY tv_channel.series_name, tv_channel.country","SELECT tv_channel.series_name, tv_channel.country FROM tv_channel JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.directed_by = 'Ben Jones' OR cartoon.directed_by = 'Michael Chang' GROUP BY tv_channel.series_name, tv_channel.country"
529,539,Find the program which most number of students are enrolled in. List both the id and the summary.,student_transcripts_tracking,extra,"SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT dp.degree_program_id, dp.degree_summary_name, COUNT(se.student_id
SELECT dp.degree_program_id, dp.degree_summary_name, COUNT(se.student_id
SELECT dp.degree_program_id, dp.degree_summary_name, COUNT(se.student_id
SELECT dp.degree_program_id, dp.degree_summary_name, COUNT(se.student_id
SELECT dp.degree_program_id, dp.degree_summary_name, COUNT(se.student_id
SELECT dp.degree_program_id, dp.degree_summary_name FROM degree_programs dp 
SELECT dp.degree_program_id, dp.degree_summary_name FROM degree_programs dp ","SELECT dp.degree_program_id, dp.degree_summary_name, COUNT(se.student_id"
530,694,What are the contestant numbers and names of the contestants who had at least two votes?,voter_1,medium,"SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2",7,"SELECT contestants.contestant_number, contestants.contestant_name  FROM contestants  JOIN votes ON contestants.contestant_number = votes.contestant_number  GROUP BY votes.contestant_number  HAVING COUNT(votes.vote_id) >= 2
SELECT contestants.contestant_number, contestants.contestant_name  FROM contestants  JOIN votes ON contestants.contestant_number = votes.contestant_number  GROUP BY votes.contestant_number  HAVING COUNT(votes.vote_id) >= 2
SELECT contestants.contestant_number, contestants.contestant_name  FROM contestants  JOIN votes ON contestants.contestant_number = votes.contestant_number  GROUP BY votes.contestant_number  HAVING COUNT(votes.vote_id) >= 2
SELECT contestants.contestant_number, contestants.contestant_name  FROM contestants  JOIN votes ON contestants.contestant_number = votes.contestant_number  GROUP BY votes.contestant_number  HAVING COUNT(votes.vote_id) >= 2
SELECT contestants.contestant_number, contestants.contestant_name  FROM contestants  JOIN votes ON contestants.contestant_number = votes.contestant_number  GROUP BY votes.contestant_number  HAVING COUNT(votes.vote_id) >= 2
SELECT contestants.contestant_number, contestants.contestant_name  FROM contestants  JOIN votes ON contestants.contestant_number = votes.contestant_number  GROUP BY votes.contestant_number  HAVING COUNT(votes.vote_id) >= 2
SELECT contestants.contestant_number, contestants.contestant_name  FROM contestants  INNER JOIN votes ON contestants.contestant_number = votes.contestant_number  GROUP BY votes.contestant_number  HAVING COUNT(votes.vote_id) >= 2","SELECT contestants.contestant_number, contestants.contestant_name  FROM contestants  JOIN votes ON contestants.contestant_number = votes.contestant_number  GROUP BY votes.contestant_number  HAVING COUNT(votes.vote_id) >= 2"
531,462,Which year had the most matches?,wta_1,hard,SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,7,"SELECT year, COUNT(*) as total_matches FROM matches GROUP BY year ORDER BY total_matches DESC LIMIT 1
SELECT year, COUNT(*) as total_matches FROM matches GROUP BY year ORDER BY total_matches DESC LIMIT 1
SELECT year, COUNT(*) as total_matches FROM matches GROUP BY year ORDER BY total_matches DESC LIMIT 1
SELECT year, COUNT(*) as total_matches FROM matches GROUP BY year ORDER BY total_matches DESC LIMIT 1
SELECT year, COUNT(*) as total_matches FROM matches GROUP BY year ORDER BY total_matches DESC LIMIT 1
SELECT year, COUNT(*) as total_matches FROM matches GROUP BY year ORDER BY total_matches DESC LIMIT 1
SELECT year, COUNT(*) as total_matches FROM matches GROUP BY year ORDER BY total_matches DESC LIMIT 1","SELECT year, COUNT(*) as total_matches FROM matches GROUP BY year ORDER BY total_matches DESC LIMIT 1"
532,465,Find the name of the winner who has the highest rank points and participated in the Australian Open tourney.,wta_1,hard,SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1,7,"SELECT players.first_name, players.last_name FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name = 'Australian Open' ORDER BY matches.winner_rank_points DESC LIMIT 1
SELECT players.first_name, players.last_name FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name = 'Australian Open' ORDER BY matches.winner_rank_points DESC LIMIT 1
SELECT players.first_name, players.last_name FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name = 'Australian Open' ORDER BY matches.winner_rank_points DESC LIMIT 1
SELECT players.first_name, players.last_name FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name = 'Australian Open' ORDER BY matches.winner_rank_points DESC LIMIT 1
SELECT players.first_name, players.last_name FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name = 'Australian Open' ORDER BY matches.winner_rank_points DESC LIMIT 1
SELECT players.first_name, players.last_name FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name = 'Australian Open' ORDER BY matches.winner_rank_points DESC LIMIT 1
SELECT players.first_name, players.last_name FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name = 'Australian Open' ORDER BY matches.winner_rank_points DESC LIMIT 1","SELECT players.first_name, players.last_name FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name = 'Australian Open' ORDER BY matches.winner_rank_points DESC LIMIT 1"
533,316,What are the ids for templates that are not used in any documents?,cre_Doc_Template_Mgt,hard,SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents,7,"SELECT templates.template_id  FROM templates  LEFT JOIN documents ON templates.template_id = documents.template_id  WHERE documents.template_id IS NULL
SELECT templates.template_id  FROM templates  LEFT JOIN documents ON templates.template_id = documents.template_id  WHERE documents.template_id IS NULL
SELECT templates.template_id  FROM templates  LEFT JOIN documents ON templates.template_id = documents.template_id  WHERE documents.template_id IS NULL
SELECT templates.template_id  FROM templates  LEFT JOIN documents ON templates.template_id = documents.template_id  WHERE documents.template_id IS NULL
SELECT templates.template_id  FROM templates  LEFT JOIN documents ON templates.template_id = documents.template_id  WHERE documents.template_id IS NULL
SELECT templates.template_id  FROM templates  LEFT JOIN documents ON templates.template_id = documents.template_id  WHERE documents.template_id IS NULL
SELECT templates.template_id  FROM templates  LEFT JOIN documents ON templates.template_id = documents.template_id  WHERE documents.template_id IS NULL",SELECT templates.template_id  FROM templates  LEFT JOIN documents ON templates.template_id = documents.template_id  WHERE documents.template_id IS NULL
534,738,How many official languages does Afghanistan have?,world_1,medium,"SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Afghanistan"" AND IsOfficial  =  ""T""",7,"SELECT COUNT(*) FROM countrylanguage WHERE countrycode = ""AFG"" AND isofficial = ""T""
SELECT COUNT(*) FROM countrylanguage WHERE countrycode = ""AFG"" AND isofficial = ""T""
SELECT COUNT(*) FROM countrylanguage WHERE countrycode = ""AFG"" AND isofficial = ""T""
SELECT COUNT(*) FROM countrylanguage WHERE countrycode = ""AFG"" AND isofficial = ""T""
SELECT COUNT(*) FROM countrylanguage WHERE countrycode = ""AFG"" AND isofficial = ""T""
SELECT COUNT(*) FROM countrylanguage WHERE countrycode = ""AFG"" AND isofficial = ""T""
SELECT COUNT(*) FROM countrylanguage WHERE countrycode = ""AFG"" AND isofficial = ""T""","SELECT COUNT(*) FROM countrylanguage WHERE countrycode = ""AFG"" AND isofficial = ""T"""
535,181,"What is the abbreviation of Airline ""JetBlue Airways""?",flight_2,easy,"SELECT Abbreviation FROM AIRLINES WHERE Airline  =  ""JetBlue Airways""",7,"SELECT abbreviation FROM airlines WHERE airline = ""JetBlue Airways""
SELECT abbreviation FROM airlines WHERE airline = ""JetBlue Airways""
SELECT abbreviation FROM airlines WHERE airline = ""JetBlue Airways""
SELECT abbreviation FROM airlines WHERE airline = ""JetBlue Airways""
SELECT abbreviation FROM airlines WHERE airline = ""JetBlue Airways""
SELECT abbreviation FROM airlines WHERE airline = ""JetBlue Airways""
SELECT abbreviation FROM airlines WHERE airline = ""JetBlue Airways""","SELECT abbreviation FROM airlines WHERE airline = ""JetBlue Airways"""
536,228,Give the code of the airport with the least flights.,flight_2,extra,SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1,7,"SELECT flights.sourceairport as airport_code, COUNT(*) as flight_count FROM flights GROUP BY flights.sourceairport ORDER BY flight_count ASC LIMIT 1
SELECT flights.sourceairport as airport_code, COUNT(*) as flight_count FROM flights GROUP BY flights.sourceairport ORDER BY flight_count ASC LIMIT 1
SELECT flights.sourceairport as airport_code, COUNT(*) as flight_count FROM flights GROUP BY flights.sourceairport ORDER BY flight_count ASC LIMIT 1
SELECT flights.sourceairport as airport_code, COUNT(*) as flight_count FROM flights GROUP BY flights.sourceairport ORDER BY flight_count ASC LIMIT 1
SELECT flights.sourceairport as airport_code, COUNT(*) as flight_count FROM flights GROUP BY flights.sourceairport ORDER BY flight_count ASC LIMIT 1
SELECT flights.sourceairport as airport_code, COUNT(flights.flightno) as flight_count FROM flights GROUP BY flights.sourceairport ORDER BY flight_count ASC LIMIT 1
SELECT flights.sourceairport as airport_code, COUNT(*) as flight_count FROM flights GROUP BY flights.sourceairport ORDER BY flight_count ASC LIMIT 1","SELECT flights.sourceairport as airport_code, COUNT(*) as flight_count FROM flights GROUP BY flights.sourceairport ORDER BY flight_count ASC LIMIT 1"
537,460,What is the first name and country code of the player with the most tours?,wta_1,hard,"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1",7,"SELECT players.first_name, players.country_code FROM players JOIN (     SELECT winner_id, COUNT(*) as tours     FROM matches     GROUP BY winner_id     ORDER BY tours DESC     LIMIT 1 ) winners ON players.player_id = winners.winner_id
SELECT players.first_name, players.country_code FROM players JOIN (     SELECT winner_id, COUNT(*) as tours     FROM matches     GROUP BY winner_id     ORDER BY tours DESC     LIMIT 1 ) winners ON players.player_id = winners.winner_id
SELECT players.first_name, players.country_code FROM players JOIN (     SELECT winner_id, COUNT(*) as tours     FROM matches     GROUP BY winner_id     ORDER BY tours DESC     LIMIT 1 ) winners ON players.player_id = winners.winner_id
SELECT players.first_name, players.country_code FROM players JOIN (     SELECT winner_id, COUNT(*) as tours     FROM matches     GROUP BY winner_id     ORDER BY tours DESC     LIMIT 1 ) winners ON players.player_id = winners.winner_id
SELECT players.first_name, players.country_code FROM players JOIN (     SELECT winner_id, COUNT(*) as tours     FROM matches     GROUP BY winner_id     ORDER BY tours DESC     LIMIT 1 ) winners ON players.player_id = winners.winner_id
SELECT players.first_name, players.country_code FROM players JOIN (     SELECT player_id, COUNT(*) as tours     FROM rankings     GROUP BY player_id     ORDER BY tours DESC     LIMIT 1 ) ranked_players ON players.player_id = ranked_players.player_id
SELECT players.first_name, players.country_code FROM players JOIN (     SELECT winner_id, COUNT(*) as tours     FROM matches     GROUP BY winner_id     ORDER BY tours DESC     LIMIT 1 ) winners ON players.player_id = winners.winner_id","SELECT players.first_name, players.country_code FROM players JOIN (     SELECT winner_id, COUNT(*) as tours     FROM matches     GROUP BY winner_id     ORDER BY tours DESC     LIMIT 1 ) winners ON players.player_id = winners.winner_id"
538,105,How many car makers are there in each continents? List the continent name and the count.,car_1,hard,"SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;",7,"SELECT c.continent, COUNT(DISTINCT cm.maker) AS car_maker_count FROM car_makers AS cm JOIN countries AS co ON cm.country = co.countryid JOIN continents AS c ON co.continent = c.contid GROUP BY c.continent
SELECT c.continent, COUNT(DISTINCT cm.maker) AS car_maker_count FROM car_makers AS cm JOIN countries AS co ON cm.country = co.countryid JOIN continents AS c ON co.continent = c.contid GROUP BY c.continent
SELECT c.continent, COUNT(DISTINCT cm.maker) as car_maker_count FROM car_makers cm JOIN countries c ON cm.country = c.countryid GROUP BY c.continent
SELECT c.continent, COUNT(DISTINCT cm.maker) AS car_makers FROM car_makers AS cm JOIN countries AS co ON cm.country = co.countryid JOIN continents AS c ON co.continent = c.contid GROUP BY c.continent
SELECT c.continent, COUNT(DISTINCT cm.maker) AS car_maker_count FROM car_makers AS cm JOIN countries AS co ON cm.country = co.countryid JOIN continents AS c ON co.continent = c.contid GROUP BY c.continent
SELECT c.continent, COUNT(DISTINCT cm.maker) AS car_maker_count FROM car_makers AS cm JOIN countries AS co ON cm.country = co.countryid JOIN continents AS c ON co.continent = c.contid GROUP BY c.continent
SELECT c.continent, COUNT(DISTINCT cm.maker) AS car_maker_count FROM car_makers AS cm JOIN countries AS co ON cm.country = co.countryid JOIN continents AS c ON co.continent = c.contid GROUP BY c.continent","SELECT c.continent, COUNT(DISTINCT cm.maker) AS car_maker_count FROM car_makers AS cm JOIN countries AS co ON cm.country = co.countryid JOIN continents AS c ON co.continent = c.contid GROUP BY c.continent"
539,417,What are the opening year and staff number of the museum named Plaza Museum?,museum_visit,medium,"SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'",7,"SELECT open_year, num_of_staff FROM museum WHERE name = 'Plaza Museum'
SELECT open_year, num_of_staff FROM museum WHERE name = 'Plaza Museum'
SELECT open_year, num_of_staff FROM museum WHERE name = 'Plaza Museum'
SELECT open_year, num_of_staff FROM museum WHERE name = 'Plaza Museum'
SELECT open_year, num_of_staff FROM museum WHERE name = 'Plaza Museum'
SELECT open_year, num_of_staff FROM museum WHERE name = 'Plaza Museum'
SELECT open_year, num_of_staff FROM museum WHERE name = 'Plaza Museum'","SELECT open_year, num_of_staff FROM museum WHERE name = 'Plaza Museum'"
540,371,List all document ids with at least two paragraphs.,cre_Doc_Template_Mgt,easy,SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2,7,"SELECT documents.document_id  FROM documents  JOIN paragraphs ON documents.document_id = paragraphs.document_id  GROUP BY documents.document_id  HAVING COUNT(paragraphs.paragraph_id) >= 2
SELECT documents.document_id  FROM documents  JOIN paragraphs ON documents.document_id = paragraphs.document_id  GROUP BY documents.document_id  HAVING COUNT(paragraphs.paragraph_id) >= 2
SELECT documents.document_id  FROM documents  JOIN paragraphs ON documents.document_id = paragraphs.document_id  GROUP BY documents.document_id  HAVING COUNT(paragraphs.paragraph_id) >= 2
SELECT documents.document_id  FROM documents  JOIN paragraphs ON documents.document_id = paragraphs.document_id  GROUP BY documents.document_id  HAVING COUNT(paragraphs.paragraph_id) >= 2
SELECT documents.document_id  FROM documents  JOIN paragraphs ON documents.document_id = paragraphs.document_id  GROUP BY documents.document_id  HAVING COUNT(paragraphs.paragraph_id) >= 2
SELECT documents.document_id  FROM documents  JOIN paragraphs ON documents.document_id = paragraphs.document_id  GROUP BY documents.document_id  HAVING COUNT(paragraphs.paragraph_id) >= 2
SELECT documents.document_id  FROM documents  JOIN paragraphs ON documents.document_id = paragraphs.document_id  GROUP BY documents.document_id  HAVING COUNT(paragraphs.paragraph_id) >= 2",SELECT documents.document_id  FROM documents  JOIN paragraphs ON documents.document_id = paragraphs.document_id  GROUP BY documents.document_id  HAVING COUNT(paragraphs.paragraph_id) >= 2
541,684,What are the names of people who do not play poker?,poker_player,hard,SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player),7,"SELECT people.name  FROM people  LEFT JOIN poker_player  ON people.people_id = poker_player.people_id  WHERE poker_player.people_id IS NULL
SELECT people.name  FROM people  LEFT JOIN poker_player  ON people.people_id = poker_player.people_id  WHERE poker_player.people_id IS NULL
SELECT people.name  FROM people  LEFT JOIN poker_player  ON people.people_id = poker_player.people_id  WHERE poker_player.people_id IS NULL
SELECT people.name  FROM people  LEFT JOIN poker_player  ON people.people_id = poker_player.people_id  WHERE poker_player.people_id IS NULL
SELECT people.name  FROM people  LEFT JOIN poker_player  ON people.people_id = poker_player.people_id  WHERE poker_player.people_id IS NULL
SELECT people.name  FROM people  LEFT JOIN poker_player  ON people.people_id = poker_player.people_id  WHERE poker_player.people_id IS NULL
SELECT people.name  FROM people  LEFT JOIN poker_player  ON people.people_id = poker_player.people_id  WHERE poker_player.people_id IS NULL",SELECT people.name  FROM people  LEFT JOIN poker_player  ON people.people_id = poker_player.people_id  WHERE poker_player.people_id IS NULL
542,926,Which first names are used for professionals or owners but are not used as dog names?,dog_kennels,hard,SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs,7,"SELECT DISTINCT first_name FROM professionals WHERE role_code = 'professional' OR role_code = 'owner' EXCEPT SELECT name FROM dogs
SELECT DISTINCT first_name FROM professionals WHERE first_name NOT IN (SELECT name FROM dogs) UNION SELECT DISTINCT first_name FROM owners WHERE first_name NOT IN (SELECT name FROM dogs)
SELECT DISTINCT professionals.first_name  FROM professionals  WHERE professionals.first_name NOT IN (SELECT dogs.name FROM dogs)  UNION  SELECT DISTINCT owners.first_name  FROM owners  WHERE owners.first_name NOT IN (SELECT dogs.name FROM dogs)
SELECT DISTINCT first_name FROM professionals WHERE first_name NOT IN (SELECT name FROM dogs) UNION SELECT DISTINCT first_name FROM owners WHERE first_name NOT IN (SELECT name FROM dogs)
SELECT DISTINCT professionals.first_name  FROM professionals  INNER JOIN owners ON professionals.first_name = owners.first_name  WHERE professionals.first_name NOT IN (SELECT dogs.name FROM dogs)
SELECT DISTINCT first_name FROM professionals WHERE role_code = 'professional' OR role_code = 'owner' EXCEPT SELECT name FROM dogs
SELECT DISTINCT professionals.first_name FROM professionals WHERE professionals.first_name NOT IN (SELECT dogs.name FROM dogs) UNION SELECT DISTINCT owners.first_name FROM owners WHERE owners.first_name NOT IN (SELECT dogs.name FROM dogs)",SELECT DISTINCT first_name FROM professionals WHERE role_code = 'professional' OR role_code = 'owner' EXCEPT SELECT name FROM dogs
543,848,Please show the different record companies and the corresponding number of orchestras.,orchestra,medium,"SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company",7,"SELECT orchestra.record_company, COUNT(orchestra.orchestra_id) as number_of_orchestras FROM orchestra GROUP BY orchestra.record_company
SELECT orchestra.record_company, COUNT(orchestra.orchestra_id) as number_of_orchestras FROM orchestra GROUP BY orchestra.record_company
SELECT orchestra.record_company, COUNT(orchestra.orchestra_id) as number_of_orchestras FROM orchestra GROUP BY orchestra.record_company
SELECT orchestra.record_company, COUNT(orchestra.orchestra_id) as number_of_orchestras FROM orchestra GROUP BY orchestra.record_company
SELECT orchestra.record_company, COUNT(orchestra.orchestra_id) as number_of_orchestras FROM orchestra GROUP BY orchestra.record_company
SELECT orchestra.record_company, COUNT(orchestra.orchestra_id) as number_of_orchestras FROM orchestra GROUP BY orchestra.record_company
SELECT orchestra.record_company, COUNT(orchestra.orchestra_id) as number_of_orchestras FROM orchestra GROUP BY orchestra.record_company","SELECT orchestra.record_company, COUNT(orchestra.orchestra_id) as number_of_orchestras FROM orchestra GROUP BY orchestra.record_company"
544,497,What are the name and results of the battles when the bulgarian commander is not 'Boril',battle_death,medium,"SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'",7,"SELECT battles.name, battles.result FROM battles WHERE battles.bulgarian_commander != 'Boril'
SELECT battles.name, battles.result FROM battles WHERE battles.bulgarian_commander != 'Boril'
SELECT battles.name, battles.result FROM battles WHERE battles.bulgarian_commander != 'Boril'
SELECT battles.name, battles.result FROM battles WHERE battles.bulgarian_commander != 'Boril'
SELECT battle.name, battle.result FROM battle WHERE battle.bulgarian_commander != 'Boril'
SELECT battle.name, battle.result FROM battle WHERE battle.bulgarian_commander != 'Boril'
SELECT battle.name, battle.result FROM battle WHERE battle.bulgarian_commander != 'Boril'","SELECT battles.name, battles.result FROM battles WHERE battles.bulgarian_commander != 'Boril'"
545,642,What are the ids of all tv channels that have more than 2 TV channels?,tvshow,easy,SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2,7,"SELECT tv_channel.id  FROM tv_channel  JOIN tv_series ON tv_channel.id = tv_series.channel  JOIN cartoon ON tv_channel.id = cartoon.channel  GROUP BY tv_channel.id  HAVING COUNT(tv_channel.id) > 2
SELECT tv_channel.id  FROM tv_channel  JOIN tv_series ON tv_channel.id = tv_series.channel  JOIN cartoon ON tv_channel.id = cartoon.channel  GROUP BY tv_channel.id  HAVING COUNT(tv_channel.id) > 2
SELECT tv_channel.id  FROM tv_channel  JOIN tv_series ON tv_channel.id = tv_series.channel  JOIN cartoon ON tv_channel.id = cartoon.channel  GROUP BY tv_channel.id  HAVING COUNT(tv_channel.id) > 2
SELECT tv_channel.id  FROM tv_channel  JOIN tv_series ON tv_channel.id = tv_series.channel  JOIN cartoon ON tv_channel.id = cartoon.channel  GROUP BY tv_channel.id  HAVING COUNT(tv_channel.id) > 2
SELECT tv_channel.id  FROM tv_channel  JOIN tv_series ON tv_channel.id = tv_series.channel  JOIN cartoon ON tv_channel.id = cartoon.channel  GROUP BY tv_channel.id  HAVING COUNT(tv_channel.id) > 2
SELECT tv_channel.id  FROM tv_channel  JOIN tv_series ON tv_channel.id = tv_series.channel  JOIN cartoon ON tv_channel.id = cartoon.channel  GROUP BY tv_channel.id  HAVING COUNT(tv_channel.id) > 2
SELECT tv_channel.id  FROM tv_channel  JOIN tv_series ON tv_channel.id = tv_series.channel  JOIN cartoon ON tv_channel.id = cartoon.channel  GROUP BY tv_channel.id  HAVING COUNT(tv_channel.id) > 2",SELECT tv_channel.id  FROM tv_channel  JOIN tv_series ON tv_channel.id = tv_series.channel  JOIN cartoon ON tv_channel.id = cartoon.channel  GROUP BY tv_channel.id  HAVING COUNT(tv_channel.id) > 2
546,773,Which countries have greater area than that of any country in Europe?,world_1,hard,"SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  ""Europe"")",7,"SELECT c.name, c.surfacearea  FROM country c  WHERE c.surfacearea > ANY (SELECT c2.surfacearea FROM country c2 WHERE c2.continent = 'Europe')
SELECT c.name, c.surfacearea  FROM country c  WHERE c.surfacearea > ANY (SELECT c2.surfacearea FROM country c2 WHERE c2.continent = 'Europe')
SELECT c.name, c.surfacearea  FROM country c WHERE c.surfacearea > ANY (SELECT c2.surfacearea                             FROM country c2                             WHERE c2.continent = 'Europe') AND c.continent != 'Europe'
SELECT c.name, c.surfacearea  FROM country c  WHERE c.surfacearea > ANY (SELECT c2.surfacearea FROM country c2 WHERE c2.continent = 'Europe')
SELECT c.name, c.surfacearea FROM country c WHERE c.surfacearea > ANY (     SELECT e.surfacearea     FROM country e     WHERE e.continent = 'Europe' ) 
SELECT c.name, c.surfacearea  FROM country c WHERE c.surfacearea > ANY (SELECT c2.surfacearea FROM country c2 WHERE c2.continent = 'Europe')
SELECT c.name, c.surfacearea  FROM country c  WHERE c.surfacearea > ANY (SELECT c2.surfacearea FROM country c2 WHERE c2.continent = 'Europe')","SELECT c.name, c.surfacearea  FROM country c  WHERE c.surfacearea > ANY (SELECT c2.surfacearea FROM country c2 WHERE c2.continent = 'Europe')"
547,51,Find number of pets owned by students who are older than 20.,pets_1,medium,SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20,7,"SELECT COUNT(has_pet.petid)  FROM has_pet  INNER JOIN student ON has_pet.stuid = student.stuid  WHERE student.age > 20
SELECT COUNT(has_pet.petid)  FROM has_pet  INNER JOIN student ON has_pet.stuid = student.stuid  WHERE student.age > 20
SELECT COUNT(has_pet.petid)  FROM has_pet  INNER JOIN student ON has_pet.stuid = student.stuid  WHERE student.age > 20
SELECT COUNT(has_pet.petid)  FROM has_pet  INNER JOIN student ON has_pet.stuid = student.stuid  WHERE student.age > 20
SELECT COUNT(has_pet.petid)  FROM has_pet  INNER JOIN student ON has_pet.stuid = student.stuid  WHERE student.age > 20
SELECT COUNT(has_pet.petid)  FROM has_pet  INNER JOIN student ON has_pet.stuid = student.stuid  WHERE student.age > 20
SELECT COUNT(has_pet.petid)  FROM has_pet  INNER JOIN student ON has_pet.stuid = student.stuid  WHERE student.age > 20",SELECT COUNT(has_pet.petid)  FROM has_pet  INNER JOIN student ON has_pet.stuid = student.stuid  WHERE student.age > 20
548,3,"What are the names, countries, and ages for every singer in descending order of age?",concert_singer,medium,"SELECT name ,  country ,  age FROM singer ORDER BY age DESC",7,"SELECT singer.name, singer.country, singer.age FROM singer ORDER BY singer.age DESC
SELECT singer.name, singer.country, singer.age FROM singer ORDER BY singer.age DESC
SELECT singer.name, singer.country, singer.age FROM singer ORDER BY singer.age DESC
SELECT singer.name, singer.country, singer.age FROM singer ORDER BY singer.age DESC
SELECT singer.name, singer.country, singer.age FROM singer ORDER BY singer.age DESC
SELECT singer.name, singer.country, singer.age FROM singer ORDER BY singer.age DESC
SELECT singer.name, singer.country, singer.age FROM singer ORDER BY singer.age DESC","SELECT singer.name, singer.country, singer.age FROM singer ORDER BY singer.age DESC"
549,908,Show the names of students who have at least 2 likes.,network_1,medium,SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2,7,"SELECT highschooler.name  FROM highschooler  JOIN likes ON highschooler.id = likes.student_id  GROUP BY highschooler.id  HAVING COUNT(likes.liked_id) >= 2
SELECT highschooler.name  FROM highschooler  JOIN likes ON highschooler.id = likes.student_id  GROUP BY highschooler.id  HAVING COUNT(likes.liked_id) >= 2
SELECT highschooler.name  FROM highschooler  JOIN likes ON highschooler.id = likes.student_id  GROUP BY highschooler.id  HAVING COUNT(likes.liked_id) >= 2
SELECT highschooler.name  FROM highschooler  INNER JOIN likes ON highschooler.id = likes.student_id  GROUP BY highschooler.id  HAVING COUNT(likes.liked_id) >= 2
SELECT h.name  FROM highschooler h  JOIN (     SELECT l.student_id, COUNT(*) as likes_count      FROM likes l      GROUP BY l.student_id ) lc ON h.id = lc.student_id WHERE lc.likes_count >= 2
SELECT highschooler.name  FROM highschooler  JOIN likes ON highschooler.id = likes.student_id  GROUP BY highschooler.id  HAVING COUNT(likes.liked_id) >= 2
SELECT highschooler.name  FROM highschooler  INNER JOIN likes ON highschooler.id = likes.student_id  GROUP BY highschooler.id  HAVING COUNT(likes.liked_id) >= 2",SELECT highschooler.name  FROM highschooler  JOIN likes ON highschooler.id = likes.student_id  GROUP BY highschooler.id  HAVING COUNT(likes.liked_id) >= 2
550,420,"What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?",museum_visit,extra,"SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1",7,"SELECT visitor.id, visitor.name, visitor.level_of_membership FROM visitor JOIN visit ON visitor.id = visit.visitor_id GROUP BY visitor.id, visitor.name, visitor.level_of_membership ORDER BY SUM(visit.total_spent) DESC LIMIT 1
SELECT visitor.id, visitor.name, visitor.level_of_membership FROM visitor JOIN visit ON visitor.id = visit.visitor_id GROUP BY visitor.id, visitor.name, visitor.level_of_membership ORDER BY SUM(visit.total_spent) DESC LIMIT 1
SELECT visitor.id, visitor.name, visitor.level_of_membership FROM visitor JOIN visit ON visitor.id = visit.visitor_id GROUP BY visitor.id, visitor.name, visitor.level_of_membership ORDER BY SUM(visit.total_spent) DESC LIMIT 1
SELECT visitor.id, visitor.name, visitor.level_of_membership FROM visitor JOIN visit ON visitor.id = visit.visitor_id GROUP BY visitor.id ORDER BY SUM(visit.total_spent) DESC LIMIT 1
SELECT visitor.id, visitor.name, visitor.level_of_membership FROM visitor JOIN visit ON visitor.id = visit.visitor_id GROUP BY visitor.id, visitor.name, visitor.level_of_membership ORDER BY SUM(visit.total_spent) DESC LIMIT 1
SELECT visitor.id, visitor.name, visitor.level_of_membership FROM visitor JOIN visit ON visitor.id = visit.visitor_id GROUP BY visitor.id, visitor.name, visitor.level_of_membership ORDER BY SUM(visit.total_spent) DESC LIMIT 1
SELECT visitor.id, visitor.name, visitor.level_of_membership FROM visitor JOIN visit ON visitor.id = visit.visitor_id GROUP BY visitor.id, visitor.name, visitor.level_of_membership ORDER BY SUM(visit.total_spent) DESC LIMIT 1","SELECT visitor.id, visitor.name, visitor.level_of_membership FROM visitor JOIN visit ON visitor.id = visit.visitor_id GROUP BY visitor.id, visitor.name, visitor.level_of_membership ORDER BY SUM(visit.total_spent) DESC LIMIT 1"
551,425,What is the total ticket expense of the visitors whose membership level is 1?,museum_visit,medium,SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1,7,"SELECT SUM(visit.total_spent) FROM visit INNER JOIN visitor ON visit.visitor_id = visitor.id WHERE visitor.level_of_membership = 1
SELECT SUM(visit.total_spent)  FROM visit  JOIN visitor ON visit.visitor_id = visitor.id  WHERE visitor.level_of_membership = 1
SELECT SUM(visit.total_spent)  FROM visit  JOIN visitor ON visit.visitor_id = visitor.id  WHERE visitor.level_of_membership = 1
SELECT SUM(visit.total_spent)  FROM visit  INNER JOIN visitor ON visit.visitor_id = visitor.id  WHERE visitor.level_of_membership = 1
SELECT SUM(visit.total_spent) FROM visit INNER JOIN visitor ON visit.visitor_id = visitor.id WHERE visitor.level_of_membership = 1
SELECT SUM(visit.total_spent) FROM visit INNER JOIN visitor ON visit.visitor_id = visitor.id WHERE visitor.level_of_membership = 1
SELECT SUM(visit.total_spent)  FROM visit  JOIN visitor ON visit.visitor_id = visitor.id  WHERE visitor.level_of_membership = 1",SELECT SUM(visit.total_spent) FROM visit INNER JOIN visitor ON visit.visitor_id = visitor.id WHERE visitor.level_of_membership = 1
552,782,What are the codes of the countries that do not speak English and whose government forms are not Republic?,world_1,hard,"SELECT Code FROM country WHERE GovernmentForm != ""Republic"" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  ""English""",7,"SELECT country.code  FROM country  LEFT JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language <> 'English'  AND country.governmentform <> 'Republic'
SELECT country.code  FROM country  LEFT JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language <> 'English'  AND country.governmentform <> 'Republic'
SELECT country.code  FROM country  LEFT JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language <> 'English'  AND country.governmentform <> 'Republic'
SELECT country.code  FROM country  LEFT JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language <> 'English'  AND country.governmentform <> 'Republic'
SELECT country.code  FROM country  LEFT JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language <> 'English'  AND country.governmentform <> 'Republic'
SELECT country.code  FROM country  LEFT JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language <> 'English'  AND country.governmentform <> 'Republic'
SELECT country.code  FROM country  LEFT JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language <> 'English'  AND country.governmentform <> 'Republic'",SELECT country.code  FROM country  LEFT JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language <> 'English'  AND country.governmentform <> 'Republic'
553,606,What are the languages used by the least number of TV Channels and how many channels use it?,tvshow,hard,"SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;",7,"SELECT language, COUNT(*) as channel_count FROM tv_channel GROUP BY language ORDER BY channel_count ASC LIMIT 1
SELECT language, COUNT(*) as channel_count FROM tv_channel GROUP BY language ORDER BY channel_count ASC LIMIT 1
SELECT language, COUNT(*) as channel_count FROM tv_channel GROUP BY language ORDER BY channel_count ASC LIMIT 1
SELECT language, COUNT(*) as channel_count FROM tv_channel GROUP BY language ORDER BY channel_count ASC LIMIT 1
SELECT language, COUNT(*) as channel_count FROM tv_channel GROUP BY language ORDER BY channel_count ASC LIMIT 1
SELECT language, COUNT(*) as channel_count FROM tv_channel GROUP BY language ORDER BY channel_count ASC LIMIT 1
SELECT language, COUNT(*) as channel_count FROM tv_channel GROUP BY language ORDER BY channel_count ASC LIMIT 1","SELECT language, COUNT(*) as channel_count FROM tv_channel GROUP BY language ORDER BY channel_count ASC LIMIT 1"
554,643,find the id of tv channels that do not play any cartoon directed by Ben Jones.,tvshow,hard,SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones',7,"SELECT tv_channel.id  FROM tv_channel  LEFT JOIN cartoon ON tv_channel.id = cartoon.channel  WHERE cartoon.directed_by != 'Ben Jones' OR cartoon.directed_by IS NULL
SELECT tv_channel.id  FROM tv_channel  LEFT JOIN cartoon ON tv_channel.id = cartoon.channel  WHERE cartoon.directed_by != 'Ben Jones' OR cartoon.channel IS NULL
SELECT tv_channel.id  FROM tv_channel  LEFT JOIN cartoon ON tv_channel.id = cartoon.channel  WHERE cartoon.directed_by != 'Ben Jones' OR cartoon.directed_by IS NULL
SELECT tv_channel.id  FROM tv_channel  LEFT JOIN cartoon ON tv_channel.id = cartoon.channel  WHERE cartoon.directed_by != 'Ben Jones' OR cartoon.directed_by IS NULL
SELECT tv_channel.id  FROM tv_channel  LEFT JOIN cartoon ON tv_channel.id = cartoon.channel  WHERE cartoon.directed_by != 'Ben Jones' OR cartoon.channel IS NULL
SELECT tv_channel.id  FROM tv_channel  LEFT JOIN cartoon ON tv_channel.id = cartoon.channel  WHERE cartoon.directed_by != 'Ben Jones' OR cartoon.directed_by IS NULL
SELECT tv_channel.id  FROM tv_channel  LEFT JOIN cartoon ON tv_channel.id = cartoon.channel  WHERE cartoon.directed_by != 'Ben Jones' OR cartoon.channel IS NULL",SELECT tv_channel.id  FROM tv_channel  LEFT JOIN cartoon ON tv_channel.id = cartoon.channel  WHERE cartoon.directed_by != 'Ben Jones' OR cartoon.directed_by IS NULL
555,801,Return the names and surface areas of the 5 largest countries.,world_1,medium,"SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",7,"SELECT country.name, country.surfacearea FROM country ORDER BY country.surfacearea DESC LIMIT 5
SELECT country.name, country.surfacearea FROM country ORDER BY country.surfacearea DESC LIMIT 5
SELECT country.name, country.surfacearea FROM country ORDER BY country.surfacearea DESC LIMIT 5
SELECT country.name, country.surfacearea FROM country ORDER BY country.surfacearea DESC LIMIT 5
SELECT country.name, country.surfacearea FROM country ORDER BY country.surfacearea DESC LIMIT 5
SELECT country.name, country.surfacearea FROM country ORDER BY country.surfacearea DESC LIMIT 5
SELECT country.name, country.surfacearea FROM country ORDER BY country.surfacearea DESC LIMIT 5","SELECT country.name, country.surfacearea FROM country ORDER BY country.surfacearea DESC LIMIT 5"
556,759,What languages are only used by a single country with a republic government?,world_1,hard,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  ""Republic"" GROUP BY T2.Language HAVING COUNT(*)  =  1",7,"SELECT language FROM countrylanguage INNER JOIN (SELECT countrycode FROM countrylanguage GROUP BY countrycode HAVING COUNT(language) = 1) AS single_country_langs ON countrylanguage.countrycode = single_country_langs.countrycode INNER JOIN country ON country.code = countrylanguage.countrycode WHERE governmentform = 'Republic'
SELECT language FROM countrylanguage INNER JOIN (SELECT countrycode FROM countrylanguage GROUP BY countrycode HAVING COUNT(language) = 1) AS single_country_languages ON countrylanguage.countrycode = single_country_languages.countrycode INNER JOIN country ON country.code = countrylanguage.countrycode WHERE governmentform = 'Republic'
SELECT language FROM countrylanguage  JOIN country ON country.code = countrylanguage.countrycode  WHERE governmentform = 'Republic'  GROUP BY language  HAVING COUNT(country.name) = 1
SELECT language  FROM countrylanguage  INNER JOIN (SELECT countrycode FROM countrylanguage GROUP BY countrycode HAVING COUNT(countrycode) = 1) AS single_country_languages  ON countrylanguage.countrycode = single_country_languages.countrycode  INNER JOIN country  ON single_country_languages.countrycode = country.code  WHERE governmentform = 'Republic'
SELECT language FROM countrylanguage INNER JOIN (SELECT countrycode FROM countrylanguage GROUP BY countrycode HAVING COUNT(language) = 1) AS single_country_langs ON countrylanguage.countrycode = single_country_langs.countrycode INNER JOIN country ON country.code = countrylanguage.countrycode WHERE governmentform = 'Republic'
SELECT language FROM countrylanguage INNER JOIN (SELECT countrycode FROM countrylanguage GROUP BY countrycode HAVING COUNT(language) = 1) AS single_country_langs ON countrylanguage.countrycode = single_country_langs.countrycode INNER JOIN country ON country.code = countrylanguage.countrycode WHERE governmentform = 'Republic'
SELECT language FROM countrylanguage INNER JOIN (SELECT countrycode FROM countrylanguage GROUP BY countrycode HAVING COUNT(language) = 1) AS single_country_langs ON countrylanguage.countrycode = single_country_langs.countrycode INNER JOIN country ON country.code = countrylanguage.countrycode WHERE governmentform = 'Republic'",SELECT language FROM countrylanguage INNER JOIN (SELECT countrycode FROM countrylanguage GROUP BY countrycode HAVING COUNT(language) = 1) AS single_country_langs ON countrylanguage.countrycode = single_country_langs.countrycode INNER JOIN country ON country.code = countrylanguage.countrycode WHERE governmentform = 'Republic'
557,189,How many airports do we have?,flight_2,easy,SELECT count(*) FROM AIRPORTS,7,"SELECT COUNT(*) FROM airports
SELECT COUNT(*) FROM airports
SELECT COUNT(*) FROM airports
SELECT COUNT(*) FROM airports
SELECT COUNT(*) FROM airports
SELECT COUNT(*) FROM airports
SELECT COUNT(*) FROM airports",SELECT COUNT(*) FROM airports
558,742,Which continent has the most diverse languages?,world_1,extra,SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1,7,"SELECT c.continent, COUNT(DISTINCT cl.language) AS language_count FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode GROUP BY c.continent ORDER BY language_count DESC LIMIT 1
SELECT c.continent, COUNT(DISTINCT cl.language) AS language_count FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode GROUP BY c.continent ORDER BY language_count DESC LIMIT 1
SELECT c.continent, COUNT(DISTINCT cl.language) AS language_count FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode GROUP BY c.continent ORDER BY language_count DESC LIMIT 1
SELECT c.continent, COUNT(DISTINCT cl.language) AS language_count FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode GROUP BY c.continent ORDER BY language_count DESC LIMIT 1
SELECT c.continent, COUNT(DISTINCT cl.language) AS language_count FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode GROUP BY c.continent ORDER BY language_count DESC LIMIT 1
SELECT c.continent, COUNT(DISTINCT cl.language) AS language_count FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode GROUP BY c.continent ORDER BY language_count DESC LIMIT 1
SELECT c.continent, COUNT(DISTINCT cl.language) AS language_count FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode GROUP BY c.continent ORDER BY language_count DESC LIMIT 1","SELECT c.continent, COUNT(DISTINCT cl.language) AS language_count FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode GROUP BY c.continent ORDER BY language_count DESC LIMIT 1"
559,839,What is the name of the conductor who has worked the greatest number of years?,orchestra,medium,SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1,7,"SELECT c.name, c.year_of_work FROM conductor c JOIN (     SELECT conductor_id, MAX(year_of_work) as max_year_of_work     FROM conductor     GROUP BY conductor_id ) cm ON c.conductor_id = cm.conductor_id AND c.year_of_work = cm.max_year_of_work
SELECT c.name, c.year_of_work FROM conductor c JOIN (     SELECT conductor_id, MAX(year_of_work) as max_year_of_work     FROM conductor     GROUP BY conductor_id ) cm ON c.conductor_id = cm.conductor_id AND c.year_of_work = cm.max_year_of_work
SELECT c.name, c.year_of_work FROM conductor c JOIN (     SELECT conductor_id, MAX(year_of_work) as max_year_of_work     FROM conductor ) cm ON c.conductor_id = cm.conductor_id AND c.year_of_work = cm.max_year_of_work
SELECT c.name FROM conductor AS c JOIN (     SELECT con.conductor_id, SUM(con.year_of_work) AS total_years     FROM (         SELECT con.conductor_id, con.year_of_work         FROM conductor AS con         JOIN orchestra AS o ON con.conductor_id = o.conductor_id         JOIN performance AS p ON o.orchestra_id = p.orchestra_id         JOIN show AS s ON p.performance_id = s.performance_id     ) AS con     GROUP BY con.conductor_id     ORDER BY total_years DESC     LIMIT 1 ) AS max_years ON c.conductor_id = max_years.conductor_id
SELECT c.name, c.year_of_work FROM conductor AS c JOIN (     SELECT c.conductor_id, SUM(c.year_of_work) AS total_years     FROM conductor AS c     GROUP BY c.conductor_id     ORDER BY total_years DESC     LIMIT 1 ) AS t ON c.conductor_id = t.conductor_id
SELECT c.name, c.year_of_work  FROM conductor AS c  JOIN (     SELECT conductor_id, MAX(year_of_work) AS max_year_of_work      FROM conductor      GROUP BY conductor_id ) AS m  ON c.conductor_id = m.conductor_id AND c.year_of_work = m.max_year_of_work
SELECT c.name FROM conductor AS c JOIN (     SELECT con.conductor_id, SUM(con.year_of_work) AS total_years     FROM (         SELECT con.conductor_id, con.year_of_work         FROM conductor AS con         JOIN orchestra AS o ON con.conductor_id = o.conductor_id         JOIN performance AS p ON o.orchestra_id = p.orchestra_id         JOIN show AS s ON p.performance_id = s.performance_id         GROUP BY con.conductor_id     ) AS con     GROUP BY con.conductor_id     ORDER BY total_years DESC     LIMIT 1 ) AS max_years ON c.conductor_id = max_years.conductor_id","SELECT c.name, c.year_of_work FROM conductor c JOIN (     SELECT conductor_id, MAX(year_of_work) as max_year_of_work     FROM conductor     GROUP BY conductor_id ) cm ON c.conductor_id = cm.conductor_id AND c.year_of_work = cm.max_year_of_work"
560,640,What is the pixel aspect ratio and country of origin for all TV channels that do not use English?,tvshow,medium,"SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'",7,"SELECT tv_channel.pixel_aspect_ratio_par, tv_channel.country FROM tv_channel LEFT JOIN tv_series ON tv_channel.id = tv_series.channel LEFT JOIN cartoon ON tv_channel.id = cartoon.channel WHERE tv_channel.language != 'English'
SELECT tv_channel.pixel_aspect_ratio_par, tv_channel.country FROM tv_channel WHERE tv_channel.language != 'English'
SELECT tv_channel.pixel_aspect_ratio_par, tv_channel.country FROM tv_channel WHERE tv_channel.language != 'English'
SELECT tv_channel.pixel_aspect_ratio_par, tv_channel.country FROM tv_channel WHERE tv_channel.language != 'English'
SELECT tv_channel.pixel_aspect_ratio_par, tv_channel.country FROM tv_channel WHERE tv_channel.language != 'English'
SELECT tv_channel.pixel_aspect_ratio_par, tv_channel.country FROM tv_channel LEFT JOIN tv_series ON tv_channel.id = tv_series.channel LEFT JOIN cartoon ON tv_channel.id = cartoon.channel WHERE tv_channel.language != 'English'
SELECT tv_channel.pixel_aspect_ratio_par, tv_channel.country FROM tv_channel WHERE tv_channel.language != 'English'","SELECT tv_channel.pixel_aspect_ratio_par, tv_channel.country FROM tv_channel WHERE tv_channel.language != 'English'"
561,32,What are the names of all stadiums that did not have a concert in 2014?,concert_singer,hard,SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014,7,"SELECT stadium.name  FROM stadium  LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id  WHERE concert.year != 2014 OR concert.year IS NULL
SELECT stadium.name  FROM stadium  LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id  WHERE concert.year != 2014 OR concert.year IS NULL
SELECT stadium.name  FROM stadium  LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id  WHERE concert.year != 2014 OR concert.year IS NULL
SELECT stadium.name  FROM stadium  LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id  WHERE concert.year != 2014 OR concert.year IS NULL
SELECT stadium.name  FROM stadium  LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id  WHERE concert.year != 2014 OR concert.year IS NULL
SELECT stadium.name  FROM stadium  LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id  WHERE concert.year != 2014 OR concert.year IS NULL
SELECT stadium.name FROM stadium LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.year != 2014 OR concert.year IS NULL",SELECT stadium.name  FROM stadium  LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id  WHERE concert.year != 2014 OR concert.year IS NULL
562,577,How many different addresses do the students currently live?,student_transcripts_tracking,easy,SELECT count(DISTINCT current_address_id) FROM Students,7,"SELECT COUNT(DISTINCT current_address_id) FROM students
SELECT COUNT(DISTINCT current_address_id) FROM students
SELECT COUNT(DISTINCT current_address_id) FROM students
SELECT COUNT(DISTINCT current_address_id) FROM students
SELECT COUNT(DISTINCT current_address_id) FROM students
SELECT COUNT(DISTINCT current_address_id) FROM students
SELECT COUNT(DISTINCT current_address_id) FROM students",SELECT COUNT(DISTINCT current_address_id) FROM students
563,227,What is the code of airport that has fewest number of flights?,flight_2,extra,SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1,7,"SELECT airportcode FROM airports LEFT JOIN flights ON airports.airportcode = flights.sourceairport OR airports.airportcode = flights.destairport GROUP BY airports.airportcode ORDER BY COUNT(flights.flightno) ASC LIMIT 1
SELECT airportcode FROM airports LEFT JOIN flights ON airports.airportcode = flights.sourceairport OR airports.airportcode = flights.destairport GROUP BY airportcode ORDER BY COUNT(flights.flightno) ASC LIMIT 1
SELECT airportcode FROM airports LEFT JOIN flights ON airports.airportcode = flights.sourceairport OR airports.airportcode = flights.destairport GROUP BY airports.airportcode ORDER BY COUNT(flights.flightno) ASC LIMIT 1
SELECT airportcode FROM airports LEFT JOIN flights ON airports.airportcode = flights.sourceairport OR airports.airportcode = flights.destairport GROUP BY airportcode ORDER BY COUNT(flights.flightno) ASC LIMIT 1
SELECT airportcode FROM airports WHERE airportcode IN (SELECT sourceairport FROM flights GROUP BY sourceairport ORDER BY COUNT(*) ASC LIMIT 1) OR airportcode IN (SELECT destairport FROM flights GROUP BY destairport ORDER BY COUNT(*) ASC LIMIT 1)
SELECT airportcode FROM airports LEFT JOIN flights ON airports.airportcode = flights.sourceairport OR airports.airportcode = flights.destairport GROUP BY airports.airportcode ORDER BY COUNT(flights.flightno) ASC LIMIT 1
SELECT airportcode FROM airports LEFT JOIN flights ON airports.airportcode = flights.sourceairport OR airports.airportcode = flights.destairport GROUP BY airports.airportcode ORDER BY COUNT(flights.flightno) ASC LIMIT 1",SELECT airportcode FROM airports LEFT JOIN flights ON airports.airportcode = flights.sourceairport OR airports.airportcode = flights.destairport GROUP BY airports.airportcode ORDER BY COUNT(flights.flightno) ASC LIMIT 1
564,431,Find the total number of matches.,wta_1,easy,SELECT count(*) FROM matches,7,"SELECT COUNT(*) FROM matches
SELECT COUNT(*) FROM matches
SELECT COUNT(*) FROM matches
SELECT COUNT(*) FROM matches
SELECT COUNT(*) FROM matches
SELECT COUNT(*) FROM matches
SELECT COUNT(*) FROM matches",SELECT COUNT(*) FROM matches
565,331,Which template type code has most number of templates?,cre_Doc_Template_Mgt,hard,SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1,7,"SELECT template_type_code, COUNT(*) as template_count FROM templates GROUP BY template_type_code ORDER BY template_count DESC LIMIT 1
SELECT template_type_code, COUNT(*) as template_count FROM templates GROUP BY template_type_code ORDER BY template_count DESC LIMIT 1
SELECT template_type_code, COUNT(*) as template_count FROM templates GROUP BY template_type_code ORDER BY template_count DESC LIMIT 1
SELECT template_type_code, COUNT(*) as template_count FROM templates GROUP BY template_type_code ORDER BY template_count DESC LIMIT 1
SELECT template_type_code, COUNT(*) as template_count FROM templates GROUP BY template_type_code ORDER BY template_count DESC LIMIT 1
SELECT template_type_code, COUNT(*) as template_count FROM templates GROUP BY template_type_code ORDER BY template_count DESC LIMIT 1
SELECT template_type_code, COUNT(*) as template_count FROM templates GROUP BY template_type_code ORDER BY template_count DESC LIMIT 1","SELECT template_type_code, COUNT(*) as template_count FROM templates GROUP BY template_type_code ORDER BY template_count DESC LIMIT 1"
566,40,What is the name and country of origin of every singer who has a song with the word 'Hey' in its title?,concert_singer,medium,"SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'",7,"SELECT singer.name, singer.country FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE singer.song_name LIKE '%Hey%'
SELECT singer.name, singer.country FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE singer.song_name LIKE '%Hey%'
SELECT singer.name, singer.country FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE singer.song_name LIKE '%Hey%'
SELECT singer.name, singer.country FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE singer.song_name LIKE '%Hey%'
SELECT singer.name, singer.country FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE singer.song_name LIKE '%Hey%'
SELECT singer.name, singer.country FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE singer.song_name LIKE '%Hey%'
SELECT singer.name, singer.country FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE singer.song_name LIKE '%Hey%'","SELECT singer.name, singer.country FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE singer.song_name LIKE '%Hey%'"
567,1016,Show different citizenships and the maximum net worth of singers of each citizenship.,singer,medium,"SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",7,"SELECT s.citizenship, MAX(s.net_worth_millions) FROM singer AS s WHERE s.singer_id IN (SELECT si.singer_id FROM singer AS si JOIN song AS so ON si.singer_id = so.singer_id WHERE si.name = 'singer') GROUP BY s.citizenship
SELECT s.citizenship, MAX(s.net_worth_millions) FROM singer s WHERE s.singer_id IN (SELECT si.singer_id FROM singer si JOIN song so ON si.singer_id = so.singer_id WHERE si.name = 'singer') GROUP BY s.citizenship
SELECT s.citizenship, MAX(s.net_worth_millions) FROM singer AS s WHERE s.singer_id IN (SELECT si.singer_id FROM singer AS si JOIN song AS so ON si.singer_id = so.singer_id WHERE si.name = 'singer') GROUP BY s.citizenship
SELECT s.citizenship, MAX(s.net_worth_millions) FROM singer AS s WHERE s.singer_id IN (SELECT si.singer_id FROM singer AS si JOIN song AS so ON si.singer_id = so.singer_id WHERE si.name = 'singer') GROUP BY s.citizenship
SELECT s.citizenship, MAX(s.net_worth_millions) FROM singer s WHERE s.singer_id IN (SELECT si.singer_id FROM singer si JOIN song so ON si.singer_id = so.singer_id WHERE si.name = 'singer') GROUP BY s.citizenship
SELECT s.citizenship, MAX(s.net_worth_millions) FROM singer AS s WHERE s.singer_id IN (SELECT si.singer_id FROM singer AS si JOIN song AS so ON si.singer_id = so.singer_id WHERE si.name = 'singer') GROUP BY s.citizenship
SELECT s.citizenship, MAX(s.net_worth_millions) FROM singer AS s WHERE s.singer_id IN (SELECT si.singer_id FROM singer AS si JOIN song AS so ON si.singer_id = so.singer_id WHERE si.name = 'singer') GROUP BY s.citizenship","SELECT s.citizenship, MAX(s.net_worth_millions) FROM singer AS s WHERE s.singer_id IN (SELECT si.singer_id FROM singer AS si JOIN song AS so ON si.singer_id = so.singer_id WHERE si.name = 'singer') GROUP BY s.citizenship"
568,501,What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'?,battle_death,medium,SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I',7,"SELECT DISTINCT battle.name  FROM battle  WHERE battle.bulgarian_commander = 'Kaloyan'  OR battle.latin_commander = 'Baldwin I'
SELECT DISTINCT battle.name  FROM battle  WHERE battle.bulgarian_commander = 'Kaloyan'  OR battle.latin_commander = 'Baldwin I'
SELECT DISTINCT battle.name  FROM battle  WHERE battle.bulgarian_commander = 'Kaloyan'  OR battle.latin_commander = 'Baldwin I'
SELECT DISTINCT battle.name  FROM battle  WHERE battle.bulgarian_commander = 'Kaloyan'  OR battle.latin_commander = 'Baldwin I'
SELECT DISTINCT battle.name  FROM battle  WHERE battle.bulgarian_commander = 'Kaloyan'  OR battle.latin_commander = 'Baldwin I'
SELECT DISTINCT battle.name  FROM battle  WHERE battle.bulgarian_commander = 'Kaloyan'  OR battle.latin_commander = 'Baldwin I'
SELECT DISTINCT battle.name  FROM battle  WHERE battle.bulgarian_commander = 'Kaloyan'  OR battle.latin_commander = 'Baldwin I'",SELECT DISTINCT battle.name  FROM battle  WHERE battle.bulgarian_commander = 'Kaloyan'  OR battle.latin_commander = 'Baldwin I'
569,549,Find the last name of the students who currently live in the state of North Carolina but have not registered in any degree program.,student_transcripts_tracking,extra,SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id,7,"SELECT students.last_name FROM students LEFT JOIN student_enrolment ON
SELECT students.last_name FROM students LEFT JOIN student_enrolment ON
SELECT students.last_name FROM students LEFT JOIN student_enrolment ON
SELECT students.last_name FROM students LEFT JOIN student_enrolment ON
SELECT students.last_name  FROM students  LEFT JOIN student_en
SELECT students.last_name FROM students LEFT JOIN student_enrolment ON
SELECT students.last_name FROM students LEFT JOIN student_enrolment ON",SELECT students.last_name FROM students LEFT JOIN student_enrolment ON
570,1004,What are the birth year and citizenship of singers?,singer,medium,"SELECT Birth_Year ,  Citizenship FROM singer",7,"SELECT birth_year, citizenship FROM singer WHERE name = 'singer'
SELECT birth_year, citizenship FROM singer WHERE name = 'singer'
SELECT birth_year, citizenship FROM singer WHERE name = 'singer'
SELECT birth_year, citizenship FROM singer WHERE name = 'singer'
SELECT birth_year, citizenship FROM singer WHERE name = 'singer'
SELECT birth_year, citizenship FROM singer WHERE name = 'singer'
SELECT birth_year, citizenship FROM singer WHERE name = 'singer'","SELECT birth_year, citizenship FROM singer WHERE name = 'singer'"
571,752,What are the regions that use English or Dutch?,world_1,hard,"SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" OR T2.Language  =  ""Dutch""",7,"SELECT DISTINCT c.region FROM country c JOIN countrylanguage cl ON c.code = cl.countrycode WHERE cl.language IN ('English', 'Dutch')
SELECT DISTINCT c.region FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode WHERE cl.language IN ('English', 'Dutch')
SELECT DISTINCT c.region FROM country c JOIN countrylanguage cl ON c.code = cl.countrycode WHERE cl.language IN ('English', 'Dutch')
SELECT DISTINCT c.region FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode WHERE cl.language IN ('English', 'Dutch')
SELECT DISTINCT c.region FROM country c JOIN countrylanguage cl ON c.code = cl.countrycode WHERE cl.language IN ('English', 'Dutch')
SELECT DISTINCT c.region  FROM country AS c  JOIN countrylanguage AS cl ON c.code = cl.countrycode  WHERE cl.language IN ('English', 'Dutch')
SELECT DISTINCT c.region FROM country AS c JOIN countrylanguage AS cl ON c.code = cl.countrycode WHERE cl.language IN ('English', 'Dutch')","SELECT DISTINCT c.region FROM country c JOIN countrylanguage cl ON c.code = cl.countrycode WHERE cl.language IN ('English', 'Dutch')"
572,297,How many documents do we have?,cre_Doc_Template_Mgt,easy,SELECT count(*) FROM Documents,7,"SELECT COUNT(*) FROM documents
SELECT COUNT(*) FROM documents
SELECT COUNT(*) FROM documents
SELECT COUNT(*) FROM documents
SELECT COUNT(*) FROM documents
SELECT COUNT(*) FROM documents
SELECT COUNT(*) FROM documents",SELECT COUNT(*) FROM documents
573,100,What is the name of the different car makers who produced a car in 1970?,car_1,extra,SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';,7,"SELECT DISTINCT c.maker FROM car_makers AS c JOIN model_list AS m ON c.id = m.maker JOIN car_names AS n ON m.modelid = n.model JOIN cars_data AS d ON n.makeid = d.id WHERE d.year = 1970
SELECT DISTINCT c.maker FROM car_makers AS c JOIN model_list AS m ON c.id = m.maker JOIN car_names AS n ON m.modelid = n.model JOIN cars_data AS d ON n.makeid = d.id WHERE d.year = 1970
SELECT DISTINCT c.maker FROM car_makers AS c JOIN model_list AS m ON c.id = m.maker JOIN car_names AS n ON m.modelid = n.model JOIN cars_data AS d ON n.makeid = d.id WHERE d.year = 1970
SELECT DISTINCT c.maker FROM car_makers AS c JOIN model_list AS m ON c.id = m.maker JOIN car_names AS n ON m.modelid = n.model JOIN cars_data AS d ON n.makeid = d.id WHERE d.year = 1970
SELECT DISTINCT car_makers.maker  FROM car_makers  INNER JOIN model_list ON car_makers.id = model_list.maker  INNER JOIN car_names ON model_list.modelid = car_names.model  INNER JOIN cars_data ON car_names.makeid = cars_data.id  WHERE cars_data.year = 1970
SELECT DISTINCT c.maker FROM car_makers AS c JOIN model_list AS m ON c.id = m.maker JOIN car_names AS n ON m.modelid = n.model JOIN cars_data AS d ON n.makeid = d.id WHERE d.year = 1970
SELECT DISTINCT c.maker FROM car_makers AS c JOIN model_list AS m ON c.id = m.maker JOIN car_names AS n ON m.modelid = n.model JOIN cars_data AS d ON n.makeid = d.id WHERE d.year = 1970",SELECT DISTINCT c.maker FROM car_makers AS c JOIN model_list AS m ON c.id = m.maker JOIN car_names AS n ON m.modelid = n.model JOIN cars_data AS d ON n.makeid = d.id WHERE d.year = 1970
574,681,"Show names of people whose nationality is not ""Russia"".",poker_player,easy,"SELECT Name FROM people WHERE Nationality != ""Russia""",7,"SELECT people.name  FROM people  LEFT JOIN poker_player  ON people.people_id = poker_player.people_id  WHERE people.nationality != 'Russia'
SELECT people.name  FROM people  LEFT JOIN poker_player  ON people.people_id = poker_player.people_id  WHERE people.nationality != 'Russia'
SELECT people.name FROM people LEFT JOIN poker_player ON people.people_id = poker_player.people_id WHERE people.nationality != ""Russia""
SELECT people.name  FROM people  LEFT JOIN poker_player  ON people.people_id = poker_player.people_id  WHERE people.nationality != 'Russia'
SELECT people.name  FROM people  LEFT JOIN poker_player  ON people.people_id = poker_player.people_id  WHERE people.nationality != 'Russia'
SELECT people.name  FROM people  LEFT JOIN poker_player  ON people.people_id = poker_player.people_id  WHERE people.nationality != 'Russia'
SELECT people.name FROM people LEFT JOIN poker_player ON people.people_id = poker_player.people_id WHERE people.nationality != ""Russia""",SELECT people.name  FROM people  LEFT JOIN poker_player  ON people.people_id = poker_player.people_id  WHERE people.nationality != 'Russia'
575,749,Give the names of countries with English and French as official languages.,world_1,extra,"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND T2.IsOfficial  =  ""T"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""French"" AND T2.IsOfficial  =  ""T""",7,"SELECT country.name  FROM country  JOIN countrylanguage  ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language IN ('English', 'French') AND countrylanguage.isofficial = 'T' GROUP BY country.name  HAVING COUNT(DISTINCT countrylanguage.language) = 2
SELECT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language IN ('English', 'French') GROUP BY country.name HAVING COUNT(DISTINCT countrylanguage.language) = 2
SELECT country.name  FROM country  JOIN countrylanguage  ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language IN ('English', 'French')  GROUP BY country.name  HAVING COUNT(DISTINCT countrylanguage.language) = 2
SELECT country.name  FROM country  JOIN countrylanguage  ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language IN ('English', 'French')  GROUP BY country.name  HAVING COUNT(DISTINCT countrylanguage.language) = 2
SELECT country.name  FROM country  JOIN countrylanguage  ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language IN ('English', 'French') AND countrylanguage.isofficial = 'T' GROUP BY country.name  HAVING COUNT(DISTINCT countrylanguage.language) = 2
SELECT country.name  FROM country  JOIN countrylanguage  ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language IN ('English', 'French') AND countrylanguage.isofficial = 'T' GROUP BY country.name  HAVING COUNT(DISTINCT countrylanguage.language) = 2
SELECT country.name  FROM country  JOIN countrylanguage  ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language IN ('English', 'French') AND countrylanguage.isofficial = 'T'  GROUP BY country.name  HAVING COUNT(DISTINCT countrylanguage.language) = 2","SELECT country.name  FROM country  JOIN countrylanguage  ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language IN ('English', 'French') AND countrylanguage.isofficial = 'T' GROUP BY country.name  HAVING COUNT(DISTINCT countrylanguage.language) = 2"
576,566,"What is the earliest date of a transcript release, and what details can you tell me?",student_transcripts_tracking,medium,"SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",7,"SELECT MIN(transcript_date) as EarliestTranscriptRelease, tc.* FROM transcripts t JOIN
SELECT MIN(transcript_date) as EarliestTranscriptRelease, tc.* FROM transcripts t JOIN
SELECT MIN(transcript_date) AS earliest_transcript_release, tc.* FROM transcripts t JO
SELECT MIN(transcript_date) as EarliestTranscriptRelease, tc.* FROM transcripts t JOIN
SELECT MIN(transcript_date) as EarliestTranscriptRelease, tc.* FROM transcripts t JOIN
SELECT MIN(transcript_date) AS earliest_transcript_release, tc.* FROM transcripts t JO
SELECT MIN(transcript_date) as EarliestTranscriptRelease, tc.* FROM transcripts t JOIN","SELECT MIN(transcript_date) as EarliestTranscriptRelease, tc.* FROM transcripts t JOIN"
577,678,Return the nationalities for which there are two or more people.,poker_player,easy,SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2,7,"SELECT nationality FROM people  GROUP BY nationality  HAVING COUNT(people_id) >= 2
SELECT nationality FROM people  GROUP BY nationality  HAVING COUNT(people_id) >= 2
SELECT nationality FROM people  GROUP BY nationality  HAVING COUNT(people_id) >= 2
SELECT nationality FROM people  GROUP BY nationality  HAVING COUNT(people_id) >= 2
SELECT nationality FROM people  GROUP BY nationality  HAVING COUNT(people_id) >= 2
SELECT nationality FROM people  GROUP BY nationality  HAVING COUNT(people_id) >= 2
SELECT nationality FROM people  GROUP BY nationality  HAVING COUNT(people_id) >= 2",SELECT nationality FROM people  GROUP BY nationality  HAVING COUNT(people_id) >= 2
578,713,What language is predominantly spoken in Aruba?,world_1,extra,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Aruba"" ORDER BY Percentage DESC LIMIT 1",7,"SELECT language FROM countrylanguage WHERE countrycode = ""ABW""
SELECT language FROM countrylanguage WHERE countrycode = (SELECT code FROM country WHERE capital = 'Aruba')
SELECT language FROM countrylanguage WHERE countrycode = (SELECT code FROM country WHERE capital = 'Aruba')
SELECT language FROM countrylanguage WHERE countrycode = (SELECT code FROM country WHERE name = ""Aruba"")
SELECT language FROM countrylanguage WHERE countrycode = (SELECT code FROM country WHERE name = ""Aruba"")
SELECT language FROM countrylanguage WHERE countrycode = ""ABW""
SELECT language FROM countrylanguage WHERE countrycode = ""ABW""","SELECT language FROM countrylanguage WHERE countrycode = ""ABW"""
579,814,Which language is spoken by the largest number of countries?,world_1,hard,SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1,7,"SELECT language, COUNT(countrycode) AS num_countries FROM countrylanguage GROUP BY language ORDER BY num_countries DESC LIMIT 1
SELECT language FROM countrylanguage GROUP BY language ORDER BY COUNT(*) DESC LIMIT 1
SELECT language, COUNT(countrycode) AS num_countries FROM countrylanguage GROUP BY language ORDER BY num_countries DESC LIMIT 1
SELECT language, COUNT(countrycode) AS num_countries FROM countrylanguage GROUP BY language ORDER BY num_countries DESC LIMIT 1
SELECT language FROM countrylanguage GROUP BY language ORDER BY COUNT(*) DESC LIMIT 1
SELECT language FROM countrylanguage GROUP BY language ORDER BY COUNT(*) DESC LIMIT 1
SELECT language, COUNT(*) as num_countries FROM countrylanguage GROUP BY language ORDER BY num_countries DESC LIMIT 1","SELECT language, COUNT(countrycode) AS num_countries FROM countrylanguage GROUP BY language ORDER BY num_countries DESC LIMIT 1"
580,825,"What are the names of conductors, ordered by age?",orchestra,easy,SELECT Name FROM conductor ORDER BY Age ASC,7,"SELECT name FROM conductor ORDER BY age
SELECT name FROM conductor ORDER BY age
SELECT name FROM conductor ORDER BY age
SELECT name FROM conductor ORDER BY age
SELECT name FROM conductor ORDER BY age
SELECT name FROM conductor ORDER BY age
SELECT name FROM conductor ORDER BY age",SELECT name FROM conductor ORDER BY age
581,1028,Show the citizenship shared by singers with birth year before 1945 and after 1955.,singer,hard,SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955,7,"SELECT singer.citizenship  FROM singer  WHERE birth_year < 1945 AND birth_year > 1955
SELECT singer.citizenship FROM singer WHERE birth_year < 1945 AND birth_year > 1955
SELECT singer.citizenship FROM singer WHERE birth_year < 1945 AND birth_year > 1955
SELECT singer.citizenship FROM singer WHERE birth_year < 1945 AND birth_year > 1955
SELECT singer.citizenship FROM singer WHERE birth_year < 1945 AND birth_year > 1955
SELECT singer.citizenship  FROM singer  WHERE birth_year < 1945 AND birth_year > 1955
SELECT singer.citizenship FROM singer WHERE birth_year < 1945 AND birth_year > 1955",SELECT singer.citizenship FROM singer WHERE birth_year < 1945 AND birth_year > 1955
582,408,What are the names of the teachers who teach at least two courses?,course_teach,medium,SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2,7,"SELECT t.name  FROM teacher t  JOIN course_arrange ca ON t.teacher_id = ca.teacher_id  GROUP BY ca.teacher_id  HAVING COUNT(ca.course_id) >= 2
SELECT t.name  FROM teacher t  JOIN course_arrange ca ON t.teacher_id = ca.teacher_id  GROUP BY ca.teacher_id  HAVING COUNT(ca.course_id) >= 2
SELECT t.name  FROM teacher t  JOIN course_arrange ca ON t.teacher_id = ca.teacher_id  GROUP BY ca.teacher_id  HAVING COUNT(ca.course_id) >= 2
SELECT t.name  FROM teacher t  JOIN course_arrange ca ON t.teacher_id = ca.teacher_id  GROUP BY ca.teacher_id  HAVING COUNT(ca.course_id) >= 2
SELECT t.name  FROM teacher t  JOIN course_arrange ca ON t.teacher_id = ca.teacher_id  GROUP BY ca.teacher_id  HAVING COUNT(ca.course_id) >= 2
SELECT t.name  FROM teacher t  JOIN course_arrange ca ON t.teacher_id = ca.teacher_id  GROUP BY ca.teacher_id  HAVING COUNT(ca.course_id) >= 2
SELECT t.name  FROM teacher t  JOIN course_arrange ca ON t.teacher_id = ca.teacher_id  GROUP BY ca.teacher_id  HAVING COUNT(ca.course_id) >= 2",SELECT t.name  FROM teacher t  JOIN course_arrange ca ON t.teacher_id = ca.teacher_id  GROUP BY ca.teacher_id  HAVING COUNT(ca.course_id) >= 2
583,466,What is the name of the winner with the most rank points who participated in the Australian Open tournament?,wta_1,hard,SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1,7,"SELECT p.first_name, p.last_name FROM players AS p JOIN (     SELECT m.winner_id, MAX(m.winner_rank_points) as max_rank_points     FROM matches AS m     WHERE m.tourney_name = 'Australian Open'     GROUP BY m.winner_id     ORDER BY max_rank_points DESC     LIMIT 1 ) AS subquery ON p.player_id = subquery.winner_id
SELECT p.first_name, p.last_name FROM players AS p JOIN (     SELECT winner_id     FROM matches     WHERE tourney_name = 'Australian Open'     GROUP BY winner_id     ORDER BY SUM(winner_rank_points) DESC     LIMIT 1 ) AS m ON p.player_id = m.winner_id
SELECT p.first_name, p.last_name FROM players AS p JOIN (     SELECT winner_id     FROM matches     WHERE tourney_name = 'Australian Open'     GROUP BY winner_id     ORDER BY SUM(winner_rank_points) DESC     LIMIT 1 ) AS m ON p.player_id = m.winner_id
SELECT p.first_name, p.last_name FROM players AS p JOIN (     SELECT m.winner_id, MAX(m.winner_rank_points) AS max_rank_points     FROM matches AS m     WHERE m.tourney_name = 'Australian Open'     GROUP BY m.winner_id     ORDER BY max_rank_points DESC     LIMIT 1 ) AS subquery ON p.player_id = subquery.winner_id
SELECT p.first_name, p.last_name FROM players AS p JOIN (     SELECT winner_id     FROM matches     WHERE tourney_name = 'Australian Open'     GROUP BY winner_id     ORDER BY SUM(winner_rank_points) DESC     LIMIT 1 ) AS m ON p.player_id = m.winner_id
SELECT p.first_name, p.last_name FROM players AS p JOIN (     SELECT m.winner_id, MAX(m.winner_rank_points) as max_rank_points     FROM matches AS m     WHERE m.tourney_name = 'Australian Open'     GROUP BY m.winner_id     ORDER BY max_rank_points DESC     LIMIT 1 ) AS subquery ON p.player_id = subquery.winner_id
SELECT p.first_name, p.last_name FROM players AS p JOIN (     SELECT winner_id     FROM matches     WHERE tourney_name = 'Australian Open'     GROUP BY winner_id     ORDER BY SUM(winner_rank_points) DESC     LIMIT 1 ) AS m ON p.player_id = m.winner_id","SELECT p.first_name, p.last_name FROM players AS p JOIN (     SELECT winner_id     FROM matches     WHERE tourney_name = 'Australian Open'     GROUP BY winner_id     ORDER BY SUM(winner_rank_points) DESC     LIMIT 1 ) AS m ON p.player_id = m.winner_id"
584,929,"Give me the id, role and email of the professionals who did not perform any treatment on dogs.",dog_kennels,extra,"SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id",7,"SELECT professionals.professional_id, professionals.role_code, professionals.email_address FROM professionals LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id LEFT JOIN dogs ON treatments.dog_id = dogs.dog_id WHERE dogs.breed_code NOT IN (SELECT breed_code FROM breeds WHERE breed_name = 'dog') AND professionals.role_code = 'professional' GROUP BY professionals.professional_id
SELECT professionals.professional_id, professionals.role_code, professionals.email_address FROM professionals LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id LEFT JOIN dogs ON treatments.dog_id = dogs.dog_id WHERE dogs.breed_code NOT IN ('breed_code') AND professionals.role_code = 'professional' AND treatments.treatment_id IS NULL
SELECT professionals.professional_id, professionals.role_code, professionals.email_address FROM professionals LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id LEFT JOIN dogs ON treatments.dog_id = dogs.dog_id WHERE dogs.breed_code NOT IN (SELECT breed_code FROM breeds WHERE breed_name = 'dog') AND professionals.role_code = 'professional' GROUP BY professionals.professional_id
SELECT professionals.professional_id, professionals.role_code, professionals.email_address FROM professionals LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id LEFT JOIN dogs ON treatments.dog_id = dogs.dog_id WHERE dogs.breed_code NOT IN (SELECT breed_code FROM breeds WHERE breed_name = 'dog') AND professionals.role_code = 'professional' GROUP BY professionals.professional_id
SELECT professionals.professional_id, professionals.role_code, professionals.email_address FROM professionals LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id LEFT JOIN dogs ON treatments.dog_id = dogs.dog_id WHERE dogs.breed_code NOT IN (SELECT breed_code FROM breeds WHERE breed_name = 'dog') AND professionals.role_code = 'professional' GROUP BY professionals.professional_id
SELECT professionals.professional_id, professionals.role_code, professionals.email_address FROM professionals LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id LEFT JOIN dogs ON treatments.dog_id = dogs.dog_id WHERE dogs.breed_code NOT IN (SELECT breed_code FROM breeds WHERE breed_name = 'dog') AND professionals.role_code = 'professional' GROUP BY professionals.professional_id
SELECT professionals.professional_id, professionals.role_code, professionals.email_address FROM professionals LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id LEFT JOIN dogs ON treatments.dog_id = dogs.dog_id WHERE dogs.breed_code NOT IN ('breed_code') AND professionals.role_code = 'professional' AND treatments.treatment_id IS NULL","SELECT professionals.professional_id, professionals.role_code, professionals.email_address FROM professionals LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id LEFT JOIN dogs ON treatments.dog_id = dogs.dog_id WHERE dogs.breed_code NOT IN (SELECT breed_code FROM breeds WHERE breed_name = 'dog') AND professionals.role_code = 'professional' GROUP BY professionals.professional_id"
585,534,"What are the first, middle, and last names, along with the ids, of all students who enrolled in 2 degree programs in one semester?",student_transcripts_tracking,medium,"SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2",7,"SELECT students.first_name, students.middle_name, students
SELECT students.first_name, students.middle_name, students
SELECT students.first_name, students.middle_name, students
SELECT students.first_name, students.middle_name, students
SELECT students.first_name, students.middle_name, students
SELECT s.first_name, s.middle_name, s
SELECT students.first_name, students.middle_name, students","SELECT students.first_name, students.middle_name, students"
586,161,How many countries has more than 2 car makers ?,car_1,medium,select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2,7,"SELECT COUNT(*) FROM (     SELECT c.countryname, COUNT(cm.id) as car_makers     FROM countries as c     JOIN car_makers as cm ON c.countryid = cm.country     GROUP BY c.countryname     HAVING car_makers > 2 )
SELECT COUNT(*) FROM (     SELECT c.countryname, COUNT(cm.id) as car_makers     FROM countries as c     JOIN car_makers as cm ON c.countryid = cm.country     GROUP BY c.countryname     HAVING car_makers > 2 )
SELECT COUNT(*) FROM (     SELECT c.countryname, COUNT(cm.id) as car_makers     FROM countries as c     JOIN car_makers as cm ON c.countryid = cm.country     GROUP BY c.countryname     HAVING car_makers > 2 )
SELECT COUNT(*) FROM (     SELECT c.countryname, COUNT(cm.id) as car_makers     FROM countries as c     JOIN car_makers as cm ON c.countryid = cm.country     GROUP BY c.countryname     HAVING car_makers > 2 )
SELECT COUNT(*) FROM (     SELECT c.countryname, COUNT(DISTINCT cm.maker) as maker_count     FROM countries as c     JOIN car_makers as cm ON c.countryid = cm.country     GROUP BY c.countryname     HAVING maker_count > 2 ) as t
SELECT COUNT(*) FROM (     SELECT c.countryname, COUNT(cm.id) as car_makers     FROM countries as c     JOIN car_makers as cm ON c.countryid = cm.country     GROUP BY c.countryname     HAVING car_makers > 2 )
SELECT COUNT(*) FROM (     SELECT c.countryname, COUNT(cm.id) as car_makers     FROM countries as c     JOIN car_makers as cm ON c.countryid = cm.country     GROUP BY c.countryname     HAVING car_makers > 2 )","SELECT COUNT(*) FROM (     SELECT c.countryname, COUNT(cm.id) as car_makers     FROM countries as c     JOIN car_makers as cm ON c.countryid = cm.country     GROUP BY c.countryname     HAVING car_makers > 2 )"
587,584,What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582 ?,student_transcripts_tracking,hard,select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582',7,"SELECT students.first_name FROM students LEFT
SELECT students.first_name FROM students WHERE
SELECT students.first_name FROM students WHERE
SELECT students.first_name FROM students WHERE
SELECT first_name  FROM students  
SELECT first_name  FROM students  
SELECT first_name FROM students  WHERE permanent_",SELECT students.first_name FROM students WHERE
588,906,What is the name of the high schooler who has the greatest number of likes?,network_1,extra,SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,7,"SELECT highschooler.name FROM highschooler JOIN likes ON highschooler.id = likes.student_id GROUP BY highschooler.id ORDER BY COUNT(likes.liked_id) DESC LIMIT 1
SELECT highschooler.name FROM highschooler JOIN likes ON highschooler.id = likes.student_id GROUP BY highschooler.id ORDER BY COUNT(likes.liked_id) DESC LIMIT 1
SELECT highschooler.name FROM highschooler JOIN likes ON highschooler.id = likes.student_id GROUP BY highschooler.name ORDER BY COUNT(likes.liked_id) DESC LIMIT 1
SELECT highschooler.name FROM highschooler  INNER JOIN likes ON highschooler.id = likes.student_id  GROUP BY highschooler.name  ORDER BY COUNT(likes.liked_id) DESC  LIMIT 1
SELECT highschooler.name FROM highschooler  INNER JOIN likes ON highschooler.id = likes.student_id  GROUP BY highschooler.name  ORDER BY COUNT(likes.liked_id) DESC  LIMIT 1
SELECT highschooler.name FROM highschooler JOIN (SELECT likes.student_id, COUNT(likes.liked_id) as like_count FROM likes GROUP BY likes.student_id ORDER BY like_count DESC LIMIT 1) as most_liked ON highschooler.id = most_liked.student_id
SELECT highschooler.name FROM highschooler  JOIN likes ON highschooler.id = likes.student_id  GROUP BY highschooler.name  ORDER BY COUNT(likes.liked_id) DESC  LIMIT 1",SELECT highschooler.name FROM highschooler JOIN likes ON highschooler.id = likes.student_id GROUP BY highschooler.id ORDER BY COUNT(likes.liked_id) DESC LIMIT 1
589,588,What are the names of all cartoons directed by Ben Jones?,tvshow,easy,"SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"";",7,"SELECT c.title  FROM cartoon AS c  JOIN tv_series AS t  ON c.id = t.id  WHERE c.directed_by = 'Ben Jones'
SELECT c.title  FROM cartoon AS c  JOIN tv_series AS t  ON c.id = t.id  WHERE c.directed_by = 'Ben Jones'
SELECT c.title  FROM cartoon AS c  JOIN tv_series AS t  ON c.id = t.id  WHERE c.directed_by = 'Ben Jones'
SELECT c.title  FROM cartoon AS c  JOIN tv_series AS t  ON c.id = t.id  WHERE c.directed_by = 'Ben Jones'
SELECT c.title  FROM cartoon AS c  JOIN tv_series AS t  ON c.id = t.id  WHERE c.directed_by = 'Ben Jones'
SELECT c.title  FROM cartoon AS c  JOIN tv_series AS t  ON c.id = t.id  WHERE c.directed_by = 'Ben Jones'
SELECT c.title  FROM cartoon AS c  JOIN tv_series AS t  ON c.id = t.id  WHERE c.directed_by = 'Ben Jones'",SELECT c.title  FROM cartoon AS c  JOIN tv_series AS t  ON c.id = t.id  WHERE c.directed_by = 'Ben Jones'
590,755,Which countries have either English or Dutch as an official language?,world_1,extra,"SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND IsOfficial  =  ""T"" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""Dutch"" AND IsOfficial  =  ""T""",7,"SELECT DISTINCT country.name  FROM country  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language IN ('English', 'Dutch') AND countrylanguage.isofficial = 'T'
SELECT DISTINCT country.name  FROM country  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language IN ('English', 'Dutch') AND countrylanguage.isofficial = 'T'
SELECT DISTINCT country.name  FROM country  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language IN ('English', 'Dutch') AND countrylanguage.isofficial = 'T'
SELECT DISTINCT country.name  FROM country  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language IN ('English', 'Dutch') AND countrylanguage.isofficial = 'T'
SELECT DISTINCT country.name  FROM country  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language IN ('English', 'Dutch') AND countrylanguage.isofficial = 'T'
SELECT DISTINCT country.name  FROM country  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language IN ('English', 'Dutch') AND countrylanguage.isofficial = 'T'
SELECT DISTINCT country.name  FROM country  JOIN countrylanguage  ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language IN ('English', 'Dutch') AND countrylanguage.isofficial = 'T'","SELECT DISTINCT country.name  FROM country  JOIN countrylanguage ON country.code = countrylanguage.countrycode  WHERE countrylanguage.language IN ('English', 'Dutch') AND countrylanguage.isofficial = 'T'"
591,386,What is the age and hometown of every teacher?,course_teach,medium,"SELECT Age ,  Hometown FROM teacher",7,"SELECT teacher.age, teacher.hometown FROM teacher INNER JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id
SELECT teacher.age, teacher.hometown, course.course FROM teacher INNER JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id INNER JOIN course ON course_arrange.course_id = course.course_id
SELECT teacher.age, teacher.hometown, course.course FROM teacher INNER JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id INNER JOIN course ON course_arrange.course_id = course.course_id
SELECT teacher.age, teacher.hometown, course.course FROM teacher INNER JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id INNER JOIN course ON course_arrange.course_id = course.course_id
SELECT teacher.age, teacher.hometown, course.course FROM teacher INNER JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id INNER JOIN course ON course_arrange.course_id = course.course_id
SELECT teacher.age, teacher.hometown, course.course FROM teacher INNER JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id INNER JOIN course ON course_arrange.course_id = course.course_id
SELECT teacher.age, teacher.hometown, course.course FROM teacher INNER JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id INNER JOIN course ON course_arrange.course_id = course.course_id","SELECT teacher.age, teacher.hometown, course.course FROM teacher INNER JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id INNER JOIN course ON course_arrange.course_id = course.course_id"
592,328,Return the version numbers and template type codes of templates with a version number greater than 5.,cre_Doc_Template_Mgt,medium,"SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5",7,"SELECT templates.version_number, templates.template_type_code FROM templates JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE templates.version_number > 5
SELECT templates.version_number, templates.template_type_code FROM templates JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE templates.version_number > 5
SELECT templates.version_number, templates.template_type_code FROM templates JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE templates.version_number > 5
SELECT templates.version_number, templates.template_type_code FROM templates JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE templates.version_number > 5
SELECT templates.version_number, templates.template_type_code FROM templates JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE templates.version_number > 5
SELECT templates.version_number, templates.template_type_code FROM templates JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE templates.version_number > 5
SELECT templates.version_number, templates.template_type_code FROM templates JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE templates.version_number > 5","SELECT templates.version_number, templates.template_type_code FROM templates JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE templates.version_number > 5"
593,62,"What major is every student who does not own a cat as a pet, and also how old are they?",pets_1,extra,"SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",7,"SELECT student.major, student.age FROM student LEFT JOIN has_pet ON student.stuid = has_pet.stuid LEFT JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype != 'cat' OR pets.pettype IS NULL
SELECT student.major, student.age FROM student LEFT JOIN has_pet ON student.stuid = has_pet.stuid LEFT JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype != 'cat' OR pets.pettype IS NULL
SELECT student.major, student.age FROM student LEFT JOIN has_pet ON student.stuid = has_pet.stuid LEFT JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype != 'cat' OR pets.pettype IS NULL
SELECT student.major, student.age FROM student LEFT JOIN has_pet ON student.stuid = has_pet.stuid LEFT JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype != 'cat' OR pets.pettype IS NULL
SELECT student.major, student.age FROM student LEFT JOIN has_pet ON student.stuid = has_pet.stuid LEFT JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype != 'cat' OR pets.pettype IS NULL
SELECT student.major, student.age FROM student LEFT JOIN has_pet ON student.stuid = has_pet.stuid LEFT JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype != 'cat' OR pets.pettype IS NULL
SELECT student.major, student.age FROM student LEFT JOIN has_pet ON student.stuid = has_pet.stuid LEFT JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype != 'cat' OR pets.pettype IS NULL","SELECT student.major, student.age FROM student LEFT JOIN has_pet ON student.stuid = has_pet.stuid LEFT JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype != 'cat' OR pets.pettype IS NULL"
594,57,Find the first name of students who have cat or dog pet.,pets_1,extra,SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog',7,"SELECT student.fname  FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' OR pets.pettype = 'dog'
SELECT student.fname  FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' OR pets.pettype = 'dog'
SELECT student.fname  FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' OR pets.pettype = 'dog'
SELECT student.fname  FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' OR pets.pettype = 'dog'
SELECT student.fname  FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' OR pets.pettype = 'dog'
SELECT student.fname  FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' OR pets.pettype = 'dog'
SELECT student.fname  FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' OR pets.pettype = 'dog'",SELECT student.fname  FROM student  INNER JOIN has_pet ON student.stuid = has_pet.stuid  INNER JOIN pets ON has_pet.petid = pets.petid  WHERE pets.pettype = 'cat' OR pets.pettype = 'dog'
595,883,How many friends does each student have?,network_1,medium,"SELECT student_id ,  count(*) FROM Friend GROUP BY student_id",7,"SELECT highschooler.name, COUNT(friend.friend_id) as num_friends FROM highschooler LEFT JOIN friend ON highschooler.id = friend.student_id GROUP BY highschooler.name
SELECT highschooler.name, COUNT(friend.friend_id) as num_friends FROM highschooler LEFT JOIN friend ON highschooler.id = friend.student_id GROUP BY highschooler.id
SELECT highschooler.name, COUNT(friend.friend_id) as num_friends FROM highschooler LEFT JOIN friend ON highschooler.id = friend.student_id GROUP BY highschooler.name
SELECT highschooler.name, COUNT(friend.friend_id) as num_friends FROM highschooler LEFT JOIN friend ON highschooler.id = friend.student_id GROUP BY highschooler.name
SELECT highschooler.name, COUNT(friend.friend_id) as num_friends FROM highschooler LEFT JOIN friend ON highschooler.id = friend.student_id GROUP BY highschooler.name
SELECT highschooler.name, COUNT(friend.friend_id) as num_friends FROM highschooler LEFT JOIN friend ON highschooler.id = friend.student_id GROUP BY highschooler.name
SELECT highschooler.name, COUNT(friend.friend_id) as num_friends FROM highschooler LEFT JOIN friend ON highschooler.id = friend.student_id GROUP BY highschooler.name","SELECT highschooler.name, COUNT(friend.friend_id) as num_friends FROM highschooler LEFT JOIN friend ON highschooler.id = friend.student_id GROUP BY highschooler.name"
596,315,Show ids for all templates not used by any document.,cre_Doc_Template_Mgt,hard,SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents,7,"SELECT templates.template_id  FROM templates  LEFT JOIN documents ON templates.template_id = documents.template_id  WHERE documents.template_id IS NULL
SELECT templates.template_id  FROM templates  LEFT JOIN documents ON templates.template_id = documents.template_id  WHERE documents.template_id IS NULL
SELECT templates.template_id  FROM templates  LEFT JOIN documents ON templates.template_id = documents.template_id  WHERE documents.template_id IS NULL
SELECT templates.template_id  FROM templates  LEFT JOIN documents ON templates.template_id = documents.template_id  WHERE documents.template_id IS NULL
SELECT templates.template_id  FROM templates  LEFT JOIN documents ON templates.template_id = documents.template_id  WHERE documents.template_id IS NULL
SELECT templates.template_id  FROM templates  LEFT JOIN documents ON templates.template_id = documents.template_id  WHERE documents.template_id IS NULL
SELECT templates.template_id  FROM templates  LEFT JOIN documents ON templates.template_id = documents.template_id  WHERE documents.template_id IS NULL",SELECT templates.template_id  FROM templates  LEFT JOIN documents ON templates.template_id = documents.template_id  WHERE documents.template_id IS NULL
597,571,How many times at most can a course enrollment result show in different transcripts? Also show the course enrollment id.,student_transcripts_tracking,hard,"SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT MAX(counts) as max_times, student_course_id FROM (     SELECT student
SELECT MAX(counts) as max_count, student_course_id FROM (     SELECT student
SELECT MAX(counts) as max_count, student_course_id FROM (     SELECT student
SELECT MAX(counts) as max_count, student_course_id FROM (     SELECT student
SELECT MAX(counts) as max_count, student_course_id FROM (     SELECT student
SELECT MAX(counts) as max_count, student_course_id FROM (     SELECT student
SELECT MAX(counts) as max_count, student_course_id FROM (     SELECT student","SELECT MAX(counts) as max_count, student_course_id FROM (     SELECT student"
598,168,"Among the cars that do not have the minimum horsepower , what are the make ids and names of all those with less than 4 cylinders ?",car_1,extra,"select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;",7,"SELECT car_makers.id, car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.modelid = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.horsepower > (SELECT MIN(horsepower) FROM cars_data) AND cars_data.cylinders < 4
SELECT car_makers.id, car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.modelid = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.horsepower < (SELECT MIN(horsepower) FROM cars_data) AND cars_data.cylinders < 4
SELECT car_makers.id, car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.modelid = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.horsepower < (SELECT MIN(horsepower) FROM cars_data) AND cars_data.cylinders < 4
SELECT car_makers.id, car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.modelid = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.horsepower > (SELECT MIN(horsepower) FROM cars_data) AND cars_data.cylinders < 4
SELECT car_makers.id, car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.modelid = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.horsepower > (SELECT MIN(horsepower) FROM cars_data) AND cars_data.cylinders < 4
SELECT car_makers.id, car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.modelid = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.horsepower > (SELECT MIN(horsepower) FROM cars_data) AND cars_data.cylinders < 4
SELECT car_makers.id, car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.modelid = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.horsepower < (SELECT MIN(horsepower) FROM cars_data) AND cars_data.cylinders < 4","SELECT car_makers.id, car_makers.maker FROM car_makers JOIN model_list ON car_makers.id = model_list.maker JOIN car_names ON model_list.modelid = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.horsepower > (SELECT MIN(horsepower) FROM cars_data) AND cars_data.cylinders < 4"
599,504,List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta',battle_death,extra,"SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'",7,"SELECT battle.name, battle.date FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON ship.id = death.caused_by_ship_id WHERE ship.name IN ('Lettice', 'HMS Atalanta') AND battle.result = 'lost' GROUP BY battle.id HAVING COUNT(DISTINCT ship.name) = 2
SELECT battle.name, battle.date FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON ship.id = death.caused_by_ship_id WHERE ship.name IN ('Lettice', 'HMS Atalanta') AND battle.result = 'lost' GROUP BY battle.name, battle.date
SELECT battle.name, battle.date FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON ship.id = death.caused_by_ship_id WHERE ship.name IN ('Lettice', 'HMS Atalanta') AND battle.result = 'lost' GROUP BY battle.name, battle.date
SELECT battle.name, battle.date FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON ship.id = death.caused_by_ship_id WHERE ship.name IN ('Lettice', 'HMS Atalanta') AND battle.result = 'lost' GROUP BY battle.name, battle.date
SELECT battle.name, battle.date FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON ship.id = death.caused_by_ship_id WHERE ship.name IN ('Lettice', 'HMS Atalanta') AND battle.result = 'lost' GROUP BY battle.name, battle.date
SELECT battle.name, battle.date FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON ship.id = death.caused_by_ship_id WHERE ship.name IN ('Lettice', 'HMS Atalanta') AND battle.result = 'lost' GROUP BY battle.name, battle.date
SELECT battle.name, battle.date FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON ship.id = death.caused_by_ship_id WHERE ship.name IN ('Lettice', 'HMS Atalanta') AND battle.result = 'lost' GROUP BY battle.name, battle.date","SELECT battle.name, battle.date FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON ship.id = death.caused_by_ship_id WHERE ship.name IN ('Lettice', 'HMS Atalanta') AND battle.result = 'lost' GROUP BY battle.name, battle.date"
600,86,What is the average age for all students who do not own any pets ?,pets_1,extra,select avg(age) from student where stuid not in (select stuid from has_pet),7,"SELECT AVG(student.age) FROM student LEFT JOIN has_pet ON student.stuid = has_pet.stuid WHERE has_pet.stuid IS NULL
SELECT AVG(student.age) FROM student LEFT JOIN has_pet ON student.stuid = has_pet.stuid WHERE has_pet.stuid IS NULL
SELECT AVG(student.age) FROM student LEFT JOIN has_pet ON student.stuid = has_pet.stuid WHERE has_pet.stuid IS NULL
SELECT AVG(student.age) FROM student LEFT JOIN has_pet ON student.stuid = has_pet.stuid WHERE has_pet.stuid IS NULL
SELECT AVG(student.age) FROM student LEFT JOIN has_pet ON student.stuid = has_pet.stuid WHERE has_pet.stuid IS NULL
SELECT AVG(student.age) FROM student LEFT JOIN has_pet ON student.stuid = has_pet.stuid WHERE has_pet.stuid IS NULL
SELECT AVG(student.age) FROM student LEFT JOIN has_pet ON student.stuid = has_pet.stuid LEFT JOIN pets ON has_pet.petid = pets.petid WHERE has_pet.petid IS NULL",SELECT AVG(student.age) FROM student LEFT JOIN has_pet ON student.stuid = has_pet.stuid WHERE has_pet.stuid IS NULL
601,404,What are the names of the people who teach math courses?,course_teach,hard,"SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  ""Math""",7,"SELECT teacher.name  FROM teacher  JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id  JOIN course ON course_arrange.course_id = course.course_id  WHERE course.course = 'math'
SELECT teacher.name  FROM teacher  JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id  JOIN course ON course_arrange.course_id = course.course_id  WHERE course.course = 'math'
SELECT teacher.name  FROM teacher  JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id  JOIN course ON course_arrange.course_id = course.course_id  WHERE course.course = 'math'
SELECT teacher.name  FROM teacher  JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id  JOIN course ON course_arrange.course_id = course.course_id  WHERE course.course = 'math'
SELECT teacher.name  FROM teacher  JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id  JOIN course ON course_arrange.course_id = course.course_id  WHERE course.course = 'math'
SELECT teacher.name  FROM teacher  JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id  JOIN course ON course_arrange.course_id = course.course_id  WHERE course.course = 'math'
SELECT teacher.name  FROM teacher  JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id  JOIN course ON course_arrange.course_id = course.course_id  WHERE course.course = 'math'",SELECT teacher.name  FROM teacher  JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id  JOIN course ON course_arrange.course_id = course.course_id  WHERE course.course = 'math'
602,305,How many different templates do all document use?,cre_Doc_Template_Mgt,easy,SELECT count(DISTINCT template_id) FROM Documents,7,"SELECT COUNT(DISTINCT template_type_code) AS different_templates_count FROM templates JOIN documents ON templates.template_id = documents.template_id
SELECT COUNT(DISTINCT template_type_code) AS different_templates_used FROM documents JOIN templates ON documents.template_id = templates.template_id
SELECT COUNT(DISTINCT template_type_code) AS different_templates_used FROM documents JOIN templates ON documents.template_id = templates.template_id
SELECT COUNT(DISTINCT template_type_code) AS different_templates_count FROM templates JOIN documents ON templates.template_id = documents.template_id
SELECT COUNT(DISTINCT template_type_code) AS different_templates_used FROM documents JOIN templates ON documents.template_id = templates.template_id
SELECT COUNT(DISTINCT template_type_code) AS num_of_different_templates FROM templates JOIN documents ON templates.template_id = documents.template_id
SELECT COUNT(DISTINCT template_type_code) AS different_templates_used FROM documents JOIN templates ON documents.template_id = templates.template_id",SELECT COUNT(DISTINCT template_type_code) AS different_templates_used FROM documents JOIN templates ON documents.template_id = templates.template_id
603,730,What is the average GNP and total population in all nations whose government is US territory?,world_1,medium,"SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  ""US Territory""",7,"SELECT AVG(gnp), SUM(population) FROM country WHERE governmentform = 'US Territory'
SELECT AVG(gnp), SUM(population) FROM country WHERE governmentform = 'US Territory'
SELECT AVG(gnp) AS average_gnp, SUM(population) AS total_population FROM country WHERE governmentform = 'US Territory'
SELECT AVG(gnp) AS average_gnp, SUM(population) AS total_population FROM country WHERE governmentform = 'US Territory'
SELECT AVG(gnp) AS average_gnp, SUM(population) AS total_population FROM country WHERE governmentform = 'US Territory'
SELECT AVG(gnp) AS average_gnp, SUM(population) AS total_population FROM country WHERE governmentform = 'US Territory'
SELECT AVG(gnp), SUM(population) FROM country WHERE governmentform = 'US Territory'","SELECT AVG(gnp) AS average_gnp, SUM(population) AS total_population FROM country WHERE governmentform = 'US Territory'"
604,98,What is the model for the car with a weight smaller than the average?,car_1,extra,SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA),7,"SELECT c.model FROM car_names AS c JOIN cars_data AS d ON c.makeid = d.id WHERE d.weight < (SELECT AVG(weight) FROM cars_data)
SELECT c.model FROM car_names AS c JOIN cars_data AS d ON c.makeid = d.id WHERE d.weight < (SELECT AVG(weight) FROM cars_data)
SELECT c.model FROM car_names AS c JOIN cars_data AS d ON c.makeid = d.id WHERE d.weight < (SELECT AVG(weight) FROM cars_data)
SELECT c.model FROM car_names AS c JOIN cars_data AS d ON c.makeid = d.id WHERE d.weight < (SELECT AVG(weight) FROM cars_data)
SELECT c.model FROM car_names AS c JOIN cars_data AS d ON c.makeid = d.id WHERE d.weight < (SELECT AVG(weight) FROM cars_data)
SELECT model FROM cars_data  JOIN car_names ON cars_data.id = car_names.makeid  JOIN model_list ON car_names.model = model_list.modelid  WHERE weight < (SELECT AVG(weight) FROM cars_data)
SELECT c.model FROM car_names AS c JOIN cars_data AS d ON c.makeid = d.id WHERE d.weight < (SELECT AVG(weight) FROM cars_data)",SELECT c.model FROM car_names AS c JOIN cars_data AS d ON c.makeid = d.id WHERE d.weight < (SELECT AVG(weight) FROM cars_data)
605,309,Show all template ids and number of documents using each template.,cre_Doc_Template_Mgt,medium,"SELECT template_id ,  count(*) FROM Documents GROUP BY template_id",7,"SELECT templates.template_id, COUNT(documents.document_id) as number_of_documents FROM templates LEFT JOIN documents ON templates.template_id = documents.template_id GROUP BY templates.template_id
SELECT templates.template_id, COUNT(documents.document_id) as number_of_documents FROM templates LEFT JOIN documents ON templates.template_id = documents.template_id GROUP BY templates.template_id
SELECT templates.template_id, COUNT(documents.document_id) as number_of_documents FROM templates LEFT JOIN documents ON templates.template_id = documents.template_id GROUP BY templates.template_id
SELECT templates.template_id, COUNT(documents.document_id) as number_of_documents FROM templates LEFT JOIN documents ON templates.template_id = documents.template_id GROUP BY templates.template_id
SELECT templates.template_id, COUNT(documents.document_id) as number_of_documents FROM templates LEFT JOIN documents ON templates.template_id = documents.template_id GROUP BY templates.template_id
SELECT templates.template_id, COUNT(documents.document_id) as number_of_documents FROM templates LEFT JOIN documents ON templates.template_id = documents.template_id GROUP BY templates.template_id
SELECT templates.template_id, COUNT(documents.document_id) as number_of_documents FROM templates LEFT JOIN documents ON templates.template_id = documents.template_id GROUP BY templates.template_id","SELECT templates.template_id, COUNT(documents.document_id) as number_of_documents FROM templates LEFT JOIN documents ON templates.template_id = documents.template_id GROUP BY templates.template_id"
606,143,How many cars have more than 4 cylinders?,car_1,easy,SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;,7,"SELECT COUNT(*) FROM cars_data WHERE cylinders > 4
SELECT COUNT(*) FROM cars_data WHERE cylinders > 4
SELECT COUNT(*) FROM cars_data WHERE cylinders > 4
SELECT COUNT(*) FROM cars_data WHERE cylinders > 4
SELECT COUNT(*) FROM cars_data WHERE cylinders > 4
SELECT COUNT(*) FROM cars_data WHERE cylinders > 4
SELECT COUNT(*) FROM cars_data WHERE cylinders > 4",SELECT COUNT(*) FROM cars_data WHERE cylinders > 4
607,269,Find the manager name and district of the shop whose number of products is the largest.,employee_hire_evaluation,medium,"SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1",7,"SELECT s.manager_name, s.district FROM shop s JOIN (     SELECT shop_id, MAX(number_products) as max_products     FROM shop ) sp ON s.shop_id = sp.shop_id AND s.number_products = sp.max_products
SELECT s.manager_name, s.district FROM shop s JOIN (     SELECT shop_id, MAX(number_products) as max_products     FROM shop ) sp ON s.shop_id = sp.shop_id AND s.number_products = sp.max_products
SELECT shop.manager_name, shop.district FROM shop INNER JOIN (     SELECT shop_id, MAX(number_products) as max_products     FROM shop     GROUP BY shop_id ) as max_products_shop ON shop.shop_id = max_products_shop.shop_id WHERE shop.number_products = max_products_shop.max_products
SELECT shop.manager_name, shop.district FROM shop INNER JOIN (     SELECT shop_id, MAX(number_products) as max_products     FROM shop     GROUP BY shop_id ) as max_products_shop ON shop.shop_id = max_products_shop.shop_id WHERE shop.number_products = max_products_shop.max_products
SELECT s.manager_name, s.district FROM shop s JOIN (     SELECT shop_id, MAX(number_products) as max_products     FROM shop ) sp ON s.shop_id = sp.shop_id AND s.number_products = sp.max_products
SELECT s.manager_name, s.district FROM shop s INNER JOIN (     SELECT shop_id, MAX(number_products) as max_products     FROM shop ) sp ON s.shop_id = sp.shop_id AND s.number_products = sp.max_products
SELECT shop.manager_name, shop.district FROM shop JOIN (SELECT shop_id, MAX(number_products) as max_products       FROM shop       GROUP BY shop_id) as max_shop ON shop.shop_id = max_shop.shop_id AND shop.number_products = max_shop.max_products","SELECT s.manager_name, s.district FROM shop s JOIN (     SELECT shop_id, MAX(number_products) as max_products     FROM shop ) sp ON s.shop_id = sp.shop_id AND s.number_products = sp.max_products"
608,794,Find the number of cities in each district whose population is greater than the average population of cities?,world_1,extra,"SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District",7,"SELECT district, COUNT(id) as num_cities FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district
SELECT district, COUNT(id) as num_cities FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district
SELECT district, COUNT(id) as num_cities FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district
SELECT district, COUNT(id) as num_cities FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district
SELECT district, COUNT(id) as num_cities FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district
SELECT district, COUNT(id) as num_cities FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district
SELECT district, COUNT(id) as num_cities FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district","SELECT district, COUNT(id) as num_cities FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district"
609,85,Find the average age of students who do not have any pet .,pets_1,extra,select avg(age) from student where stuid not in (select stuid from has_pet),7,"SELECT AVG(student.age) FROM student LEFT JOIN has_pet ON student.stuid = has_pet.stuid LEFT JOIN pets ON has_pet.petid = pets.petid WHERE has_pet.petid IS NULL
SELECT AVG(student.age) FROM student LEFT JOIN has_pet ON student.stuid = has_pet.stuid LEFT JOIN pets ON has_pet.petid = pets.petid WHERE has_pet.petid IS NULL
SELECT AVG(student.age) FROM student LEFT JOIN has_pet ON student.stuid = has_pet.stuid LEFT JOIN pets ON has_pet.petid = pets.petid WHERE has_pet.petid IS NULL
SELECT AVG(student.age) FROM student LEFT JOIN has_pet ON student.stuid = has_pet.stuid WHERE has_pet.stuid IS NULL
SELECT AVG(student.age) FROM student LEFT JOIN has_pet ON student.stuid = has_pet.stuid LEFT JOIN pets ON has_pet.petid = pets.petid WHERE has_pet.petid IS NULL
SELECT AVG(student.age)  FROM student  LEFT JOIN has_pet ON student.stuid = has_pet.stuid  WHERE has_pet.stuid IS NULL
SELECT AVG(student.age)  FROM student  LEFT JOIN has_pet ON student.stuid = has_pet.stuid  WHERE has_pet.stuid IS NULL",SELECT AVG(student.age) FROM student LEFT JOIN has_pet ON student.stuid = has_pet.stuid LEFT JOIN pets ON has_pet.petid = pets.petid WHERE has_pet.petid IS NULL
610,253,"What are flight numbers of flights arriving at City ""Aberdeen""?",flight_2,medium,"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""",7,"SELECT flightno FROM flights INNER JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = ""Aberdeen""
SELECT flightno FROM flights  INNER JOIN airports ON flights.destairport = airports.airportcode  WHERE airports.city = ""Aberdeen""
SELECT flights.flightno FROM flights INNER JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = ""Aberdeen""
SELECT flightno FROM flights INNER JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = ""Aberdeen""
SELECT flightno FROM flights INNER JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = ""Aberdeen""
SELECT flightno FROM flights INNER JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = ""Aberdeen""
SELECT flightno FROM flights INNER JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = ""Aberdeen""","SELECT flightno FROM flights INNER JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = ""Aberdeen"""
611,1013,"For each citizenship, how many singers are from that country?",singer,medium,"SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship",7,"SELECT citizenship, COUNT(singer_id)  FROM singer  GROUP BY citizenship
SELECT citizenship, COUNT(singer_id)  FROM singer  GROUP BY citizenship
SELECT citizenship, COUNT(singer_id)  FROM singer  GROUP BY citizenship
SELECT citizenship, COUNT(singer_id)  FROM singer  GROUP BY citizenship
SELECT citizenship, COUNT(singer_id)  FROM singer  GROUP BY citizenship
SELECT citizenship, COUNT(singer_id)  FROM singer  GROUP BY citizenship
SELECT citizenship, COUNT(singer_id)  FROM singer  GROUP BY citizenship","SELECT citizenship, COUNT(singer_id)  FROM singer  GROUP BY citizenship"
612,416,Find the average number of staff working for the museums that were open before 2009.,museum_visit,easy,SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009,7,"SELECT AVG(num_of_staff) FROM museum WHERE open_year < 2009
SELECT AVG(num_of_staff) FROM museum WHERE open_year < 2009
SELECT AVG(num_of_staff) FROM museum WHERE open_year < 2009
SELECT AVG(num_of_staff) FROM museum WHERE open_year < 2009
SELECT AVG(num_of_staff) FROM museum WHERE open_year < 2009
SELECT AVG(num_of_staff) FROM museum WHERE open_year < 2009
SELECT AVG(num_of_staff) FROM museum WHERE open_year < 2009",SELECT AVG(num_of_staff) FROM museum WHERE open_year < 2009
613,479,Find the total number of tours for each ranking date.,wta_1,medium,"SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date",7,"SELECT COUNT(*) as total_tours, ranking_date FROM rankings GROUP BY ranking_date
SELECT COUNT(*), rankings.ranking_date FROM rankings GROUP BY rankings.ranking_date
SELECT COUNT(*) as total_tours, ranking_date FROM rankings GROUP BY ranking_date
SELECT COUNT(*) as total_tours, ranking_date FROM rankings GROUP BY ranking_date
SELECT COUNT(*) as total_tours, ranking_date FROM rankings GROUP BY ranking_date
SELECT COUNT(*), rankings.ranking_date FROM rankings GROUP BY rankings.ranking_date
SELECT COUNT(*) as total_tours, ranking_date FROM rankings GROUP BY ranking_date","SELECT COUNT(*) as total_tours, ranking_date FROM rankings GROUP BY ranking_date"
614,753,Which regions speak Dutch or English?,world_1,hard,"SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" OR T2.Language  =  ""Dutch""",7,"SELECT DISTINCT c.region  FROM country c  JOIN countrylanguage cl ON c.code = cl.countrycode  WHERE cl.language IN ('Dutch', 'English')
SELECT DISTINCT c.region  FROM country c JOIN countrylanguage cl ON c.code = cl.countrycode  WHERE cl.language IN ('Dutch', 'English')
SELECT DISTINCT c.region  FROM country c  JOIN countrylanguage cl ON c.code = cl.countrycode  WHERE cl.language IN ('Dutch', 'English')
SELECT DISTINCT c.region  FROM country c  JOIN countrylanguage cl ON c.code = cl.countrycode  WHERE cl.language IN ('Dutch', 'English')
SELECT DISTINCT c.region FROM country c JOIN countrylanguage cl ON c.code = cl.countrycode WHERE cl.language IN ('Dutch', 'English')
SELECT DISTINCT c.region  FROM country c JOIN countrylanguage cl ON c.code = cl.countrycode  WHERE cl.language IN ('Dutch', 'English')
SELECT DISTINCT c.region  FROM country c  JOIN countrylanguage cl ON c.code = cl.countrycode  WHERE cl.language IN ('Dutch', 'English')","SELECT DISTINCT c.region  FROM country c  JOIN countrylanguage cl ON c.code = cl.countrycode  WHERE cl.language IN ('Dutch', 'English')"
615,974,How many dogs have an age below the average?,dog_kennels,hard,SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs ),7,"SELECT COUNT(*) FROM dogs WHERE age < (SELECT AVG(age) FROM dogs)
SELECT COUNT(*) FROM dogs WHERE age < (SELECT AVG(age) FROM dogs)
SELECT COUNT(*) FROM dogs WHERE age < (SELECT AVG(age) FROM dogs)
SELECT COUNT(*) FROM dogs WHERE age < (SELECT AVG(age) FROM dogs)
SELECT COUNT(*) FROM dogs WHERE age < (SELECT AVG(age) FROM dogs)
SELECT COUNT(*) FROM dogs WHERE age < (SELECT AVG(age) FROM dogs)
SELECT COUNT(*) FROM dogs WHERE age < (SELECT AVG(age) FROM dogs)",SELECT COUNT(*) FROM dogs WHERE age < (SELECT AVG(age) FROM dogs)
616,937,Tell me the owner id and last name of the owner who spent the most on treatments of his or her dogs.,dog_kennels,extra,"SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT owners.owner_id, owners.last_name, SUM(treatments.cost_of_treatment) as total_spent FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id JOIN treatments ON dogs.dog_id = treatments.dog_id GROUP BY owners.owner_id ORDER BY total_spent DESC LIMIT 1
SELECT owners.owner_id, owners.last_name, SUM(treatments.cost_of_treatment) as total_spent FROM treatments JOIN dogs ON treatments.dog_id = dogs.dog_id JOIN owners ON dogs.owner_id = owners.owner_id GROUP BY owners.owner_id ORDER BY total_spent DESC LIMIT 1
SELECT owners.owner_id, owners.last_name, SUM(treatments.cost_of_treatment) as total_spent FROM treatments JOIN dogs ON treatments.dog_id = dogs.dog_id JOIN owners ON dogs.owner_id = owners.owner_id GROUP BY owners.owner_id ORDER BY total_spent DESC LIMIT 1
SELECT owners.owner_id, owners.last_name, SUM(treatments.cost_of_treatment) as total_spent FROM treatments JOIN dogs ON treatments.dog_id = dogs.dog_id JOIN owners ON dogs.owner_id = owners.owner_id GROUP BY owners.owner_id, owners.last_name ORDER BY total_spent DESC LIMIT 1
SELECT owners.owner_id, owners.last_name, SUM(treatments.cost_of_treatment) as total_spent FROM treatments JOIN dogs ON treatments.dog_id = dogs.dog_id JOIN owners ON dogs.owner_id = owners.owner_id GROUP BY owners.owner_id, owners.last_name ORDER BY total_spent DESC LIMIT 1
SELECT owners.owner_id, owners.last_name, SUM(treatments.cost_of_treatment) as total_spent FROM treatments JOIN dogs ON treatments.dog_id = dogs.dog_id JOIN owners ON dogs.owner_id = owners.owner_id GROUP BY owners.owner_id ORDER BY total_spent DESC LIMIT 1
SELECT owners.owner_id, owners.last_name, SUM(treatments.cost_of_treatment) as total_spent FROM treatments JOIN dogs ON treatments.dog_id = dogs.dog_id JOIN owners ON dogs.owner_id = owners.owner_id GROUP BY owners.owner_id ORDER BY total_spent DESC LIMIT 1","SELECT owners.owner_id, owners.last_name, SUM(treatments.cost_of_treatment) as total_spent FROM treatments JOIN dogs ON treatments.dog_id = dogs.dog_id JOIN owners ON dogs.owner_id = owners.owner_id GROUP BY owners.owner_id ORDER BY total_spent DESC LIMIT 1"
617,26,Which year has most number of concerts?,concert_singer,hard,SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,7,"SELECT year, COUNT(*) as num_of_concerts FROM concert GROUP BY year ORDER BY num_of_concerts DESC LIMIT 1
SELECT year, COUNT(*) as num_concerts FROM concert GROUP BY year ORDER BY num_concerts DESC LIMIT 1
SELECT year, COUNT(*) as num_concerts FROM concert GROUP BY year ORDER BY num_concerts DESC LIMIT 1
SELECT year, COUNT(*) as num_concerts FROM concert GROUP BY year ORDER BY num_concerts DESC LIMIT 1
SELECT year, COUNT(*) as num_of_concerts FROM concert GROUP BY year ORDER BY num_of_concerts DESC LIMIT 1
SELECT year, COUNT(*) as num_concerts FROM concert GROUP BY year ORDER BY num_concerts DESC LIMIT 1
SELECT year, COUNT(*) as num_of_concerts FROM concert GROUP BY year ORDER BY num_of_concerts DESC LIMIT 1","SELECT year, COUNT(*) as num_concerts FROM concert GROUP BY year ORDER BY num_concerts DESC LIMIT 1"
618,271,find the minimum and maximum number of products of all stores.,employee_hire_evaluation,medium,"SELECT min(Number_products) ,  max(Number_products) FROM shop",7,"SELECT MIN(number_products), MAX(number_products) FROM shop
SELECT MIN(number_products), MAX(number_products) FROM shop
SELECT MIN(number_products), MAX(number_products) FROM shop
SELECT MIN(number_products), MAX(number_products) FROM shop
SELECT MIN(number_products), MAX(number_products) FROM shop
SELECT MIN(number_products), MAX(number_products) FROM shop
SELECT MIN(number_products), MAX(number_products) FROM shop","SELECT MIN(number_products), MAX(number_products) FROM shop"
619,407,Show names of teachers that teach at least two courses.,course_teach,medium,SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2,7,"SELECT t.name  FROM teacher t  JOIN course_arrange ca ON t.teacher_id = ca.teacher_id  GROUP BY ca.teacher_id  HAVING COUNT(ca.course_id) >= 2
SELECT t.name  FROM teacher t  JOIN course_arrange ca ON t.teacher_id = ca.teacher_id  GROUP BY ca.teacher_id  HAVING COUNT(ca.course_id) >= 2
SELECT t.name  FROM teacher t  JOIN course_arrange ca ON t.teacher_id = ca.teacher_id  GROUP BY ca.teacher_id  HAVING COUNT(DISTINCT ca.course_id) >= 2
SELECT t.name  FROM teacher t  JOIN course_arrange ca ON t.teacher_id = ca.teacher_id  GROUP BY ca.teacher_id  HAVING COUNT(ca.course_id) >= 2
SELECT t.name  FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id GROUP BY ca.teacher_id HAVING COUNT(ca.course_id) >= 2
SELECT t.name  FROM teacher t  JOIN course_arrange ca ON t.teacher_id = ca.teacher_id  GROUP BY ca.teacher_id  HAVING COUNT(ca.course_id) >= 2
SELECT t.name  FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id GROUP BY ca.teacher_id HAVING COUNT(ca.course_id) >= 2",SELECT t.name  FROM teacher t  JOIN course_arrange ca ON t.teacher_id = ca.teacher_id  GROUP BY ca.teacher_id  HAVING COUNT(ca.course_id) >= 2
620,575,Find the semester when both Master students and Bachelor students got enrolled in.,student_transcripts_tracking,extra,SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor',7,"SELECT s.semester_name FROM semesters s JOIN student_enrolment se ON s.semester_id
SELECT s.semester_name FROM semesters s JOIN student_enrolment se ON s.semester_id
SELECT s.semester_name FROM semesters s JOIN student_enrolment se ON s.semester_id
SELECT s.semester_name FROM semesters s JOIN student_enrolment se ON s.semester_id
SELECT s.semester_name FROM semesters s JOIN student_enrolment se ON s.semester_id
SELECT s.semester_name FROM semesters s JOIN student_enrolment se ON s.semester_id
SELECT s.semester_name FROM semesters s JOIN student_enrolment se ON s.semester_id",SELECT s.semester_name FROM semesters s JOIN student_enrolment se ON s.semester_id
621,256,How many flights land in Aberdeen or Abilene?,flight_2,hard,"SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  ""Aberdeen"" OR T2.city  =  ""Abilene""",7,"SELECT COUNT(*) FROM flights  INNER JOIN airports ON flights.destairport = airports.airportcode  WHERE airports.city = 'Aberdeen' OR airports.city = 'Abilene'
SELECT COUNT(*) FROM flights  INNER JOIN airports ON flights.destairport = airports.airportcode  WHERE airports.city = 'Aberdeen' OR airports.city = 'Abilene'
SELECT COUNT(*) FROM flights  INNER JOIN airports ON flights.destairport = airports.airportcode  WHERE airports.city = 'Aberdeen' OR airports.city = 'Abilene'
SELECT COUNT(*) FROM flights WHERE destairport IN (SELECT airportcode FROM airports WHERE city IN ('Aberdeen', 'Abilene'))
SELECT COUNT(*) FROM flights  INNER JOIN airports ON flights.destairport = airports.airportcode  WHERE airports.city = 'Aberdeen' OR airports.city = 'Abilene'
SELECT COUNT(*) FROM flights INNER JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen' OR airports.city = 'Abilene'
SELECT COUNT(*) FROM flights  INNER JOIN airports ON flights.destairport = airports.airportcode  WHERE airports.city = 'Aberdeen' OR airports.city = 'Abilene'",SELECT COUNT(*) FROM flights  INNER JOIN airports ON flights.destairport = airports.airportcode  WHERE airports.city = 'Aberdeen' OR airports.city = 'Abilene'
622,901,What are the names of high schoolers who both have friends and are liked?,network_1,hard,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id,7,"SELECT h.name  FROM highschooler h  JOIN friend f ON h.id = f.student_id  JOIN likes l ON h.id = l.student_id  WHERE h.grade >= 9 AND h.grade <= 12
SELECT h.name  FROM highschooler h  JOIN friend f ON h.id = f.student_id  JOIN likes l ON h.id = l.student_id  WHERE h.grade >= 9 AND h.grade <= 12
SELECT h.name  FROM highschooler h  JOIN friend f ON h.id = f.student_id  JOIN likes l ON h.id = l.student_id  WHERE h.grade >= 9 AND h.grade <= 12
SELECT h.name  FROM highschooler h  JOIN friend f ON h.id = f.student_id  JOIN likes l ON h.id = l.student_id  WHERE h.grade >= 9 AND h.grade <= 12
SELECT h.name  FROM highschooler h  JOIN friend f ON h.id = f.student_id  JOIN likes l ON h.id = l.student_id  WHERE h.grade >= 9 AND h.grade <= 12
SELECT h.name  FROM highschooler h  JOIN friend f ON h.id = f.student_id  JOIN likes l ON h.id = l.student_id  WHERE h.grade >= 9 AND h.grade <= 12
SELECT h.name  FROM highschooler h  JOIN friend f ON h.id = f.student_id  JOIN likes l ON h.id = l.student_id  WHERE h.grade >= 9 AND h.grade <= 12",SELECT h.name  FROM highschooler h  JOIN friend f ON h.id = f.student_id  JOIN likes l ON h.id = l.student_id  WHERE h.grade >= 9 AND h.grade <= 12
623,132,What is the largest amount of horsepower for the models with 3 cylinders and what make is it?,car_1,extra,"SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;",7,"SELECT MAX(horsepower), car_makers.maker FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid JOIN car_makers ON car_names.makeid = car_makers.id WHERE cars_data.cylinders = 3
SELECT MAX(horsepower), car_makers.maker FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid JOIN car_makers ON car_names.makeid = car_makers.id WHERE cars_data.cylinders = 3
SELECT MAX(horsepower), car_makers.maker FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid JOIN car_makers ON car_names.makeid = car_makers.id WHERE cars_data.cylinders = 3
SELECT MAX(horsepower), car_makers.maker FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid JOIN car_makers ON car_names.makeid = car_makers.id WHERE cars_data.cylinders = 3
SELECT MAX(horsepower), car_makers.maker  FROM cars_data  JOIN car_names ON cars_data.id = car_names.makeid  JOIN car_makers ON car_names.makeid = car_makers.id  WHERE cars_data.cylinders = 3
SELECT MAX(horsepower), car_makers.maker  FROM cars_data  JOIN car_names ON cars_data.id = car_names.makeid  JOIN car_makers ON car_names.makeid = car_makers.id  WHERE cars_data.cylinders = 3
SELECT MAX(horsepower), car_makers.maker FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid JOIN car_makers ON car_names.makeid = car_makers.id WHERE cars_data.cylinders = 3","SELECT MAX(horsepower), car_makers.maker FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid JOIN car_makers ON car_names.makeid = car_makers.id WHERE cars_data.cylinders = 3"
624,592,What is the name and directors of all the cartoons that are ordered by air date?,tvshow,medium,"SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date",7,"SELECT c.title AS Name, c.directed_by AS Director FROM cartoon AS c JOIN tv_series AS t ON c.id = t.id WHERE t.content = 'cartoon' ORDER BY t.air_date ASC
SELECT c.title AS Name, c.directed_by AS Director FROM cartoon AS c JOIN tv_series AS t ON c.id = t.id WHERE t.content = 'cartoon' ORDER BY t.air_date ASC
SELECT c.title AS Name, c.directed_by AS Director FROM cartoon AS c JOIN tv_series AS t ON c.id = t.id WHERE t.content = 'cartoon' ORDER BY t.air_date ASC
SELECT c.title AS Name, c.directed_by AS Director FROM cartoon AS c JOIN tv_series AS t ON c.id = t.id WHERE t.content = 'cartoon' ORDER BY t.air_date ASC
SELECT c.title AS Name, c.directed_by AS Director FROM cartoon AS c JOIN tv_series AS t ON c.id = t.id WHERE t.content = 'cartoon' ORDER BY t.air_date ASC
SELECT c.title AS Name, c.directed_by AS Director FROM cartoon AS c JOIN tv_series AS t ON c.id = t.id WHERE t.content = 'cartoon' ORDER BY t.air_date ASC
SELECT c.title AS Name, c.directed_by AS Director FROM cartoon AS c JOIN tv_series AS t ON c.id = t.id WHERE t.content = 'cartoon' ORDER BY t.air_date ASC","SELECT c.title AS Name, c.directed_by AS Director FROM cartoon AS c JOIN tv_series AS t ON c.id = t.id WHERE t.content = 'cartoon' ORDER BY t.air_date ASC"
625,854,List the names of orchestras that have no performance.,orchestra,hard,SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance),7,"SELECT orchestra.orchestra  FROM orchestra  LEFT JOIN performance ON orchestra.orchestra_id = performance.orchestra_id  WHERE performance.orchestra_id IS NULL
SELECT orchestra.orchestra  FROM orchestra  LEFT JOIN performance ON orchestra.orchestra_id = performance.orchestra_id  WHERE performance.orchestra_id IS NULL
SELECT orchestra.orchestra  FROM orchestra  LEFT JOIN performance ON orchestra.orchestra_id = performance.orchestra_id  WHERE performance.orchestra_id IS NULL
SELECT orchestra.orchestra  FROM orchestra  LEFT JOIN performance ON orchestra.orchestra_id = performance.orchestra_id  WHERE performance.orchestra_id IS NULL
SELECT orchestra.orchestra  FROM orchestra  LEFT JOIN performance ON orchestra.orchestra_id = performance.orchestra_id  WHERE performance.orchestra_id IS NULL
SELECT orchestra.orchestra  FROM orchestra  LEFT JOIN performance ON orchestra.orchestra_id = performance.orchestra_id  WHERE performance.orchestra_id IS NULL
SELECT orchestra.orchestra  FROM orchestra  LEFT JOIN performance ON orchestra.orchestra_id = performance.orchestra_id  WHERE performance.orchestra_id IS NULL",SELECT orchestra.orchestra  FROM orchestra  LEFT JOIN performance ON orchestra.orchestra_id = performance.orchestra_id  WHERE performance.orchestra_id IS NULL
626,979,Tell me the number of dogs that have not received any treatment .,dog_kennels,extra,select count(*) from dogs where dog_id not in ( select dog_id from treatments ),7,"SELECT COUNT(*) FROM dogs  LEFT JOIN treatments ON dogs.dog_id = treatments.dog_id  WHERE treatments.dog_id IS NULL
SELECT COUNT(*) FROM dogs  LEFT JOIN treatments ON dogs.dog_id = treatments.dog_id  WHERE treatments.dog_id IS NULL
SELECT COUNT(*) FROM dogs  LEFT JOIN treatments ON dogs.dog_id = treatments.dog_id  WHERE treatments.dog_id IS NULL
SELECT COUNT(*) FROM dogs  LEFT JOIN treatments ON dogs.dog_id = treatments.dog_id  WHERE treatments.dog_id IS NULL
SELECT COUNT(*) FROM dogs  LEFT JOIN treatments ON dogs.dog_id = treatments.dog_id  WHERE treatments.dog_id IS NULL
SELECT COUNT(*) FROM dogs  LEFT JOIN treatments ON dogs.dog_id = treatments.dog_id  WHERE treatments.dog_id IS NULL
SELECT COUNT(*) FROM dogs  LEFT JOIN treatments ON dogs.dog_id = treatments.dog_id  WHERE treatments.dog_id IS NULL",SELECT COUNT(*) FROM dogs  LEFT JOIN treatments ON dogs.dog_id = treatments.dog_id  WHERE treatments.dog_id IS NULL
627,421,What are the id and name of the museum visited most times?,museum_visit,extra,"SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1",7,"SELECT museum.id, museum.name, COUNT(visit.visitor_id) as num_of_visits FROM museum JOIN visit ON museum.id = visit.museum_id GROUP BY museum.id, museum.name ORDER BY num_of_visits DESC LIMIT 1
SELECT museum.id, museum.name, COUNT(visit.visitor_id) as num_of_visits FROM museum JOIN visit ON museum.id = visit.museum_id GROUP BY museum.id, museum.name ORDER BY num_of_visits DESC LIMIT 1
SELECT museum.id, museum.name, COUNT(visit.visitor_id) as num_of_visits FROM museum JOIN visit ON museum.id = visit.museum_id GROUP BY museum.id, museum.name ORDER BY num_of_visits DESC LIMIT 1
SELECT museum.id, museum.name, COUNT(visit.visitor_id) as visit_count FROM museum JOIN visit ON museum.id = visit.museum_id GROUP BY museum.id, museum.name ORDER BY visit_count DESC LIMIT 1
SELECT museum.id, museum.name, COUNT(visit.visitor_id) as num_of_visits FROM museum JOIN visit ON museum.id = visit.museum_id GROUP BY museum.id, museum.name ORDER BY num_of_visits DESC LIMIT 1
SELECT museum.id, museum.name, COUNT(visit.visitor_id) as visit_count FROM museum JOIN visit ON museum.id = visit.museum_id GROUP BY museum.id, museum.name ORDER BY visit_count DESC LIMIT 1
SELECT museum.id, museum.name, COUNT(visit.visitor_id) as visit_count FROM museum JOIN visit ON museum.id = visit.museum_id GROUP BY museum.id, museum.name ORDER BY visit_count DESC LIMIT 1","SELECT museum.id, museum.name, COUNT(visit.visitor_id) as num_of_visits FROM museum JOIN visit ON museum.id = visit.museum_id GROUP BY museum.id, museum.name ORDER BY num_of_visits DESC LIMIT 1"
628,6,Show the name and the release year of the song by the youngest singer.,concert_singer,medium,"SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1",7,"SELECT s.name, s.song_release_year FROM singer AS s JOIN (     SELECT si.singer_id     FROM singer AS si     ORDER BY si.age ASC     LIMIT 1 ) AS youngest ON s.singer_id = youngest.singer_id
SELECT s.name, s.song_release_year FROM singer AS s JOIN (     SELECT si.singer_id     FROM singer AS si     ORDER BY si.age ASC     LIMIT 1 ) AS y ON s.singer_id = y.singer_id
SELECT s.name, s.song_release_year FROM singer AS s JOIN (SELECT MIN(age) AS youngest_age       FROM singer) AS y ON s.age = y.youngest_age
SELECT s.name, s.song_release_year FROM singer AS s WHERE s.age = (SELECT MIN(age) FROM singer) AND s.singer_id IN (SELECT si.singer_id FROM singer_in_concert AS si)
SELECT s.name, s.song_release_year FROM singer AS s JOIN (SELECT singer_id       FROM singer       ORDER BY age ASC       LIMIT 1) AS y ON s.singer_id = y.singer_id
SELECT s.name, s.song_release_year FROM singer AS s WHERE s.age = (SELECT MIN(age) FROM singer) AND s.singer_id IN (SELECT si.singer_id FROM singer_in_concert AS si)
SELECT s.name, s.song_release_year FROM singer AS s WHERE s.age = (SELECT MIN(age) FROM singer) AND s.singer_id IN (SELECT si.singer_id FROM singer_in_concert AS si)","SELECT s.name, s.song_release_year FROM singer AS s WHERE s.age = (SELECT MIN(age) FROM singer) AND s.singer_id IN (SELECT si.singer_id FROM singer_in_concert AS si)"
629,991,List each charge type and its amount.,dog_kennels,medium,"SELECT charge_type ,  charge_amount FROM Charges",7,"SELECT charge_type, charge_amount FROM charges
SELECT charge_type, charge_amount FROM charges
SELECT charge_type, charge_amount FROM charges
SELECT charge_type, charge_amount FROM charges
SELECT charge_type, charge_amount FROM charges
SELECT charge_type, charge_amount FROM charges
SELECT charge_type, charge_amount FROM charges","SELECT charge_type, charge_amount FROM charges"
630,520,How many different degrees are offered?,student_transcripts_tracking,easy,SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs,7,"SELECT COUNT(DISTINCT degree_summary_name) FROM degree_programs
SELECT COUNT(DISTINCT degree_summary_name) as total_degrees FROM degree_programs
SELECT COUNT(DISTINCT degree_summary_name) AS total_degrees FROM degree_programs
SELECT COUNT(DISTINCT degree_summary_name) AS total_degrees FROM degree_programs
SELECT COUNT(DISTINCT degree_summary_name) AS total_degrees FROM degree_programs
SELECT COUNT(DISTINCT degree_summary_name) AS total_degrees FROM degree_programs
SELECT COUNT(DISTINCT degree_summary_name) FROM degree_programs",SELECT COUNT(DISTINCT degree_summary_name) AS total_degrees FROM degree_programs
631,255,Find the number of flights landing in the city of Aberdeen or Abilene.,flight_2,hard,"SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  ""Aberdeen"" OR T2.city  =  ""Abilene""",7,"SELECT COUNT(*) FROM flights  INNER JOIN airports ON flights.destairport = airports.airportcode  WHERE airports.city = 'Aberdeen' OR airports.city = 'Abilene'
SELECT COUNT(*) FROM flights  INNER JOIN airports ON flights.destairport = airports.airportcode  WHERE airports.city = 'Aberdeen' OR airports.city = 'Abilene'
SELECT COUNT(*) FROM flights  INNER JOIN airports ON flights.destairport = airports.airportcode  WHERE airports.city = 'Aberdeen' OR airports.city = 'Abilene'
SELECT COUNT(*) FROM flights  INNER JOIN airports ON flights.destairport = airports.airportcode  WHERE airports.city = 'Aberdeen' OR airports.city = 'Abilene'
SELECT COUNT(*) FROM flights  INNER JOIN airports ON flights.destairport = airports.airportcode  WHERE airports.city = 'Aberdeen' OR airports.city = 'Abilene'
SELECT COUNT(*) FROM flights  INNER JOIN airports ON flights.destairport = airports.airportcode  WHERE airports.city = 'Aberdeen' OR airports.city = 'Abilene'
SELECT COUNT(*) FROM flights INNER JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen' OR airports.city = 'Abilene'",SELECT COUNT(*) FROM flights  INNER JOIN airports ON flights.destairport = airports.airportcode  WHERE airports.city = 'Aberdeen' OR airports.city = 'Abilene'
632,604,How many TV Channels use the English language?,tvshow,easy,"SELECT count(*) FROM TV_Channel WHERE LANGUAGE = ""English"";",7,"SELECT COUNT(DISTINCT tv_channel.id) FROM tv_channel INNER JOIN tv_series ON tv_channel.id = tv_series.channel WHERE tv_channel.language = 'English'
SELECT COUNT(DISTINCT tv_channel.id)  FROM tv_channel  JOIN tv_series ON tv_channel.id = tv_series.channel  JOIN cartoon ON tv_channel.id = cartoon.channel  WHERE tv_channel.language = 'English'
SELECT COUNT(DISTINCT tv_channel.id)  FROM tv_channel  JOIN tv_series ON tv_channel.id = tv_series.channel  JOIN cartoon ON tv_channel.id = cartoon.channel  WHERE tv_channel.language = 'English'
SELECT COUNT(DISTINCT tv_channel.id)  FROM tv_channel  JOIN tv_series ON tv_channel.id = tv_series.channel  JOIN cartoon ON tv_channel.id = cartoon.channel  WHERE tv_channel.language = 'English'
SELECT COUNT(DISTINCT tv_channel.id)  FROM tv_channel  JOIN tv_series ON tv_channel.id = tv_series.channel  JOIN cartoon ON tv_channel.id = cartoon.channel  WHERE tv_channel.language = 'English'
SELECT COUNT(DISTINCT tv_channel.id) FROM tv_channel INNER JOIN tv_series ON tv_channel.id = tv_series.channel WHERE tv_channel.language = 'English'
SELECT COUNT(DISTINCT tv_channel.id) FROM tv_channel INNER JOIN tv_series ON tv_channel.id = tv_series.channel WHERE tv_channel.language = 'English'",SELECT COUNT(DISTINCT tv_channel.id)  FROM tv_channel  JOIN tv_series ON tv_channel.id = tv_series.channel  JOIN cartoon ON tv_channel.id = cartoon.channel  WHERE tv_channel.language = 'English'
633,311,What is the id and type code for the template used by the most documents?,cre_Doc_Template_Mgt,extra,"SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT t.template_id, t.template_type_code  FROM templates AS t  JOIN documents AS d ON t.template_id = d.template_id  GROUP BY t.template_id, t.template_type_code  ORDER BY COUNT(d.document_id) DESC  LIMIT 1
SELECT templates.template_id, templates.template_type_code  FROM templates  JOIN documents ON templates.template_id = documents.template_id  GROUP BY templates.template_id, templates.template_type_code  ORDER BY COUNT(documents.document_id) DESC  LIMIT 1
SELECT templates.template_id, templates.template_type_code  FROM templates  JOIN documents ON templates.template_id = documents.template_id  GROUP BY templates.template_id, templates.template_type_code  ORDER BY COUNT(documents.document_id) DESC  LIMIT 1
SELECT t.template_id, t.template_type_code  FROM templates AS t  JOIN documents AS d ON t.template_id = d.template_id  GROUP BY t.template_id, t.template_type_code  ORDER BY COUNT(d.document_id) DESC  LIMIT 1
SELECT templates.template_id, templates.template_type_code  FROM templates  JOIN documents ON templates.template_id = documents.template_id  GROUP BY templates.template_id, templates.template_type_code  ORDER BY COUNT(documents.document_id) DESC  LIMIT 1
SELECT templates.template_id, templates.template_type_code  FROM templates  JOIN documents ON templates.template_id = documents.template_id  GROUP BY templates.template_id, templates.template_type_code  ORDER BY COUNT(documents.document_id) DESC  LIMIT 1
SELECT t.template_id, t.template_type_code  FROM templates AS t  JOIN documents AS d ON t.template_id = d.template_id  GROUP BY t.template_id, t.template_type_code  ORDER BY COUNT(d.document_id) DESC  LIMIT 1","SELECT templates.template_id, templates.template_type_code  FROM templates  JOIN documents ON templates.template_id = documents.template_id  GROUP BY templates.template_id, templates.template_type_code  ORDER BY COUNT(documents.document_id) DESC  LIMIT 1"
634,503,How many battles did not lose any ship with tonnage '225'?,battle_death,extra,SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );,7,"SELECT COUNT(*)  FROM battle  WHERE id NOT IN (     SELECT lost_in_battle      FROM ship      WHERE tonnage = '225' AND lost_in_battle IS NOT NULL )
SELECT COUNT(*) FROM battle LEFT JOIN ship ON battle.id = ship.lost_in_battle LEFT JOIN death ON ship.id = death.caused_by_ship_id WHERE ship.tonnage = '225' AND battle.result != 'Lost' AND death.killed > 0
SELECT COUNT(*) FROM battle LEFT JOIN ship ON battle.id = ship.lost_in_battle LEFT JOIN death ON ship.id = death.caused_by_ship_id WHERE ship.tonnage = 225 AND battle.result NOT LIKE '%Lost%'
SELECT COUNT(*) FROM battle  LEFT JOIN ship ON battle.id = ship.lost_in_battle  LEFT JOIN death ON ship.id = death.caused_by_ship_id  WHERE ship.tonnage = '225' AND battle.result NOT LIKE '%Lost%'
SELECT COUNT(*)  FROM battle  WHERE id NOT IN (     SELECT lost_in_battle      FROM ship      WHERE tonnage = '225' AND lost_in_battle IS NOT NULL )
SELECT COUNT(*) FROM battle  LEFT JOIN ship ON battle.id = ship.lost_in_battle  LEFT JOIN death ON ship.id = death.caused_by_ship_id  WHERE ship.tonnage = '225' AND battle.result NOT LIKE '%Lost%'
SELECT COUNT(*) FROM battle  LEFT JOIN ship ON battle.id = ship.lost_in_battle  LEFT JOIN death ON ship.id = death.caused_by_ship_id  WHERE ship.tonnage = '225' AND death.killed = 0 AND death.injured = 0",SELECT COUNT(*)  FROM battle  WHERE id NOT IN (     SELECT lost_in_battle      FROM ship      WHERE tonnage = '225' AND lost_in_battle IS NOT NULL )
635,250,Give the flight numbers of flights landing at APG.,flight_2,easy,"SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  ""APG""",7,"SELECT flights.flightno FROM flights INNER JOIN airports ON flights.destairport = airports.airportcode WHERE airports.airportname = 'APG' AND flights.airline = 'uid'
SELECT flights.flightno FROM flights INNER JOIN airports ON flights.destairport = airports.airportcode WHERE airports.airportname = 'APG' AND flights.airline = 'uid'
SELECT flights.flightno FROM flights INNER JOIN airports ON flights.destairport = airports.airportcode WHERE airports.airportname = 'APG' AND flights.airline = 'uid'
SELECT flights.flightno FROM flights INNER JOIN airports ON flights.destairport = airports.airportcode WHERE airports.airportname = 'APG' AND flights.airline = 'uid'
SELECT flights.flightno FROM flights INNER JOIN airports ON flights.destairport = airports.airportcode WHERE airports.airportname = 'APG' AND flights.airline = 'uid'
SELECT flights.flightno FROM flights INNER JOIN airports ON flights.destairport = airports.airportcode WHERE airports.airportname = 'APG' AND flights.airline = 'uid'
SELECT flights.flightno FROM flights INNER JOIN airports ON flights.destairport = airports.airportcode WHERE airports.airportname = 'APG' AND flights.airline = 'uid'",SELECT flights.flightno FROM flights INNER JOIN airports ON flights.destairport = airports.airportcode WHERE airports.airportname = 'APG' AND flights.airline = 'uid'
636,16,What is the maximum capacity and the average of all stadiums ?,concert_singer,medium,"select max(capacity), average from stadium",7,"SELECT MAX(capacity) AS max_capacity, AVG(capacity) AS avg_capacity FROM stadium
SELECT MAX(capacity), AVG(capacity) FROM stadium
SELECT MAX(capacity) AS max_capacity, AVG(capacity) AS avg_capacity FROM stadium
SELECT MAX(capacity), AVG(capacity) FROM stadium
SELECT MAX(capacity), AVG(capacity) FROM stadium
SELECT MAX(capacity), AVG(capacity) FROM stadium
SELECT MAX(capacity), AVG(capacity) FROM stadium","SELECT MAX(capacity), AVG(capacity) FROM stadium"
637,875,Count the number of high schoolers in grades 9 or 10.,network_1,medium,SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10,7,"SELECT COUNT(*) FROM highschooler WHERE grade IN (9, 10)
SELECT COUNT(*) FROM highschooler WHERE grade IN (9, 10)
SELECT COUNT(*) FROM highschooler WHERE grade IN (9, 10)
SELECT COUNT(*) FROM highschooler WHERE grade IN (9, 10)
SELECT COUNT(*) FROM highschooler WHERE grade IN (9, 10)
SELECT COUNT(*) FROM highschooler WHERE grade IN (9, 10)
SELECT COUNT(*) FROM highschooler WHERE grade IN (9, 10)","SELECT COUNT(*) FROM highschooler WHERE grade IN (9, 10)"
638,313,Show ids for all templates that are used by more than one document.,cre_Doc_Template_Mgt,easy,SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1,7,"SELECT templates.template_id  FROM templates  JOIN documents ON templates.template_id = documents.template_id  GROUP BY templates.template_id  HAVING COUNT(documents.document_id) > 1
SELECT templates.template_id  FROM templates  JOIN documents ON templates.template_id = documents.template_id  GROUP BY templates.template_id  HAVING COUNT(documents.document_id) > 1
SELECT templates.template_id  FROM templates  JOIN documents ON templates.template_id = documents.template_id  GROUP BY templates.template_id  HAVING COUNT(documents.document_id) > 1
SELECT templates.template_id  FROM templates  JOIN documents ON templates.template_id = documents.template_id  GROUP BY templates.template_id  HAVING COUNT(documents.document_id) > 1
SELECT templates.template_id  FROM templates  JOIN documents ON templates.template_id = documents.template_id  GROUP BY templates.template_id  HAVING COUNT(documents.document_id) > 1
SELECT templates.template_id  FROM templates  JOIN documents ON templates.template_id = documents.template_id  GROUP BY templates.template_id  HAVING COUNT(documents.document_id) > 1
SELECT templates.template_id  FROM templates  JOIN documents ON templates.template_id = documents.template_id  GROUP BY templates.template_id  HAVING COUNT(documents.document_id) > 1",SELECT templates.template_id  FROM templates  JOIN documents ON templates.template_id = documents.template_id  GROUP BY templates.template_id  HAVING COUNT(documents.document_id) > 1
639,422,What is the name of the museum that had no visitor yet?,museum_visit,hard,SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit),7,"SELECT museum.name  FROM museum  LEFT JOIN visit ON museum.museum_id = visit.museum_id  WHERE visit.visitor_id IS NULL
SELECT museum.name  FROM museum  LEFT JOIN visit ON museum.museum_id = visit.museum_id  WHERE visit.visitor_id IS NULL
SELECT museum.name  FROM museum  LEFT JOIN visit ON museum.museum_id = visit.museum_id  WHERE visit.visitor_id IS NULL
SELECT museum.name  FROM museum  LEFT JOIN visit ON museum.museum_id = visit.museum_id  WHERE visit.visitor_id IS NULL
SELECT museum.name  FROM museum  LEFT JOIN visit ON museum.museum_id = visit.museum_id  WHERE visit.visitor_id IS NULL
SELECT museum.name  FROM museum  LEFT JOIN visit ON museum.museum_id = visit.museum_id  WHERE visit.visitor_id IS NULL
SELECT museum.name  FROM museum  LEFT JOIN visit ON museum.museum_id = visit.museum_id  WHERE visit.visitor_id IS NULL",SELECT museum.name  FROM museum  LEFT JOIN visit ON museum.museum_id = visit.museum_id  WHERE visit.visitor_id IS NULL
