Unnamed: 0,Qid,Question,Db_Id,hardness,Query Gold,Repeated,Query Generated,Most Frequent Query,Exact Match,Execution Accuracy
0,550,What are the last name of the students who live in North Carolina but have not registered in any degree programs?,student_transcripts_tracking,extra,SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id,7,"SELECT s.last_name FROM students s JOIN addresses a ON s.current_address_id = a.address_id WHERE a.state_province_county = 'North Carolina' AND s.student_id NOT IN (     SELECT se.student_id     FROM student_enrolment se     JOIN degree_programs dp ON se.
SELECT s.last_name FROM students s JOIN addresses a ON s.current_address_id = a.address_id WHERE a.state_province_county = 'North Carolina' AND s.student_id NOT IN (     SELECT se.student_id     FROM student_enrolment se     JOIN degree_programs dp ON se.
SELECT s.last_name FROM students s JOIN addresses a ON s.current_address_id = a.address_id WHERE a.state_province_county = 'North Carolina' AND s.student_id NOT IN (     SELECT se.student_id     FROM student_enrolment se     JOIN degree_programs dp ON se.
SELECT s.last_name FROM students s JOIN addresses a ON s.current_address_id = a.address_id WHERE a.state_province_county = 'North Carolina' AND s.student_id NOT IN (     SELECT se.student_id     FROM student_enrolment se     JOIN degree_programs dp ON se
SELECT s.last_name FROM students s JOIN addresses a ON s.current_address_id = a.address_id WHERE a.state_province_county = 'North Carolina' AND s.student_id NOT IN (     SELECT se.student_id     FROM student_enrolment se     JOIN degree_programs dp ON se.
SELECT s.last_name FROM students s JOIN addresses a ON s.current_address_id = a.address_id WHERE a.state_province_county = 'North Carolina' AND s.student_id NOT IN (     SELECT se.student_id     FROM student_enrolment se     JOIN degree_programs dp ON se.
SELECT s.last_name FROM students s JOIN addresses a ON s.current_address_id = a.address_id WHERE a.state_province_county = 'North Carolina' AND s.student_id NOT IN (     SELECT se.student_id     FROM student_enrolment se     JOIN degree_programs dp ON se.",SELECT s.last_name FROM students s JOIN addresses a ON s.current_address_id = a.address_id WHERE a.state_province_county = 'North Carolina' AND s.student_id NOT IN (     SELECT se.student_id     FROM student_enrolment se     JOIN degree_programs dp ON se.,0.0,0.0
1,976,How much does the most recent treatment cost?,dog_kennels,medium,SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1,7,"SELECT MAX(cost_of_treatment) FROM treatments
SELECT MAX(cost_of_treatment) FROM treatments
SELECT MAX(cost_of_treatment) FROM treatments
SELECT MAX(cost_of_treatment) FROM treatments
SELECT MAX(cost_of_treatment) FROM treatments
SELECT MAX(cost_of_treatment) FROM treatments
SELECT MAX(cost_of_treatment) FROM treatments",SELECT MAX(cost_of_treatment) FROM treatments,0.0,0.0
2,499,What are the ids and names of the battles that led to more than 10 people killed in total.,battle_death,hard,"SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10",7,"SELECT id, name FROM battle WHERE killed > 10
SELECT id, name FROM battle WHERE killed > 10
SELECT id, name FROM battle WHERE killed > 10
SELECT id, name FROM battle WHERE killed > 10
SELECT id, name FROM battle WHERE killed > 10
SELECT id, name FROM battle WHERE killed > 10
SELECT id, name FROM battle WHERE killed > 10","SELECT id, name FROM battle WHERE killed > 10",0.0,0.0
3,238,Which airlines have departing flights from both APG and CVO airports?,flight_2,extra,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""APG"" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""CVO""",7,"SELECT DISTINCT f.airline FROM flights f JOIN airports a1 ON f.sourceairport = a1.airportcode AND a1.airportname = 'APG' JOIN airports a2 ON f.sourceairport = a2.airportcode AND a2.airportname = 'CVO' WHERE f.destairport IS NOT NULL
SELECT DISTINCT f.airline FROM flights f JOIN airports a1 ON f.sourceairport = a1.airportcode AND a1.airportname = 'APG' JOIN airports a2 ON f.sourceairport = a2.airportcode AND a2.airportname = 'CVO' WHERE f.destairport IS NOT NULL
SELECT DISTINCT f.airline FROM flights f JOIN airports a1 ON f.sourceairport = a1.airportcode AND a1.airportname = 'APG' JOIN airports a2 ON f.sourceairport = a2.airportcode AND a2.airportname = 'CVO' WHERE f.destairport IS NOT NULL
SELECT DISTINCT f.airline FROM flights f JOIN airports a1 ON f.sourceairport = a1.airportcode AND a1.airportname IN ('APG', 'CVO') JOIN airports a2 ON f.destairport = a2.airportcode AND a2.airportname IN ('APG', 'CVO') WHERE f.sourceairport IN (SELECT airportcode FROM airports WHERE airportname IN ('APG', 'CVO')) AND f.destairport IN (SELECT airportcode FROM airports WHERE airportname IN ('APG', 'CVO')) 
SELECT DISTINCT f.airline FROM flights f JOIN airports a1 ON f.sourceairport = a1.airportcode AND a1.airportname IN ('APG', 'CVO') JOIN airports a2 ON f.destairport = a2.airportcode AND a2.airportname IN ('APG', 'CVO') WHERE f.sourceairport IN (SELECT airportcode FROM airports WHERE airportname IN ('APG', 'CVO')) AND f.destairport IN (SELECT airportcode FROM airports WHERE airportname IN ('APG', 'CVO')) 
SELECT DISTINCT f.airline FROM flights f JOIN airports a1 ON f.sourceairport = a1.airportcode AND a1.airportname = 'APG' JOIN airports a2 ON f.sourceairport = a2.airportcode AND a2.airportname = 'CVO' WHERE f.destairport IS NOT NULL
SELECT DISTINCT f.airline FROM flights f JOIN airports a1 ON f.sourceairport = a1.airportcode AND a1.airportname = 'APG' JOIN airports a2 ON f.sourceairport = a2.airportcode AND a2.airportname = 'CVO' WHERE f.destairport IS NOT NULL",SELECT DISTINCT f.airline FROM flights f JOIN airports a1 ON f.sourceairport = a1.airportcode AND a1.airportname = 'APG' JOIN airports a2 ON f.sourceairport = a2.airportcode AND a2.airportname = 'CVO' WHERE f.destairport IS NOT NULL,0.0,1.0
4,445,Find the name of tourney that has more than 10 matches.,wta_1,easy,SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10,7,"SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(match_num) > 10
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(match_num) > 10
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(match_num) > 10
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(match_num) > 10
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(match_num) > 10
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(match_num) > 10
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(match_num) > 10",SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(match_num) > 10,0.0,1.0
5,844,Show the name of the conductor that has conducted the most number of orchestras.,orchestra,extra,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1,7,"SELECT c.name FROM conductor c JOIN orchestra o ON c.conductor_id = o.conductor_id GROUP BY c.conductor_id ORDER BY COUNT(o.orchestra_id) DESC LIMIT 1
SELECT c.name FROM conductor c JOIN orchestra o ON c.conductor_id = o.conductor_id GROUP BY c.conductor_id ORDER BY COUNT(o.orchestra_id) DESC LIMIT 1
SELECT c.name FROM conductor c JOIN orchestra o ON c.conductor_id = o.conductor_id GROUP BY c.conductor_id ORDER BY COUNT(o.orchestra_id) DESC LIMIT 1
SELECT c.name FROM conductor c JOIN orchestra o ON c.conductor_id = o.conductor_id GROUP BY c.conductor_id ORDER BY COUNT(o.orchestra_id) DESC LIMIT 1
SELECT c.name FROM conductor c JOIN orchestra o ON c.conductor_id = o.conductor_id GROUP BY c.conductor_id ORDER BY COUNT(o.orchestra_id) DESC LIMIT 1
SELECT c.name FROM conductor c JOIN orchestra o ON c.conductor_id = o.conductor_id GROUP BY c.conductor_id ORDER BY COUNT(o.orchestra_id) DESC LIMIT 1
SELECT c.name FROM conductor c JOIN orchestra o ON c.conductor_id = o.conductor_id GROUP BY c.conductor_id ORDER BY COUNT(o.orchestra_id) DESC LIMIT 1",SELECT c.name FROM conductor c JOIN orchestra o ON c.conductor_id = o.conductor_id GROUP BY c.conductor_id ORDER BY COUNT(o.orchestra_id) DESC LIMIT 1,0.0,1.0
6,205,How many flights have destination ATO?,flight_2,easy,"SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  ""ATO""",7,"SELECT COUNT(*) FROM flights WHERE destairport = 'ATO'
SELECT COUNT(*) FROM flights WHERE destairport = 'ATO'
SELECT COUNT(*) FROM flights WHERE destairport = 'ATO'
SELECT COUNT(*) FROM flights WHERE destairport = 'ATO'
SELECT COUNT(*) FROM flights WHERE destairport = 'ATO'
SELECT COUNT(*) FROM flights WHERE destairport = 'ATO'
SELECT COUNT(*) FROM flights WHERE destairport = 'ATO'",SELECT COUNT(*) FROM flights WHERE destairport = 'ATO',True,1.0
7,427,Find the number of visitors who did not visit any museum opened after 2010.,museum_visit,extra,SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010),7,"SELECT COUNT(DISTINCT visitor.id) FROM visitor LEFT JOIN visit ON visitor.id = visit.visitor_id LEFT JOIN museum ON visit.museum_id = museum.museum_id WHERE museum.open_year <= 2010 OR visit.museum_id IS NULL
SELECT COUNT(DISTINCT visitor.id)  FROM visitor  LEFT JOIN visit ON visitor.id = visit.visitor_id  LEFT JOIN museum ON visit.museum_id = museum.museum_id  WHERE museum.open_year <= 2010 OR visit.museum_id IS NULL
SELECT COUNT(DISTINCT visitor.id) FROM visitor LEFT JOIN visit ON visitor.id = visit.visitor_id LEFT JOIN museum ON visit.museum_id = museum.museum_id WHERE museum.open_year <= 2010 OR visit.museum_id IS NULL
SELECT COUNT(DISTINCT visitor.id) FROM visitor LEFT JOIN visit ON visitor.id = visit.visitor_id LEFT JOIN museum ON visit.museum_id = museum.museum_id WHERE museum.open_year <= 2010 OR visit.museum_id IS NULL
SELECT COUNT(DISTINCT visitor.id) FROM visitor LEFT JOIN visit ON visitor.id = visit.visitor_id LEFT JOIN museum ON visit.museum_id = museum.museum_id WHERE museum.open_year <= 2010 OR visit.museum_id IS NULL
SELECT COUNT(DISTINCT visitor.id) FROM visitor LEFT JOIN visit ON visitor.id = visit.visitor_id LEFT JOIN museum ON visit.museum_id = museum.museum_id WHERE museum.open_year <= 2010 OR visit.museum_id IS NULL
SELECT COUNT(DISTINCT visitor.id) FROM visitor LEFT JOIN visit ON visitor.id = visit.visitor_id LEFT JOIN museum ON visit.museum_id = museum.museum_id WHERE museum.open_year <= 2010 OR visit.museum_id IS NULL",SELECT COUNT(DISTINCT visitor.id) FROM visitor LEFT JOIN visit ON visitor.id = visit.visitor_id LEFT JOIN museum ON visit.museum_id = museum.museum_id WHERE museum.open_year <= 2010 OR visit.museum_id IS NULL,0,0.0
8,919,Find the states where both owners and professionals live.,dog_kennels,hard,SELECT state FROM Owners INTERSECT SELECT state FROM Professionals,7,"SELECT DISTINCT p.state FROM professionals p JOIN owners o ON p.state = o.state WHERE p.state IS NOT NULL AND o.state IS NOT NULL
SELECT DISTINCT p.state FROM professionals p JOIN owners o ON p.state = o.state WHERE p.state IS NOT NULL AND o.state IS NOT NULL
SELECT DISTINCT p.state FROM professionals p JOIN owners o ON p.state = o.state ORDER BY p.state
SELECT DISTINCT p.state FROM professionals p JOIN owners o ON p.state = o.state ORDER BY p.state
SELECT DISTINCT p.state FROM professionals p JOIN owners o ON p.state = o.state ORDER BY p.state
SELECT DISTINCT p.state FROM professionals p JOIN owners o ON p.state = o.state
SELECT DISTINCT p.state FROM professionals p JOIN owners o ON p.state = o.state WHERE p.state IS NOT NULL AND o.state IS NOT NULL",SELECT DISTINCT p.state FROM professionals p JOIN owners o ON p.state = o.state WHERE p.state IS NOT NULL AND o.state IS NOT NULL,0,1.0
9,71,Find the average and maximum age for each type of pet.,pets_1,medium,"SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype",7,"SELECT pettype, AVG(pet_age) AS average_age, MAX(pet_age) AS maximum_age FROM pets GROUP BY pettype
SELECT pettype, AVG(pet_age) AS average_age, MAX(pet_age) AS maximum_age FROM pets GROUP BY pettype
SELECT pettype, AVG(pet_age) AS average_age, MAX(pet_age) AS maximum_age FROM pets GROUP BY pettype
SELECT pettype, AVG(pet_age) AS average_age, MAX(pet_age) AS maximum_age FROM pets GROUP BY pettype
SELECT pettype, AVG(pet_age) AS average_age, MAX(pet_age) AS maximum_age FROM pets GROUP BY pettype
SELECT pettype, AVG(pet_age) AS average_age, MAX(pet_age) AS maximum_age FROM pets GROUP BY pettype
SELECT pettype, AVG(pet_age) AS average_age, MAX(pet_age) AS maximum_age FROM pets GROUP BY pettype","SELECT pettype, AVG(pet_age) AS average_age, MAX(pet_age) AS maximum_age FROM pets GROUP BY pettype",0,0.0
10,459,Find the first name and country code of the player who did the most number of tours.,wta_1,hard,"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1",7,"SELECT p.first_name, p.country_code FROM players p JOIN rankings r ON p.player_id = r.player_id ORDER BY r.tours DESC LIMIT 1
SELECT p.first_name, p.country_code FROM players p JOIN rankings r ON p.player_id = r.player_id ORDER BY r.tours DESC LIMIT 1
SELECT p.first_name, p.country_code FROM players p JOIN rankings r ON p.player_id = r.player_id ORDER BY r.tours DESC LIMIT 1
SELECT p.first_name, p.country_code FROM players p JOIN rankings r ON p.player_id = r.player_id ORDER BY r.tours DESC LIMIT 1
SELECT p.first_name, p.country_code FROM players p JOIN rankings r ON p.player_id = r.player_id ORDER BY r.tours DESC LIMIT 1
SELECT p.first_name, p.country_code FROM players p JOIN rankings r ON p.player_id = r.player_id ORDER BY r.tours DESC LIMIT 1
SELECT p.first_name, p.country_code FROM players p JOIN rankings r ON p.player_id = r.player_id ORDER BY r.tours DESC LIMIT 1","SELECT p.first_name, p.country_code FROM players p JOIN rankings r ON p.player_id = r.player_id ORDER BY r.tours DESC LIMIT 1",0,0.0
11,770,What is the total number of unique official languages spoken in the countries that are founded before 1930?,world_1,medium,"SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  ""T""",7,"SELECT COUNT(DISTINCT language) FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE indepyear < 1930)
SELECT COUNT(DISTINCT language) FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE indepyear < 1930)
SELECT COUNT(DISTINCT language) FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE indepyear < 1930)
SELECT COUNT(DISTINCT language) FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE indepyear < 1930)
SELECT COUNT(DISTINCT language) FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE indepyear < 1930)
SELECT COUNT(DISTINCT language) FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE indepyear < 1930)
SELECT COUNT(DISTINCT language) FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE indepyear < 1930)",SELECT COUNT(DISTINCT language) FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE indepyear < 1930),0,0.0
12,7,What are the names and release years for all the songs of the youngest singer?,concert_singer,medium,"SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1",7,"SELECT singer.name, singer.song_release_year FROM singer WHERE singer.age = (SELECT MIN(age) FROM singer)
SELECT s.name, s.song_release_year FROM singer s JOIN singer_in_concert sic ON s.singer_id = sic.singer_id JOIN concert c ON sic.concert_id = c.concert_id WHERE s.age = (SELECT MIN(age) FROM singer)
SELECT s.name, s.song_release_year FROM singer s JOIN singer_in_concert sic ON s.singer_id = sic.singer_id JOIN concert c ON sic.concert_id = c.concert_id WHERE s.age = (SELECT MIN(age) FROM singer)
SELECT s.name, s.song_release_year FROM singer s JOIN singer_in_concert sic ON s.singer_id = sic.singer_id JOIN concert c ON sic.concert_id = c.concert_id WHERE s.age = (SELECT MIN(age) FROM singer)
SELECT s.name, s.song_release_year FROM singer s JOIN singer_in_concert sic ON s.singer_id = sic.singer_id JOIN concert c ON sic.concert_id = c.concert_id WHERE s.age = (SELECT MIN(age) FROM singer)
SELECT singer.name, singer.song_release_year FROM singer WHERE singer.age = (SELECT MIN(age) FROM singer)
SELECT s.name, s.song_release_year FROM singer s JOIN singer_in_concert sic ON s.singer_id = sic.singer_id JOIN concert c ON sic.concert_id = c.concert_id WHERE s.age = (SELECT MIN(age) FROM singer)","SELECT s.name, s.song_release_year FROM singer s JOIN singer_in_concert sic ON s.singer_id = sic.singer_id JOIN concert c ON sic.concert_id = c.concert_id WHERE s.age = (SELECT MIN(age) FROM singer)",0,0.0
13,558,"What is the first, middle, and last name of the earliest school graduate?",student_transcripts_tracking,medium,"SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1",7,"SELECT first_name, middle_name, last_name  FROM students  ORDER BY date_first_registered  LIMIT 1
SELECT first_name, middle_name, last_name  FROM students  ORDER BY date_left  LIMIT 1
SELECT first_name, middle_name, last_name  FROM students  ORDER BY date_left  LIMIT 1
SELECT first_name, middle_name, last_name  FROM students  WHERE date_left IS NULL  ORDER BY date_first_registered  LIMIT 1
SELECT first_name, middle_name, last_name  FROM students  ORDER BY date_left  LIMIT 1
SELECT first_name, middle_name, last_name  FROM students  ORDER BY date_first_registered  LIMIT 1
SELECT first_name, middle_name, last_name  FROM students  ORDER BY date_first_registered  LIMIT 1","SELECT first_name, middle_name, last_name  FROM students  ORDER BY date_first_registered  LIMIT 1",0,1.0
14,586,What are the titles of the cartoons sorted alphabetically?,tvshow,easy,SELECT Title FROM Cartoon ORDER BY title,7,"SELECT title FROM cartoon ORDER BY title ASC
SELECT title FROM cartoon ORDER BY title ASC
SELECT title FROM cartoon ORDER BY title ASC
SELECT title FROM cartoon ORDER BY title ASC
SELECT title FROM cartoon ORDER BY title ASC
SELECT title FROM cartoon ORDER BY title ASC
SELECT title FROM cartoon ORDER BY title ASC",SELECT title FROM cartoon ORDER BY title ASC,True,1.0
15,894,Show ids of all students who do not have any friends.,network_1,hard,SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend,7,"SELECT id FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend) AND id NOT IN (SELECT likes.student_id FROM likes)
SELECT id FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend) AND id NOT IN (SELECT likes.student_id FROM likes)
SELECT id FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend) AND id NOT IN (SELECT likes.student_id FROM likes)
SELECT id FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend) AND id NOT IN (SELECT liked_id FROM likes)
SELECT id FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend) AND id NOT IN (SELECT likes.student_id FROM likes)
SELECT id FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend) AND id NOT IN (SELECT likes.student_id FROM likes)
SELECT id FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend) AND id NOT IN (SELECT likes.student_id FROM likes)",SELECT id FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend) AND id NOT IN (SELECT likes.student_id FROM likes),0,0.0
16,177,What are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model?,car_1,extra,"SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';",7,"SELECT c.countryid, c.countryname FROM countries c JOIN car_makers cm ON c.countryid = cm.country WHERE cm.country IS NOT NULL GROUP BY c.countryid, c.countryname HAVING COUNT(DISTINCT cm.id) > 3 OR EXISTS (     SELECT 1     FROM model_list ml     JOIN car_names cn ON ml.model = cn.model     WHERE cn.make = 'fiat' AND ml.maker = cm.id )
SELECT c.countryid, c.countryname FROM countries c JOIN car_makers cm ON c.countryid = cm.country WHERE cm.country IS NOT NULL GROUP BY c.countryid, c.countryname HAVING COUNT(DISTINCT cm.id) > 3 OR EXISTS (     SELECT 1     FROM model_list ml     JOIN car_names cn ON ml.model = cn.model     WHERE cn.make = 'fiat' AND ml.maker = cm.id )
SELECT c.countryid, c.countryname FROM countries c JOIN car_makers cm ON c.countryid = cm.country WHERE cm.country IS NOT NULL GROUP BY c.countryid, c.countryname HAVING COUNT(DISTINCT cm.id) > 3 OR EXISTS (     SELECT 1     FROM model_list ml     JOIN car_names cn ON ml.model = cn.model     WHERE cn.make = 'fiat' AND ml.maker = cm.id )
SELECT c.countryid, c.countryname FROM countries c JOIN car_makers cm ON c.countryid = cm.country WHERE cm.country IS NOT NULL GROUP BY c.countryid, c.countryname HAVING COUNT(DISTINCT cm.id) > 3 OR EXISTS (     SELECT 1     FROM model_list ml     JOIN car_names cn ON ml.model = cn.model     WHERE cn.make = 'fiat' AND ml.maker = cm.id )
SELECT c.countryid, c.countryname FROM countries c JOIN car_makers cm ON c.countryid = cm.country WHERE cm.country IS NOT NULL GROUP BY c.countryid, c.countryname HAVING COUNT(DISTINCT cm.id) > 3 OR EXISTS (     SELECT 1     FROM model_list ml     JOIN car_names cn ON ml.model = cn.model     WHERE cn.make = 'fiat' AND ml.maker = cm.id )
SELECT c.countryid, c.countryname FROM countries c JOIN car_makers cm ON c.countryid = cm.country WHERE cm.country IS NOT NULL GROUP BY c.countryid, c.countryname HAVING COUNT(DISTINCT cm.id) > 3 OR EXISTS (     SELECT 1     FROM model_list ml     JOIN car_names cn ON ml.model = cn.model     WHERE cn.make = 'fiat' AND ml.maker = cm.id )
SELECT c.countryid, c.countryname FROM countries c JOIN car_makers cm ON c.countryid = cm.country WHERE cm.country IS NOT NULL GROUP BY c.countryid, c.countryname HAVING COUNT(DISTINCT cm.id) > 3 OR EXISTS (     SELECT 1     FROM model_list ml     JOIN car_names cn ON ml.model = cn.model     WHERE cn.make = 'fiat' AND ml.maker = cm.id )","SELECT c.countryid, c.countryname FROM countries c JOIN car_makers cm ON c.countryid = cm.country WHERE cm.country IS NOT NULL GROUP BY c.countryid, c.countryname HAVING COUNT(DISTINCT cm.id) > 3 OR EXISTS (     SELECT 1     FROM model_list ml     JOIN car_names cn ON ml.model = cn.model     WHERE cn.make = 'fiat' AND ml.maker = cm.id )",0,0.0
17,918,Which states have both owners and professionals living there?,dog_kennels,hard,SELECT state FROM Owners INTERSECT SELECT state FROM Professionals,7,"SELECT DISTINCT p.state FROM professionals p JOIN owners o ON p.state = o.state WHERE p.state IS NOT NULL AND o.state IS NOT NULL
SELECT DISTINCT p.state FROM professionals p JOIN owners o ON p.state = o.state WHERE p.state IS NOT NULL AND o.state IS NOT NULL
SELECT DISTINCT p.state FROM professionals p JOIN owners o ON p.state = o.state WHERE p.state IS NOT NULL AND o.state IS NOT NULL
SELECT DISTINCT p.state FROM professionals p JOIN owners o ON p.state = o.state WHERE p.state IS NOT NULL AND o.state IS NOT NULL
SELECT DISTINCT state FROM owners JOIN professionals ON owners.state = professionals.state
SELECT DISTINCT state FROM owners JOIN professionals ON owners.state = professionals.state
SELECT DISTINCT p.state FROM professionals p JOIN owners o ON p.state = o.state",SELECT DISTINCT p.state FROM professionals p JOIN owners o ON p.state = o.state WHERE p.state IS NOT NULL AND o.state IS NOT NULL,0,1.0
18,103,Which distinct car models are the produced after 1980?,car_1,hard,SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;,7,"SELECT DISTINCT model_list.model FROM model_list JOIN car_names ON model_list.modelid = car_names.makeid JOIN cars_data ON car_names.model = cars_data.id WHERE cars_data.year > 1980
SELECT DISTINCT model_list.model FROM model_list JOIN car_names ON model_list.modelid = car_names.makeid JOIN cars_data ON car_names.model = cars_data.id WHERE cars_data.year > 1980
SELECT DISTINCT model_list.model FROM model_list JOIN car_names ON model_list.modelid = car_names.makeid JOIN cars_data ON car_names.model = cars_data.id WHERE cars_data.year > 1980
SELECT DISTINCT model_list.model FROM model_list JOIN car_names ON model_list.modelid = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.year > 1980
SELECT DISTINCT model_list.model FROM model_list JOIN car_names ON model_list.modelid = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.year > 1980
SELECT DISTINCT model_list.model FROM model_list JOIN car_names ON model_list.modelid = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.year > 1980
SELECT DISTINCT model_list.model FROM model_list JOIN car_names ON model_list.modelid = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.year > 1980",SELECT DISTINCT model_list.model FROM model_list JOIN car_names ON model_list.modelid = car_names.model JOIN cars_data ON car_names.makeid = cars_data.id WHERE cars_data.year > 1980,True,0.0
19,307,How many documents are using the template with type code 'PPT'?,cre_Doc_Template_Mgt,medium,SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT',7,"SELECT COUNT(*) FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE templates.template_type_code = 'PPT'
SELECT COUNT(*) FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE templates.template_type_code = 'PPT'
SELECT COUNT(*) FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE templates.template_type_code = 'PPT'
SELECT COUNT(*) FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE templates.template_type_code = 'PPT'
SELECT COUNT(*) FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE templates.template_type_code = 'PPT'
SELECT COUNT(*) FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE templates.template_type_code = 'PPT'
SELECT COUNT(*) FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE templates.template_type_code = 'PPT'",SELECT COUNT(*) FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE templates.template_type_code = 'PPT',True,1.0
20,99,Find the name of the makers that produced some cars in the year of 1970?,car_1,extra,SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';,7,"SELECT DISTINCT cm.maker FROM car_makers cm JOIN cars_data cd ON cm.id = cd.id WHERE cd.year = 1970
SELECT DISTINCT cm.maker FROM car_makers cm JOIN cars_data cd ON cm.id = cd.id WHERE cd.year = 1970
SELECT DISTINCT cm.maker FROM car_makers cm JOIN cars_data cd ON cm.id = cd.id WHERE cd.year = 1970
SELECT DISTINCT cm.maker FROM car_makers cm JOIN cars_data cd ON cm.id = cd.id WHERE cd.year = 1970
SELECT DISTINCT cm.maker FROM car_makers cm JOIN cars_data cd ON cm.id = cd.id WHERE cd.year = 1970
SELECT DISTINCT cm.maker FROM car_makers cm JOIN cars_data cd ON cm.id = cd.id WHERE cd.year = 1970
SELECT DISTINCT cm.maker FROM car_makers cm JOIN cars_data cd ON cm.id = cd.id WHERE cd.year = 1970",SELECT DISTINCT cm.maker FROM car_makers cm JOIN cars_data cd ON cm.id = cd.id WHERE cd.year = 1970,0,0.0
21,265,Which cities do more than one employee under age 30 come from?,employee_hire_evaluation,medium,SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1,7,"SELECT city FROM employee WHERE age < 30 GROUP BY city HAVING COUNT(employee_id) > 1
SELECT city FROM employee WHERE age < 30 GROUP BY city HAVING COUNT(employee_id) > 1
SELECT city FROM employee WHERE age < 30 GROUP BY city HAVING COUNT(employee_id) > 1
SELECT city FROM employee JOIN hiring ON employee.employee_id = hiring.employee_id WHERE age < 30 GROUP BY city HAVING COUNT(employee_id) > 1
SELECT city FROM employee WHERE age < 30 GROUP BY city HAVING COUNT(employee_id) > 1
SELECT city FROM employee WHERE age < 30 GROUP BY city HAVING COUNT(employee_id) > 1
SELECT city FROM employee WHERE age < 30 GROUP BY city HAVING COUNT(employee_id) > 1",SELECT city FROM employee WHERE age < 30 GROUP BY city HAVING COUNT(employee_id) > 1,0,1.0
22,335,What the smallest version number and its template type code?,cre_Doc_Template_Mgt,medium,"SELECT min(Version_Number) ,  template_type_code FROM Templates",7,"SELECT MIN(version_number), template_type_code FROM templates GROUP BY template_type_code
SELECT MIN(version_number), template_type_code FROM templates GROUP BY template_type_code
SELECT MIN(version_number), template_type_code FROM templates GROUP BY template_type_code
SELECT MIN(version_number), template_type_code FROM templates JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code
SELECT MIN(version_number), template_type_code FROM templates GROUP BY template_type_code
SELECT MIN(version_number), template_type_code FROM templates JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code
SELECT MIN(version_number), template_type_code FROM templates GROUP BY template_type_code","SELECT MIN(version_number), template_type_code FROM templates GROUP BY template_type_code",0,0.0
23,263,What is the number of employees from each city?,employee_hire_evaluation,medium,"SELECT count(*) ,  city FROM employee GROUP BY city",7,"SELECT city, COUNT(employee_id) AS number_of_employees FROM employee GROUP BY city
SELECT city, COUNT(employee_id) AS number_of_employees FROM employee GROUP BY city
SELECT city, COUNT(employee_id) AS number_of_employees FROM employee GROUP BY city
SELECT city, COUNT(employee_id) AS number_of_employees FROM employee GROUP BY city
SELECT city, COUNT(employee_id) AS number_of_employees FROM employee GROUP BY city
SELECT city, COUNT(employee_id) AS number_of_employees FROM employee GROUP BY city
SELECT city, COUNT(employee_id) AS number_of_employees FROM employee GROUP BY city","SELECT city, COUNT(employee_id) AS number_of_employees FROM employee GROUP BY city",0,0.0
24,115,How many car models are produced in the usa?,car_1,hard,SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';,7,"SELECT COUNT(*) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = 'USA'
SELECT COUNT(DISTINCT model_list.model) AS car_models_in_usa FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = 'usa'
SELECT COUNT(DISTINCT model_list.model) AS car_models_in_usa FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = 'usa'
SELECT COUNT(DISTINCT model_list.model) AS car_models_in_usa FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = 'usa'
SELECT COUNT(DISTINCT model_list.model) AS car_models_in_usa FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = 'usa'
SELECT COUNT(DISTINCT model_list.model) AS car_models_in_usa FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = 'usa'
SELECT COUNT(DISTINCT model_list.model) AS car_models_in_usa FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = 'usa'",SELECT COUNT(DISTINCT model_list.model) AS car_models_in_usa FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = 'usa',0,0.0
25,332,Return the type code of the template type that the most templates belong to.,cre_Doc_Template_Mgt,hard,SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1,7,"SELECT template_type_code, COUNT(*) AS type_count FROM templates GROUP BY template_type_code ORDER BY type_count DESC LIMIT 1
SELECT template_type_code, COUNT(*) AS type_count FROM templates GROUP BY template_type_code ORDER BY type_count DESC LIMIT 1
SELECT template_type_code, COUNT(*) AS type_count FROM templates GROUP BY template_type_code ORDER BY type_count DESC LIMIT 1
SELECT template_type_code, COUNT(*) AS type_count FROM templates GROUP BY template_type_code ORDER BY type_count DESC LIMIT 1
SELECT template_type_code, COUNT(*) AS type_count FROM templates GROUP BY template_type_code ORDER BY type_count DESC LIMIT 1
SELECT template_type_code, COUNT(*) AS type_count FROM templates GROUP BY template_type_code ORDER BY type_count DESC LIMIT 1
SELECT template_type_code, COUNT(*) as type_count FROM templates GROUP BY template_type_code ORDER BY type_count DESC LIMIT 1","SELECT template_type_code, COUNT(*) AS type_count FROM templates GROUP BY template_type_code ORDER BY type_count DESC LIMIT 1",0,0.0
26,180,What country is Jetblue Airways affiliated with?,flight_2,easy,"SELECT Country FROM AIRLINES WHERE Airline  =  ""JetBlue Airways""",7,"SELECT country FROM airlines WHERE airline = 'Jetblue Airways'
SELECT country FROM airlines WHERE airline = 'Jetblue Airways'
SELECT country FROM airlines WHERE airline = 'Jetblue Airways'
SELECT country FROM airlines WHERE airline = 'Jetblue Airways'
SELECT country FROM airlines WHERE airline = 'Jetblue Airways'
SELECT country FROM airlines WHERE airline = 'Jetblue Airways'
SELECT country FROM airlines WHERE airline = 'Jetblue Airways'",SELECT country FROM airlines WHERE airline = 'Jetblue Airways',True,0.0
27,108,What is the name of the country with the most car makers?,car_1,extra,SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;,7,"SELECT countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countryname ORDER BY COUNT(maker) DESC LIMIT 1
SELECT countryname  FROM countries  JOIN car_makers ON countries.countryid = car_makers.country  GROUP BY country  ORDER BY COUNT(*) DESC  LIMIT 1
SELECT countryname  FROM countries  JOIN car_makers ON countries.countryid = car_makers.country  GROUP BY country  ORDER BY COUNT(*) DESC  LIMIT 1
SELECT countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countryname ORDER BY COUNT(maker) DESC LIMIT 1
SELECT countryname  FROM countries  JOIN car_makers ON countries.countryid = car_makers.country  GROUP BY country  ORDER BY COUNT(*) DESC  LIMIT 1
SELECT countryname  FROM countries  JOIN car_makers ON countries.countryid = car_makers.country  GROUP BY country  ORDER BY COUNT(*) DESC  LIMIT 1
SELECT countryname  FROM countries  JOIN car_makers ON countries.countryid = car_makers.country  GROUP BY country  ORDER BY COUNT(*) DESC  LIMIT 1",SELECT countryname  FROM countries  JOIN car_makers ON countries.countryid = car_makers.country  GROUP BY country  ORDER BY COUNT(*) DESC  LIMIT 1,0,1.0
28,286,Which shops run with no employees? Find the shop names,employee_hire_evaluation,hard,SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring),7,"SELECT s.name FROM shop s LEFT JOIN hiring h ON s.shop_id = h.shop_id LEFT JOIN employee e ON h.employee_id = e.employee_id WHERE e.employee_id IS NULL
SELECT s.name FROM shop s LEFT JOIN hiring h ON s.shop_id = h.shop_id LEFT JOIN employee e ON h.employee_id = e.employee_id WHERE e.employee_id IS NULL
SELECT s.name FROM shop s LEFT JOIN hiring h ON s.shop_id = h.shop_id LEFT JOIN employee e ON h.employee_id = e.employee_id WHERE e.employee_id IS NULL
SELECT s.name FROM shop s LEFT JOIN hiring h ON s.shop_id = h.shop_id LEFT JOIN employee e ON h.employee_id = e.employee_id WHERE e.employee_id IS NULL
SELECT s.name FROM shop s LEFT JOIN hiring h ON s.shop_id = h.shop_id LEFT JOIN employee e ON h.employee_id = e.employee_id WHERE e.employee_id IS NULL
SELECT s.name FROM shop s LEFT JOIN hiring h ON s.shop_id = h.shop_id LEFT JOIN employee e ON h.employee_id = e.employee_id WHERE e.employee_id IS NULL
SELECT s.name FROM shop s LEFT JOIN hiring h ON s.shop_id = h.shop_id LEFT JOIN employee e ON h.employee_id = e.employee_id WHERE e.employee_id IS NULL",SELECT s.name FROM shop s LEFT JOIN hiring h ON s.shop_id = h.shop_id LEFT JOIN employee e ON h.employee_id = e.employee_id WHERE e.employee_id IS NULL,0,1.0
29,741,Give the name of the nation that uses the greatest amount of languages.,world_1,extra,SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1,7,"SELECT name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.code ORDER BY COUNT(countrylanguage.language) DESC LIMIT 1
SELECT name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.code ORDER BY COUNT(countrylanguage.language) DESC LIMIT 1
SELECT name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.code ORDER BY COUNT(countrylanguage.language) DESC LIMIT 1
SELECT name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.code ORDER BY COUNT(countrylanguage.language) DESC LIMIT 1
SELECT name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.code ORDER BY COUNT(countrylanguage.language) DESC LIMIT 1
SELECT name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.code ORDER BY COUNT(countrylanguage.language) DESC LIMIT 1
SELECT name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.code ORDER BY COUNT(countrylanguage.language) DESC LIMIT 1",SELECT name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.code ORDER BY COUNT(countrylanguage.language) DESC LIMIT 1,0,0.0
30,762,"Find the name, population and expected life length of asian country with the largest area?",world_1,hard,"SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  ""Asia"" ORDER BY SurfaceArea DESC LIMIT 1",7,"SELECT name, population, lifeexpectancy FROM country WHERE continent = 'Asia' ORDER BY surfacearea DESC LIMIT 1
SELECT name, population, lifeexpectancy FROM country WHERE continent = 'Asia' ORDER BY surfacearea DESC LIMIT 1
SELECT name, population, lifeexpectancy FROM country WHERE continent = 'Asia' ORDER BY surfacearea DESC LIMIT 1
SELECT name, population, lifeexpectancy FROM country WHERE continent = 'Asia' ORDER BY surfacearea DESC LIMIT 1
SELECT name, population, lifeexpectancy FROM country WHERE continent = 'Asia' ORDER BY surfacearea DESC LIMIT 1
SELECT name, population, lifeexpectancy FROM country WHERE continent = 'Asia' ORDER BY surfacearea DESC LIMIT 1
SELECT name, population, lifeexpectancy FROM country WHERE continent = 'Asia' ORDER BY surfacearea DESC LIMIT 1","SELECT name, population, lifeexpectancy FROM country WHERE continent = 'Asia' ORDER BY surfacearea DESC LIMIT 1",True,1.0
31,515,Which department offers the most number of degrees? List department name and id.,student_transcripts_tracking,extra,"SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT department_name, department_id FROM departments ORDER BY (SELECT COUNT(*) FROM degree_programs WHERE departments.department_id = degree_programs.department_id) DESC LIMIT 1
SELECT department_name, department_id FROM departments ORDER BY (SELECT COUNT(*) FROM degree_programs WHERE departments.department_id = degree_programs.department_id) DESC LIMIT 1
SELECT department_name, department_id FROM departments ORDER BY (     SELECT COUNT(*)     FROM degree_programs     WHERE degree_programs.department_id = departments.department_id ) DESC LIMIT 1
SELECT department_name, department_id FROM departments ORDER BY (SELECT COUNT(*) FROM degree_programs WHERE departments.department_id = degree_programs.department_id) DESC LIMIT 1
SELECT department_name, department_id FROM departments ORDER BY (SELECT COUNT(*) FROM degree_programs WHERE departments.department_id = degree_programs.department_id) DESC LIMIT 1
SELECT department_name, department_id FROM departments ORDER BY (SELECT COUNT(*) FROM degree_programs WHERE departments.department_id = degree_programs.department_id) DESC LIMIT 1
SELECT department_name, department_id FROM departments ORDER BY (SELECT COUNT(*) FROM degree_programs WHERE departments.department_id = degree_programs.department_id) DESC LIMIT 1","SELECT department_name, department_id FROM departments ORDER BY (SELECT COUNT(*) FROM degree_programs WHERE departments.department_id = degree_programs.department_id) DESC LIMIT 1",0,1.0
32,326,Count the number of templates of the type CV.,cre_Doc_Template_Mgt,easy,"SELECT count(*) FROM Templates WHERE template_type_code  =  ""CV""",7,"SELECT COUNT(*) FROM templates WHERE template_type_code = 'CV'
SELECT COUNT(*) FROM templates WHERE template_type_code = 'CV'
SELECT COUNT(*) FROM templates WHERE template_type_code = 'CV'
SELECT COUNT(*) FROM templates WHERE template_type_code = 'CV'
SELECT COUNT(*) FROM templates WHERE template_type_code = 'CV'
SELECT COUNT(*) FROM templates WHERE template_type_code = 'CV'
SELECT COUNT(*) FROM templates WHERE template_type_code = 'CV'",SELECT COUNT(*) FROM templates WHERE template_type_code = 'CV',True,1.0
33,362,What are the details for the paragraph that includes the text 'Korea ' ?,cre_Doc_Template_Mgt,medium,select other_details from paragraphs where paragraph_text like 'korea',7,"SELECT paragraph_id, document_id, paragraph_text, other_details  FROM paragraphs  WHERE paragraph_text LIKE '%Korea%'
SELECT paragraph_id, document_id, paragraph_text, other_details  FROM paragraphs  WHERE paragraph_text LIKE '%Korea%'
SELECT paragraph_id, document_id, paragraph_text, other_details  FROM paragraphs  WHERE paragraph_text LIKE '%Korea%'
SELECT paragraph_id, document_id, paragraph_text, other_details  FROM paragraphs  WHERE paragraph_text LIKE '%Korea%'
SELECT paragraph_id, document_id, paragraph_text, other_details  FROM paragraphs  WHERE paragraph_text LIKE '%Korea%'
SELECT paragraph_id, document_id, paragraph_text, other_details  FROM paragraphs  WHERE paragraph_text LIKE '%Korea%'
SELECT paragraph_id, document_id, paragraph_text, other_details  FROM paragraphs  WHERE paragraph_text LIKE '%Korea%'","SELECT paragraph_id, document_id, paragraph_text, other_details  FROM paragraphs  WHERE paragraph_text LIKE '%Korea%'",0,0.0
34,709,What is the continent name which Anguilla belongs to?,world_1,easy,"SELECT Continent FROM country WHERE Name  =  ""Anguilla""",7,"SELECT continent FROM country WHERE name = 'Anguilla'
SELECT continent FROM country WHERE name = 'Anguilla'
SELECT continent FROM country WHERE name = 'Anguilla'
SELECT continent FROM country WHERE name = 'Anguilla'
SELECT continent FROM country WHERE name = 'Anguilla'
SELECT continent FROM country WHERE name = 'Anguilla'
SELECT continent FROM country WHERE name = 'Anguilla'",SELECT continent FROM country WHERE name = 'Anguilla',True,1.0
35,138,What is the average edispl for all volvos?,car_1,medium,SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';,7,"SELECT AVG(edispl) FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.maker = 'Volvo'
SELECT AVG(edispl) FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.maker = 'Volvo'
SELECT AVG(edispl) FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.maker = 'Volvo'
SELECT AVG(edispl) FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.maker = 'Volvo'
SELECT AVG(edispl) FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.maker = 'Volvo'
SELECT AVG(edispl) FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.maker = 'Volvo'
SELECT AVG(edispl) FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.maker = 'Volvo'",SELECT AVG(edispl) FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.maker = 'Volvo',0,0.0
36,531,What is the description of the department whose name has the substring the computer?,student_transcripts_tracking,medium,SELECT department_description FROM Departments WHERE department_name LIKE '%computer%',7,"SELECT department_description FROM departments WHERE department_name LIKE '%the computer%'
SELECT department_description FROM departments WHERE department_name LIKE '%the computer%'
SELECT department_description FROM departments WHERE department_name LIKE '%the computer%'
SELECT department_description FROM departments WHERE department_name LIKE '%the computer%'
SELECT department_description FROM departments WHERE department_name LIKE '%the computer%'
SELECT department_description FROM departments WHERE department_name LIKE '%the computer%'
SELECT department_description FROM departments WHERE department_name LIKE '%the computer%'",SELECT department_description FROM departments WHERE department_name LIKE '%the computer%',True,0.0
37,478,What are the codes of countries with more than 50 players?,wta_1,easy,SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50,7,"SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50",SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50,0,1.0
38,984,"List the dog name, age and weight of the dogs who have been abandoned? 1 stands for yes, and 0 stands for no.",dog_kennels,medium,"SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1",7,"SELECT name, age, weight FROM dogs WHERE abandoned_yn = 1
SELECT name, age, weight FROM dogs WHERE abandoned_yn = 1
SELECT name, age, weight FROM dogs WHERE abandoned_yn = 1
SELECT name, age, weight FROM dogs WHERE abandoned_yn = 1
SELECT name, age, weight FROM dogs WHERE abandoned_yn = 1
SELECT name, age, weight FROM dogs WHERE abandoned_yn = 1
SELECT name, age, weight FROM dogs WHERE abandoned_yn = 1","SELECT name, age, weight FROM dogs WHERE abandoned_yn = 1",True,1.0
39,509,How many courses in total are listed?,student_transcripts_tracking,easy,SELECT count(*) FROM Courses,7,"SELECT COUNT(*) FROM courses
SELECT COUNT(*) FROM courses
SELECT COUNT(*) FROM courses
SELECT COUNT(*) FROM courses
SELECT COUNT(*) FROM courses
SELECT COUNT(*) FROM courses
SELECT COUNT(*) FROM courses",SELECT COUNT(*) FROM courses,True,1.0
40,764,What is average life expectancy in the countries where English is not the official language?,world_1,extra,"SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND T2.IsOfficial  =  ""T"")",7,"SELECT AVG(lifeexpectancy) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language != 'English' AND countrylanguage.isofficial = 'False'
SELECT AVG(lifeexpectancy) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language != 'English' AND countrylanguage.isofficial = 'False'
SELECT AVG(lifeexpectancy) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language != 'English' AND countrylanguage.isofficial = 'False'
SELECT AVG(lifeexpectancy) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language != 'English' AND countrylanguage.isofficial = 'False'
SELECT AVG(lifeexpectancy) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language != 'English' AND countrylanguage.isofficial = 'False'
SELECT AVG(lifeexpectancy) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language != 'English' AND countrylanguage.isofficial = 'False'
SELECT AVG(lifeexpectancy) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language != 'English' AND countrylanguage.isofficial = 'False'",SELECT AVG(lifeexpectancy) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language != 'English' AND countrylanguage.isofficial = 'False',0,0.0
41,898,Show the ids of high schoolers who have friends and are also liked by someone else.,network_1,hard,SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes,7,"SELECT DISTINCT f.student_id FROM friend f JOIN likes l ON f.friend_id = l.liked_id
SELECT DISTINCT f.student_id FROM friend f JOIN likes l ON f.friend_id = l.liked_id
SELECT DISTINCT f.student_id FROM friend f JOIN likes l ON f.friend_id = l.liked_id
SELECT DISTINCT f.student_id FROM friend f JOIN likes l ON f.friend_id = l.liked_id
SELECT DISTINCT f.student_id FROM friend f JOIN likes l ON f.friend_id = l.liked_id
SELECT DISTINCT f.student_id FROM friend f JOIN likes l ON f.friend_id = l.liked_id
SELECT DISTINCT f.student_id FROM friend f JOIN likes l ON f.friend_id = l.liked_id",SELECT DISTINCT f.student_id FROM friend f JOIN likes l ON f.friend_id = l.liked_id,0,0.0
42,627,Find the number of cartoons directed by each of the listed directors.,tvshow,medium,"SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by",7,"SELECT directors.name, COUNT(cartoons.id) AS number_of_cartoons FROM directors JOIN cartoons ON directors.id = cartoons.directed_by WHERE directors.name IN ('director1', 'director2', 'director3') GROUP BY directors.name
SELECT directors.name, COUNT(cartoons.id) AS number_of_cartoons FROM directors JOIN cartoons ON directors.id = cartoons.directed_by WHERE directors.name IN ('director1', 'director2', 'director3') GROUP BY directors.name
SELECT directors.name, COUNT(cartoons.id) AS number_of_cartoons FROM directors JOIN cartoons ON directors.id = cartoons.directed_by WHERE directors.name IN ('director1', 'director2', 'director3') GROUP BY directors.name
SELECT directors.name, COUNT(cartoons.id) AS number_of_cartoons FROM directors JOIN cartoons ON directors.id = cartoons.directed_by WHERE directors.name IN ('director1', 'director2', 'director3') GROUP BY directors.name
SELECT directors.name, COUNT(cartoons.id) AS number_of_cartoons FROM directors JOIN cartoons ON directors.id = cartoons.directed_by WHERE directors.name IN ('director1', 'director2', 'director3') GROUP BY directors.name
SELECT directors.name, COUNT(cartoons.id) AS number_of_cartoons FROM directors JOIN cartoons ON directors.id = cartoons.directed_by WHERE directors.name IN ('director1', 'director2', 'director3') GROUP BY directors.name
SELECT directors.name, COUNT(cartoons.id) AS number_of_cartoons FROM directors JOIN cartoons ON directors.id = cartoons.directed_by WHERE directors.name IN ('director1', 'director2', 'director3') GROUP BY directors.name","SELECT directors.name, COUNT(cartoons.id) AS number_of_cartoons FROM directors JOIN cartoons ON directors.id = cartoons.directed_by WHERE directors.name IN ('director1', 'director2', 'director3') GROUP BY directors.name",0,0.0
43,879,Return the grade that has the greatest number of high schoolers.,network_1,hard,SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1,7,"SELECT grade, COUNT(*) AS num_students FROM highschooler GROUP BY grade ORDER BY num_students DESC LIMIT 1
SELECT grade, COUNT(*) AS num_students FROM highschooler GROUP BY grade ORDER BY num_students DESC LIMIT 1
SELECT grade, COUNT(*) AS num_students FROM highschooler GROUP BY grade ORDER BY num_students DESC LIMIT 1
SELECT grade, COUNT(*) AS num_students FROM highschooler GROUP BY grade ORDER BY num_students DESC LIMIT 1
SELECT grade FROM highschooler GROUP BY grade ORDER BY COUNT(*) DESC LIMIT 1
SELECT grade, COUNT(*) AS num_students FROM highschooler GROUP BY grade ORDER BY num_students DESC LIMIT 1
SELECT grade, COUNT(*) AS num_students FROM highschooler GROUP BY grade ORDER BY num_students DESC LIMIT 1","SELECT grade, COUNT(*) AS num_students FROM highschooler GROUP BY grade ORDER BY num_students DESC LIMIT 1",0,0.0
44,29,What are the names of the stadiums without any concerts?,concert_singer,hard,SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert),7,"SELECT s.name FROM stadium s LEFT JOIN concert c ON s.stadium_id = c.stadium_id WHERE c.concert_id IS NULL
SELECT s.name FROM stadium s LEFT JOIN concert c ON s.stadium_id = c.stadium_id WHERE c.concert_id IS NULL
SELECT s.name FROM stadium s LEFT JOIN concert c ON s.stadium_id = c.stadium_id WHERE c.concert_id IS NULL
SELECT s.name FROM stadium s LEFT JOIN concert c ON s.stadium_id = c.stadium_id WHERE c.concert_id IS NULL
SELECT s.name FROM stadium s LEFT JOIN concert c ON s.stadium_id = c.stadium_id WHERE c.concert_id IS NULL
SELECT s.name FROM stadium s LEFT JOIN concert c ON s.stadium_id = c.stadium_id WHERE c.concert_id IS NULL
SELECT s.name FROM stadium s LEFT JOIN concert c ON s.stadium_id = c.stadium_id WHERE c.concert_id IS NULL",SELECT s.name FROM stadium s LEFT JOIN concert c ON s.stadium_id = c.stadium_id WHERE c.concert_id IS NULL,0,1.0
45,88,What is the number of continents?,car_1,easy,SELECT count(*) FROM CONTINENTS;,7,"SELECT COUNT(*) FROM (SELECT DISTINCT continent FROM continents)
SELECT COUNT(*) FROM (SELECT DISTINCT continent FROM continents)
SELECT COUNT(*) FROM (SELECT DISTINCT continent FROM continents)
SELECT COUNT(*) FROM (SELECT DISTINCT continent FROM continents)
SELECT COUNT(*) FROM (SELECT DISTINCT continent FROM continents)
SELECT COUNT(*) FROM (SELECT DISTINCT continent FROM continents)
SELECT COUNT(*) FROM (SELECT DISTINCT continent FROM continents)",SELECT COUNT(*) FROM (SELECT DISTINCT continent FROM continents),False,1.0
46,461,Find the year that has the most number of matches.,wta_1,hard,SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,7,"SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1
SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1
SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1
SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1
SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1
SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1
SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1","SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1",0,0.0
47,954,List the names of the dogs of the rarest breed and the treatment dates of them.,dog_kennels,extra,"SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",7,"SELECT d.name, t.date_of_treatment FROM dogs d JOIN breeds b ON d.breed_code = b.breed_code WHERE b.breed_code = (     SELECT breed_code     FROM breeds     WHERE breed_name = 'rarest breed' ) JOIN treatments t ON d.dog_id = t.dog_id
SELECT d.name, t.date_of_treatment FROM dogs d JOIN breeds b ON d.breed_code = b.breed_code WHERE b.breed_code = (     SELECT breed_code     FROM breeds     WHERE breed_name = 'rarest breed' ) JOIN treatments t ON d.dog_id = t.dog_id
SELECT d.name, t.date_of_treatment FROM dogs d JOIN breeds b ON d.breed_code = b.breed_code WHERE b.breed_name = 'rarest_breed_name' JOIN treatments t ON d.dog_id = t.dog_id
SELECT d.name, t.date_of_treatment FROM dogs d JOIN breeds b ON d.breed_code = b.breed_code WHERE b.breed_code = (     SELECT breed_code     FROM breeds     WHERE breed_name = 'rarest breed' ) JOIN treatments t ON d.dog_id = t.dog_id
SELECT d.name, t.date_of_treatment FROM dogs d JOIN breeds b ON d.breed_code = b.breed_code WHERE b.breed_name = 'rarest breed' JOIN treatments t ON d.dog_id = t.dog_id
SELECT d.name, t.date_of_treatment FROM dogs d JOIN breeds b ON d.breed_code = b.breed_code WHERE b.breed_name = 'rarest breed' JOIN treatments t ON d.dog_id = t.dog_id
SELECT d.name, t.date_of_treatment FROM dogs d JOIN breeds b ON d.breed_code = b.breed_code WHERE b.breed_name = 'rarest breed' JOIN treatments t ON d.dog_id = t.dog_id","SELECT d.name, t.date_of_treatment FROM dogs d JOIN breeds b ON d.breed_code = b.breed_code WHERE b.breed_code = (     SELECT breed_code     FROM breeds     WHERE breed_name = 'rarest breed' ) JOIN treatments t ON d.dog_id = t.dog_id",0,0.0
48,90,"For each continent, list its id, name, and how many countries it has?",car_1,medium,"SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;",7,"SELECT c.continent, c.contid, COUNT(co.countryid) AS num_countries FROM continents c LEFT JOIN countries co ON c.contid = co.continent GROUP BY c.continent, c.contid
SELECT c.continent, c.contid, COUNT(co.countryid) AS num_countries FROM continents c LEFT JOIN countries co ON c.contid = co.continent GROUP BY c.continent, c.contid
SELECT c.continent, c.contid, COUNT(co.countryid) AS num_countries FROM continents c LEFT JOIN countries co ON c.contid = co.continent GROUP BY c.continent, c.contid
SELECT c.continent, c.contid, COUNT(co.countryid) AS num_countries FROM continents c LEFT JOIN countries co ON c.contid = co.continent GROUP BY c.continent, c.contid
SELECT c.continent, c.contid, COUNT(co.countryid) AS num_countries FROM continents c LEFT JOIN countries co ON c.contid = co.continent GROUP BY c.continent, c.contid
SELECT c.continent, c.contid, COUNT(co.countryid) AS num_countries FROM continents c LEFT JOIN countries co ON c.contid = co.continent GROUP BY c.continent, c.contid
SELECT c.continent, c.contid, COUNT(co.countryid) AS num_countries FROM continents c LEFT JOIN countries co ON c.contid = co.continent GROUP BY c.continent, c.contid","SELECT c.continent, c.contid, COUNT(co.countryid) AS num_countries FROM continents c LEFT JOIN countries co ON c.contid = co.continent GROUP BY c.continent, c.contid",0,0.0
49,727,Give the total surface area covered by countries in Asia or Europe.,world_1,medium,"SELECT sum(SurfaceArea) FROM country WHERE Continent  =  ""Asia"" OR Continent  =  ""Europe""",7,"SELECT SUM(surfacearea) FROM country WHERE continent IN ('Asia', 'Europe')
SELECT SUM(surfacearea) FROM country WHERE continent IN ('Asia', 'Europe')
SELECT SUM(surfacearea) FROM country WHERE continent IN ('Asia', 'Europe')
SELECT SUM(surfacearea) FROM country WHERE continent IN ('Asia', 'Europe')
SELECT SUM(surfacearea) FROM country WHERE continent IN ('Asia', 'Europe')
SELECT SUM(surfacearea) FROM country WHERE continent IN ('Asia', 'Europe')
SELECT SUM(surfacearea) FROM country WHERE continent IN ('Asia', 'Europe')","SELECT SUM(surfacearea) FROM country WHERE continent IN ('Asia', 'Europe')",0,1.0
50,676,Give the nationality that is most common across all people.,poker_player,hard,SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1,7,"SELECT nationality, COUNT(*) AS count FROM people GROUP BY nationality ORDER BY count DESC LIMIT 1
SELECT nationality, COUNT(*) AS count FROM people GROUP BY nationality ORDER BY count DESC LIMIT 1
SELECT nationality, COUNT(*) AS count FROM people GROUP BY nationality ORDER BY count DESC LIMIT 1
SELECT nationality, COUNT(*) AS count FROM people GROUP BY nationality ORDER BY count DESC LIMIT 1
SELECT nationality, COUNT(*) AS count FROM people GROUP BY nationality ORDER BY count DESC LIMIT 1
SELECT nationality, COUNT(*) AS count FROM people GROUP BY nationality ORDER BY count DESC LIMIT 1
SELECT nationality, COUNT(*) AS count FROM people GROUP BY nationality ORDER BY count DESC LIMIT 1","SELECT nationality, COUNT(*) AS count FROM people GROUP BY nationality ORDER BY count DESC LIMIT 1",0,0.0
51,18,What is the name and capacity for the stadium with highest average attendance?,concert_singer,medium,"SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1",7,"SELECT name, capacity  FROM stadium  WHERE stadium_id = (     SELECT stadium_id      FROM concert      GROUP BY stadium_id      ORDER BY AVG(average) DESC      LIMIT 1 )
SELECT name, capacity  FROM stadium  WHERE stadium_id = (     SELECT stadium_id      FROM concert      GROUP BY stadium_id      ORDER BY AVG(average) DESC      LIMIT 1 )
SELECT name, capacity  FROM stadium  WHERE stadium_id = (     SELECT stadium_id      FROM concert      GROUP BY stadium_id      ORDER BY AVG(average) DESC      LIMIT 1 )
SELECT name, capacity  FROM stadium  WHERE stadium_id = (     SELECT stadium_id      FROM concert      GROUP BY stadium_id      ORDER BY AVG(average) DESC      LIMIT 1 )
SELECT name, capacity  FROM stadium  WHERE stadium_id = (     SELECT stadium_id      FROM concert      GROUP BY stadium_id      ORDER BY AVG(average) DESC      LIMIT 1 )
SELECT name, capacity  FROM stadium  WHERE stadium_id = (     SELECT stadium_id      FROM concert      GROUP BY stadium_id      ORDER BY AVG(average) DESC      LIMIT 1 )
SELECT name, capacity  FROM stadium  WHERE stadium_id = (     SELECT stadium_id      FROM concert      GROUP BY stadium_id      ORDER BY AVG(average) DESC      LIMIT 1 )","SELECT name, capacity  FROM stadium  WHERE stadium_id = (     SELECT stadium_id      FROM concert      GROUP BY stadium_id      ORDER BY AVG(average) DESC      LIMIT 1 )",0,0.0
52,767,How many people live in countries that do not speak English?,world_1,extra,"SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"")",7,"SELECT COUNT(*) FROM country c JOIN countrylanguage cl ON c.code = cl.countrycode WHERE cl.language != 'English'
SELECT COUNT(*) FROM country c JOIN countrylanguage cl ON c.code = cl.countrycode WHERE cl.language != 'English'
SELECT COUNT(*) FROM country c JOIN countrylanguage cl ON c.code = cl.countrycode WHERE cl.language != 'English'
SELECT COUNT(*) FROM country c JOIN countrylanguage cl ON c.code = cl.countrycode WHERE cl.language != 'English'
SELECT COUNT(*) FROM country c JOIN countrylanguage cl ON c.code = cl.countrycode WHERE cl.language != 'English'
SELECT COUNT(*) FROM country c JOIN countrylanguage cl ON c.code = cl.countrycode WHERE cl.language != 'English'
SELECT COUNT(*) FROM country c JOIN countrylanguage cl ON c.code = cl.countrycode WHERE cl.language != 'English'",SELECT COUNT(*) FROM country c JOIN countrylanguage cl ON c.code = cl.countrycode WHERE cl.language != 'English',0,0.0
53,490,How many players are there for each hand type?,wta_1,medium,"SELECT count(*) ,  hand FROM players GROUP BY hand",7,"SELECT hand, COUNT(*) AS player_count FROM players GROUP BY hand
SELECT hand, COUNT(*) AS player_count FROM players GROUP BY hand
SELECT hand, COUNT(*) AS player_count FROM players GROUP BY hand
SELECT hand, COUNT(*) AS player_count FROM players GROUP BY hand
SELECT hand, COUNT(*) AS player_count FROM players GROUP BY hand
SELECT hand, COUNT(*) AS player_count FROM players GROUP BY hand
SELECT hand, COUNT(*) AS player_count FROM players GROUP BY hand","SELECT hand, COUNT(*) AS player_count FROM players GROUP BY hand",0,0.0
54,915,What is the average grade of students who have friends?,network_1,hard,SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id),7,"SELECT AVG(h.grade) FROM highschooler h JOIN friend f ON h.id = f.student_id JOIN likes l ON h.id = l.student_id
SELECT AVG(h.grade) FROM highschooler h JOIN friend f ON h.id = f.student_id JOIN likes l ON h.id = l.student_id
SELECT AVG(h.grade) FROM highschooler h JOIN friend f ON h.id = f.student_id JOIN likes l ON h.id = l.student_id
SELECT AVG(h.grade) FROM highschooler h JOIN friend f ON h.id = f.student_id JOIN likes l ON h.id = l.student_id
SELECT AVG(h.grade) FROM highschooler h JOIN friend f ON h.id = f.student_id JOIN likes l ON h.id = l.student_id
SELECT AVG(h.grade) FROM highschooler h JOIN friend f ON h.id = f.student_id JOIN likes l ON h.id = l.student_id
SELECT AVG(h.grade) FROM highschooler h JOIN friend f ON h.id = f.student_id JOIN likes l ON h.id = l.student_id",SELECT AVG(h.grade) FROM highschooler h JOIN friend f ON h.id = f.student_id JOIN likes l ON h.id = l.student_id,0,0.0
55,281,Find the names of employees who never won any award in the evaluation.,employee_hire_evaluation,hard,SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation),7,"SELECT e.name FROM employee e LEFT JOIN evaluation ev ON e.employee_id = ev.employee_id WHERE ev.employee_id IS NULL
SELECT e.name FROM employee e LEFT JOIN evaluation ev ON e.employee_id = ev.employee_id WHERE ev.employee_id IS NULL
SELECT e.name FROM employee e LEFT JOIN evaluation ev ON e.employee_id = ev.employee_id WHERE ev.employee_id IS NULL
SELECT e.name FROM employee e LEFT JOIN evaluation ev ON e.employee_id = ev.employee_id WHERE ev.employee_id IS NULL
SELECT e.name FROM employee e LEFT JOIN evaluation ev ON e.employee_id = ev.employee_id WHERE ev.employee_id IS NULL
SELECT e.name FROM employee e LEFT JOIN evaluation ev ON e.employee_id = ev.employee_id WHERE ev.employee_id IS NULL
SELECT e.name FROM employee e LEFT JOIN evaluation ev ON e.employee_id = ev.employee_id WHERE ev.employee_id IS NULL",SELECT e.name FROM employee e LEFT JOIN evaluation ev ON e.employee_id = ev.employee_id WHERE ev.employee_id IS NULL,0,1.0
56,931,"Return the owner id, first name and last name of the owner who has the most dogs.",dog_kennels,extra,"SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT o.owner_id, o.first_name, o.last_name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id GROUP BY o.owner_id ORDER BY COUNT(d.dog_id) DESC LIMIT 1
SELECT o.owner_id, o.first_name, o.last_name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id GROUP BY o.owner_id ORDER BY COUNT(d.dog_id) DESC LIMIT 1
SELECT o.owner_id, o.first_name, o.last_name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id GROUP BY o.owner_id ORDER BY COUNT(d.dog_id) DESC LIMIT 1
SELECT o.owner_id, o.first_name, o.last_name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id GROUP BY o.owner_id ORDER BY COUNT(d.dog_id) DESC LIMIT 1
SELECT o.owner_id, o.first_name, o.last_name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id GROUP BY o.owner_id ORDER BY COUNT(d.dog_id) DESC LIMIT 1
SELECT o.owner_id, o.first_name, o.last_name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id GROUP BY o.owner_id ORDER BY COUNT(d.dog_id) DESC LIMIT 1
SELECT o.owner_id, o.first_name, o.last_name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id GROUP BY o.owner_id ORDER BY COUNT(d.dog_id) DESC LIMIT 1","SELECT o.owner_id, o.first_name, o.last_name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id GROUP BY o.owner_id ORDER BY COUNT(d.dog_id) DESC LIMIT 1",0,1.0
57,505,"Show names, results and bulgarian commanders of the battles with no ships lost in the 'English Channel'.",battle_death,extra,"SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'",7,"SELECT b.name, b.result, b.bulgarian_commander FROM battle b LEFT JOIN ship s ON b.id = s.id WHERE s.location = 'English Channel' AND s.lost_in_battle = 0 GROUP BY b.id
SELECT b.name, b.result, b.bulgarian_commander FROM battle b LEFT JOIN ship s ON b.id = s.id WHERE s.location = 'English Channel' AND s.lost_in_battle = 0 GROUP BY b.id
SELECT b.name, b.result, b.bulgarian_commander FROM battle b LEFT JOIN ship s ON b.id = s.id WHERE s.location = 'English Channel' AND s.lost_in_battle = 0 GROUP BY b.id
SELECT b.name, b.result, b.bulgarian_commander FROM battle b LEFT JOIN ship s ON b.id = s.id WHERE s.location = 'English Channel' AND s.lost_in_battle = 0 GROUP BY b.id
SELECT b.name, b.result, b.bulgarian_commander FROM battle b LEFT JOIN ship s ON b.id = s.id WHERE s.location = 'English Channel' AND s.lost_in_battle = 0 GROUP BY b.id
SELECT b.name, b.result, b.bulgarian_commander FROM battle b LEFT JOIN ship s ON b.id = s.id WHERE s.location = 'English Channel' AND s.lost_in_battle = 0 GROUP BY b.id
SELECT b.name, b.result, b.bulgarian_commander FROM battle b LEFT JOIN ship s ON b.id = s.id WHERE s.location = 'English Channel' AND s.lost_in_battle = 0 GROUP BY b.id","SELECT b.name, b.result, b.bulgarian_commander FROM battle b LEFT JOIN ship s ON b.id = s.id WHERE s.location = 'English Channel' AND s.lost_in_battle = 0 GROUP BY b.id",0,0.0
58,766,What is the total number of people living in the nations that do not use English?,world_1,extra,"SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"")",7,"SELECT SUM(population) FROM city WHERE countrycode NOT IN (SELECT code FROM countrylanguage WHERE language = 'English')
SELECT SUM(population) FROM city WHERE countrycode NOT IN (SELECT code FROM countrylanguage WHERE language = 'English')
SELECT SUM(population) FROM city WHERE countrycode NOT IN (SELECT code FROM countrylanguage WHERE language = 'English')
SELECT SUM(population) FROM city WHERE countrycode NOT IN (SELECT code FROM countrylanguage WHERE language = 'English')
SELECT SUM(population) FROM city WHERE countrycode NOT IN (SELECT code FROM countrylanguage WHERE language = 'English')
SELECT SUM(population) FROM city WHERE countrycode NOT IN (SELECT code FROM countrylanguage WHERE language = 'English')
SELECT SUM(population) FROM city WHERE countrycode NOT IN (SELECT code FROM countrylanguage WHERE language = 'English')",SELECT SUM(population) FROM city WHERE countrycode NOT IN (SELECT code FROM countrylanguage WHERE language = 'English'),0,0.0
59,675,What is the most common nationality of people?,poker_player,hard,SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1,7,"SELECT nationality FROM people ORDER BY COUNT(nationality) DESC LIMIT 1
SELECT nationality, COUNT(*) AS count FROM people GROUP BY nationality ORDER BY count DESC LIMIT 1
SELECT nationality FROM people ORDER BY COUNT(*) DESC LIMIT 1
SELECT nationality, COUNT(*) AS count FROM people GROUP BY nationality ORDER BY count DESC LIMIT 1
SELECT nationality FROM people ORDER BY COUNT(*) DESC LIMIT 1
SELECT nationality FROM people ORDER BY COUNT(*) DESC LIMIT 1
SELECT nationality FROM people ORDER BY COUNT(nationality) DESC LIMIT 1",SELECT nationality FROM people ORDER BY COUNT(*) DESC LIMIT 1,0,0.0
60,229,Which airline has most number of flights?,flight_2,extra,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1,7,"SELECT airline, COUNT(*) AS flight_count FROM flights GROUP BY airline ORDER BY flight_count DESC LIMIT 1
SELECT airline, COUNT(*) AS flight_count FROM flights GROUP BY airline ORDER BY flight_count DESC LIMIT 1
SELECT airline, COUNT(*) AS flight_count FROM flights GROUP BY airline ORDER BY flight_count DESC LIMIT 1
SELECT airline, COUNT(*) AS flight_count FROM flights GROUP BY airline ORDER BY flight_count DESC LIMIT 1
SELECT airline, COUNT(*) AS flight_count FROM flights GROUP BY airline ORDER BY flight_count DESC LIMIT 1
SELECT airline, COUNT(*) AS flight_count FROM flights GROUP BY airline ORDER BY flight_count DESC LIMIT 1
SELECT airline, COUNT(*) AS flight_count FROM flights GROUP BY airline ORDER BY flight_count DESC LIMIT 1","SELECT airline, COUNT(*) AS flight_count FROM flights GROUP BY airline ORDER BY flight_count DESC LIMIT 1",0,0.0
61,958,What are the arriving date and the departing date of the dogs who have gone through a treatment?,dog_kennels,medium,"SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id",7,"SELECT date_arrived, date_departed FROM dogs WHERE abandoned_yn = 'Y' AND date_departed IS NOT NULL
SELECT date_arrived, date_departed FROM dogs WHERE abandoned_yn = 'Y' AND date_departed IS NOT NULL
SELECT date_arrived, date_departed FROM dogs WHERE abandoned_yn = 'N' AND date_departed IS NOT NULL
SELECT date_arrived, date_departed FROM dogs WHERE abandoned_yn = 'Y' AND date_departed IS NOT NULL
SELECT dogs.date_arrived, dogs.date_departed FROM dogs JOIN treatments ON dogs.dog_id = treatments.dog_id
SELECT date_arrived, date_departed FROM dogs WHERE abandoned_yn = 'Y' AND date_departed IS NOT NULL
SELECT date_arrived, date_departed FROM dogs WHERE abandoned_yn = 'Y'","SELECT date_arrived, date_departed FROM dogs WHERE abandoned_yn = 'Y' AND date_departed IS NOT NULL",0,0.0
62,917,What is the lowest grade of students who do not have any friends?,network_1,extra,SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id),7,"SELECT MIN(grade) FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend) AND id NOT IN (SELECT liked_id FROM likes)
SELECT MIN(grade) FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend) AND id NOT IN (SELECT liked_id FROM likes)
SELECT MIN(grade) FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend) AND id NOT IN (SELECT liked_id FROM likes)
SELECT MIN(grade) FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend) AND id NOT IN (SELECT liked_id FROM likes)
SELECT MIN(grade) FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend) AND id NOT IN (SELECT liked_id FROM likes)
SELECT MIN(grade) FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend) AND id NOT IN (SELECT liked_id FROM likes)
SELECT MIN(grade) FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend) AND id NOT IN (SELECT liked_id FROM likes)",SELECT MIN(grade) FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend) AND id NOT IN (SELECT liked_id FROM likes),0,1.0
63,129,Which countries in europe have at least 3 car manufacturers?,car_1,extra,SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;,7,"SELECT countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE continent = 'Europe' GROUP BY countryname HAVING COUNT(DISTINCT maker) >= 3
SELECT countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE continent = 'Europe' GROUP BY countryname HAVING COUNT(DISTINCT maker) >= 3
SELECT countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE continent = 'Europe' GROUP BY countryname HAVING COUNT(DISTINCT maker) >= 3
SELECT countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE continent = 'Europe' GROUP BY countryname HAVING COUNT(DISTINCT maker) >= 3
SELECT countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE continent = 'Europe' GROUP BY countryname HAVING COUNT(DISTINCT maker) >= 3
SELECT countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE continent = 'Europe' GROUP BY countryname HAVING COUNT(DISTINCT maker) >= 3
SELECT countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE continent = 'Europe' GROUP BY countryname HAVING COUNT(DISTINCT maker) >= 3",SELECT countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE continent = 'Europe' GROUP BY countryname HAVING COUNT(DISTINCT maker) >= 3,0,0.0
64,278,Which employee received the most awards in evaluations? Give me the employee name.,employee_hire_evaluation,extra,SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1,7,"SELECT e.name FROM employee e JOIN evaluation ev ON e.employee_id = ev.employee_id GROUP BY e.employee_id ORDER BY COUNT(ev.year_awarded) DESC LIMIT 1
SELECT e.name FROM employee e JOIN evaluation ev ON e.employee_id = ev.employee_id GROUP BY e.employee_id ORDER BY COUNT(ev.year_awarded) DESC LIMIT 1
SELECT e.name FROM employee e JOIN evaluation ev ON e.employee_id = ev.employee_id GROUP BY e.employee_id ORDER BY COUNT(ev.year_awarded) DESC LIMIT 1
SELECT e.name FROM employee e JOIN evaluation ev ON e.employee_id = ev.employee_id GROUP BY e.employee_id ORDER BY COUNT(ev.year_awarded) DESC LIMIT 1
SELECT e.name FROM employee e JOIN evaluation ev ON e.employee_id = ev.employee_id GROUP BY e.employee_id ORDER BY COUNT(ev.year_awarded) DESC LIMIT 1
SELECT e.name FROM employee e JOIN evaluation ev ON e.employee_id = ev.employee_id GROUP BY e.employee_id ORDER BY COUNT(ev.year_awarded) DESC LIMIT 1
SELECT e.name FROM employee e JOIN evaluation ev ON e.employee_id = ev.employee_id GROUP BY e.employee_id ORDER BY COUNT(ev.year_awarded) DESC LIMIT 1",SELECT e.name FROM employee e JOIN evaluation ev ON e.employee_id = ev.employee_id GROUP BY e.employee_id ORDER BY COUNT(ev.year_awarded) DESC LIMIT 1,0,1.0
65,34,"What are the names , themes , and number of singers for every concert ?",concert_singer,medium,"select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id",7,"SELECT c.concert_name, c.theme, COUNT(s.singer_id) AS number_of_singers FROM concert c JOIN singer_in_concert sic ON c.concert_id = sic.concert_id JOIN singer s ON sic.singer_id = s.singer_id GROUP BY c.concert_id
SELECT c.concert_name, c.theme, COUNT(s.singer_id) AS number_of_singers FROM concert c JOIN singer_in_concert sic ON c.concert_id = sic.concert_id JOIN singer s ON sic.singer_id = s.singer_id GROUP BY c.concert_id
SELECT c.concert_name, c.theme, COUNT(s.singer_id) AS number_of_singers FROM concert c JOIN singer_in_concert sic ON c.concert_id = sic.concert_id JOIN singer s ON sic.singer_id = s.singer_id GROUP BY c.concert_id
SELECT c.concert_name, c.theme, COUNT(s.singer_id) AS number_of_singers FROM concert c JOIN singer_in_concert sic ON c.concert_id = sic.concert_id JOIN singer s ON sic.singer_id = s.singer_id GROUP BY c.concert_id
SELECT c.concert_name, c.theme, COUNT(s.singer_id) AS number_of_singers FROM concert c JOIN singer_in_concert sic ON c.concert_id = sic.concert_id JOIN singer s ON sic.singer_id = s.singer_id GROUP BY c.concert_id
SELECT c.concert_name, c.theme, COUNT(s.singer_id) AS number_of_singers FROM concert c JOIN singer_in_concert sic ON c.concert_id = sic.concert_id JOIN singer s ON sic.singer_id = s.singer_id GROUP BY c.concert_id
SELECT c.concert_name, c.theme, COUNT(s.singer_id) AS number_of_singers FROM concert c JOIN singer_in_concert sic ON c.concert_id = sic.concert_id JOIN singer s ON sic.singer_id = s.singer_id GROUP BY c.concert_id","SELECT c.concert_name, c.theme, COUNT(s.singer_id) AS number_of_singers FROM concert c JOIN singer_in_concert sic ON c.concert_id = sic.concert_id JOIN singer s ON sic.singer_id = s.singer_id GROUP BY c.concert_id",0,1.0
66,887,Return the name of the high school student with the most friends.,network_1,extra,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,7,"SELECT hs.name FROM highschooler hs JOIN friend f ON hs.id = f.student_id GROUP BY hs.id ORDER BY COUNT(f.friend_id) DESC LIMIT 1
SELECT hs.name FROM highschooler hs JOIN friend f ON hs.id = f.student_id GROUP BY hs.id ORDER BY COUNT(f.friend_id) DESC LIMIT 1
SELECT hs.name FROM highschooler hs JOIN friend f ON hs.id = f.student_id GROUP BY hs.id ORDER BY COUNT(f.friend_id) DESC LIMIT 1
SELECT hs.name FROM highschooler hs JOIN friend f ON hs.id = f.student_id GROUP BY hs.id ORDER BY COUNT(f.friend_id) DESC LIMIT 1
SELECT hs.name FROM highschooler hs JOIN friend f ON hs.id = f.student_id GROUP BY hs.id ORDER BY COUNT(f.friend_id) DESC LIMIT 1
SELECT hs.name FROM highschooler hs JOIN friend f ON hs.id = f.student_id GROUP BY hs.id ORDER BY COUNT(f.friend_id) DESC LIMIT 1
SELECT hs.name FROM highschooler hs JOIN friend f ON hs.id = f.student_id GROUP BY hs.id ORDER BY COUNT(f.friend_id) DESC LIMIT 1",SELECT hs.name FROM highschooler hs JOIN friend f ON hs.id = f.student_id GROUP BY hs.id ORDER BY COUNT(f.friend_id) DESC LIMIT 1,0,1.0
67,611,"List the title of all  Cartoons showed on TV Channel with series name ""Sky Radio"".",tvshow,medium,"SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = ""Sky Radio"";",7,"SELECT cartoon.title  FROM cartoon  JOIN tv_series ON cartoon.channel = tv_series.channel  WHERE tv_series.series_name = 'Sky Radio'
SELECT cartoon.title  FROM cartoon  JOIN tv_series ON cartoon.channel = tv_series.channel  WHERE tv_series.series_name = 'Sky Radio'
SELECT cartoon.title  FROM cartoon  JOIN tv_series ON cartoon.channel = tv_series.channel  WHERE tv_series.series_name = 'Sky Radio'
SELECT cartoon.title  FROM cartoon  JOIN tv_series ON cartoon.channel = tv_series.channel  WHERE tv_series.series_name = 'Sky Radio'
SELECT cartoon.title  FROM cartoon  JOIN tv_series ON cartoon.channel = tv_series.channel  WHERE tv_series.series_name = 'Sky Radio'
SELECT cartoon.title  FROM cartoon  JOIN tv_series ON cartoon.channel = tv_series.channel  WHERE tv_series.series_name = 'Sky Radio'
SELECT cartoon.title  FROM cartoon  JOIN tv_series ON cartoon.channel = tv_series.channel  WHERE tv_series.series_name = 'Sky Radio'",SELECT cartoon.title  FROM cartoon  JOIN tv_series ON cartoon.channel = tv_series.channel  WHERE tv_series.series_name = 'Sky Radio',0,0.0
68,239,Find all airlines that have flights from airport 'CVO' but not from 'APG'.,flight_2,extra,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""CVO"" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""APG""",7,"SELECT DISTINCT a.airline FROM airlines a JOIN flights f ON a.uid = f.airline WHERE f.sourceairport = 'CVO' AND f.sourceairport <> 'APG'
SELECT DISTINCT a.airline FROM airlines a JOIN flights f ON a.uid = f.airline WHERE f.sourceairport = 'CVO' AND f.sourceairport <> 'APG'
SELECT DISTINCT a.airline FROM airlines a JOIN flights f ON a.uid = f.airline WHERE f.sourceairport = 'CVO' AND f.sourceairport <> 'APG'
SELECT DISTINCT a.airline FROM airlines a JOIN flights f ON a.uid = f.airline WHERE f.sourceairport = 'CVO' AND f.sourceairport <> 'APG'
SELECT DISTINCT a.airline FROM airlines a JOIN flights f ON a.uid = f.airline WHERE f.sourceairport = 'CVO' AND f.sourceairport <> 'APG'
SELECT DISTINCT a.airline FROM airlines a JOIN flights f ON a.uid = f.airline WHERE f.sourceairport = 'CVO' AND f.sourceairport <> 'APG'
SELECT DISTINCT a.airline FROM airlines a JOIN flights f ON a.uid = f.airline WHERE f.sourceairport = 'CVO' AND f.sourceairport <> 'APG'",SELECT DISTINCT a.airline FROM airlines a JOIN flights f ON a.uid = f.airline WHERE f.sourceairport = 'CVO' AND f.sourceairport <> 'APG',0,1.0
69,426,What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?,museum_visit,extra,SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011,7,"SELECT v.name FROM visitor v JOIN visit vi ON v.id = vi.visitor_id JOIN museum m ON vi.museum_id = m.museum_id WHERE m.open_year < 2009 AND m.open_year > 2011
SELECT v.name FROM visitor v JOIN visit vi ON v.id = vi.visitor_id JOIN museum m ON vi.museum_id = m.museum_id WHERE m.open_year < 2009 AND m.open_year > 2011
SELECT v.name FROM visitor v JOIN visit vi ON v.id = vi.visitor_id JOIN museum m ON vi.museum_id = m.museum_id WHERE m.open_year < 2009 AND m.open_year > 2011
SELECT v.name FROM visitor v JOIN visit vi ON v.id = vi.visitor_id JOIN museum m ON vi.museum_id = m.museum_id WHERE m.open_year < 2009 AND m.open_year > 2011
SELECT v.name FROM visitor v JOIN visit vi ON v.id = vi.visitor_id JOIN museum m ON vi.museum_id = m.museum_id WHERE m.open_year < 2009 AND m.open_year > 2011
SELECT v.name FROM visitor v JOIN visit vi ON v.id = vi.visitor_id JOIN museum m ON vi.museum_id = m.museum_id WHERE m.open_year < 2009 AND m.open_year > 2011
SELECT v.name FROM visitor v JOIN visit vi ON v.id = vi.visitor_id JOIN museum m ON vi.museum_id = m.museum_id WHERE m.open_year < 2009 AND m.open_year > 2011",SELECT v.name FROM visitor v JOIN visit vi ON v.id = vi.visitor_id JOIN museum m ON vi.museum_id = m.museum_id WHERE m.open_year < 2009 AND m.open_year > 2011,0,0.0
70,402,What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher?,course_teach,hard,"SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name",7,"SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id ORDER BY t.name ASC
SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id ORDER BY t.name ASC
SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id ORDER BY t.name ASC
SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id ORDER BY t.name ASC
SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id ORDER BY t.name ASC
SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id ORDER BY t.name ASC
SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id ORDER BY t.name ASC","SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id ORDER BY t.name ASC",0,1.0
71,803,Return the names of the 3 most populated countries.,world_1,medium,SELECT Name FROM country ORDER BY Population DESC LIMIT 3,7,"SELECT name FROM country ORDER BY population DESC LIMIT 3
SELECT name FROM country ORDER BY population DESC LIMIT 3
SELECT name FROM country ORDER BY population DESC LIMIT 3
SELECT name FROM country ORDER BY population DESC LIMIT 3
SELECT name FROM country ORDER BY population DESC LIMIT 3
SELECT name FROM country ORDER BY population DESC LIMIT 3
SELECT name FROM country ORDER BY population DESC LIMIT 3",SELECT name FROM country ORDER BY population DESC LIMIT 3,True,1.0
72,64,What are the ids of the students who do not own cats as pets?,pets_1,hard,SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat',7,"SELECT DISTINCT s.stuid FROM students s LEFT JOIN has_pet hp ON s.stuid = hp.stuid LEFT JOIN pets p ON hp.petid = p.petid WHERE p.pettype != 'cat'
SELECT DISTINCT s.stuid FROM students s LEFT JOIN has_pet hp ON s.stuid = hp.stuid LEFT JOIN pets p ON hp.petid = p.petid WHERE p.pettype != 'cat'
SELECT DISTINCT s.stuid FROM students s LEFT JOIN has_pet hp ON s.stuid = hp.stuid LEFT JOIN pets p ON hp.petid = p.petid WHERE p.pettype != 'cat'
SELECT DISTINCT s.stuid FROM students s LEFT JOIN has_pet hp ON s.stuid = hp.stuid LEFT JOIN pets p ON hp.petid = p.petid WHERE p.pettype != 'cat'
SELECT DISTINCT s.stuid FROM students s LEFT JOIN has_pet hp ON s.stuid = hp.stuid LEFT JOIN pets p ON hp.petid = p.petid WHERE p.pettype != 'cat'
SELECT DISTINCT s.stuid FROM students s LEFT JOIN has_pet hp ON s.stuid = hp.stuid LEFT JOIN pets p ON hp.petid = p.petid WHERE p.pettype != 'cat'
SELECT DISTINCT s.stuid FROM students s LEFT JOIN has_pet hp ON s.stuid = hp.stuid LEFT JOIN pets p ON hp.petid = p.petid WHERE p.pettype != 'cat'",SELECT DISTINCT s.stuid FROM students s LEFT JOIN has_pet hp ON s.stuid = hp.stuid LEFT JOIN pets p ON hp.petid = p.petid WHERE p.pettype != 'cat',0,0.0
73,89,"How many countries does each continent have? List the continent id, continent name and the number of countries.",car_1,medium,"SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;",7,"SELECT c.continent, COUNT(co.countryid) AS num_countries FROM continents c JOIN countries co ON c.contid = co.continent GROUP BY c.continent ORDER BY c.continent
SELECT c.continent, COUNT(co.countryid) AS num_countries FROM continents c JOIN countries co ON c.contid = co.continent GROUP BY c.continent ORDER BY c.continent
SELECT c.continent, COUNT(co.countryid) AS num_countries FROM continents c JOIN countries co ON c.contid = co.continent GROUP BY c.continent ORDER BY c.continent
SELECT c.continent, COUNT(co.countryid) AS num_countries FROM continents c JOIN countries co ON c.contid = co.continent GROUP BY c.continent ORDER BY c.continent
SELECT c.continent, COUNT(co.countryid) AS num_countries FROM continents c JOIN countries co ON c.contid = co.continent GROUP BY c.continent ORDER BY c.continent
SELECT c.continent, COUNT(co.countryid) AS num_countries FROM continents c JOIN countries co ON c.contid = co.continent GROUP BY c.continent ORDER BY c.continent
SELECT c.continent, COUNT(co.countryid) AS num_countries FROM continents c JOIN countries co ON c.contid = co.continent GROUP BY c.continent ORDER BY c.continent","SELECT c.continent, COUNT(co.countryid) AS num_countries FROM continents c JOIN countries co ON c.contid = co.continent GROUP BY c.continent ORDER BY c.continent",0,0.0
74,296,Count the number of distinct store locations.,employee_hire_evaluation,easy,SELECT count(DISTINCT LOCATION) FROM shop,7,"SELECT COUNT(DISTINCT location) FROM shop
SELECT COUNT(DISTINCT location) FROM shop
SELECT COUNT(DISTINCT location) FROM shop
SELECT COUNT(DISTINCT location) FROM shop
SELECT COUNT(DISTINCT location) FROM shop
SELECT COUNT(DISTINCT location) FROM shop
SELECT COUNT(DISTINCT location) FROM shop",SELECT COUNT(DISTINCT location) FROM shop,True,1.0
75,748,What are the names of nations where both English and French are official languages?,world_1,extra,"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND T2.IsOfficial  =  ""T"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""French"" AND T2.IsOfficial  =  ""T""",7,"SELECT DISTINCT c.name FROM country c JOIN countrylanguage cl ON c.code = cl.countrycode WHERE cl.language IN ('English', 'French') AND cl.isofficial = 'True'
SELECT DISTINCT c.name FROM country c JOIN countrylanguage cl ON c.code = cl.countrycode WHERE cl.language IN ('English', 'French') AND cl.isofficial = 'True'
SELECT DISTINCT c.name FROM country c JOIN countrylanguage cl ON c.code = cl.countrycode WHERE cl.language IN ('English', 'French') AND cl.isofficial = 'True'
SELECT DISTINCT c.name FROM country c JOIN countrylanguage cl ON c.code = cl.countrycode WHERE cl.language IN ('English', 'French') AND cl.isofficial = 'True'
SELECT DISTINCT c.name FROM country c JOIN countrylanguage cl ON c.code = cl.countrycode WHERE cl.language IN ('English', 'French') AND cl.isofficial = 'True'
SELECT DISTINCT c.name FROM country c JOIN countrylanguage cl ON c.code = cl.countrycode WHERE cl.language IN ('English', 'French') AND cl.isofficial = 'True'
SELECT DISTINCT c.name FROM country c JOIN countrylanguage cl ON c.code = cl.countrycode WHERE cl.language IN ('English', 'French') AND cl.isofficial = 'True'","SELECT DISTINCT c.name FROM country c JOIN countrylanguage cl ON c.code = cl.countrycode WHERE cl.language IN ('English', 'French') AND cl.isofficial = 'True'",0,0.0
76,792,Return the country name and the numbers of languages spoken for each country that speaks at least 3 languages.,world_1,medium,"SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2",7,"SELECT name, COUNT(language) AS num_languages FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.code HAVING num_languages >= 3
SELECT name, COUNT(language) AS num_languages FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.code HAVING num_languages >= 3
SELECT name, COUNT(language) AS num_languages FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.code HAVING num_languages >= 3
SELECT name, COUNT(language) AS num_languages FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.code HAVING num_languages >= 3
SELECT name, COUNT(language) AS num_languages FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.code HAVING num_languages >= 3
SELECT name, COUNT(language) AS num_languages FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.code HAVING num_languages >= 3
SELECT name, COUNT(language) AS num_languages FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.code HAVING num_languages >= 3","SELECT name, COUNT(language) AS num_languages FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.code HAVING num_languages >= 3",0,0.0
77,193,Which airline has abbreviation 'UAL'?,flight_2,easy,"SELECT Airline FROM AIRLINES WHERE Abbreviation  =  ""UAL""",7,"SELECT airline FROM airlines WHERE abbreviation = 'UAL'
SELECT airline FROM airlines WHERE abbreviation = 'UAL'
SELECT airline FROM airlines WHERE abbreviation = 'UAL'
SELECT airline FROM airlines WHERE abbreviation = 'UAL'
SELECT airline FROM airlines WHERE abbreviation = 'UAL'
SELECT airline FROM airlines WHERE abbreviation = 'UAL'
SELECT airline FROM airlines WHERE abbreviation = 'UAL'",SELECT airline FROM airlines WHERE abbreviation = 'UAL',True,1.0
78,240,Which airlines have departures from CVO but not from APG airports?,flight_2,extra,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""CVO"" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""APG""",7,"SELECT DISTINCT airline FROM flights WHERE sourceairport = 'CVO' AND sourceairport NOT IN (SELECT airportcode FROM airports WHERE city = 'APG')
SELECT DISTINCT airline FROM flights WHERE sourceairport = 'CVO' AND sourceairport NOT IN (SELECT airportcode FROM airports WHERE city = 'APG')
SELECT DISTINCT airline FROM flights WHERE sourceairport = 'CVO' AND sourceairport NOT IN (SELECT airportcode FROM airports WHERE city = 'APG')
SELECT DISTINCT airline FROM flights WHERE sourceairport = 'CVO' AND sourceairport NOT IN (SELECT airportcode FROM airports WHERE city = 'APG')
SELECT DISTINCT airline FROM flights WHERE sourceairport = 'CVO' AND sourceairport NOT IN (SELECT airportcode FROM airports WHERE city = 'APG')
SELECT DISTINCT airline FROM flights WHERE sourceairport = 'CVO' AND sourceairport NOT IN (SELECT airportcode FROM airports WHERE city = 'APG')
SELECT DISTINCT airline FROM flights WHERE sourceairport = 'CVO' AND sourceairport NOT IN (SELECT airportcode FROM airports WHERE city = 'APG')",SELECT DISTINCT airline FROM flights WHERE sourceairport = 'CVO' AND sourceairport NOT IN (SELECT airportcode FROM airports WHERE city = 'APG'),0,1.0
79,65,Find the first name and age of students who have a dog but do not have a cat as a pet.,pets_1,extra,"SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",7,"SELECT s.fname, s.age FROM student s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'dog' AND NOT EXISTS (     SELECT 1     FROM has_pet hp2     JOIN pets p2 ON hp2.petid = p2.petid     WHERE hp2.stuid = s.stuid AND p2.pettype = 'cat' )
SELECT s.fname, s.age FROM student s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'dog' AND NOT EXISTS (     SELECT 1     FROM has_pet hp2     JOIN pets p2 ON hp2.petid = p2.petid     WHERE hp2.stuid = s.stuid AND p2.pettype = 'cat' )
SELECT s.fname, s.age FROM student s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'dog' AND NOT EXISTS (     SELECT 1     FROM has_pet hp2     JOIN pets p2 ON hp2.petid = p2.petid     WHERE hp2.stuid = s.stuid AND p2.pettype = 'cat' )
SELECT s.fname, s.age FROM student s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'dog' AND NOT EXISTS (     SELECT 1     FROM has_pet hp2     JOIN pets p2 ON hp2.petid = p2.petid     WHERE hp2.stuid = s.stuid AND p2.pettype = 'cat' )
SELECT fname, age FROM student WHERE stuid IN (SELECT stuid FROM has_pet WHERE petid IN (SELECT petid FROM pets WHERE pettype = 'dog')) AND stuid NOT IN (SELECT stuid FROM has_pet WHERE petid IN (SELECT petid FROM pets WHERE pettype = 'cat'))
SELECT s.fname, s.age FROM student s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'dog' AND NOT EXISTS (     SELECT 1     FROM has_pet hp2     JOIN pets p2 ON hp2.petid = p2.petid     WHERE hp2.stuid = s.stuid AND p2.pettype = 'cat' ) 
SELECT s.fname, s.age FROM student s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'dog' AND NOT EXISTS (     SELECT 1     FROM has_pet hp2     JOIN pets p2 ON hp2.petid = p2.petid     WHERE hp2.stuid = s.stuid AND p2.pettype = 'cat' )","SELECT s.fname, s.age FROM student s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'dog' AND NOT EXISTS (     SELECT 1     FROM has_pet hp2     JOIN pets p2 ON hp2.petid = p2.petid     WHERE hp2.stuid = s.stuid AND p2.pettype = 'cat' )",0,1.0
80,683,List the names of people that are not poker players.,poker_player,hard,SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player),7,"SELECT name FROM people WHERE people_id NOT IN (SELECT people_id FROM poker_player)
SELECT name FROM people WHERE people_id NOT IN (SELECT people_id FROM poker_player)
SELECT name FROM people WHERE people_id NOT IN (SELECT people_id FROM poker_player)
SELECT name FROM people WHERE people_id NOT IN (SELECT people_id FROM poker_player)
SELECT name FROM people WHERE people_id NOT IN (SELECT people_id FROM poker_player)
SELECT name FROM people WHERE people_id NOT IN (SELECT people_id FROM poker_player)
SELECT name FROM people WHERE people_id NOT IN (SELECT people_id FROM poker_player)",SELECT name FROM people WHERE people_id NOT IN (SELECT people_id FROM poker_player),True,1.0
81,928,"Which professional did not operate any treatment on dogs? List the professional's id, role and email.",dog_kennels,extra,"SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id",7,"SELECT p.professional_id, p.role_code, p.email_address FROM professionals p LEFT JOIN treatments t ON p.professional_id = t.professional_id WHERE t.dog_id IS NULL AND p.role_code = 'PROFESSIONAL'
SELECT p.professional_id, p.role_code, p.email_address FROM professionals p LEFT JOIN treatments t ON p.professional_id = t.professional_id WHERE t.dog_id IS NULL AND p.role_code = 'PROFESSIONAL'
SELECT p.professional_id, p.role_code, p.email_address FROM professionals p LEFT JOIN treatments t ON p.professional_id = t.professional_id WHERE t.dog_id IS NULL AND p.role_code = 'PROFESSIONAL'
SELECT p.professional_id, p.role_code, p.email_address FROM professionals p LEFT JOIN treatments t ON p.professional_id = t.professional_id WHERE t.dog_id IS NULL AND p.role_code = 'PROFESSIONAL'
SELECT p.professional_id, p.role_code, p.email_address FROM professionals p LEFT JOIN treatments t ON p.professional_id = t.professional_id WHERE t.dog_id IS NULL AND p.role_code = 'PROFESSIONAL'
SELECT p.professional_id, p.role_code, p.email_address FROM professionals p LEFT JOIN treatments t ON p.professional_id = t.professional_id WHERE t.dog_id IS NULL AND p.role_code = 'PROFESSIONAL'
SELECT p.professional_id, p.role_code, p.email_address FROM professionals p LEFT JOIN treatments t ON p.professional_id = t.professional_id WHERE t.dog_id IS NULL AND p.role_code = 'PROFESSIONAL'","SELECT p.professional_id, p.role_code, p.email_address FROM professionals p LEFT JOIN treatments t ON p.professional_id = t.professional_id WHERE t.dog_id IS NULL AND p.role_code = 'PROFESSIONAL'",0,0.0
82,219,How many United Airlines flights go to City 'Aberdeen'?,flight_2,hard,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  ""Aberdeen"" AND T3.Airline  =  ""United Airlines""",7,"SELECT COUNT(*) FROM flights WHERE destairport IN (SELECT airportcode FROM airports WHERE city = 'Aberdeen') AND airline IN (SELECT airline FROM airlines WHERE abbreviation = 'UA')
SELECT COUNT(*) FROM flights WHERE destairport IN (SELECT airportcode FROM airports WHERE city = 'Aberdeen') AND airline IN (SELECT airline FROM airlines WHERE abbreviation = 'UA')
SELECT COUNT(*) FROM flights WHERE destairport IN (SELECT airportcode FROM airports WHERE city = 'Aberdeen') AND airline IN (SELECT airline FROM airlines WHERE abbreviation = 'UA')
SELECT COUNT(*) FROM flights WHERE destairport IN (SELECT airportcode FROM airports WHERE city = 'Aberdeen') AND airline IN (SELECT airline FROM airlines WHERE abbreviation = 'UA')
SELECT COUNT(*) FROM flights WHERE destairport IN (SELECT airportcode FROM airports WHERE city = 'Aberdeen') AND airline IN (SELECT airline FROM airlines WHERE abbreviation = 'UA')
SELECT COUNT(*) FROM flights WHERE destairport IN (SELECT airportcode FROM airports WHERE city = 'Aberdeen') AND airline IN (SELECT airline FROM airlines WHERE abbreviation = 'UA')
SELECT COUNT(*) FROM flights WHERE destairport IN (SELECT airportcode FROM airports WHERE city = 'Aberdeen') AND airline IN (SELECT airline FROM airlines WHERE abbreviation = 'UA')",SELECT COUNT(*) FROM flights WHERE destairport IN (SELECT airportcode FROM airports WHERE city = 'Aberdeen') AND airline IN (SELECT airline FROM airlines WHERE abbreviation = 'UA'),0,1.0
83,628,How many cartoons did each director create?,tvshow,medium,"SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by",7,"SELECT directed_by, COUNT(*) AS number_of_cartoons FROM cartoon GROUP BY directed_by
SELECT directed_by, COUNT(*) AS number_of_cartoons FROM cartoon GROUP BY directed_by
SELECT directed_by, COUNT(*) AS number_of_cartoons FROM cartoon GROUP BY directed_by
SELECT directed_by, COUNT(*) AS number_of_cartoons FROM cartoon GROUP BY directed_by
SELECT directed_by, COUNT(*) AS number_of_cartoons FROM cartoon GROUP BY directed_by
SELECT directed_by, COUNT(*) AS number_of_cartoons FROM cartoon GROUP BY directed_by
SELECT directed_by, COUNT(*) AS number_of_cartoons FROM cartoon GROUP BY directed_by","SELECT directed_by, COUNT(*) AS number_of_cartoons FROM cartoon GROUP BY directed_by",0,0.0
84,452,What are the first names and country codes for players who won both the WTA Championships and the Australian Open?,wta_1,extra,"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'",7,"SELECT p.first_name, p.country_code FROM players p JOIN matches m1 ON p.player_id = m1.winner_id AND m1.tourney_name = 'Australian Open' JOIN matches m2 ON p.player_id = m2.winner_id AND m2.tourney_name = 'WTA Championships' GROUP BY p.player_id HAVING COUNT(DISTINCT m1.match_num) > 0 AND COUNT(DISTINCT m2.match_num) > 0
SELECT p.first_name, p.country_code FROM players p JOIN matches m1 ON p.player_id = m1.winner_id AND m1.tourney_name = 'Australian Open' JOIN matches m2 ON p.player_id = m2.winner_id AND m2.tourney_name = 'WTA Championships' GROUP BY p.player_id HAVING COUNT(DISTINCT m1.match_num) > 0 AND COUNT(DISTINCT m2.match_num) > 0
SELECT p.first_name, p.country_code FROM players p JOIN matches m1 ON p.player_id = m1.winner_id AND m1.tourney_name = 'Australian Open' JOIN matches m2 ON p.player_id = m2.winner_id AND m2.tourney_name = 'WTA Championships' GROUP BY p.player_id HAVING COUNT(DISTINCT m1.match_num) > 0 AND COUNT(DISTINCT m2.match_num) > 0
SELECT p.first_name, p.country_code FROM players p JOIN matches m1 ON p.player_id = m1.winner_id AND m1.tourney_name = 'Australian Open' JOIN matches m2 ON p.player_id = m2.winner_id AND m2.tourney_name = 'WTA Championships' GROUP BY p.player_id HAVING COUNT(DISTINCT m1.match_num) > 0 AND COUNT(DISTINCT m2.match_num) > 0
SELECT p.first_name, p.country_code FROM players p JOIN matches m1 ON p.player_id = m1.winner_id AND m1.tourney_name = 'Australian Open' JOIN matches m2 ON p.player_id = m2.winner_id AND m2.tourney_name = 'WTA Championships' GROUP BY p.player_id HAVING COUNT(DISTINCT m1.match_num) > 0 AND COUNT(DISTINCT m2.match_num) > 0
SELECT p.first_name, p.country_code FROM players p JOIN matches m1 ON p.player_id = m1.winner_id AND m1.tourney_name = 'Australian Open' JOIN matches m2 ON p.player_id = m2.winner_id AND m2.tourney_name = 'WTA Championships' GROUP BY p.player_id HAVING COUNT(DISTINCT m1.match_num) > 0 AND COUNT(DISTINCT m2.match_num) > 0
SELECT p.first_name, p.country_code FROM players p JOIN matches m1 ON p.player_id = m1.winner_id AND m1.tourney_name = 'Australian Open' JOIN matches m2 ON p.player_id = m2.winner_id AND m2.tourney_name = 'WTA Championships' GROUP BY p.player_id HAVING COUNT(DISTINCT m1.match_num) > 0 AND COUNT(DISTINCT m2.match_num) > 0","SELECT p.first_name, p.country_code FROM players p JOIN matches m1 ON p.player_id = m1.winner_id AND m1.tourney_name = 'Australian Open' JOIN matches m2 ON p.player_id = m2.winner_id AND m2.tourney_name = 'WTA Championships' GROUP BY p.player_id HAVING COUNT(DISTINCT m1.match_num) > 0 AND COUNT(DISTINCT m2.match_num) > 0",0,0.0
85,485,How many different winners both participated in the WTA Championships and were left handed?,wta_1,medium,SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L',7,"SELECT COUNT(DISTINCT winner_id) FROM matches WHERE winner_hand = 'L' AND tourney_name = 'WTA Championships'
SELECT COUNT(DISTINCT winner_id) FROM matches WHERE winner_hand = 'L' AND tourney_name = 'WTA Championships'
SELECT COUNT(DISTINCT winner_id) FROM matches WHERE winner_hand = 'L' AND tourney_name = 'WTA Championships'
SELECT COUNT(DISTINCT winner_id) FROM matches WHERE winner_hand = 'L' AND tourney_name = 'WTA Championships'
SELECT COUNT(DISTINCT winner_id) FROM matches WHERE winner_hand = 'L' AND tourney_name = 'WTA Championships'
SELECT COUNT(DISTINCT winner_id) FROM matches WHERE winner_hand = 'L' AND tourney_name = 'WTA Championships'
SELECT COUNT(DISTINCT winner_id)  FROM matches  WHERE winner_hand = 'L'  AND winner_id IN (     SELECT player_id      FROM players      WHERE player_id IN (         SELECT winner_id          FROM matches          WHERE tourney_name = 'WTA Championships'     ) )",SELECT COUNT(DISTINCT winner_id) FROM matches WHERE winner_hand = 'L' AND tourney_name = 'WTA Championships',0,1.0
86,124,What are the names and ids of all countries with at least one car maker?,car_1,medium,"SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;",7,"SELECT countries.countryname, countries.countryid FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryname, countries.countryid HAVING COUNT(car_makers.id) > 0
SELECT countries.countryname, countries.countryid FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryname, countries.countryid HAVING COUNT(car_makers.id) > 0
SELECT countries.countryname, countries.countryid FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryname, countries.countryid HAVING COUNT(car_makers.id) > 0
SELECT countries.countryname, countries.countryid FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryname, countries.countryid HAVING COUNT(car_makers.id) > 0
SELECT countries.countryname, countries.countryid FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryname, countries.countryid HAVING COUNT(car_makers.id) > 0
SELECT countries.countryname, countries.countryid FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryname, countries.countryid HAVING COUNT(car_makers.id) > 0
SELECT countries.countryname, countries.countryid FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryname, countries.countryid HAVING COUNT(car_makers.id) > 0","SELECT countries.countryname, countries.countryid FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY countries.countryname, countries.countryid HAVING COUNT(car_makers.id) > 0",0,1.0
87,247,"What are flight numbers of flights departing from Airport ""APG""?",flight_2,easy,"SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  ""APG""",7,"SELECT flightno FROM flights WHERE sourceairport = 'APG'
SELECT flightno FROM flights WHERE sourceairport = 'APG'
SELECT flightno FROM flights WHERE sourceairport = 'APG'
SELECT flightno FROM flights WHERE sourceairport = 'APG'
SELECT flightno FROM flights WHERE sourceairport = 'APG'
SELECT flightno FROM flights WHERE sourceairport = 'APG'
SELECT flightno FROM flights WHERE sourceairport = 'APG'",SELECT flightno FROM flights WHERE sourceairport = 'APG',True,1.0
88,31,Show names for all stadiums except for stadiums having a concert in year 2014.,concert_singer,hard,SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014,7,"SELECT s.name  FROM stadium s  WHERE s.stadium_id NOT IN (     SELECT c.stadium_id      FROM concert c      WHERE c.year = 2014 )
SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert WHERE year = 2014)
SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert WHERE year = 2014)
SELECT s.name  FROM stadium s  WHERE s.stadium_id NOT IN (     SELECT c.stadium_id      FROM concert c      WHERE c.year = 2014 )
SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert WHERE year = 2014)
SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert WHERE year = 2014)
SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert WHERE year = 2014)",SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert WHERE year = 2014),0,1.0
89,389,Show the name of teachers aged either 32 or 33?,course_teach,medium,SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33,7,"SELECT name FROM teacher WHERE age IN (32, 33)
SELECT name FROM teacher WHERE age IN (32, 33)
SELECT name FROM teacher WHERE age IN (32, 33)
SELECT name FROM teacher WHERE age IN (32, 33)
SELECT name FROM teacher WHERE age IN (32, 33)
SELECT name FROM teacher WHERE age IN (32, 33)
SELECT name FROM teacher WHERE age IN (32, 33)","SELECT name FROM teacher WHERE age IN (32, 33)",0,1.0
90,165,"For the cars with 4 cylinders, which model has the largest horsepower?",car_1,extra,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;,7,"SELECT model_list.model FROM cars_data JOIN model_list ON cars_data.model = model_list.modelid WHERE cars_data.cylinders = 4 ORDER BY cars_data.horsepower DESC LIMIT 1
SELECT model_list.model FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid WHERE cars_data.cylinders = 4 ORDER BY cars_data.horsepower DESC LIMIT 1
SELECT model_list.model FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid WHERE cars_data.cylinders = 4 ORDER BY cars_data.horsepower DESC LIMIT 1
SELECT model_list.model FROM cars_data JOIN model_list ON cars_data.model = model_list.modelid WHERE cars_data.cylinders = 4 ORDER BY cars_data.horsepower DESC LIMIT 1
SELECT model_list.model FROM cars_data JOIN model_list ON cars_data.model = model_list.modelid WHERE cars_data.cylinders = 4 ORDER BY cars_data.horsepower DESC LIMIT 1
SELECT model_list.model FROM cars_data JOIN model_list ON cars_data.model = model_list.modelid WHERE cars_data.cylinders = 4 ORDER BY cars_data.horsepower DESC LIMIT 1
SELECT model_list.model FROM cars_data JOIN model_list ON cars_data.model = model_list.modelid WHERE cars_data.cylinders = 4 ORDER BY cars_data.horsepower DESC LIMIT 1",SELECT model_list.model FROM cars_data JOIN model_list ON cars_data.model = model_list.modelid WHERE cars_data.cylinders = 4 ORDER BY cars_data.horsepower DESC LIMIT 1,0,0.0
91,707,How much surface area do the countires in the Carribean cover together?,world_1,easy,"SELECT sum(SurfaceArea) FROM country WHERE Region  =  ""Caribbean""",7,"SELECT SUM(surfacearea) AS total_surface_area FROM country WHERE continent = 'Caribbean'
SELECT SUM(surfacearea) AS total_surface_area FROM country WHERE continent = 'Caribbean'
SELECT SUM(surfacearea) AS total_surface_area FROM country WHERE continent = 'Caribbean'
SELECT SUM(surfacearea) AS total_surface_area FROM country WHERE continent = 'Caribbean'
SELECT SUM(surfacearea) AS total_surface_area FROM country WHERE continent = 'Caribbean'
SELECT SUM(surfacearea) AS total_surface_area FROM country WHERE continent = 'Caribbean'
SELECT SUM(surfacearea) FROM country WHERE continent = 'Caribbean'",SELECT SUM(surfacearea) AS total_surface_area FROM country WHERE continent = 'Caribbean',0,0.0
92,1021,what are the different names of the singers that have sales more than 300000?,singer,medium,SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000,7,"SELECT DISTINCT s.name FROM singer s JOIN song so ON s.singer_id = so.singer_id WHERE so.sales > 300000
SELECT DISTINCT s.name FROM singer s JOIN song so ON s.singer_id = so.singer_id WHERE so.sales > 300000
SELECT DISTINCT s.name FROM singer s JOIN song so ON s.singer_id = so.singer_id WHERE so.sales > 300000
SELECT DISTINCT s.name FROM singer s JOIN song so ON s.singer_id = so.singer_id WHERE so.sales > 300000
SELECT DISTINCT s.name FROM singer s JOIN song so ON s.singer_id = so.singer_id WHERE so.sales > 300000
SELECT DISTINCT s.name FROM singer s JOIN song so ON s.singer_id = so.singer_id WHERE so.sales > 300000
SELECT DISTINCT s.name FROM singer s JOIN song so ON s.singer_id = so.singer_id WHERE so.sales > 300000",SELECT DISTINCT s.name FROM singer s JOIN song so ON s.singer_id = so.singer_id WHERE so.sales > 300000,0,1.0
93,58,What are the first names of every student who has a cat or dog as a pet?,pets_1,extra,SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog',7,"SELECT fname FROM students INNER JOIN has_pet ON students.stuid = has_pet.stuid INNER JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype IN ('cat', 'dog')
SELECT fname FROM students INNER JOIN has_pet ON students.stuid = has_pet.stuid INNER JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype IN ('cat', 'dog')
SELECT fname FROM students JOIN has_pet ON students.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype IN ('cat', 'dog')
SELECT fname FROM students INNER JOIN has_pet ON students.stuid = has_pet.stuid INNER JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype IN ('cat', 'dog')
SELECT fname FROM students INNER JOIN has_pet ON students.stuid = has_pet.stuid INNER JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype IN ('cat', 'dog')
SELECT fname FROM students INNER JOIN has_pet ON students.stuid = has_pet.stuid INNER JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype IN ('cat', 'dog')
SELECT fname FROM students JOIN has_pet ON students.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype IN ('cat', 'dog')","SELECT fname FROM students INNER JOIN has_pet ON students.stuid = has_pet.stuid INNER JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype IN ('cat', 'dog')",0,0.0
94,527,List the section_name in reversed lexicographical order.,student_transcripts_tracking,easy,SELECT section_name FROM Sections ORDER BY section_name DESC,7,"SELECT section_name FROM sections ORDER BY section_name DESC
SELECT section_name FROM sections ORDER BY section_name DESC
SELECT section_name FROM sections ORDER BY section_name DESC
SELECT section_name FROM sections ORDER BY section_name DESC
SELECT section_name FROM sections ORDER BY section_name DESC
SELECT section_name FROM sections ORDER BY section_name DESC
SELECT section_name FROM sections ORDER BY section_name DESC",SELECT section_name FROM sections ORDER BY section_name DESC,True,1.0
95,790,"What are the population, name and leader of the country with the largest area?",world_1,medium,"SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1",7,"SELECT population, name, headofstate FROM country ORDER BY surfacearea DESC LIMIT 1
SELECT population, name, headofstate FROM country WHERE area = (SELECT MAX(area) FROM country)
SELECT population, name, headofstate FROM country WHERE area = (SELECT MAX(area) FROM country)
SELECT population, name, headofstate FROM country ORDER BY surfacearea DESC LIMIT 1
SELECT population, name, headofstate FROM country ORDER BY surfacearea DESC LIMIT 1
SELECT population, name, headofstate FROM country WHERE area = (SELECT MAX(area) FROM country)
SELECT population, name, headofstate FROM country WHERE area = (SELECT MAX(area) FROM country)","SELECT population, name, headofstate FROM country WHERE area = (SELECT MAX(area) FROM country)",True,0.0
96,795,How many cities in each district have a population that is above the average population across all cities?,world_1,extra,"SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District",7,"SELECT district, COUNT(*) AS num_cities FROM city GROUP BY district HAVING COUNT(*) > (SELECT AVG(population) FROM city) ORDER BY num_cities DESC
SELECT district, COUNT(*) AS city_count FROM city GROUP BY district HAVING COUNT(*) > (SELECT AVG(population) FROM city) ORDER BY city_count DESC
SELECT district, COUNT(*) AS city_count FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district
SELECT district, COUNT(*) AS city_count FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district
SELECT district, COUNT(*) AS city_count FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district
SELECT district, COUNT(*) AS city_count FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district
SELECT district, COUNT(*) AS city_count FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district","SELECT district, COUNT(*) AS city_count FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district",0,0.0
97,211,How many flights depart from City 'Aberdeen' and have destination City 'Ashley'?,flight_2,hard,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  ""Ashley"" AND T3.City  =  ""Aberdeen""",7,"SELECT COUNT(*) FROM flights WHERE sourceairport IN (SELECT airportcode FROM airports WHERE city = 'Aberdeen') AND destairport IN (SELECT airportcode FROM airports WHERE city = 'Ashley')
SELECT COUNT(*)  FROM flights  JOIN airlines ON flights.airline = airlines.uid  JOIN airports AS source ON flights.sourceairport = source.airportcode  JOIN airports AS dest ON flights.destairport = dest.airportcode  WHERE source.city = 'Aberdeen' AND dest.city = 'Ashley'
SELECT COUNT(*) FROM flights WHERE sourceairport IN (SELECT airportcode FROM airports WHERE city = 'Aberdeen') AND destairport IN (SELECT airportcode FROM airports WHERE city = 'Ashley')
SELECT COUNT(*) FROM flights WHERE sourceairport IN (SELECT airportcode FROM airports WHERE city = 'Aberdeen') AND destairport IN (SELECT airportcode FROM airports WHERE city = 'Ashley')
SELECT COUNT(*) FROM flights WHERE sourceairport IN (SELECT airportcode FROM airports WHERE city = 'Aberdeen') AND destairport IN (SELECT airportcode FROM airports WHERE city = 'Ashley')
SELECT COUNT(*)  FROM flights  JOIN airlines ON flights.airline = airlines.uid  JOIN airports AS source ON flights.sourceairport = source.airportcode  JOIN airports AS dest ON flights.destairport = dest.airportcode  WHERE source.city = 'Aberdeen' AND dest.city = 'Ashley'
SELECT COUNT(*)  FROM flights  JOIN airlines ON flights.airline = airlines.uid  JOIN airports AS source ON flights.sourceairport = source.airportcode  JOIN airports AS dest ON flights.destairport = dest.airportcode  WHERE source.city = 'Aberdeen' AND dest.city = 'Ashley'",SELECT COUNT(*) FROM flights WHERE sourceairport IN (SELECT airportcode FROM airports WHERE city = 'Aberdeen') AND destairport IN (SELECT airportcode FROM airports WHERE city = 'Ashley'),0,1.0
98,79,Find the number of pets for each student who has any pet and student id.,pets_1,medium,"SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid",7,"SELECT s.stuid, COUNT(h.petid) AS num_pets FROM student s JOIN has_pet h ON s.stuid = h.stuid GROUP BY s.stuid
SELECT s.stuid, COUNT(h.petid) AS num_pets FROM student s JOIN has_pet h ON s.stuid = h.stuid GROUP BY s.stuid
SELECT s.stuid, COUNT(h.petid) AS num_pets FROM student s JOIN has_pet h ON s.stuid = h.stuid GROUP BY s.stuid
SELECT s.stuid, COUNT(h.petid) AS num_pets FROM student s JOIN has_pet h ON s.stuid = h.stuid GROUP BY s.stuid
SELECT s.stuid, COUNT(h.petid) AS num_pets FROM student s JOIN has_pet h ON s.stuid = h.stuid GROUP BY s.stuid
SELECT s.stuid, COUNT(h.petid) AS num_pets FROM student s JOIN has_pet h ON s.stuid = h.stuid GROUP BY s.stuid
SELECT s.stuid, COUNT(h.petid) AS num_pets FROM student s JOIN has_pet h ON s.stuid = h.stuid GROUP BY s.stuid","SELECT s.stuid, COUNT(h.petid) AS num_pets FROM student s JOIN has_pet h ON s.stuid = h.stuid GROUP BY s.stuid",0,0.0
99,95,Which model of the car has the minimum horsepower?,car_1,hard,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;,7,"SELECT model_list.model FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid WHERE cars_data.horsepower = (SELECT MIN(horsepower) FROM cars_data)
SELECT model_list.model FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid WHERE cars_data.horsepower = (SELECT MIN(horsepower) FROM cars_data)
SELECT model_list.model FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid WHERE cars_data.horsepower = (SELECT MIN(horsepower) FROM cars_data)
SELECT model_list.model FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid WHERE cars_data.horsepower = (SELECT MIN(horsepower) FROM cars_data)
SELECT model_list.model FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid WHERE cars_data.horsepower = (SELECT MIN(horsepower) FROM cars_data)
SELECT model_list.model FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid ORDER BY cars_data.horsepower ASC LIMIT 1
SELECT model_list.model FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid WHERE cars_data.horsepower = (SELECT MIN(horsepower) FROM cars_data)",SELECT model_list.model FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid WHERE cars_data.horsepower = (SELECT MIN(horsepower) FROM cars_data),0,0.0
100,1020,Show distinct names of singers that have songs with sales more than 300000.,singer,medium,SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000,7,"SELECT DISTINCT s.name FROM singer s JOIN song so ON s.singer_id = so.singer_id WHERE so.sales > 300000
SELECT DISTINCT s.name FROM singer s JOIN song so ON s.singer_id = so.singer_id WHERE so.sales > 300000
SELECT DISTINCT s.name FROM singer s JOIN song so ON s.singer_id = so.singer_id WHERE so.sales > 300000
SELECT DISTINCT s.name FROM singer s JOIN song so ON s.singer_id = so.singer_id WHERE so.sales > 300000
SELECT DISTINCT s.name FROM singer s JOIN song so ON s.singer_id = so.singer_id WHERE so.sales > 300000
SELECT DISTINCT s.name FROM singer s JOIN song so ON s.singer_id = so.singer_id WHERE so.sales > 300000
SELECT DISTINCT s.name FROM singer s JOIN song so ON s.singer_id = so.singer_id WHERE so.sales > 300000",SELECT DISTINCT s.name FROM singer s JOIN song so ON s.singer_id = so.singer_id WHERE so.sales > 300000,0,1.0
101,953,What are each owner's first name and their dogs's name?,dog_kennels,medium,"SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",7,"SELECT o.first_name, d.name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id
SELECT o.first_name, d.name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id
SELECT o.first_name, d.name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id
SELECT o.first_name, d.name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id
SELECT o.first_name, d.name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id
SELECT o.first_name, d.name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id
SELECT o.first_name, d.name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id","SELECT o.first_name, d.name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id",0,1.0
102,595,Which country has the most of TV Channels? List the country and number of TV Channels it has.,tvshow,hard,"SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;",7,"SELECT country, COUNT(*) AS num_channels FROM tv_channel GROUP BY country ORDER BY num_channels DESC LIMIT 1
SELECT country, COUNT(*) AS num_channels FROM tv_channel GROUP BY country ORDER BY num_channels DESC LIMIT 1
SELECT country, COUNT(*) AS num_channels FROM tv_channel GROUP BY country ORDER BY num_channels DESC LIMIT 1
SELECT country, COUNT(*) AS num_channels FROM tv_channel GROUP BY country ORDER BY num_channels DESC LIMIT 1
SELECT country, COUNT(*) AS num_channels FROM tv_channel GROUP BY country ORDER BY num_channels DESC LIMIT 1
SELECT country, COUNT(*) AS num_channels FROM tv_channel GROUP BY country ORDER BY num_channels DESC LIMIT 1
SELECT country, COUNT(*) AS num_channels FROM tv_channel GROUP BY country ORDER BY num_channels DESC LIMIT 1","SELECT country, COUNT(*) AS num_channels FROM tv_channel GROUP BY country ORDER BY num_channels DESC LIMIT 1",0,1.0
103,811,Give the total population and average surface area corresponding to countries in North America that have a surface area greater than 3000 .,world_1,hard,"select sum(population) ,  avg(surfacearea) from country where continent  =  ""north america"" and surfacearea  >  3000",7,"SELECT SUM(population) AS total_population, AVG(surfacearea) AS average_surface_area FROM country WHERE continent = 'North America' AND surfacearea > 3000
SELECT SUM(population) AS total_population, AVG(surfacearea) AS average_surface_area FROM country WHERE continent = 'North America' AND surfacearea > 3000
SELECT SUM(population) AS total_population, AVG(surfacearea) AS average_surface_area FROM country WHERE continent = 'North America' AND surfacearea > 3000
SELECT SUM(population) AS total_population, AVG(surfacearea) AS average_surface_area FROM country WHERE continent = 'North America' AND surfacearea > 3000
SELECT SUM(population) AS total_population, AVG(surfacearea) AS average_surface_area FROM country WHERE continent = 'North America' AND surfacearea > 3000
SELECT SUM(population) AS total_population, AVG(surfacearea) AS average_surface_area FROM country WHERE continent = 'North America' AND surfacearea > 3000
SELECT SUM(population) AS total_population, AVG(surfacearea) AS average_surface_area FROM country WHERE continent = 'North America' AND surfacearea > 3000","SELECT SUM(population) AS total_population, AVG(surfacearea) AS average_surface_area FROM country WHERE continent = 'North America' AND surfacearea > 3000",0,0.0
104,172,What are the different models wthat are lighter than 3500 but were not built by the Ford Motor Company?,car_1,extra,SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';,7,"SELECT DISTINCT model_list.model FROM model_list JOIN car_makers ON model_list.maker = car_makers.id JOIN cars_data ON model_list.model = cars_data.make WHERE cars_data.weight < 3500 AND car_makers.maker != 'Ford'
SELECT DISTINCT model_list.model FROM model_list JOIN car_makers ON model_list.maker = car_makers.id JOIN cars_data ON model_list.model = cars_data.make WHERE cars_data.weight < 3500 AND car_makers.maker != 'Ford Motor Company'
SELECT DISTINCT model_list.model FROM model_list JOIN car_makers ON model_list.maker = car_makers.id JOIN cars_data ON model_list.model = cars_data.make WHERE cars_data.weight < 3500 AND car_makers.maker != 'Ford Motor Company'
SELECT DISTINCT model_list.model FROM model_list JOIN car_makers ON model_list.maker = car_makers.id JOIN cars_data ON model_list.model = cars_data.make WHERE cars_data.weight < 3500 AND car_makers.maker != 'Ford Motor Company'
SELECT DISTINCT model_list.model FROM model_list JOIN car_makers ON model_list.maker = car_makers.id JOIN cars_data ON model_list.model = cars_data.make WHERE cars_data.weight < 3500 AND car_makers.maker != 'Ford Motor Company'
SELECT DISTINCT model_list.model FROM model_list JOIN car_makers ON model_list.maker = car_makers.id JOIN cars_data ON model_list.model = cars_data.make WHERE cars_data.weight < 3500 AND car_makers.maker != 'Ford Motor Company'
SELECT DISTINCT model_list.model FROM model_list JOIN car_makers ON model_list.maker = car_makers.id JOIN cars_data ON model_list.model = cars_data.make WHERE cars_data.weight < 3500 AND car_makers.maker != 'Ford'",SELECT DISTINCT model_list.model FROM model_list JOIN car_makers ON model_list.maker = car_makers.id JOIN cars_data ON model_list.model = cars_data.make WHERE cars_data.weight < 3500 AND car_makers.maker != 'Ford Motor Company',0,0.0
105,123,What are the countries having at least one car maker? List name and id.,car_1,medium,"SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;",7,"SELECT DISTINCT c.countryname, c.countryid FROM countries c JOIN car_makers cm ON c.countryid = cm.country WHERE cm.maker IS NOT NULL
SELECT c.countryname, c.countryid FROM countries c JOIN car_makers cm ON c.countryid = cm.country GROUP BY c.countryname, c.countryid HAVING COUNT(cm.id) > 0
SELECT DISTINCT c.countryname, c.countryid FROM countries c JOIN car_makers cm ON c.countryid = cm.country WHERE cm.maker IS NOT NULL
SELECT DISTINCT c.countryname, c.countryid FROM countries c JOIN car_makers cm ON c.countryid = cm.country WHERE cm.maker IS NOT NULL
SELECT c.countryname, c.countryid FROM countries c JOIN car_makers cm ON c.countryid = cm.country GROUP BY c.countryname, c.countryid HAVING COUNT(cm.id) > 0
SELECT c.countryname, c.countryid FROM countries c JOIN car_makers cm ON c.countryid = cm.country GROUP BY c.countryname, c.countryid HAVING COUNT(cm.id) > 0
SELECT DISTINCT c.countryname, c.countryid FROM countries c JOIN car_makers cm ON c.countryid = cm.country WHERE cm.maker IS NOT NULL","SELECT DISTINCT c.countryname, c.countryid FROM countries c JOIN car_makers cm ON c.countryid = cm.country WHERE cm.maker IS NOT NULL",0,1.0
106,936,Which owner has paid for the most treatments on his or her dogs? List the owner id and last name.,dog_kennels,extra,"SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT o.owner_id, o.last_name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id JOIN treatments t ON d.dog_id = t.dog_id GROUP BY o.owner_id, o.last_name ORDER BY COUNT(t.treatment_id) DESC LIMIT 1
SELECT o.owner_id, o.last_name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id JOIN treatments t ON d.dog_id = t.dog_id GROUP BY o.owner_id, o.last_name ORDER BY COUNT(t.treatment_id) DESC LIMIT 1
SELECT o.owner_id, o.last_name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id JOIN treatments t ON d.dog_id = t.dog_id GROUP BY o.owner_id, o.last_name ORDER BY COUNT(t.treatment_id) DESC LIMIT 1
SELECT o.owner_id, o.last_name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id JOIN treatments t ON d.dog_id = t.dog_id GROUP BY o.owner_id, o.last_name ORDER BY COUNT(t.treatment_id) DESC LIMIT 1
SELECT o.owner_id, o.last_name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id JOIN treatments t ON d.dog_id = t.dog_id GROUP BY o.owner_id, o.last_name ORDER BY COUNT(t.treatment_id) DESC LIMIT 1
SELECT o.owner_id, o.last_name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id JOIN treatments t ON d.dog_id = t.dog_id GROUP BY o.owner_id, o.last_name ORDER BY COUNT(t.treatment_id) DESC LIMIT 1
SELECT o.owner_id, o.last_name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id JOIN treatments t ON d.dog_id = t.dog_id GROUP BY o.owner_id, o.last_name ORDER BY COUNT(t.treatment_id) DESC LIMIT 1","SELECT o.owner_id, o.last_name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id JOIN treatments t ON d.dog_id = t.dog_id GROUP BY o.owner_id, o.last_name ORDER BY COUNT(t.treatment_id) DESC LIMIT 1",0,1.0
107,911,What are the names of high schoolers who have a grade of over 5 and have 2 or more friends?,network_1,hard,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2,7,"SELECT hs.name FROM highschooler hs JOIN friend f ON hs.id = f.student_id WHERE hs.grade > 5 AND (SELECT COUNT(*) FROM friend WHERE student_id = hs.id) >= 2
SELECT hs.name FROM highschooler hs JOIN friend f ON hs.id = f.student_id WHERE hs.grade > 5 AND (SELECT COUNT(*) FROM friend WHERE student_id = hs.id) >= 2
SELECT hs.name FROM highschooler hs JOIN friend f ON hs.id = f.student_id WHERE hs.grade > 5 AND (SELECT COUNT(*) FROM friend WHERE student_id = hs.id) >= 2
SELECT hs.name FROM highschooler hs JOIN friend f ON hs.id = f.student_id WHERE hs.grade > 5 AND (SELECT COUNT(*) FROM friend WHERE student_id = hs.id) >= 2
SELECT DISTINCT hs1.name FROM highschooler hs1 JOIN friend ON hs1.id = friend.student_id JOIN highschooler hs2 ON friend.friend_id = hs2.id WHERE hs1.grade > 5 AND (SELECT COUNT(*) FROM friend WHERE friend.student_id = hs1.id) >= 2
SELECT hs.name FROM highschooler hs JOIN friend f ON hs.id = f.student_id WHERE hs.grade > 5 AND (SELECT COUNT(*) FROM friend WHERE student_id = hs.id) >= 2
SELECT hs.name FROM highschooler hs JOIN friend f ON hs.id = f.student_id WHERE hs.grade > 5 AND (SELECT COUNT(*) FROM friend WHERE student_id = hs.id) >= 2",SELECT hs.name FROM highschooler hs JOIN friend f ON hs.id = f.student_id WHERE hs.grade > 5 AND (SELECT COUNT(*) FROM friend WHERE student_id = hs.id) >= 2,0,1.0
108,299,"List document IDs, document names, and document descriptions for all documents.",cre_Doc_Template_Mgt,medium,"SELECT document_id ,  document_name ,  document_description FROM Documents",7,"SELECT document_id, document_name, document_description  FROM documents
SELECT document_id, document_name, document_description  FROM documents
SELECT document_id, document_name, document_description  FROM documents
SELECT document_id, document_name, document_description  FROM documents
SELECT document_id, document_name, document_description  FROM documents
SELECT document_id, document_name, document_description  FROM documents
SELECT document_id, document_name, document_description  FROM documents","SELECT document_id, document_name, document_description  FROM documents",True,1.0
109,576,What is the id of the semester that had both Masters and Bachelors students enrolled?,student_transcripts_tracking,extra,SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor',7,"SELECT semester_id FROM semesters s JOIN student_enrolment se ON s.semester_id = se.semester_id JOIN degree_programs dp ON se.degree_program_id = dp.degree_program_id WHERE dp.degree_summary_name IN ('Masters', 'Bachelors') GROUP BY s.semester_id HAVING COUNT(DISTINCT dp.
SELECT semester_id FROM semesters s JOIN student_enrolment se ON s.semester_id = se.semester_id JOIN degree_programs dp ON se.degree_program_id = dp.degree_program_id WHERE dp.degree_summary_name IN ('Masters', 'Bachelors') GROUP BY s.semester_id HAVING COUNT(DISTINCT dp.
SELECT semester_id FROM semesters s JOIN student_enrolment se ON s.semester_id = se.semester_id JOIN degree_programs dp ON se.degree_program_id = dp.degree_program_id WHERE dp.degree_summary_name IN ('Masters', 'Bachelors') GROUP BY s.semester_id HAVING COUNT(DISTINCT dp.
SELECT semester_id FROM semesters s JOIN student_enrolment se ON s.semester_id = se.semester_id JOIN degree_programs dp ON se.degree_program_id = dp.degree_program_id WHERE dp.degree_summary_name IN ('Masters', 'Bachelors') GROUP BY s.semester_id HAVING COUNT(DISTINCT dp.
SELECT semester_id FROM semesters s JOIN student_enrolment se ON s.semester_id = se.semester_id JOIN degree_programs dp ON se.degree_program_id = dp.degree_program_id WHERE dp.degree_summary_name IN ('Masters', 'Bachelors') GROUP BY s.semester_id HAVING COUNT(DISTINCT dp.
SELECT semester_id FROM semesters s JOIN student_enrolment se ON s.semester_id = se.semester_id JOIN degree_programs dp ON se.degree_program_id = dp.degree_program_id WHERE dp.degree_summary_name IN ('Masters', 'Bachelors') GROUP BY s.semester_id HAVING COUNT(DISTINCT dp.
SELECT semester_id FROM semesters s JOIN student_enrolment se ON s.semester_id = se.semester_id JOIN degree_programs dp ON se.degree_program_id = dp.degree_program_id WHERE dp.degree_summary_name IN ('Masters', 'Bachelors') GROUP BY s.semester_id HAVING COUNT(DISTINCT dp.","SELECT semester_id FROM semesters s JOIN student_enrolment se ON s.semester_id = se.semester_id JOIN degree_programs dp ON se.degree_program_id = dp.degree_program_id WHERE dp.degree_summary_name IN ('Masters', 'Bachelors') GROUP BY s.semester_id HAVING COUNT(DISTINCT dp.",0,0.0
110,804,What are the names of the nations with the 3 lowest populations?,world_1,medium,SELECT Name FROM country ORDER BY Population ASC LIMIT 3,7,"SELECT name FROM country ORDER BY population ASC LIMIT 3
SELECT name FROM country ORDER BY population ASC LIMIT 3
SELECT name FROM country ORDER BY population ASC LIMIT 3
SELECT name FROM country ORDER BY population ASC LIMIT 3
SELECT name FROM country ORDER BY population ASC LIMIT 3
SELECT name FROM country ORDER BY population ASC LIMIT 3
SELECT name FROM country ORDER BY population ASC LIMIT 3",SELECT name FROM country ORDER BY population ASC LIMIT 3,True,1.0
111,97,Find the model of the car whose weight is below the average weight.,car_1,extra,SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA),7,"SELECT ml.model FROM cars_data cd JOIN model_list ml ON cd.id = ml.modelid WHERE cd.weight < (SELECT AVG(weight) FROM cars_data)
SELECT ml.model FROM cars_data cd JOIN model_list ml ON cd.id = ml.modelid WHERE cd.weight < (SELECT AVG(weight) FROM cars_data)
SELECT ml.model FROM cars_data cd JOIN model_list ml ON cd.id = ml.modelid WHERE cd.weight < (SELECT AVG(weight) FROM cars_data)
SELECT ml.model FROM cars_data cd JOIN model_list ml ON cd.id = ml.modelid WHERE cd.weight < (SELECT AVG(weight) FROM cars_data)
SELECT ml.model FROM cars_data cd JOIN model_list ml ON cd.id = ml.modelid WHERE cd.weight < (SELECT AVG(weight) FROM cars_data)
SELECT ml.model FROM cars_data cd JOIN model_list ml ON cd.id = ml.modelid WHERE cd.weight < (SELECT AVG(weight) FROM cars_data)
SELECT ml.model FROM cars_data cd JOIN model_list ml ON cd.id = ml.modelid WHERE cd.weight < (SELECT AVG(weight) FROM cars_data)",SELECT ml.model FROM cars_data cd JOIN model_list ml ON cd.id = ml.modelid WHERE cd.weight < (SELECT AVG(weight) FROM cars_data),0,0.0
112,760,Find the city with the largest population that uses English.,world_1,extra,"SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  ""English"" ORDER BY T1.Population DESC LIMIT 1",7,"SELECT name FROM city WHERE countrycode IN (SELECT code FROM country WHERE continent = 'North America' OR continent = 'South America') AND countrylanguage.language = 'English' ORDER BY population DESC LIMIT 1
SELECT name FROM city WHERE countrycode IN (SELECT code FROM country WHERE continent = 'North America' OR continent = 'South America') AND countrylanguage.language = 'English' ORDER BY population DESC LIMIT 1
SELECT name FROM city WHERE countrycode IN (SELECT code FROM countrylanguage WHERE language = 'English') ORDER BY population DESC LIMIT 1
SELECT name FROM city WHERE countrycode IN (SELECT code FROM country WHERE continent = 'North America' OR continent = 'South America') AND countrylanguage.language = 'English' ORDER BY population DESC LIMIT 1
SELECT name FROM city WHERE countrycode IN (SELECT code FROM country WHERE continent = 'North America' OR continent = 'South America') AND countrylanguage.language = 'English' ORDER BY population DESC LIMIT 1
SELECT name FROM city WHERE countrycode IN (SELECT code FROM country WHERE continent = 'North America' OR continent = 'South America') AND countrylanguage.language = 'English' ORDER BY population DESC LIMIT 1
SELECT name FROM city WHERE countrycode IN (SELECT code FROM country WHERE continent = 'North America' OR continent = 'South America') AND countrylanguage.language = 'English' ORDER BY population DESC LIMIT 1",SELECT name FROM city WHERE countrycode IN (SELECT code FROM country WHERE continent = 'North America' OR continent = 'South America') AND countrylanguage.language = 'English' ORDER BY population DESC LIMIT 1,0,0.0
113,747,Give the names of nations that speak both English and French.,world_1,extra,"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""French""",7,"SELECT DISTINCT c.name FROM country c JOIN countrylanguage cl1 ON c.code = cl1.countrycode AND cl1.language = 'English' JOIN countrylanguage cl2 ON c.code = cl2.countrycode AND cl2.language = 'French' 
SELECT DISTINCT c.name FROM country c JOIN countrylanguage cl1 ON c.code = cl1.countrycode AND cl1.language = 'English' JOIN countrylanguage cl2 ON c.code = cl2.countrycode AND cl2.language = 'French' 
SELECT DISTINCT c.name FROM country c JOIN countrylanguage cl1 ON c.code = cl1.countrycode AND cl1.language = 'English' JOIN countrylanguage cl2 ON c.code = cl2.countrycode AND cl2.language = 'French' 
SELECT DISTINCT c.name FROM country c JOIN countrylanguage cl1 ON c.code = cl1.countrycode AND cl1.language = 'English' JOIN countrylanguage cl2 ON c.code = cl2.countrycode AND cl2.language = 'French'
SELECT DISTINCT c.name FROM country c JOIN countrylanguage cl1 ON c.code = cl1.countrycode AND cl1.language = 'English' JOIN countrylanguage cl2 ON c.code = cl2.countrycode AND cl2.language = 'French' 
SELECT DISTINCT c.name FROM country c JOIN countrylanguage cl1 ON c.code = cl1.countrycode AND cl1.language = 'English' JOIN countrylanguage cl2 ON c.code = cl2.countrycode AND cl2.language = 'French' 
SELECT DISTINCT c.name FROM country c JOIN countrylanguage cl1 ON c.code = cl1.countrycode AND cl1.language = 'English' JOIN countrylanguage cl2 ON c.code = cl2.countrycode AND cl2.language = 'French'",SELECT DISTINCT c.name FROM country c JOIN countrylanguage cl1 ON c.code = cl1.countrycode AND cl1.language = 'English' JOIN countrylanguage cl2 ON c.code = cl2.countrycode AND cl2.language = 'French' ,0,1.0
114,500,What is the ship id and name that caused most total injuries?,battle_death,extra,"SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1",7,"SELECT s.id, s.name FROM ship s JOIN death d ON s.id = d.caused_by_ship_id GROUP BY s.id ORDER BY SUM(d.injured) DESC LIMIT 1
SELECT s.id, s.name FROM ship s JOIN death d ON s.id = d.caused_by_ship_id GROUP BY s.id ORDER BY SUM(d.injured) DESC LIMIT 1
SELECT s.id, s.name FROM ship s JOIN death d ON s.id = d.caused_by_ship_id GROUP BY s.id ORDER BY SUM(d.injured) DESC LIMIT 1
SELECT s.id, s.name FROM ship s JOIN death d ON s.id = d.caused_by_ship_id GROUP BY s.id ORDER BY SUM(d.injured) DESC LIMIT 1
SELECT s.id, s.name FROM ship s JOIN death d ON s.id = d.caused_by_ship_id GROUP BY s.id ORDER BY SUM(d.injured) DESC LIMIT 1
SELECT s.id, s.name FROM ship s JOIN death d ON s.id = d.caused_by_ship_id GROUP BY s.id ORDER BY SUM(d.injured) DESC LIMIT 1
SELECT s.id, s.name FROM ship s JOIN death d ON s.id = d.caused_by_ship_id GROUP BY s.id ORDER BY SUM(d.injured) DESC LIMIT 1","SELECT s.id, s.name FROM ship s JOIN death d ON s.id = d.caused_by_ship_id GROUP BY s.id ORDER BY SUM(d.injured) DESC LIMIT 1",0,0.0
115,376,Return the id of the document with the fewest paragraphs.,cre_Doc_Template_Mgt,hard,SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1,7,"SELECT document_id FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id ORDER BY COUNT(paragraphs.paragraph_id) LIMIT 1
SELECT document_id FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id ORDER BY COUNT(paragraphs.paragraph_id) LIMIT 1
SELECT document_id FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id ORDER BY COUNT(paragraphs.paragraph_id) LIMIT 1
SELECT document_id FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id ORDER BY COUNT(paragraphs.paragraph_id) ASC LIMIT 1
SELECT document_id FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id ORDER BY COUNT(paragraphs.paragraph_id) ASC LIMIT 1
SELECT document_id FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id ORDER BY COUNT(paragraphs.paragraph_id) ASC LIMIT 1
SELECT document_id FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id ORDER BY COUNT(paragraphs.paragraph_id) ASC LIMIT 1",SELECT document_id FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id ORDER BY COUNT(paragraphs.paragraph_id) ASC LIMIT 1,0,0.0
116,864,Show the names and grades of each high schooler.,network_1,medium,"SELECT name ,  grade FROM Highschooler",7,"SELECT name, grade FROM highschooler
SELECT name, grade FROM highschooler
SELECT name, grade FROM highschooler
SELECT name, grade FROM highschooler
SELECT name, grade FROM highschooler
SELECT name, grade FROM highschooler
SELECT name, grade FROM highschooler","SELECT name, grade FROM highschooler",True,1.0
117,24,Show the stadium name and capacity with most number of concerts in year 2014 or after.,concert_singer,extra,"SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT s.name, s.capacity FROM stadium s JOIN concert c ON s.stadium_id = c.stadium_id WHERE c.year >= 2014 GROUP BY s.stadium_id ORDER BY COUNT(*) DESC LIMIT 1
SELECT s.name, s.capacity FROM stadium s JOIN concert c ON s.stadium_id = c.stadium_id WHERE c.year >= 2014 GROUP BY s.stadium_id ORDER BY COUNT(*) DESC LIMIT 1
SELECT s.name, s.capacity FROM stadium s JOIN concert c ON s.stadium_id = c.stadium_id WHERE c.year >= 2014 GROUP BY s.stadium_id ORDER BY COUNT(*) DESC LIMIT 1
SELECT s.name, s.capacity FROM stadium s JOIN concert c ON s.stadium_id = c.stadium_id WHERE c.year >= 2014 GROUP BY s.stadium_id ORDER BY COUNT(*) DESC LIMIT 1
SELECT s.name, s.capacity FROM stadium s JOIN concert c ON s.stadium_id = c.stadium_id WHERE c.year >= 2014 GROUP BY s.stadium_id ORDER BY COUNT(*) DESC LIMIT 1
SELECT s.name, s.capacity FROM stadium s JOIN concert c ON s.stadium_id = c.stadium_id WHERE c.year >= 2014 GROUP BY s.stadium_id ORDER BY COUNT(*) DESC LIMIT 1
SELECT s.name, s.capacity FROM stadium s JOIN concert c ON s.stadium_id = c.stadium_id WHERE c.year >= 2014 GROUP BY s.stadium_id ORDER BY COUNT(*) DESC LIMIT 1","SELECT s.name, s.capacity FROM stadium s JOIN concert c ON s.stadium_id = c.stadium_id WHERE c.year >= 2014 GROUP BY s.stadium_id ORDER BY COUNT(*) DESC LIMIT 1",0,1.0
118,982,How many professionals did not operate any treatment on dogs?,dog_kennels,extra,SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments ),7,"SELECT COUNT(*) FROM professionals p LEFT JOIN treatments t ON p.professional_id = t.professional_id LEFT JOIN dogs d ON t.dog_id = d.dog_id WHERE d.abandoned_yn = 'N' AND t.treatment_id IS NULL
SELECT COUNT(*) FROM professionals p LEFT JOIN treatments t ON p.professional_id = t.professional_id LEFT JOIN dogs d ON t.dog_id = d.dog_id WHERE d.abandoned_yn = 'N' AND t.treatment_id IS NULL
SELECT COUNT(*) FROM professionals p LEFT JOIN treatments t ON p.professional_id = t.professional_id LEFT JOIN dogs d ON t.dog_id = d.dog_id WHERE d.abandoned_yn = 'N' AND t.treatment_id IS NULL
SELECT COUNT(*) FROM professionals p LEFT JOIN treatments t ON p.professional_id = t.professional_id LEFT JOIN dogs d ON t.dog_id = d.dog_id WHERE d.abandoned_yn = 'N' AND t.treatment_id IS NULL
SELECT COUNT(*) FROM professionals p LEFT JOIN treatments t ON p.professional_id = t.professional_id LEFT JOIN dogs d ON t.dog_id = d.dog_id WHERE d.abandoned_yn = 'N' AND t.treatment_id IS NULL
SELECT COUNT(DISTINCT professionals.professional_id) FROM professionals LEFT JOIN treatments ON professionals.professional_id = treatments.professional_id WHERE treatments.treatment_id IS NULL
SELECT COUNT(*) FROM professionals p LEFT JOIN treatments t ON p.professional_id = t.professional_id LEFT JOIN dogs d ON t.dog_id = d.dog_id WHERE d.abandoned_yn = 'N' AND t.treatment_id IS NULL",SELECT COUNT(*) FROM professionals p LEFT JOIN treatments t ON p.professional_id = t.professional_id LEFT JOIN dogs d ON t.dog_id = d.dog_id WHERE d.abandoned_yn = 'N' AND t.treatment_id IS NULL,0,0.0
119,284,Which shop has the most employees? Give me the shop name.,employee_hire_evaluation,extra,SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1,7,"SELECT s.name, COUNT(e.employee_id) AS num_employees FROM shop s JOIN hiring h ON s.shop_id = h.shop_id JOIN employee e ON h.employee_id = e.employee_id GROUP BY s.name ORDER BY num_employees DESC LIMIT 1
SELECT s.name AS shop_name, COUNT(e.employee_id) AS number_of_employees FROM shop s JOIN hiring h ON s.shop_id = h.shop_id JOIN employee e ON h.employee_id = e.employee_id GROUP BY s.shop_id ORDER BY number_of_employees DESC LIMIT 1
SELECT s.name, COUNT(e.employee_id) AS num_employees FROM shop s JOIN hiring h ON s.shop_id = h.shop_id JOIN employee e ON h.employee_id = e.employee_id GROUP BY s.name ORDER BY num_employees DESC LIMIT 1
SELECT s.name, COUNT(e.employee_id) AS num_employees FROM shop s JOIN hiring h ON s.shop_id = h.shop_id JOIN employee e ON h.employee_id = e.employee_id GROUP BY s.name ORDER BY num_employees DESC LIMIT 1
SELECT s.name, COUNT(e.employee_id) AS num_employees FROM shop s JOIN hiring h ON s.shop_id = h.shop_id JOIN employee e ON h.employee_id = e.employee_id GROUP BY s.name ORDER BY num_employees DESC LIMIT 1
SELECT s.name, COUNT(e.employee_id) AS num_employees FROM shop s JOIN hiring h ON s.shop_id = h.shop_id JOIN employee e ON h.employee_id = e.employee_id GROUP BY s.name ORDER BY num_employees DESC LIMIT 1
SELECT s.name, COUNT(e.employee_id) AS num_employees FROM shop s JOIN hiring h ON s.shop_id = h.shop_id JOIN employee e ON h.employee_id = e.employee_id GROUP BY s.name ORDER BY num_employees DESC LIMIT 1","SELECT s.name, COUNT(e.employee_id) AS num_employees FROM shop s JOIN hiring h ON s.shop_id = h.shop_id JOIN employee e ON h.employee_id = e.employee_id GROUP BY s.name ORDER BY num_employees DESC LIMIT 1",0,0.0
120,152,What are the different models created by either the car maker General Motors or weighed more than 3500?,car_1,extra,SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;,7,"SELECT DISTINCT model_list.model FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.maker IN ('General Motors', 'General Motors') OR car_makers.fullname IN ('General Motors', 'General Motors') AND car_makers.weight > 3500
SELECT DISTINCT model_list.model FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.maker IN ('General Motors', 'General Motors') OR car_makers.id IN (     SELECT car_makers.id     FROM car_makers     JOIN cars_data ON car_makers.id = cars_data.id     WHERE cars_data.weight > 3500 )
SELECT DISTINCT model_list.model FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.maker IN ('General Motors', 'General Motors') OR car_makers.fullname IN ('General Motors', 'General Motors') AND car_makers.weight > 3500
SELECT DISTINCT model_list.model FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.maker IN ('General Motors', 'General Motors') OR car_makers.fullname IN ('General Motors', 'General Motors') AND car_makers.weight > 3500
SELECT DISTINCT ml.model FROM model_list ml JOIN car_makers cm ON ml.maker = cm.id JOIN cars_data cd ON ml.model = cd.make WHERE cm.maker IN ('General Motors') OR cd.weight > 3500
SELECT DISTINCT ml.model FROM model_list ml JOIN car_makers cm ON ml.maker = cm.id JOIN cars_data cd ON ml.model = cd.make WHERE cm.maker IN ('General Motors') OR cd.weight > 3500
SELECT DISTINCT model_list.model FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.maker IN ('General Motors', 'General Motors') OR car_makers.weight > 3500","SELECT DISTINCT model_list.model FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.maker IN ('General Motors', 'General Motors') OR car_makers.fullname IN ('General Motors', 'General Motors') AND car_makers.weight > 3500",0,0.0
121,488,"What is the first name, country code, and birth date of the player with the most winner rank points across all matches?",wta_1,hard,"SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1",7,"SELECT p.first_name, p.country_code, p.birth_date  FROM players p  JOIN matches m ON p.player_id = m.winner_id  ORDER BY m.winner_rank_points DESC  LIMIT 1
SELECT p.first_name, p.country_code, p.birth_date  FROM players p  JOIN matches m ON p.player_id = m.winner_id  ORDER BY m.winner_rank_points DESC  LIMIT 1
SELECT p.first_name, p.country_code, p.birth_date  FROM players p  JOIN matches m ON p.player_id = m.winner_id  ORDER BY m.winner_rank_points DESC  LIMIT 1
SELECT p.first_name, p.country_code, p.birth_date  FROM players p  JOIN matches m ON p.player_id = m.winner_id  ORDER BY m.winner_rank_points DESC  LIMIT 1
SELECT p.first_name, p.country_code, p.birth_date  FROM players p  JOIN matches m ON p.player_id = m.winner_id  ORDER BY m.winner_rank_points DESC  LIMIT 1
SELECT p.first_name, p.country_code, p.birth_date  FROM players p  JOIN matches m ON p.player_id = m.winner_id  ORDER BY m.winner_rank_points DESC  LIMIT 1
SELECT p.first_name, p.country_code, p.birth_date  FROM players p  JOIN matches m ON p.player_id = m.winner_id  ORDER BY m.winner_rank_points DESC  LIMIT 1","SELECT p.first_name, p.country_code, p.birth_date  FROM players p  JOIN matches m ON p.player_id = m.winner_id  ORDER BY m.winner_rank_points DESC  LIMIT 1",0,1.0
122,945,Which professionals have operated a treatment that costs less than the average? Give me theor first names and last names.,dog_kennels,extra,"SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )",7,"SELECT p.first_name, p.last_name FROM professionals p JOIN treatments t ON p.professional_id = t.professional_id WHERE t.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM treatments)
SELECT p.first_name, p.last_name FROM professionals p JOIN treatments t ON p.professional_id = t.professional_id WHERE t.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM treatments)
SELECT p.first_name, p.last_name FROM professionals p JOIN treatments t ON p.professional_id = t.professional_id WHERE t.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM treatments)
SELECT p.first_name, p.last_name FROM professionals p JOIN treatments t ON p.professional_id = t.professional_id WHERE t.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM treatments)
SELECT p.first_name, p.last_name FROM professionals p JOIN treatments t ON p.professional_id = t.professional_id WHERE t.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM treatments)
SELECT p.first_name, p.last_name FROM professionals p JOIN treatments t ON p.professional_id = t.professional_id WHERE t.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM treatments)
SELECT p.first_name, p.last_name FROM professionals p JOIN treatments t ON p.professional_id = t.professional_id WHERE t.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM treatments)","SELECT p.first_name, p.last_name FROM professionals p JOIN treatments t ON p.professional_id = t.professional_id WHERE t.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM treatments)",0,0.0
123,197,Which city and country is the Alton airport at?,flight_2,medium,"SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  ""Alton""",7,"SELECT city, country FROM airports WHERE airportname = 'Alton'
SELECT city, country FROM airports WHERE airportname = 'Alton'
SELECT city, country FROM airports WHERE airportname = 'Alton'
SELECT city, country FROM airports WHERE airportname = 'Alton'
SELECT city, country FROM airports WHERE airportname = 'Alton'
SELECT city, country FROM airports WHERE airportname = 'Alton'
SELECT city, country FROM airports WHERE airportname = 'Alton'","SELECT city, country FROM airports WHERE airportname = 'Alton'",True,1.0
124,785,What are the names of cities in Europe for which English is not the official language?,world_1,extra,SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English'),7,"SELECT name FROM city WHERE countrycode IN (SELECT code FROM country WHERE continent = 'Europe' AND code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English' AND isofficial = 'T')) AND district = 'England'
SELECT name FROM city WHERE countrycode IN (SELECT code FROM country WHERE continent = 'Europe' AND code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English' AND isofficial = 'T'))
SELECT name FROM city WHERE countrycode IN (SELECT code FROM country WHERE continent = 'Europe' AND code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English' AND isofficial = 'T')) AND district = 'England'
SELECT name FROM city WHERE countrycode IN (SELECT code FROM country WHERE continent = 'Europe' AND code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English' AND isofficial = 'T')) AND district = 'England'
SELECT name FROM city WHERE countrycode IN (SELECT code FROM country WHERE continent = 'Europe' AND code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English' AND isofficial = 'T')) AND district = 'England'
SELECT name FROM city WHERE countrycode IN (SELECT code FROM country WHERE continent = 'Europe' AND code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English' AND isofficial = 'T')) AND district = 'England'
SELECT name FROM city WHERE countrycode IN (SELECT code FROM country WHERE continent = 'Europe' AND code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English' AND isofficial = 'T')) AND district = 'England'",SELECT name FROM city WHERE countrycode IN (SELECT code FROM country WHERE continent = 'Europe' AND code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English' AND isofficial = 'T')) AND district = 'England',0,0.0
125,220,Count the number of United Airlines flights that arrive in Aberdeen.,flight_2,hard,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  ""Aberdeen"" AND T3.Airline  =  ""United Airlines""",7,"SELECT COUNT(*) FROM flights JOIN airlines ON flights.airline = airlines.abbreviation WHERE airlines.airline = 'United' AND flights.destairport = 'ABZ'
SELECT COUNT(*) FROM flights JOIN airlines ON flights.airline = airlines.abbreviation WHERE airlines.airline = 'United' AND flights.destairport = 'ABZ'
SELECT COUNT(*) FROM flights JOIN airlines ON flights.airline = airlines.abbreviation WHERE airlines.airline = 'United' AND flights.destairport = 'ABZ'
SELECT COUNT(*) FROM flights JOIN airlines ON flights.airline = airlines.abbreviation WHERE airlines.airline = 'United' AND flights.destairport = 'ABZ'
SELECT COUNT(*) FROM flights JOIN airlines ON flights.airline = airlines.abbreviation WHERE airlines.airline = 'United' AND flights.destairport = 'ABZ'
SELECT COUNT(*) FROM flights JOIN airlines ON flights.airline = airlines.abbreviation WHERE airlines.airline = 'United' AND flights.destairport = 'ABZ'
SELECT COUNT(*) FROM flights JOIN airlines ON flights.airline = airlines.abbreviation WHERE airlines.airline = 'United' AND flights.destairport = 'ABZ'",SELECT COUNT(*) FROM flights JOIN airlines ON flights.airline = airlines.abbreviation WHERE airlines.airline = 'United' AND flights.destairport = 'ABZ',0,1.0
126,1024,Show the names of singers and the total sales of their songs.,singer,medium,"SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",7,"SELECT singers.name, SUM(songs.sales) AS total_sales FROM singers JOIN songs ON singers.singer_id = songs.singer_id GROUP BY singers.name
SELECT singers.name, SUM(songs.sales) AS total_sales FROM singers JOIN songs ON singers.singer_id = songs.singer_id GROUP BY singers.name
SELECT singers.name, SUM(songs.sales) AS total_sales FROM singers JOIN songs ON singers.singer_id = songs.singer_id GROUP BY singers.name
SELECT singers.name, SUM(songs.sales) AS total_sales FROM singers JOIN songs ON singers.singer_id = songs.singer_id GROUP BY singers.name
SELECT singers.name, SUM(songs.sales) AS total_sales FROM singers JOIN songs ON singers.singer_id = songs.singer_id GROUP BY singers.name
SELECT singers.name, SUM(songs.sales) AS total_sales FROM singers JOIN songs ON singers.singer_id = songs.singer_id GROUP BY singers.name
SELECT singers.name, SUM(songs.sales) AS total_sales FROM singers JOIN songs ON singers.singer_id = songs.singer_id GROUP BY singers.name","SELECT singers.name, SUM(songs.sales) AS total_sales FROM singers JOIN songs ON singers.singer_id = songs.singer_id GROUP BY singers.name",0,0.0
127,344,Return the code of the template type that is most commonly used in documents.,cre_Doc_Template_Mgt,extra,SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1,7,"SELECT template_type_code FROM templates GROUP BY template_type_code ORDER BY COUNT(*) DESC LIMIT 1
SELECT template_type_code FROM templates GROUP BY template_type_code ORDER BY COUNT(*) DESC LIMIT 1
SELECT template_type_code FROM ref_template_types JOIN templates ON ref_template_types.template_type_code = templates.template_type_code GROUP BY template_type_code ORDER BY COUNT(*) DESC LIMIT 1
SELECT template_type_code FROM templates GROUP BY template_type_code ORDER BY COUNT(*) DESC LIMIT 1
SELECT template_type_code FROM ref_template_types ORDER BY COUNT(*) DESC LIMIT 1
SELECT template_type_code FROM ref_template_types ORDER BY COUNT(*) DESC LIMIT 1
SELECT template_type_code FROM ref_template_types ORDER BY COUNT(*) DESC LIMIT 1",SELECT template_type_code FROM templates GROUP BY template_type_code ORDER BY COUNT(*) DESC LIMIT 1,False,0.0
128,654,Return the average earnings across all poker players.,poker_player,easy,SELECT avg(Earnings) FROM poker_player,7,"SELECT AVG(earnings) FROM poker_player
SELECT AVG(earnings) FROM poker_player
SELECT AVG(earnings) FROM poker_player
SELECT AVG(earnings) FROM poker_player
SELECT AVG(earnings) FROM poker_player
SELECT AVG(earnings) FROM poker_player
SELECT AVG(earnings) FROM poker_player",SELECT AVG(earnings) FROM poker_player,True,1.0
129,173,What are the name of the countries where there is not a single car maker?,car_1,hard,SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;,7,"SELECT countryname FROM countries WHERE countryid NOT IN (SELECT country FROM car_makers)
SELECT countryname FROM countries WHERE countryid NOT IN (SELECT country FROM car_makers)
SELECT countryname FROM countries WHERE countryid NOT IN (SELECT country FROM car_makers)
SELECT countryname FROM countries WHERE countryid NOT IN (SELECT country FROM car_makers)
SELECT countryname FROM countries WHERE countryid NOT IN (SELECT country FROM car_makers)
SELECT countryname FROM countries WHERE countryid NOT IN (SELECT country FROM car_makers)
SELECT countryname FROM countries WHERE countryid NOT IN (SELECT country FROM car_makers)",SELECT countryname FROM countries WHERE countryid NOT IN (SELECT country FROM car_makers),0,1.0
130,996,What are all the possible breed type and size type combinations?,dog_kennels,medium,"SELECT DISTINCT breed_code ,  size_code FROM dogs",7,"SELECT breed_code, size_code FROM dogs
SELECT breed_code, size_code FROM dogs
SELECT breed_code, size_code FROM dogs
SELECT breed_code, size_code FROM dogs
SELECT breed_code, size_code FROM dogs
SELECT breed_code, size_code FROM dogs
SELECT b.breed_name, s.size_description  FROM dogs d  JOIN breeds b ON d.breed_code = b.breed_code  JOIN sizes s ON d.size_code = s.size_code","SELECT breed_code, size_code FROM dogs",True,1.0
131,133,"Which model saves the most gasoline? That is to say, have the maximum miles per gallon.",car_1,hard,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;,7,"SELECT m.maker, ml.model, cd.mpg FROM cars_data cd JOIN model_list ml ON cd.id = ml.modelid JOIN car_makers m ON ml.maker = m.id ORDER BY cd.mpg DESC LIMIT 1
SELECT m.maker, ml.model, cd.mpg FROM cars_data cd JOIN model_list ml ON cd.id = ml.modelid JOIN car_makers m ON ml.maker = m.id ORDER BY cd.mpg DESC LIMIT 1
SELECT m.maker, ml.model, cd.mpg FROM cars_data cd JOIN model_list ml ON cd.id = ml.modelid JOIN car_makers m ON ml.maker = m.id ORDER BY cd.mpg DESC LIMIT 1
SELECT m.maker, ml.model, cd.mpg FROM cars_data cd JOIN model_list ml ON cd.id = ml.modelid JOIN car_makers m ON ml.maker = m.id ORDER BY cd.mpg DESC LIMIT 1
SELECT m.maker, ml.model, cd.mpg FROM cars_data cd JOIN model_list ml ON cd.id = ml.modelid JOIN car_makers m ON ml.maker = m.id ORDER BY cd.mpg DESC LIMIT 1
SELECT m.maker, ml.model, cd.mpg FROM cars_data cd JOIN model_list ml ON cd.id = ml.modelid JOIN car_makers m ON ml.maker = m.id ORDER BY cd.mpg DESC LIMIT 1
SELECT m.maker, ml.model, cd.mpg FROM cars_data cd JOIN model_list ml ON cd.id = ml.modelid JOIN car_makers m ON ml.maker = m.id ORDER BY cd.mpg DESC LIMIT 1","SELECT m.maker, ml.model, cd.mpg FROM cars_data cd JOIN model_list ml ON cd.id = ml.modelid JOIN car_makers m ON ml.maker = m.id ORDER BY cd.mpg DESC LIMIT 1",0,0.0
132,11,How many singers are from each country?,concert_singer,medium,"SELECT country ,  count(*) FROM singer GROUP BY country",7,"SELECT country, COUNT(*) AS num_singers FROM singer GROUP BY country
SELECT country, COUNT(*) AS num_singers FROM singer GROUP BY country
SELECT country, COUNT(*) AS num_singers FROM singer GROUP BY country
SELECT country, COUNT(*) AS num_singers FROM singer GROUP BY country
SELECT country, COUNT(*) AS num_singers FROM singer GROUP BY country
SELECT country, COUNT(*) AS num_singers FROM singer GROUP BY country
SELECT country, COUNT(*) AS num_singers FROM singer GROUP BY country","SELECT country, COUNT(*) AS num_singers FROM singer GROUP BY country",0,1.0
133,175,Which are the car makers which produce at least 2 models and more than 3 car makers ? List the id and the maker .,car_1,extra,"select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;",7,"SELECT cm.id, cm.maker FROM car_makers cm JOIN countries c ON cm.country = c.countryid WHERE c.continent = 'NA' GROUP BY cm.maker HAVING COUNT(cm.id) >= 2 AND COUNT(cm.id) <= 3
SELECT id, maker FROM car_makers WHERE id IN (SELECT maker FROM car_makers GROUP BY maker HAVING COUNT(model) >= 2 AND COUNT(maker) > 3)
SELECT id, maker FROM car_makers WHERE id IN (SELECT maker FROM car_makers GROUP BY maker HAVING COUNT(*) >= 2 AND COUNT(*) > 3)
SELECT cm.id, cm.maker FROM car_makers cm JOIN countries c ON cm.country = c.countryid WHERE c.continent = 'Europe' GROUP BY cm.maker HAVING COUNT(cm.id) >= 2 AND COUNT(cm.id) <= 3
SELECT id, maker FROM car_makers WHERE id IN (SELECT maker FROM car_makers GROUP BY maker HAVING COUNT(*) >= 2 AND COUNT(*) > 3)
SELECT cm.id, cm.maker FROM car_makers cm JOIN countries c ON cm.country = c.countryid WHERE c.continent = 'NA' GROUP BY cm.maker HAVING COUNT(cm.id) >= 2 AND COUNT(cm.id) <= 3
SELECT cm.id, cm.maker FROM car_makers cm JOIN countries c ON cm.country = c.countryid WHERE c.continent = 'Europe' GROUP BY cm.maker HAVING COUNT(cm.id) >= 2 AND COUNT(cm.id) <= 3","SELECT cm.id, cm.maker FROM car_makers cm JOIN countries c ON cm.country = c.countryid WHERE c.continent = 'NA' GROUP BY cm.maker HAVING COUNT(cm.id) >= 2 AND COUNT(cm.id) <= 3",0,0.0
134,225,What is the code of airport that has the highest number of flights?,flight_2,extra,SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1,7,"SELECT sourceairport AS code FROM flights GROUP BY sourceairport ORDER BY COUNT(*) DESC LIMIT 1
SELECT sourceairport AS code FROM flights GROUP BY sourceairport ORDER BY COUNT(*) DESC LIMIT 1
SELECT sourceairport AS code FROM flights GROUP BY sourceairport ORDER BY COUNT(*) DESC LIMIT 1
SELECT sourceairport AS code FROM flights GROUP BY sourceairport ORDER BY COUNT(*) DESC LIMIT 1
SELECT sourceairport AS code FROM flights GROUP BY sourceairport ORDER BY COUNT(*) DESC LIMIT 1
SELECT sourceairport AS code FROM flights GROUP BY sourceairport ORDER BY COUNT(*) DESC LIMIT 1
SELECT sourceairport AS code FROM flights GROUP BY sourceairport ORDER BY COUNT(*) DESC LIMIT 1",SELECT sourceairport AS code FROM flights GROUP BY sourceairport ORDER BY COUNT(*) DESC LIMIT 1,0,0.0
135,59,Find the first name of students who have both cat and dog pets .,pets_1,extra,select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog',7,"SELECT DISTINCT s.fname FROM student s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype IN ('cat', 'dog') GROUP BY s.stuid HAVING COUNT(DISTINCT p.pettype) = 2
SELECT DISTINCT s.fname FROM student s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype IN ('cat', 'dog') GROUP BY s.stuid HAVING COUNT(DISTINCT p.pettype) = 2
SELECT DISTINCT s.fname FROM student s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype IN ('cat', 'dog') GROUP BY s.stuid HAVING COUNT(DISTINCT p.pettype) = 2
SELECT DISTINCT s.fname FROM student s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype IN ('cat', 'dog') GROUP BY s.stuid HAVING COUNT(DISTINCT p.pettype) = 2
SELECT DISTINCT s.fname FROM student s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype IN ('cat', 'dog') GROUP BY s.stuid HAVING COUNT(DISTINCT p.pettype) = 2
SELECT DISTINCT s.fname FROM student s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype IN ('cat', 'dog') GROUP BY s.stuid HAVING COUNT(DISTINCT p.pettype) = 2
SELECT DISTINCT s.fname FROM student s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype IN ('cat', 'dog') GROUP BY s.stuid HAVING COUNT(DISTINCT p.pettype) = 2","SELECT DISTINCT s.fname FROM student s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype IN ('cat', 'dog') GROUP BY s.stuid HAVING COUNT(DISTINCT p.pettype) = 2",0,1.0
136,939,Give me the description of the treatment type whose total cost is the lowest.,dog_kennels,extra,SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1,7,"SELECT treatment_type_description FROM treatments JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code ORDER BY cost_of_treatment ASC LIMIT 1
SELECT treatment_type_description FROM treatments JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code ORDER BY cost_of_treatment ASC LIMIT 1
SELECT treatment_type_description FROM treatments INNER JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code ORDER BY cost_of_treatment ASC LIMIT 1
SELECT treatment_type_description FROM treatments JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code ORDER BY cost_of_treatment ASC LIMIT 1
SELECT treatment_type_description FROM treatments JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code ORDER BY cost_of_treatment ASC LIMIT 1
SELECT treatment_type_description FROM treatments JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code ORDER BY cost_of_treatment ASC LIMIT 1
SELECT treatment_type_description FROM treatments JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code ORDER BY cost_of_treatment ASC LIMIT 1",SELECT treatment_type_description FROM treatments JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code ORDER BY cost_of_treatment ASC LIMIT 1,0,1.0
137,310,"What are all different template ids used for documents, and how many times were each of them used?",cre_Doc_Template_Mgt,medium,"SELECT template_id ,  count(*) FROM Documents GROUP BY template_id",7,"SELECT template_type_code, COUNT(*) AS usage_count FROM templates GROUP BY template_type_code
SELECT template_type_code, COUNT(*) AS usage_count FROM templates GROUP BY template_type_code
SELECT template_type_code, COUNT(*) AS usage_count FROM templates GROUP BY template_type_code
SELECT template_type_code, COUNT(*) AS usage_count FROM templates GROUP BY template_type_code
SELECT template_type_code, COUNT(*) AS usage_count FROM templates GROUP BY template_type_code
SELECT template_type_code, COUNT(*) AS usage_count FROM templates GROUP BY template_type_code
SELECT template_type_code, COUNT(*) AS usage_count FROM templates GROUP BY template_type_code","SELECT template_type_code, COUNT(*) AS usage_count FROM templates GROUP BY template_type_code",0,0.0
138,283,What is the name of the shop that is hiring the largest number of employees?,employee_hire_evaluation,extra,SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1,7,"SELECT s.name  FROM shop s  JOIN hiring h ON s.shop_id = h.shop_id  GROUP BY s.shop_id  ORDER BY COUNT(h.employee_id) DESC  LIMIT 1
SELECT s.name FROM shop s JOIN hiring h ON s.shop_id = h.shop_id GROUP BY s.shop_id ORDER BY COUNT(h.employee_id) DESC LIMIT 1
SELECT s.name  FROM shop s  JOIN hiring h ON s.shop_id = h.shop_id  GROUP BY s.shop_id  ORDER BY COUNT(h.employee_id) DESC  LIMIT 1
SELECT s.name FROM shop s JOIN hiring h ON s.shop_id = h.shop_id GROUP BY s.shop_id ORDER BY COUNT(h.employee_id) DESC LIMIT 1
SELECT s.name FROM shop s JOIN hiring h ON s.shop_id = h.shop_id GROUP BY s.shop_id ORDER BY COUNT(h.employee_id) DESC LIMIT 1
SELECT s.name FROM shop s JOIN hiring h ON s.shop_id = h.shop_id GROUP BY s.shop_id ORDER BY COUNT(h.employee_id) DESC LIMIT 1
SELECT s.name FROM shop s JOIN hiring h ON s.shop_id = h.shop_id GROUP BY s.shop_id ORDER BY COUNT(h.employee_id) DESC LIMIT 1",SELECT s.name FROM shop s JOIN hiring h ON s.shop_id = h.shop_id GROUP BY s.shop_id ORDER BY COUNT(h.employee_id) DESC LIMIT 1,0,1.0
139,232,What is the abbreviation of the airilne has the fewest flights and what country is it in?,flight_2,extra,"SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1",7,"SELECT abbreviation FROM airlines ORDER BY (SELECT COUNT(*) FROM flights WHERE flights.airline = airlines.uid) LIMIT 1
SELECT abbreviation FROM airlines ORDER BY (SELECT COUNT(*) FROM flights WHERE flights.airline = airlines.uid) LIMIT 1
SELECT abbreviation FROM airlines ORDER BY (SELECT COUNT(*) FROM flights WHERE flights.airline = airlines.uid) LIMIT 1
SELECT abbreviation FROM airlines ORDER BY (SELECT COUNT(*) FROM flights WHERE flights.airline = airlines.uid) LIMIT 1
SELECT abbreviation FROM airlines ORDER BY (SELECT COUNT(*) FROM flights WHERE flights.airline = airlines.uid) LIMIT 1
SELECT abbreviation FROM airlines ORDER BY (SELECT COUNT(*) FROM flights WHERE flights.airline = airlines.uid) LIMIT 1
SELECT abbreviation FROM airlines ORDER BY (SELECT COUNT(*) FROM flights WHERE flights.airline = airlines.uid) LIMIT 1",SELECT abbreviation FROM airlines ORDER BY (SELECT COUNT(*) FROM flights WHERE flights.airline = airlines.uid) LIMIT 1,0,0.0
140,619,"What is the air date of TV series with Episode ""A Love of a Lifetime""?",tvshow,easy,"SELECT Air_Date FROM TV_series WHERE Episode = ""A Love of a Lifetime"";",7,"SELECT air_date FROM tv_series WHERE episode = 'A Love of a Lifetime'
SELECT air_date FROM tv_series WHERE episode = 'A Love of a Lifetime'
SELECT air_date FROM tv_series WHERE episode = 'A Love of a Lifetime'
SELECT air_date FROM tv_series WHERE episode = 'A Love of a Lifetime'
SELECT air_date FROM tv_series WHERE episode = 'A Love of a Lifetime'
SELECT air_date FROM tv_series WHERE episode = 'A Love of a Lifetime'
SELECT air_date FROM tv_series WHERE episode = 'A Love of a Lifetime'",SELECT air_date FROM tv_series WHERE episode = 'A Love of a Lifetime',True,1.0
141,84,What is the last name of the student who has a cat that is 3 years old?,pets_1,hard,SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat',7,"SELECT s.lname FROM student s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'cat' AND p.pet_age = 3
SELECT s.lname FROM students s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'cat' AND p.pet_age = 3
SELECT s.lname FROM student s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'cat' AND p.pet_age = 3
SELECT s.lname FROM student s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'cat' AND p.pet_age = 3
SELECT s.lname FROM student s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'cat' AND p.pet_age = 3
SELECT s.lname FROM students s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'cat' AND p.pet_age = 3
SELECT s.lname FROM student s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'cat' AND p.pet_age = 3",SELECT s.lname FROM student s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'cat' AND p.pet_age = 3,0,1.0
142,293,Which district has both stores with less than 3000 products and stores with more than 10000 products?,employee_hire_evaluation,hard,SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000,7,"SELECT district FROM shop WHERE number_products < 3000 AND number_products > 10000
SELECT district FROM shop WHERE number_products < 3000 AND number_products > 10000
SELECT district FROM shop WHERE number_products < 3000 AND number_products > 10000
SELECT district FROM shop WHERE number_products < 3000 AND number_products > 10000
SELECT district FROM shop WHERE number_products < 3000 AND number_products > 10000
SELECT district FROM shop WHERE number_products < 3000 AND number_products > 10000
SELECT district FROM shop WHERE number_products < 3000 AND number_products > 10000",SELECT district FROM shop WHERE number_products < 3000 AND number_products > 10000,0,1.0
143,199,What is the airport name for airport 'AKO'?,flight_2,easy,"SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  ""AKO""",7,"SELECT airportname FROM airports WHERE airportcode = 'AKO'
SELECT airportname FROM airports WHERE airportcode = 'AKO'
SELECT airportname FROM airports WHERE airportcode = 'AKO'
SELECT airportname FROM airports WHERE airportcode = 'AKO'
SELECT airportname FROM airports WHERE airportcode = 'AKO'
SELECT airportname FROM airports WHERE airportcode = 'AKO'
SELECT airportname FROM airports WHERE airportcode = 'AKO'",SELECT airportname FROM airports WHERE airportcode = 'AKO',True,1.0
144,927,Find the first names that are used for professionals or owners but are not used as dog names.,dog_kennels,hard,SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs,7,"SELECT DISTINCT first_name FROM owners WHERE first_name NOT IN (SELECT name FROM dogs) UNION SELECT DISTINCT first_name FROM professionals WHERE first_name NOT IN (SELECT name FROM dogs)
SELECT DISTINCT first_name FROM owners WHERE first_name NOT IN (SELECT name FROM dogs) UNION SELECT DISTINCT first_name FROM professionals WHERE first_name NOT IN (SELECT name FROM dogs)
SELECT DISTINCT first_name FROM owners WHERE first_name NOT IN (SELECT name FROM dogs) UNION SELECT DISTINCT first_name FROM professionals WHERE first_name NOT IN (SELECT name FROM dogs)
SELECT DISTINCT first_name FROM owners WHERE first_name NOT IN (SELECT name FROM dogs) UNION SELECT DISTINCT first_name FROM professionals WHERE first_name NOT IN (SELECT name FROM dogs)
SELECT DISTINCT first_name FROM owners WHERE first_name NOT IN (SELECT name FROM dogs) UNION SELECT DISTINCT first_name FROM professionals WHERE first_name NOT IN (SELECT name FROM dogs)
SELECT DISTINCT first_name FROM owners WHERE first_name NOT IN (SELECT name FROM dogs) UNION SELECT DISTINCT first_name FROM professionals WHERE first_name NOT IN (SELECT name FROM dogs)
SELECT DISTINCT first_name FROM owners WHERE first_name NOT IN (SELECT name FROM dogs) UNION SELECT DISTINCT first_name FROM professionals WHERE first_name NOT IN (SELECT name FROM dogs)",SELECT DISTINCT first_name FROM owners WHERE first_name NOT IN (SELECT name FROM dogs) UNION SELECT DISTINCT first_name FROM professionals WHERE first_name NOT IN (SELECT name FROM dogs),0,1.0
145,463,Find the name and rank points of the winner who won the most times.,wta_1,hard,"SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",7,"SELECT winner_name, winner_rank_points  FROM matches  WHERE winner_id IN (     SELECT winner_id      FROM matches      GROUP BY winner_id      ORDER BY COUNT(*) DESC      LIMIT 1 )
SELECT winner_name, winner_rank_points  FROM matches  WHERE winner_id IN (     SELECT winner_id      FROM matches      GROUP BY winner_id      ORDER BY COUNT(*) DESC      LIMIT 1 )
SELECT winner_name, winner_rank_points  FROM matches  WHERE winner_id IN (     SELECT winner_id      FROM matches      GROUP BY winner_id      ORDER BY COUNT(*) DESC      LIMIT 1 )
SELECT winner_name, winner_rank_points  FROM matches  WHERE winner_id IN (     SELECT winner_id      FROM matches      GROUP BY winner_id      ORDER BY COUNT(*) DESC      LIMIT 1 )
SELECT winner_name, winner_rank_points  FROM matches  WHERE winner_id IN (     SELECT winner_id      FROM matches      GROUP BY winner_id      ORDER BY COUNT(*) DESC      LIMIT 1 )
SELECT winner_name, winner_rank_points  FROM matches  WHERE winner_id IN (     SELECT winner_id      FROM matches      GROUP BY winner_id      ORDER BY COUNT(*) DESC      LIMIT 1 )
SELECT winner_name, winner_rank_points  FROM matches  WHERE winner_id IN (     SELECT winner_id      FROM matches      GROUP BY winner_id      ORDER BY COUNT(*) DESC      LIMIT 1 )","SELECT winner_name, winner_rank_points  FROM matches  WHERE winner_id IN (     SELECT winner_id      FROM matches      GROUP BY winner_id      ORDER BY COUNT(*) DESC      LIMIT 1 )",0,0.0
146,106,What is the name of each continent and how many car makers are there in each one?,car_1,hard,"SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;",7,"SELECT continent, COUNT(DISTINCT car_makers.id) AS num_car_makers FROM continents JOIN countries ON continents.contid = countries.continent JOIN car_makers ON countries.countryid = car_makers.country GROUP BY continent
SELECT continent, COUNT(DISTINCT car_makers.id) AS num_car_makers FROM continents JOIN countries ON continents.contid = countries.continent JOIN car_makers ON countries.countryid = car_makers.country GROUP BY continent
SELECT continent, COUNT(DISTINCT car_makers.id) AS num_car_makers FROM continents JOIN countries ON continents.contid = countries.continent JOIN car_makers ON countries.countryid = car_makers.country GROUP BY continent
SELECT continent, COUNT(DISTINCT car_makers.id) AS num_car_makers FROM continents JOIN countries ON continents.contid = countries.continent JOIN car_makers ON countries.countryid = car_makers.country GROUP BY continent
SELECT continent, COUNT(DISTINCT car_makers.id) AS num_car_makers FROM continents JOIN countries ON continents.contid = countries.continent JOIN car_makers ON countries.countryid = car_makers.country GROUP BY continent
SELECT continent, COUNT(DISTINCT car_makers.id) AS num_car_makers FROM continents JOIN countries ON continents.contid = countries.continent JOIN car_makers ON countries.countryid = car_makers.country GROUP BY continent
SELECT continent, COUNT(DISTINCT car_makers.id) AS num_car_makers FROM continents JOIN countries ON continents.contid = countries.continent JOIN car_makers ON countries.countryid = car_makers.country GROUP BY continent","SELECT continent, COUNT(DISTINCT car_makers.id) AS num_car_makers FROM continents JOIN countries ON continents.contid = countries.continent JOIN car_makers ON countries.countryid = car_makers.country GROUP BY continent",0,0.0
147,287,Find the number of employees hired in each shop; show the shop name as well.,employee_hire_evaluation,medium,"SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name",7,"SELECT s.name, COUNT(h.employee_id) AS number_of_employees FROM shop s JOIN hiring h ON s.shop_id = h.shop_id GROUP BY s.name
SELECT s.name, COUNT(h.employee_id) AS number_of_employees FROM shop s JOIN hiring h ON s.shop_id = h.shop_id GROUP BY s.name
SELECT s.name, COUNT(h.employee_id) AS number_of_employees FROM shop s JOIN hiring h ON s.shop_id = h.shop_id GROUP BY s.name
SELECT s.name, COUNT(h.employee_id) AS number_of_employees FROM shop s JOIN hiring h ON s.shop_id = h.shop_id GROUP BY s.name
SELECT s.name, COUNT(h.employee_id) AS number_of_employees FROM shop s JOIN hiring h ON s.shop_id = h.shop_id GROUP BY s.name
SELECT s.name, COUNT(h.employee_id) AS number_of_employees FROM shop s JOIN hiring h ON s.shop_id = h.shop_id GROUP BY s.name
SELECT s.name, COUNT(h.employee_id) AS number_of_employees FROM shop s JOIN hiring h ON s.shop_id = h.shop_id GROUP BY s.name","SELECT s.name, COUNT(h.employee_id) AS number_of_employees FROM shop s JOIN hiring h ON s.shop_id = h.shop_id GROUP BY s.name",0,0.0
148,698,What is the area code in which the most voters voted?,voter_1,extra,SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1,7,"SELECT area_code, COUNT(*) AS vote_count FROM votes JOIN area_code_state ON votes.state = area_code_state.state GROUP BY area_code ORDER BY vote_count DESC LIMIT 1
SELECT area_code, COUNT(*) AS vote_count FROM votes JOIN area_code_state ON votes.state = area_code_state.state GROUP BY area_code ORDER BY vote_count DESC LIMIT 1
SELECT area_code, COUNT(*) AS vote_count FROM votes JOIN area_code_state ON votes.state = area_code_state.state GROUP BY area_code ORDER BY vote_count DESC LIMIT 1
SELECT area_code, COUNT(*) AS vote_count FROM votes JOIN area_code_state ON votes.state = area_code_state.state GROUP BY area_code ORDER BY vote_count DESC LIMIT 1
SELECT area_code, COUNT(*) AS vote_count FROM votes JOIN area_code_state ON votes.state = area_code_state.state GROUP BY area_code ORDER BY vote_count DESC LIMIT 1
SELECT area_code, COUNT(*) AS vote_count FROM votes JOIN area_code_state ON votes.state = area_code_state.state GROUP BY area_code ORDER BY vote_count DESC LIMIT 1
SELECT area_code, COUNT(*) AS vote_count FROM votes GROUP BY area_code ORDER BY vote_count DESC LIMIT 1","SELECT area_code, COUNT(*) AS vote_count FROM votes JOIN area_code_state ON votes.state = area_code_state.state GROUP BY area_code ORDER BY vote_count DESC LIMIT 1",0,0.0
149,787,Return the different names of cities that are in Asia and for which Chinese is the official language.,world_1,hard,"SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  ""Asia""",7,"SELECT DISTINCT city.name  FROM city  JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode  WHERE countrylanguage.language = 'Chinese' AND countrylanguage.isofficial = 'True' AND city.countrycode IN (SELECT code FROM country WHERE continent = 'Asia')
SELECT DISTINCT city.name FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode JOIN country ON city.countrycode = country.code WHERE country.continent = 'Asia' AND countrylanguage.language = 'Chinese' AND countrylanguage.isofficial = 'T'
SELECT DISTINCT city.name  FROM city  JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode  WHERE countrylanguage.language = 'Chinese' AND countrylanguage.isofficial = 'True' AND city.countrycode IN (SELECT code FROM country WHERE continent = 'Asia')
SELECT DISTINCT city.name  FROM city  JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode  WHERE countrylanguage.language = 'Chinese' AND countrylanguage.isofficial = 'True' AND city.countrycode IN (SELECT code FROM country WHERE continent = 'Asia')
SELECT DISTINCT city.name FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode JOIN country ON city.countrycode = country.code WHERE country.continent = 'Asia' AND countrylanguage.language = 'Chinese' AND countrylanguage.isofficial = 'T'
SELECT DISTINCT city.name FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode JOIN country ON city.countrycode = country.code WHERE country.continent = 'Asia' AND countrylanguage.language = 'Chinese' AND countrylanguage.isofficial = 'T'
SELECT DISTINCT city.name FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode JOIN country ON city.countrycode = country.code WHERE country.continent = 'Asia' AND countrylanguage.language = 'Chinese' AND countrylanguage.isofficial = 'T'",SELECT DISTINCT city.name FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode JOIN country ON city.countrycode = country.code WHERE country.continent = 'Asia' AND countrylanguage.language = 'Chinese' AND countrylanguage.isofficial = 'T',0,0.0
150,379,Show the document id with paragraph text 'Brazil' and 'Ireland'.,cre_Doc_Template_Mgt,hard,SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland',7,"SELECT p.document_id FROM paragraphs p JOIN documents d ON p.document_id = d.document_id WHERE p.paragraph_text IN ('Brazil', 'Ireland') AND d.template_id IN (     SELECT t.template_id     FROM templates t     JOIN ref_template_types rtt ON t.template_type_code = rtt.template_type_code     WHERE rtt.template_type_description = 'template_type_description' ) 
SELECT p.document_id FROM paragraphs p JOIN documents d ON p.document_id = d.document_id WHERE p.paragraph_text IN ('Brazil', 'Ireland') AND d.template_id IN (     SELECT t.template_id     FROM templates t     JOIN ref_template_types rtt ON t.template_type_code = rtt.template_type_code     WHERE rtt.template_type_description = 'template_type_description' ) 
SELECT p.document_id FROM paragraphs p JOIN documents d ON p.document_id = d.document_id WHERE p.paragraph_text IN ('Brazil', 'Ireland') AND d.template_id IN (     SELECT t.template_id     FROM templates t     JOIN ref_template_types rtt ON t.template_type_code = rtt.template_type_code     WHERE rtt.template_type_description = 'template_type_description' ) 
SELECT p.document_id FROM paragraphs p JOIN documents d ON p.document_id = d.document_id WHERE p.paragraph_text IN ('Brazil', 'Ireland') AND d.template_id IN (     SELECT t.template_id     FROM templates t     JOIN ref_template_types rtt ON t.template_type_code = rtt.template_type_code     WHERE rtt.template_type_description = 'template_type_description' ) 
SELECT p.document_id FROM paragraphs p JOIN documents d ON p.document_id = d.document_id WHERE p.paragraph_text IN ('Brazil', 'Ireland') AND d.template_id IN (     SELECT t.template_id     FROM templates t     JOIN ref_template_types rtt ON t.template_type_code = rtt.template_type_code     WHERE rtt.template_type_description = 'template_type_description' ) 
SELECT p.document_id FROM paragraphs p JOIN documents d ON p.document_id = d.document_id WHERE p.paragraph_text IN ('Brazil', 'Ireland') AND d.template_id IN (     SELECT t.template_id     FROM templates t     JOIN ref_template_types rtt ON t.template_type_code = rtt.template_type_code     WHERE rtt.template_type_description = 'template_type_description' ) 
SELECT p.document_id FROM paragraphs p JOIN documents d ON p.document_id = d.document_id WHERE p.paragraph_text IN ('Brazil', 'Ireland') AND d.template_id IN (     SELECT t.template_id     FROM templates t     JOIN ref_template_types rtt ON t.template_type_code = rtt.template_type_code     WHERE rtt.template_type_description = 'template_type_description' ) ","SELECT p.document_id FROM paragraphs p JOIN documents d ON p.document_id = d.document_id WHERE p.paragraph_text IN ('Brazil', 'Ireland') AND d.template_id IN (     SELECT t.template_id     FROM templates t     JOIN ref_template_types rtt ON t.template_type_code = rtt.template_type_code     WHERE rtt.template_type_description = 'template_type_description' ) ",0,0.0
151,836,List names of conductors in descending order of years of work.,orchestra,easy,SELECT Name FROM conductor ORDER BY Year_of_Work DESC,7,"SELECT name FROM conductor ORDER BY year_of_work DESC
SELECT name FROM conductor ORDER BY year_of_work DESC
SELECT name FROM conductor ORDER BY year_of_work DESC
SELECT name FROM conductor ORDER BY year_of_work DESC
SELECT name FROM conductor ORDER BY year_of_work DESC
SELECT name FROM conductor ORDER BY year_of_work DESC
SELECT name FROM conductor ORDER BY year_of_work DESC",SELECT name FROM conductor ORDER BY year_of_work DESC,True,1.0
152,679,List the names and birth dates of people in ascending alphabetical order of name.,poker_player,medium,"SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC",7,"SELECT people.name, people.birth_date  FROM people  JOIN poker_player ON people.people_id = poker_player.people_id  ORDER BY people.name ASC
SELECT people.name, people.birth_date  FROM people  JOIN poker_player ON people.people_id = poker_player.people_id  ORDER BY people.name ASC
SELECT people.name, people.birth_date  FROM people  JOIN poker_player ON people.people_id = poker_player.people_id  ORDER BY people.name ASC
SELECT people.name, people.birth_date  FROM people  JOIN poker_player ON people.people_id = poker_player.people_id  ORDER BY people.name ASC
SELECT people.name, people.birth_date  FROM people  JOIN poker_player ON people.people_id = poker_player.people_id  ORDER BY people.name ASC
SELECT people.name, people.birth_date  FROM people  JOIN poker_player ON people.people_id = poker_player.people_id  ORDER BY people.name ASC
SELECT people.name, people.birth_date  FROM people  JOIN poker_player ON people.people_id = poker_player.people_id  ORDER BY people.name ASC","SELECT people.name, people.birth_date  FROM people  JOIN poker_player ON people.people_id = poker_player.people_id  ORDER BY people.name ASC",False,0.0
153,116,What is the count of the car models produced in the United States?,car_1,hard,SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';,7,"SELECT COUNT(*) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = 'United States'
SELECT COUNT(*) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = 'United States'
SELECT COUNT(*) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = 'United States'
SELECT COUNT(*) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = 'United States'
SELECT COUNT(*) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = 'United States'
SELECT COUNT(*) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = 'United States'
SELECT COUNT(*) FROM model_list ml JOIN car_makers cm ON ml.maker = cm.id WHERE cm.country = 'United States'",SELECT COUNT(*) FROM model_list JOIN car_makers ON model_list.maker = car_makers.id WHERE car_makers.country = 'United States',0,0.0
154,1002,List the name of singers in ascending order of net worth.,singer,easy,SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC,7,"SELECT name FROM singer ORDER BY net_worth_millions ASC
SELECT name FROM singer ORDER BY net_worth_millions ASC
SELECT name FROM singer ORDER BY net_worth_millions ASC
SELECT name FROM singer ORDER BY net_worth_millions ASC
SELECT name FROM singer ORDER BY net_worth_millions ASC
SELECT name FROM singer ORDER BY net_worth_millions ASC
SELECT name FROM singers ORDER BY net_worth_millions ASC",SELECT name FROM singer ORDER BY net_worth_millions ASC,True,1.0
155,775,Which African countries have a smaller population than that of any country in Asia?,world_1,extra,"SELECT Name FROM country WHERE Continent  =  ""Africa""  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  ""Asia"")",7,"SELECT name FROM country WHERE population < ANY (SELECT population FROM country WHERE continent = 'Asia') AND continent = 'Africa'
SELECT name FROM country WHERE population < ANY (SELECT population FROM country WHERE continent = 'Asia') AND continent = 'Africa'
SELECT name FROM country WHERE population < ANY (SELECT population FROM country WHERE continent = 'Asia') AND continent = 'Africa'
SELECT name FROM country WHERE population < ANY (SELECT population FROM country WHERE continent = 'Asia') AND continent = 'Africa'
SELECT name FROM country WHERE population < ANY (SELECT population FROM country WHERE continent = 'Asia') AND continent = 'Africa'
SELECT name FROM country WHERE population < ANY (SELECT population FROM country WHERE continent = 'Asia') AND continent = 'Africa'
SELECT name FROM country WHERE population < ANY (SELECT population FROM country WHERE continent = 'Asia') AND continent = 'Africa'",SELECT name FROM country WHERE population < ANY (SELECT population FROM country WHERE continent = 'Asia') AND continent = 'Africa',0,0.0
156,1029,What are the citizenships that are shared by singers with a birth year before 1945 and after 1955?,singer,hard,SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955,7,"SELECT DISTINCT s.citizenship FROM singer s JOIN song so ON s.singer_id = so.singer_id WHERE s.birth_year < 1945 OR s.birth_year > 1955
SELECT DISTINCT s.citizenship FROM singer s JOIN song so ON s.singer_id = so.singer_id WHERE s.birth_year < 1945 OR s.birth_year > 1955
SELECT DISTINCT s.citizenship FROM singer s JOIN song so ON s.singer_id = so.singer_id WHERE s.birth_year < 1945 OR s.birth_year > 1955
SELECT DISTINCT s.citizenship FROM singer s JOIN song so ON s.singer_id = so.singer_id WHERE s.birth_year < 1945 OR s.birth_year > 1955
SELECT DISTINCT s.citizenship FROM singer s JOIN song so ON s.singer_id = so.singer_id WHERE s.birth_year < 1945 OR s.birth_year > 1955
SELECT DISTINCT s.citizenship FROM singer s JOIN song so ON s.singer_id = so.singer_id WHERE s.birth_year < 1945 OR s.birth_year > 1955
SELECT DISTINCT s.citizenship FROM singer s JOIN song so ON s.singer_id = so.singer_id WHERE s.birth_year < 1945 OR s.birth_year > 1955",SELECT DISTINCT s.citizenship FROM singer s JOIN song so ON s.singer_id = so.singer_id WHERE s.birth_year < 1945 OR s.birth_year > 1955,0,0.0
157,746,What are the names of nations speak both English and French?,world_1,extra,"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""French""",7,"SELECT DISTINCT c.name FROM country c JOIN countrylanguage cl1 ON c.code = cl1.countrycode AND cl1.language = 'English' JOIN countrylanguage cl2 ON c.code = cl2.countrycode AND cl2.language = 'French' 
SELECT DISTINCT c.name FROM country c JOIN countrylanguage cl1 ON c.code = cl1.countrycode AND cl1.language = 'English' JOIN countrylanguage cl2 ON c.code = cl2.countrycode AND cl2.language = 'French' 
SELECT DISTINCT c.name FROM country c JOIN countrylanguage cl1 ON c.code = cl1.countrycode AND cl1.language = 'English' JOIN countrylanguage cl2 ON c.code = cl2.countrycode AND cl2.language = 'French' 
SELECT DISTINCT c.name  FROM country c  JOIN countrylanguage cl1 ON c.code = cl1.countrycode AND cl1.language = 'English'  JOIN countrylanguage cl2 ON c.code = cl2.countrycode AND cl2.language = 'French'  WHERE cl1.isofficial = 'True' AND cl2.isofficial = 'True'
SELECT DISTINCT c.name  FROM country c  JOIN countrylanguage cl1 ON c.code = cl1.countrycode AND cl1.language = 'English'  JOIN countrylanguage cl2 ON c.code = cl2.countrycode AND cl2.language = 'French'  WHERE cl1.isofficial = 'True' AND cl2.isofficial = 'True'
SELECT DISTINCT c.name FROM country c JOIN countrylanguage cl1 ON c.code = cl1.countrycode AND cl1.language = 'English' JOIN countrylanguage cl2 ON c.code = cl2.countrycode AND cl2.language = 'French' 
SELECT DISTINCT c.name FROM country c JOIN countrylanguage cl1 ON c.code = cl1.countrycode AND cl1.language = 'English' JOIN countrylanguage cl2 ON c.code = cl2.countrycode AND cl2.language = 'French' ",SELECT DISTINCT c.name FROM country c JOIN countrylanguage cl1 ON c.code = cl1.countrycode AND cl1.language = 'English' JOIN countrylanguage cl2 ON c.code = cl2.countrycode AND cl2.language = 'French' ,0,1.0
158,17,What is the average and maximum capacities for all stadiums ?,concert_singer,medium,"select avg(capacity) ,  max(capacity) from stadium",7,"SELECT AVG(capacity) AS average_capacity, MAX(capacity) AS maximum_capacity FROM stadium
SELECT AVG(capacity) AS average_capacity, MAX(capacity) AS maximum_capacity FROM stadium
SELECT AVG(capacity) AS average_capacity, MAX(capacity) AS maximum_capacity FROM stadium
SELECT AVG(capacity) AS average_capacity, MAX(capacity) AS maximum_capacity FROM stadium
SELECT AVG(capacity) AS average_capacity, MAX(capacity) AS maximum_capacity FROM stadium
SELECT AVG(capacity) AS average_capacity, MAX(capacity) AS maximum_capacity FROM stadium
SELECT AVG(capacity) AS average_capacity, MAX(capacity) AS maximum_capacity FROM stadium","SELECT AVG(capacity) AS average_capacity, MAX(capacity) AS maximum_capacity FROM stadium",0,1.0
159,158,"For a volvo model, how many cylinders does the version with least accelerate have?",car_1,extra,SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;,7,"SELECT cylinders  FROM cars_data  WHERE maker IN (SELECT id FROM car_makers WHERE fullname = 'Volvo')  ORDER BY accelerate  LIMIT 1
SELECT cylinders  FROM cars_data  WHERE make = 'Volvo'  ORDER BY accelerate ASC  LIMIT 1
SELECT cylinders  FROM cars_data  WHERE make = 'Volvo'  ORDER BY accelerate  LIMIT 1
SELECT cylinders FROM cars_data WHERE maker IN (SELECT id FROM car_makers WHERE fullname = 'Volvo') ORDER BY accelerate ASC LIMIT 1
SELECT cylinders  FROM cars_data  WHERE maker IN (SELECT id FROM car_makers WHERE fullname = 'Volvo')  ORDER BY accelerate  LIMIT 1
SELECT cylinders  FROM cars_data  WHERE maker IN (SELECT id FROM car_makers WHERE fullname = 'Volvo')  ORDER BY accelerate  LIMIT 1
SELECT cylinders FROM cars_data WHERE maker IN (SELECT id FROM car_makers WHERE fullname = 'Volvo') ORDER BY accelerate ASC LIMIT 1",SELECT cylinders  FROM cars_data  WHERE maker IN (SELECT id FROM car_makers WHERE fullname = 'Volvo')  ORDER BY accelerate  LIMIT 1,0,0.0
160,912,How many likes does Kyle have?,network_1,medium,"SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  ""Kyle""",7,"SELECT SUM(likes.liked_id = 'Kyle') AS KyleLikes FROM likes
SELECT SUM(likes.liked_id) AS total_likes FROM likes WHERE likes.student_id = (SELECT id FROM highschooler WHERE name = 'Kyle')
SELECT SUM(likes.liked_id) AS total_likes FROM likes WHERE likes.student_id = (SELECT id FROM highschooler WHERE name = 'Kyle')
SELECT SUM(likes.liked_id = 'Kyle') AS KyleLikes FROM likes
SELECT SUM(likes.liked_id = 'Kyle') AS KyleLikes FROM likes
SELECT SUM(l.liked_id = 'Kyle') AS likes FROM likes l JOIN friend f ON l.student_id = f.friend_id
SELECT SUM(likes.liked_id) AS total_likes FROM likes WHERE likes.student_id = (SELECT id FROM highschooler WHERE name = 'Kyle')",SELECT SUM(likes.liked_id = 'Kyle') AS KyleLikes FROM likes,0,0.0
161,526,What are the names and ids of every course with less than 2 sections?,student_transcripts_tracking,medium,"SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2",7,"SELECT course_name, course_id FROM courses WHERE course_id IN (SELECT course_id FROM sections GROUP BY course_id HAVING COUNT(section_id) < 2)
SELECT course_name, course_id FROM courses WHERE course_id IN (SELECT course_id FROM sections GROUP BY course_id HAVING COUNT(section_id) < 2)
SELECT course_name, course_id FROM courses WHERE course_id IN (SELECT course_id FROM sections GROUP BY course_id HAVING COUNT(section_id) < 2)
SELECT course_name, course_id FROM courses WHERE course_id IN (SELECT course_id FROM sections GROUP BY course_id HAVING COUNT(section_id) < 2)
SELECT course_name, course_id FROM courses WHERE course_id IN (SELECT course_id FROM sections GROUP BY course_id HAVING COUNT(section_id) < 2)
SELECT course_name, course_id FROM courses WHERE course_id IN (SELECT course_id FROM sections GROUP BY course_id HAVING COUNT(section_id) < 2)
SELECT course_name, course_id FROM courses WHERE course_id IN (SELECT course_id FROM sections GROUP BY course_id HAVING COUNT(section_id) < 2)","SELECT course_name, course_id FROM courses WHERE course_id IN (SELECT course_id FROM sections GROUP BY course_id HAVING COUNT(section_id) < 2)",0,0.0
162,464,"What is the name of the winner who has won the most matches, and how many rank points does this player have?",wta_1,hard,"SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1",7,"SELECT winner_name, winner_rank_points  FROM matches  WHERE winner_id = (     SELECT winner_id      FROM matches      GROUP BY winner_id      ORDER BY COUNT(*) DESC      LIMIT 1 )
SELECT winner_name, winner_rank_points  FROM matches  WHERE winner_id = (     SELECT winner_id      FROM matches      GROUP BY winner_id      ORDER BY COUNT(*) DESC      LIMIT 1 )
SELECT winner_name, winner_rank_points  FROM matches  WHERE winner_id = (     SELECT winner_id      FROM matches      GROUP BY winner_id      ORDER BY COUNT(*) DESC      LIMIT 1 )
SELECT winner_name, winner_rank_points  FROM matches  WHERE winner_id = (     SELECT winner_id      FROM matches      GROUP BY winner_id      ORDER BY COUNT(*) DESC      LIMIT 1 )
SELECT winner_name, winner_rank_points  FROM matches  WHERE winner_id = (     SELECT winner_id      FROM matches      GROUP BY winner_id      ORDER BY COUNT(*) DESC      LIMIT 1 )
SELECT winner_name, winner_rank_points  FROM matches  WHERE winner_id IN (     SELECT winner_id      FROM matches      GROUP BY winner_id      ORDER BY COUNT(*) DESC      LIMIT 1 )
SELECT winner_name, winner_rank_points  FROM matches  WHERE winner_id = (     SELECT winner_id      FROM matches      GROUP BY winner_id      ORDER BY COUNT(*) DESC      LIMIT 1 )","SELECT winner_name, winner_rank_points  FROM matches  WHERE winner_id = (     SELECT winner_id      FROM matches      GROUP BY winner_id      ORDER BY COUNT(*) DESC      LIMIT 1 )",0,0.0
163,401,Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name.,course_teach,hard,"SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name",7,"SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id ORDER BY t.name ASC
SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id ORDER BY t.name ASC
SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id ORDER BY t.name ASC
SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id ORDER BY t.name ASC
SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id ORDER BY t.name ASC
SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id ORDER BY t.name ASC
SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id ORDER BY t.name ASC","SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id ORDER BY t.name ASC",0,1.0
164,849,How many orchestras does each record company manage?,orchestra,medium,"SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company",7,"SELECT record_company, COUNT(orchestra_id) AS number_of_orchestras FROM orchestra GROUP BY record_company
SELECT record_company, COUNT(orchestra_id) AS number_of_orchestras FROM orchestra GROUP BY record_company
SELECT record_company, COUNT(orchestra_id) AS number_of_orchestras FROM orchestra GROUP BY record_company
SELECT record_company, COUNT(orchestra_id) AS number_of_orchestras FROM orchestra GROUP BY record_company
SELECT record_company, COUNT(orchestra_id) AS number_of_orchestras FROM orchestra GROUP BY record_company
SELECT record_company, COUNT(orchestra_id) AS number_of_orchestras FROM orchestra GROUP BY record_company
SELECT record_company, COUNT(orchestra_id) AS number_of_orchestras FROM orchestra GROUP BY record_company","SELECT record_company, COUNT(orchestra_id) AS number_of_orchestras FROM orchestra GROUP BY record_company",0,1.0
165,1033,What are the names of properties that are either houses or apartments with more than 1 room?,real_estate_properties,hard,"SELECT property_name FROM Properties WHERE property_type_code  =  ""House"" UNION SELECT property_name FROM Properties WHERE property_type_code  =  ""Apartment"" AND room_count  >  1",7,"SELECT property_name FROM properties WHERE (property_type_code IN ('HOUSE', 'APARTMENT')) AND (room_count > 1)
SELECT property_name FROM properties WHERE (property_type_code IN ('HOUSE', 'APARTMENT')) AND (room_count > 1)
SELECT property_name FROM properties WHERE (property_type_code IN ('HOUSE', 'APARTMENT')) AND (room_count > 1)
SELECT property_name FROM properties WHERE (property_type_code IN ('HOUSE', 'APARTMENT')) AND (room_count > 1)
SELECT property_name FROM properties WHERE (property_type_code IN ('HOUSE', 'APARTMENT')) AND (room_count > 1)
SELECT property_name FROM properties WHERE (property_type_code IN ('HOUSE', 'APARTMENT')) AND (room_count > 1)
SELECT property_name FROM properties WHERE (property_type_code IN ('HOUSE', 'APARTMENT')) AND (room_count > 1)","SELECT property_name FROM properties WHERE (property_type_code IN ('HOUSE', 'APARTMENT')) AND (room_count > 1)",0,0.0
166,230,What airline serves the most flights?,flight_2,extra,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1,7,"SELECT airline, COUNT(*) AS flight_count FROM flights GROUP BY airline ORDER BY flight_count DESC LIMIT 1
SELECT airline, COUNT(*) AS flight_count FROM flights GROUP BY airline ORDER BY flight_count DESC LIMIT 1
SELECT airline, COUNT(*) AS flight_count FROM flights GROUP BY airline ORDER BY flight_count DESC LIMIT 1
SELECT airline, COUNT(*) AS flight_count FROM flights GROUP BY airline ORDER BY flight_count DESC LIMIT 1
SELECT airline, COUNT(*) AS flight_count FROM flights GROUP BY airline ORDER BY flight_count DESC LIMIT 1
SELECT airline, COUNT(*) AS flight_count FROM flights GROUP BY airline ORDER BY flight_count DESC LIMIT 1
SELECT airline, COUNT(*) AS flight_count FROM flights GROUP BY airline ORDER BY flight_count DESC LIMIT 1","SELECT airline, COUNT(*) AS flight_count FROM flights GROUP BY airline ORDER BY flight_count DESC LIMIT 1",0,0.0
167,715,Give me Brazil’s population and life expectancies.,world_1,medium,"SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  ""Brazil""",7,"SELECT population, lifeexpectancy FROM country WHERE name = 'Brazil'
SELECT population, lifeexpectancy FROM country WHERE name = 'Brazil'
SELECT population, lifeexpectancy FROM country WHERE name = 'Brazil'
SELECT population, lifeexpectancy FROM country WHERE name = 'Brazil'
SELECT population, lifeexpectancy FROM country WHERE name = 'Brazil'
SELECT population, lifeexpectancy FROM country WHERE name = 'Brazil'
SELECT population, lifeexpectancy FROM country WHERE name = 'Brazil'","SELECT population, lifeexpectancy FROM country WHERE name = 'Brazil'",True,1.0
168,276,Which shops' number products is above the average? Give me the shop names.,employee_hire_evaluation,hard,SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop),7,"SELECT s.name FROM shop s JOIN hiring h ON s.shop_id = h.shop_id JOIN employee e ON h.employee_id = e.employee_id WHERE s.number_products > (SELECT AVG(number_products) FROM shop) ORDER BY s.name
SELECT s.name FROM shop s JOIN hiring h ON s.shop_id = h.shop_id JOIN employee e ON h.employee_id = e.employee_id WHERE s.number_products > (SELECT AVG(number_products) FROM shop) AND e.name = 'employee_id'
SELECT s.name FROM shop s JOIN hiring h ON s.shop_id = h.shop_id JOIN employee e ON h.employee_id = e.employee_id WHERE s.number_products > (SELECT AVG(number_products) FROM shop) ORDER BY s.name
SELECT s.name FROM shop s JOIN hiring h ON s.shop_id = h.shop_id JOIN employee e ON h.employee_id = e.employee_id WHERE s.number_products > (SELECT AVG(number_products) FROM shop) GROUP BY s.name
SELECT s.name FROM shop s JOIN hiring h ON s.shop_id = h.shop_id JOIN employee e ON h.employee_id = e.employee_id WHERE s.number_products > (SELECT AVG(number_products) FROM shop) GROUP BY s.name
SELECT s.name FROM shop s JOIN hiring h ON s.shop_id = h.shop_id JOIN employee e ON h.employee_id = e.employee_id WHERE s.number_products > (SELECT AVG(number_products) FROM shop) GROUP BY s.name
SELECT s.name FROM shop s JOIN hiring h ON s.shop_id = h.shop_id JOIN employee e ON h.employee_id = e.employee_id WHERE s.number_products > (SELECT AVG(number_products) FROM shop) ORDER BY s.name",SELECT s.name FROM shop s JOIN hiring h ON s.shop_id = h.shop_id JOIN employee e ON h.employee_id = e.employee_id WHERE s.number_products > (SELECT AVG(number_products) FROM shop) ORDER BY s.name,0,1.0
169,512,What are the descriptions for all the math courses?,student_transcripts_tracking,easy,SELECT course_description FROM Courses WHERE course_name  =  'math',7,"SELECT course_description FROM courses WHERE course_name LIKE '%math%'
SELECT course_description FROM courses WHERE course_name LIKE '%math%'
SELECT course_description FROM courses WHERE course_name LIKE '%math%'
SELECT course_description FROM courses WHERE course_name LIKE '%math%'
SELECT course_description FROM courses WHERE course_name LIKE '%math%'
SELECT course_description FROM courses WHERE course_name LIKE '%math%'
SELECT course_description FROM courses WHERE course_name LIKE '%math%'",SELECT course_description FROM courses WHERE course_name LIKE '%math%',0,1.0
170,43,Find the number of concerts happened in the stadium with the highest capacity .,concert_singer,hard,select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1),7,"SELECT COUNT(*)  FROM concert  JOIN stadium ON concert.stadium_id = stadium.stadium_id  WHERE stadium.capacity = (SELECT MAX(capacity) FROM stadium)
SELECT COUNT(*)  FROM concert  JOIN stadium ON concert.stadium_id = stadium.stadium_id  WHERE stadium.capacity = (SELECT MAX(capacity) FROM stadium)
SELECT COUNT(*)  FROM concert  JOIN stadium ON concert.stadium_id = stadium.stadium_id  WHERE stadium.capacity = (SELECT MAX(capacity) FROM stadium)
SELECT COUNT(*)  FROM concert  JOIN stadium ON concert.stadium_id = stadium.stadium_id  WHERE stadium.capacity = (SELECT MAX(capacity) FROM stadium)
SELECT COUNT(*)  FROM concert  JOIN stadium ON concert.stadium_id = stadium.stadium_id  WHERE stadium.capacity = (SELECT MAX(capacity) FROM stadium)
SELECT COUNT(*)  FROM concert  JOIN stadium ON concert.stadium_id = stadium.stadium_id  WHERE stadium.capacity = (SELECT MAX(capacity) FROM stadium)
SELECT COUNT(*)  FROM concert  JOIN stadium ON concert.stadium_id = stadium.stadium_id  WHERE stadium.capacity = (SELECT MAX(capacity) FROM stadium)",SELECT COUNT(*)  FROM concert  JOIN stadium ON concert.stadium_id = stadium.stadium_id  WHERE stadium.capacity = (SELECT MAX(capacity) FROM stadium),0,1.0
171,956,Which dogs are owned by someone who lives in Virginia? List the owner's first name and the dog's name.,dog_kennels,medium,"SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'",7,"SELECT o.first_name, d.name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id WHERE o.state = 'VA'
SELECT o.first_name, d.name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id WHERE o.state = 'VA'
SELECT o.first_name, d.name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id WHERE o.state = 'VA'
SELECT o.first_name, d.name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id WHERE o.state = 'VA'
SELECT o.first_name, d.name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id WHERE o.state = 'VA'
SELECT o.first_name, d.name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id WHERE o.state = 'VA'
SELECT o.first_name, d.name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id WHERE o.state = 'VA'","SELECT o.first_name, d.name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id WHERE o.state = 'VA'",0,0.0
172,934,What is the name of the breed with the most dogs?,dog_kennels,extra,SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1,7,"SELECT breed_name, COUNT(*) AS num_dogs FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY breed_name ORDER BY num_dogs DESC LIMIT 1
SELECT breed_name, COUNT(*) AS num_dogs FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY breed_name ORDER BY num_dogs DESC LIMIT 1
SELECT breed_name, COUNT(*) AS num_dogs FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY breed_name ORDER BY num_dogs DESC LIMIT 1
SELECT breed_name, COUNT(*) AS num_dogs FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY breed_name ORDER BY num_dogs DESC LIMIT 1
SELECT breed_name, COUNT(*) AS num_dogs FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY breed_name ORDER BY num_dogs DESC LIMIT 1
SELECT breed_name, COUNT(*) AS num_dogs FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY breed_name ORDER BY num_dogs DESC LIMIT 1
SELECT breed_name, COUNT(*) AS num_dogs FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY breed_name ORDER BY num_dogs DESC LIMIT 1","SELECT breed_name, COUNT(*) AS num_dogs FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY breed_name ORDER BY num_dogs DESC LIMIT 1",0,0.0
173,582,What is the description for the section named h?,student_transcripts_tracking,easy,SELECT section_description FROM Sections WHERE section_name  =  'h',7,"SELECT section_description FROM sections WHERE section_name = 'h'
SELECT section_description FROM sections WHERE section_name = 'h'
SELECT section_description FROM sections WHERE section_name = 'h'
SELECT section_description FROM sections WHERE section_name = 'h'
SELECT section_description FROM sections WHERE section_name = 'h'
SELECT section_description FROM sections WHERE section_name = 'h'
SELECT section_description FROM sections WHERE section_name = 'h'",SELECT section_description FROM sections WHERE section_name = 'h',True,1.0
174,886,What is the name of the high schooler who has the greatest number of friends?,network_1,extra,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,7,"SELECT hs.name FROM highschooler hs JOIN friend f ON hs.id = f.student_id GROUP BY hs.id ORDER BY COUNT(f.friend_id) DESC LIMIT 1
SELECT hs.name FROM highschooler hs JOIN friend f ON hs.id = f.student_id GROUP BY hs.id ORDER BY COUNT(f.friend_id) DESC LIMIT 1
SELECT h.name FROM highschooler h JOIN friend f ON h.id = f.student_id GROUP BY h.id ORDER BY COUNT(f.friend_id) DESC LIMIT 1
SELECT hs.name FROM highschooler hs JOIN friend f ON hs.id = f.student_id GROUP BY hs.id ORDER BY COUNT(f.friend_id) DESC LIMIT 1
SELECT h.name FROM highschooler h JOIN friend f ON h.id = f.student_id GROUP BY h.id ORDER BY COUNT(f.friend_id) DESC LIMIT 1
SELECT hs.name FROM highschooler hs JOIN friend f ON hs.id = f.student_id GROUP BY hs.id ORDER BY COUNT(f.friend_id) DESC LIMIT 1
SELECT hs.name FROM highschooler hs JOIN friend f ON hs.id = f.student_id GROUP BY hs.id ORDER BY COUNT(f.friend_id) DESC LIMIT 1",SELECT hs.name FROM highschooler hs JOIN friend f ON hs.id = f.student_id GROUP BY hs.id ORDER BY COUNT(f.friend_id) DESC LIMIT 1,0,1.0
175,990,How much does each charge type costs? List both charge type and amount.,dog_kennels,medium,"SELECT charge_type ,  charge_amount FROM Charges",7,"SELECT charge_type, charge_amount FROM charges
SELECT charge_type, charge_amount FROM charges
SELECT charge_type, charge_amount FROM charges
SELECT charge_type, charge_amount FROM charges
SELECT charge_type, charge_amount FROM charges
SELECT charge_type, charge_amount FROM charges
SELECT charge_type, charge_amount FROM charges","SELECT charge_type, charge_amount FROM charges",True,1.0
176,231,Find the abbreviation and country of the airline that has fewest number of flights?,flight_2,extra,"SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1",7,"SELECT abbreviation, country FROM airlines ORDER BY (SELECT COUNT(*) FROM flights WHERE flights.airline = airlines.uid) LIMIT 1
SELECT abbreviation, country FROM airlines ORDER BY (SELECT COUNT(*) FROM flights WHERE flights.airline = airlines.uid) LIMIT 1
SELECT abbreviation, country FROM airlines ORDER BY (SELECT COUNT(*) FROM flights WHERE flights.airline = airlines.uid) LIMIT 1
SELECT abbreviation, country FROM airlines ORDER BY (SELECT COUNT(*) FROM flights WHERE flights.airline = airlines.uid) LIMIT 1
SELECT abbreviation, country FROM airlines ORDER BY (SELECT COUNT(*) FROM flights WHERE flights.airline = airlines.uid) LIMIT 1
SELECT abbreviation, country FROM airlines ORDER BY (SELECT COUNT(*) FROM flights WHERE flights.airline = airlines.uid) LIMIT 1
SELECT abbreviation, country FROM airlines ORDER BY (SELECT COUNT(*) FROM flights WHERE flights.airline = airlines.uid) LIMIT 1","SELECT abbreviation, country FROM airlines ORDER BY (SELECT COUNT(*) FROM flights WHERE flights.airline = airlines.uid) LIMIT 1",0,0.0
177,294,Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products.,employee_hire_evaluation,hard,SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000,7,"SELECT DISTINCT s.district FROM shop s JOIN hiring h ON s.shop_id = h.shop_id WHERE s.number_products < 3000 AND EXISTS (     SELECT 1     FROM shop s2     JOIN hiring h2 ON s2.shop_id = h2.shop_id     WHERE s2.number_products > 10000     AND s.district = s2.district )
SELECT DISTINCT s.district FROM shop s JOIN hiring h ON s.shop_id = h.shop_id WHERE s.number_products < 3000 AND EXISTS (     SELECT 1     FROM shop s2     JOIN hiring h2 ON s2.shop_id = h2.shop_id     WHERE s2.number_products > 10000     AND s.district = s2.district )
SELECT DISTINCT s.district FROM shop s JOIN hiring h ON s.shop_id = h.shop_id WHERE s.number_products < 3000 AND EXISTS (     SELECT 1     FROM shop s2     JOIN hiring h2 ON s2.shop_id = h2.shop_id     WHERE s2.number_products > 10000     AND s.district = s2.district )
SELECT DISTINCT s.district FROM shop s JOIN hiring h ON s.shop_id = h.shop_id WHERE s.number_products < 3000 AND EXISTS (     SELECT 1     FROM shop s2     JOIN hiring h2 ON s2.shop_id = h2.shop_id     WHERE s2.number_products > 10000     AND s.district = s2.district )
SELECT DISTINCT s.district FROM shop s JOIN hiring h ON s.shop_id = h.shop_id WHERE s.number_products < 3000 AND EXISTS (     SELECT 1     FROM shop s2     JOIN hiring h2 ON s2.shop_id = h2.shop_id     WHERE s2.number_products > 10000     AND s.district = s2.district )
SELECT DISTINCT s.district FROM shop s JOIN hiring h ON s.shop_id = h.shop_id WHERE s.number_products < 3000 AND EXISTS (     SELECT 1     FROM shop s2     JOIN hiring h2 ON s2.shop_id = h2.shop_id     WHERE s2.number_products > 10000     AND s.district = s2.district )
SELECT DISTINCT s.district FROM shop s JOIN hiring h ON s.shop_id = h.shop_id WHERE s.number_products < 3000 AND EXISTS (     SELECT 1     FROM shop s2     JOIN hiring h2 ON s2.shop_id = h2.shop_id     WHERE s2.number_products > 10000     AND s.district = s2.district )",SELECT DISTINCT s.district FROM shop s JOIN hiring h ON s.shop_id = h.shop_id WHERE s.number_products < 3000 AND EXISTS (     SELECT 1     FROM shop s2     JOIN hiring h2 ON s2.shop_id = h2.shop_id     WHERE s2.number_products > 10000     AND s.district = s2.district ),0,1.0
178,1,What is the total number of singers?,concert_singer,easy,SELECT count(*) FROM singer,7,"SELECT COUNT(*) FROM singer
SELECT COUNT(*) FROM singer
SELECT COUNT(*) FROM singer
SELECT COUNT(*) FROM singer
SELECT COUNT(*) FROM singer
SELECT COUNT(*) FROM singer
SELECT COUNT(*) FROM singer",SELECT COUNT(*) FROM singer,True,1.0
179,439,Find the highest rank of losers in all matches.,wta_1,easy,SELECT min(loser_rank) FROM matches,7,"SELECT MAX(loser_rank) AS highest_rank_of_losers FROM matches
SELECT MAX(loser_rank) AS highest_rank_of_losers FROM matches
SELECT MAX(loser_rank) AS highest_rank_of_losers FROM matches
SELECT MAX(loser_rank) AS highest_rank_of_losers FROM matches
SELECT MAX(loser_rank) AS highest_rank_of_losers FROM matches
SELECT MAX(loser_rank) AS highest_rank_of_losers FROM matches
SELECT MAX(loser_rank) AS highest_rank_of_losers FROM matches",SELECT MAX(loser_rank) AS highest_rank_of_losers FROM matches,0,0.0
180,776,Which Asian countries have a population that is larger than any country in Africa?,world_1,extra,"SELECT Name FROM country WHERE Continent  =  ""Asia""  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  ""Africa"")",7,"SELECT name FROM country WHERE continent = 'Asia' AND population > (SELECT MAX(population) FROM country WHERE continent = 'Africa')
SELECT name FROM country WHERE continent = 'Asia' AND population > (SELECT MAX(population) FROM country WHERE continent = 'Africa')
SELECT name FROM country WHERE continent = 'Asia' AND population > (SELECT MAX(population) FROM country WHERE continent = 'Africa')
SELECT name FROM country WHERE continent = 'Asia' AND population > (SELECT MAX(population) FROM country WHERE continent = 'Africa')
SELECT name FROM country WHERE continent = 'Asia' AND population > (SELECT MAX(population) FROM country WHERE continent = 'Africa')
SELECT name FROM country WHERE continent = 'Asia' AND population > (SELECT MAX(population) FROM country WHERE continent = 'Africa')
SELECT name FROM country WHERE continent = 'Asia' AND population > (SELECT MAX(population) FROM country WHERE continent = 'Africa')",SELECT name FROM country WHERE continent = 'Asia' AND population > (SELECT MAX(population) FROM country WHERE continent = 'Africa'),True,1.0
181,774,What are the African countries that have a  population less than any country in Asia?,world_1,extra,"SELECT Name FROM country WHERE Continent  =  ""Africa""  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  ""Asia"")",7,"SELECT name FROM country WHERE continent = 'Africa' AND population < (SELECT MIN(population) FROM country WHERE continent = 'Asia')
SELECT name FROM country WHERE continent = 'Africa' AND population < (SELECT MIN(population) FROM country WHERE continent = 'Asia')
SELECT name FROM country WHERE continent = 'Africa' AND population < (SELECT MIN(population) FROM country WHERE continent = 'Asia')
SELECT name FROM country WHERE continent = 'Africa' AND population < (SELECT MIN(population) FROM country WHERE continent = 'Asia')
SELECT name FROM country WHERE continent = 'Africa' AND population < (SELECT MIN(population) FROM country WHERE continent = 'Asia')
SELECT name FROM country WHERE continent = 'Africa' AND population < (SELECT MIN(population) FROM country WHERE continent = 'Asia')
SELECT name FROM country WHERE continent = 'Africa' AND population < (SELECT MIN(population) FROM country WHERE continent = 'Asia')",SELECT name FROM country WHERE continent = 'Africa' AND population < (SELECT MIN(population) FROM country WHERE continent = 'Asia'),0,0.0
182,644,What are the ids of the TV channels that do not have any cartoons directed by Ben Jones?,tvshow,hard,SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones',7,"SELECT DISTINCT tv_channel.id FROM tv_channel LEFT JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.directed_by != 'Ben Jones' OR cartoon.directed_by IS NULL
SELECT DISTINCT tv_channel.id FROM tv_channel LEFT JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.directed_by != 'Ben Jones' OR cartoon.directed_by IS NULL
SELECT DISTINCT tv_channel.id FROM tv_channel LEFT JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.directed_by != 'Ben Jones' OR cartoon.directed_by IS NULL
SELECT DISTINCT tv_channel.id FROM tv_channel LEFT JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.directed_by != 'Ben Jones' OR cartoon.directed_by IS NULL
SELECT DISTINCT tv_channel.id FROM tv_channel LEFT JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.directed_by != 'Ben Jones' OR cartoon.directed_by IS NULL
SELECT tv_series.id FROM tv_series JOIN cartoon ON tv_series.channel = cartoon.channel WHERE cartoon.directed_by != 'Ben Jones'
SELECT DISTINCT tv_channel.id FROM tv_channel LEFT JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.directed_by != 'Ben Jones' OR cartoon.directed_by IS NULL",SELECT DISTINCT tv_channel.id FROM tv_channel LEFT JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.directed_by != 'Ben Jones' OR cartoon.directed_by IS NULL,0,0.0
183,487,"Find the first name, country code and birth date of the winner who has the highest rank points in all matches.",wta_1,hard,"SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1",7,"SELECT p.first_name, p.country_code, p.birth_date FROM players p JOIN matches m ON p.player_id = m.winner_id ORDER BY m.winner_rank_points DESC LIMIT 1
SELECT p.first_name, p.country_code, p.birth_date FROM players p JOIN matches m ON p.player_id = m.winner_id ORDER BY m.winner_rank_points DESC LIMIT 1
SELECT p.first_name, p.country_code, p.birth_date FROM players p JOIN matches m ON p.player_id = m.winner_id ORDER BY m.winner_rank_points DESC LIMIT 1
SELECT p.first_name, p.country_code, p.birth_date  FROM players p  JOIN matches m ON p.player_id = m.winner_id  WHERE m.winner_rank_points = (SELECT MAX(winner_rank_points) FROM matches)  LIMIT 1
SELECT p.first_name, p.country_code, p.birth_date FROM players p JOIN matches m ON p.player_id = m.winner_id ORDER BY m.winner_rank_points DESC LIMIT 1
SELECT p.first_name, p.country_code, p.birth_date FROM players p JOIN matches m ON p.player_id = m.winner_id ORDER BY m.winner_rank_points DESC LIMIT 1
SELECT p.first_name, p.country_code, p.birth_date FROM players p JOIN matches m ON p.player_id = m.winner_id ORDER BY m.winner_rank_points DESC LIMIT 1","SELECT p.first_name, p.country_code, p.birth_date FROM players p JOIN matches m ON p.player_id = m.winner_id ORDER BY m.winner_rank_points DESC LIMIT 1",0,1.0
184,536,"What are the first, middle, and last names for everybody enrolled in a Bachelors program?",student_transcripts_tracking,hard,"SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'",7,"SELECT s.first_name, s.middle_name, s.last_name FROM students s JOIN student_enrolment se ON s.student_id = se.student_id JOIN degree_programs dp ON se.degree_program_id = dp.degree_program_id WHERE dp.degree_summary_name = 'Bachelors'
SELECT first_name, middle_name, last_name FROM students WHERE date_left IS NULL
SELECT first_name, middle_name, last_name FROM students WHERE date_left IS NULL
SELECT s.first_name, s.middle_name, s.last_name FROM students s JOIN student_enrolment se ON s.student_id = se.student_id JOIN degree_programs dp ON se.degree_program_id = dp.degree_program_id WHERE dp.degree_summary_name = 'Bachelors'
SELECT s.first_name, s.middle_name, s.last_name FROM students s JOIN student_enrolment se ON s.student_id = se.student_id JOIN degree_programs dp ON se.degree_program_id = dp.degree_program_id WHERE dp.degree_summary_name = 'Bachelors'
SELECT first_name, middle_name, last_name FROM students WHERE date_left IS NULL
SELECT s.first_name, s.middle_name, s.last_name FROM students s JOIN student_enrolment se ON s.student_id = se.student_id JOIN degree_programs dp ON se.degree_program_id = dp.degree_program_id WHERE dp.degree_summary_name = 'Bachelors'","SELECT s.first_name, s.middle_name, s.last_name FROM students s JOIN student_enrolment se ON s.student_id = se.student_id JOIN degree_programs dp ON se.degree_program_id = dp.degree_program_id WHERE dp.degree_summary_name = 'Bachelors'",0,0.0
185,832,"What are the maximum and minimum share of performances whose type is not ""Live final"".",orchestra,medium,"SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != ""Live final""",7,"SELECT MAX(share) AS MaxShare, MIN(share) AS MinShare FROM performance WHERE type != 'Live final'
SELECT MAX(share) AS MaxShare, MIN(share) AS MinShare FROM performance WHERE type != 'Live final'
SELECT MAX(share) AS MaxShare, MIN(share) AS MinShare FROM performance WHERE type != 'Live final'
SELECT MAX(share) AS MaxShare, MIN(share) AS MinShare FROM performance WHERE type != 'Live final'
SELECT MAX(share) AS MaxShare, MIN(share) AS MinShare FROM performance WHERE type != 'Live final'
SELECT MAX(share) AS MaxShare, MIN(share) AS MinShare FROM performance WHERE type != 'Live final'
SELECT MAX(share) AS MaxShare, MIN(share) AS MinShare FROM performance WHERE type != 'Live final'","SELECT MAX(share) AS MaxShare, MIN(share) AS MinShare FROM performance WHERE type != 'Live final'",0,1.0
186,658,Return the maximum final tables made across all poker players who have earnings below 200000.,poker_player,easy,SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000,7,"SELECT MAX(final_table_made) FROM poker_player WHERE earnings < 200000
SELECT MAX(final_table_made) FROM poker_player WHERE earnings < 200000
SELECT MAX(final_table_made) FROM poker_player WHERE earnings < 200000
SELECT MAX(final_table_made) FROM poker_player WHERE earnings < 200000
SELECT MAX(final_table_made) FROM poker_player WHERE earnings < 200000
SELECT MAX(final_table_made) FROM poker_player WHERE earnings < 200000
SELECT MAX(final_table_made) FROM poker_player WHERE earnings < 200000",SELECT MAX(final_table_made) FROM poker_player WHERE earnings < 200000,True,1.0
187,346,What are the codes of template types that are not used for any document?,cre_Doc_Template_Mgt,hard,SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id,7,"SELECT template_type_code FROM templates RIGHT JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE templates.template_id IS NULL
SELECT template_type_code FROM templates RIGHT JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE templates.template_id IS NULL
SELECT template_type_code FROM templates RIGHT JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE templates.template_id IS NULL
SELECT template_type_code FROM templates RIGHT JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE templates.template_id IS NULL
SELECT template_type_code FROM templates RIGHT JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE templates.template_id IS NULL
SELECT template_type_code FROM templates RIGHT JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE templates.template_id IS NULL
SELECT template_type_code FROM templates RIGHT JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE templates.template_id IS NULL",SELECT template_type_code FROM templates RIGHT JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE templates.template_id IS NULL,0,0.0
188,596,What is the country with the most number of TV Channels and how many does it have?,tvshow,hard,"SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;",7,"SELECT country, COUNT(*) AS num_channels FROM tv_channel GROUP BY country ORDER BY num_channels DESC LIMIT 1
SELECT country, COUNT(*) AS num_channels FROM tv_channel GROUP BY country ORDER BY num_channels DESC LIMIT 1
SELECT country, COUNT(*) AS num_channels FROM tv_channel GROUP BY country ORDER BY num_channels DESC LIMIT 1
SELECT country, COUNT(*) AS num_channels FROM tv_channel GROUP BY country ORDER BY num_channels DESC LIMIT 1
SELECT country, COUNT(*) AS num_channels FROM tv_channel GROUP BY country ORDER BY num_channels DESC LIMIT 1
SELECT country, COUNT(*) AS num_channels FROM tv_channel GROUP BY country ORDER BY num_channels DESC LIMIT 1
SELECT country, COUNT(*) AS num_channels FROM tv_channel GROUP BY country ORDER BY num_channels DESC LIMIT 1","SELECT country, COUNT(*) AS num_channels FROM tv_channel GROUP BY country ORDER BY num_channels DESC LIMIT 1",0,1.0
189,312,Return the id and type code of the template that is used for the greatest number of documents.,cre_Doc_Template_Mgt,extra,"SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT template_id, template_type_code FROM templates ORDER BY (SELECT COUNT(*) FROM documents WHERE templates.template_id = documents.template_id) DESC LIMIT 1
SELECT template_id, template_type_code FROM templates ORDER BY (SELECT COUNT(*) FROM documents WHERE templates.template_id = documents.template_id) DESC LIMIT 1
SELECT template_id, template_type_code FROM templates ORDER BY (SELECT COUNT(*) FROM documents WHERE templates.template_id = documents.template_id) DESC LIMIT 1
SELECT template_id, template_type_code FROM templates ORDER BY (SELECT COUNT(*) FROM documents WHERE templates.template_id = documents.template_id) DESC LIMIT 1
SELECT template_id, template_type_code FROM templates ORDER BY (SELECT COUNT(*) FROM documents WHERE templates.template_id = documents.template_id) DESC LIMIT 1
SELECT template_id, template_type_code FROM templates ORDER BY (SELECT COUNT(*) FROM documents WHERE templates.template_id = documents.template_id) DESC LIMIT 1
SELECT template_id, template_type_code FROM templates ORDER BY (SELECT COUNT(*) FROM documents WHERE templates.template_id = documents.template_id) DESC LIMIT 1","SELECT template_id, template_type_code FROM templates ORDER BY (SELECT COUNT(*) FROM documents WHERE templates.template_id = documents.template_id) DESC LIMIT 1",0,0.0
190,212,How many flights fly from Aberdeen to Ashley?,flight_2,hard,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  ""Ashley"" AND T3.City  =  ""Aberdeen""",7,"SELECT COUNT(*) FROM flights WHERE sourceairport = 'Aberdeen' AND destairport = 'Ashley'
SELECT COUNT(*) FROM flights WHERE sourceairport = 'Aberdeen' AND destairport = 'Ashley'
SELECT COUNT(*) FROM flights WHERE sourceairport = 'Aberdeen' AND destairport = 'Ashley'
SELECT COUNT(*) FROM flights WHERE sourceairport = 'Aberdeen' AND destairport = 'Ashley'
SELECT COUNT(*) FROM flights WHERE sourceairport = 'Aberdeen' AND destairport = 'Ashley'
SELECT COUNT(*) FROM flights WHERE sourceairport = 'Aberdeen' AND destairport = 'Ashley'
SELECT COUNT(*) FROM flights WHERE sourceairport = 'Aberdeen' AND destairport = 'Ashley'",SELECT COUNT(*) FROM flights WHERE sourceairport = 'Aberdeen' AND destairport = 'Ashley',0,1.0
191,961,Who owns the youngest dog? Give me his or her last name.,dog_kennels,extra,SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs ),7,"SELECT o.last_name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id WHERE d.age = (SELECT MIN(age) FROM dogs) LIMIT 1
SELECT o.last_name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id WHERE d.age = (SELECT MIN(age) FROM dogs) LIMIT 1
SELECT o.last_name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id WHERE d.age = (SELECT MIN(age) FROM dogs) LIMIT 1
SELECT o.last_name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id WHERE d.age = (SELECT MIN(age) FROM dogs) LIMIT 1
SELECT o.last_name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id WHERE d.age = (SELECT MIN(age) FROM dogs) LIMIT 1
SELECT o.last_name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id WHERE d.age = (SELECT MIN(age) FROM dogs) LIMIT 1
SELECT o.last_name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id WHERE d.age = (SELECT MIN(age) FROM dogs) LIMIT 1",SELECT o.last_name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id WHERE d.age = (SELECT MIN(age) FROM dogs) LIMIT 1,0,0.0
192,547,What's the name of the course with most number of enrollments?,student_transcripts_tracking,extra,SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1,7,"SELECT course_name  FROM courses  JOIN student_enrolment_courses ON courses.course_id = student_enrolment_courses.course_id  JOIN student_enrolment ON student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id  GROUP BY courses.course_id  ORDER
SELECT course_name  FROM courses  JOIN student_enrolment_courses ON courses.course_id = student_enrolment_courses.course_id  JOIN student_enrolment ON student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id  GROUP BY courses.course_id  ORDER
SELECT course_name  FROM courses  JOIN student_enrolment_courses ON courses.course_id = student_enrolment_courses.course_id  JOIN student_enrolment ON student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id  GROUP BY courses.course_id  ORDER
SELECT course_name  FROM courses  JOIN student_enrolment_courses ON courses.course_id = student_enrolment_courses.course_id  JOIN student_enrolment ON student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id  GROUP BY courses.course_id  ORDER
SELECT course_name FROM courses ORDER BY (SELECT COUNT(*) FROM student_enrolment_courses WHERE courses.course_id = student_enrolment_courses.course_id) DESC LIMIT 1
SELECT course_name  FROM courses  JOIN student_enrolment_courses ON courses.course_id = student_enrolment_courses.course_id  JOIN student_enrolment ON student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id  GROUP BY courses.course_id  ORDER
SELECT course_name FROM courses JOIN student_enrolment_courses ON courses.course_id = student_enrolment_courses.course_id JOIN student_enrolment ON student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id GROUP BY course_name ORDER BY COUNT(student_enrolment_courses.student_en",SELECT course_name  FROM courses  JOIN student_enrolment_courses ON courses.course_id = student_enrolment_courses.course_id  JOIN student_enrolment ON student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id  GROUP BY courses.course_id  ORDER,0,0.0
193,553,What is the phone number of the man with the first name Timmothy and the last name Ward?,student_transcripts_tracking,medium,SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward',7,"SELECT cell_mobile_number FROM students WHERE first_name = 'Timmothy' AND last_name = 'Ward'
SELECT cell_mobile_number FROM students WHERE first_name = 'Timmothy' AND last_name = 'Ward'
SELECT cell_mobile_number FROM students WHERE first_name = 'Timmothy' AND last_name = 'Ward'
SELECT cell_mobile_number FROM students WHERE first_name = 'Timmothy' AND last_name = 'Ward'
SELECT cell_mobile_number FROM students WHERE first_name = 'Timmothy' AND last_name = 'Ward'
SELECT cell_mobile_number FROM students WHERE first_name = 'Timmothy' AND last_name = 'Ward'
SELECT cell_mobile_number FROM students WHERE first_name = 'Timmothy' AND last_name = 'Ward'",SELECT cell_mobile_number FROM students WHERE first_name = 'Timmothy' AND last_name = 'Ward',True,1.0
194,674,How many people are there of each nationality?,poker_player,medium,"SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality",7,"SELECT nationality, COUNT(*) AS number_of_people FROM people GROUP BY nationality
SELECT nationality, COUNT(*) AS number_of_people FROM people GROUP BY nationality
SELECT nationality, COUNT(*) AS number_of_people FROM people GROUP BY nationality
SELECT nationality, COUNT(*) AS number_of_people FROM people GROUP BY nationality
SELECT nationality, COUNT(*) AS number_of_people FROM people GROUP BY nationality
SELECT nationality, COUNT(*) AS number_of_people FROM people GROUP BY nationality
SELECT nationality, COUNT(*) AS number_of_people FROM people GROUP BY nationality","SELECT nationality, COUNT(*) AS number_of_people FROM people GROUP BY nationality",0,1.0
195,712,Which language is the most popular in Aruba?,world_1,extra,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Aruba"" ORDER BY Percentage DESC LIMIT 1",7,"SELECT language FROM countrylanguage WHERE countrycode = 'ABW'
SELECT language FROM countrylanguage WHERE countrycode = 'ABW'
SELECT language FROM countrylanguage WHERE countrycode = 'ABW'
SELECT language FROM countrylanguage WHERE countrycode = 'ABW'
SELECT language FROM countrylanguage WHERE countrycode = 'ABW'
SELECT language FROM countrylanguage WHERE countrycode = 'ABW'
SELECT language FROM countrylanguage WHERE countrycode = 'ABW'",SELECT language FROM countrylanguage WHERE countrycode = 'ABW',0,0.0
196,53,Find the number of dog pets that are raised by female students (with sex F).,pets_1,hard,SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog',7,"SELECT COUNT(*) FROM has_pet hp JOIN pets p ON hp.petid = p.petid JOIN student s ON hp.stuid = s.stuid WHERE s.sex = 'F' AND p.pettype = 'dog'
SELECT COUNT(*)  FROM student s  JOIN has_pet hp ON s.stuid = hp.stuid  JOIN pets p ON hp.petid = p.petid  WHERE s.sex = 'F' AND p.pettype = 'dog'
SELECT COUNT(*) FROM has_pet hp JOIN pets p ON hp.petid = p.petid JOIN student s ON hp.stuid = s.stuid WHERE s.sex = 'F' AND p.pettype = 'dog'
SELECT COUNT(*) FROM has_pet hp JOIN pets p ON hp.petid = p.petid JOIN student s ON hp.stuid = s.stuid WHERE s.sex = 'F' AND p.pettype = 'dog'
SELECT COUNT(*) FROM has_pet hp JOIN pets p ON hp.petid = p.petid JOIN student s ON hp.stuid = s.stuid WHERE s.sex = 'F' AND p.pettype = 'dog'
SELECT COUNT(*) FROM has_pet hp JOIN pets p ON hp.petid = p.petid JOIN student s ON hp.stuid = s.stuid WHERE s.sex = 'F' AND p.pettype = 'dog'
SELECT COUNT(*) FROM has_pet hp JOIN pets p ON hp.petid = p.petid JOIN student s ON hp.stuid = s.stuid WHERE s.sex = 'F' AND p.pettype = 'dog'",SELECT COUNT(*) FROM has_pet hp JOIN pets p ON hp.petid = p.petid JOIN student s ON hp.stuid = s.stuid WHERE s.sex = 'F' AND p.pettype = 'dog',0,1.0
197,510,How many courses are there?,student_transcripts_tracking,easy,SELECT count(*) FROM Courses,7,"SELECT COUNT(*) FROM courses
SELECT COUNT(*) FROM courses
SELECT COUNT(*) FROM courses
SELECT COUNT(*) FROM courses
SELECT COUNT(*) FROM courses
SELECT COUNT(*) FROM courses
SELECT COUNT(*) FROM courses",SELECT COUNT(*) FROM courses,True,1.0
198,327,What is the version number and template type code for the template with version number later than 5?,cre_Doc_Template_Mgt,medium,"SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5",7,"SELECT version_number, template_type_code FROM templates WHERE version_number > 5
SELECT version_number, template_type_code FROM templates WHERE version_number > 5
SELECT version_number, template_type_code FROM templates WHERE version_number > 5
SELECT version_number, template_type_code FROM templates WHERE version_number > 5
SELECT version_number, template_type_code FROM templates WHERE version_number > 5
SELECT version_number, template_type_code FROM templates WHERE version_number > 5
SELECT version_number, template_type_code FROM templates WHERE version_number > 5","SELECT version_number, template_type_code FROM templates WHERE version_number > 5",True,1.0
199,697,How many contestants did not get voted?,voter_1,extra,SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes ),7,"SELECT COUNT(*) FROM contestants LEFT JOIN votes ON contestants.contestant_number = votes.contestant_number WHERE votes.contestant_number IS NULL
SELECT COUNT(*) FROM contestants WHERE contestant_number NOT IN (SELECT contestant_number FROM votes)
SELECT COUNT(*) FROM contestants WHERE contestant_number NOT IN (SELECT contestant_number FROM votes)
SELECT COUNT(*) FROM contestants WHERE contestant_number NOT IN (SELECT contestant_number FROM votes)
SELECT COUNT(*) FROM contestants WHERE contestant_number NOT IN (SELECT contestant_number FROM votes)
SELECT COUNT(*) FROM contestants LEFT JOIN votes ON contestants.contestant_number = votes.contestant_number WHERE votes.contestant_number IS NULL
SELECT COUNT(*) FROM contestants WHERE contestant_number NOT IN (SELECT contestant_number FROM votes)",SELECT COUNT(*) FROM contestants WHERE contestant_number NOT IN (SELECT contestant_number FROM votes),0,1.0
200,355,"What are the template ids with template type description ""Presentation"".",cre_Doc_Template_Mgt,medium,"SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  ""Presentation""",7,"SELECT template_id FROM templates WHERE template_type_description = 'Presentation'
SELECT template_id FROM templates WHERE template_type_description = 'Presentation'
SELECT template_id FROM templates WHERE template_type_description = 'Presentation'
SELECT template_id FROM templates WHERE template_type_description = 'Presentation'
SELECT template_id FROM templates WHERE template_type_description = 'Presentation'
SELECT template_id FROM templates WHERE template_type_description = 'Presentation'
SELECT template_id FROM templates WHERE template_type_description = 'Presentation'",SELECT template_id FROM templates WHERE template_type_description = 'Presentation',0,0.0
201,27,What is the year that had the most concerts?,concert_singer,hard,SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,7,"SELECT year, COUNT(*) AS concert_count FROM concert GROUP BY year ORDER BY concert_count DESC LIMIT 1
SELECT year, COUNT(*) AS concert_count FROM concert GROUP BY year ORDER BY concert_count DESC LIMIT 1
SELECT year, COUNT(*) AS concert_count FROM concert GROUP BY year ORDER BY concert_count DESC LIMIT 1
SELECT year, COUNT(*) AS concert_count FROM concert GROUP BY year ORDER BY concert_count DESC LIMIT 1
SELECT year, COUNT(*) AS concert_count FROM concert GROUP BY year ORDER BY concert_count DESC LIMIT 1
SELECT year, COUNT(*) AS concert_count FROM concert GROUP BY year ORDER BY concert_count DESC LIMIT 1
SELECT year, COUNT(*) AS concert_count FROM concert GROUP BY year ORDER BY concert_count DESC LIMIT 1","SELECT year, COUNT(*) AS concert_count FROM concert GROUP BY year ORDER BY concert_count DESC LIMIT 1",0,0.0
202,587,"List all cartoon directed by ""Ben Jones"".",tvshow,easy,"SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"";",7,"SELECT tv_series.id, tv_series.episode, tv_series.air_date, tv_series.rating, tv_series.share, tv_series.18_49_rating_share, tv_series.viewers_m, tv_series.weekly_rank, tv_series.channel FROM cartoon JOIN tv_series ON cartoon.id = tv_series.id WHERE cartoon.directed_by = 'Ben Jones'
SELECT tv_series.id, tv_series.episode, tv_series.air_date, tv_series.rating, tv_series.share, tv_series.18_49_rating_share, tv_series.viewers_m, tv_series.weekly_rank, tv_series.channel FROM cartoon JOIN tv_series ON cartoon.id = tv_series.id WHERE cartoon.directed_by = 'Ben Jones'
SELECT tv_series.id, tv_series.episode, tv_series.air_date, tv_series.rating, tv_series.share, tv_series.18_49_rating_share, tv_series.viewers_m, tv_series.weekly_rank, tv_series.channel FROM cartoon JOIN tv_series ON cartoon.id = tv_series.id WHERE cartoon.directed_by = 'Ben Jones'
SELECT tv_series.id, tv_series.episode, tv_series.air_date, tv_series.rating, tv_series.share, tv_series.18_49_rating_share, tv_series.viewers_m, tv_series.weekly_rank, tv_series.channel FROM cartoon JOIN tv_series ON cartoon.id = tv_series.id WHERE cartoon.directed_by = 'Ben Jones'
SELECT tv_series.id, tv_series.episode, tv_series.air_date, tv_series.rating, tv_series.share, tv_series.18_49_rating_share, tv_series.viewers_m, tv_series.weekly_rank, tv_series.channel FROM cartoon JOIN tv_series ON cartoon.id = tv_series.id WHERE cartoon.directed_by = 'Ben Jones'
SELECT tv_series.id, tv_series.episode, tv_series.air_date, tv_series.rating, tv_series.share, tv_series.18_49_rating_share, tv_series.viewers_m, tv_series.weekly_rank, tv_series.channel FROM cartoon JOIN tv_series ON cartoon.id = tv_series.id WHERE cartoon.directed_by = 'Ben Jones'
SELECT tv_series.id, tv_series.episode, tv_series.air_date, tv_series.rating, tv_series.share, tv_series.18_49_rating_share, tv_series.viewers_m, tv_series.weekly_rank, tv_series.channel FROM cartoon JOIN tv_series ON cartoon.id = tv_series.id WHERE cartoon.directed_by = 'Ben Jones'","SELECT tv_series.id, tv_series.episode, tv_series.air_date, tv_series.rating, tv_series.share, tv_series.18_49_rating_share, tv_series.viewers_m, tv_series.weekly_rank, tv_series.channel FROM cartoon JOIN tv_series ON cartoon.id = tv_series.id WHERE cartoon.directed_by = 'Ben Jones'",0,0.0
203,187,How many airlines do we have?,flight_2,easy,SELECT count(*) FROM AIRLINES,7,"SELECT COUNT(*) FROM airlines
SELECT COUNT(*) FROM airlines
SELECT COUNT(*) FROM airlines
SELECT COUNT(*) FROM airlines
SELECT COUNT(*) FROM airlines
SELECT COUNT(*) FROM airlines
SELECT COUNT(*) FROM airlines",SELECT COUNT(*) FROM airlines,True,1.0
204,54,How many dog pets are raised by female students?,pets_1,hard,SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog',7,"SELECT COUNT(*) FROM has_pet hp JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'dog' AND hp.stuid IN (SELECT stuid FROM student WHERE sex = 'F')
SELECT COUNT(*) FROM has_pet hp JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'dog' AND hp.stuid IN (SELECT stuid FROM student WHERE sex = 'F')
SELECT COUNT(*) FROM has_pet hp JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'dog' AND hp.stuid IN (SELECT stuid FROM student WHERE sex = 'F')
SELECT COUNT(*) FROM has_pet hp JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'dog' AND hp.stuid IN (SELECT stuid FROM student WHERE sex = 'F')
SELECT COUNT(*) FROM has_pet hp JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'dog' AND hp.stuid IN (SELECT stuid FROM student WHERE sex = 'F')
SELECT COUNT(*) FROM has_pet hp JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'dog' AND hp.stuid IN (SELECT stuid FROM student WHERE sex = 'F')
SELECT COUNT(*) FROM has_pet hp JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'dog' AND hp.stuid IN (SELECT stuid FROM student WHERE sex = 'F')",SELECT COUNT(*) FROM has_pet hp JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'dog' AND hp.stuid IN (SELECT stuid FROM student WHERE sex = 'F'),0,1.0
205,476,What is the code of the country with the most players?,wta_1,hard,SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1,7,"SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1",SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1,True,1.0
206,740,What is name of the country that speaks the largest number of languages?,world_1,extra,SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1,7,"SELECT name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.code ORDER BY COUNT(countrylanguage.language) DESC LIMIT 1
SELECT name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.code ORDER BY COUNT(countrylanguage.language) DESC LIMIT 1
SELECT name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.code ORDER BY COUNT(countrylanguage.language) DESC LIMIT 1
SELECT name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.code ORDER BY COUNT(countrylanguage.language) DESC LIMIT 1
SELECT name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.code ORDER BY COUNT(countrylanguage.language) DESC LIMIT 1
SELECT name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.code ORDER BY COUNT(countrylanguage.language) DESC LIMIT 1
SELECT name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.code ORDER BY COUNT(countrylanguage.language) DESC LIMIT 1",SELECT name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY country.code ORDER BY COUNT(countrylanguage.language) DESC LIMIT 1,0,0.0
207,366,What are the paragraph texts for the document with the name 'Customer reviews'?,cre_Doc_Template_Mgt,medium,"SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  ""Customer reviews""",7,"SELECT paragraph_text  FROM paragraphs  JOIN documents ON paragraphs.document_id = documents.document_id  WHERE documents.document_name = 'Customer reviews'
SELECT paragraph_text  FROM paragraphs  JOIN documents ON paragraphs.document_id = documents.document_id  WHERE documents.document_name = 'Customer reviews'
SELECT paragraph_text  FROM paragraphs  JOIN documents ON paragraphs.document_id = documents.document_id  WHERE documents.document_name = 'Customer reviews'
SELECT paragraph_text  FROM paragraphs  JOIN documents ON paragraphs.document_id = documents.document_id  WHERE documents.document_name = 'Customer reviews'
SELECT paragraph_text  FROM paragraphs  JOIN documents ON paragraphs.document_id = documents.document_id  WHERE documents.document_name = 'Customer reviews'
SELECT paragraph_text  FROM paragraphs  JOIN documents ON paragraphs.document_id = documents.document_id  WHERE documents.document_name = 'Customer reviews'
SELECT paragraph_text  FROM paragraphs  JOIN documents ON paragraphs.document_id = documents.document_id  WHERE documents.document_name = 'Customer reviews'",SELECT paragraph_text  FROM paragraphs  JOIN documents ON paragraphs.document_id = documents.document_id  WHERE documents.document_name = 'Customer reviews',True,1.0
208,322,What are the different template type codes?,cre_Doc_Template_Mgt,easy,SELECT DISTINCT template_type_code FROM Templates,7,"SELECT template_type_code, template_type_description FROM ref_template_types
SELECT template_type_code, template_type_description FROM ref_template_types
SELECT template_type_code, template_type_description FROM ref_template_types
SELECT template_type_code, template_type_description FROM ref_template_types
SELECT template_type_code, template_type_description FROM ref_template_types
SELECT template_type_code, template_type_description FROM ref_template_types
SELECT template_type_code, template_type_description FROM ref_template_types","SELECT template_type_code, template_type_description FROM ref_template_types",0,0.0
209,352,"Return the type code of the template type with the description ""Book"".",cre_Doc_Template_Mgt,easy,"SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  ""Book""",7,"SELECT template_type_code FROM templates JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE template_type_description = 'Book'
SELECT template_type_code FROM templates JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE template_type_description = 'Book'
SELECT template_type_code FROM templates JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE template_type_description = 'Book'
SELECT template_type_code FROM templates JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE template_type_description = 'Book'
SELECT template_type_code FROM templates JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE template_type_description = 'Book'
SELECT template_type_code FROM templates JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE template_type_description = 'Book'
SELECT template_type_code FROM templates JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE template_type_description = 'Book'",SELECT template_type_code FROM templates JOIN ref_template_types ON templates.template_type_code = ref_template_types.template_type_code WHERE template_type_description = 'Book',False,0.0
210,535,"Who is enrolled in a Bachelor degree program? List the first name, middle name, last name.",student_transcripts_tracking,hard,"SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'",7,"SELECT s.first_name, s.middle_name, s.last_name FROM students s JOIN student_enrolment sen ON s.student_id = sen.student_id JOIN degree_programs dp ON sen.degree_program_id = dp.degree_program_id WHERE dp.degree_summary_name = 'Bachelor'
SELECT s.first_name, s.middle_name, s.last_name FROM students s JOIN student_enrolment se ON s.student_id = se.student_id JOIN degree_programs dp ON se.degree_program_id = dp.degree_program_id WHERE dp.degree_summary_name = 'Bachelor'
SELECT s.first_name, s.middle_name, s.last_name FROM students s JOIN student_enrolment se ON s.student_id = se.student_id JOIN degree_programs dp ON se.degree_program_id = dp.degree_program_id WHERE dp.degree_summary_name = 'Bachelor'
SELECT s.first_name, s.middle_name, s.last_name FROM students s JOIN student_enrolment se ON s.student_id = se.student_id JOIN degree_programs dp ON se.degree_program_id = dp.degree_program_id WHERE dp.degree_summary_name = 'Bachelor'
SELECT s.first_name, s.middle_name, s.last_name FROM students s JOIN student_enrolment se ON s.student_id = se.student_id JOIN degree_programs dp ON se.degree_program_id = dp.degree_program_id WHERE dp.degree_summary_name = 'Bachelor'
SELECT s.first_name, s.middle_name, s.last_name FROM students s JOIN student_enrolment se ON s.student_id = se.student_id JOIN degree_programs dp ON se.degree_program_id = dp.degree_program_id WHERE dp.degree_summary_name = 'Bachelor'
SELECT s.first_name, s.middle_name, s.last_name FROM students s JOIN student_enrolment se ON s.student_id = se.student_id JOIN degree_programs dp ON se.degree_program_id = dp.degree_program_id WHERE dp.degree_summary_name = 'Bachelor'","SELECT s.first_name, s.middle_name, s.last_name FROM students s JOIN student_enrolment se ON s.student_id = se.student_id JOIN degree_programs dp ON se.degree_program_id = dp.degree_program_id WHERE dp.degree_summary_name = 'Bachelor'",0,1.0
211,258,Which airports do not have departing or arriving flights?,flight_2,hard,SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights),7,"SELECT airportcode FROM airports WHERE airportcode NOT IN (SELECT sourceairport FROM flights UNION SELECT destairport FROM flights)
SELECT airportcode FROM airports WHERE airportcode NOT IN (SELECT sourceairport FROM flights UNION SELECT destairport FROM flights)
SELECT airportcode FROM airports WHERE airportcode NOT IN (SELECT sourceairport FROM flights UNION SELECT destairport FROM flights)
SELECT airportcode FROM airports WHERE airportcode NOT IN (SELECT sourceairport FROM flights UNION SELECT destairport FROM flights)
SELECT airportcode FROM airports WHERE airportcode NOT IN (SELECT sourceairport FROM flights UNION SELECT destairport FROM flights)
SELECT airportcode FROM airports WHERE airportcode NOT IN (SELECT sourceairport FROM flights UNION SELECT destairport FROM flights)
SELECT airportcode FROM airports WHERE airportcode NOT IN (SELECT sourceairport FROM flights UNION SELECT destairport FROM flights)",SELECT airportcode FROM airports WHERE airportcode NOT IN (SELECT sourceairport FROM flights UNION SELECT destairport FROM flights),0,0.0
212,856,Show the record companies shared by orchestras founded before 2003 and after 2003.,orchestra,hard,SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003,7,"SELECT DISTINCT o1.record_company FROM orchestra o1 JOIN orchestra o2 ON o1.record_company = o2.record_company WHERE o1.year_of_founded < 2003 AND o2.year_of_founded > 2003
SELECT DISTINCT o1.record_company FROM orchestra o1 JOIN orchestra o2 ON o1.record_company = o2.record_company WHERE o1.year_of_founded < 2003 AND o2.year_of_founded > 2003
SELECT DISTINCT o1.record_company FROM orchestra o1 JOIN orchestra o2 ON o1.record_company = o2.record_company WHERE o1.year_of_founded < 2003 AND o2.year_of_founded > 2003
SELECT DISTINCT o1.record_company FROM orchestra o1 JOIN orchestra o2 ON o1.record_company = o2.record_company WHERE o1.year_of_founded < 2003 AND o2.year_of_founded > 2003
SELECT DISTINCT o1.record_company FROM orchestra o1 JOIN orchestra o2 ON o1.record_company = o2.record_company WHERE o1.year_of_founded < 2003 AND o2.year_of_founded > 2003
SELECT DISTINCT o1.record_company FROM orchestra o1 JOIN orchestra o2 ON o1.record_company = o2.record_company WHERE o1.year_of_founded < 2003 AND o2.year_of_founded > 2003
SELECT DISTINCT o1.record_company FROM orchestra o1 JOIN orchestra o2 ON o1.record_company = o2.record_company WHERE o1.year_of_founded < 2003 AND o2.year_of_founded > 2003",SELECT DISTINCT o1.record_company FROM orchestra o1 JOIN orchestra o2 ON o1.record_company = o2.record_company WHERE o1.year_of_founded < 2003 AND o2.year_of_founded > 2003,0,1.0
213,783,Return the codes of countries that do not speak English and do not have Republics for governments.,world_1,hard,"SELECT Code FROM country WHERE GovernmentForm != ""Republic"" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  ""English""",7,"SELECT code FROM country WHERE governmentform != 'Republic' AND continent != 'Europe' AND code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English')
SELECT code FROM country WHERE governmentform != 'Republic' AND continent != 'Europe' AND code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English')
SELECT code FROM country WHERE governmentform != 'Republic' AND continent != 'Europe' AND code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English')
SELECT code FROM country WHERE governmentform != 'Republic' AND continent != 'Europe' AND code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English')
SELECT code FROM country WHERE governmentform != 'Republic' AND continent != 'Europe' AND code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English')
SELECT code FROM country WHERE governmentform != 'Republic' AND language != 'English'
SELECT code FROM country WHERE governmentform != 'Republic' AND continent != 'Europe' AND code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English')",SELECT code FROM country WHERE governmentform != 'Republic' AND continent != 'Europe' AND code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English'),0,0.0
214,842,Show the names of conductors that have conducted more than one orchestras.,orchestra,medium,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1,7,"SELECT c.name FROM conductor c JOIN orchestra o ON c.conductor_id = o.conductor_id GROUP BY c.conductor_id HAVING COUNT(o.orchestra_id) > 1
SELECT c.name FROM conductor c JOIN orchestra o ON c.conductor_id = o.conductor_id GROUP BY c.conductor_id HAVING COUNT(o.orchestra_id) > 1
SELECT c.name FROM conductor c JOIN orchestra o ON c.conductor_id = o.conductor_id GROUP BY c.conductor_id HAVING COUNT(o.orchestra_id) > 1
SELECT c.name FROM conductor c JOIN orchestra o ON c.conductor_id = o.conductor_id GROUP BY c.conductor_id HAVING COUNT(o.orchestra_id) > 1
SELECT c.name FROM conductor c JOIN orchestra o ON c.conductor_id = o.conductor_id GROUP BY c.conductor_id HAVING COUNT(o.orchestra_id) > 1
SELECT c.name FROM conductor c JOIN orchestra o ON c.conductor_id = o.conductor_id GROUP BY c.conductor_id HAVING COUNT(o.orchestra_id) > 1
SELECT c.name FROM conductor c JOIN orchestra o ON c.conductor_id = o.conductor_id GROUP BY c.conductor_id HAVING COUNT(o.orchestra_id) > 1",SELECT c.name FROM conductor c JOIN orchestra o ON c.conductor_id = o.conductor_id GROUP BY c.conductor_id HAVING COUNT(o.orchestra_id) > 1,0,1.0
215,925,What are the names of the dogs for which the owner has not spend more than 1000 for treatment ?,dog_kennels,hard,select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 ),7,"SELECT d.name FROM dogs d JOIN owners o ON d.owner_id = o.owner_id JOIN treatments t ON d.dog_id = t.dog_id WHERE t.cost_of_treatment <= 1000
SELECT d.name  FROM dogs d  JOIN owners o ON d.owner_id = o.owner_id  JOIN treatments t ON d.dog_id = t.dog_id  WHERE t.cost_of_treatment <= 1000
SELECT d.name FROM dogs d JOIN owners o ON d.owner_id = o.owner_id JOIN treatments t ON d.dog_id = t.dog_id WHERE t.cost_of_treatment <= 1000
SELECT d.name FROM dogs d JOIN owners o ON d.owner_id = o.owner_id JOIN treatments t ON d.dog_id = t.dog_id WHERE t.cost_of_treatment <= 1000
SELECT d.name FROM dogs d JOIN owners o ON d.owner_id = o.owner_id JOIN treatments t ON d.dog_id = t.dog_id WHERE t.cost_of_treatment <= 1000
SELECT d.name FROM dogs d JOIN owners o ON d.owner_id = o.owner_id JOIN treatments t ON d.dog_id = t.dog_id WHERE t.cost_of_treatment <= 1000
SELECT d.name FROM dogs d JOIN owners o ON d.owner_id = o.owner_id JOIN treatments t ON d.dog_id = t.dog_id WHERE t.cost_of_treatment <= 1000",SELECT d.name FROM dogs d JOIN owners o ON d.owner_id = o.owner_id JOIN treatments t ON d.dog_id = t.dog_id WHERE t.cost_of_treatment <= 1000,0,0.0
216,583,Find the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582 .,student_transcripts_tracking,hard,select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582',7,"SELECT first_name FROM students WHERE country = 'Haiti' OR cell_mobile_number = '09700166582'
SELECT first_name FROM students WHERE country = 'Haiti' OR cell_mobile_number = '09700166582'
SELECT first_name FROM students WHERE country = 'Haiti' OR cell_mobile_number = '09700166582'
SELECT first_name FROM students WHERE country = 'Haiti' OR cell_mobile_number = '09700166582'
SELECT first_name FROM students WHERE country = 'Haiti' OR cell_mobile_number = '09700166582'
SELECT first_name FROM students WHERE country = 'Haiti' OR cell_mobile_number = '09700166582'
SELECT first_name FROM students WHERE country = 'Haiti' OR cell_mobile_number = '09700166582'",SELECT first_name FROM students WHERE country = 'Haiti' OR cell_mobile_number = '09700166582',0,0.0
217,166,"For all of the 4 cylinder cars, which model has the most horsepower?",car_1,extra,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;,7,"SELECT model_list.model FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid WHERE cars_data.cylinders = 4 ORDER BY cars_data.horsepower DESC LIMIT 1
SELECT model_list.model FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid WHERE cars_data.cylinders = 4 ORDER BY cars_data.horsepower DESC LIMIT 1
SELECT model_list.model FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid WHERE cars_data.cylinders = 4 ORDER BY cars_data.horsepower DESC LIMIT 1
SELECT model_list.model FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid WHERE cars_data.cylinders = 4 ORDER BY cars_data.horsepower DESC LIMIT 1
SELECT model_list.model, cars_data.horsepower FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid WHERE cars_data.cylinders = 4 ORDER BY cars_data.horsepower DESC LIMIT 1
SELECT model_list.model, cars_data.horsepower FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid WHERE cars_data.cylinders = 4 ORDER BY cars_data.horsepower DESC LIMIT 1
SELECT model_list.model FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid WHERE cars_data.cylinders = 4 ORDER BY cars_data.horsepower DESC LIMIT 1",SELECT model_list.model FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid WHERE cars_data.cylinders = 4 ORDER BY cars_data.horsepower DESC LIMIT 1,False,0.0
218,528,What are the names of the sections in reverse alphabetical order?,student_transcripts_tracking,easy,SELECT section_name FROM Sections ORDER BY section_name DESC,7,"SELECT section_name FROM sections ORDER BY section_name DESC
SELECT section_name FROM sections ORDER BY section_name DESC
SELECT section_name FROM sections ORDER BY section_name DESC
SELECT section_name FROM sections ORDER BY section_name DESC
SELECT section_name FROM sections ORDER BY section_name DESC
SELECT section_name FROM sections ORDER BY section_name DESC
SELECT section_name FROM sections ORDER BY section_name DESC",SELECT section_name FROM sections ORDER BY section_name DESC,True,1.0
219,185,List the airport code and name in the city of Anthony.,flight_2,medium,"SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  ""Anthony""",7,"SELECT airportcode, airportname FROM airports WHERE city = 'Anthony'
SELECT airportcode, airportname FROM airports WHERE city = 'Anthony'
SELECT airportcode, airportname FROM airports WHERE city = 'Anthony'
SELECT airportcode, airportname FROM airports WHERE city = 'Anthony'
SELECT airportcode, airportname FROM airports WHERE city = 'Anthony'
SELECT airportcode, airportname FROM airports WHERE city = 'Anthony'
SELECT airportcode, airportname FROM airports WHERE city = 'Anthony'","SELECT airportcode, airportname FROM airports WHERE city = 'Anthony'",True,1.0
220,860,Show the years in which orchestras that have given more than one performance are founded.,orchestra,medium,SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1,7,"SELECT DISTINCT o.year_of_founded FROM orchestra o JOIN performance p ON o.orchestra_id = p.orchestra_id GROUP BY o.orchestra_id HAVING COUNT(p.performance_id) > 1
SELECT DISTINCT o.year_of_founded FROM orchestra o JOIN performance p ON o.orchestra_id = p.orchestra_id GROUP BY o.orchestra_id HAVING COUNT(p.performance_id) > 1
SELECT DISTINCT o.year_of_founded FROM orchestra o JOIN performance p ON o.orchestra_id = p.orchestra_id GROUP BY o.orchestra_id HAVING COUNT(p.performance_id) > 1
SELECT DISTINCT o.year_of_founded FROM orchestra o JOIN performance p ON o.orchestra_id = p.orchestra_id GROUP BY o.orchestra_id HAVING COUNT(p.performance_id) > 1
SELECT DISTINCT o.year_of_founded FROM orchestra o JOIN performance p ON o.orchestra_id = p.orchestra_id GROUP BY o.orchestra_id HAVING COUNT(p.performance_id) > 1
SELECT DISTINCT o.year_of_founded FROM orchestra o JOIN performance p ON o.orchestra_id = p.orchestra_id GROUP BY o.orchestra_id HAVING COUNT(p.performance_id) > 1
SELECT DISTINCT o.year_of_founded FROM orchestra o JOIN performance p ON o.orchestra_id = p.orchestra_id GROUP BY o.orchestra_id HAVING COUNT(p.performance_id) > 1",SELECT DISTINCT o.year_of_founded FROM orchestra o JOIN performance p ON o.orchestra_id = p.orchestra_id GROUP BY o.orchestra_id HAVING COUNT(p.performance_id) > 1,0,1.0
221,131,What is the maximum horsepower and the make of the car models with 3 cylinders?,car_1,extra,"SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;",7,"SELECT MAX(cars_data.horsepower) AS max_horsepower, car_names.make FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid JOIN model_list ON car_names.model = model_list.model JOIN car_makers ON model_list.maker = car_makers.maker WHERE cars_data.cylinders = 3 GROUP BY car_names.make
SELECT MAX(cars_data.horsepower) AS max_horsepower, car_names.make FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid JOIN model_list ON car_names.model = model_list.model JOIN car_makers ON model_list.maker = car_makers.maker WHERE cars_data.cylinders = 3 GROUP BY car_names.make
SELECT MAX(cars_data.horsepower) AS max_horsepower, car_names.make FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid JOIN model_list ON car_names.model = model_list.model JOIN car_makers ON model_list.maker = car_makers.maker WHERE cars_data.cylinders = 3 GROUP BY car_names.make
SELECT MAX(cars_data.horsepower) AS max_horsepower, car_names.make FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid JOIN model_list ON car_names.model = model_list.model JOIN car_makers ON model_list.maker = car_makers.maker WHERE cars_data.cylinders = 3 GROUP BY car_names.make
SELECT MAX(cars_data.horsepower) AS max_horsepower, car_names.make FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid JOIN model_list ON car_names.model = model_list.model JOIN car_makers ON model_list.maker = car_makers.maker WHERE cars_data.cylinders = 3 GROUP BY car_names.make
SELECT MAX(cars_data.horsepower) AS max_horsepower, car_names.make FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid JOIN model_list ON car_names.model = model_list.model JOIN car_makers ON model_list.maker = car_makers.maker WHERE cars_data.cylinders = 3 GROUP BY car_names.make
SELECT MAX(cars_data.horsepower) AS max_horsepower, car_names.make FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid JOIN model_list ON car_names.model = model_list.model JOIN car_makers ON model_list.maker = car_makers.maker WHERE cars_data.cylinders = 3 GROUP BY car_names.make","SELECT MAX(cars_data.horsepower) AS max_horsepower, car_names.make FROM cars_data JOIN car_names ON cars_data.id = car_names.makeid JOIN model_list ON car_names.model = model_list.model JOIN car_makers ON model_list.maker = car_makers.maker WHERE cars_data.cylinders = 3 GROUP BY car_names.make",0,0.0
222,141,Which model has the most version(make) of cars?,car_1,hard,SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;,7,"SELECT maker, COUNT(model) AS version_count FROM model_list GROUP BY maker ORDER BY version_count DESC LIMIT 1
SELECT maker, COUNT(model) AS version_count FROM model_list GROUP BY maker ORDER BY version_count DESC LIMIT 1
SELECT maker, COUNT(model) AS version_count FROM model_list GROUP BY maker ORDER BY version_count DESC LIMIT 1
SELECT maker, COUNT(model) AS version_count FROM model_list GROUP BY maker ORDER BY version_count DESC LIMIT 1
SELECT maker, COUNT(model) AS version_count FROM model_list GROUP BY maker ORDER BY version_count DESC LIMIT 1
SELECT maker, COUNT(model) AS version_count FROM model_list GROUP BY maker ORDER BY version_count DESC LIMIT 1
SELECT maker, COUNT(model) AS version_count FROM model_list GROUP BY maker ORDER BY version_count DESC LIMIT 1","SELECT maker, COUNT(model) AS version_count FROM model_list GROUP BY maker ORDER BY version_count DESC LIMIT 1",0,0.0
223,664,"What are the names of poker players, ordered ascending by the number of final tables they have made?",poker_player,medium,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made,7,"SELECT people.name FROM people JOIN poker_player ON people.people_id = poker_player.people_id ORDER BY poker_player.final_table_made ASC
SELECT people.name FROM people JOIN poker_player ON people.people_id = poker_player.people_id ORDER BY poker_player.final_table_made ASC
SELECT people.name FROM people JOIN poker_player ON people.people_id = poker_player.people_id ORDER BY poker_player.final_table_made ASC
SELECT people.name FROM people JOIN poker_player ON people.people_id = poker_player.people_id ORDER BY poker_player.final_table_made ASC
SELECT people.name FROM people JOIN poker_player ON people.people_id = poker_player.people_id ORDER BY poker_player.final_table_made ASC
SELECT people.name FROM people JOIN poker_player ON people.people_id = poker_player.people_id ORDER BY poker_player.final_table_made ASC
SELECT people.name FROM people JOIN poker_player ON people.people_id = poker_player.people_id ORDER BY poker_player.final_table_made ASC",SELECT people.name FROM people JOIN poker_player ON people.people_id = poker_player.people_id ORDER BY poker_player.final_table_made ASC,True,1.0
224,725,Give the average life expectancy for countries in Africa which are republics?,world_1,medium,"SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  ""Africa"" AND GovernmentForm  =  ""Republic""",7,"SELECT AVG(lifeexpectancy) FROM country WHERE continent = 'Africa' AND governmentform = 'Republic'
SELECT AVG(lifeexpectancy) FROM country WHERE continent = 'Africa' AND governmentform = 'Republic'
SELECT AVG(lifeexpectancy) FROM country WHERE continent = 'Africa' AND governmentform = 'Republic'
SELECT AVG(lifeexpectancy) FROM country WHERE continent = 'Africa' AND governmentform = 'Republic'
SELECT AVG(lifeexpectancy) FROM country WHERE continent = 'Africa' AND governmentform = 'Republic'
SELECT AVG(lifeexpectancy) FROM country WHERE continent = 'Africa' AND governmentform = 'Republic'
SELECT AVG(lifeexpectancy) FROM country WHERE continent = 'Africa' AND governmentform = 'Republic'",SELECT AVG(lifeexpectancy) FROM country WHERE continent = 'Africa' AND governmentform = 'Republic',True,1.0
225,955,Which dogs are of the rarest breed? Show their names and treatment dates.,dog_kennels,extra,"SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )",7,"SELECT d.name, t.date_of_treatment FROM dogs d JOIN treatments t ON d.dog_id = t.dog_id WHERE d.breed_code IN (SELECT breed_code FROM dogs GROUP BY breed_code HAVING COUNT(*) = 1)
SELECT d.name, t.date_of_treatment FROM dogs d JOIN treatments t ON d.dog_id = t.dog_id WHERE d.breed_code IN (SELECT breed_code FROM dogs GROUP BY breed_code HAVING COUNT(*) = 1)
SELECT d.name, t.date_of_treatment FROM dogs d JOIN treatments t ON d.dog_id = t.dog_id WHERE d.breed_code IN (SELECT breed_code FROM dogs GROUP BY breed_code HAVING COUNT(*) = 1)
SELECT d.name, t.date_of_treatment FROM dogs d JOIN treatments t ON d.dog_id = t.dog_id WHERE d.breed_code IN (SELECT breed_code FROM dogs GROUP BY breed_code HAVING COUNT(*) = 1)
SELECT d.name, t.date_of_treatment FROM dogs d JOIN treatments t ON d.dog_id = t.dog_id WHERE d.breed_code IN (SELECT breed_code FROM dogs GROUP BY breed_code HAVING COUNT(*) = 1)
SELECT d.name, t.date_of_treatment FROM dogs d JOIN treatments t ON d.dog_id = t.dog_id WHERE d.breed_code IN (SELECT breed_code FROM dogs GROUP BY breed_code HAVING COUNT(*) = 1)
SELECT d.name, t.date_of_treatment FROM dogs d JOIN treatments t ON d.dog_id = t.dog_id WHERE d.breed_code IN (SELECT breed_code FROM dogs GROUP BY breed_code HAVING COUNT(*) = 1)","SELECT d.name, t.date_of_treatment FROM dogs d JOIN treatments t ON d.dog_id = t.dog_id WHERE d.breed_code IN (SELECT breed_code FROM dogs GROUP BY breed_code HAVING COUNT(*) = 1)",0,0.0
226,134,What is the car model with the highest mpg ?,car_1,hard,select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;,7,"SELECT model_list.model FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid WHERE cars_data.mpg = (SELECT MAX(mpg) FROM cars_data)
SELECT model_list.model FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid WHERE cars_data.mpg = (SELECT MAX(mpg) FROM cars_data)
SELECT model_list.model FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid WHERE cars_data.mpg = (SELECT MAX(mpg) FROM cars_data)
SELECT model_list.model FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid WHERE cars_data.mpg = (SELECT MAX(mpg) FROM cars_data)
SELECT model_list.model FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid WHERE cars_data.mpg = (SELECT MAX(mpg) FROM cars_data)
SELECT model_list.model FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid WHERE cars_data.mpg = (SELECT MAX(mpg) FROM cars_data)
SELECT model_list.model FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid WHERE cars_data.mpg = (SELECT MAX(mpg) FROM cars_data)",SELECT model_list.model FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid WHERE cars_data.mpg = (SELECT MAX(mpg) FROM cars_data),0,0.0
227,74,What is the average weight for each type of pet?,pets_1,medium,"SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype",7,"SELECT pettype, AVG(weight) AS average_weight FROM pets GROUP BY pettype
SELECT pettype, AVG(weight) AS average_weight FROM pets GROUP BY pettype
SELECT pettype, AVG(weight) AS average_weight FROM pets GROUP BY pettype
SELECT pettype, AVG(weight) AS average_weight FROM pets GROUP BY pettype
SELECT pettype, AVG(weight) AS average_weight FROM pets GROUP BY pettype
SELECT pettype, AVG(weight) AS average_weight FROM pets GROUP BY pettype
SELECT pettype, AVG(weight) AS average_weight FROM pets GROUP BY pettype","SELECT pettype, AVG(weight) AS average_weight FROM pets GROUP BY pettype",0,0.0
228,373,What is the document id and name with greatest number of paragraphs?,cre_Doc_Template_Mgt,extra,"SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT document_id, document_name FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY document_id ORDER BY COUNT(paragraph_id) DESC LIMIT 1
SELECT document_id, document_name FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY document_id ORDER BY COUNT(paragraph_id) DESC LIMIT 1
SELECT document_id, document_name FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY document_id ORDER BY COUNT(paragraph_id) DESC LIMIT 1
SELECT document_id, document_name FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY document_id ORDER BY COUNT(paragraph_id) DESC LIMIT 1
SELECT document_id, document_name FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY document_id ORDER BY COUNT(paragraph_id) DESC LIMIT 1
SELECT document_id, document_name FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY document_id ORDER BY COUNT(paragraph_id) DESC LIMIT 1
SELECT document_id, document_name FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY documents.document_id ORDER BY COUNT(paragraph_id) DESC LIMIT 1","SELECT document_id, document_name FROM documents JOIN paragraphs ON documents.document_id = paragraphs.document_id GROUP BY document_id ORDER BY COUNT(paragraph_id) DESC LIMIT 1",0,0.0
229,880,Show me all grades that have at least 4 students.,network_1,easy,SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4,7,"SELECT grade FROM highschooler GROUP BY grade HAVING COUNT(id) >= 4
SELECT grade FROM highschooler GROUP BY grade HAVING COUNT(id) >= 4
SELECT grade FROM highschooler GROUP BY grade HAVING COUNT(id) >= 4
SELECT grade FROM highschooler GROUP BY grade HAVING COUNT(id) >= 4
SELECT grade FROM highschooler GROUP BY grade HAVING COUNT(id) >= 4
SELECT grade FROM highschooler GROUP BY grade HAVING COUNT(id) >= 4
SELECT grade FROM highschooler GROUP BY grade HAVING COUNT(id) >= 4",SELECT grade FROM highschooler GROUP BY grade HAVING COUNT(id) >= 4,0,1.0
230,447,List the names of all winners who played in both 2013 and 2016.,wta_1,hard,SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016,7,"SELECT DISTINCT winner_name FROM matches WHERE year IN (2013, 2016) AND winner_id IN (     SELECT player_id     FROM players ) AND winner_id IN (     SELECT winner_id     FROM matches     WHERE year = 2013 ) AND winner_id IN (     SELECT winner_id     FROM matches     WHERE year = 2016 )
SELECT DISTINCT winner_name FROM matches WHERE year IN (2013, 2016) AND winner_id IN (     SELECT player_id     FROM players ) AND winner_id IN (     SELECT winner_id     FROM matches     WHERE year = 2013 ) AND winner_id IN (     SELECT winner_id     FROM matches     WHERE year = 2016 )
SELECT DISTINCT winner_name FROM matches WHERE year IN (2013, 2016) AND winner_id IN (     SELECT player_id     FROM players ) AND winner_id IN (     SELECT winner_id     FROM matches     WHERE year = 2013 ) AND winner_id IN (     SELECT winner_id     FROM matches     WHERE year = 2016 )
SELECT DISTINCT winner_name FROM matches WHERE year IN (2013, 2016) AND winner_id IN (     SELECT player_id     FROM players ) AND winner_id IN (     SELECT winner_id     FROM matches     WHERE year = 2013 ) AND winner_id IN (     SELECT winner_id     FROM matches     WHERE year = 2016 )
SELECT DISTINCT winner_name FROM matches WHERE year IN (2013, 2016) AND winner_id IN (     SELECT player_id     FROM players ) AND winner_id IN (     SELECT winner_id     FROM matches     WHERE year = 2013 ) AND winner_id IN (     SELECT winner_id     FROM matches     WHERE year = 2016 )
SELECT DISTINCT winner_name FROM matches WHERE year IN (2013, 2016) AND winner_id IN (     SELECT player_id     FROM players ) AND winner_id IN (     SELECT winner_id     FROM matches     WHERE year = 2013 ) AND winner_id IN (     SELECT winner_id     FROM matches     WHERE year = 2016 )
SELECT DISTINCT winner_name FROM matches WHERE year IN (2013, 2016) AND winner_id IN (     SELECT player_id     FROM players ) AND winner_id IN (     SELECT winner_id     FROM matches     WHERE year = 2013 ) AND winner_id IN (     SELECT winner_id     FROM matches     WHERE year = 2016 )","SELECT DISTINCT winner_name FROM matches WHERE year IN (2013, 2016) AND winner_id IN (     SELECT player_id     FROM players ) AND winner_id IN (     SELECT winner_id     FROM matches     WHERE year = 2013 ) AND winner_id IN (     SELECT winner_id     FROM matches     WHERE year = 2016 )",0,1.0
231,13,What are all the song names by singers who are older than average?,concert_singer,hard,SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer),7,"SELECT song_name FROM singer WHERE age > (SELECT AVG(age) FROM singer)
SELECT s.song_name  FROM singer s  WHERE s.age > (SELECT AVG(age) FROM singer)  ORDER BY s.song_name
SELECT song_name FROM singer WHERE age > (SELECT AVG(age) FROM singer)
SELECT s.song_name  FROM singer s  WHERE s.age > (SELECT AVG(age) FROM singer)  ORDER BY s.song_name
SELECT song_name FROM singer WHERE age > (SELECT AVG(age) FROM singer)
SELECT song_name FROM singer WHERE age > (SELECT AVG(age) FROM singer)
SELECT song_name FROM singer WHERE age > (SELECT AVG(age) FROM singer)",SELECT song_name FROM singer WHERE age > (SELECT AVG(age) FROM singer),True,1.0
232,896,Show names of all high school students who do not have any friends.,network_1,hard,SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id,7,"SELECT hs.name FROM highschooler hs LEFT JOIN friend f ON hs.id = f.student_id LEFT JOIN likes l ON hs.id = l.student_id WHERE f.friend_id IS NULL AND l.liked_id IS NULL
SELECT hs.name FROM highschooler hs LEFT JOIN friend f ON hs.id = f.student_id LEFT JOIN likes l ON hs.id = l.student_id WHERE f.friend_id IS NULL AND l.liked_id IS NULL
SELECT hs.name FROM highschooler hs LEFT JOIN friend f ON hs.id = f.student_id LEFT JOIN likes l ON hs.id = l.student_id WHERE f.friend_id IS NULL AND l.liked_id IS NULL
SELECT hs.name FROM highschooler hs LEFT JOIN friend f ON hs.id = f.student_id LEFT JOIN likes l ON hs.id = l.student_id WHERE f.friend_id IS NULL AND l.liked_id IS NULL
SELECT hs.name FROM highschooler hs LEFT JOIN friend f ON hs.id = f.student_id LEFT JOIN likes l ON hs.id = l.student_id WHERE f.friend_id IS NULL AND l.liked_id IS NULL
SELECT hs.name FROM highschooler hs LEFT JOIN friend f ON hs.id = f.student_id LEFT JOIN likes l ON hs.id = l.student_id WHERE f.friend_id IS NULL AND l.liked_id IS NULL
SELECT hs.name FROM highschooler hs LEFT JOIN friend f ON hs.id = f.student_id LEFT JOIN likes l ON hs.id = l.student_id WHERE f.friend_id IS NULL AND l.liked_id IS NULL",SELECT hs.name FROM highschooler hs LEFT JOIN friend f ON hs.id = f.student_id LEFT JOIN likes l ON hs.id = l.student_id WHERE f.friend_id IS NULL AND l.liked_id IS NULL,0,0.0
233,274,"Sort all the shops by number products in descending order, and return the name, location and district of each shop.",employee_hire_evaluation,medium,"SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC",7,"SELECT name, location, district FROM shop ORDER BY number_products DESC
SELECT name, location, district FROM shop ORDER BY number_products DESC
SELECT name, location, district FROM shop ORDER BY number_products DESC
SELECT name, location, district FROM shop ORDER BY number_products DESC
SELECT name, location, district FROM shop ORDER BY number_products DESC
SELECT name, location, district FROM shop ORDER BY number_products DESC
SELECT name, location, district FROM shop ORDER BY number_products DESC","SELECT name, location, district FROM shop ORDER BY number_products DESC",True,1.0
234,190,Return the number of  airports.,flight_2,easy,SELECT count(*) FROM AIRPORTS,7,"SELECT COUNT(*) FROM airlines
SELECT COUNT(*) FROM airlines
SELECT COUNT(*) FROM airlines
SELECT COUNT(*) FROM airlines
SELECT COUNT(*) FROM airlines
SELECT COUNT(*) FROM airlines
SELECT COUNT(*) FROM airlines",SELECT COUNT(*) FROM airlines,False,0.0
235,50,List the maximum weight and type for each type of pet.,pets_1,medium,"SELECT max(weight) ,  petType FROM pets GROUP BY petType",7,"SELECT pettype, MAX(weight) AS max_weight FROM pets GROUP BY pettype
SELECT pettype, MAX(weight) AS max_weight FROM pets GROUP BY pettype
SELECT pettype, MAX(weight) AS max_weight FROM pets GROUP BY pettype
SELECT pettype, MAX(weight) AS max_weight FROM pets GROUP BY pettype
SELECT pettype, MAX(weight) AS max_weight FROM pets GROUP BY pettype
SELECT pettype, MAX(weight) AS max_weight FROM pets GROUP BY pettype
SELECT pettype, MAX(weight) AS max_weight FROM pets GROUP BY pettype","SELECT pettype, MAX(weight) AS max_weight FROM pets GROUP BY pettype",0,0.0
236,340,What are the names of documents that use templates with the code BK?,cre_Doc_Template_Mgt,medium,"SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  ""BK""",7,"SELECT document_name  FROM documents  JOIN templates ON documents.template_id = templates.template_id  WHERE templates.template_type_code = 'BK'
SELECT document_name  FROM documents  JOIN templates ON documents.template_id = templates.template_id  WHERE templates.template_type_code = 'BK'
SELECT document_name  FROM documents  JOIN templates ON documents.template_id = templates.template_id  WHERE templates.template_type_code = 'BK'
SELECT document_name FROM documents  JOIN templates ON documents.template_id = templates.template_id  WHERE templates.template_type_code = 'BK'
SELECT document_name  FROM documents  WHERE template_id IN (     SELECT template_id      FROM templates      WHERE template_type_code = 'BK' )
SELECT document_name FROM documents WHERE template_id IN (SELECT template_id FROM templates WHERE template_type_code = 'BK')
SELECT document_name  FROM documents  WHERE template_id IN (     SELECT template_id      FROM templates      WHERE template_type_code = 'BK' )",SELECT document_name  FROM documents  JOIN templates ON documents.template_id = templates.template_id  WHERE templates.template_type_code = 'BK',True,1.0
237,1005,What are the birth years and citizenships of the singers?,singer,medium,"SELECT Birth_Year ,  Citizenship FROM singer",7,"SELECT birth_year, citizenship FROM singer
SELECT birth_year, citizenship FROM singer
SELECT birth_year, citizenship FROM singer
SELECT birth_year, citizenship FROM singer
SELECT birth_year, citizenship FROM singer
SELECT birth_year, citizenship FROM singer
SELECT birth_year, citizenship FROM singer","SELECT birth_year, citizenship FROM singer",True,1.0
238,221,Which city has most number of arriving flights?,flight_2,extra,SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1,7,"SELECT city, COUNT(*) AS num_arriving_flights FROM flights JOIN airports ON flights.destairport = airports.airportcode GROUP BY city ORDER BY num_arriving_flights DESC LIMIT 1
SELECT city, COUNT(*) AS num_arriving_flights FROM flights JOIN airports ON flights.destairport = airports.airportcode GROUP BY city ORDER BY num_arriving_flights DESC LIMIT 1
SELECT city, COUNT(*) AS num_arriving_flights FROM flights JOIN airports ON flights.destairport = airports.airportcode GROUP BY city ORDER BY num_arriving_flights DESC LIMIT 1
SELECT city, COUNT(*) AS num_arriving_flights FROM flights JOIN airports ON flights.destairport = airports.airportcode GROUP BY city ORDER BY num_arriving_flights DESC LIMIT 1
SELECT city, COUNT(*) AS num_arriving_flights FROM flights JOIN airports ON flights.destairport = airports.airportcode GROUP BY city ORDER BY num_arriving_flights DESC LIMIT 1
SELECT city, COUNT(*) AS num_arriving_flights FROM flights JOIN airports ON flights.destairport = airports.airportcode GROUP BY city ORDER BY num_arriving_flights DESC LIMIT 1
SELECT city, COUNT(*) AS num_arriving_flights FROM flights JOIN airports ON flights.destairport = airports.airportcode GROUP BY city ORDER BY num_arriving_flights DESC LIMIT 1","SELECT city, COUNT(*) AS num_arriving_flights FROM flights JOIN airports ON flights.destairport = airports.airportcode GROUP BY city ORDER BY num_arriving_flights DESC LIMIT 1",0,1.0
239,867,What is the grade of each high schooler?,network_1,easy,SELECT grade FROM Highschooler,7,"SELECT h.name, h.grade FROM highschooler h
SELECT h.name, h.grade FROM highschooler h
SELECT h.name, h.grade FROM highschooler h
SELECT h.name, h.grade FROM highschooler h
SELECT h.name, h.grade FROM highschooler h
SELECT h.name, h.grade FROM highschooler h
SELECT h.name, h.grade FROM highschooler h","SELECT h.name, h.grade FROM highschooler h",0,0.0
240,423,Find the name and age of the visitor who bought the most tickets at once.,museum_visit,hard,"SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1",7,"SELECT v.name, v.age FROM visitor v JOIN visit vi ON v.id = vi.visitor_id WHERE vi.num_of_ticket = (     SELECT MAX(num_of_ticket)     FROM visit ) 
SELECT v.name, v.age FROM visitor v JOIN visit vi ON v.id = vi.visitor_id WHERE vi.num_of_ticket = (     SELECT MAX(num_of_ticket)     FROM visit ) 
SELECT v.name, v.age FROM visitor v JOIN visit vi ON v.id = vi.visitor_id WHERE vi.num_of_ticket = (     SELECT MAX(num_of_ticket)     FROM visit ) 
SELECT v.name, v.age FROM visitor v JOIN visit vi ON v.id = vi.visitor_id WHERE vi.num_of_ticket = (     SELECT MAX(num_of_ticket)     FROM visit ) 
SELECT v.name, v.age FROM visitor v JOIN visit vi ON v.id = vi.visitor_id WHERE vi.num_of_ticket = (     SELECT MAX(num_of_ticket)     FROM visit ) 
SELECT v.name, v.age FROM visitor v JOIN visit vi ON v.id = vi.visitor_id WHERE vi.num_of_ticket = (     SELECT MAX(num_of_ticket)     FROM visit ) 
SELECT v.name, v.age FROM visitor v JOIN visit vi ON v.id = vi.visitor_id WHERE vi.num_of_ticket = (     SELECT MAX(num_of_ticket)     FROM visit ) ","SELECT v.name, v.age FROM visitor v JOIN visit vi ON v.id = vi.visitor_id WHERE vi.num_of_ticket = (     SELECT MAX(num_of_ticket)     FROM visit ) ",0,1.0
241,409,List the names of teachers who have not been arranged to teach courses.,course_teach,hard,SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange),7,"SELECT teacher.name FROM teacher LEFT JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id WHERE course_arrange.course_id IS NULL
SELECT teacher.name FROM teacher LEFT JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id WHERE course_arrange.course_id IS NULL
SELECT teacher.name FROM teacher LEFT JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id WHERE course_arrange.course_id IS NULL
SELECT teacher.name FROM teacher LEFT JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id WHERE course_arrange.course_id IS NULL
SELECT teacher.name FROM teacher LEFT JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id WHERE course_arrange.course_id IS NULL
SELECT teacher.name FROM teacher LEFT JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id WHERE course_arrange.course_id IS NULL
SELECT teacher.name FROM teacher LEFT JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id WHERE course_arrange.course_id IS NULL",SELECT teacher.name FROM teacher LEFT JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id WHERE course_arrange.course_id IS NULL,0,1.0
242,214,Give the number of Jetblue Airways flights.,flight_2,medium,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = ""JetBlue Airways""",7,"SELECT COUNT(*) FROM flights WHERE airline = 'Jetblue Airways'
SELECT COUNT(*) FROM flights WHERE airline = 'Jetblue Airways'
SELECT COUNT(*) FROM flights WHERE airline = 'Jetblue Airways'
SELECT COUNT(*) FROM flights WHERE airline = 'Jetblue Airways'
SELECT COUNT(*) FROM flights WHERE airline = 'Jetblue Airways'
SELECT COUNT(*) FROM flights WHERE airline = 'Jetblue Airways'
SELECT COUNT(*) FROM flights WHERE airline = 'Jetblue Airways'",SELECT COUNT(*) FROM flights WHERE airline = 'Jetblue Airways',0,0.0
243,625,"List the Episode of all  TV series showed on TV Channel with series name ""Sky Radio"".",tvshow,medium,"SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = ""Sky Radio"";",7,"SELECT tv_series.episode FROM tv_series JOIN tv_channel ON tv_series.channel = tv_channel.id WHERE tv_channel.series_name = 'Sky Radio'
SELECT tv_series.episode FROM tv_series JOIN tv_channel ON tv_series.channel = tv_channel.id WHERE tv_channel.series_name = 'Sky Radio'
SELECT tv_series.episode FROM tv_series JOIN tv_channel ON tv_series.channel = tv_channel.id WHERE tv_channel.series_name = 'Sky Radio'
SELECT tv_series.episode FROM tv_series JOIN tv_channel ON tv_series.channel = tv_channel.id WHERE tv_channel.series_name = 'Sky Radio'
SELECT tv_series.episode FROM tv_series JOIN tv_channel ON tv_series.channel = tv_channel.id WHERE tv_channel.series_name = 'Sky Radio'
SELECT tv_series.episode FROM tv_series JOIN tv_channel ON tv_series.channel = tv_channel.id WHERE tv_channel.series_name = 'Sky Radio'
SELECT tv_series.episode FROM tv_series JOIN tv_channel ON tv_series.channel = tv_channel.id WHERE tv_channel.series_name = 'Sky Radio'",SELECT tv_series.episode FROM tv_series JOIN tv_channel ON tv_series.channel = tv_channel.id WHERE tv_channel.series_name = 'Sky Radio',True,1.0
244,160,What is the number of cars with a greater accelerate than the one with the most horsepower?,car_1,hard,SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );,7,"SELECT COUNT(*)  FROM cars_data  WHERE accelerate > (SELECT accelerate FROM cars_data ORDER BY horsepower DESC LIMIT 1)
SELECT COUNT(*)  FROM cars_data  WHERE accelerate > (SELECT accelerate FROM cars_data ORDER BY horsepower DESC LIMIT 1)
SELECT COUNT(*)  FROM cars_data  WHERE accelerate > (SELECT accelerate FROM cars_data ORDER BY horsepower DESC LIMIT 1)
SELECT COUNT(*)  FROM cars_data  WHERE accelerate > (SELECT accelerate FROM cars_data ORDER BY horsepower DESC LIMIT 1)
SELECT COUNT(*)  FROM cars_data  WHERE accelerate > (SELECT accelerate FROM cars_data ORDER BY horsepower DESC LIMIT 1)
SELECT COUNT(*)  FROM cars_data  WHERE accelerate > (SELECT accelerate FROM cars_data ORDER BY horsepower DESC LIMIT 1)
SELECT COUNT(*)  FROM cars_data  WHERE accelerate > (SELECT accelerate FROM cars_data ORDER BY horsepower DESC LIMIT 1)",SELECT COUNT(*)  FROM cars_data  WHERE accelerate > (SELECT accelerate FROM cars_data ORDER BY horsepower DESC LIMIT 1),True,1.0
245,333,Show all template type codes with less than three templates.,cre_Doc_Template_Mgt,easy,SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3,7,"SELECT template_type_code FROM templates GROUP BY template_type_code HAVING COUNT(template_type_code) < 3
SELECT template_type_code FROM templates GROUP BY template_type_code HAVING COUNT(template_type_code) < 3
SELECT template_type_code FROM templates GROUP BY template_type_code HAVING COUNT(template_type_code) < 3
SELECT template_type_code FROM templates GROUP BY template_type_code HAVING COUNT(template_type_code) < 3
SELECT template_type_code FROM templates GROUP BY template_type_code HAVING COUNT(template_type_code) < 3
SELECT template_type_code FROM templates GROUP BY template_type_code HAVING COUNT(template_type_code) < 3
SELECT template_type_code FROM templates GROUP BY template_type_code HAVING COUNT(template_type_code) < 3",SELECT template_type_code FROM templates GROUP BY template_type_code HAVING COUNT(template_type_code) < 3,0,1.0
246,178,What are the ids and names of all countries that either have more than 3 car makers or produce fiat model ?,car_1,extra,"select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';",7,"SELECT countries.countryid, countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE countries.continent IN (SELECT continent FROM continents WHERE continent = 'Europe' OR continent = 'Asia') OR car_makers.maker = 'Fiat'
SELECT countries.countryid, countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE car_makers.maker = 'fiat' OR (SELECT COUNT(*) FROM car_makers WHERE car_makers.country = countries.countryid) > 3
SELECT countries.countryid, countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE countries.continent IN (     SELECT continentid     FROM continents     WHERE continent = 'Europe' ) OR car_makers.maker = 'Fiat' GROUP BY countries.countryid, countries.countryname HAVING COUNT(DISTINCT car_makers.id) > 3
SELECT countries.countryid, countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE car_makers.maker = 'fiat' OR (SELECT COUNT(*) FROM car_makers WHERE countries.countryid = car_makers.country) > 3
SELECT countries.countryid, countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE countries.continent IN (SELECT continent FROM continents WHERE continent = 'Europe' OR continent = 'Asia') OR car_makers.maker = 'Fiat'
SELECT countries.countryid, countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE countries.continent IN (SELECT continent FROM continents WHERE continent = 'Europe' OR continent = 'Asia') OR car_makers.maker = 'Fiat'
SELECT countries.countryid, countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE countries.continent IN (SELECT continent FROM continents WHERE continent = 'Europe' OR continent = 'Asia') OR car_makers.maker = 'Fiat'","SELECT countries.countryid, countries.countryname FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE countries.continent IN (SELECT continent FROM continents WHERE continent = 'Europe' OR continent = 'Asia') OR car_makers.maker = 'Fiat'",0,0.0
247,743,Which continent speaks the most languages?,world_1,extra,SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1,7,"SELECT continent, COUNT(DISTINCT language) AS num_languages FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY continent ORDER BY num_languages DESC LIMIT 1
SELECT continent, COUNT(DISTINCT language) AS num_languages FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY continent ORDER BY num_languages DESC LIMIT 1
SELECT continent, COUNT(DISTINCT language) AS num_languages FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY continent ORDER BY num_languages DESC LIMIT 1
SELECT continent, COUNT(DISTINCT language) AS num_languages FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY continent ORDER BY num_languages DESC LIMIT 1
SELECT continent, COUNT(DISTINCT language) AS num_languages FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY continent ORDER BY num_languages DESC LIMIT 1
SELECT continent, COUNT(DISTINCT language) AS num_languages FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY continent ORDER BY num_languages DESC LIMIT 1
SELECT continent, COUNT(DISTINCT language) AS num_languages FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY continent ORDER BY num_languages DESC LIMIT 1","SELECT continent, COUNT(DISTINCT language) AS num_languages FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY continent ORDER BY num_languages DESC LIMIT 1",0,0.0
248,541,"Which student has enrolled for the most times in any program? List the id, first name, middle name, last name, the number of enrollments and student id.",student_transcripts_tracking,extra,"SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT s.student_id, s.first_name, s.middle_name, s.last_name, COUNT(se.student_id) AS num_enrollments, se.student_id FROM students s JOIN student_enrolment se ON s.student_id = se.student
SELECT s.student_id, s.first_name, s.middle_name, s.last_name, COUNT(se.student_id) AS num_enrollments, se.student_id FROM students s JOIN student_enrolment se ON s.student_id = se.student
SELECT s.student_id, s.first_name, s.middle_name, s.last_name, COUNT(se.student_id) AS num_enrollments, se.student_id FROM students s JOIN student_enrolment se ON s.student_id = se.student
SELECT s.student_id, s.first_name, s.middle_name, s.last_name, COUNT(se.student_id) AS num_enrollments, se.student_id FROM students s JOIN student_enrolment se ON s.student_id = se.student
SELECT s.student_id, s.first_name, s.middle_name, s.last_name, COUNT(se.student_id) AS num_enrollments, se.student_id FROM students s JOIN student_enrolment se ON s.student_id = se.student
SELECT s.student_id, s.first_name, s.middle_name, s.last_name, COUNT(se.student_id) AS num_enrollments, se.student_id FROM students s JOIN student_enrolment se ON s.student_id = se.student
SELECT s.student_id, s.first_name, s.middle_name, s.last_name, COUNT(se.student_id) AS num_enrollments, se.student_id FROM students s JOIN student_enrolment se ON s.student_id = se.student","SELECT s.student_id, s.first_name, s.middle_name, s.last_name, COUNT(se.student_id) AS num_enrollments, se.student_id FROM students s JOIN student_enrolment se ON s.student_id = se.student",0,0.0
249,380,What are the ids of documents that contain the paragraph text 'Brazil' and 'Ireland'?,cre_Doc_Template_Mgt,hard,SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland',7,"SELECT p.document_id  FROM paragraphs p  WHERE p.paragraph_text LIKE '%Brazil%'  AND p.paragraph_text LIKE '%Ireland%'  GROUP BY p.document_id
SELECT p.document_id FROM paragraphs p JOIN documents d ON p.document_id = d.document_id WHERE p.paragraph_text IN ('Brazil', 'Ireland') GROUP BY p.document_id HAVING COUNT(DISTINCT p.paragraph_text) = 2
SELECT p.document_id FROM paragraphs p JOIN documents d ON p.document_id = d.document_id WHERE p.paragraph_text IN ('Brazil', 'Ireland') GROUP BY p.document_id HAVING COUNT(DISTINCT p.paragraph_text) = 2
SELECT p.document_id  FROM paragraphs p  JOIN documents d ON p.document_id = d.document_id  WHERE p.paragraph_text LIKE '%Brazil%' AND p.paragraph_text LIKE '%Ireland%'  GROUP BY p.document_id
SELECT p.document_id  FROM paragraphs p  JOIN documents d ON p.document_id = d.document_id  WHERE p.paragraph_text LIKE '%Brazil%' AND p.paragraph_text LIKE '%Ireland%'  GROUP BY p.document_id
SELECT p.document_id FROM paragraphs p JOIN documents d ON p.document_id = d.document_id WHERE p.paragraph_text IN ('Brazil', 'Ireland') GROUP BY p.document_id HAVING COUNT(DISTINCT p.paragraph_text) = 2
SELECT p.document_id  FROM paragraphs p  JOIN documents d ON p.document_id = d.document_id  WHERE p.paragraph_text LIKE '%Brazil%' AND p.paragraph_text LIKE '%Ireland%'  GROUP BY p.document_id","SELECT p.document_id FROM paragraphs p JOIN documents d ON p.document_id = d.document_id WHERE p.paragraph_text IN ('Brazil', 'Ireland') GROUP BY p.document_id HAVING COUNT(DISTINCT p.paragraph_text) = 2",0,0.0
250,853,What is the record company used by the greatest number of orchestras?,orchestra,hard,SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1,7,"SELECT record_company, COUNT(*) AS num_orchestras FROM orchestra GROUP BY record_company ORDER BY num_orchestras DESC LIMIT 1
SELECT record_company, COUNT(*) AS num_orchestras FROM orchestra GROUP BY record_company ORDER BY num_orchestras DESC LIMIT 1
SELECT record_company, COUNT(*) AS num_orchestras FROM orchestra GROUP BY record_company ORDER BY num_orchestras DESC LIMIT 1
SELECT record_company, COUNT(*) AS num_orchestras FROM orchestra GROUP BY record_company ORDER BY num_orchestras DESC LIMIT 1
SELECT record_company, COUNT(*) AS num_orchestras FROM orchestra GROUP BY record_company ORDER BY num_orchestras DESC LIMIT 1
SELECT record_company, COUNT(*) AS num_orchestras FROM orchestra GROUP BY record_company ORDER BY num_orchestras DESC LIMIT 1
SELECT record_company, COUNT(*) AS num_orchestras FROM orchestra GROUP BY record_company ORDER BY num_orchestras DESC LIMIT 1","SELECT record_company, COUNT(*) AS num_orchestras FROM orchestra GROUP BY record_company ORDER BY num_orchestras DESC LIMIT 1",0,0.0
251,96,What is the model of the car with the smallest amount of horsepower?,car_1,hard,SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;,7,"SELECT ml.model FROM cars_data cd JOIN model_list ml ON cd.id = ml.modelid ORDER BY cd.horsepower ASC LIMIT 1
SELECT ml.model FROM cars_data cd JOIN model_list ml ON cd.id = ml.modelid WHERE cd.horsepower = (SELECT MIN(horsepower) FROM cars_data)
SELECT ml.model FROM cars_data cd JOIN model_list ml ON cd.id = ml.modelid WHERE cd.horsepower = (SELECT MIN(horsepower) FROM cars_data)
SELECT ml.model FROM cars_data cd JOIN model_list ml ON cd.id = ml.modelid WHERE cd.horsepower = (SELECT MIN(horsepower) FROM cars_data)
SELECT ml.model FROM cars_data cd JOIN model_list ml ON cd.id = ml.modelid WHERE cd.horsepower = (SELECT MIN(horsepower) FROM cars_data)
SELECT ml.model FROM cars_data cd JOIN model_list ml ON cd.id = ml.modelid WHERE cd.horsepower = (SELECT MIN(horsepower) FROM cars_data)
SELECT ml.model FROM cars_data cd JOIN model_list ml ON cd.id = ml.modelid WHERE cd.horsepower = (SELECT MIN(horsepower) FROM cars_data)",SELECT ml.model FROM cars_data cd JOIN model_list ml ON cd.id = ml.modelid WHERE cd.horsepower = (SELECT MIN(horsepower) FROM cars_data),0,0.0
252,280,Which employee received the biggest bonus? Give me the employee name.,employee_hire_evaluation,hard,SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1,7,"SELECT e.name FROM employee e JOIN evaluation ev ON e.employee_id = ev.employee_id ORDER BY ev.bonus DESC LIMIT 1
SELECT e.name FROM employee e JOIN evaluation ev ON e.employee_id = ev.employee_id ORDER BY ev.bonus DESC LIMIT 1
SELECT e.name FROM evaluation e JOIN employee e2 ON e.employee_id = e2.employee_id ORDER BY e.bonus DESC LIMIT 1
SELECT e.name FROM evaluation e JOIN employee e2 ON e.employee_id = e2.employee_id ORDER BY e.bonus DESC LIMIT 1
SELECT name FROM evaluation JOIN hiring ON evaluation.employee_id = hiring.employee_id JOIN employee ON hiring.employee_id = employee.employee_id ORDER BY evaluation.bonus DESC LIMIT 1
SELECT e.name FROM evaluation e JOIN employee e2 ON e.employee_id = e2.employee_id ORDER BY e.bonus DESC LIMIT 1
SELECT e.name FROM evaluation e JOIN employee e2 ON e.employee_id = e2.employee_id ORDER BY e.bonus DESC LIMIT 1",SELECT e.name FROM evaluation e JOIN employee e2 ON e.employee_id = e2.employee_id ORDER BY e.bonus DESC LIMIT 1,0,1.0
253,1027,What is the sname of every sing that does not have any song?,singer,hard,SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song),7,"SELECT s.name FROM singer s LEFT JOIN song so ON s.singer_id = so.singer_id WHERE so.song_id IS NULL
SELECT s.name FROM singer s LEFT JOIN song so ON s.singer_id = so.singer_id WHERE so.song_id IS NULL
SELECT s.name FROM singer s LEFT JOIN song so ON s.singer_id = so.singer_id WHERE so.song_id IS NULL
SELECT s.name FROM singer s LEFT JOIN song so ON s.singer_id = so.singer_id WHERE so.song_id IS NULL
SELECT s.name FROM singer s LEFT JOIN song so ON s.singer_id = so.singer_id WHERE so.song_id IS NULL
SELECT s.name FROM singer s LEFT JOIN song so ON s.singer_id = so.singer_id WHERE so.song_id IS NULL
SELECT s.name FROM singer s LEFT JOIN song so ON s.singer_id = so.singer_id WHERE so.song_id IS NULL",SELECT s.name FROM singer s LEFT JOIN song so ON s.singer_id = so.singer_id WHERE so.song_id IS NULL,0,1.0
254,513,What is the zip code of the address in the city Port Chelsea?,student_transcripts_tracking,easy,SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea',7,"SELECT zip_postcode FROM addresses WHERE city = 'Port Chelsea'
SELECT zip_postcode FROM addresses WHERE city = 'Port Chelsea'
SELECT zip_postcode FROM addresses WHERE city = 'Port Chelsea'
SELECT zip_postcode FROM addresses WHERE city = 'Port Chelsea'
SELECT zip_postcode FROM addresses WHERE city = 'Port Chelsea'
SELECT zip_postcode FROM addresses WHERE city = 'Port Chelsea'
SELECT zip_postcode FROM addresses WHERE city = 'Port Chelsea'",SELECT zip_postcode FROM addresses WHERE city = 'Port Chelsea',True,1.0
255,171,Which models are lighter than 3500 but not built by the 'Ford Motor Company'?,car_1,extra,SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';,7,"SELECT model_list.model  FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  JOIN cars_data ON model_list.model = cars_data.id  WHERE cars_data.weight < 3500  AND car_makers.fullname != 'Ford Motor Company'
SELECT model_list.model FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid JOIN car_makers ON model_list.maker = car_makers.id WHERE cars_data.weight < 3500 AND car_makers.fullname != 'Ford Motor Company'
SELECT ml.model FROM cars_data cd JOIN model_list ml ON cd.id = ml.modelid JOIN car_makers cm ON ml.maker = cm.id WHERE cd.weight < 3500 AND cm.fullname != 'Ford Motor Company'
SELECT modelid, maker, model FROM model_list WHERE weight < 3500 AND maker != 'Ford Motor Company'
SELECT model_list.model  FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  JOIN cars_data ON model_list.model = cars_data.id  WHERE cars_data.weight < 3500  AND car_makers.fullname != 'Ford Motor Company'
SELECT modelid, maker, model FROM model_list WHERE weight < 3500 AND maker != 'Ford Motor Company'
SELECT modelid, maker, model FROM model_list WHERE weight < 3500 AND maker != 'Ford Motor Company'","SELECT modelid, maker, model FROM model_list WHERE weight < 3500 AND maker != 'Ford Motor Company'",False,0.0
256,194,Give the airline with abbreviation 'UAL'.,flight_2,easy,"SELECT Airline FROM AIRLINES WHERE Abbreviation  =  ""UAL""",7,"SELECT airline, abbreviation, country FROM airlines WHERE abbreviation = 'UAL'
SELECT abbreviation FROM airlines WHERE abbreviation = 'UAL'
SELECT airline, abbreviation, country FROM airlines WHERE abbreviation = 'UAL'
SELECT abbreviation FROM airlines WHERE abbreviation = 'UAL'
SELECT airline, abbreviation, country FROM airlines WHERE abbreviation = 'UAL'
SELECT airline, abbreviation, country FROM airlines WHERE abbreviation = 'UAL'
SELECT abbreviation FROM airlines WHERE abbreviation = 'UAL'","SELECT airline, abbreviation, country FROM airlines WHERE abbreviation = 'UAL'",0,0.0
257,142,What model has the most different versions?,car_1,hard,SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;,7,"SELECT model_list.model, COUNT(model_list.modelid) AS version_count FROM model_list JOIN car_makers ON model_list.maker = car_makers.id GROUP BY model_list.model ORDER BY version_count DESC LIMIT 1
SELECT model_list.model, COUNT(model_list.modelid) AS version_count FROM model_list JOIN car_makers ON model_list.maker = car_makers.id GROUP BY model_list.model ORDER BY version_count DESC LIMIT 1
SELECT model_list.model, COUNT(DISTINCT model_list.modelid) AS version_count FROM model_list JOIN car_makers ON model_list.maker = car_makers.id GROUP BY model_list.model ORDER BY version_count DESC LIMIT 1
SELECT model_list.model, COUNT(model_list.modelid) AS version_count FROM model_list JOIN car_makers ON model_list.maker = car_makers.id GROUP BY model_list.model ORDER BY version_count DESC LIMIT 1
SELECT model_list.model, COUNT(DISTINCT model_list.modelid) AS version_count FROM model_list JOIN car_makers ON model_list.maker = car_makers.id GROUP BY model_list.model ORDER BY version_count DESC LIMIT 1
SELECT model_list.model, COUNT(DISTINCT model_list.modelid) AS version_count FROM model_list JOIN car_makers ON model_list.maker = car_makers.id GROUP BY model_list.model ORDER BY version_count DESC LIMIT 1
SELECT model_list.model, COUNT(DISTINCT model_list.modelid) AS version_count FROM model_list JOIN car_makers ON model_list.maker = car_makers.id GROUP BY model_list.model ORDER BY version_count DESC LIMIT 1","SELECT model_list.model, COUNT(DISTINCT model_list.modelid) AS version_count FROM model_list JOIN car_makers ON model_list.maker = car_makers.id GROUP BY model_list.model ORDER BY version_count DESC LIMIT 1",0,0.0
258,516,What is the name and id of the department with the most number of degrees ?,student_transcripts_tracking,extra,"select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1",7,"SELECT department_name, department_id  FROM departments  WHERE department_id IN (     SELECT department_id      FROM degree_programs      GROUP BY department_id      ORDER BY COUNT(*) DESC      LIMIT 1 )
SELECT department_name, department_id  FROM departments  WHERE department_id = (     SELECT department_id      FROM degree_programs      GROUP BY department_id      ORDER BY COUNT(*) DESC      LIMIT 1 )
SELECT department_name, department_id  FROM departments  WHERE department_id IN (     SELECT department_id      FROM degree_programs      GROUP BY department_id      ORDER BY COUNT(*) DESC      LIMIT 1 )
SELECT department_name, department_id  FROM departments  WHERE department_id = (     SELECT department_id      FROM degree_programs      GROUP BY department_id      ORDER BY COUNT(*) DESC      LIMIT 1 )
SELECT department_name, department_id  FROM departments  WHERE department_id IN (     SELECT department_id      FROM degree_programs      GROUP BY department_id      ORDER BY COUNT(*) DESC      LIMIT 1 )
SELECT department_name, department_id  FROM departments  JOIN degree_programs ON departments.department_id = degree_programs.department_id  GROUP BY department_id  ORDER BY COUNT(*) DESC  LIMIT 1
SELECT department_name, department_id  FROM departments  WHERE department_id = (     SELECT department_id      FROM degree_programs      GROUP BY department_id      ORDER BY COUNT(*) DESC      LIMIT 1 )","SELECT department_name, department_id  FROM departments  WHERE department_id IN (     SELECT department_id      FROM degree_programs      GROUP BY department_id      ORDER BY COUNT(*) DESC      LIMIT 1 )",0,1.0
259,830,What is the average attendance of shows?,orchestra,easy,SELECT avg(Attendance) FROM SHOW,7,"SELECT AVG(attendance) FROM show
SELECT AVG(attendance) FROM show
SELECT AVG(attendance) FROM show
SELECT AVG(attendance) FROM show
SELECT AVG(attendance) FROM show
SELECT AVG(attendance) FROM show
SELECT AVG(attendance) FROM show",SELECT AVG(attendance) FROM show,True,1.0
260,1015,What is the most common singer citizenship ?,singer,hard,select citizenship from singer group by citizenship order by count(*) desc limit 1,7,"SELECT citizenship, COUNT(*) AS count FROM singer GROUP BY citizenship ORDER BY count DESC LIMIT 1
SELECT citizenship, COUNT(*) AS count FROM singer GROUP BY citizenship ORDER BY count DESC LIMIT 1
SELECT citizenship, COUNT(*) AS count FROM singer GROUP BY citizenship ORDER BY count DESC LIMIT 1
SELECT citizenship, COUNT(*) AS count FROM singer GROUP BY citizenship ORDER BY count DESC LIMIT 1
SELECT citizenship, COUNT(*) AS count FROM singer GROUP BY citizenship ORDER BY count DESC LIMIT 1
SELECT citizenship, COUNT(*) AS count FROM singer GROUP BY citizenship ORDER BY count DESC LIMIT 1
SELECT citizenship, COUNT(*) AS count FROM singer GROUP BY citizenship ORDER BY count DESC LIMIT 1","SELECT citizenship, COUNT(*) AS count FROM singer GROUP BY citizenship ORDER BY count DESC LIMIT 1",0,0.0
261,780,What are the country codes of countries where people use languages other than English?,world_1,easy,"SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != ""English""",7,"SELECT DISTINCT countrycode FROM countrylanguage WHERE language != 'English'
SELECT DISTINCT countrycode FROM countrylanguage WHERE language <> 'English'
SELECT DISTINCT countrycode FROM countrylanguage WHERE language <> 'English'
SELECT DISTINCT countrycode FROM countrylanguage WHERE language <> 'English'
SELECT DISTINCT countrycode FROM countrylanguage WHERE language <> 'English'
SELECT DISTINCT countrycode FROM countrylanguage WHERE language <> 'English'
SELECT DISTINCT countrycode FROM countrylanguage WHERE language <> 'English'",SELECT DISTINCT countrycode FROM countrylanguage WHERE language <> 'English',True,1.0
262,828,What are the record companies of orchestras in descending order of years in which they were founded?,orchestra,easy,SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC,7,"SELECT record_company FROM orchestra ORDER BY year_of_founded DESC
SELECT record_company FROM orchestra ORDER BY year_of_founded DESC
SELECT record_company  FROM orchestra  ORDER BY year_of_founded DESC
SELECT record_company  FROM orchestra  ORDER BY year_of_founded DESC
SELECT record_company FROM orchestra ORDER BY year_of_founded DESC
SELECT record_company FROM orchestra ORDER BY year_of_founded DESC
SELECT record_company FROM orchestra ORDER BY year_of_founded DESC",SELECT record_company FROM orchestra ORDER BY year_of_founded DESC,True,1.0
263,668,Return the money rank of the poker player with the greatest height.,poker_player,hard,SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1,7,"SELECT p.money_rank  FROM poker_player p  JOIN people pe ON p.people_id = pe.people_id  ORDER BY pe.height DESC  LIMIT 1
SELECT p.money_rank  FROM poker_player p  JOIN people pe ON p.people_id = pe.people_id  ORDER BY pe.height DESC  LIMIT 1
SELECT p.money_rank  FROM poker_player p  JOIN people pe ON p.people_id = pe.people_id  ORDER BY pe.height DESC  LIMIT 1
SELECT p.money_rank  FROM poker_player p  JOIN people pe ON p.people_id = pe.people_id  ORDER BY pe.height DESC  LIMIT 1
SELECT p.money_rank  FROM poker_player p  JOIN people pe ON p.people_id = pe.people_id  ORDER BY pe.height DESC  LIMIT 1
SELECT p.money_rank  FROM poker_player p  JOIN people pe ON p.people_id = pe.people_id  ORDER BY pe.height DESC  LIMIT 1
SELECT p.money_rank  FROM poker_player p  JOIN people pe ON p.people_id = pe.people_id  ORDER BY pe.height DESC  LIMIT 1",SELECT p.money_rank  FROM poker_player p  JOIN people pe ON p.people_id = pe.people_id  ORDER BY pe.height DESC  LIMIT 1,0,1.0
264,941,Find the owner id and zip code of the owner who spent the most money in total for his or her dogs.,dog_kennels,extra,"SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",7,"SELECT o.owner_id, o.zip_code FROM owners o JOIN dogs d ON o.owner_id = d.owner_id JOIN treatments t ON d.dog_id = t.dog_id GROUP BY o.owner_id ORDER BY SUM(t.cost_of_treatment) DESC LIMIT 1
SELECT o.owner_id, o.zip_code FROM owners o JOIN dogs d ON o.owner_id = d.owner_id JOIN treatments t ON d.dog_id = t.dog_id GROUP BY o.owner_id ORDER BY SUM(t.cost_of_treatment) DESC LIMIT 1
SELECT o.owner_id, o.zip_code FROM owners o JOIN dogs d ON o.owner_id = d.owner_id JOIN treatments t ON d.dog_id = t.dog_id GROUP BY o.owner_id ORDER BY SUM(t.cost_of_treatment) DESC LIMIT 1
SELECT o.owner_id, o.zip_code FROM owners o JOIN dogs d ON o.owner_id = d.owner_id JOIN treatments t ON d.dog_id = t.dog_id GROUP BY o.owner_id ORDER BY SUM(t.cost_of_treatment) DESC LIMIT 1
SELECT o.owner_id, o.zip_code FROM owners o JOIN dogs d ON o.owner_id = d.owner_id JOIN treatments t ON d.dog_id = t.dog_id GROUP BY o.owner_id ORDER BY SUM(t.cost_of_treatment) DESC LIMIT 1
SELECT o.owner_id, o.zip_code FROM owners o JOIN dogs d ON o.owner_id = d.owner_id JOIN treatments t ON d.dog_id = t.dog_id GROUP BY o.owner_id ORDER BY SUM(t.cost_of_treatment) DESC LIMIT 1
SELECT o.owner_id, o.zip_code FROM owners o JOIN dogs d ON o.owner_id = d.owner_id JOIN treatments t ON d.dog_id = t.dog_id GROUP BY o.owner_id ORDER BY SUM(t.cost_of_treatment) DESC LIMIT 1","SELECT o.owner_id, o.zip_code FROM owners o JOIN dogs d ON o.owner_id = d.owner_id JOIN treatments t ON d.dog_id = t.dog_id GROUP BY o.owner_id ORDER BY SUM(t.cost_of_treatment) DESC LIMIT 1",0,1.0
265,916,Find the minimum grade of students who have no friends.,network_1,extra,SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id),7,"SELECT MIN(h.grade) FROM highschooler h LEFT JOIN friend f ON h.id = f.student_id LEFT JOIN likes l ON h.id = l.student_id WHERE f.friend_id IS NULL OR l.liked_id IS NULL
SELECT MIN(grade) FROM highschooler WHERE id NOT IN (SELECT student_id FROM friend) AND id NOT IN (SELECT liked_id FROM likes)
SELECT MIN(h.grade) FROM highschooler h LEFT JOIN friend f ON h.id = f.student_id LEFT JOIN likes l ON h.id = l.student_id WHERE f.friend_id IS NULL
SELECT MIN(h.grade) FROM highschooler h LEFT JOIN friend f ON h.id = f.student_id LEFT JOIN likes l ON h.id = l.student_id WHERE f.friend_id IS NULL OR l.liked_id IS NULL
SELECT MIN(h.grade) FROM highschooler h LEFT JOIN friend f ON h.id = f.student_id LEFT JOIN likes l ON h.id = l.student_id WHERE f.friend_id IS NULL
SELECT MIN(h.grade) FROM highschooler h LEFT JOIN friend f ON h.id = f.student_id LEFT JOIN likes l ON h.id = l.student_id WHERE f.friend_id IS NULL
SELECT MIN(h.grade) FROM highschooler h LEFT JOIN friend f ON h.id = f.student_id LEFT JOIN likes l ON h.id = l.student_id WHERE f.friend_id IS NULL",SELECT MIN(h.grade) FROM highschooler h LEFT JOIN friend f ON h.id = f.student_id LEFT JOIN likes l ON h.id = l.student_id WHERE f.friend_id IS NULL,0,0.0
266,448,What are the names of players who won in both 2013 and 2016?,wta_1,hard,SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016,7,"SELECT DISTINCT winner_name FROM matches WHERE year IN (2013, 2016) GROUP BY winner_name HAVING COUNT(DISTINCT year) = 2
SELECT DISTINCT winner_name FROM matches WHERE year IN (2013, 2016) GROUP BY winner_name HAVING COUNT(DISTINCT year) = 2
SELECT DISTINCT winner_name FROM matches WHERE year IN (2013, 2016) GROUP BY winner_name HAVING COUNT(DISTINCT year) = 2
SELECT DISTINCT winner_name FROM matches WHERE year IN (2013, 2016) GROUP BY winner_name HAVING COUNT(DISTINCT year) = 2
SELECT DISTINCT winner_name FROM matches WHERE year = 2013 AND winner_name IN (SELECT winner_name FROM matches WHERE year = 2016) AND year = 2016
SELECT DISTINCT winner_name FROM matches WHERE year IN (2013, 2016) GROUP BY winner_name HAVING COUNT(DISTINCT year) = 2
SELECT DISTINCT winner_name FROM matches WHERE year IN (2013, 2016) AND winner_name IN (     SELECT DISTINCT winner_name     FROM matches     WHERE year = 2013 ) AND winner_name IN (     SELECT DISTINCT winner_name     FROM matches     WHERE year = 2016 )","SELECT DISTINCT winner_name FROM matches WHERE year IN (2013, 2016) GROUP BY winner_name HAVING COUNT(DISTINCT year) = 2",0,1.0
267,837,"What are the names of conductors, sorted descending by the number of years they have worked?",orchestra,easy,SELECT Name FROM conductor ORDER BY Year_of_Work DESC,7,"SELECT name FROM conductor ORDER BY year_of_work DESC
SELECT name FROM conductor ORDER BY year_of_work DESC
SELECT name FROM conductor ORDER BY year_of_work DESC
SELECT name FROM conductor ORDER BY year_of_work DESC
SELECT name FROM conductor ORDER BY year_of_work DESC
SELECT name FROM conductor ORDER BY year_of_work DESC
SELECT name FROM conductor ORDER BY year_of_work DESC",SELECT name FROM conductor ORDER BY year_of_work DESC,True,1.0
268,777,What are the Asian countries which have a population larger than that of any country in Africa?,world_1,extra,"SELECT Name FROM country WHERE Continent  =  ""Asia""  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  ""Africa"")",7,"SELECT c.name FROM country c JOIN country co ON c.continent = 'Asia' AND co.continent = 'Africa' WHERE c.population > co.population
SELECT c.name FROM country c JOIN countrylanguage cl ON c.code = cl.countrycode WHERE c.continent = 'Asia' AND cl.language = 'English' AND cl.isofficial = 'T'
SELECT c.name FROM country c JOIN country co ON c.continent = 'Asia' AND co.continent = 'Africa' WHERE c.population > co.population
SELECT c.name FROM country c JOIN country co ON c.continent = 'Asia' AND co.continent = 'Africa' WHERE c.population > co.population
SELECT c.name FROM country c JOIN countrylanguage cl ON c.code = cl.countrycode WHERE c.continent = 'Asia' AND cl.language = 'English' AND cl.isofficial = 'T'
SELECT c.name FROM country c JOIN countrylanguage cl ON c.code = cl.countrycode WHERE c.continent = 'Asia' AND cl.language = 'English' AND cl.isofficial = 'T'
SELECT c.name FROM country c JOIN country co ON c.continent = 'Asia' AND co.continent = 'Africa' WHERE c.population > co.population",SELECT c.name FROM country c JOIN country co ON c.continent = 'Asia' AND co.continent = 'Africa' WHERE c.population > co.population,0,1.0
269,270,What are the manager name and district of the shop that sells the largest number of products?,employee_hire_evaluation,medium,"SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1",7,"SELECT s.manager_name, s.district  FROM shop s  JOIN hiring h ON s.shop_id = h.shop_id  WHERE h.is_full_time = 'true'  ORDER BY s.number_products DESC  LIMIT 1
SELECT s.manager_name, s.district  FROM shop s  JOIN hiring h ON s.shop_id = h.shop_id  WHERE h.is_full_time = 'true'  ORDER BY s.number_products DESC  LIMIT 1
SELECT s.manager_name, s.district  FROM shop s  JOIN hiring h ON s.shop_id = h.shop_id  WHERE h.is_full_time = 'true'  ORDER BY s.number_products DESC  LIMIT 1
SELECT s.manager_name, s.district  FROM shop s  JOIN hiring h ON s.shop_id = h.shop_id  WHERE h.is_full_time = 'true'  ORDER BY s.number_products DESC  LIMIT 1
SELECT s.manager_name, s.district  FROM shop s  JOIN hiring h ON s.shop_id = h.shop_id  WHERE h.is_full_time = 'true'  ORDER BY s.number_products DESC  LIMIT 1
SELECT s.manager_name, s.district  FROM shop s  JOIN hiring h ON s.shop_id = h.shop_id  WHERE h.is_full_time = 'true'  ORDER BY s.number_products DESC  LIMIT 1
SELECT s.manager_name, s.district  FROM shop s  JOIN hiring h ON s.shop_id = h.shop_id  WHERE h.is_full_time = 'true'  ORDER BY s.number_products DESC  LIMIT 1","SELECT s.manager_name, s.district  FROM shop s  JOIN hiring h ON s.shop_id = h.shop_id  WHERE h.is_full_time = 'true'  ORDER BY s.number_products DESC  LIMIT 1",0,0.0
270,174,What are the names of the countries with no car makers?,car_1,hard,SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;,7,"SELECT countryname FROM countries WHERE countryid NOT IN (     SELECT country     FROM car_makers )
SELECT countryname FROM countries WHERE countryid NOT IN (     SELECT country     FROM car_makers )
SELECT countryname FROM countries WHERE countryid NOT IN (     SELECT country     FROM car_makers )
SELECT countryname  FROM countries  WHERE countryid NOT IN (SELECT country FROM car_makers)
SELECT countryname FROM countries WHERE countryid NOT IN (     SELECT country     FROM car_makers )
SELECT countryname FROM countries WHERE countryid NOT IN (     SELECT country     FROM car_makers )
SELECT countryname FROM countries WHERE countryid NOT IN (     SELECT country     FROM car_makers )",SELECT countryname FROM countries WHERE countryid NOT IN (     SELECT country     FROM car_makers ),0,1.0
271,810,What is the total population and average area of countries in the continent of North America whose area is bigger than 3000 ?,world_1,hard,"select sum(population) ,  avg(surfacearea) from country where continent  =  ""north america"" and surfacearea  >  3000",7,"SELECT SUM(population) AS total_population, AVG(surfacearea) AS average_area FROM country WHERE continent = 'North America' AND surfacearea > 3000
SELECT SUM(population) AS total_population, AVG(surfacearea) AS average_area FROM country WHERE continent = 'North America' AND surfacearea > 3000
SELECT SUM(population) AS total_population, AVG(surfacearea) AS average_area FROM country WHERE continent = 'North America' AND surfacearea > 3000
SELECT SUM(population) AS total_population, AVG(surfacearea) AS average_area FROM country WHERE continent = 'North America' AND surfacearea > 3000
SELECT SUM(population) AS total_population, AVG(surfacearea) AS average_area FROM country WHERE continent = 'North America' AND surfacearea > 3000
SELECT SUM(population) AS total_population, AVG(surfacearea) AS average_area FROM country WHERE continent = 'North America' AND surfacearea > 3000
SELECT SUM(population) AS total_population, AVG(surfacearea) AS average_area FROM country WHERE continent = 'North America' AND surfacearea > 3000","SELECT SUM(population) AS total_population, AVG(surfacearea) AS average_area FROM country WHERE continent = 'North America' AND surfacearea > 3000",0,0.0
272,710,Which region is the city Kabul located in?,world_1,medium,"SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  ""Kabul""",7,"SELECT region FROM country WHERE capital = (SELECT id FROM city WHERE name = 'Kabul')
SELECT region FROM country WHERE capital = (SELECT id FROM city WHERE name = 'Kabul')
SELECT region FROM country WHERE capital = (SELECT id FROM city WHERE name = 'Kabul')
SELECT region FROM country WHERE capital = (SELECT id FROM city WHERE name = 'Kabul')
SELECT region FROM country WHERE capital = (SELECT id FROM city WHERE name = 'Kabul')
SELECT region FROM country WHERE capital = (SELECT id FROM city WHERE name = 'Kabul')
SELECT region FROM country WHERE capital = (SELECT id FROM city WHERE name = 'Kabul')",SELECT region FROM country WHERE capital = (SELECT id FROM city WHERE name = 'Kabul'),0,1.0
273,902,Count the number of likes for each student id.,network_1,medium,"SELECT student_id ,  count(*) FROM Likes GROUP BY student_id",7,"SELECT student_id, COUNT(*) AS likes_count FROM likes GROUP BY student_id
SELECT student_id, COUNT(*) AS likes_count FROM likes GROUP BY student_id
SELECT student_id, COUNT(*) AS likes_count FROM likes GROUP BY student_id
SELECT student_id, COUNT(*) AS likes_count FROM likes GROUP BY student_id
SELECT student_id, COUNT(*) AS likes_count FROM likes GROUP BY student_id
SELECT student_id, COUNT(*) AS likes_count FROM likes GROUP BY student_id
SELECT student_id, COUNT(*) AS likes_count FROM likes GROUP BY student_id","SELECT student_id, COUNT(*) AS likes_count FROM likes GROUP BY student_id",0,1.0
274,1025,"For each singer name, what is the total sales for their songs?",singer,medium,"SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name",7,"SELECT s.name, SUM(ss.sales) AS total_sales FROM singer s JOIN song ss ON s.singer_id = ss.singer_id GROUP BY s.name
SELECT s.name, SUM(ss.sales) AS total_sales FROM singer s JOIN song ss ON s.singer_id = ss.singer_id GROUP BY s.name
SELECT s.name, SUM(ss.sales) AS total_sales FROM singer s JOIN song ss ON s.singer_id = ss.singer_id GROUP BY s.name
SELECT s.name, SUM(ss.sales) AS total_sales FROM singer s JOIN song ss ON s.singer_id = ss.singer_id GROUP BY s.name
SELECT s.name, SUM(ss.sales) AS total_sales FROM singer s JOIN song ss ON s.singer_id = ss.singer_id GROUP BY s.name
SELECT s.name, SUM(ss.sales) AS total_sales FROM singer s JOIN song ss ON s.singer_id = ss.singer_id GROUP BY s.name
SELECT s.name, SUM(ss.sales) AS total_sales FROM singer s JOIN song ss ON s.singer_id = ss.singer_id GROUP BY s.name","SELECT s.name, SUM(ss.sales) AS total_sales FROM singer s JOIN song ss ON s.singer_id = ss.singer_id GROUP BY s.name",0,1.0
275,818,What is the total number of countries where Spanish is spoken by the largest percentage of people?,world_1,extra,"SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  ""Spanish"" GROUP BY CountryCode",7,"SELECT COUNT(DISTINCT countrycode) FROM countrylanguage WHERE language = 'Spanish' AND percentage = (SELECT MAX(percentage) FROM countrylanguage WHERE language = 'Spanish')
SELECT COUNT(DISTINCT countrycode) FROM countrylanguage WHERE language = 'Spanish' AND percentage = (SELECT MAX(percentage) FROM countrylanguage WHERE language = 'Spanish')
SELECT COUNT(DISTINCT countrycode) FROM countrylanguage WHERE language = 'Spanish' AND percentage = (SELECT MAX(percentage) FROM countrylanguage WHERE language = 'Spanish')
SELECT COUNT(DISTINCT countrycode) FROM countrylanguage WHERE language = 'Spanish' AND percentage = (SELECT MAX(percentage) FROM countrylanguage WHERE language = 'Spanish')
SELECT COUNT(DISTINCT countrycode) FROM countrylanguage WHERE language = 'Spanish' AND percentage = (SELECT MAX(percentage) FROM countrylanguage WHERE language = 'Spanish')
SELECT COUNT(DISTINCT countrycode) FROM countrylanguage WHERE language = 'Spanish' AND percentage = (SELECT MAX(percentage) FROM countrylanguage WHERE language = 'Spanish')
SELECT COUNT(DISTINCT countrycode) FROM countrylanguage WHERE language = 'Spanish' AND percentage = (SELECT MAX(percentage) FROM countrylanguage WHERE language = 'Spanish')",SELECT COUNT(DISTINCT countrycode) FROM countrylanguage WHERE language = 'Spanish' AND percentage = (SELECT MAX(percentage) FROM countrylanguage WHERE language = 'Spanish'),0,0.0
276,514,What is the zip code for Port Chelsea?,student_transcripts_tracking,easy,SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea',7,"SELECT zip_postcode FROM addresses WHERE city = 'Port Chelsea'
SELECT zip_postcode FROM addresses WHERE city = 'Port Chelsea'
SELECT zip_postcode FROM addresses WHERE city = 'Port Chelsea'
SELECT zip_postcode FROM addresses WHERE city = 'Port Chelsea'
SELECT zip_postcode FROM addresses WHERE city = 'Port Chelsea'
SELECT zip_postcode FROM addresses WHERE city = 'Port Chelsea'
SELECT zip_postcode FROM addresses WHERE city = 'Port Chelsea'",SELECT zip_postcode FROM addresses WHERE city = 'Port Chelsea',True,1.0
277,639,find the pixel aspect ratio and nation of the tv channels that do not use English.,tvshow,medium,"SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'",7,"SELECT country, pixel_aspect_ratio_par FROM tv_channel WHERE language != 'English'
SELECT country, pixel_aspect_ratio_par FROM tv_channel WHERE language != 'English'
SELECT country, pixel_aspect_ratio_par FROM tv_channel WHERE language != 'English'
SELECT country, pixel_aspect_ratio_par  FROM tv_channel  WHERE language != 'English'
SELECT country, pixel_aspect_ratio_par FROM tv_channel WHERE language != 'English'
SELECT country, pixel_aspect_ratio_par FROM tv_channel WHERE language != 'English'
SELECT country, pixel_aspect_ratio_par FROM tv_channel WHERE language != 'English'","SELECT country, pixel_aspect_ratio_par FROM tv_channel WHERE language != 'English'",True,0.0
278,159,How many cars have a larger accelerate than the car with the largest horsepower?,car_1,hard,SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );,7,"SELECT COUNT(*) FROM cars_data WHERE accelerate > (SELECT MAX(horsepower) FROM cars_data)
SELECT COUNT(*) FROM cars_data WHERE accelerate > (SELECT accelerate FROM cars_data ORDER BY horsepower DESC LIMIT 1)
SELECT COUNT(*) FROM cars_data WHERE accelerate > (SELECT accelerate FROM cars_data ORDER BY horsepower DESC LIMIT 1)
SELECT COUNT(*) FROM cars_data WHERE accelerate > (SELECT accelerate FROM cars_data ORDER BY horsepower DESC LIMIT 1)
SELECT COUNT(*) FROM cars_data WHERE accelerate > (SELECT accelerate FROM cars_data ORDER BY horsepower DESC LIMIT 1)
SELECT COUNT(*) FROM cars_data WHERE accelerate > (SELECT accelerate FROM cars_data ORDER BY horsepower DESC LIMIT 1)
SELECT COUNT(*) FROM cars_data WHERE accelerate > (SELECT accelerate FROM cars_data ORDER BY horsepower DESC LIMIT 1)",SELECT COUNT(*) FROM cars_data WHERE accelerate > (SELECT accelerate FROM cars_data ORDER BY horsepower DESC LIMIT 1),0,0.0
279,616,What are 3 most highly rated episodes in the TV series table and what were those ratings?,tvshow,medium,"SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;",7,"SELECT episode, rating  FROM tv_series  ORDER BY rating DESC  LIMIT 3
SELECT episode, rating  FROM tv_series  ORDER BY rating DESC  LIMIT 3
SELECT episode, rating  FROM tv_series  ORDER BY rating DESC  LIMIT 3
SELECT episode, rating  FROM tv_series  ORDER BY rating DESC  LIMIT 3
SELECT episode, rating  FROM tv_series  ORDER BY rating DESC  LIMIT 3
SELECT episode, rating  FROM tv_series  ORDER BY rating DESC  LIMIT 3
SELECT episode, rating FROM tv_series ORDER BY rating DESC LIMIT 3","SELECT episode, rating  FROM tv_series  ORDER BY rating DESC  LIMIT 3",True,1.0
280,562,"What is the id, line 1, and line 2 of the address with the most students?",student_transcripts_tracking,extra,"SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT address_id, line_1, line_2 FROM addresses JOIN students ON addresses.address_id = students.current_address_id OR addresses.address_id = students.permanent_address_id GROUP BY address_id ORDER BY COUNT(*) DESC LIMIT 1
SELECT address_id, line_1, line_2 FROM addresses JOIN students ON addresses.address_id = students.current_address_id OR addresses.address_id = students.permanent_address_id GROUP BY address_id ORDER BY COUNT(student_id) DESC LIMIT 1
SELECT address_id, line_1, line_2 FROM addresses JOIN students ON addresses.address_id = students.current_address_id OR addresses.address_id = students.permanent_address_id GROUP BY address_id ORDER BY COUNT(student_id) DESC LIMIT 1
SELECT address_id, line_1, line_2 FROM addresses JOIN students ON addresses.address_id = students.current_address_id OR addresses.address_id = students.permanent_address_id GROUP BY address_id ORDER BY COUNT(student_id) DESC LIMIT 1
SELECT address_id, line_1, line_2 FROM addresses JOIN students ON addresses.address_id = students.current_address_id OR addresses.address_id = students.permanent_address_id GROUP BY address_id ORDER BY COUNT(student_id) DESC LIMIT 1
SELECT address_id, line_1, line_2 FROM addresses JOIN students ON addresses.address_id = students.current_address_id OR addresses.address_id = students.permanent_address_id GROUP BY address_id ORDER BY COUNT(student_id) DESC LIMIT 1
SELECT address_id, line_1, line_2 FROM addresses JOIN students ON addresses.address_id = students.current_address_id OR addresses.address_id = students.permanent_address_id GROUP BY address_id ORDER BY COUNT(student_id) DESC LIMIT 1","SELECT address_id, line_1, line_2 FROM addresses JOIN students ON addresses.address_id = students.current_address_id OR addresses.address_id = students.permanent_address_id GROUP BY address_id ORDER BY COUNT(student_id) DESC LIMIT 1",True,1.0
281,468,What are the names of the winner and loser who played in the longest match?,wta_1,medium,"SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1",7,"SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches)
SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches)
SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches)
SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches)
SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches)
SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches)
SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches)","SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches)",0,1.0
282,691,What is last date created of votes from the state 'CA'?,voter_1,easy,SELECT max(created) FROM votes WHERE state  =  'CA',7,"SELECT MAX(created) FROM votes WHERE state = 'CA'
SELECT MAX(created) FROM votes WHERE state = 'CA'
SELECT MAX(created) FROM votes WHERE state = 'CA'
SELECT MAX(created) FROM votes WHERE state = 'CA'
SELECT MAX(created) FROM votes WHERE state = 'CA'
SELECT MAX(created) FROM votes WHERE state = 'CA'
SELECT MAX(created) FROM votes WHERE state = 'CA'",SELECT MAX(created) FROM votes WHERE state = 'CA',True,1.0
283,975,Count the number of dogs of an age below the average.,dog_kennels,hard,SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs ),7,"SELECT COUNT(*)  FROM dogs  WHERE age < (SELECT AVG(age) FROM dogs)
SELECT COUNT(*) FROM dogs WHERE age < (SELECT AVG(age) FROM dogs)
SELECT COUNT(*) FROM dogs WHERE age < (SELECT AVG(age) FROM dogs)
SELECT COUNT(*) FROM dogs WHERE age < (SELECT AVG(age) FROM dogs)
SELECT COUNT(*) FROM dogs WHERE age < (SELECT AVG(age) FROM dogs)
SELECT COUNT(*) FROM dogs WHERE age < (SELECT AVG(age) FROM dogs)
SELECT COUNT(*) FROM dogs WHERE age < (SELECT AVG(age) FROM dogs)",SELECT COUNT(*) FROM dogs WHERE age < (SELECT AVG(age) FROM dogs),True,1.0
284,736,What is the total number of languages used in Aruba?,world_1,medium,"SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Aruba""",7,"SELECT COUNT(DISTINCT language) FROM countrylanguage WHERE countrycode = 'ABW'
SELECT COUNT(DISTINCT language) FROM countrylanguage WHERE countrycode = 'ABW'
SELECT COUNT(DISTINCT language) FROM countrylanguage WHERE countrycode = 'ABW'
SELECT COUNT(DISTINCT language) FROM countrylanguage WHERE countrycode = 'ABW'
SELECT COUNT(DISTINCT language) FROM countrylanguage WHERE countrycode = 'ABW'
SELECT COUNT(DISTINCT language) FROM countrylanguage WHERE countrycode = 'ABW'
SELECT COUNT(DISTINCT language) FROM countrylanguage WHERE countrycode = 'ABW'",SELECT COUNT(DISTINCT language) FROM countrylanguage WHERE countrycode = 'ABW',0,1.0
285,1000,How many singers are there?,singer,easy,SELECT count(*) FROM singer,7,"SELECT COUNT(*) FROM singer
SELECT COUNT(*) FROM singer
SELECT COUNT(*) FROM singer
SELECT COUNT(*) FROM singer
SELECT COUNT(*) FROM singer
SELECT COUNT(*) FROM singer
SELECT COUNT(*) FROM singer",SELECT COUNT(*) FROM singer,True,1.0
286,475,find the code of the country where has the greatest number of players.,wta_1,hard,SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1,7,"SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1",SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1,True,1.0
287,900,Show name of all students who have some friends and also are liked by someone else.,network_1,hard,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id,7,"SELECT DISTINCT hs.name FROM highschooler hs JOIN friend f ON hs.id = f.student_id JOIN likes l ON hs.id = l.liked_id
SELECT DISTINCT hs.name FROM highschooler hs JOIN friend f ON hs.id = f.student_id JOIN likes l ON hs.id = l.liked_id
SELECT DISTINCT hs.name FROM highschooler hs JOIN friend f ON hs.id = f.student_id JOIN likes l ON hs.id = l.liked_id
SELECT DISTINCT hs.name FROM highschooler hs JOIN friend f ON hs.id = f.student_id JOIN likes l ON hs.id = l.liked_id
SELECT DISTINCT hs.name FROM highschooler hs JOIN friend f ON hs.id = f.student_id JOIN likes l ON hs.id = l.liked_id
SELECT DISTINCT hs.name FROM highschooler hs JOIN friend f ON hs.id = f.student_id JOIN likes l ON hs.id = l.liked_id
SELECT DISTINCT h.name FROM highschooler h JOIN friend f ON h.id = f.student_id JOIN likes l ON h.id = l.liked_id",SELECT DISTINCT hs.name FROM highschooler hs JOIN friend f ON hs.id = f.student_id JOIN likes l ON hs.id = l.liked_id,0,1.0
288,76,What are the different first names and ages of the students who do have pets?,pets_1,medium,"SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid",7,"SELECT DISTINCT fname, age FROM students INNER JOIN has_pet ON students.stuid = has_pet.stuid INNER JOIN pets ON has_pet.petid = pets.petid
SELECT DISTINCT fname, age FROM students INNER JOIN has_pet ON students.stuid = has_pet.stuid INNER JOIN pets ON has_pet.petid = pets.petid
SELECT DISTINCT fname, age FROM students INNER JOIN has_pet ON students.stuid = has_pet.stuid INNER JOIN pets ON has_pet.petid = pets.petid
SELECT DISTINCT fname, age FROM students INNER JOIN has_pet ON students.stuid = has_pet.stuid INNER JOIN pets ON has_pet.petid = pets.petid
SELECT DISTINCT fname, age FROM students INNER JOIN has_pet ON students.stuid = has_pet.stuid INNER JOIN pets ON has_pet.petid = pets.petid
SELECT DISTINCT fname, age FROM students INNER JOIN has_pet ON students.stuid = has_pet.stuid INNER JOIN pets ON has_pet.petid = pets.petid
SELECT DISTINCT fname, age FROM students INNER JOIN has_pet ON students.stuid = has_pet.stuid INNER JOIN pets ON has_pet.petid = pets.petid","SELECT DISTINCT fname, age FROM students INNER JOIN has_pet ON students.stuid = has_pet.stuid INNER JOIN pets ON has_pet.petid = pets.petid",0,0.0
289,393,Show different hometown of teachers and the number of teachers from each hometown.,course_teach,medium,"SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown",7,"SELECT hometown, COUNT(teacher_id) AS number_of_teachers FROM teacher GROUP BY hometown ORDER BY number_of_teachers DESC
SELECT hometown, COUNT(teacher_id) AS number_of_teachers FROM teacher GROUP BY hometown ORDER BY number_of_teachers DESC
SELECT hometown, COUNT(teacher_id) AS number_of_teachers FROM teacher GROUP BY hometown ORDER BY number_of_teachers DESC
SELECT hometown, COUNT(teacher_id) AS number_of_teachers FROM teacher GROUP BY hometown ORDER BY number_of_teachers DESC
SELECT hometown, COUNT(teacher_id) AS number_of_teachers FROM teacher GROUP BY hometown ORDER BY number_of_teachers DESC
SELECT hometown, COUNT(teacher_id) AS number_of_teachers FROM teacher GROUP BY hometown ORDER BY number_of_teachers DESC
SELECT hometown, COUNT(teacher_id) AS number_of_teachers FROM teacher GROUP BY hometown ORDER BY number_of_teachers DESC","SELECT hometown, COUNT(teacher_id) AS number_of_teachers FROM teacher GROUP BY hometown ORDER BY number_of_teachers DESC",0,1.0
290,39,what is the name and nation of the singer who have a song having 'Hey' in its name?,concert_singer,medium,"SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'",7,"SELECT name, country FROM singer WHERE song_name LIKE '%Hey%'
SELECT name, country FROM singer WHERE song_name LIKE '%Hey%'
SELECT name, country FROM singer WHERE song_name LIKE '%Hey%'
SELECT name, country FROM singer WHERE song_name LIKE '%Hey%'
SELECT name, country FROM singer WHERE song_name LIKE '%Hey%'
SELECT name, country FROM singer WHERE song_name LIKE '%Hey%'
SELECT name, country FROM singer WHERE song_name LIKE '%Hey%'","SELECT name, country FROM singer WHERE song_name LIKE '%Hey%'",True,1.0
291,25,What is the name and capacity of the stadium with the most concerts after 2013 ?,concert_singer,extra,"select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1",7,"SELECT s.name, s.capacity FROM stadium s JOIN concert c ON s.stadium_id = c.stadium_id WHERE c.year > 2013 GROUP BY s.stadium_id ORDER BY COUNT(c.concert_id) DESC LIMIT 1
SELECT s.name, s.capacity FROM stadium s JOIN concert c ON s.stadium_id = c.stadium_id WHERE c.year > 2013 GROUP BY s.stadium_id ORDER BY COUNT(c.concert_id) DESC LIMIT 1
SELECT s.name, s.capacity FROM stadium s JOIN concert c ON s.stadium_id = c.stadium_id WHERE c.year > 2013 GROUP BY s.stadium_id ORDER BY COUNT(c.concert_id) DESC LIMIT 1
SELECT s.name, s.capacity FROM stadium s JOIN concert c ON s.stadium_id = c.stadium_id WHERE c.year > 2013 GROUP BY s.stadium_id ORDER BY COUNT(c.concert_id) DESC LIMIT 1
SELECT s.name, s.capacity FROM stadium s JOIN concert c ON s.stadium_id = c.stadium_id WHERE c.year > 2013 GROUP BY s.stadium_id ORDER BY COUNT(c.concert_id) DESC LIMIT 1
SELECT s.name, s.capacity FROM stadium s JOIN concert c ON s.stadium_id = c.stadium_id WHERE c.year > 2013 GROUP BY s.stadium_id ORDER BY COUNT(c.concert_id) DESC LIMIT 1
SELECT s.name, s.capacity FROM stadium s JOIN concert c ON s.stadium_id = c.stadium_id WHERE c.year > 2013 GROUP BY s.stadium_id ORDER BY COUNT(c.concert_id) DESC LIMIT 1","SELECT s.name, s.capacity FROM stadium s JOIN concert c ON s.stadium_id = c.stadium_id WHERE c.year > 2013 GROUP BY s.stadium_id ORDER BY COUNT(c.concert_id) DESC LIMIT 1",0,1.0
292,667,What is the money rank of the tallest poker player?,poker_player,hard,SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1,7,"SELECT pp.money_rank FROM poker_player pp JOIN people p ON pp.people_id = p.people_id WHERE p.height = (SELECT MAX(height) FROM people)
SELECT pp.money_rank FROM poker_player pp JOIN people p ON pp.people_id = p.people_id WHERE p.height = (SELECT MAX(height) FROM people)
SELECT pp.money_rank FROM poker_player pp JOIN people p ON pp.people_id = p.people_id WHERE p.height = (SELECT MAX(height) FROM people)
SELECT pp.money_rank FROM poker_player pp JOIN people p ON pp.people_id = p.people_id WHERE p.height = (SELECT MAX(height) FROM people)
SELECT pp.money_rank FROM poker_player pp JOIN people p ON pp.people_id = p.people_id WHERE p.height = (SELECT MAX(height) FROM people)
SELECT pp.money_rank FROM poker_player pp JOIN people p ON pp.people_id = p.people_id WHERE p.height = (SELECT MAX(height) FROM people)
SELECT pp.money_rank FROM poker_player pp JOIN people p ON pp.people_id = p.people_id WHERE p.height = (SELECT MAX(height) FROM people)",SELECT pp.money_rank FROM poker_player pp JOIN people p ON pp.people_id = p.people_id WHERE p.height = (SELECT MAX(height) FROM people),0,1.0
293,910,Show the names of students who have a grade higher than 5 and have at least 2 friends.,network_1,hard,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2,7,"SELECT DISTINCT hs1.name FROM highschooler hs1 JOIN friend ON hs1.id = friend.student_id JOIN highschooler hs2 ON friend.friend_id = hs2.id WHERE hs1.grade > 5 AND hs2.grade > 5
SELECT DISTINCT hs1.name FROM highschooler hs1 JOIN friend ON hs1.id = friend.student_id JOIN highschooler hs2 ON friend.friend_id = hs2.id WHERE hs1.grade > 5 AND hs2.grade > 5
SELECT DISTINCT hs1.name FROM highschooler hs1 JOIN friend ON hs1.id = friend.student_id JOIN highschooler hs2 ON friend.friend_id = hs2.id WHERE hs1.grade > 5 AND hs2.grade > 5
SELECT DISTINCT hs1.name FROM highschooler hs1 JOIN friend ON hs1.id = friend.student_id JOIN highschooler hs2 ON friend.friend_id = hs2.id WHERE hs1.grade > 5 AND hs2.grade > 5
SELECT DISTINCT hs1.name FROM highschooler hs1 JOIN friend ON hs1.id = friend.student_id JOIN highschooler hs2 ON friend.friend_id = hs2.id WHERE hs1.grade > 5 AND hs2.grade > 5
SELECT DISTINCT hs1.name FROM highschooler hs1 JOIN friend ON hs1.id = friend.student_id JOIN highschooler hs2 ON friend.friend_id = hs2.id WHERE hs1.grade > 5 AND hs2.grade > 5
SELECT DISTINCT hs1.name FROM highschooler hs1 JOIN friend ON hs1.id = friend.student_id JOIN highschooler hs2 ON friend.friend_id = hs2.id WHERE hs1.grade > 5 AND hs2.grade > 5",SELECT DISTINCT hs1.name FROM highschooler hs1 JOIN friend ON hs1.id = friend.student_id JOIN highschooler hs2 ON friend.friend_id = hs2.id WHERE hs1.grade > 5 AND hs2.grade > 5,0,0.0
294,251,"What are flight numbers of flights departing from City ""Aberdeen ""?",flight_2,medium,"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""",7,"SELECT flightno FROM flights WHERE sourceairport IN (SELECT airportcode FROM airports WHERE city = 'Aberdeen')
SELECT flightno FROM flights WHERE sourceairport IN (SELECT airportcode FROM airports WHERE city = 'Aberdeen')
SELECT flightno FROM flights WHERE sourceairport IN (SELECT airportcode FROM airports WHERE city = 'Aberdeen')
SELECT flightno FROM flights WHERE sourceairport IN (SELECT airportcode FROM airports WHERE city = 'Aberdeen')
SELECT flightno FROM flights WHERE sourceairport IN (SELECT airportcode FROM airports WHERE city = 'Aberdeen')
SELECT flightno FROM flights WHERE sourceairport IN (SELECT airportcode FROM airports WHERE city = 'Aberdeen')
SELECT flightno FROM flights WHERE sourceairport IN (SELECT airportcode FROM airports WHERE city = 'Aberdeen')",SELECT flightno FROM flights WHERE sourceairport IN (SELECT airportcode FROM airports WHERE city = 'Aberdeen'),0,1.0
295,530,"For each semester, what is the name and id of the one with the most students registered?",student_transcripts_tracking,extra,"SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT s.semester_id, s.semester_name, COUNT(se.student_id) AS student_count FROM semesters s JOIN student_enrolment se ON s.semester_id = se.semester_id GROUP BY s.semester_id ORDER BY student_count DESC LIMIT 1
SELECT s.semester_id, s.semester_name, COUNT(se.student_id) AS student_count FROM semesters s JOIN student_enrolment se ON s.semester_id = se.semester_id GROUP BY s.semester_id ORDER BY student_count DESC LIMIT 1
SELECT s.semester_id, s.semester_name, COUNT(se.student_id) AS student_count FROM semesters s JOIN student_enrolment se ON s.semester_id = se.semester_id GROUP BY s.semester_id ORDER BY student_count DESC LIMIT 1
SELECT s.semester_id, s.semester_name, COUNT(se.student_id) AS student_count FROM semesters s JOIN student_enrolment se ON s.semester_id = se.semester_id GROUP BY s.semester_id ORDER BY student_count DESC LIMIT 1
SELECT s.semester_id, s.semester_name, COUNT(se.student_id) AS student_count FROM semesters s JOIN student_enrolment se ON s.semester_id = se.semester_id GROUP BY s.semester_id ORDER BY student_count DESC LIMIT 1
SELECT s.semester_id, s.semester_name, COUNT(se.student_id) AS student_count FROM semesters s JOIN student_enrolment se ON s.semester_id = se.semester_id GROUP BY s.semester_id ORDER BY student_count DESC LIMIT 1
SELECT s.semester_id, s.semester_name, COUNT(se.student_id) AS student_count FROM semesters s JOIN student_enrolment se ON s.semester_id = se.semester_id GROUP BY s.semester_id ORDER BY student_count DESC LIMIT 1","SELECT s.semester_id, s.semester_name, COUNT(se.student_id) AS student_count FROM semesters s JOIN student_enrolment se ON s.semester_id = se.semester_id GROUP BY s.semester_id ORDER BY student_count DESC LIMIT 1",0,0.0
296,157,"For model volvo, how many cylinders does the car with the least accelerate have?",car_1,extra,SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;,7,"SELECT MIN(accelerate) FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid WHERE model_list.model = 'volvo'
SELECT MIN(accelerate) FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid WHERE model_list.model = 'volvo'
SELECT cylinders  FROM cars_data  WHERE model IN (     SELECT modelid      FROM model_list      WHERE maker = 'volvo' )  ORDER BY accelerate  LIMIT 1
SELECT MIN(accelerate) FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid WHERE model_list.model = 'volvo'
SELECT MIN(accelerate) FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid WHERE model_list.model = 'volvo'
SELECT MIN(accelerate) FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid WHERE model_list.model = 'volvo'
SELECT cylinders FROM cars_data WHERE model IN (SELECT modelid FROM model_list WHERE maker = 'volvo') ORDER BY accelerate ASC LIMIT 1",SELECT MIN(accelerate) FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid WHERE model_list.model = 'volvo',0,0.0
297,1014,Please show the most common citizenship of singers.,singer,hard,SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1,7,"SELECT citizenship, COUNT(*) as count FROM singer GROUP BY citizenship ORDER BY count DESC LIMIT 1
SELECT citizenship, COUNT(*) as count FROM singer GROUP BY citizenship ORDER BY count DESC LIMIT 1
SELECT citizenship, COUNT(*) as count FROM singer GROUP BY citizenship ORDER BY count DESC LIMIT 1
SELECT citizenship, COUNT(*) as count FROM singer GROUP BY citizenship ORDER BY count DESC LIMIT 1
SELECT citizenship, COUNT(*) as count FROM singer GROUP BY citizenship ORDER BY count DESC LIMIT 1
SELECT citizenship, COUNT(*) as count FROM singer GROUP BY citizenship ORDER BY count DESC LIMIT 1
SELECT citizenship, COUNT(*) as count FROM singer GROUP BY citizenship ORDER BY count DESC LIMIT 1","SELECT citizenship, COUNT(*) as count FROM singer GROUP BY citizenship ORDER BY count DESC LIMIT 1",0,0.0
298,826,"What are the names of conductors whose nationalities are not ""USA""?",orchestra,easy,SELECT Name FROM conductor WHERE Nationality != 'USA',7,"SELECT name FROM conductor WHERE nationality != 'USA'
SELECT name FROM conductor WHERE nationality != 'USA'
SELECT name FROM conductor WHERE nationality != 'USA'
SELECT name FROM conductor WHERE nationality != 'USA'
SELECT name FROM conductor WHERE nationality != 'USA'
SELECT name FROM conductor WHERE nationality != 'USA'
SELECT name FROM conductor WHERE nationality != 'USA'",SELECT name FROM conductor WHERE nationality != 'USA',True,1.0
299,872,Show the ID of the high schooler named Kyle.,network_1,easy,"SELECT ID FROM Highschooler WHERE name  =  ""Kyle""",7,"SELECT id FROM highschooler WHERE name = 'Kyle'
SELECT id FROM highschooler WHERE name = 'Kyle'
SELECT id FROM highschooler WHERE name = 'Kyle'
SELECT id FROM highschooler WHERE name = 'Kyle'
SELECT id FROM highschooler WHERE name = 'Kyle'
SELECT id FROM highschooler WHERE name = 'Kyle'
SELECT id FROM highschooler WHERE name = 'Kyle'",SELECT id FROM highschooler WHERE name = 'Kyle',True,1.0
300,210,Return the number of flights arriving in Aberdeen.,flight_2,medium,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""",7,"SELECT COUNT(*) FROM flights WHERE destairport = 'ABZ'
SELECT COUNT(*) FROM flights WHERE destairport = 'ABZ'
SELECT COUNT(*) FROM flights WHERE destairport = 'ABZ'
SELECT COUNT(*) FROM flights WHERE destairport = 'ABZ'
SELECT COUNT(*) FROM flights WHERE destairport = 'ABZ'
SELECT COUNT(*) FROM flights WHERE destairport = 'ABZ'
SELECT COUNT(*) FROM flights WHERE destairport = 'ABZ'",SELECT COUNT(*) FROM flights WHERE destairport = 'ABZ',0,1.0
301,42,What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015?,concert_singer,extra,"SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015",7,"SELECT s.name, s.location  FROM stadium s  JOIN concert c ON s.stadium_id = c.stadium_id  WHERE c.year IN (2014, 2015)  GROUP BY s.stadium_id  HAVING COUNT(DISTINCT c.year) = 2
SELECT s.name, s.location  FROM stadium s  JOIN concert c ON s.stadium_id = c.stadium_id  WHERE c.year IN (2014, 2015)  GROUP BY s.stadium_id  HAVING COUNT(DISTINCT c.year) = 2
SELECT s.name, s.location  FROM stadium s  JOIN concert c ON s.stadium_id = c.stadium_id  WHERE c.year IN (2014, 2015)  GROUP BY s.stadium_id  HAVING COUNT(DISTINCT c.year) = 2
SELECT s.name, s.location  FROM stadium s  JOIN concert c ON s.stadium_id = c.stadium_id  WHERE c.year IN (2014, 2015)  GROUP BY s.stadium_id  HAVING COUNT(DISTINCT c.year) = 2
SELECT s.name, s.location  FROM stadium s  JOIN concert c ON s.stadium_id = c.stadium_id  WHERE c.year IN (2014, 2015)  GROUP BY s.stadium_id  HAVING COUNT(DISTINCT c.year) = 2
SELECT s.name, s.location  FROM stadium s  JOIN concert c ON s.stadium_id = c.stadium_id  WHERE c.year IN (2014, 2015)  GROUP BY s.stadium_id  HAVING COUNT(DISTINCT c.year) = 2
SELECT s.name, s.location  FROM stadium s  JOIN concert c ON s.stadium_id = c.stadium_id  WHERE c.year IN (2014, 2015)  GROUP BY s.stadium_id  HAVING COUNT(DISTINCT c.year) = 2","SELECT s.name, s.location  FROM stadium s  JOIN concert c ON s.stadium_id = c.stadium_id  WHERE c.year IN (2014, 2015)  GROUP BY s.stadium_id  HAVING COUNT(DISTINCT c.year) = 2",0,1.0
302,82,What is the first name and gender of the all the students who have more than one pet?,pets_1,medium,"SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1",7,"SELECT s.fname, s.sex FROM students s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'cat' OR p.pettype = 'dog' GROUP BY s.stuid HAVING COUNT(DISTINCT hp.petid) > 1
SELECT s.fname, s.sex FROM students s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'cat' OR p.pettype = 'dog' GROUP BY s.stuid HAVING COUNT(DISTINCT hp.petid) > 1
SELECT fname, sex FROM students WHERE stuid IN (SELECT stuid FROM has_pet GROUP BY stuid HAVING COUNT(petid) > 1)
SELECT s.fname, s.sex FROM students s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'cat' OR p.pettype = 'dog' GROUP BY s.stuid HAVING COUNT(DISTINCT hp.petid) > 1
SELECT s.fname, s.sex FROM students s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'cat' OR p.pettype = 'dog' GROUP BY s.stuid HAVING COUNT(DISTINCT hp.petid) > 1
SELECT fname, sex FROM students WHERE stuid IN (SELECT stuid FROM has_pet GROUP BY stuid HAVING COUNT(petid) > 1)
SELECT fname, sex FROM students WHERE stuid IN (SELECT stuid FROM has_pet GROUP BY stuid HAVING COUNT(petid) > 1)","SELECT s.fname, s.sex FROM students s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'cat' OR p.pettype = 'dog' GROUP BY s.stuid HAVING COUNT(DISTINCT hp.petid) > 1",0,0.0
303,130,What are the names of all European countries with at least 3 manufacturers?,car_1,extra,SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;,7,"SELECT c.countryname FROM countries c JOIN car_makers cm ON c.countryid = cm.country WHERE c.continent = 'Europe' GROUP BY c.countryname HAVING COUNT(cm.id) >= 3
SELECT c.countryname FROM countries c JOIN car_makers cm ON c.countryid = cm.country WHERE c.continent = 'Europe' GROUP BY c.countryname HAVING COUNT(cm.id) >= 3
SELECT c.countryname FROM countries c JOIN car_makers cm ON c.countryid = cm.country WHERE c.continent = 'Europe' GROUP BY c.countryname HAVING COUNT(cm.id) >= 3
SELECT DISTINCT c.countryname FROM countries c JOIN car_makers cm ON c.countryid = cm.country WHERE c.continent = 'Europe' AND cm.country IS NOT NULL AND cm.country != '' AND cm.country != '0' AND cm.country != 'unknown' GROUP BY c.countryname HAVING COUNT(cm.id) >= 3
SELECT c.countryname FROM countries c JOIN car_makers cm ON c.countryid = cm.country WHERE c.continent = 'Europe' GROUP BY c.countryname HAVING COUNT(cm.id) >= 3
SELECT c.countryname FROM countries c JOIN car_makers cm ON c.countryid = cm.country WHERE c.continent = 'Europe' GROUP BY c.countryname HAVING COUNT(cm.id) >= 3
SELECT c.countryname FROM countries c JOIN car_makers cm ON c.countryid = cm.country WHERE c.continent = 'Europe' GROUP BY c.countryname HAVING COUNT(cm.id) >= 3",SELECT c.countryname FROM countries c JOIN car_makers cm ON c.countryid = cm.country WHERE c.continent = 'Europe' GROUP BY c.countryname HAVING COUNT(cm.id) >= 3,0,0.0
304,935,Which breed do the most dogs have? Give me the breed name.,dog_kennels,extra,SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1,7,"SELECT breed_name FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY breed_name ORDER BY COUNT(dog_id) DESC LIMIT 1
SELECT breed_name FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY breed_name ORDER BY COUNT(dog_id) DESC LIMIT 1
SELECT breed_name FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY breed_name ORDER BY COUNT(dog_id) DESC LIMIT 1
SELECT breed_name FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY breed_name ORDER BY COUNT(dog_id) DESC LIMIT 1
SELECT breed_name FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY breed_name ORDER BY COUNT(dog_id) DESC LIMIT 1
SELECT breed_name FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY breed_name ORDER BY COUNT(dog_id) DESC LIMIT 1
SELECT breed_name FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY breed_name ORDER BY COUNT(dog_id) DESC LIMIT 1",SELECT breed_name FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY breed_name ORDER BY COUNT(dog_id) DESC LIMIT 1,0,1.0
305,590,What is the number of cartoones written by Joseph Kuhr?,tvshow,easy,"SELECT count(*) FROM Cartoon WHERE Written_by = ""Joseph Kuhr"";",7,"SELECT COUNT(*) FROM cartoon WHERE written_by = 'Joseph Kuhr'
SELECT COUNT(*) FROM cartoon WHERE written_by = 'Joseph Kuhr'
SELECT COUNT(*) FROM cartoon WHERE written_by = 'Joseph Kuhr'
SELECT COUNT(*) FROM cartoon WHERE written_by = 'Joseph Kuhr'
SELECT COUNT(*) FROM cartoon WHERE written_by = 'Joseph Kuhr'
SELECT COUNT(*) FROM cartoon WHERE written_by = 'Joseph Kuhr'
SELECT COUNT(*) FROM cartoon WHERE written_by = 'Joseph Kuhr'",SELECT COUNT(*) FROM cartoon WHERE written_by = 'Joseph Kuhr',True,1.0
306,874,How many high schoolers are there in grade 9 or 10?,network_1,medium,SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10,7,"SELECT COUNT(*) FROM highschooler WHERE grade IN (9, 10)
SELECT COUNT(*) FROM highschooler WHERE grade IN (9, 10)
SELECT COUNT(*) FROM highschooler WHERE grade IN (9, 10)
SELECT COUNT(*) FROM highschooler WHERE grade IN (9, 10)
SELECT COUNT(*) FROM highschooler WHERE grade IN (9, 10)
SELECT COUNT(*) FROM highschooler WHERE grade IN (9, 10)
SELECT COUNT(*) FROM highschooler WHERE grade IN (9, 10)","SELECT COUNT(*) FROM highschooler WHERE grade IN (9, 10)",0,1.0
307,163,How many cars has over 6 cylinders?,car_1,easy,SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;,7,"SELECT COUNT(*) FROM cars_data WHERE cylinders > 6
SELECT COUNT(*) FROM cars_data WHERE cylinders > 6
SELECT COUNT(*) FROM cars_data WHERE cylinders > 6
SELECT COUNT(*) FROM cars_data WHERE cylinders > 6
SELECT COUNT(*) FROM cars_data WHERE cylinders > 6
SELECT COUNT(*) FROM cars_data WHERE cylinders > 6
SELECT COUNT(*) FROM cars_data WHERE cylinders > 6",SELECT COUNT(*) FROM cars_data WHERE cylinders > 6,True,1.0
308,721,Give the name of the country in Asia with the lowest life expectancy.,world_1,hard,"SELECT Name FROM country WHERE Continent  =  ""Asia"" ORDER BY LifeExpectancy LIMIT 1",7,"SELECT name FROM country WHERE continent = 'Asia' ORDER BY lifeexpectancy ASC LIMIT 1
SELECT name FROM country WHERE continent = 'Asia' ORDER BY lifeexpectancy ASC LIMIT 1
SELECT name FROM country WHERE continent = 'Asia' ORDER BY lifeexpectancy ASC LIMIT 1
SELECT name FROM country WHERE continent = 'Asia' ORDER BY lifeexpectancy ASC LIMIT 1
SELECT name FROM country WHERE continent = 'Asia' ORDER BY lifeexpectancy ASC LIMIT 1
SELECT name FROM country WHERE continent = 'Asia' ORDER BY lifeexpectancy ASC LIMIT 1
SELECT name FROM country WHERE continent = 'Asia' ORDER BY lifeexpectancy ASC LIMIT 1",SELECT name FROM country WHERE continent = 'Asia' ORDER BY lifeexpectancy ASC LIMIT 1,True,1.0
309,992,How much does the most expensive charge type costs?,dog_kennels,easy,SELECT max(charge_amount) FROM Charges,7,"SELECT MAX(charge_amount) FROM charges
SELECT MAX(charge_amount) FROM charges
SELECT MAX(charge_amount) FROM charges
SELECT MAX(charge_amount) FROM charges
SELECT MAX(charge_amount) FROM charges
SELECT MAX(charge_amount) FROM charges
SELECT MAX(charge_amount) FROM charges",SELECT MAX(charge_amount) FROM charges,True,1.0
310,170,What is the maximum mpg of the cars that had 8 cylinders or that were produced before 1980 ?,car_1,medium,select max(mpg) from cars_data where cylinders  =  8 or year  <  1980,7,"SELECT MAX(mpg) FROM cars_data WHERE cylinders = 8 OR year < 1980
SELECT MAX(mpg) FROM cars_data WHERE cylinders = 8 OR year < 1980
SELECT MAX(mpg) FROM cars_data WHERE cylinders = 8 OR year < 1980
SELECT MAX(mpg) FROM cars_data WHERE cylinders = 8 OR year < 1980
SELECT MAX(mpg) FROM cars_data WHERE cylinders = 8 OR year < 1980
SELECT MAX(mpg) FROM cars_data WHERE cylinders = 8 OR year < 1980
SELECT MAX(mpg) FROM cars_data WHERE cylinders = 8 OR year < 1980",SELECT MAX(mpg) FROM cars_data WHERE cylinders = 8 OR year < 1980,True,1.0
311,395,List the most common hometown of teachers.,course_teach,hard,SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1,7,"SELECT hometown FROM teacher ORDER BY COUNT(hometown) DESC LIMIT 1
SELECT hometown FROM teacher GROUP BY hometown ORDER BY COUNT(*) DESC LIMIT 1
SELECT hometown FROM teacher GROUP BY hometown ORDER BY COUNT(*) DESC LIMIT 1
SELECT hometown FROM teacher ORDER BY COUNT(hometown) DESC LIMIT 1
SELECT hometown FROM teacher ORDER BY COUNT(hometown) DESC LIMIT 1
SELECT hometown FROM teacher ORDER BY COUNT(hometown) DESC LIMIT 1
SELECT hometown FROM teacher ORDER BY COUNT(hometown) DESC LIMIT 1",SELECT hometown FROM teacher ORDER BY COUNT(hometown) DESC LIMIT 1,0,0.0
312,965,List the arrival date and the departure date for all the dogs.,dog_kennels,medium,"SELECT date_arrived ,  date_departed FROM Dogs",7,"SELECT date_arrived, date_departed FROM dogs
SELECT date_arrived, date_departed FROM dogs
SELECT date_arrived, date_departed FROM dogs
SELECT date_arrived, date_departed FROM dogs
SELECT date_arrived, date_departed FROM dogs
SELECT date_arrived, date_departed FROM dogs
SELECT date_arrived, date_departed FROM dogs","SELECT date_arrived, date_departed FROM dogs",True,1.0
313,980,How many owners temporarily do not have any dogs?,dog_kennels,extra,SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs ),7,"SELECT COUNT(*) FROM owners LEFT JOIN dogs ON owners.owner_id = dogs.owner_id WHERE dogs.dog_id IS NULL
SELECT COUNT(*) FROM owners LEFT JOIN dogs ON owners.owner_id = dogs.owner_id WHERE dogs.dog_id IS NULL
SELECT COUNT(*) FROM owners LEFT JOIN dogs ON owners.owner_id = dogs.owner_id WHERE dogs.dog_id IS NULL
SELECT COUNT(*) FROM owners LEFT JOIN dogs ON owners.owner_id = dogs.owner_id WHERE dogs.dog_id IS NULL
SELECT COUNT(*) FROM owners LEFT JOIN dogs ON owners.owner_id = dogs.owner_id WHERE dogs.dog_id IS NULL
SELECT COUNT(*) FROM owners LEFT JOIN dogs ON owners.owner_id = dogs.owner_id WHERE dogs.dog_id IS NULL
SELECT COUNT(*) FROM owners LEFT JOIN dogs ON owners.owner_id = dogs.owner_id WHERE dogs.dog_id IS NULL",SELECT COUNT(*) FROM owners LEFT JOIN dogs ON owners.owner_id = dogs.owner_id WHERE dogs.dog_id IS NULL,0,1.0
314,451,What are the country code and first name of the players who won in both tourney WTA Championships and Australian Open?,wta_1,extra,"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'",7,"SELECT DISTINCT m1.winner_id, p.first_name FROM matches m1 JOIN players p ON m1.winner_id = p.player_id WHERE m1.tourney_name IN ('WTA Championships', 'Australian Open') AND NOT EXISTS (     SELECT 1     FROM matches m2     WHERE m2.winner_id = m1.winner_id     AND m2.tourney_name NOT IN ('WTA Championships', 'Australian Open') ) 
SELECT DISTINCT m1.winner_id, p.first_name FROM matches m1 JOIN players p ON m1.winner_id = p.player_id WHERE m1.tourney_name IN ('WTA Championships', 'Australian Open') AND NOT EXISTS (     SELECT 1     FROM matches m2     WHERE m2.winner_id = m1.winner_id     AND m2.tourney_name NOT IN ('WTA Championships', 'Australian Open') ) 
SELECT DISTINCT m1.winner_id, p.first_name FROM matches m1 JOIN players p ON m1.winner_id = p.player_id WHERE m1.tourney_name IN ('WTA Championships', 'Australian Open') AND NOT EXISTS (     SELECT 1     FROM matches m2     WHERE m2.winner_id = m1.winner_id     AND m2.tourney_name NOT IN ('WTA Championships', 'Australian Open') ) 
SELECT DISTINCT m1.winner_id, p.first_name FROM matches m1 JOIN players p ON m1.winner_id = p.player_id WHERE m1.tourney_name IN ('WTA Championships', 'Australian Open') AND NOT EXISTS (     SELECT 1     FROM matches m2     WHERE m2.winner_id = m1.winner_id     AND m2.tourney_name NOT IN ('WTA Championships', 'Australian Open') ) 
SELECT DISTINCT m1.winner_id, p.first_name FROM matches m1 JOIN players p ON m1.winner_id = p.player_id WHERE m1.tourney_name IN ('WTA Championships', 'Australian Open') AND NOT EXISTS (     SELECT 1     FROM matches m2     WHERE m2.winner_id = m1.winner_id     AND m2.tourney_name NOT IN ('WTA Championships', 'Australian Open') ) 
SELECT DISTINCT m1.winner_id, p.first_name FROM matches m1 JOIN players p ON m1.winner_id = p.player_id WHERE m1.tourney_name IN ('WTA Championships', 'Australian Open') AND NOT EXISTS (     SELECT 1     FROM matches m2     WHERE m2.winner_id = m1.winner_id     AND m2.tourney_name NOT IN ('WTA Championships', 'Australian Open') ) 
SELECT DISTINCT m1.winner_id, p.first_name FROM matches m1 JOIN players p ON m1.winner_id = p.player_id WHERE m1.tourney_name IN ('WTA Championships', 'Australian Open') AND NOT EXISTS (     SELECT 1     FROM matches m2     WHERE m2.winner_id = m1.winner_id     AND m2.tourney_name NOT IN ('WTA Championships', 'Australian Open') ) ","SELECT DISTINCT m1.winner_id, p.first_name FROM matches m1 JOIN players p ON m1.winner_id = p.player_id WHERE m1.tourney_name IN ('WTA Championships', 'Australian Open') AND NOT EXISTS (     SELECT 1     FROM matches m2     WHERE m2.winner_id = m1.winner_id     AND m2.tourney_name NOT IN ('WTA Championships', 'Australian Open') ) ",0,0.0
315,852,List the record company shared by the most number of orchestras.,orchestra,hard,SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1,7,"SELECT record_company FROM orchestra GROUP BY record_company ORDER BY COUNT(*) DESC LIMIT 1
SELECT record_company FROM orchestra GROUP BY record_company ORDER BY COUNT(*) DESC LIMIT 1
SELECT record_company FROM orchestra GROUP BY record_company ORDER BY COUNT(*) DESC LIMIT 1
SELECT record_company FROM orchestra GROUP BY record_company ORDER BY COUNT(*) DESC LIMIT 1
SELECT record_company FROM orchestra GROUP BY record_company ORDER BY COUNT(*) DESC LIMIT 1
SELECT record_company, COUNT(*) AS company_count FROM orchestra GROUP BY record_company ORDER BY company_count DESC LIMIT 1
SELECT record_company FROM orchestra GROUP BY record_company ORDER BY COUNT(*) DESC LIMIT 1",SELECT record_company FROM orchestra GROUP BY record_company ORDER BY COUNT(*) DESC LIMIT 1,True,1.0
316,167,"Among the cars with more than lowest horsepower, which ones do not have more than 3 cylinders? List the car makeid and make name.",car_1,extra,"SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;",7,"SELECT cm.id, cm.maker, cl.make FROM car_makers cm JOIN car_names cl ON cm.id = cl.makeid JOIN cars_data cd ON cl.modelid = cd.id WHERE cd.cylinders <= 3 AND cd.horsepower > (SELECT MIN(horsepower) FROM cars_data) 
SELECT cm.id, cm.maker, cl.make FROM car_makers cm JOIN car_names cl ON cm.id = cl.makeid JOIN cars_data cd ON cl.modelid = cd.id WHERE cd.cylinders <= 3 AND cd.horsepower > (SELECT MIN(horsepower) FROM cars_data) 
SELECT cm.id, cm.maker, cl.make FROM car_makers cm JOIN car_names cl ON cm.id = cl.makeid JOIN cars_data cd ON cl.modelid = cd.id WHERE cd.cylinders <= 3 AND cd.horsepower > (SELECT MIN(horsepower) FROM cars_data) 
SELECT cm.id, cm.maker, cl.make FROM car_makers cm JOIN car_names cl ON cm.id = cl.makeid JOIN cars_data cd ON cl.modelid = cd.id WHERE cd.cylinders <= 3 AND cd.horsepower > (SELECT MIN(horsepower) FROM cars_data) 
SELECT cm.id, cm.maker, cl.make FROM car_makers cm JOIN car_names cl ON cm.id = cl.makeid JOIN cars_data cd ON cl.modelid = cd.id WHERE cd.cylinders <= 3 AND cd.horsepower > (SELECT MIN(horsepower) FROM cars_data) 
SELECT cm.id, cm.maker, cl.make FROM car_makers cm JOIN car_names cl ON cm.id = cl.makeid JOIN cars_data cd ON cl.modelid = cd.id WHERE cd.cylinders <= 3 AND cd.horsepower > (SELECT MIN(horsepower) FROM cars_data) 
SELECT cm.id, cm.maker, cl.make FROM car_makers cm JOIN car_names cl ON cm.id = cl.makeid JOIN cars_data cd ON cl.modelid = cd.id WHERE cd.cylinders <= 3 AND cd.horsepower > (SELECT MIN(horsepower) FROM cars_data) ","SELECT cm.id, cm.maker, cl.make FROM car_makers cm JOIN car_names cl ON cm.id = cl.makeid JOIN cars_data cd ON cl.modelid = cd.id WHERE cd.cylinders <= 3 AND cd.horsepower > (SELECT MIN(horsepower) FROM cars_data) ",0,0.0
317,282,What are the names of the employees who never received any evaluation?,employee_hire_evaluation,hard,SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation),7,"SELECT e.name FROM employee e LEFT JOIN evaluation ev ON e.employee_id = ev.employee_id WHERE ev.employee_id IS NULL
SELECT name FROM employee WHERE employee_id NOT IN (SELECT employee_id FROM evaluation)
SELECT e.name FROM employee e LEFT JOIN evaluation ev ON e.employee_id = ev.employee_id WHERE ev.employee_id IS NULL
SELECT e.name FROM employee e LEFT JOIN evaluation ev ON e.employee_id = ev.employee_id WHERE ev.employee_id IS NULL
SELECT e.name FROM employee e LEFT JOIN evaluation ev ON e.employee_id = ev.employee_id WHERE ev.employee_id IS NULL
SELECT e.name FROM employee e LEFT JOIN evaluation ev ON e.employee_id = ev.employee_id WHERE ev.employee_id IS NULL
SELECT e.name FROM employee e LEFT JOIN evaluation ev ON e.employee_id = ev.employee_id WHERE ev.employee_id IS NULL",SELECT e.name FROM employee e LEFT JOIN evaluation ev ON e.employee_id = ev.employee_id WHERE ev.employee_id IS NULL,0,1.0
318,815,Give the language that is spoken in the most countries.,world_1,hard,SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1,7,"SELECT language FROM countrylanguage GROUP BY language ORDER BY COUNT(countrycode) DESC LIMIT 1
SELECT language FROM countrylanguage GROUP BY language ORDER BY COUNT(countrycode) DESC LIMIT 1
SELECT language FROM countrylanguage GROUP BY language ORDER BY COUNT(countrycode) DESC LIMIT 1
SELECT language FROM countrylanguage GROUP BY language ORDER BY COUNT(countrycode) DESC LIMIT 1
SELECT language FROM countrylanguage GROUP BY language ORDER BY COUNT(countrycode) DESC LIMIT 1
SELECT language FROM countrylanguage GROUP BY language ORDER BY COUNT(countrycode) DESC LIMIT 1
SELECT language FROM countrylanguage GROUP BY language ORDER BY COUNT(countrycode) DESC LIMIT 1",SELECT language FROM countrylanguage GROUP BY language ORDER BY COUNT(countrycode) DESC LIMIT 1,0,1.0
319,241,Find all airlines that have at least 10 flights.,flight_2,medium,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10,7,"SELECT airline FROM flights GROUP BY airline HAVING COUNT(flightno) >= 10
SELECT airline FROM flights GROUP BY airline HAVING COUNT(flightno) >= 10
SELECT airline FROM flights GROUP BY airline HAVING COUNT(flightno) >= 10
SELECT airline FROM flights GROUP BY airline HAVING COUNT(flightno) >= 10
SELECT airline FROM flights GROUP BY airline HAVING COUNT(flightno) >= 10
SELECT airline FROM flights GROUP BY airline HAVING COUNT(flightno) >= 10
SELECT airline FROM flights GROUP BY airline HAVING COUNT(flightno) >= 10",SELECT airline FROM flights GROUP BY airline HAVING COUNT(flightno) >= 10,0,0.0
320,959,Find the arriving date and the departing date of the dogs that received a treatment.,dog_kennels,medium,"SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id",7,"SELECT dogs.date_arrived, dogs.date_departed FROM dogs JOIN treatments ON dogs.dog_id = treatments.dog_id
SELECT dogs.date_arrived, dogs.date_departed FROM dogs JOIN treatments ON dogs.dog_id = treatments.dog_id
SELECT dogs.date_arrived, dogs.date_departed FROM dogs JOIN treatments ON dogs.dog_id = treatments.dog_id
SELECT dogs.date_arrived, dogs.date_departed FROM dogs JOIN treatments ON dogs.dog_id = treatments.dog_id
SELECT dogs.date_arrived, dogs.date_departed FROM dogs JOIN treatments ON dogs.dog_id = treatments.dog_id
SELECT dogs.date_arrived, dogs.date_departed FROM dogs JOIN treatments ON dogs.dog_id = treatments.dog_id
SELECT dogs.date_arrived, dogs.date_departed FROM dogs JOIN treatments ON dogs.dog_id = treatments.dog_id","SELECT dogs.date_arrived, dogs.date_departed FROM dogs JOIN treatments ON dogs.dog_id = treatments.dog_id",True,1.0
321,1031,What is the feature type name of feature AirCon?,real_estate_properties,medium,"SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  ""AirCon""",7,"SELECT feature_type_name FROM ref_feature_types WHERE feature_type_code = 'AirCon'
SELECT feature_type_name FROM ref_feature_types WHERE feature_type_code = 'AirCon'
SELECT feature_type_name FROM ref_feature_types WHERE feature_type_code = 'AirCon'
SELECT feature_type_name FROM ref_feature_types WHERE feature_type_code = 'AirCon'
SELECT feature_type_name FROM ref_feature_types WHERE feature_type_code = 'AirCon'
SELECT feature_type_name FROM ref_feature_types WHERE feature_type_code = 'AirCon'
SELECT feature_type_name FROM ref_feature_types WHERE feature_type_code = 'AirCon'",SELECT feature_type_name FROM ref_feature_types WHERE feature_type_code = 'AirCon',0,0.0
322,486,Find the number of left handed winners who participated in the WTA Championships.,wta_1,medium,SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L',7,"SELECT COUNT(*) FROM matches WHERE winner_hand = 'L' AND tourney_name = 'WTA Championships'
SELECT COUNT(*) FROM matches WHERE winner_hand = 'L' AND tourney_name = 'WTA Championships'
SELECT COUNT(*) FROM matches WHERE winner_hand = 'L' AND tourney_name = 'WTA Championships'
SELECT COUNT(*) FROM matches WHERE winner_hand = 'L' AND tourney_name = 'WTA Championships'
SELECT COUNT(*) FROM matches WHERE winner_hand = 'L' AND tourney_name = 'WTA Championships'
SELECT COUNT(*) FROM matches WHERE winner_hand = 'L' AND tourney_name = 'WTA Championships'
SELECT COUNT(*) FROM matches WHERE winner_hand = 'L' AND tourney_name = 'WTA Championships'",SELECT COUNT(*) FROM matches WHERE winner_hand = 'L' AND tourney_name = 'WTA Championships',0,0.0
323,351,"What is the template type code for template type description ""Book"".",cre_Doc_Template_Mgt,easy,"SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  ""Book""",7,"SELECT template_type_code FROM templates WHERE template_type_description = 'Book'
SELECT template_type_code FROM templates WHERE template_type_description = 'Book'
SELECT template_type_code FROM templates WHERE template_type_description = 'Book'
SELECT template_type_code FROM templates WHERE template_type_description = 'Book'
SELECT template_type_code FROM templates WHERE template_type_description = 'Book'
SELECT template_type_code FROM templates WHERE template_type_description = 'Book'
SELECT template_type_code FROM templates WHERE template_type_description = 'Book'",SELECT template_type_code FROM templates WHERE template_type_description = 'Book',0,0.0
324,102,What is the maker of the carr produced in the earliest year and what year was it?,car_1,extra,"SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);",7,"SELECT maker, year FROM cars_data WHERE year = (SELECT MIN(year) FROM cars_data)
SELECT maker, year FROM cars_data WHERE year = (SELECT MIN(year) FROM cars_data)
SELECT maker, year FROM cars_data WHERE year = (SELECT MIN(year) FROM cars_data)
SELECT maker, year FROM cars_data WHERE year = (SELECT MIN(year) FROM cars_data)
SELECT maker, year FROM cars_data WHERE year = (SELECT MIN(year) FROM cars_data)
SELECT maker, year FROM cars_data WHERE year = (SELECT MIN(year) FROM cars_data)
SELECT maker, year FROM cars_data WHERE year = (SELECT MIN(year) FROM cars_data)","SELECT maker, year FROM cars_data WHERE year = (SELECT MIN(year) FROM cars_data)",0,0.0
325,567,How many transcripts are released?,student_transcripts_tracking,easy,SELECT count(*) FROM Transcripts,7,"SELECT COUNT(*) FROM transcripts
SELECT COUNT(*) FROM transcripts
SELECT COUNT(*) FROM transcripts
SELECT COUNT(*) FROM transcripts
SELECT COUNT(*) FROM transcripts
SELECT COUNT(*) FROM transcripts
SELECT COUNT(*) FROM transcripts",SELECT COUNT(*) FROM transcripts,True,1.0
326,706,What is the total surface area of the countries in the Caribbean region?,world_1,easy,"SELECT sum(SurfaceArea) FROM country WHERE Region  =  ""Caribbean""",7,"SELECT SUM(surfacearea) FROM country WHERE region = 'Caribbean'
SELECT SUM(surfacearea) FROM country WHERE region = 'Caribbean'
SELECT SUM(surfacearea) FROM country WHERE region = 'Caribbean'
SELECT SUM(surfacearea) FROM country WHERE region = 'Caribbean'
SELECT SUM(surfacearea) FROM country WHERE region = 'Caribbean'
SELECT SUM(surfacearea) FROM country WHERE region = 'Caribbean'
SELECT SUM(surfacearea) FROM country WHERE region = 'Caribbean'",SELECT SUM(surfacearea) FROM country WHERE region = 'Caribbean',True,1.0
327,438,What is the average rank for winners in all matches?,wta_1,easy,SELECT avg(winner_rank) FROM matches,7,"SELECT AVG(winner_rank) AS average_winner_rank FROM matches
SELECT AVG(winner_rank) AS average_winner_rank FROM matches
SELECT AVG(winner_rank) AS average_winner_rank FROM matches
SELECT AVG(winner_rank) AS average_winner_rank FROM matches
SELECT AVG(winner_rank) AS average_winner_rank FROM matches
SELECT AVG(winner_rank) AS average_winner_rank FROM matches
SELECT AVG(winner_rank) AS average_winner_rank FROM matches",SELECT AVG(winner_rank) AS average_winner_rank FROM matches,0,1.0
328,572,What is the maximum number of times that a course shows up in different transcripts and what is that course's enrollment id?,student_transcripts_tracking,hard,"SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT course_id, COUNT(transcript_id) AS times_shown FROM transcript_contents GROUP BY course_id ORDER BY times_shown DESC LIMIT 1
SELECT course_id, COUNT(transcript_id) AS times_shown, MAX(student_enrolment_id) AS max_enrollment_id FROM transcript_contents GROUP BY course_id ORDER BY times_shown DESC LIMIT 1
SELECT course_id, COUNT(transcript_id) AS times_shown, MAX(student_enrolment_id) AS max_enrollment_id FROM transcript_contents GROUP BY course_id ORDER BY times_shown DESC LIMIT 1
SELECT course_id, COUNT(transcript_id) AS times_shown, MAX(student_enrolment_id) AS max_enrollment_id FROM transcript_contents GROUP BY course_id ORDER BY times_shown DESC LIMIT 1
SELECT course_id, COUNT(transcript_id) AS max_appearances FROM transcript_contents GROUP BY course_id ORDER BY max_appearances DESC LIMIT 1
SELECT course_id, COUNT(transcript_id) AS max_appearances FROM transcript_contents GROUP BY course_id ORDER BY max_appearances DESC LIMIT 1
SELECT course_id, COUNT(transcript_id) AS max_appearances FROM transcript_contents GROUP BY course_id ORDER BY max_appearances DESC LIMIT 1","SELECT course_id, COUNT(transcript_id) AS times_shown, MAX(student_enrolment_id) AS max_enrollment_id FROM transcript_contents GROUP BY course_id ORDER BY times_shown DESC LIMIT 1",0,0.0
329,914,Find the average grade of all students who have some friends.,network_1,hard,SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id),7,"SELECT AVG(grade) FROM highschooler WHERE id IN (SELECT student_id FROM friend) AND id IN (SELECT liked_id FROM likes)
SELECT AVG(grade) FROM highschooler WHERE id IN (SELECT student_id FROM friend) AND id IN (SELECT liked_id FROM likes)
SELECT AVG(grade) FROM highschooler WHERE id IN (SELECT student_id FROM friend UNION SELECT liked_id FROM likes)
SELECT AVG(grade) FROM highschooler WHERE id IN (SELECT student_id FROM friend) AND id IN (SELECT liked_id FROM likes)
SELECT AVG(grade) FROM highschooler WHERE id IN (SELECT student_id FROM friend) AND id IN (SELECT liked_id FROM likes)
SELECT AVG(grade) FROM highschooler WHERE id IN (SELECT student_id FROM friend UNION SELECT liked_id FROM likes)
SELECT AVG(grade) FROM highschooler WHERE id IN (SELECT student_id FROM friend) AND id IN (SELECT liked_id FROM likes)",SELECT AVG(grade) FROM highschooler WHERE id IN (SELECT student_id FROM friend) AND id IN (SELECT liked_id FROM likes),0,0.0
330,543,Which semesters do not have any student enrolled? List the semester name.,student_transcripts_tracking,hard,SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment ),7,"SELECT semester_name FROM semesters WHERE semester_id NOT IN (SELECT semester_id FROM student_enrolment)
SELECT semester_name FROM semesters WHERE semester_id NOT IN (SELECT semester_id FROM student_enrolment)
SELECT semester_name FROM semesters WHERE semester_id NOT IN (SELECT semester_id FROM student_enrolment)
SELECT semester_name FROM semesters WHERE semester_id NOT IN (SELECT semester_id FROM student_enrolment)
SELECT semester_name FROM semesters WHERE semester_id NOT IN (SELECT semester_id FROM student_enrolment)
SELECT semester_name FROM semesters WHERE semester_id NOT IN (SELECT semester_id FROM student_enrolment)
SELECT semester_name FROM semesters WHERE semester_id NOT IN (SELECT semester_id FROM student_enrolment)",SELECT semester_name FROM semesters WHERE semester_id NOT IN (SELECT semester_id FROM student_enrolment),True,1.0
331,264,Count the number of employees for each city.,employee_hire_evaluation,medium,"SELECT count(*) ,  city FROM employee GROUP BY city",7,"SELECT city, COUNT(employee_id) AS number_of_employees FROM (     SELECT e.employee_id, e.city     FROM employee e     JOIN hiring h ON e.employee_id = h.employee_id ) GROUP BY city
SELECT city, COUNT(employee_id) AS number_of_employees FROM (     SELECT e.employee_id, e.city     FROM employee e     JOIN hiring h ON e.employee_id = h.employee_id ) GROUP BY city
SELECT city, COUNT(employee_id) AS number_of_employees FROM (     SELECT e.employee_id, e.city     FROM employee e     JOIN hiring h ON e.employee_id = h.employee_id ) GROUP BY city
SELECT city, COUNT(employee_id) AS number_of_employees FROM (     SELECT e.employee_id, e.city     FROM employee e     JOIN hiring h ON e.employee_id = h.employee_id ) GROUP BY city
SELECT city, COUNT(employee_id) AS number_of_employees FROM (     SELECT e.employee_id, e.city     FROM employee e     JOIN hiring h ON e.employee_id = h.employee_id ) GROUP BY city
SELECT city, COUNT(employee_id) AS number_of_employees FROM (     SELECT e.employee_id, e.city     FROM employee e     JOIN hiring h ON e.employee_id = h.employee_id ) GROUP BY city
SELECT city, COUNT(employee_id) AS number_of_employees FROM (     SELECT e.employee_id, e.city     FROM employee e     JOIN hiring h ON e.employee_id = h.employee_id ) GROUP BY city","SELECT city, COUNT(employee_id) AS number_of_employees FROM (     SELECT e.employee_id, e.city     FROM employee e     JOIN hiring h ON e.employee_id = h.employee_id ) GROUP BY city",0,0.0
332,720,What is the name of country that has the shortest life expectancy in Asia?,world_1,hard,"SELECT Name FROM country WHERE Continent  =  ""Asia"" ORDER BY LifeExpectancy LIMIT 1",7,"SELECT name FROM country WHERE continent = 'Asia' ORDER BY lifeexpectancy ASC LIMIT 1
SELECT name FROM country WHERE continent = 'Asia' ORDER BY lifeexpectancy ASC LIMIT 1
SELECT name FROM country WHERE continent = 'Asia' ORDER BY lifeexpectancy ASC LIMIT 1
SELECT name FROM country WHERE continent = 'Asia' ORDER BY lifeexpectancy ASC LIMIT 1
SELECT name FROM country WHERE continent = 'Asia' ORDER BY lifeexpectancy ASC LIMIT 1
SELECT name FROM country WHERE continent = 'Asia' ORDER BY lifeexpectancy ASC LIMIT 1
SELECT name FROM country WHERE continent = 'Asia' ORDER BY lifeexpectancy ASC LIMIT 1",SELECT name FROM country WHERE continent = 'Asia' ORDER BY lifeexpectancy ASC LIMIT 1,True,1.0
333,302,Return the names and template ids for documents that contain the letter w in their description.,cre_Doc_Template_Mgt,medium,"SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE ""%w%""",7,"SELECT d.document_name, t.template_id FROM documents d JOIN templates t ON d.template_id = t.template_id WHERE d.document_description LIKE '%w%'
SELECT d.document_name, t.template_id FROM documents d JOIN templates t ON d.template_id = t.template_id WHERE d.document_description LIKE '%w%'
SELECT d.document_name, t.template_id FROM documents d JOIN templates t ON d.template_id = t.template_id WHERE d.document_description LIKE '%w%'
SELECT d.document_name, t.template_id FROM documents d JOIN templates t ON d.template_id = t.template_id WHERE d.document_description LIKE '%w%'
SELECT d.document_name, t.template_id FROM documents d JOIN templates t ON d.template_id = t.template_id WHERE d.document_description LIKE '%w%'
SELECT d.document_name, t.template_id FROM documents d JOIN templates t ON d.template_id = t.template_id WHERE d.document_description LIKE '%w%'
SELECT d.document_name, t.template_id FROM documents d JOIN templates t ON d.template_id = t.template_id WHERE d.document_description LIKE '%w%'","SELECT d.document_name, t.template_id FROM documents d JOIN templates t ON d.template_id = t.template_id WHERE d.document_description LIKE '%w%'",0,1.0
334,850,Please show the record formats of orchestras in ascending order of count.,orchestra,medium,SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC,7,"SELECT major_record_format FROM orchestra ORDER BY major_record_format ASC
SELECT major_record_format FROM orchestra ORDER BY major_record_format ASC
SELECT major_record_format FROM orchestra ORDER BY major_record_format ASC
SELECT major_record_format FROM orchestra ORDER BY major_record_format ASC
SELECT major_record_format FROM orchestra ORDER BY major_record_format ASC
SELECT major_record_format FROM orchestra ORDER BY major_record_format ASC
SELECT major_record_format FROM orchestra ORDER BY major_record_format ASC",SELECT major_record_format FROM orchestra ORDER BY major_record_format ASC,0,1.0
335,1022,Show the names of singers that have more than one song.,singer,medium,SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1,7,"SELECT DISTINCT s.name FROM singer s JOIN song so ON s.singer_id = so.singer_id WHERE COUNT(so.song_id) > 1
SELECT DISTINCT s.name FROM singer s JOIN song so ON s.singer_id = so.singer_id WHERE COUNT(so.song_id) > 1
SELECT DISTINCT s.name FROM singer s JOIN song so ON s.singer_id = so.singer_id WHERE COUNT(so.song_id) > 1
SELECT DISTINCT s.name FROM singer s JOIN song so ON s.singer_id = so.singer_id WHERE COUNT(so.song_id) > 1
SELECT DISTINCT s.name FROM singer s JOIN song so ON s.singer_id = so.singer_id WHERE COUNT(so.song_id) > 1
SELECT DISTINCT s.name FROM singer s JOIN song so ON s.singer_id = so.singer_id WHERE COUNT(so.song_id) > 1
SELECT DISTINCT s.name FROM singer s JOIN song so ON s.singer_id = so.singer_id WHERE COUNT(so.song_id) > 1",SELECT DISTINCT s.name FROM singer s JOIN song so ON s.singer_id = so.singer_id WHERE COUNT(so.song_id) > 1,0,0.0
336,36,What are the names of the singers and number of concerts for each person?,concert_singer,medium,"SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id",7,"SELECT s.name, COUNT(sc.concert_id) AS number_of_concerts FROM singer s JOIN singer_in_concert sc ON s.singer_id = sc.singer_id GROUP BY s.name
SELECT s.name, COUNT(sc.concert_id) AS number_of_concerts FROM singer s JOIN singer_in_concert sc ON s.singer_id = sc.singer_id GROUP BY s.name
SELECT s.name, COUNT(sc.concert_id) AS number_of_concerts FROM singer s JOIN singer_in_concert sc ON s.singer_id = sc.singer_id GROUP BY s.name
SELECT s.name, COUNT(sc.concert_id) AS number_of_concerts FROM singer s JOIN singer_in_concert sc ON s.singer_id = sc.singer_id GROUP BY s.name
SELECT s.name, COUNT(sc.concert_id) AS number_of_concerts FROM singer s JOIN singer_in_concert sc ON s.singer_id = sc.singer_id GROUP BY s.name
SELECT s.name, COUNT(sc.concert_id) AS number_of_concerts FROM singer s JOIN singer_in_concert sc ON s.singer_id = sc.singer_id GROUP BY s.name
SELECT s.name, COUNT(sc.concert_id) AS number_of_concerts FROM singer s JOIN singer_in_concert sc ON s.singer_id = sc.singer_id GROUP BY s.name","SELECT s.name, COUNT(sc.concert_id) AS number_of_concerts FROM singer s JOIN singer_in_concert sc ON s.singer_id = sc.singer_id GROUP BY s.name",0,1.0
337,899,What are the ids of students who both have friends and are liked?,network_1,hard,SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes,7,"SELECT DISTINCT f.student_id FROM friend f JOIN likes l ON f.friend_id = l.liked_id
SELECT DISTINCT f.student_id FROM friend f JOIN likes l ON f.friend_id = l.liked_id
SELECT DISTINCT f.student_id FROM friend f JOIN likes l ON f.friend_id = l.liked_id
SELECT DISTINCT f.student_id FROM friend f JOIN likes l ON f.friend_id = l.liked_id
SELECT DISTINCT f.student_id FROM friend f JOIN likes l ON f.friend_id = l.liked_id
SELECT DISTINCT f.student_id FROM friend f JOIN likes l ON f.friend_id = l.liked_id
SELECT DISTINCT f.student_id FROM friend f JOIN likes l ON f.friend_id = l.liked_id",SELECT DISTINCT f.student_id FROM friend f JOIN likes l ON f.friend_id = l.liked_id,0,0.0
338,851,"What are the major record formats of orchestras, sorted by their frequency?",orchestra,medium,SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC,7,"SELECT major_record_format, COUNT(*) AS frequency FROM orchestra GROUP BY major_record_format ORDER BY frequency DESC
SELECT major_record_format, COUNT(*) AS frequency FROM orchestra GROUP BY major_record_format ORDER BY frequency DESC
SELECT major_record_format, COUNT(*) AS frequency FROM orchestra GROUP BY major_record_format ORDER BY frequency DESC
SELECT major_record_format, COUNT(*) AS frequency FROM orchestra GROUP BY major_record_format ORDER BY frequency DESC
SELECT major_record_format, COUNT(*) AS frequency FROM orchestra GROUP BY major_record_format ORDER BY frequency DESC
SELECT major_record_format, COUNT(*) AS frequency FROM orchestra GROUP BY major_record_format ORDER BY frequency DESC
SELECT major_record_format, COUNT(*) AS frequency FROM orchestra GROUP BY major_record_format ORDER BY frequency DESC","SELECT major_record_format, COUNT(*) AS frequency FROM orchestra GROUP BY major_record_format ORDER BY frequency DESC",0,0.0
339,943,Find the id and cell phone of the professionals who operate two or more types of treatments.,dog_kennels,medium,"SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2",7,"SELECT p.professional_id, p.cell_number FROM professionals p JOIN treatments t ON p.professional_id = t.professional_id GROUP BY p.professional_id HAVING COUNT(DISTINCT t.treatment_type_code) >= 2
SELECT p.professional_id, p.cell_number FROM professionals p JOIN treatments t ON p.professional_id = t.professional_id GROUP BY p.professional_id HAVING COUNT(DISTINCT t.treatment_type_code) >= 2
SELECT p.professional_id, p.cell_number FROM professionals p JOIN treatments t ON p.professional_id = t.professional_id GROUP BY p.professional_id HAVING COUNT(DISTINCT t.treatment_type_code) >= 2
SELECT p.professional_id, p.cell_number FROM professionals p JOIN treatments t ON p.professional_id = t.professional_id GROUP BY p.professional_id HAVING COUNT(DISTINCT t.treatment_type_code) >= 2
SELECT p.professional_id, p.cell_number FROM professionals p JOIN treatments t ON p.professional_id = t.professional_id GROUP BY p.professional_id HAVING COUNT(DISTINCT t.treatment_type_code) >= 2
SELECT p.professional_id, p.cell_number FROM professionals p JOIN treatments t ON p.professional_id = t.professional_id GROUP BY p.professional_id HAVING COUNT(DISTINCT t.treatment_type_code) >= 2
SELECT p.professional_id, p.cell_number FROM professionals p JOIN treatments t ON p.professional_id = t.professional_id GROUP BY p.professional_id HAVING COUNT(DISTINCT t.treatment_type_code) >= 2","SELECT p.professional_id, p.cell_number FROM professionals p JOIN treatments t ON p.professional_id = t.professional_id GROUP BY p.professional_id HAVING COUNT(DISTINCT t.treatment_type_code) >= 2",0,0.0
340,412,"Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low.",museum_visit,medium,SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC,7,"SELECT v.name FROM visitor v JOIN visit vi ON v.id = vi.visitor_id JOIN museum m ON vi.museum_id = m.museum_id WHERE v.level_of_membership > 4 ORDER BY v.level_of_membership DESC
SELECT v.name FROM visitor v JOIN visit vi ON v.id = vi.visitor_id JOIN museum m ON vi.museum_id = m.museum_id WHERE v.level_of_membership > 4 ORDER BY v.level_of_membership DESC
SELECT v.name FROM visitor v JOIN visit vi ON v.id = vi.visitor_id JOIN museum m ON vi.museum_id = m.museum_id WHERE v.level_of_membership > 4 ORDER BY v.level_of_membership DESC
SELECT v.name FROM visitor v JOIN visit vi ON v.id = vi.visitor_id JOIN museum m ON vi.museum_id = m.museum_id WHERE v.level_of_membership > 4 ORDER BY v.level_of_membership DESC
SELECT v.name FROM visitor v JOIN visit vi ON v.id = vi.visitor_id JOIN museum m ON vi.museum_id = m.museum_id WHERE v.level_of_membership > 4 ORDER BY v.level_of_membership DESC
SELECT v.name FROM visitor v JOIN visit vi ON v.id = vi.visitor_id JOIN museum m ON vi.museum_id = m.museum_id WHERE v.level_of_membership > 4 ORDER BY v.level_of_membership DESC
SELECT v.name FROM visitor v JOIN visit vi ON v.id = vi.visitor_id JOIN museum m ON vi.museum_id = m.museum_id WHERE v.level_of_membership > 4 ORDER BY v.level_of_membership DESC",SELECT v.name FROM visitor v JOIN visit vi ON v.id = vi.visitor_id JOIN museum m ON vi.museum_id = m.museum_id WHERE v.level_of_membership > 4 ORDER BY v.level_of_membership DESC,0,0.0
341,188,What is the total number of airlines?,flight_2,easy,SELECT count(*) FROM AIRLINES,7,"SELECT COUNT(*) FROM airlines
SELECT COUNT(*) FROM airlines
SELECT COUNT(*) FROM airlines
SELECT COUNT(*) FROM airlines
SELECT COUNT(*) FROM airlines
SELECT COUNT(*) FROM airlines
SELECT COUNT(*) FROM airlines",SELECT COUNT(*) FROM airlines,True,1.0
342,1026,List the name of singers that do not have any song.,singer,hard,SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song),7,"SELECT name FROM singer WHERE singer_id NOT IN (SELECT singer_id FROM song)
SELECT name FROM singer WHERE singer_id NOT IN (SELECT singer_id FROM song)
SELECT name FROM singer WHERE singer_id NOT IN (SELECT singer_id FROM song)
SELECT name FROM singer WHERE singer_id NOT IN (SELECT singer_id FROM song)
SELECT name FROM singer WHERE singer_id NOT IN (SELECT singer_id FROM song)
SELECT name FROM singer WHERE singer_id NOT IN (SELECT singer_id FROM song)
SELECT name FROM singer WHERE singer_id NOT IN (SELECT singer_id FROM song)",SELECT name FROM singer WHERE singer_id NOT IN (SELECT singer_id FROM song),True,1.0
343,304,"Return the document id, template id, and description for the document with the name Robbin CV.",cre_Doc_Template_Mgt,medium,"SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  ""Robbin CV""",7,"SELECT documents.document_id, documents.template_id, documents.document_description  FROM documents  JOIN templates ON documents.template_id = templates.template_id  WHERE documents.document_name = 'Robbin CV'
SELECT documents.document_id, documents.template_id, documents.document_description  FROM documents  JOIN templates ON documents.template_id = templates.template_id  WHERE documents.document_name = 'Robbin CV'
SELECT documents.document_id, documents.template_id, documents.document_description  FROM documents  JOIN templates ON documents.template_id = templates.template_id  WHERE documents.document_name = 'Robbin CV'
SELECT d.document_id, d.template_id, d.document_description  FROM documents d  JOIN templates t ON d.template_id = t.template_id  WHERE d.document_name = 'Robbin CV'
SELECT d.document_id, d.template_id, d.document_description  FROM documents d  JOIN templates t ON d.template_id = t.template_id  WHERE d.document_name = 'Robbin CV'
SELECT documents.document_id, documents.template_id, documents.document_description  FROM documents  JOIN templates ON documents.template_id = templates.template_id  WHERE documents.document_name = 'Robbin CV'
SELECT documents.document_id, documents.template_id, documents.document_description  FROM documents  JOIN templates ON documents.template_id = templates.template_id  WHERE documents.document_name = 'Robbin CV'","SELECT documents.document_id, documents.template_id, documents.document_description  FROM documents  JOIN templates ON documents.template_id = templates.template_id  WHERE documents.document_name = 'Robbin CV'",False,1.0
344,636,What are the countries that are not playing cartoons written by Todd Casey?,tvshow,hard,SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey',7,"SELECT DISTINCT country FROM tv_channel WHERE content NOT LIKE '%Todd Casey%' AND series_name = 'cartoons'
SELECT DISTINCT country FROM tv_channel WHERE content NOT LIKE '%Todd Casey%' AND series_name = 'cartoons'
SELECT DISTINCT country FROM tv_channel WHERE content NOT LIKE '%Todd Casey%' AND series_name = 'cartoons'
SELECT DISTINCT country FROM tv_channel WHERE content NOT LIKE '%Todd Casey%' AND series_name = 'cartoons'
SELECT DISTINCT country FROM tv_channel WHERE content NOT LIKE '%Todd Casey%' AND series_name = 'cartoons'
SELECT DISTINCT country FROM tv_channel WHERE content NOT LIKE '%Todd Casey%' AND series_name = 'cartoons'
SELECT DISTINCT country FROM tv_channel WHERE content NOT LIKE '%Todd Casey%' AND content LIKE '%cartoons%'",SELECT DISTINCT country FROM tv_channel WHERE content NOT LIKE '%Todd Casey%' AND series_name = 'cartoons',0,0.0
345,237,Find all airlines that have flights from both airports 'APG' and 'CVO'.,flight_2,extra,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""APG"" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""CVO""",7,"SELECT DISTINCT airline FROM flights WHERE sourceairport IN ('APG', 'CVO') AND destairport IN ('APG', 'CVO') GROUP BY airline HAVING COUNT(DISTINCT sourceairport) = 2 AND COUNT(DISTINCT destairport) = 2
SELECT DISTINCT airline FROM flights WHERE sourceairport IN ('APG', 'CVO') AND destairport IN ('APG', 'CVO') GROUP BY airline HAVING COUNT(DISTINCT sourceairport) = 2 AND COUNT(DISTINCT destairport) = 2
SELECT DISTINCT airline FROM flights WHERE sourceairport IN ('APG', 'CVO') AND destairport IN ('APG', 'CVO') GROUP BY airline HAVING COUNT(DISTINCT sourceairport) = 2 AND COUNT(DISTINCT destairport) = 2
SELECT DISTINCT airline FROM flights WHERE sourceairport IN ('APG', 'CVO') AND destairport IN ('APG', 'CVO') GROUP BY airline HAVING COUNT(DISTINCT sourceairport) = 2 AND COUNT(DISTINCT destairport) = 2
SELECT DISTINCT airline FROM flights WHERE sourceairport IN ('APG', 'CVO') AND destairport IN ('APG', 'CVO') GROUP BY airline HAVING COUNT(DISTINCT sourceairport) = 2 AND COUNT(DISTINCT destairport) = 2
SELECT DISTINCT airline FROM flights WHERE sourceairport IN ('APG', 'CVO') AND destairport IN ('APG', 'CVO') GROUP BY airline HAVING COUNT(DISTINCT sourceairport) = 2 AND COUNT(DISTINCT destairport) = 2
SELECT DISTINCT airline FROM flights WHERE sourceairport IN ('APG', 'CVO') AND destairport IN ('APG', 'CVO') GROUP BY airline HAVING COUNT(DISTINCT sourceairport) = 2 AND COUNT(DISTINCT destairport) = 2","SELECT DISTINCT airline FROM flights WHERE sourceairport IN ('APG', 'CVO') AND destairport IN ('APG', 'CVO') GROUP BY airline HAVING COUNT(DISTINCT sourceairport) = 2 AND COUNT(DISTINCT destairport) = 2",0,1.0
346,126,What is the number of cars with a horsepower greater than 150?,car_1,easy,SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;,7,"SELECT COUNT(*) FROM cars_data WHERE horsepower > 150
SELECT COUNT(*) FROM cars_data WHERE horsepower > 150
SELECT COUNT(*) FROM cars_data WHERE horsepower > 150
SELECT COUNT(*) FROM cars_data WHERE horsepower > 150
SELECT COUNT(*) FROM cars_data WHERE horsepower > 150
SELECT COUNT(*) FROM cars_data WHERE horsepower > 150
SELECT COUNT(*) FROM cars_data WHERE horsepower > 150",SELECT COUNT(*) FROM cars_data WHERE horsepower > 150,True,1.0
347,93,"How many models does each car maker produce? List maker full name, id and the number.",car_1,medium,"SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;",7,"SELECT cm.fullname, cm.id, COUNT(ml.model) AS num_models FROM car_makers cm JOIN model_list ml ON cm.id = ml.maker GROUP BY cm.id
SELECT cm.fullname, cm.id, COUNT(ml.model) AS num_models FROM car_makers cm JOIN model_list ml ON cm.id = ml.maker GROUP BY cm.id
SELECT cm.fullname, cm.id, COUNT(ml.model) AS num_models FROM car_makers cm JOIN model_list ml ON cm.id = ml.maker GROUP BY cm.id
SELECT cm.fullname, cm.id, COUNT(ml.model) AS num_models FROM car_makers cm JOIN model_list ml ON cm.id = ml.maker GROUP BY cm.id
SELECT cm.fullname, cm.id, COUNT(ml.model) AS num_models FROM car_makers cm JOIN model_list ml ON cm.id = ml.maker GROUP BY cm.id
SELECT cm.fullname, cm.id, COUNT(ml.model) AS num_models FROM car_makers cm JOIN model_list ml ON cm.id = ml.maker GROUP BY cm.id
SELECT cm.fullname, cm.id, COUNT(ml.model) AS num_models FROM car_makers cm JOIN model_list ml ON cm.id = ml.maker GROUP BY cm.id","SELECT cm.fullname, cm.id, COUNT(ml.model) AS num_models FROM car_makers cm JOIN model_list ml ON cm.id = ml.maker GROUP BY cm.id",0,1.0
348,778,What are the country codes for countries that do not speak English?,world_1,hard,"SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  ""English""",7,"SELECT code FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English')
SELECT code FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English')
SELECT code FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English')
SELECT code FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English')
SELECT code FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English')
SELECT code FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English')
SELECT code FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English')",SELECT code FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English'),0,0.0
349,700,List the area codes in which voters voted both for the contestant 'Tabatha Gehling' and the contestant 'Kelly Clauss'.,voter_1,extra,SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss',7,"SELECT DISTINCT v.area_code FROM votes v JOIN contestants c1 ON v.contestant_number = c1.contestant_number AND c1.contestant_name = 'Tabatha Gehling' JOIN contestants c2 ON v.contestant_number = c2.contestant_number AND c2.contestant_name = 'Kelly Clauss' WHERE v.state IN (SELECT state FROM area_code_state WHERE area_code IN (SELECT area_code FROM votes WHERE contestant_number = c1.contestant_number)) AND v.state IN (SELECT state FROM area_code_state WHERE area_code IN (SELECT area_code FROM votes WHERE contestant_number = c2.contestant_number))
SELECT DISTINCT v1.area_code FROM votes v1 JOIN votes v2 ON v1.phone_number = v2.phone_number WHERE v1.contestant_number IN (     SELECT contestant_number     FROM contestants     WHERE contestant_name = 'Tabatha Gehling' ) AND v2.contestant_number IN (     SELECT contestant_number     FROM contestants     WHERE contestant_name = 'Kelly Clauss' ) AND v1.state = v2.state
SELECT DISTINCT v.area_code FROM votes v JOIN contestants c1 ON v.contestant_number = c1.contestant_number AND c1.contestant_name = 'Tabatha Gehling' JOIN contestants c2 ON v.contestant_number = c2.contestant_number AND c2.contestant_name = 'Kelly Clauss' WHERE v.state IN (SELECT state FROM area_code_state WHERE area_code IN (SELECT area_code FROM votes WHERE contestant_number = c1.contestant_number)) AND v.state IN (SELECT state FROM area_code_state WHERE area_code IN (SELECT area_code FROM votes WHERE contestant_number = c2.contestant_number))
SELECT DISTINCT v.area_code FROM votes v JOIN contestants c1 ON v.contestant_number = c1.contestant_number AND c1.contestant_name = 'Tabatha Gehling' JOIN contestants c2 ON v.contestant_number = c2.contestant_number AND c2.contestant_name = 'Kelly Clauss' WHERE v.state IN (SELECT state FROM area_code_state WHERE area_code IN (SELECT area_code FROM votes WHERE contestant_number = c1.contestant_number)) AND v.state IN (SELECT state FROM area_code_state WHERE area_code IN (SELECT area_code FROM votes WHERE contestant_number = c2.contestant_number))
SELECT DISTINCT v.area_code FROM votes v JOIN contestants c1 ON v.contestant_number = c1.contestant_number AND c1.contestant_name = 'Tabatha Gehling' JOIN contestants c2 ON v.contestant_number = c2.contestant_number AND c2.contestant_name = 'Kelly Clauss' WHERE v.state IN (SELECT state FROM area_code_state WHERE area_code IN (SELECT area_code FROM votes WHERE contestant_number = c1.contestant_number)) AND v.state IN (SELECT state FROM area_code_state WHERE area_code IN (SELECT area_code FROM votes WHERE contestant_number = c2.contestant_number))
SELECT DISTINCT v1.area_code FROM votes v1 JOIN votes v2 ON v1.phone_number = v2.phone_number WHERE v1.contestant_number IN (     SELECT contestant_number     FROM contestants     WHERE contestant_name = 'Tabatha Gehling' ) AND v2.contestant_number IN (     SELECT contestant_number     FROM contestants     WHERE contestant_name = 'Kelly Clauss' ) AND v1.state = v2.state
SELECT DISTINCT v1.area_code FROM votes v1 JOIN votes v2 ON v1.phone_number = v2.phone_number WHERE v1.contestant_number IN (     SELECT contestant_number     FROM contestants     WHERE contestant_name = 'Tabatha Gehling' ) AND v2.contestant_number IN (     SELECT contestant_number     FROM contestants     WHERE contestant_name = 'Kelly Clauss' ) AND v1.state = v2.state",SELECT DISTINCT v.area_code FROM votes v JOIN contestants c1 ON v.contestant_number = c1.contestant_number AND c1.contestant_name = 'Tabatha Gehling' JOIN contestants c2 ON v.contestant_number = c2.contestant_number AND c2.contestant_name = 'Kelly Clauss' WHERE v.state IN (SELECT state FROM area_code_state WHERE area_code IN (SELECT area_code FROM votes WHERE contestant_number = c1.contestant_number)) AND v.state IN (SELECT state FROM area_code_state WHERE area_code IN (SELECT area_code FROM votes WHERE contestant_number = c2.contestant_number)),0,0.0
350,881,Which grades have 4 or more high schoolers?,network_1,easy,SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4,7,"SELECT grade FROM highschooler WHERE grade >= 4
SELECT grade FROM highschooler WHERE grade >= 4
SELECT grade FROM highschooler WHERE grade >= 4
SELECT grade FROM highschooler WHERE grade >= 4
SELECT DISTINCT grade FROM highschooler WHERE grade >= 4
SELECT grade FROM highschooler WHERE grade >= 4
SELECT grade FROM highschooler WHERE grade >= 4",SELECT grade FROM highschooler WHERE grade >= 4,0,1.0
351,989,Tell me the age of the oldest dog.,dog_kennels,easy,SELECT max(age) FROM Dogs,7,"SELECT MAX(age) FROM dogs
SELECT MAX(age) FROM dogs
SELECT MAX(age) FROM dogs
SELECT MAX(age) FROM dogs
SELECT MAX(age) FROM dogs
SELECT MAX(age) FROM dogs
SELECT MAX(age) FROM dogs",SELECT MAX(age) FROM dogs,True,1.0
352,784,Which cities are in European countries where English is not the official language?,world_1,extra,SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English'),7,"SELECT city.name FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode WHERE countrylanguage.language != 'English' AND countrylanguage.isofficial = 'False'
SELECT city.name FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode WHERE countrylanguage.language != 'English' AND countrylanguage.isofficial = 'False'
SELECT city.name FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode WHERE countrylanguage.language != 'English' AND countrylanguage.isofficial = 'False'
SELECT city.name FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode WHERE countrylanguage.language != 'English' AND countrylanguage.isofficial = 'False'
SELECT city.name FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode WHERE countrylanguage.language != 'English' AND countrylanguage.isofficial = 'False'
SELECT city.name FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode WHERE countrylanguage.language != 'English' AND countrylanguage.isofficial = 'False'
SELECT city.name FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode WHERE countrylanguage.language != 'English' AND countrylanguage.isofficial = 'False'",SELECT city.name FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode WHERE countrylanguage.language != 'English' AND countrylanguage.isofficial = 'False',0,0.0
353,923,"Find the id, last name and cell phone of the professionals who live in the state of Indiana or have performed more than two treatments.",dog_kennels,extra,"SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2",7,"SELECT id, last_name, cell_phone  FROM professionals  WHERE state = 'Indiana' OR performed_treatments > 2
SELECT id, last_name, cell_phone  FROM professionals  WHERE state = 'Indiana' OR performed_treatments > 2
SELECT id, last_name, cell_phone  FROM professionals  WHERE state = 'Indiana' OR performed_treatments > 2
SELECT id, last_name, cell_phone  FROM professionals  WHERE state = 'Indiana' OR performed_treatments > 2
SELECT id, last_name, cell_phone  FROM professionals  WHERE state = 'Indiana' OR performed_treatments > 2
SELECT id, last_name, cell_phone  FROM professionals  WHERE state = 'Indiana' OR performed_treatments > 2
SELECT id, last_name, cell_phone  FROM professionals  WHERE state = 'Indiana' OR performed_treatments > 2","SELECT id, last_name, cell_phone  FROM professionals  WHERE state = 'Indiana' OR performed_treatments > 2",0,0.0
354,107,Which of the countries has the most car makers? List the country name.,car_1,extra,SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;,7,"SELECT c.countryname FROM countries c JOIN car_makers cm ON c.countryid = cm.country GROUP BY c.countryname ORDER BY COUNT(cm.id) DESC LIMIT 1
SELECT c.countryname FROM countries c JOIN car_makers cm ON c.countryid = cm.country GROUP BY c.countryname ORDER BY COUNT(cm.id) DESC LIMIT 1
SELECT c.countryname FROM countries c JOIN car_makers cm ON c.countryid = cm.country GROUP BY c.countryname ORDER BY COUNT(cm.id) DESC LIMIT 1
SELECT c.countryname FROM countries c JOIN car_makers cm ON c.countryid = cm.country GROUP BY c.countryname ORDER BY COUNT(cm.id) DESC LIMIT 1
SELECT c.countryname FROM countries c JOIN car_makers cm ON c.countryid = cm.country GROUP BY c.countryname ORDER BY COUNT(cm.id) DESC LIMIT 1
SELECT c.countryname FROM countries c JOIN car_makers cm ON c.countryid = cm.country GROUP BY c.countryname ORDER BY COUNT(cm.id) DESC LIMIT 1
SELECT c.countryname FROM countries c JOIN car_makers cm ON c.countryid = cm.country GROUP BY c.countryname ORDER BY COUNT(cm.id) DESC LIMIT 1",SELECT c.countryname FROM countries c JOIN car_makers cm ON c.countryid = cm.country GROUP BY c.countryname ORDER BY COUNT(cm.id) DESC LIMIT 1,0,1.0
355,257,Find the name of airports which do not have any flight in and out.,flight_2,hard,SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights),7,"SELECT DISTINCT a.airportname FROM airports a LEFT JOIN flights f1 ON a.airportcode = f1.sourceairport LEFT JOIN flights f2 ON a.airportcode = f2.destairport WHERE f1.sourceairport IS NULL AND f2.destairport IS NULL
SELECT DISTINCT a.airportname FROM airports a LEFT JOIN flights f1 ON a.airportcode = f1.sourceairport LEFT JOIN flights f2 ON a.airportcode = f2.destairport WHERE f1.sourceairport IS NULL AND f2.destairport IS NULL
SELECT DISTINCT a.airportname FROM airports a LEFT JOIN flights f1 ON a.airportcode = f1.sourceairport LEFT JOIN flights f2 ON a.airportcode = f2.destairport WHERE f1.sourceairport IS NULL AND f2.destairport IS NULL
SELECT DISTINCT a.airportname FROM airports a LEFT JOIN flights f1 ON a.airportcode = f1.sourceairport LEFT JOIN flights f2 ON a.airportcode = f2.destairport WHERE f1.sourceairport IS NULL AND f2.destairport IS NULL
SELECT DISTINCT a.airportname FROM airports a LEFT JOIN flights f1 ON a.airportcode = f1.sourceairport LEFT JOIN flights f2 ON a.airportcode = f2.destairport WHERE f1.sourceairport IS NULL AND f2.destairport IS NULL
SELECT DISTINCT a.airportname FROM airports a LEFT JOIN flights f1 ON a.airportcode = f1.sourceairport LEFT JOIN flights f2 ON a.airportcode = f2.destairport WHERE f1.sourceairport IS NULL AND f2.destairport IS NULL
SELECT DISTINCT a.airportname FROM airports a LEFT JOIN flights f1 ON a.airportcode = f1.sourceairport LEFT JOIN flights f2 ON a.airportcode = f2.destairport WHERE f1.sourceairport IS NULL AND f2.destairport IS NULL",SELECT DISTINCT a.airportname FROM airports a LEFT JOIN flights f1 ON a.airportcode = f1.sourceairport LEFT JOIN flights f2 ON a.airportcode = f2.destairport WHERE f1.sourceairport IS NULL AND f2.destairport IS NULL,0,1.0
356,430,How many players are there?,wta_1,easy,SELECT count(*) FROM players,7,"SELECT COUNT(*) FROM players
SELECT COUNT(*) FROM players
SELECT COUNT(*) FROM players
SELECT COUNT(*) FROM players
SELECT COUNT(*) FROM players
SELECT COUNT(*) FROM players
SELECT COUNT(*) FROM players",SELECT COUNT(*) FROM players,True,1.0
357,361,Show paragraph details for paragraph with text 'Korea ' .,cre_Doc_Template_Mgt,medium,select other_details from paragraphs where paragraph_text like 'korea',7,"SELECT      p.paragraph_id,      p.document_id,      p.paragraph_text,      p.other_details,      d.document_name,      d.document_description,      d.other_details AS doc_other_details,      t.template_id,      t.version_number,      t.template_type_code,      t.date_effective_from,      t.date_effective_to,      t.template_details,      tt.template_type_code AS template_type_code,      tt.template_type_description  FROM      paragraphs p  JOIN      documents d ON p.document_id = d.document_id  JOIN      templates t ON d.template_id = t.template_id  JOIN      ref_template_types tt ON t.template_type_code = tt.template_type_code  WHERE      p.paragraph_text = 'Korea'  LIMIT 1
SELECT      p.paragraph_id,      p.document_id,      p.paragraph_text,      p.other_details,      d.document_name,      d.document_description,      d.other_details AS document_other_details,      t.template_id,      t.version_number,      t.template_type_code,      t.date_effective_from,      t.date_effective_to,      t.template_details,      tt.template_type_code AS template_type_code,      tt.template_type_description  FROM      paragraphs p  JOIN      documents d ON p.document_id = d.document_id  JOIN      templates t ON d.template_id = t.template_id  JOIN      ref_template_types tt ON t.template_type_code = tt.template_type_code  WHERE      p.paragraph_text = 'Korea'  LIMIT 1
SELECT      p.paragraph_id,      p.document_id,      p.paragraph_text,      p.other_details,      t.template_id,      t.version_number,      t.template_type_code,      t.date_effective_from,      t.date_effective_to,      t.template_details FROM      paragraphs p JOIN      documents d ON p.document_id = d.document_id JOIN      templates t ON d.template_id = t.template_id WHERE      p.paragraph_text = 'Korea' 
SELECT      p.paragraph_id,      p.document_id,      p.paragraph_text,      p.other_details,      d.document_name,      d.document_description,      d.other_details AS document_other_details,      t.template_id,      t.version_number,      t.template_type_code,      t.date_effective_from,      t.date_effective_to,      t.template_details,      tt.template_type_code AS template_type_code,      tt.template_type_description  FROM      paragraphs p  JOIN      documents d ON p.document_id = d.document_id  JOIN      templates t ON d.template_id = t.template_id  JOIN      ref_template_types tt ON t.template_type_code = tt.template_type_code  WHERE      p.paragraph_text = 'Korea'  LIMIT 1
SELECT      p.paragraph_id,      p.document_id,      p.paragraph_text,      p.other_details,      d.document_name,      d.document_description,      d.other_details AS doc_other_details,      t.template_id,      t.version_number,      t.template_type_code,      t.date_effective_from,      t.date_effective_to,      t.template_details,      tt.template_type_code AS template_type_code,      tt.template_type_description  FROM      paragraphs p  JOIN      documents d ON p.document_id = d.document_id  JOIN      templates t ON d.template_id = t.template_id  JOIN      ref_template_types tt ON t.template_type_code = tt.template_type_code  WHERE      p.paragraph_text = 'Korea'  LIMIT 1
SELECT      p.paragraph_id,      p.document_id,      p.paragraph_text,      p.other_details,      d.document_name,      d.document_description,      d.other_details AS document_other_details,      t.template_id,      t.version_number,      t.template_type_code,      t.date_effective_from,      t.date_effective_to,      t.template_details,      tt.template_type_code AS template_type_code,      tt.template_type_description  FROM      paragraphs p  JOIN      documents d ON p.document_id = d.document_id  JOIN      templates t ON d.template_id = t.template_id  JOIN      ref_template_types tt ON t.template_type_code = tt.template_type_code  WHERE      p.paragraph_text = 'Korea'  LIMIT 1
SELECT      p.paragraph_id,      p.document_id,      p.paragraph_text,      p.other_details,      d.document_name,      d.document_description,      d.other_details AS document_other_details,      t.template_id,      t.version_number,      t.template_type_code,      t.date_effective_from,      t.date_effective_to,      t.template_details,      tt.template_type_code AS template_type_code,      tt.template_type_description  FROM      paragraphs p  JOIN      documents d ON p.document_id = d.document_id  JOIN      templates t ON d.template_id = t.template_id  JOIN      ref_template_types tt ON t.template_type_code = tt.template_type_code  WHERE      p.paragraph_text = 'Korea'  LIMIT 1","SELECT      p.paragraph_id,      p.document_id,      p.paragraph_text,      p.other_details,      d.document_name,      d.document_description,      d.other_details AS document_other_details,      t.template_id,      t.version_number,      t.template_type_code,      t.date_effective_from,      t.date_effective_to,      t.template_details,      tt.template_type_code AS template_type_code,      tt.template_type_description  FROM      paragraphs p  JOIN      documents d ON p.document_id = d.document_id  JOIN      templates t ON d.template_id = t.template_id  JOIN      ref_template_types tt ON t.template_type_code = tt.template_type_code  WHERE      p.paragraph_text = 'Korea'  LIMIT 1",0,0.0
358,410,What are the names of the teachers whose courses have not been arranged?,course_teach,hard,SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange),7,"SELECT teacher.name FROM teacher LEFT JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id WHERE course_arrange.course_id IS NULL
SELECT teacher.name FROM teacher LEFT JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id WHERE course_arrange.course_id IS NULL
SELECT teacher.name FROM teacher LEFT JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id WHERE course_arrange.course_id IS NULL
SELECT teacher.name FROM teacher LEFT JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id WHERE course_arrange.course_id IS NULL
SELECT teacher.name FROM teacher LEFT JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id WHERE course_arrange.course_id IS NULL
SELECT teacher.name FROM teacher LEFT JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id WHERE course_arrange.course_id IS NULL
SELECT teacher.name FROM teacher LEFT JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id WHERE course_arrange.course_id IS NULL",SELECT teacher.name FROM teacher LEFT JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id WHERE course_arrange.course_id IS NULL,0,1.0
359,236,Which airlines have a flight with destination airport AHD?,flight_2,medium,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  ""AHD""",7,"SELECT DISTINCT airline FROM flights JOIN airlines ON flights.airline = airlines.uid WHERE destairport = 'AHD'
SELECT DISTINCT airline FROM flights JOIN airlines ON flights.airline = airlines.uid WHERE destairport = 'AHD'
SELECT DISTINCT airline FROM flights JOIN airlines ON flights.airline = airlines.uid WHERE destairport = 'AHD'
SELECT DISTINCT airline FROM flights JOIN airlines ON flights.airline = airlines.uid WHERE destairport = 'AHD'
SELECT DISTINCT airline FROM flights JOIN airlines ON flights.airline = airlines.uid WHERE destairport = 'AHD'
SELECT DISTINCT airline FROM flights JOIN airlines ON flights.airline = airlines.uid WHERE destairport = 'AHD'
SELECT DISTINCT airline FROM flights JOIN airlines ON flights.airline = airlines.uid WHERE destairport = 'AHD'",SELECT DISTINCT airline FROM flights JOIN airlines ON flights.airline = airlines.uid WHERE destairport = 'AHD',0,0.0
360,548,What is the name of the course with the most students enrolled?,student_transcripts_tracking,extra,SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1,7,"SELECT course_name  FROM courses  JOIN student_enrolment_courses ON courses.course_id = student_enrolment_courses.course_id  JOIN student_enrolment ON student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id  GROUP BY courses.course_id  ORDER BY COUNT
SELECT course_name  FROM courses  JOIN student_enrolment_courses ON courses.course_id = student_enrolment_courses.course_id  JOIN student_enrolment ON student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id  GROUP BY courses.course_id  ORDER BY COUNT
SELECT course_name  FROM courses  JOIN student_enrolment_courses ON courses.course_id = student_enrolment_courses.course_id  JOIN student_enrolment ON student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id  GROUP BY courses.course_id  ORDER BY COUNT
SELECT course_name  FROM courses  JOIN student_enrolment_courses ON courses.course_id = student_enrolment_courses.course_id  JOIN student_enrolment ON student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id  GROUP BY courses.course_id  ORDER BY COUNT
SELECT course_name  FROM courses  JOIN student_enrolment_courses ON courses.course_id = student_enrolment_courses.course_id  JOIN student_enrolment ON student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id  GROUP BY courses.course_id  ORDER BY COUNT
SELECT course_name  FROM courses  JOIN student_enrolment_courses ON courses.course_id = student_enrolment_courses.course_id  JOIN student_enrolment ON student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id  GROUP BY courses.course_id  ORDER BY COUNT
SELECT course_name  FROM courses  JOIN student_enrolment_courses ON courses.course_id = student_enrolment_courses.course_id  JOIN student_enrolment ON student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id  GROUP BY courses.course_id  ORDER BY COUNT",SELECT course_name  FROM courses  JOIN student_enrolment_courses ON courses.course_id = student_enrolment_courses.course_id  JOIN student_enrolment ON student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id  GROUP BY courses.course_id  ORDER BY COUNT,0,0.0
361,224,Which city is the most frequent source airport?,flight_2,extra,SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1,7,"SELECT sourceairport, COUNT(*) AS frequency FROM flights GROUP BY sourceairport ORDER BY frequency DESC LIMIT 1
SELECT sourceairport, COUNT(*) AS frequency FROM flights GROUP BY sourceairport ORDER BY frequency DESC LIMIT 1
SELECT sourceairport, COUNT(*) AS frequency FROM flights GROUP BY sourceairport ORDER BY frequency DESC LIMIT 1
SELECT sourceairport, COUNT(*) AS frequency FROM flights GROUP BY sourceairport ORDER BY frequency DESC LIMIT 1
SELECT sourceairport, COUNT(*) AS frequency FROM flights GROUP BY sourceairport ORDER BY frequency DESC LIMIT 1
SELECT sourceairport, COUNT(*) AS frequency FROM flights GROUP BY sourceairport ORDER BY frequency DESC LIMIT 1
SELECT sourceairport, COUNT(*) AS frequency FROM flights GROUP BY sourceairport ORDER BY frequency DESC LIMIT 1","SELECT sourceairport, COUNT(*) AS frequency FROM flights GROUP BY sourceairport ORDER BY frequency DESC LIMIT 1",0,0.0
362,754,What are the countries where either English or Dutch is the official language ?,world_1,extra,"select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  ""english"" and isofficial  =  ""t"" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  ""dutch"" and isofficial  =  ""t""",7,"SELECT DISTINCT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language IN ('English', 'Dutch')
SELECT DISTINCT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language IN ('English', 'Dutch')
SELECT DISTINCT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language IN ('English', 'Dutch')
SELECT DISTINCT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language IN ('English', 'Dutch')
SELECT DISTINCT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language IN ('English', 'Dutch')
SELECT DISTINCT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language IN ('English', 'Dutch')
SELECT DISTINCT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language IN ('English', 'Dutch')","SELECT DISTINCT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language IN ('English', 'Dutch')",0,0.0
363,30,Show countries where a singer above age 40 and a singer below 30 are from.,concert_singer,hard,SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30,7,"SELECT DISTINCT c.country FROM singer s1 JOIN singer s2 ON s1.country = s2.country WHERE s1.age > 40 AND s2.age < 30
SELECT DISTINCT c.country FROM singer s1 JOIN singer s2 ON s1.country = s2.country WHERE s1.age > 40 AND s2.age < 30
SELECT DISTINCT c.country FROM singer s1 JOIN singer s2 ON s1.country = s2.country WHERE s1.age > 40 AND s2.age < 30
SELECT DISTINCT c.country FROM singer s1 JOIN singer s2 ON s1.country = s2.country WHERE s1.age > 40 AND s2.age < 30
SELECT DISTINCT c.country FROM singer s1 JOIN singer s2 ON s1.country = s2.country WHERE s1.age > 40 AND s2.age < 30
SELECT DISTINCT c.country FROM singer s1 JOIN singer s2 ON s1.country = s2.country WHERE s1.age > 40 AND s2.age < 30
SELECT DISTINCT c.country FROM singer s1 JOIN singer s2 ON s1.country = s2.country WHERE s1.age > 40 AND s2.age < 30",SELECT DISTINCT c.country FROM singer s1 JOIN singer s2 ON s1.country = s2.country WHERE s1.age > 40 AND s2.age < 30,0,0.0
364,223,Which city has most number of departing flights?,flight_2,extra,SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1,7,"SELECT city, COUNT(*) AS num_departing_flights FROM flights JOIN airports ON flights.sourceairport = airports.airportcode GROUP BY city ORDER BY num_departing_flights DESC LIMIT 1
SELECT city, COUNT(*) AS num_departing_flights FROM flights JOIN airports ON flights.sourceairport = airports.airportcode GROUP BY city ORDER BY num_departing_flights DESC LIMIT 1
SELECT city, COUNT(flights.flightno) AS departing_flights FROM flights JOIN airports ON flights.sourceairport = airports.airportcode GROUP BY city ORDER BY departing_flights DESC LIMIT 1
SELECT city, COUNT(*) AS num_departing_flights FROM flights JOIN airports ON flights.sourceairport = airports.airportcode GROUP BY city ORDER BY num_departing_flights DESC LIMIT 1
SELECT city, COUNT(*) AS num_departing_flights FROM flights JOIN airports ON flights.sourceairport = airports.airportcode GROUP BY city ORDER BY num_departing_flights DESC LIMIT 1
SELECT city, COUNT(*) AS num_departing_flights FROM flights JOIN airports ON flights.sourceairport = airports.airportcode GROUP BY city ORDER BY num_departing_flights DESC LIMIT 1
SELECT city, COUNT(*) AS num_departing_flights FROM flights JOIN airports ON flights.sourceairport = airports.airportcode GROUP BY city ORDER BY num_departing_flights DESC LIMIT 1","SELECT city, COUNT(*) AS num_departing_flights FROM flights JOIN airports ON flights.sourceairport = airports.airportcode GROUP BY city ORDER BY num_departing_flights DESC LIMIT 1",0,1.0
365,474,How many players are from each country?,wta_1,medium,"SELECT count(*) ,  country_code FROM players GROUP BY country_code",7,"SELECT country_code, COUNT(*) AS player_count FROM players GROUP BY country_code
SELECT country_code, COUNT(*) AS player_count FROM players GROUP BY country_code
SELECT country_code, COUNT(*) AS player_count FROM players GROUP BY country_code
SELECT country_code, COUNT(*) AS player_count FROM players GROUP BY country_code
SELECT country_code, COUNT(*) AS player_count FROM players GROUP BY country_code
SELECT country_code, COUNT(*) AS player_count FROM players GROUP BY country_code
SELECT country_code, COUNT(*) AS player_count FROM players GROUP BY country_code","SELECT country_code, COUNT(*) AS player_count FROM players GROUP BY country_code",0,0.0
366,978,How many dogs have not gone through any treatment?,dog_kennels,extra,SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments ),7,"SELECT COUNT(*) FROM dogs WHERE treatments IS NULL
SELECT COUNT(*) FROM dogs WHERE treatments IS NULL
SELECT COUNT(*) FROM dogs WHERE treatments IS NULL
SELECT COUNT(*) FROM dogs WHERE treatments IS NULL
SELECT COUNT(*) FROM dogs WHERE treatments IS NULL
SELECT COUNT(*) FROM dogs WHERE treatments IS NULL
SELECT COUNT(*) FROM dogs WHERE treatments IS NULL",SELECT COUNT(*) FROM dogs WHERE treatments IS NULL,0,0.0
367,435,Find the average age of losers and winners of all matches.,wta_1,medium,"SELECT avg(loser_age) ,  avg(winner_age) FROM matches",7,"SELECT AVG(loser_age) AS avg_loser_age, AVG(winner_age) AS avg_winner_age FROM matches
SELECT AVG(loser_age) AS avg_loser_age, AVG(winner_age) AS avg_winner_age FROM matches
SELECT AVG(loser_age) AS avg_loser_age, AVG(winner_age) AS avg_winner_age FROM matches
SELECT AVG(loser_age) AS avg_loser_age, AVG(winner_age) AS avg_winner_age FROM matches
SELECT AVG(loser_age) AS avg_loser_age, AVG(winner_age) AS avg_winner_age FROM matches
SELECT AVG(loser_age) AS avg_loser_age, AVG(winner_age) AS avg_winner_age FROM matches
SELECT AVG(loser_age) AS avg_loser_age, AVG(winner_age) AS avg_winner_age FROM matches","SELECT AVG(loser_age) AS avg_loser_age, AVG(winner_age) AS avg_winner_age FROM matches",0,1.0
368,356,Return the ids corresponding to templates with the description 'Presentation'.,cre_Doc_Template_Mgt,medium,"SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  ""Presentation""",7,"SELECT template_id FROM templates WHERE template_details LIKE '%Presentation%'
SELECT template_id FROM templates WHERE template_details LIKE '%Presentation%'
SELECT template_id FROM templates WHERE template_details LIKE '%Presentation%'
SELECT template_id FROM templates WHERE template_details LIKE '%Presentation%'
SELECT template_id FROM templates WHERE template_details LIKE '%Presentation%'
SELECT template_id FROM templates WHERE template_details LIKE '%Presentation%'
SELECT template_id FROM templates WHERE template_details LIKE '%Presentation%'",SELECT template_id FROM templates WHERE template_details LIKE '%Presentation%',0,0.0
369,998,List the first name of all the professionals along with the description of the treatment they have done.,dog_kennels,medium,"SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code",7,"SELECT p.first_name, t.treatment_type_description FROM professionals p JOIN treatments t ON p.professional_id = t.professional_id
SELECT p.first_name, t.treatment_type_description FROM professionals p JOIN treatments t ON p.professional_id = t.professional_id
SELECT p.first_name, t.treatment_type_description FROM professionals p JOIN treatments t ON p.professional_id = t.professional_id
SELECT p.first_name, t.treatment_type_description FROM professionals p JOIN treatments t ON p.professional_id = t.professional_id
SELECT p.first_name, t.treatment_type_description FROM professionals p JOIN treatments t ON p.professional_id = t.professional_id
SELECT p.first_name, t.treatment_type_description FROM professionals p JOIN treatments t ON p.professional_id = t.professional_id
SELECT p.first_name, t.treatment_type_description FROM professionals p JOIN treatments t ON p.professional_id = t.professional_id","SELECT p.first_name, t.treatment_type_description FROM professionals p JOIN treatments t ON p.professional_id = t.professional_id",0,0.0
370,146,"In 1980, how many cars were made?",car_1,easy,SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;,7,"SELECT SUM(cars_data.id) FROM cars_data WHERE cars_data.year = 1980
SELECT SUM(cars_data.id) FROM cars_data WHERE cars_data.year = 1980
SELECT SUM(cars_data.id) FROM cars_data WHERE cars_data.year = 1980
SELECT SUM(cars_data.id) FROM cars_data WHERE cars_data.year = 1980
SELECT SUM(cars_data.id) FROM cars_data WHERE cars_data.year = 1980
SELECT SUM(cars_data.id) FROM cars_data WHERE cars_data.year = 1980
SELECT SUM(cars_data.id) FROM cars_data WHERE cars_data.year = 1980",SELECT SUM(cars_data.id) FROM cars_data WHERE cars_data.year = 1980,0,0.0
371,73,Find the average weight for each pet type.,pets_1,medium,"SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype",7,"SELECT pettype, AVG(weight) AS average_weight FROM pets GROUP BY pettype
SELECT pettype, AVG(weight) AS average_weight FROM pets GROUP BY pettype
SELECT pettype, AVG(weight) AS average_weight FROM pets GROUP BY pettype
SELECT pettype, AVG(weight) AS average_weight FROM pets GROUP BY pettype
SELECT pettype, AVG(weight) AS average_weight FROM pets GROUP BY pettype
SELECT pettype, AVG(weight) AS average_weight FROM pets GROUP BY pettype
SELECT pettype, AVG(weight) AS average_weight FROM pets GROUP BY pettype","SELECT pettype, AVG(weight) AS average_weight FROM pets GROUP BY pettype",0,0.0
372,374,Return the id and name of the document with the most paragraphs.,cre_Doc_Template_Mgt,extra,"SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT d.document_id, d.document_name FROM documents d JOIN paragraphs p ON d.document_id = p.document_id GROUP BY d.document_id ORDER BY COUNT(p.paragraph_id) DESC LIMIT 1
SELECT d.document_id, d.document_name FROM documents d JOIN paragraphs p ON d.document_id = p.document_id GROUP BY d.document_id ORDER BY COUNT(p.paragraph_id) DESC LIMIT 1
SELECT d.document_id, d.document_name FROM documents d JOIN paragraphs p ON d.document_id = p.document_id GROUP BY d.document_id ORDER BY COUNT(p.paragraph_id) DESC LIMIT 1
SELECT d.document_id, d.document_name FROM documents d JOIN paragraphs p ON d.document_id = p.document_id GROUP BY d.document_id ORDER BY COUNT(p.paragraph_id) DESC LIMIT 1
SELECT d.document_id, d.document_name FROM documents d JOIN paragraphs p ON d.document_id = p.document_id GROUP BY d.document_id ORDER BY COUNT(p.paragraph_id) DESC LIMIT 1
SELECT d.document_id, d.document_name FROM documents d JOIN paragraphs p ON d.document_id = p.document_id GROUP BY d.document_id ORDER BY COUNT(p.paragraph_id) DESC LIMIT 1
SELECT d.document_id, d.document_name FROM documents d JOIN paragraphs p ON d.document_id = p.document_id GROUP BY d.document_id ORDER BY COUNT(p.paragraph_id) DESC LIMIT 1","SELECT d.document_id, d.document_name FROM documents d JOIN paragraphs p ON d.document_id = p.document_id GROUP BY d.document_id ORDER BY COUNT(p.paragraph_id) DESC LIMIT 1",0,1.0
373,758,Which languages are spoken by only one country in republic governments?,world_1,hard,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  ""Republic"" GROUP BY T2.Language HAVING COUNT(*)  =  1",7,"SELECT language FROM countrylanguage WHERE isofficial = 'T' GROUP BY language HAVING COUNT(DISTINCT countrycode) = 1 AND COUNT(*) = (SELECT COUNT(countrycode) FROM country WHERE governmentform = 'Republic')
SELECT cl.language  FROM countrylanguage cl  JOIN country c ON cl.countrycode = c.code  WHERE c.governmentform = 'Republic'  GROUP BY cl.language  HAVING COUNT(DISTINCT cl.countrycode) = 1
SELECT language FROM countrylanguage WHERE isofficial = 'T' GROUP BY language HAVING COUNT(DISTINCT countrycode) = 1 AND COUNT(*) = (SELECT COUNT(countrycode) FROM country WHERE governmentform = 'Republic')
SELECT language FROM countrylanguage WHERE isofficial = 'T' GROUP BY language HAVING COUNT(DISTINCT countrycode) = 1 AND COUNT(*) = 1
SELECT language FROM countrylanguage WHERE isofficial = 'T' GROUP BY language HAVING COUNT(DISTINCT countrycode) = 1 AND COUNT(*) = (SELECT COUNT(countrycode) FROM country WHERE governmentform = 'Republic')
SELECT language FROM countrylanguage WHERE isofficial = 'T' GROUP BY language HAVING COUNT(DISTINCT countrycode) = 1 AND COUNT(*) = 1
SELECT language FROM countrylanguage WHERE isofficial = 'T' GROUP BY language HAVING COUNT(DISTINCT countrycode) = 1 AND COUNT(*) = 1",SELECT language FROM countrylanguage WHERE isofficial = 'T' GROUP BY language HAVING COUNT(DISTINCT countrycode) = 1 AND COUNT(*) = (SELECT COUNT(countrycode) FROM country WHERE governmentform = 'Republic'),0,0.0
374,757,What is the language that is used by the largest number of Asian nations?,world_1,extra,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  ""Asia"" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",7,"SELECT language FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE continent = 'Asia') GROUP BY language ORDER BY COUNT(*) DESC LIMIT 1
SELECT language FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE continent = 'Asia') GROUP BY language ORDER BY COUNT(*) DESC LIMIT 1
SELECT language FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE continent = 'Asia') GROUP BY language ORDER BY COUNT(*) DESC LIMIT 1
SELECT language FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE continent = 'Asia') GROUP BY language ORDER BY COUNT(*) DESC LIMIT 1
SELECT language FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE continent = 'Asia') GROUP BY language ORDER BY COUNT(*) DESC LIMIT 1
SELECT language FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE continent = 'Asia') GROUP BY language ORDER BY COUNT(*) DESC LIMIT 1
SELECT language FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE continent = 'Asia') GROUP BY language ORDER BY COUNT(*) DESC LIMIT 1",SELECT language FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE continent = 'Asia') GROUP BY language ORDER BY COUNT(*) DESC LIMIT 1,0,1.0
375,176,What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars?,car_1,extra,"SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;",7,"SELECT cm.id, cm.maker FROM car_makers cm JOIN model_list ml ON cm.id = ml.maker JOIN cars_data cd ON ml.modelid = cd.id GROUP BY cm.id HAVING COUNT(ml.modelid) >= 2 AND COUNT(cd.id) > 3
SELECT cm.id, cm.maker FROM car_makers cm JOIN model_list ml ON cm.id = ml.maker JOIN cars_data cd ON ml.modelid = cd.id GROUP BY cm.id HAVING COUNT(ml.modelid) >= 2 AND COUNT(cd.id) > 3
SELECT cm.id, cm.maker FROM car_makers cm JOIN model_list ml ON cm.id = ml.maker JOIN cars_data cd ON ml.modelid = cd.id GROUP BY cm.id HAVING COUNT(ml.modelid) >= 2 AND COUNT(cd.id) > 3
SELECT cm.id, cm.maker FROM car_makers cm JOIN model_list ml ON cm.id = ml.maker JOIN cars_data cd ON ml.modelid = cd.id GROUP BY cm.id, cm.maker HAVING COUNT(DISTINCT ml.modelid) >= 2 AND COUNT(cd.id) > 3
SELECT cm.id, cm.maker FROM car_makers cm JOIN model_list ml ON cm.id = ml.maker JOIN cars_data cd ON ml.modelid = cd.id GROUP BY cm.id HAVING COUNT(ml.modelid) >= 2 AND COUNT(cd.id) > 3
SELECT cm.id, cm.maker FROM car_makers cm JOIN model_list ml ON cm.id = ml.maker JOIN cars_data cd ON ml.modelid = cd.id GROUP BY cm.id HAVING COUNT(ml.modelid) >= 2 AND COUNT(cd.id) > 3
SELECT cm.id, cm.maker FROM car_makers cm JOIN model_list ml ON cm.id = ml.maker JOIN cars_data cd ON ml.modelid = cd.id GROUP BY cm.id HAVING COUNT(ml.modelid) >= 2 AND COUNT(cd.id) > 3","SELECT cm.id, cm.maker FROM car_makers cm JOIN model_list ml ON cm.id = ml.maker JOIN cars_data cd ON ml.modelid = cd.id GROUP BY cm.id HAVING COUNT(ml.modelid) >= 2 AND COUNT(cd.id) > 3",0,0.0
376,829,"Return the record companies of orchestras, sorted descending by the years in which they were founded.",orchestra,easy,SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC,7,"SELECT DISTINCT record_company FROM orchestra ORDER BY year_of_founded DESC
SELECT DISTINCT record_company FROM orchestra ORDER BY year_of_founded DESC
SELECT DISTINCT orchestra.record_company FROM orchestra ORDER BY orchestra.year_of_founded DESC
SELECT DISTINCT orchestra.record_company FROM orchestra ORDER BY orchestra.year_of_founded DESC
SELECT DISTINCT record_company FROM orchestra ORDER BY year_of_founded DESC
SELECT DISTINCT record_company FROM orchestra ORDER BY year_of_founded DESC
SELECT DISTINCT record_company FROM orchestra ORDER BY year_of_founded DESC",SELECT DISTINCT record_company FROM orchestra ORDER BY year_of_founded DESC,True,1.0
377,652,What are the final tables made and best finishes for all poker players?,poker_player,medium,"SELECT Final_Table_Made ,  Best_Finish FROM poker_player",7,"SELECT pp.poker_player_id, p.name, pp.final_table_made, pp.best_finish, p.nationality, pp.money_rank, pp.earnings FROM poker_player pp JOIN people p ON pp.people_id = p.people_id
SELECT pp.poker_player_id, p.name, pp.final_table_made, pp.best_finish, p.nationality, pp.money_rank, pp.earnings FROM poker_player pp JOIN people p ON pp.people_id = p.people_id
SELECT pp.poker_player_id, p.name, pp.final_table_made, pp.best_finish, p.nationality, pp.money_rank, pp.earnings FROM poker_player pp JOIN people p ON pp.people_id = p.people_id
SELECT pp.poker_player_id, p.name, pp.final_table_made, pp.best_finish, p.nationality, pp.money_rank, pp.earnings FROM poker_player pp JOIN people p ON pp.people_id = p.people_id
SELECT pp.poker_player_id, p.name, pp.final_table_made, pp.best_finish, p.nationality, pp.money_rank, pp.earnings FROM poker_player pp JOIN people p ON pp.people_id = p.people_id
SELECT pp.poker_player_id, p.name, pp.final_table_made, pp.best_finish, p.nationality, pp.money_rank, pp.earnings FROM poker_player pp JOIN people p ON pp.people_id = p.people_id
SELECT pp.poker_player_id, p.name, pp.final_table_made, pp.best_finish, p.nationality, pp.money_rank, pp.earnings FROM poker_player pp JOIN people p ON pp.people_id = p.people_id","SELECT pp.poker_player_id, p.name, pp.final_table_made, pp.best_finish, p.nationality, pp.money_rank, pp.earnings FROM poker_player pp JOIN people p ON pp.people_id = p.people_id",0,0.0
378,272,What are the minimum and maximum number of products across all the shops?,employee_hire_evaluation,medium,"SELECT min(Number_products) ,  max(Number_products) FROM shop",7,"SELECT MIN(number_products), MAX(number_products) FROM shop
SELECT MIN(number_products), MAX(number_products) FROM shop
SELECT MIN(number_products), MAX(number_products) FROM shop
SELECT MIN(number_products), MAX(number_products) FROM shop
SELECT MIN(number_products), MAX(number_products) FROM shop
SELECT MIN(number_products), MAX(number_products) FROM shop
SELECT MIN(number_products), MAX(number_products) FROM shop","SELECT MIN(number_products), MAX(number_products) FROM shop",True,1.0
379,196,Return the number of airlines in the USA.,flight_2,easy,"SELECT count(*) FROM AIRLINES WHERE Country  =  ""USA""",7,"SELECT COUNT(*) FROM airlines WHERE country = 'USA'
SELECT COUNT(*) FROM airlines WHERE country = 'USA'
SELECT COUNT(*) FROM airlines WHERE country = 'USA'
SELECT COUNT(*) FROM airlines WHERE country = 'USA'
SELECT COUNT(*) FROM airlines WHERE country = 'USA'
SELECT COUNT(*) FROM airlines WHERE country = 'USA'
SELECT COUNT(*) FROM airlines WHERE country = 'USA'",SELECT COUNT(*) FROM airlines WHERE country = 'USA',True,1.0
380,907,Give the name of the student with the most likes.,network_1,extra,SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,7,"SELECT h.name FROM highschooler h JOIN likes l ON h.id = l.student_id GROUP BY h.id ORDER BY COUNT(*) DESC LIMIT 1
SELECT h.name FROM highschooler h JOIN likes l ON h.id = l.liked_id ORDER BY COUNT(l.liked_id) DESC LIMIT 1
SELECT h.name FROM highschooler h JOIN likes l ON h.id = l.student_id GROUP BY h.id ORDER BY COUNT(*) DESC LIMIT 1
SELECT h.name FROM highschooler h JOIN likes l ON h.id = l.student_id GROUP BY h.id ORDER BY COUNT(*) DESC LIMIT 1
SELECT h.name FROM highschooler h JOIN likes l ON h.id = l.student_id GROUP BY h.id ORDER BY COUNT(*) DESC LIMIT 1
SELECT h.name FROM highschooler h JOIN likes l ON h.id = l.student_id GROUP BY h.id ORDER BY COUNT(*) DESC LIMIT 1
SELECT h.name FROM highschooler h JOIN likes l ON h.id = l.student_id GROUP BY h.id ORDER BY COUNT(*) DESC LIMIT 1",SELECT h.name FROM highschooler h JOIN likes l ON h.id = l.student_id GROUP BY h.id ORDER BY COUNT(*) DESC LIMIT 1,0,1.0
381,885,What are the names of the high schoolers and how many friends does each have?,network_1,medium,"SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id",7,"SELECT h.name, COUNT(f.friend_id) AS num_friends FROM highschooler h JOIN friend f ON h.id = f.student_id GROUP BY h.id
SELECT h.name, COUNT(f.friend_id) AS num_friends FROM highschooler h JOIN friend f ON h.id = f.student_id GROUP BY h.id
SELECT h.name, COUNT(f.friend_id) AS num_friends FROM highschooler h JOIN friend f ON h.id = f.student_id GROUP BY h.id
SELECT hs.name, COUNT(f.friend_id) AS num_friends FROM highschooler hs JOIN friend f ON hs.id = f.student_id GROUP BY hs.id
SELECT h.name, COUNT(f.friend_id) AS num_friends FROM highschooler h JOIN friend f ON h.id = f.student_id GROUP BY h.id
SELECT h.name, COUNT(f.friend_id) AS num_friends FROM highschooler h JOIN friend f ON h.id = f.student_id GROUP BY h.id
SELECT h.name, COUNT(f.friend_id) AS num_friends FROM highschooler h LEFT JOIN friend f ON h.id = f.student_id GROUP BY h.id","SELECT h.name, COUNT(f.friend_id) AS num_friends FROM highschooler h JOIN friend f ON h.id = f.student_id GROUP BY h.id",0,1.0
382,948,List the cost of each treatment and the corresponding treatment type description.,dog_kennels,medium,"SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code",7,"SELECT treatment_types.treatment_type_description, treatments.cost_of_treatment FROM treatments JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code
SELECT treatment_types.treatment_type_description, treatments.cost_of_treatment FROM treatments JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code
SELECT treatment_types.treatment_type_description, treatments.cost_of_treatment FROM treatments JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code
SELECT charge_amount, treatment_type_description FROM charges JOIN treatment_types ON charges.charge_type = treatment_types.treatment_type_code JOIN treatments ON charges.charge_id = treatments.charge_id
SELECT charge_amount, treatment_type_description FROM charges JOIN treatment_types ON charges.charge_type = treatment_types.treatment_type_code JOIN treatments ON charges.charge_id = treatments.charge_id
SELECT treatment_types.treatment_type_description, treatments.cost_of_treatment FROM treatments JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code
SELECT charge_amount, treatment_type_description FROM charges JOIN treatment_types ON charges.charge_type = treatment_types.treatment_type_code JOIN treatments ON charges.charge_id = treatments.charge_id","SELECT treatment_types.treatment_type_description, treatments.cost_of_treatment FROM treatments JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code",True,0.0
383,964,What are the arriving date and the departing date of all the dogs?,dog_kennels,medium,"SELECT date_arrived ,  date_departed FROM Dogs",7,"SELECT date_arrived, date_departed FROM dogs
SELECT date_arrived, date_departed FROM dogs
SELECT date_arrived, date_departed FROM dogs
SELECT date_arrived, date_departed FROM dogs
SELECT date_arrived, date_departed FROM dogs
SELECT date_arrived, date_departed FROM dogs
SELECT date_arrived, date_departed FROM dogs","SELECT date_arrived, date_departed FROM dogs",True,1.0
384,266,Find the cities that have more than one employee under age 30.,employee_hire_evaluation,medium,SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1,7,"SELECT city FROM employee JOIN hiring ON employee.employee_id = hiring.employee_id WHERE age < 30 GROUP BY city HAVING COUNT(employee_id) > 1
SELECT city FROM employee JOIN hiring ON employee.employee_id = hiring.employee_id WHERE age < 30 GROUP BY city HAVING COUNT(employee_id) > 1
SELECT city FROM employee JOIN hiring ON employee.employee_id = hiring.employee_id WHERE age < 30 GROUP BY city HAVING COUNT(employee_id) > 1
SELECT city FROM employee JOIN hiring ON employee.employee_id = hiring.employee_id WHERE age < 30 GROUP BY city HAVING COUNT(employee_id) > 1
SELECT city FROM employee JOIN hiring ON employee.employee_id = hiring.employee_id WHERE age < 30 GROUP BY city HAVING COUNT(employee_id) > 1
SELECT city FROM employee JOIN hiring ON employee.employee_id = hiring.employee_id WHERE age < 30 GROUP BY city HAVING COUNT(employee_id) > 1
SELECT city FROM employee JOIN hiring ON employee.employee_id = hiring.employee_id WHERE age < 30 GROUP BY city HAVING COUNT(employee_id) > 1",SELECT city FROM employee JOIN hiring ON employee.employee_id = hiring.employee_id WHERE age < 30 GROUP BY city HAVING COUNT(employee_id) > 1,0,0.0
385,897,What are the names of students who have no friends?,network_1,hard,SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id,7,"SELECT hs.name FROM highschooler hs LEFT JOIN friend f ON hs.id = f.student_id LEFT JOIN likes l ON hs.id = l.student_id WHERE f.friend_id IS NULL AND l.liked_id IS NULL
SELECT hs.name FROM highschooler hs LEFT JOIN friend f ON hs.id = f.student_id LEFT JOIN likes l ON hs.id = l.student_id WHERE f.friend_id IS NULL AND l.liked_id IS NULL
SELECT hs.name FROM highschooler hs LEFT JOIN friend f ON hs.id = f.student_id LEFT JOIN likes l ON hs.id = l.student_id WHERE f.friend_id IS NULL AND l.liked_id IS NULL
SELECT hs.name FROM highschooler hs LEFT JOIN friend f ON hs.id = f.student_id LEFT JOIN likes l ON hs.id = l.student_id WHERE f.friend_id IS NULL AND l.liked_id IS NULL
SELECT hs.name FROM highschooler hs LEFT JOIN friend f ON hs.id = f.student_id LEFT JOIN likes l ON hs.id = l.student_id WHERE f.friend_id IS NULL AND l.liked_id IS NULL
SELECT hs.name FROM highschooler hs LEFT JOIN friend f ON hs.id = f.student_id LEFT JOIN likes l ON hs.id = l.student_id WHERE f.friend_id IS NULL AND l.liked_id IS NULL
SELECT hs.name FROM highschooler hs LEFT JOIN friend f ON hs.id = f.student_id LEFT JOIN likes l ON hs.id = l.student_id WHERE f.friend_id IS NULL AND l.liked_id IS NULL",SELECT hs.name FROM highschooler hs LEFT JOIN friend f ON hs.id = f.student_id LEFT JOIN likes l ON hs.id = l.student_id WHERE f.friend_id IS NULL AND l.liked_id IS NULL,0,0.0
386,649,List the earnings of poker players in descending order.,poker_player,easy,SELECT Earnings FROM poker_player ORDER BY Earnings DESC,7,"SELECT p.earnings FROM poker_player p JOIN people pe ON p.people_id = pe.people_id ORDER BY p.earnings DESC
SELECT p.earnings FROM poker_player p JOIN people pe ON p.people_id = pe.people_id ORDER BY p.earnings DESC
SELECT people.name, poker_player.earnings FROM poker_player JOIN people ON poker_player.people_id = people.people_id ORDER BY poker_player.earnings DESC
SELECT p.earnings FROM poker_player p JOIN people pe ON p.people_id = pe.people_id ORDER BY p.earnings DESC
SELECT p.earnings FROM poker_player p JOIN people pe ON p.people_id = pe.people_id ORDER BY p.earnings DESC
SELECT people.name, poker_player.earnings FROM poker_player JOIN people ON poker_player.people_id = people.people_id ORDER BY poker_player.earnings DESC
SELECT p.earnings FROM poker_player p JOIN people pe ON p.people_id = pe.people_id ORDER BY p.earnings DESC",SELECT p.earnings FROM poker_player p JOIN people pe ON p.people_id = pe.people_id ORDER BY p.earnings DESC,0,1.0
387,384,What are the names of the teachers ordered by ascending age?,course_teach,easy,SELECT Name FROM teacher ORDER BY Age ASC,7,"SELECT teacher.name FROM teacher ORDER BY teacher.age ASC
SELECT teacher.name FROM teacher ORDER BY teacher.age ASC
SELECT teacher.name FROM teacher ORDER BY teacher.age ASC
SELECT name FROM teacher ORDER BY age ASC
SELECT teacher.name FROM teacher ORDER BY teacher.age ASC
SELECT teacher.name FROM teacher ORDER BY teacher.age ASC
SELECT teacher.name FROM teacher ORDER BY teacher.age ASC",SELECT teacher.name FROM teacher ORDER BY teacher.age ASC,True,1.0
388,645,find the package option of the tv channel that do not have any cartoon directed by Ben Jones.,tvshow,hard,SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'),7,"SELECT DISTINCT tv_channel.package_option FROM tv_channel LEFT JOIN tv_series ON tv_channel.id = tv_series.channel LEFT JOIN cartoon ON tv_series.id = cartoon.channel WHERE cartoon.directed_by != 'Ben Jones' AND cartoon.title != 'cartoon'
SELECT DISTINCT tv_channel.package_option FROM tv_channel LEFT JOIN tv_series ON tv_channel.id = tv_series.channel LEFT JOIN cartoon ON tv_series.id = cartoon.channel WHERE cartoon.directed_by != 'Ben Jones' AND cartoon.title NOT LIKE '%Cartoon%'
SELECT DISTINCT tv_channel.package_option FROM tv_channel LEFT JOIN tv_series ON tv_channel.id = tv_series.channel LEFT JOIN cartoon ON tv_series.id = cartoon.channel WHERE cartoon.directed_by != 'Ben Jones' AND cartoon.title != 'cartoon'
SELECT DISTINCT tv_channel.package_option FROM tv_channel LEFT JOIN tv_series ON tv_channel.id = tv_series.channel LEFT JOIN cartoon ON tv_series.id = cartoon.channel WHERE cartoon.directed_by != 'Ben Jones' AND cartoon.title != 'cartoon'
SELECT DISTINCT tv_channel.package_option FROM tv_channel LEFT JOIN tv_series ON tv_channel.id = tv_series.channel LEFT JOIN cartoon ON tv_series.id = cartoon.channel WHERE cartoon.directed_by != 'Ben Jones' AND cartoon.title != 'cartoon'
SELECT DISTINCT tv_channel.package_option FROM tv_channel LEFT JOIN tv_series ON tv_channel.id = tv_series.channel LEFT JOIN cartoon ON tv_series.id = cartoon.channel WHERE cartoon.directed_by != 'Ben Jones' AND cartoon.title != 'cartoon'
SELECT DISTINCT tv_channel.package_option FROM tv_channel LEFT JOIN tv_series ON tv_channel.id = tv_series.channel LEFT JOIN cartoon ON tv_series.id = cartoon.channel WHERE cartoon.directed_by != 'Ben Jones' AND cartoon.title != 'cartoon'",SELECT DISTINCT tv_channel.package_option FROM tv_channel LEFT JOIN tv_series ON tv_channel.id = tv_series.channel LEFT JOIN cartoon ON tv_series.id = cartoon.channel WHERE cartoon.directed_by != 'Ben Jones' AND cartoon.title != 'cartoon',0,0.0
389,665,What is the birth date of the poker player with the lowest earnings?,poker_player,hard,SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1,7,"SELECT p.birth_date FROM poker_player p JOIN people pe ON p.people_id = pe.people_id ORDER BY p.earnings ASC LIMIT 1
SELECT p.birth_date FROM poker_player p JOIN people pe ON p.people_id = pe.people_id ORDER BY p.earnings ASC LIMIT 1
SELECT p.birth_date FROM poker_player p JOIN people pe ON p.people_id = pe.people_id ORDER BY p.earnings ASC LIMIT 1
SELECT p.birth_date FROM poker_player p JOIN people pe ON p.people_id = pe.people_id ORDER BY p.earnings ASC LIMIT 1
SELECT p.birth_date FROM poker_player p JOIN people pe ON p.people_id = pe.people_id ORDER BY p.earnings ASC LIMIT 1
SELECT p.birth_date FROM poker_player p JOIN people pe ON p.people_id = pe.people_id ORDER BY p.earnings ASC LIMIT 1
SELECT p.birth_date FROM poker_player p JOIN people pe ON p.people_id = pe.people_id ORDER BY p.earnings ASC LIMIT 1",SELECT p.birth_date FROM poker_player p JOIN people pe ON p.people_id = pe.people_id ORDER BY p.earnings ASC LIMIT 1,0,0.0
390,671,What are the names of poker players in descending order of earnings?,poker_player,medium,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC,7,"SELECT people.name FROM people JOIN poker_player ON people.people_id = poker_player.people_id ORDER BY poker_player.earnings DESC
SELECT people.name FROM people JOIN poker_player ON people.people_id = poker_player.people_id ORDER BY poker_player.earnings DESC
SELECT people.name FROM people JOIN poker_player ON poker_player.people_id = people.people_id ORDER BY poker_player.earnings DESC
SELECT people.name FROM people JOIN poker_player ON people.people_id = poker_player.people_id ORDER BY poker_player.earnings DESC
SELECT people.name FROM people JOIN poker_player ON people.people_id = poker_player.people_id WHERE poker_player.final_table_made = 1 ORDER BY poker_player.earnings DESC
SELECT people.name FROM people JOIN poker_player ON people.people_id = poker_player.people_id ORDER BY poker_player.earnings DESC
SELECT people.name FROM people JOIN poker_player ON people.people_id = poker_player.people_id ORDER BY poker_player.earnings DESC",SELECT people.name FROM people JOIN poker_player ON people.people_id = poker_player.people_id ORDER BY poker_player.earnings DESC,True,1.0
391,524,What are the names and descriptions for all the sections?,student_transcripts_tracking,medium,"SELECT section_name ,  section_description FROM Sections",7,"SELECT section_name, section_description FROM sections
SELECT section_name, section_description FROM sections
SELECT section_name, section_description FROM sections
SELECT section_name, section_description FROM sections
SELECT section_name, section_description FROM sections
SELECT section_name, section_description FROM sections
SELECT section_name, section_description FROM sections","SELECT section_name, section_description FROM sections",True,1.0
392,233,What are airlines that have some flight departing from airport 'AHD'?,flight_2,medium,"SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  ""AHD""",7,"SELECT DISTINCT airline  FROM flights  WHERE sourceairport = 'AHD'
SELECT DISTINCT airline  FROM flights  WHERE sourceairport = 'AHD'
SELECT DISTINCT airline  FROM flights  WHERE sourceairport = 'AHD'
SELECT DISTINCT airline  FROM flights  JOIN airlines ON flights.airline = airlines.uid  WHERE sourceairport = 'AHD'
SELECT DISTINCT airline  FROM flights  WHERE sourceairport = 'AHD'
SELECT DISTINCT airline FROM flights JOIN airlines ON flights.airline = airlines.uid WHERE sourceairport = 'AHD'
SELECT DISTINCT airline FROM flights JOIN airlines ON flights.airline = airlines.uid WHERE sourceairport = 'AHD'",SELECT DISTINCT airline  FROM flights  WHERE sourceairport = 'AHD',0,1.0
393,457,List the first and last name of all players who are left / L hand in the order of birth date.,wta_1,medium,"SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date",7,"SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date","SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date",True,1.0
394,396,What is the most commmon hometowns for teachers?,course_teach,hard,SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1,7,"SELECT hometown, COUNT(*) AS count FROM teacher GROUP BY hometown ORDER BY count DESC, hometown ASC LIMIT 1
SELECT hometown, COUNT(*) AS count FROM teacher GROUP BY hometown ORDER BY count DESC, hometown ASC LIMIT 1
SELECT hometown, COUNT(*) AS count FROM teacher GROUP BY hometown ORDER BY count DESC LIMIT 1
SELECT hometown, COUNT(*) AS count FROM teacher GROUP BY hometown ORDER BY count DESC, hometown ASC LIMIT 1
SELECT hometown, COUNT(*) AS count FROM teacher GROUP BY hometown ORDER BY count DESC, hometown ASC LIMIT 1
SELECT hometown, COUNT(*) AS count FROM teacher GROUP BY hometown ORDER BY count DESC, hometown ASC LIMIT 1
SELECT hometown, COUNT(*) AS count FROM teacher GROUP BY hometown ORDER BY count DESC, hometown ASC LIMIT 1","SELECT hometown, COUNT(*) AS count FROM teacher GROUP BY hometown ORDER BY count DESC, hometown ASC LIMIT 1",0,0.0
395,226,What is the airport code of the airport with the most flights?,flight_2,extra,SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1,7,"SELECT sourceairport AS airportcode FROM flights GROUP BY sourceairport ORDER BY COUNT(*) DESC LIMIT 1
SELECT sourceairport AS airportcode FROM flights GROUP BY sourceairport ORDER BY COUNT(*) DESC LIMIT 1
SELECT sourceairport AS airportcode FROM flights GROUP BY sourceairport ORDER BY COUNT(*) DESC LIMIT 1
SELECT sourceairport AS airportcode FROM flights GROUP BY sourceairport ORDER BY COUNT(*) DESC LIMIT 1
SELECT sourceairport AS airportcode FROM flights GROUP BY sourceairport ORDER BY COUNT(*) DESC LIMIT 1
SELECT sourceairport AS airportcode FROM flights GROUP BY sourceairport ORDER BY COUNT(*) DESC LIMIT 1
SELECT sourceairport AS airportcode FROM flights GROUP BY sourceairport ORDER BY COUNT(*) DESC LIMIT 1",SELECT sourceairport AS airportcode FROM flights GROUP BY sourceairport ORDER BY COUNT(*) DESC LIMIT 1,0,0.0
396,802,What are names of countries with the top 3 largest population?,world_1,medium,SELECT Name FROM country ORDER BY Population DESC LIMIT 3,7,"SELECT name FROM country ORDER BY population DESC LIMIT 3
SELECT name FROM country ORDER BY population DESC LIMIT 3
SELECT name FROM country ORDER BY population DESC LIMIT 3
SELECT name FROM country ORDER BY population DESC LIMIT 3
SELECT name FROM country ORDER BY population DESC LIMIT 3
SELECT name FROM country ORDER BY population DESC LIMIT 3
SELECT name FROM country ORDER BY population DESC LIMIT 3",SELECT name FROM country ORDER BY population DESC LIMIT 3,True,1.0
397,761,What is the most populace city that speaks English?,world_1,extra,"SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  ""English"" ORDER BY T1.Population DESC LIMIT 1",7,"SELECT name FROM city WHERE countrycode IN (SELECT code FROM countrylanguage WHERE language = 'English' AND isofficial = 'T') ORDER BY population DESC LIMIT 1
SELECT name FROM city WHERE countrycode IN (SELECT code FROM countrylanguage WHERE language = 'English' AND isofficial = 'T') ORDER BY population DESC LIMIT 1
SELECT name FROM city WHERE countrycode IN (SELECT code FROM countrylanguage WHERE language = 'English' AND isofficial = 'T') ORDER BY population DESC LIMIT 1
SELECT name FROM city WHERE countrycode IN (SELECT code FROM countrylanguage WHERE language = 'English' AND isofficial = 'T') ORDER BY population DESC LIMIT 1
SELECT name FROM city WHERE countrycode IN (SELECT code FROM countrylanguage WHERE language = 'English' AND isofficial = 'T') ORDER BY population DESC LIMIT 1
SELECT name FROM city WHERE countrycode IN (SELECT code FROM countrylanguage WHERE language = 'English' AND isofficial = 'T') ORDER BY population DESC LIMIT 1
SELECT name FROM city WHERE countrycode IN (SELECT code FROM countrylanguage WHERE language = 'English' AND isofficial = 'T') ORDER BY population DESC LIMIT 1",SELECT name FROM city WHERE countrycode IN (SELECT code FROM countrylanguage WHERE language = 'English' AND isofficial = 'T') ORDER BY population DESC LIMIT 1,0,0.0
398,41,Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015.,concert_singer,extra,"SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015",7,"SELECT s.name, s.location  FROM stadium s  JOIN concert c ON s.stadium_id = c.stadium_id  WHERE c.year IN (2014, 2015)  GROUP BY s.stadium_id  HAVING COUNT(DISTINCT c.year) = 2
SELECT s.name, s.location  FROM stadium s  JOIN concert c ON s.stadium_id = c.stadium_id  WHERE c.year IN (2014, 2015)  GROUP BY s.stadium_id  HAVING COUNT(DISTINCT c.year) = 2
SELECT s.name, s.location  FROM stadium s  JOIN concert c ON s.stadium_id = c.stadium_id  WHERE c.year IN (2014, 2015)  GROUP BY s.stadium_id  HAVING COUNT(DISTINCT c.year) = 2
SELECT s.name, s.location  FROM stadium s  JOIN concert c ON s.stadium_id = c.stadium_id  WHERE c.year IN (2014, 2015)  GROUP BY s.stadium_id  HAVING COUNT(DISTINCT c.year) = 2
SELECT s.name, s.location  FROM stadium s  JOIN concert c ON s.stadium_id = c.stadium_id  WHERE c.year IN (2014, 2015)  GROUP BY s.stadium_id  HAVING COUNT(DISTINCT c.year) = 2
SELECT s.name, s.location  FROM stadium s  JOIN concert c ON s.stadium_id = c.stadium_id  WHERE c.year IN (2014, 2015)  GROUP BY s.stadium_id  HAVING COUNT(DISTINCT c.year) = 2
SELECT s.name, s.location  FROM stadium s  JOIN concert c ON s.stadium_id = c.stadium_id  WHERE c.year IN (2014, 2015)  GROUP BY s.stadium_id  HAVING COUNT(DISTINCT c.year) = 2","SELECT s.name, s.location  FROM stadium s  JOIN concert c ON s.stadium_id = c.stadium_id  WHERE c.year IN (2014, 2015)  GROUP BY s.stadium_id  HAVING COUNT(DISTINCT c.year) = 2",0,1.0
399,637,Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang?,tvshow,extra,"SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'",7,"SELECT tv_channel.series_name, tv_channel.country  FROM tv_channel  JOIN cartoon ON tv_channel.id = cartoon.channel  WHERE cartoon.directed_by IN ('Ben Jones', 'Michael Chang') AND cartoon.title LIKE '%cartoons%'
SELECT tv_channel.series_name, tv_channel.country  FROM tv_channel  JOIN cartoon ON tv_channel.id = cartoon.channel  WHERE cartoon.directed_by IN ('Ben Jones', 'Michael Chang') AND cartoon.title LIKE '%cartoons%'
SELECT tv_channel.series_name, tv_channel.country  FROM tv_channel  JOIN cartoon ON tv_channel.id = cartoon.channel  WHERE cartoon.directed_by IN ('Ben Jones', 'Michael Chang') AND cartoon.title LIKE '%cartoons%'
SELECT tv_channel.series_name, tv_channel.country  FROM tv_channel  JOIN cartoon ON tv_channel.id = cartoon.channel  WHERE cartoon.directed_by IN ('Ben Jones', 'Michael Chang') AND cartoon.title LIKE '%cartoons%'
SELECT tv_channel.series_name, tv_channel.country  FROM tv_channel  JOIN cartoon ON tv_channel.id = cartoon.channel  WHERE cartoon.directed_by IN ('Ben Jones', 'Michael Chang') AND cartoon.title LIKE '%cartoons%'
SELECT tv_channel.series_name, tv_channel.country  FROM tv_channel  JOIN cartoon ON tv_channel.id = cartoon.channel  WHERE cartoon.directed_by IN ('Ben Jones', 'Michael Chang') AND cartoon.title LIKE '%cartoons%'
SELECT tv_channel.series_name, tv_channel.country FROM tv_channel JOIN cartoon ON tv_channel.id = cartoon.channel JOIN tv_series ON tv_channel.id = tv_series.channel WHERE cartoon.directed_by IN ('Ben Jones', 'Michael Chang') AND cartoon.title LIKE '%cartoons%'","SELECT tv_channel.series_name, tv_channel.country  FROM tv_channel  JOIN cartoon ON tv_channel.id = cartoon.channel  WHERE cartoon.directed_by IN ('Ben Jones', 'Michael Chang') AND cartoon.title LIKE '%cartoons%'",0,0.0
400,981,Find the number of owners who do not own any dogs at this moment.,dog_kennels,extra,SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs ),7,"SELECT COUNT(*) FROM owners WHERE owner_id NOT IN (SELECT owner_id FROM dogs WHERE abandoned_yn = 'N')
SELECT COUNT(*) FROM owners WHERE owner_id NOT IN (SELECT owner_id FROM dogs WHERE abandoned_yn = 'N')
SELECT COUNT(*) FROM owners WHERE owner_id NOT IN (SELECT owner_id FROM dogs WHERE abandoned_yn = 'N')
SELECT COUNT(*) FROM owners WHERE owner_id NOT IN (SELECT owner_id FROM dogs WHERE abandoned_yn = 'N')
SELECT COUNT(*) FROM owners WHERE owner_id NOT IN (SELECT owner_id FROM dogs WHERE abandoned_yn = 'N')
SELECT COUNT(*) FROM owners WHERE owner_id NOT IN (SELECT owner_id FROM dogs WHERE abandoned_yn = 'N')
SELECT COUNT(*) FROM owners WHERE owner_id NOT IN (SELECT owner_id FROM dogs WHERE abandoned_yn = 'N')",SELECT COUNT(*) FROM owners WHERE owner_id NOT IN (SELECT owner_id FROM dogs WHERE abandoned_yn = 'N'),0,0.0
401,845,What is the name of the conductor who has conducted the most orchestras?,orchestra,extra,SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1,7,"SELECT c.name FROM conductor c JOIN orchestra o ON c.conductor_id = o.conductor_id GROUP BY c.conductor_id ORDER BY COUNT(o.orchestra_id) DESC LIMIT 1
SELECT c.name FROM conductor c JOIN orchestra o ON c.conductor_id = o.conductor_id GROUP BY c.conductor_id ORDER BY COUNT(o.orchestra_id) DESC LIMIT 1
SELECT c.name FROM conductor c JOIN orchestra o ON c.conductor_id = o.conductor_id GROUP BY c.conductor_id ORDER BY COUNT(o.orchestra_id) DESC LIMIT 1
SELECT c.name FROM conductor c JOIN orchestra o ON c.conductor_id = o.conductor_id GROUP BY c.conductor_id ORDER BY COUNT(o.orchestra_id) DESC LIMIT 1
SELECT c.name FROM conductor c JOIN orchestra o ON c.conductor_id = o.conductor_id GROUP BY c.conductor_id ORDER BY COUNT(o.orchestra_id) DESC LIMIT 1
SELECT c.name FROM conductor c JOIN performance p ON c.conductor_id = p.conductor_id GROUP BY c.conductor_id ORDER BY COUNT(p.orchestra_id) DESC LIMIT 1
SELECT c.name FROM conductor c JOIN orchestra o ON c.conductor_id = o.conductor_id GROUP BY c.conductor_id ORDER BY COUNT(o.orchestra_id) DESC LIMIT 1",SELECT c.name FROM conductor c JOIN orchestra o ON c.conductor_id = o.conductor_id GROUP BY c.conductor_id ORDER BY COUNT(o.orchestra_id) DESC LIMIT 1,0,1.0
402,314,What are the template ids of any templates used in more than a single document?,cre_Doc_Template_Mgt,easy,SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1,7,"SELECT template_id FROM templates GROUP BY template_id HAVING COUNT(document_id) > 1
SELECT template_id FROM templates GROUP BY template_id HAVING COUNT(document_id) > 1
SELECT template_id FROM templates GROUP BY template_id HAVING COUNT(document_id) > 1
SELECT template_id FROM templates GROUP BY template_id HAVING COUNT(document_id) > 1
SELECT template_id FROM templates GROUP BY template_id HAVING COUNT(document_id) > 1
SELECT template_id FROM templates GROUP BY template_id HAVING COUNT(document_id) > 1
SELECT template_id FROM templates GROUP BY template_id HAVING COUNT(document_id) > 1",SELECT template_id FROM templates GROUP BY template_id HAVING COUNT(document_id) > 1,0,0.0
403,37,List all singer names in concerts in year 2014.,concert_singer,hard,SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014,7,"SELECT DISTINCT s.name FROM singer s JOIN singer_in_concert sic ON s.singer_id = sic.singer_id JOIN concert c ON sic.concert_id = c.concert_id WHERE c.year = 2014
SELECT DISTINCT s.name FROM singer s JOIN singer_in_concert sic ON s.singer_id = sic.singer_id JOIN concert c ON sic.concert_id = c.concert_id WHERE c.year = 2014
SELECT DISTINCT s.name FROM singer s JOIN singer_in_concert sic ON s.singer_id = sic.singer_id JOIN concert c ON sic.concert_id = c.concert_id WHERE c.year = 2014
SELECT DISTINCT s.name FROM singer s JOIN singer_in_concert sic ON s.singer_id = sic.singer_id JOIN concert c ON sic.concert_id = c.concert_id WHERE c.year = 2014
SELECT DISTINCT s.name FROM singer s JOIN singer_in_concert sic ON s.singer_id = sic.singer_id JOIN concert c ON sic.concert_id = c.concert_id WHERE c.year = 2014
SELECT DISTINCT s.name FROM singer s JOIN singer_in_concert sic ON s.singer_id = sic.singer_id JOIN concert c ON sic.concert_id = c.concert_id WHERE c.year = 2014
SELECT DISTINCT s.name FROM singer s JOIN singer_in_concert sic ON s.singer_id = sic.singer_id JOIN concert c ON sic.concert_id = c.concert_id WHERE c.year = 2014",SELECT DISTINCT s.name FROM singer s JOIN singer_in_concert sic ON s.singer_id = sic.singer_id JOIN concert c ON sic.concert_id = c.concert_id WHERE c.year = 2014,0,1.0
404,140,What is the maximum accelerate for all the different cylinders?,car_1,medium,"SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;",7,"SELECT MAX(accelerate) FROM cars_data
SELECT MAX(accelerate) FROM cars_data
SELECT MAX(accelerate) FROM cars_data
SELECT MAX(accelerate) FROM cars_data
SELECT MAX(accelerate) FROM cars_data
SELECT MAX(accelerate) FROM cars_data
SELECT MAX(accelerate) FROM cars_data",SELECT MAX(accelerate) FROM cars_data,0,0.0
405,969,Find the number of professionals who have ever treated dogs.,dog_kennels,easy,SELECT count(DISTINCT professional_id) FROM Treatments,7,"SELECT COUNT(DISTINCT professionals.professional_id) AS number_of_professionals FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id JOIN dogs ON treatments.dog_id = dogs.dog_id WHERE dogs.breed_code IN (SELECT breed_code FROM breeds WHERE breed_name = 'dog')
SELECT COUNT(DISTINCT professionals.professional_id) AS number_of_professionals FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id JOIN dogs ON treatments.dog_id = dogs.dog_id WHERE dogs.breed_code IN (SELECT breed_code FROM breeds WHERE breed_name = 'dog')
SELECT COUNT(DISTINCT professionals.professional_id) AS number_of_professionals FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id JOIN dogs ON treatments.dog_id = dogs.dog_id WHERE dogs.breed_code IN (SELECT breed_code FROM breeds WHERE breed_name = 'dog')
SELECT COUNT(DISTINCT professionals.professional_id) AS number_of_professionals FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id JOIN dogs ON treatments.dog_id = dogs.dog_id WHERE dogs.breed_code IN (SELECT breed_code FROM breeds WHERE breed_name = 'dog')
SELECT COUNT(DISTINCT professionals.professional_id) AS number_of_professionals FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id JOIN dogs ON treatments.dog_id = dogs.dog_id WHERE dogs.breed_code IN (SELECT breed_code FROM breeds WHERE breed_name = 'dog')
SELECT COUNT(DISTINCT professionals.professional_id) FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id JOIN dogs ON treatments.dog_id = dogs.dog_id WHERE dogs.breed_code = 'breed_code' AND dogs.breed_name = 'Dog'
SELECT COUNT(DISTINCT professionals.professional_id) AS number_of_professionals FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id JOIN dogs ON treatments.dog_id = dogs.dog_id WHERE dogs.breed_code IN (SELECT breed_code FROM breeds WHERE breed_name = 'dog')",SELECT COUNT(DISTINCT professionals.professional_id) AS number_of_professionals FROM professionals JOIN treatments ON professionals.professional_id = treatments.professional_id JOIN dogs ON treatments.dog_id = dogs.dog_id WHERE dogs.breed_code IN (SELECT breed_code FROM breeds WHERE breed_name = 'dog'),0,0.0
406,574,What is the date and id of the transcript with the least number of results?,student_transcripts_tracking,extra,"SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1",7,"SELECT transcript_date, transcript_id  FROM transcripts  ORDER BY (SELECT COUNT(*) FROM transcript_contents WHERE transcripts.transcript_id = transcript_contents.transcript_id) ASC  LIMIT 1
SELECT transcript_date, transcript_id FROM transcripts ORDER BY (SELECT COUNT(*) FROM transcript_contents WHERE transcripts.transcript_id = transcript_contents.transcript_id) ASC LIMIT 1
SELECT transcript_date, transcript_id  FROM transcripts  ORDER BY (SELECT COUNT(*) FROM transcript_contents WHERE transcripts.transcript_id = transcript_contents.transcript_id) ASC  LIMIT 1
SELECT transcript_date, transcript_id  FROM transcripts  ORDER BY (SELECT COUNT(*) FROM transcript_contents WHERE transcripts.transcript_id = transcript_contents.transcript_id) ASC  LIMIT 1
SELECT transcript_date, transcript_id  FROM transcripts  ORDER BY (SELECT COUNT(*) FROM transcript_contents WHERE transcripts.transcript_id = transcript_contents.transcript_id) ASC  LIMIT 1
SELECT transcript_date, transcript_id  FROM transcripts  ORDER BY (SELECT COUNT(*) FROM transcript_contents WHERE transcripts.transcript_id = transcript_contents.transcript_id) ASC  LIMIT 1
SELECT transcript_date, transcript_id  FROM transcripts  ORDER BY (SELECT COUNT(*) FROM transcript_contents WHERE transcripts.transcript_id = transcript_contents.transcript_id) ASC  LIMIT 1","SELECT transcript_date, transcript_id  FROM transcripts  ORDER BY (SELECT COUNT(*) FROM transcript_contents WHERE transcripts.transcript_id = transcript_contents.transcript_id) ASC  LIMIT 1",0,0.0
407,418,find the names of museums which have more staff than the minimum staff number of all museums opened after 2010.,museum_visit,hard,SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010),7,"SELECT m.name FROM museum m WHERE m.num_of_staff > (     SELECT MIN(m2.num_of_staff)     FROM museum m2     WHERE m2.open_year > 2010 )
SELECT m.name FROM museum m WHERE m.num_of_staff > (     SELECT MIN(num_of_staff)     FROM museum     WHERE open_year > 2010 )
SELECT m.name FROM museum m WHERE m.num_of_staff > (     SELECT MIN(num_of_staff)     FROM museum     WHERE open_year > 2010 )
SELECT m.name FROM museum m WHERE m.num_of_staff > (     SELECT MIN(m2.num_of_staff)     FROM museum m2     WHERE m2.open_year > 2010 )
SELECT m.name FROM museum m WHERE m.num_of_staff > (     SELECT MIN(num_of_staff)     FROM museum     WHERE open_year > 2010 )
SELECT m.name FROM museum m WHERE m.num_of_staff > (     SELECT MIN(m2.num_of_staff)     FROM museum m2     WHERE m2.open_year > 2010 )
SELECT m.name FROM museum m WHERE m.num_of_staff > (     SELECT MIN(m2.num_of_staff)     FROM museum m2     WHERE m2.open_year > 2010 )",SELECT m.name FROM museum m WHERE m.num_of_staff > (     SELECT MIN(m2.num_of_staff)     FROM museum m2     WHERE m2.open_year > 2010 ),0,1.0
408,662,Give the names of poker players who have earnings above 300000.,poker_player,medium,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000,7,"SELECT people.name FROM people JOIN poker_player ON people.people_id = poker_player.people_id WHERE poker_player.earnings > 300000
SELECT people.name FROM people JOIN poker_player ON people.people_id = poker_player.people_id WHERE poker_player.earnings > 300000
SELECT people.name FROM people JOIN poker_player ON people.people_id = poker_player.people_id WHERE poker_player.earnings > 300000
SELECT people.name FROM people JOIN poker_player ON people.people_id = poker_player.people_id WHERE poker_player.earnings > 300000
SELECT people.name FROM people JOIN poker_player ON people.people_id = poker_player.people_id WHERE poker_player.earnings > 300000
SELECT p.name FROM poker_player AS p JOIN people AS pe ON p.people_id = pe.people_id WHERE p.earnings > 300000
SELECT people.name FROM people JOIN poker_player ON people.people_id = poker_player.people_id WHERE poker_player.earnings > 300000",SELECT people.name FROM people JOIN poker_player ON people.people_id = poker_player.people_id WHERE poker_player.earnings > 300000,True,1.0
409,498,What are the different ids and names of the battles that lost any 'Brig' type shipes?,battle_death,medium,"SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'",7,"SELECT DISTINCT b.id, b.name FROM battle b JOIN ship s ON b.id = s.id WHERE s.ship_type = 'Brig' AND s.disposition_of_ship = 'lost'
SELECT DISTINCT b.id, b.name FROM battle b JOIN ship s ON b.id = s.id WHERE s.ship_type = 'Brig' AND s.disposition_of_ship = 'lost'
SELECT DISTINCT s.id, s.name FROM ship s JOIN battle b ON s.lost_in_battle = b.id WHERE s.ship_type = 'Brig' AND b.result = 'lost'
SELECT DISTINCT b.id, b.name FROM battle b JOIN ship s ON b.id = s.id WHERE s.ship_type = 'Brig' AND s.disposition_of_ship = 'lost'
SELECT DISTINCT b.id, b.name FROM battle b JOIN ship s ON b.id = s.id WHERE s.ship_type = 'Brig' AND s.disposition_of_ship = 'lost'
SELECT DISTINCT b.id, b.name FROM battle b JOIN ship s ON b.id = s.id WHERE s.ship_type = 'Brig' AND s.disposition_of_ship = 'lost'
SELECT DISTINCT b.id, b.name FROM battle b JOIN ship s ON b.id = s.id WHERE s.ship_type = 'Brig' AND s.disposition_of_ship = 'lost'","SELECT DISTINCT b.id, b.name FROM battle b JOIN ship s ON b.id = s.id WHERE s.ship_type = 'Brig' AND s.disposition_of_ship = 'lost'",0,0.0
410,733,What is the number of distinct languages used around the world?,world_1,easy,SELECT count(DISTINCT LANGUAGE) FROM countrylanguage,7,"SELECT COUNT(DISTINCT language) FROM countrylanguage
SELECT COUNT(DISTINCT language) FROM countrylanguage
SELECT COUNT(DISTINCT language) FROM countrylanguage
SELECT COUNT(DISTINCT language) FROM countrylanguage
SELECT COUNT(DISTINCT language) FROM countrylanguage
SELECT COUNT(DISTINCT language) FROM countrylanguage
SELECT COUNT(DISTINCT language) FROM countrylanguage",SELECT COUNT(DISTINCT language) FROM countrylanguage,True,1.0
411,399,Show names of teachers and the courses they are arranged to teach.,course_teach,medium,"SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID",7,"SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id
SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id
SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id
SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id
SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id
SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id
SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id","SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id",0,1.0
412,779,Return the country codes for countries that do not speak English.,world_1,hard,"SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  ""English""",7,"SELECT code FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English')
SELECT code FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English')
SELECT code FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English')
SELECT code FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English')
SELECT code FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English')
SELECT code FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English')
SELECT code FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English')",SELECT code FROM country WHERE code NOT IN (SELECT countrycode FROM countrylanguage WHERE language = 'English'),0,0.0
413,663,List the names of poker players ordered by the final tables made in ascending order.,poker_player,medium,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made,7,"SELECT people.name FROM people JOIN poker_player ON people.people_id = poker_player.people_id ORDER BY poker_player.final_table_made ASC
SELECT people.name FROM people JOIN poker_player ON people.people_id = poker_player.people_id ORDER BY poker_player.final_table_made ASC
SELECT people.name FROM people JOIN poker_player ON people.people_id = poker_player.people_id ORDER BY poker_player.final_table_made ASC
SELECT people.name FROM people JOIN poker_player ON people.people_id = poker_player.people_id ORDER BY poker_player.final_table_made ASC
SELECT people.name FROM people JOIN poker_player ON people.people_id = poker_player.people_id ORDER BY poker_player.final_table_made ASC
SELECT people.name FROM people JOIN poker_player ON people.people_id = poker_player.people_id ORDER BY poker_player.final_table_made ASC
SELECT people.name FROM people JOIN poker_player ON people.people_id = poker_player.people_id ORDER BY poker_player.final_table_made ASC",SELECT people.name FROM people JOIN poker_player ON people.people_id = poker_player.people_id ORDER BY poker_player.final_table_made ASC,True,1.0
414,921,Find the average age of the dogs who went through treatments.,dog_kennels,hard,SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments ),7,"SELECT AVG(dogs.age) FROM dogs JOIN treatments ON dogs.dog_id = treatments.dog_id
SELECT AVG(dogs.age) FROM dogs JOIN treatments ON dogs.dog_id = treatments.dog_id
SELECT AVG(dogs.age) FROM dogs JOIN treatments ON dogs.dog_id = treatments.dog_id
SELECT AVG(dogs.age) FROM dogs JOIN treatments ON dogs.dog_id = treatments.dog_id
SELECT AVG(dogs.age) FROM dogs JOIN treatments ON dogs.dog_id = treatments.dog_id
SELECT AVG(dogs.age) FROM dogs JOIN treatments ON dogs.dog_id = treatments.dog_id
SELECT AVG(dogs.age) FROM dogs JOIN treatments ON dogs.dog_id = treatments.dog_id",SELECT AVG(dogs.age) FROM dogs JOIN treatments ON dogs.dog_id = treatments.dog_id,0,0.0
415,857,What are the record companies that are used by both orchestras founded before 2003 and those founded after 2003?,orchestra,hard,SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003,7,"SELECT DISTINCT record_company FROM orchestra WHERE record_company IN (     SELECT record_company     FROM orchestra     WHERE year_of_founded < 2003     INTERSECT     SELECT record_company     FROM orchestra     WHERE year_of_founded > 2003 )
SELECT DISTINCT record_company FROM orchestra WHERE record_company IN (     SELECT record_company     FROM orchestra     WHERE year_of_founded < 2003 ) AND record_company IN (     SELECT record_company     FROM orchestra     WHERE year_of_founded > 2003 )
SELECT DISTINCT record_company FROM orchestra WHERE record_company IN (     SELECT record_company     FROM orchestra     WHERE year_of_founded < 2003 ) AND record_company IN (     SELECT record_company     FROM orchestra     WHERE year_of_founded > 2003 )
SELECT DISTINCT record_company FROM orchestra WHERE record_company IN (     SELECT record_company     FROM orchestra     WHERE year_of_founded < 2003     INTERSECT     SELECT record_company     FROM orchestra     WHERE year_of_founded > 2003 )
SELECT DISTINCT record_company FROM orchestra WHERE record_company IN (     SELECT record_company     FROM orchestra     WHERE year_of_founded < 2003     INTERSECT     SELECT record_company     FROM orchestra     WHERE year_of_founded > 2003 )
SELECT DISTINCT record_company FROM orchestra WHERE record_company IN (     SELECT record_company     FROM orchestra     WHERE year_of_founded < 2003 ) AND record_company IN (     SELECT record_company     FROM orchestra     WHERE year_of_founded > 2003 )
SELECT DISTINCT record_company FROM orchestra WHERE record_company IN (     SELECT record_company     FROM orchestra     WHERE year_of_founded < 2003     INTERSECT     SELECT record_company     FROM orchestra     WHERE year_of_founded > 2003 )",SELECT DISTINCT record_company FROM orchestra WHERE record_company IN (     SELECT record_company     FROM orchestra     WHERE year_of_founded < 2003     INTERSECT     SELECT record_company     FROM orchestra     WHERE year_of_founded > 2003 ),0,1.0
416,677,What are the nationalities that are shared by at least two people?,poker_player,easy,SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2,7,"SELECT nationality FROM people GROUP BY nationality HAVING COUNT(people_id) >= 2
SELECT nationality FROM people GROUP BY nationality HAVING COUNT(people_id) >= 2
SELECT nationality FROM people GROUP BY nationality HAVING COUNT(people_id) >= 2
SELECT nationality FROM people GROUP BY nationality HAVING COUNT(people_id) >= 2
SELECT nationality FROM people GROUP BY nationality HAVING COUNT(people_id) >= 2
SELECT nationality FROM people GROUP BY nationality HAVING COUNT(people_id) >= 2
SELECT nationality FROM people WHERE people_id IN (     SELECT people_id     FROM poker_player     GROUP BY people_id     HAVING COUNT(*) >= 2 )",SELECT nationality FROM people GROUP BY nationality HAVING COUNT(people_id) >= 2,0,1.0
417,104,What are the different models for the cards produced after 1980?,car_1,hard,SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;,7,"SELECT DISTINCT model_list.model FROM model_list JOIN car_makers ON model_list.maker = car_makers.id JOIN cars_data ON model_list.model = cars_data.make WHERE cars_data.year > 1980
SELECT DISTINCT model_list.model FROM model_list JOIN car_makers ON model_list.maker = car_makers.id JOIN cars_data ON model_list.model = cars_data.make WHERE cars_data.year > 1980
SELECT DISTINCT model_list.model FROM model_list JOIN car_makers ON model_list.maker = car_makers.id JOIN cars_data ON model_list.model = cars_data.make WHERE cars_data.year > 1980
SELECT DISTINCT model_list.model FROM model_list JOIN car_makers ON model_list.maker = car_makers.id JOIN cars_data ON model_list.model = cars_data.make WHERE cars_data.year > 1980
SELECT DISTINCT model_list.model FROM model_list JOIN car_makers ON model_list.maker = car_makers.id JOIN cars_data ON model_list.model = cars_data.make WHERE cars_data.year > 1980
SELECT DISTINCT model_list.model FROM model_list JOIN car_makers ON model_list.maker = car_makers.id JOIN cars_data ON model_list.model = cars_data.make WHERE cars_data.year > 1980
SELECT DISTINCT model_list.model FROM model_list JOIN car_makers ON model_list.maker = car_makers.id JOIN cars_data ON model_list.model = cars_data.make WHERE cars_data.year > 1980",SELECT DISTINCT model_list.model FROM model_list JOIN car_makers ON model_list.maker = car_makers.id JOIN cars_data ON model_list.model = cars_data.make WHERE cars_data.year > 1980,0,0.0
418,692,What are the names of the contestants whose names are not 'Jessie Alloway',voter_1,easy,SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway',7,"SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'
SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'
SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'
SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'
SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'
SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'
SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'",SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway',True,1.0
419,119,What is the smallest weight of the car produced with 8 cylinders on 1974 ?,car_1,medium,select min(weight) from cars_data where cylinders  =  8 and year  =  1974,7,"SELECT MIN(weight) FROM cars_data WHERE cylinders = 8 AND year = 1974
SELECT MIN(weight) FROM cars_data WHERE cylinders = 8 AND year = 1974
SELECT MIN(weight)  FROM cars_data  WHERE cylinders = 8 AND year = 1974
SELECT MIN(weight) FROM cars_data WHERE cylinders = 8 AND year = 1974
SELECT MIN(weight) FROM cars_data WHERE cylinders = 8 AND year = 1974
SELECT MIN(weight) FROM cars_data WHERE cylinders = 8 AND year = 1974
SELECT MIN(weight) FROM cars_data WHERE cylinders = 8 AND year = 1974",SELECT MIN(weight) FROM cars_data WHERE cylinders = 8 AND year = 1974,True,1.0
420,277,find the name of employee who was awarded the most times in the evaluation.,employee_hire_evaluation,extra,SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1,7,"SELECT e.name FROM employee e JOIN evaluation ev ON e.employee_id = ev.employee_id GROUP BY e.employee_id ORDER BY COUNT(ev.employee_id) DESC LIMIT 1
SELECT e.name FROM employee e JOIN evaluation ev ON e.employee_id = ev.employee_id GROUP BY e.employee_id ORDER BY COUNT(ev.employee_id) DESC LIMIT 1
SELECT e.name FROM employee e JOIN evaluation ev ON e.employee_id = ev.employee_id GROUP BY e.employee_id ORDER BY COUNT(ev.employee_id) DESC LIMIT 1
SELECT e.name FROM employee e JOIN evaluation ev ON e.employee_id = ev.employee_id GROUP BY e.employee_id ORDER BY COUNT(ev.employee_id) DESC LIMIT 1
SELECT e.name FROM employee e JOIN evaluation ev ON e.employee_id = ev.employee_id GROUP BY e.employee_id ORDER BY COUNT(ev.employee_id) DESC LIMIT 1
SELECT e.name FROM employee e JOIN evaluation ev ON e.employee_id = ev.employee_id GROUP BY e.employee_id ORDER BY COUNT(ev.employee_id) DESC LIMIT 1
SELECT e.name FROM employee e JOIN evaluation ev ON e.employee_id = ev.employee_id GROUP BY e.employee_id ORDER BY COUNT(ev.employee_id) DESC LIMIT 1",SELECT e.name FROM employee e JOIN evaluation ev ON e.employee_id = ev.employee_id GROUP BY e.employee_id ORDER BY COUNT(ev.employee_id) DESC LIMIT 1,0,1.0
421,68,"What type of pet is the youngest animal, and how much does it weigh?",pets_1,medium,"SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1",7,"SELECT p.pettype, p.weight  FROM pets p  JOIN has_pet hp ON p.petid = hp.petid  WHERE p.pet_age = (SELECT MIN(pet_age) FROM pets)
SELECT p.pettype, p.weight  FROM pets p  JOIN has_pet hp ON p.petid = hp.petid  WHERE p.pet_age = (SELECT MIN(pet_age) FROM pets)
SELECT p.pettype, p.weight FROM pets p JOIN has_pet hp ON p.petid = hp.petid JOIN student s ON hp.stuid = s.stuid ORDER BY p.pet_age ASC LIMIT 1
SELECT p.pettype, p.weight FROM pets p JOIN has_pet hp ON p.petid = hp.petid JOIN student s ON hp.stuid = s.stuid ORDER BY p.pet_age ASC LIMIT 1
SELECT p.pettype, p.weight FROM pets p JOIN has_pet hp ON p.petid = hp.petid JOIN student s ON hp.stuid = s.stuid ORDER BY p.pet_age ASC LIMIT 1
SELECT p.pettype, p.weight FROM pets p JOIN has_pet hp ON p.petid = hp.petid JOIN student s ON hp.stuid = s.stuid ORDER BY p.pet_age ASC LIMIT 1
SELECT p.pettype, p.weight FROM pets p JOIN has_pet hp ON p.petid = hp.petid JOIN student s ON hp.stuid = s.stuid ORDER BY p.pet_age ASC LIMIT 1","SELECT p.pettype, p.weight FROM pets p JOIN has_pet hp ON p.petid = hp.petid JOIN student s ON hp.stuid = s.stuid ORDER BY p.pet_age ASC LIMIT 1",0,1.0
422,308,Count the number of documents that use the PPT template type.,cre_Doc_Template_Mgt,medium,SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT',7,"SELECT COUNT(*) FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE templates.template_type_code = 'PPT'
SELECT COUNT(*) FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE templates.template_type_code = 'PPT'
SELECT COUNT(*) FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE templates.template_type_code = 'PPT'
SELECT COUNT(*) FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE templates.template_type_code = 'PPT'
SELECT COUNT(*) FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE templates.template_type_code = 'PPT'
SELECT COUNT(*) FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE templates.template_type_code = 'PPT'
SELECT COUNT(*) FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE templates.template_type_code = 'PPT'",SELECT COUNT(*) FROM documents JOIN templates ON documents.template_id = templates.template_id WHERE templates.template_type_code = 'PPT',True,1.0
423,245,"What are flight numbers of Airline ""United Airlines""?",flight_2,medium,"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  ""United Airlines""",7,"SELECT flightno FROM flights WHERE airline = 'United Airlines'
SELECT flightno FROM flights WHERE airline = 'United Airlines'
SELECT flightno FROM flights WHERE airline = 'United Airlines'
SELECT flightno FROM flights WHERE airline = 'United Airlines'
SELECT flightno FROM flights WHERE airline = 'United Airlines'
SELECT flightno FROM flights WHERE airline = 'United Airlines'
SELECT flightno FROM flights WHERE airline = 'United Airlines'",SELECT flightno FROM flights WHERE airline = 'United Airlines',0,0.0
424,61,Find the major and age of students who do not have a cat pet.,pets_1,extra,"SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",7,"SELECT major, age FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet WHERE pettype = 'cat')
SELECT major, age FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet WHERE petid IN (SELECT petid FROM pets WHERE pettype = 'cat'))
SELECT major, age FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet WHERE pettype = 'cat')
SELECT major, age FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet WHERE pettype = 'cat')
SELECT major, age FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet WHERE pettype = 'cat')
SELECT major, age FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet WHERE pettype = 'cat')
SELECT major, age FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet WHERE pettype = 'cat')","SELECT major, age FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet WHERE pettype = 'cat')",0,0.0
425,544,What is the name of the semester with no students enrolled?,student_transcripts_tracking,hard,SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment ),7,"SELECT semester_name FROM semesters WHERE semester_id NOT IN (SELECT semester_id FROM student_enrolment)
SELECT semester_name FROM semesters WHERE semester_id NOT IN (SELECT semester_id FROM student_enrolment)
SELECT semester_name FROM semesters WHERE semester_id NOT IN (SELECT semester_id FROM student_enrolment)
SELECT semester_name FROM semesters WHERE semester_id NOT IN (SELECT semester_id FROM student_enrolment)
SELECT semester_name FROM semesters WHERE semester_id NOT IN (SELECT semester_id FROM student_enrolment)
SELECT semester_name FROM semesters WHERE semester_id NOT IN (SELECT semester_id FROM student_enrolment)
SELECT semester_name FROM semesters WHERE semester_id NOT IN (SELECT semester_id FROM student_enrolment)",SELECT semester_name FROM semesters WHERE semester_id NOT IN (SELECT semester_id FROM student_enrolment),True,1.0
426,5,"What is the average, minimum, and maximum age for all French singers?",concert_singer,medium,"SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'",7,"SELECT AVG(s.age) AS average_age, MIN(s.age) AS min_age, MAX(s.age) AS max_age FROM singer s JOIN singer_in_concert sic ON s.singer_id = sic.singer_id JOIN concert c ON sic.concert_id = c.concert_id WHERE s.country = 'France'
SELECT AVG(s.age) AS average_age, MIN(s.age) AS min_age, MAX(s.age) AS max_age FROM singer s JOIN singer_in_concert sic ON s.singer_id = sic.singer_id JOIN concert c ON sic.concert_id = c.concert_id WHERE s.country = 'France'
SELECT AVG(s.age) AS average_age, MIN(s.age) AS min_age, MAX(s.age) AS max_age FROM singer s JOIN singer_in_concert sic ON s.singer_id = sic.singer_id JOIN concert c ON sic.concert_id = c.concert_id WHERE s.country = 'France'
SELECT AVG(s.age) AS average_age, MIN(s.age) AS min_age, MAX(s.age) AS max_age FROM singer s JOIN singer_in_concert sic ON s.singer_id = sic.singer_id JOIN concert c ON sic.concert_id = c.concert_id WHERE s.country = 'France'
SELECT AVG(s.age) AS average_age, MIN(s.age) AS min_age, MAX(s.age) AS max_age FROM singer s JOIN singer_in_concert sic ON s.singer_id = sic.singer_id JOIN concert c ON sic.concert_id = c.concert_id WHERE s.country = 'France'
SELECT AVG(s.age) AS average_age, MIN(s.age) AS min_age, MAX(s.age) AS max_age FROM singer s JOIN singer_in_concert sic ON s.singer_id = sic.singer_id JOIN concert c ON sic.concert_id = c.concert_id WHERE s.country = 'France'
SELECT AVG(s.age) AS average_age, MIN(s.age) AS min_age, MAX(s.age) AS max_age FROM singer s JOIN singer_in_concert sic ON s.singer_id = sic.singer_id JOIN concert c ON sic.concert_id = c.concert_id WHERE s.country = 'France'","SELECT AVG(s.age) AS average_age, MIN(s.age) AS min_age, MAX(s.age) AS max_age FROM singer s JOIN singer_in_concert sic ON s.singer_id = sic.singer_id JOIN concert c ON sic.concert_id = c.concert_id WHERE s.country = 'France'",0,0.0
427,895,What are the ids of high school students who do not have friends?,network_1,hard,SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend,7,"SELECT hs.id FROM highschooler hs LEFT JOIN friend f ON hs.id = f.student_id WHERE f.friend_id IS NULL
SELECT hs.id FROM highschooler hs LEFT JOIN friend f ON hs.id = f.student_id WHERE f.friend_id IS NULL
SELECT hs.id FROM highschooler hs LEFT JOIN friend f ON hs.id = f.student_id WHERE f.friend_id IS NULL
SELECT hs.id FROM highschooler hs LEFT JOIN friend f ON hs.id = f.student_id WHERE f.friend_id IS NULL
SELECT hs.id FROM highschooler hs LEFT JOIN friend f ON hs.id = f.student_id WHERE f.friend_id IS NULL
SELECT hs.id FROM highschooler hs LEFT JOIN friend f ON hs.id = f.student_id WHERE f.friend_id IS NULL
SELECT hs.id FROM highschooler hs LEFT JOIN friend f ON hs.id = f.student_id WHERE f.friend_id IS NULL",SELECT hs.id FROM highschooler hs LEFT JOIN friend f ON hs.id = f.student_id WHERE f.friend_id IS NULL,0,1.0
428,151,Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500?,car_1,extra,SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;,7,"SELECT DISTINCT ml.model FROM model_list ml JOIN car_makers cm ON ml.maker = cm.id JOIN cars_data cd ON ml.model = cd.make WHERE cm.fullname = 'General Motors' AND cd.weight > 3500
SELECT DISTINCT ml.model FROM model_list ml JOIN car_makers cm ON ml.maker = cm.id JOIN cars_data cd ON ml.model = cd.make WHERE cm.fullname = 'General Motors' AND cd.weight > 3500
SELECT DISTINCT ml.model FROM model_list ml JOIN car_makers cm ON ml.maker = cm.id JOIN cars_data cd ON ml.model = cd.make WHERE cm.fullname = 'General Motors' AND cd.weight > 3500
SELECT DISTINCT ml.model FROM model_list ml JOIN car_makers cm ON ml.maker = cm.id JOIN cars_data cd ON ml.model = cd.make WHERE cm.fullname = 'General Motors' AND cd.weight > 3500
SELECT DISTINCT ml.model FROM model_list ml JOIN car_makers cm ON ml.maker = cm.id JOIN cars_data cd ON ml.model = cd.make WHERE cm.fullname = 'General Motors' AND cd.weight > 3500
SELECT DISTINCT ml.model FROM model_list ml JOIN car_makers cm ON ml.maker = cm.id JOIN cars_data cd ON ml.model = cd.make WHERE cm.fullname = 'General Motors' AND cd.weight > 3500
SELECT DISTINCT ml.model FROM model_list ml JOIN car_makers cm ON ml.maker = cm.id JOIN cars_data cd ON ml.model = cd.make WHERE cm.fullname = 'General Motors' AND cd.weight > 3500",SELECT DISTINCT ml.model FROM model_list ml JOIN car_makers cm ON ml.maker = cm.id JOIN cars_data cd ON ml.model = cd.make WHERE cm.fullname = 'General Motors' AND cd.weight > 3500,0,0.0
429,672,Return the names of poker players sorted by their earnings descending.,poker_player,medium,SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC,7,"SELECT people.name FROM poker_player JOIN people ON poker_player.people_id = people.people_id ORDER BY poker_player.earnings DESC
SELECT people.name FROM people JOIN poker_player ON people.people_id = poker_player.people_id ORDER BY poker_player.earnings DESC
SELECT people.name  FROM people  JOIN poker_player ON people.people_id = poker_player.people_id  ORDER BY poker_player.earnings DESC
SELECT people.name FROM people JOIN poker_player ON people.people_id = poker_player.people_id ORDER BY poker_player.earnings DESC
SELECT people.name FROM people JOIN poker_player ON people.people_id = poker_player.people_id ORDER BY poker_player.earnings DESC
SELECT people.name FROM people JOIN poker_player ON people.people_id = poker_player.people_id ORDER BY poker_player.earnings DESC
SELECT people.name  FROM people  JOIN poker_player ON people.people_id = poker_player.people_id  ORDER BY poker_player.earnings DESC",SELECT people.name FROM people JOIN poker_player ON people.people_id = poker_player.people_id ORDER BY poker_player.earnings DESC,True,1.0
430,148,What is the number of car models created by the car maker American Motor Company?,car_1,medium,SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';,7,"SELECT COUNT(*) FROM model_list WHERE maker = 'American Motor Company'
SELECT COUNT(*) FROM model_list WHERE maker = 'American Motor Company'
SELECT COUNT(*) FROM model_list WHERE maker = 'American Motor Company'
SELECT COUNT(*) FROM model_list WHERE maker = 'American Motor Company'
SELECT COUNT(*) FROM model_list WHERE maker = 'American Motor Company'
SELECT COUNT(*) FROM model_list WHERE maker = 'American Motor Company'
SELECT COUNT(*) FROM model_list WHERE maker = 'American Motor Company'",SELECT COUNT(*) FROM model_list WHERE maker = 'American Motor Company',0,0.0
431,763,"What are the name, population, and life expectancy of the largest Asian country by land?",world_1,hard,"SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  ""Asia"" ORDER BY SurfaceArea DESC LIMIT 1",7,"SELECT name, population, lifeexpectancy FROM country WHERE continent = 'Asia' ORDER BY surfacearea DESC LIMIT 1
SELECT name, population, lifeexpectancy FROM country WHERE continent = 'Asia' ORDER BY surfacearea DESC LIMIT 1
SELECT name, population, lifeexpectancy FROM country WHERE continent = 'Asia' ORDER BY surfacearea DESC LIMIT 1
SELECT name, population, lifeexpectancy FROM country WHERE continent = 'Asia' ORDER BY surfacearea DESC LIMIT 1
SELECT name, population, lifeexpectancy FROM country WHERE continent = 'Asia' ORDER BY surfacearea DESC LIMIT 1
SELECT name, population, lifeexpectancy FROM country WHERE continent = 'Asia' ORDER BY surfacearea DESC LIMIT 1
SELECT name, population, lifeexpectancy FROM country WHERE continent = 'Asia' ORDER BY surfacearea DESC LIMIT 1","SELECT name, population, lifeexpectancy FROM country WHERE continent = 'Asia' ORDER BY surfacearea DESC LIMIT 1",True,1.0
432,699,"What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'?",voter_1,medium,"SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'",7,"SELECT created, state, phone_number  FROM votes  WHERE contestant_number = (SELECT contestant_number FROM contestants WHERE contestant_name = 'Tabatha Gehling')
SELECT created, state, phone_number  FROM votes  WHERE contestant_number = (SELECT contestant_number FROM contestants WHERE contestant_name = 'Tabatha Gehling')
SELECT created, state, phone_number  FROM votes  WHERE contestant_number = (SELECT contestant_number FROM contestants WHERE contestant_name = 'Tabatha Gehling')
SELECT created, state, phone_number  FROM votes  WHERE contestant_number = (SELECT contestant_number FROM contestants WHERE contestant_name = 'Tabatha Gehling')
SELECT created, state, phone_number  FROM votes  WHERE contestant_number = (SELECT contestant_number FROM contestants WHERE contestant_name = 'Tabatha Gehling')
SELECT created, state, phone_number  FROM votes  WHERE contestant_number = (SELECT contestant_number FROM contestants WHERE contestant_name = 'Tabatha Gehling')
SELECT created, state, phone_number  FROM votes  WHERE contestant_number = (SELECT contestant_number FROM contestants WHERE contestant_name = 'Tabatha Gehling')","SELECT created, state, phone_number  FROM votes  WHERE contestant_number = (SELECT contestant_number FROM contestants WHERE contestant_name = 'Tabatha Gehling')",0,1.0
433,540,What is the program id and the summary of the degree that has the most students enrolled?,student_transcripts_tracking,extra,"SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT degree_program_id, degree_summary_name AS summary FROM degree_programs ORDER BY (     SELECT COUNT(*)     FROM student_enrolment     WHERE student_enrolment.degree_program_id = degree_programs.degree_program_id ) DESC LIMIT 1
SELECT degree_program_id, degree_summary_name AS summary FROM degree_programs ORDER BY (     SELECT COUNT(*)     FROM student_enrolment     WHERE student_enrolment.degree_program_id = degree_programs.degree_program_id ) DESC LIMIT 1
SELECT degree_program_id, degree_summary_name AS summary FROM degree_programs ORDER BY (     SELECT COUNT(*)     FROM student_enrolment     WHERE student_enrolment.degree_program_id = degree_programs.degree_program_id ) DESC LIMIT 1
SELECT degree_program_id, degree_summary_name AS summary FROM degree_programs ORDER BY (     SELECT COUNT(*)     FROM student_enrolment     WHERE student_enrolment.degree_program_id = degree_programs.degree_program_id ) DESC LIMIT 1
SELECT degree_program_id, degree_summary_name AS summary FROM degree_programs ORDER BY (     SELECT COUNT(*)     FROM student_enrolment     WHERE student_enrolment.degree_program_id = degree_programs.degree_program_id ) DESC LIMIT 1
SELECT degree_program_id, degree_summary_name AS summary FROM degree_programs ORDER BY (     SELECT COUNT(*)     FROM student_enrolment     WHERE student_enrolment.degree_program_id = degree_programs.degree_program_id ) DESC LIMIT 1
SELECT degree_program_id, degree_summary_name AS summary FROM degree_programs ORDER BY (     SELECT COUNT(*)     FROM student_enrolment     WHERE student_enrolment.degree_program_id = degree_programs.degree_program_id ) DESC LIMIT 1","SELECT degree_program_id, degree_summary_name AS summary FROM degree_programs ORDER BY (     SELECT COUNT(*)     FROM student_enrolment     WHERE student_enrolment.degree_program_id = degree_programs.degree_program_id ) DESC LIMIT 1",0,1.0
434,831,Return the average attendance across all shows.,orchestra,easy,SELECT avg(Attendance) FROM SHOW,7,"SELECT AVG(attendance) FROM show
SELECT AVG(attendance) FROM show
SELECT AVG(attendance) FROM show
SELECT AVG(attendance) FROM show
SELECT AVG(attendance) FROM show
SELECT AVG(attendance) FROM show
SELECT AVG(attendance) FROM show",SELECT AVG(attendance) FROM show,True,1.0
435,150,What are the names and ids of all makers with more than 3 models?,car_1,medium,"SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;",7,"SELECT cm.id, cm.maker FROM car_makers cm JOIN model_list ml ON cm.id = ml.maker GROUP BY cm.id HAVING COUNT(ml.model) > 3
SELECT cm.id, cm.maker FROM car_makers cm JOIN model_list ml ON cm.id = ml.maker GROUP BY cm.id HAVING COUNT(ml.model) > 3
SELECT cm.id, cm.maker FROM car_makers cm JOIN model_list ml ON cm.id = ml.maker GROUP BY cm.id HAVING COUNT(ml.model) > 3
SELECT cm.id, cm.maker FROM car_makers cm JOIN model_list ml ON cm.id = ml.maker GROUP BY cm.id HAVING COUNT(ml.model) > 3
SELECT cm.id, cm.maker FROM car_makers cm JOIN model_list ml ON cm.id = ml.maker GROUP BY cm.id HAVING COUNT(ml.model) > 3
SELECT cm.id, cm.maker FROM car_makers cm JOIN model_list ml ON cm.id = ml.maker GROUP BY cm.id HAVING COUNT(ml.model) > 3
SELECT cm.id, cm.maker FROM car_makers cm JOIN model_list ml ON cm.id = ml.maker GROUP BY cm.id HAVING COUNT(ml.model) > 3","SELECT cm.id, cm.maker FROM car_makers cm JOIN model_list ml ON cm.id = ml.maker GROUP BY cm.id HAVING COUNT(ml.model) > 3",0,0.0
436,44,What are the number of concerts that occurred in the stadium with the largest capacity ?,concert_singer,hard,select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1),7,"SELECT COUNT(*) FROM concert WHERE stadium_id = (SELECT stadium_id FROM stadium ORDER BY capacity DESC LIMIT 1)
SELECT COUNT(*) FROM concert WHERE stadium_id = (SELECT stadium_id FROM stadium ORDER BY capacity DESC LIMIT 1)
SELECT COUNT(*) FROM concert WHERE stadium_id = (SELECT stadium_id FROM stadium ORDER BY capacity DESC LIMIT 1)
SELECT COUNT(*) FROM concert WHERE stadium_id = (SELECT stadium_id FROM stadium ORDER BY capacity DESC LIMIT 1)
SELECT COUNT(*) FROM concert WHERE stadium_id = (SELECT stadium_id FROM stadium ORDER BY capacity DESC LIMIT 1)
SELECT COUNT(*) FROM concert WHERE stadium_id = (SELECT stadium_id FROM stadium ORDER BY capacity DESC LIMIT 1)
SELECT COUNT(*) FROM concert WHERE stadium_id = (SELECT stadium_id FROM stadium ORDER BY capacity DESC LIMIT 1)",SELECT COUNT(*) FROM concert WHERE stadium_id = (SELECT stadium_id FROM stadium ORDER BY capacity DESC LIMIT 1),True,1.0
437,482,How many matches were played in each year?,wta_1,medium,"SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR",7,"SELECT year, COUNT(*) AS matches_played FROM matches GROUP BY year
SELECT year, COUNT(*) AS matches_played FROM matches GROUP BY year
SELECT year, COUNT(*) AS matches_played FROM matches GROUP BY year
SELECT year, COUNT(*) AS matches_played FROM matches GROUP BY year
SELECT year, COUNT(*) AS matches_played FROM matches GROUP BY year
SELECT year, COUNT(*) AS matches_played FROM matches GROUP BY year
SELECT year, COUNT(*) AS matches_played FROM matches GROUP BY year","SELECT year, COUNT(*) AS matches_played FROM matches GROUP BY year",0,0.0
438,243,Find all airlines that have fewer than 200 flights.,flight_2,medium,SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200,7,"SELECT airline FROM airlines WHERE uid IN (SELECT airline FROM flights GROUP BY airline HAVING COUNT(*) < 200)
SELECT airline FROM airlines WHERE uid IN (SELECT airline FROM flights GROUP BY airline HAVING COUNT(*) < 200)
SELECT airline FROM airlines WHERE uid IN (SELECT airline FROM flights GROUP BY airline HAVING COUNT(*) < 200)
SELECT airline FROM airlines WHERE uid IN (SELECT airline FROM flights GROUP BY airline HAVING COUNT(*) < 200)
SELECT airline FROM airlines WHERE uid IN (SELECT airline FROM flights GROUP BY airline HAVING COUNT(*) < 200)
SELECT airline FROM airlines WHERE uid IN (SELECT airline FROM flights GROUP BY airline HAVING COUNT(*) < 200)
SELECT airline FROM airlines WHERE uid IN (SELECT airline FROM flights GROUP BY airline HAVING COUNT(*) < 200)",SELECT airline FROM airlines WHERE uid IN (SELECT airline FROM flights GROUP BY airline HAVING COUNT(*) < 200),0,1.0
439,878,Which grade has the most high schoolers?,network_1,hard,SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1,7,"SELECT grade, COUNT(*) AS count FROM highschooler GROUP BY grade ORDER BY count DESC LIMIT 1
SELECT grade, COUNT(*) AS count FROM highschooler GROUP BY grade ORDER BY count DESC LIMIT 1
SELECT grade, COUNT(*) AS count FROM highschooler GROUP BY grade ORDER BY count DESC LIMIT 1
SELECT grade, COUNT(*) AS count FROM highschooler GROUP BY grade ORDER BY count DESC LIMIT 1
SELECT grade, COUNT(*) AS count FROM highschooler GROUP BY grade ORDER BY count DESC LIMIT 1
SELECT grade, COUNT(*) AS count FROM highschooler GROUP BY grade ORDER BY count DESC LIMIT 1
SELECT grade, COUNT(*) AS count FROM highschooler GROUP BY grade ORDER BY count DESC LIMIT 1","SELECT grade, COUNT(*) AS count FROM highschooler GROUP BY grade ORDER BY count DESC LIMIT 1",0,0.0
440,719,How long is the people’s average life expectancy in Central Africa?,world_1,easy,"SELECT avg(LifeExpectancy) FROM country WHERE Region  =  ""Central Africa""",7,"SELECT AVG(lifeexpectancy) FROM country WHERE continent = 'Africa' AND region = 'Central Africa'
SELECT AVG(lifeexpectancy) FROM country WHERE continent = 'Africa' AND region = 'Central Africa'
SELECT AVG(lifeexpectancy) FROM country WHERE continent = 'Africa' AND region = 'Central Africa'
SELECT AVG(lifeexpectancy) FROM country WHERE continent = 'Africa' AND region = 'Central Africa'
SELECT AVG(lifeexpectancy) FROM country WHERE continent = 'Africa' AND region = 'Central Africa'
SELECT AVG(lifeexpectancy) FROM country WHERE continent = 'Africa' AND region = 'Central Africa'
SELECT AVG(lifeexpectancy) FROM country WHERE continent = 'Africa' AND region = 'Central Africa'",SELECT AVG(lifeexpectancy) FROM country WHERE continent = 'Africa' AND region = 'Central Africa',0,1.0
441,341,Show all template type codes and the number of documents using each type.,cre_Doc_Template_Mgt,medium,"SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code",7,"SELECT t.template_type_code, COUNT(d.document_id) AS number_of_documents FROM templates t JOIN documents d ON t.template_id = d.template_id GROUP BY t.template_type_code
SELECT t.template_type_code, COUNT(d.document_id) AS number_of_documents FROM templates t JOIN documents d ON t.template_id = d.template_id GROUP BY t.template_type_code
SELECT t.template_type_code, COUNT(d.document_id) AS number_of_documents FROM templates t JOIN documents d ON t.template_id = d.template_id GROUP BY t.template_type_code
SELECT t.template_type_code, COUNT(d.document_id) AS number_of_documents FROM templates t JOIN documents d ON t.template_id = d.template_id GROUP BY t.template_type_code
SELECT t.template_type_code, COUNT(d.document_id) AS number_of_documents FROM templates t JOIN documents d ON t.template_id = d.template_id GROUP BY t.template_type_code
SELECT t.template_type_code, COUNT(d.document_id) AS number_of_documents FROM templates t JOIN documents d ON t.template_id = d.template_id GROUP BY t.template_type_code
SELECT t.template_type_code, COUNT(d.document_id) AS number_of_documents FROM templates t JOIN documents d ON t.template_id = d.template_id GROUP BY t.template_type_code","SELECT t.template_type_code, COUNT(d.document_id) AS number_of_documents FROM templates t JOIN documents d ON t.template_id = d.template_id GROUP BY t.template_type_code",0,1.0
442,920,What is the average age of the dogs who have gone through any treatments?,dog_kennels,hard,SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments ),7,"SELECT AVG(age) FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments)
SELECT AVG(age) FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments)
SELECT AVG(age) FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments)
SELECT AVG(age) FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments)
SELECT AVG(age) FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments)
SELECT AVG(age) FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments)
SELECT AVG(age) FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments)",SELECT AVG(age) FROM dogs WHERE dog_id IN (SELECT dog_id FROM treatments),True,1.0
443,772,What are the countries that have greater surface area than any country in Europe?,world_1,hard,"SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  ""Europe"")",7,"SELECT name FROM country WHERE surfacearea > (SELECT MIN(surfacearea) FROM country WHERE continent = 'Europe')
SELECT name FROM country WHERE surfacearea > (SELECT MIN(surfacearea) FROM country WHERE continent = 'Europe')
SELECT name FROM country WHERE surfacearea > (SELECT MIN(surfacearea) FROM country WHERE continent = 'Europe')
SELECT name FROM country WHERE surfacearea > (SELECT MIN(surfacearea) FROM country WHERE continent = 'Europe')
SELECT name FROM country WHERE surfacearea > (SELECT MIN(surfacearea) FROM country WHERE continent = 'Europe')
SELECT name FROM country WHERE surfacearea > (SELECT MIN(surfacearea) FROM country WHERE continent = 'Europe')
SELECT name FROM country WHERE surfacearea > (SELECT MIN(surfacearea) FROM country WHERE continent = 'Europe')",SELECT name FROM country WHERE surfacearea > (SELECT MIN(surfacearea) FROM country WHERE continent = 'Europe'),True,1.0
444,695,"Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes?",voter_1,extra,"SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1",7,"SELECT contestants.contestant_number, contestants.contestant_name FROM contestants JOIN votes ON contestants.contestant_number = votes.contestant_number GROUP BY contestants.contestant_number ORDER BY COUNT(votes.vote_id) ASC LIMIT 1
SELECT contestants.contestant_number, contestants.contestant_name FROM contestants JOIN votes ON contestants.contestant_number = votes.contestant_number GROUP BY contestants.contestant_number ORDER BY COUNT(votes.vote_id) ASC LIMIT 1
SELECT contestants.contestant_number, contestants.contestant_name FROM contestants JOIN votes ON contestants.contestant_number = votes.contestant_number GROUP BY contestants.contestant_number ORDER BY COUNT(votes.vote_id) ASC LIMIT 1
SELECT contestants.contestant_number, contestants.contestant_name FROM contestants JOIN votes ON contestants.contestant_number = votes.contestant_number GROUP BY contestants.contestant_number ORDER BY COUNT(votes.vote_id) ASC LIMIT 1
SELECT contestants.contestant_number, contestants.contestant_name FROM contestants JOIN votes ON contestants.contestant_number = votes.contestant_number GROUP BY contestants.contestant_number ORDER BY COUNT(votes.vote_id) ASC LIMIT 1
SELECT contestants.contestant_number, contestants.contestant_name FROM contestants JOIN votes ON contestants.contestant_number = votes.contestant_number GROUP BY contestants.contestant_number ORDER BY COUNT(votes.vote_id) ASC LIMIT 1
SELECT contestants.contestant_number, contestants.contestant_name FROM contestants JOIN votes ON contestants.contestant_number = votes.contestant_number GROUP BY contestants.contestant_number ORDER BY COUNT(votes.vote_id) ASC LIMIT 1","SELECT contestants.contestant_number, contestants.contestant_name FROM contestants JOIN votes ON contestants.contestant_number = votes.contestant_number GROUP BY contestants.contestant_number ORDER BY COUNT(votes.vote_id) ASC LIMIT 1",0,1.0
445,345,Show all template type codes that are not used by any document.,cre_Doc_Template_Mgt,hard,SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id,7,"SELECT template_type_code FROM templates WHERE template_type_code NOT IN (     SELECT template_type_code     FROM ref_template_types )
SELECT template_type_code  FROM templates  WHERE template_type_code NOT IN (     SELECT template_type_code      FROM ref_template_types )
SELECT template_type_code FROM templates WHERE template_type_code NOT IN (     SELECT template_type_code     FROM ref_template_types )
SELECT template_type_code FROM templates WHERE template_type_code NOT IN (     SELECT template_type_code     FROM ref_template_types )
SELECT template_type_code FROM templates WHERE template_type_code NOT IN (     SELECT template_type_code     FROM ref_template_types )
SELECT template_type_code FROM templates WHERE template_type_code NOT IN (     SELECT template_type_code     FROM ref_template_types )
SELECT template_type_code FROM templates WHERE template_type_code NOT IN (     SELECT template_type_code     FROM ref_template_types )",SELECT template_type_code FROM templates WHERE template_type_code NOT IN (     SELECT template_type_code     FROM ref_template_types ),0,0.0
446,977,Show me the cost of the most recently performed treatment.,dog_kennels,medium,SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1,7,"SELECT cost_of_treatment  FROM treatments  ORDER BY date_of_treatment DESC  LIMIT 1
SELECT cost_of_treatment FROM treatments ORDER BY date_of_treatment DESC LIMIT 1
SELECT cost_of_treatment FROM treatments ORDER BY date_of_treatment DESC LIMIT 1
SELECT cost_of_treatment FROM treatments ORDER BY date_of_treatment DESC LIMIT 1
SELECT cost_of_treatment FROM treatments ORDER BY date_of_treatment DESC LIMIT 1
SELECT cost_of_treatment FROM treatments ORDER BY date_of_treatment DESC LIMIT 1
SELECT cost_of_treatment  FROM treatments  ORDER BY date_of_treatment DESC  LIMIT 1",SELECT cost_of_treatment FROM treatments ORDER BY date_of_treatment DESC LIMIT 1,True,1.0
447,83,Find the last name of the student who has a cat that is age 3.,pets_1,hard,SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat',7,"SELECT s.lname FROM students s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pet_age = 3
SELECT s.lname FROM students s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pet_age = 3
SELECT s.lname FROM student s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pet_age = 3
SELECT s.lname FROM students s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pet_age = 3
SELECT s.lname FROM students s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pet_age = 3
SELECT s.lname FROM students s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pet_age = 3
SELECT s.lname FROM students s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pet_age = 3",SELECT s.lname FROM students s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pet_age = 3,0,0.0
448,387,List the name of teachers whose hometown is not `` Little Lever Urban District '' .,course_teach,easy,"select name from teacher where hometown != ""little lever urban district""",7,"SELECT name FROM teacher WHERE hometown != 'Little Lever Urban District'
SELECT name FROM teacher WHERE hometown != 'Little Lever Urban District'
SELECT name FROM teacher WHERE hometown != 'Little Lever Urban District'
SELECT name FROM teacher WHERE hometown != 'Little Lever Urban District'
SELECT name FROM teacher WHERE hometown != 'Little Lever Urban District'
SELECT name FROM teacher WHERE hometown != 'Little Lever Urban District'
SELECT name FROM teacher WHERE hometown != 'Little Lever Urban District'",SELECT name FROM teacher WHERE hometown != 'Little Lever Urban District',True,0.0
449,12,List all song names by singers above the average age.,concert_singer,hard,SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer),7,"SELECT song_name FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE singer.age > (SELECT AVG(age) FROM singer)
SELECT song_name FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE singer.age > (SELECT AVG(age) FROM singer)
SELECT song_name FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE singer.age > (SELECT AVG(age) FROM singer)
SELECT s.song_name FROM singer s JOIN singer_in_concert sic ON s.singer_id = sic.singer_id JOIN concert c ON sic.concert_id = c.concert_id WHERE s.age > (SELECT AVG(age) FROM singer) ORDER BY s.song_name
SELECT song_name FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE singer.age > (SELECT AVG(age) FROM singer)
SELECT s.song_name FROM singer s JOIN singer_in_concert sic ON s.singer_id = sic.singer_id JOIN concert c ON sic.concert_id = c.concert_id WHERE s.age > (SELECT AVG(age) FROM singer) ORDER BY s.song_name
SELECT s.song_name FROM singer s JOIN singer_in_concert sic ON s.singer_id = sic.singer_id JOIN concert c ON sic.concert_id = c.concert_id WHERE s.age > (SELECT AVG(age) FROM singer) ORDER BY s.song_name",SELECT song_name FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE singer.age > (SELECT AVG(age) FROM singer),False,0.0
450,343,Which template type code is used by most number of documents?,cre_Doc_Template_Mgt,extra,SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1,7,"SELECT template_type_code, COUNT(*) AS num_documents FROM documents JOIN templates ON documents.template_id = templates.template_id GROUP BY template_type_code ORDER BY num_documents DESC LIMIT 1
SELECT template_type_code, COUNT(*) AS num_documents FROM documents JOIN templates ON documents.template_id = templates.template_id GROUP BY template_type_code ORDER BY num_documents DESC LIMIT 1
SELECT template_type_code, COUNT(*) AS num_documents FROM documents JOIN templates ON documents.template_id = templates.template_id GROUP BY template_type_code ORDER BY num_documents DESC LIMIT 1
SELECT template_type_code, COUNT(*) AS num_documents FROM documents JOIN templates ON documents.template_id = templates.template_id GROUP BY template_type_code ORDER BY num_documents DESC LIMIT 1
SELECT template_type_code, COUNT(*) AS num_documents FROM documents JOIN templates ON documents.template_id = templates.template_id GROUP BY template_type_code ORDER BY num_documents DESC LIMIT 1
SELECT template_type_code, COUNT(*) AS num_documents FROM documents JOIN templates ON documents.template_id = templates.template_id GROUP BY template_type_code ORDER BY num_documents DESC LIMIT 1
SELECT template_type_code, COUNT(*) AS num_documents FROM documents JOIN templates ON documents.template_id = templates.template_id GROUP BY template_type_code ORDER BY num_documents DESC LIMIT 1","SELECT template_type_code, COUNT(*) AS num_documents FROM documents JOIN templates ON documents.template_id = templates.template_id GROUP BY template_type_code ORDER BY num_documents DESC LIMIT 1",0,0.0
451,938,What is the description of the treatment type that costs the least money in total?,dog_kennels,extra,SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1,7,"SELECT treatment_type_description FROM treatments JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code ORDER BY cost_of_treatment ASC LIMIT 1
SELECT treatment_type_description FROM treatments JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code ORDER BY cost_of_treatment ASC LIMIT 1
SELECT treatment_type_description FROM treatments JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code ORDER BY cost_of_treatment ASC LIMIT 1
SELECT treatment_type_description FROM treatments JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code GROUP BY treatment_type_code ORDER BY SUM(cost_of_treatment) ASC LIMIT 1
SELECT treatment_type_description FROM treatments JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code ORDER BY cost_of_treatment ASC LIMIT 1
SELECT treatment_type_description FROM treatments JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code ORDER BY cost_of_treatment ASC LIMIT 1
SELECT treatment_type_description FROM treatments JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code GROUP BY treatment_type_code ORDER BY SUM(cost_of_treatment) ASC LIMIT 1",SELECT treatment_type_description FROM treatments JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code ORDER BY cost_of_treatment ASC LIMIT 1,0,1.0
452,406,What are the names of the teachers and how many courses do they teach?,course_teach,medium,"SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name",7,"SELECT t.name, COUNT(ca.course_id) AS num_courses FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id GROUP BY t.teacher_id
SELECT t.name, COUNT(ca.course_id) AS num_courses FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id GROUP BY t.teacher_id
SELECT t.name, COUNT(ca.course_id) AS num_courses FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id GROUP BY t.teacher_id
SELECT t.name, COUNT(ca.course_id) AS num_courses FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id GROUP BY t.teacher_id
SELECT t.name, COUNT(ca.course_id) AS num_courses FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id GROUP BY t.teacher_id
SELECT t.name, COUNT(ca.course_id) AS num_courses FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id GROUP BY t.teacher_id
SELECT t.name, COUNT(ca.course_id) AS num_courses FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id GROUP BY t.teacher_id","SELECT t.name, COUNT(ca.course_id) AS num_courses FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id GROUP BY t.teacher_id",0,1.0
453,944,What are the first name and last name of the professionals who have done treatment with cost below average?,dog_kennels,extra,"SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )",7,"SELECT p.first_name, p.last_name FROM professionals p JOIN treatments t ON p.professional_id = t.professional_id WHERE t.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM treatments)
SELECT p.first_name, p.last_name FROM professionals p JOIN treatments t ON p.professional_id = t.professional_id WHERE t.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM treatments)
SELECT p.first_name, p.last_name FROM professionals p JOIN treatments t ON p.professional_id = t.professional_id WHERE t.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM treatments)
SELECT p.first_name, p.last_name FROM professionals p JOIN treatments t ON p.professional_id = t.professional_id WHERE t.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM treatments)
SELECT p.first_name, p.last_name FROM professionals p JOIN treatments t ON p.professional_id = t.professional_id WHERE t.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM treatments)
SELECT p.first_name, p.last_name FROM professionals p JOIN treatments t ON p.professional_id = t.professional_id WHERE t.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM treatments)
SELECT p.first_name, p.last_name FROM professionals p JOIN treatments t ON p.professional_id = t.professional_id WHERE t.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM treatments)","SELECT p.first_name, p.last_name FROM professionals p JOIN treatments t ON p.professional_id = t.professional_id WHERE t.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM treatments)",0,0.0
454,861,What are years of founding for orchestras that have had more than a single performance?,orchestra,medium,SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1,7,"SELECT DISTINCT year_of_founded FROM orchestra WHERE orchestra_id IN (SELECT orchestra_id FROM performance GROUP BY orchestra_id HAVING COUNT(performance_id) > 1)
SELECT DISTINCT year_of_founded FROM orchestra WHERE orchestra_id IN (SELECT orchestra_id FROM performance GROUP BY orchestra_id HAVING COUNT(performance_id) > 1)
SELECT DISTINCT year_of_founded FROM orchestra WHERE orchestra_id IN (SELECT orchestra_id FROM performance GROUP BY orchestra_id HAVING COUNT(performance_id) > 1)
SELECT DISTINCT year_of_founded FROM orchestra WHERE orchestra_id IN (SELECT orchestra_id FROM performance GROUP BY orchestra_id HAVING COUNT(performance_id) > 1)
SELECT DISTINCT year_of_founded FROM orchestra WHERE orchestra_id IN (SELECT orchestra_id FROM performance GROUP BY orchestra_id HAVING COUNT(performance_id) > 1)
SELECT DISTINCT year_of_founded  FROM orchestra  WHERE orchestra_id IN (     SELECT orchestra_id      FROM performance      GROUP BY orchestra_id      HAVING COUNT(performance_id) > 1 )
SELECT DISTINCT year_of_founded  FROM orchestra  WHERE orchestra_id IN (     SELECT orchestra_id      FROM performance      GROUP BY orchestra_id      HAVING COUNT(performance_id) > 1 )",SELECT DISTINCT year_of_founded FROM orchestra WHERE orchestra_id IN (SELECT orchestra_id FROM performance GROUP BY orchestra_id HAVING COUNT(performance_id) > 1),0,1.0
455,909,What are the names of students who have 2 or more likes?,network_1,medium,SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2,7,"SELECT DISTINCT hs1.name FROM highschooler hs1 JOIN likes l1 ON hs1.id = l1.student_id JOIN likes l2 ON l1.liked_id = l2.student_id WHERE hs1.id = l2.liked_id AND hs1.id <> l2.liked_id
SELECT DISTINCT hs1.name FROM highschooler hs1 JOIN likes l1 ON hs1.id = l1.student_id JOIN likes l2 ON l1.liked_id = l2.student_id WHERE hs1.id = l2.liked_id AND hs1.id <> l2.liked_id
SELECT DISTINCT hs1.name FROM highschooler hs1 JOIN likes l1 ON hs1.id = l1.student_id JOIN likes l2 ON l1.liked_id = l2.student_id WHERE hs1.id = l2.liked_id AND hs1.id <> l2.liked_id
SELECT DISTINCT hs1.name FROM highschooler hs1 JOIN likes l1 ON hs1.id = l1.student_id JOIN likes l2 ON l1.liked_id = l2.student_id WHERE hs1.id = l2.student_id AND hs1.id <> l2.liked_id GROUP BY hs1.id HAVING COUNT(DISTINCT l2.liked_id) >= 2
SELECT DISTINCT hs1.name FROM highschooler hs1 JOIN likes l1 ON hs1.id = l1.student_id JOIN likes l2 ON l1.liked_id = l2.student_id WHERE hs1.id = l2.liked_id AND hs1.id <> l2.liked_id
SELECT DISTINCT hs1.name FROM highschooler hs1 JOIN likes l1 ON hs1.id = l1.student_id JOIN likes l2 ON l1.liked_id = l2.student_id WHERE hs1.id = l2.liked_id AND hs1.id <> l2.liked_id
SELECT DISTINCT hs1.name FROM highschooler hs1 JOIN likes l1 ON hs1.id = l1.student_id JOIN likes l2 ON l1.liked_id = l2.student_id WHERE hs1.id = l2.liked_id AND hs1.id <> l2.liked_id",SELECT DISTINCT hs1.name FROM highschooler hs1 JOIN likes l1 ON hs1.id = l1.student_id JOIN likes l2 ON l1.liked_id = l2.student_id WHERE hs1.id = l2.liked_id AND hs1.id <> l2.liked_id,0,1.0
456,987,Compute the average age of all the dogs.,dog_kennels,easy,SELECT avg(age) FROM Dogs,7,"SELECT AVG(age) FROM dogs
SELECT AVG(age) FROM dogs
SELECT AVG(age) FROM dogs
SELECT AVG(age) FROM dogs
SELECT AVG(age) FROM dogs
SELECT AVG(age) FROM dogs
SELECT AVG(age) FROM dogs",SELECT AVG(age) FROM dogs,True,1.0
457,593,"List the title of all cartoon directed by ""Ben Jones"" or ""Brandon Vietti"".",tvshow,medium,"SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"" OR Directed_by = ""Brandon Vietti"";",7,"SELECT title FROM cartoon WHERE directed_by IN ('Ben Jones', 'Brandon Vietti')
SELECT title FROM cartoon WHERE directed_by IN ('Ben Jones', 'Brandon Vietti')
SELECT title FROM cartoon WHERE directed_by IN ('Ben Jones', 'Brandon Vietti')
SELECT title FROM cartoon WHERE directed_by IN ('Ben Jones', 'Brandon Vietti')
SELECT title FROM cartoon WHERE directed_by IN ('Ben Jones', 'Brandon Vietti')
SELECT title  FROM cartoon  WHERE directed_by IN ('Ben Jones', 'Brandon Vietti')
SELECT title FROM cartoon WHERE directed_by IN ('Ben Jones', 'Brandon Vietti')","SELECT title FROM cartoon WHERE directed_by IN ('Ben Jones', 'Brandon Vietti')",0,1.0
458,248,Give the flight numbers of flights leaving from APG.,flight_2,easy,"SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  ""APG""",7,"SELECT flightno FROM flights WHERE sourceairport IN (SELECT airportcode FROM airports WHERE city = 'APG')
SELECT flightno FROM flights WHERE sourceairport IN (SELECT airportcode FROM airports WHERE city = 'APG')
SELECT flightno FROM flights WHERE sourceairport IN (SELECT airportcode FROM airports WHERE city = 'APG')
SELECT flightno FROM flights WHERE sourceairport IN (SELECT airportcode FROM airports WHERE city = 'APG')
SELECT flightno FROM flights WHERE sourceairport IN (SELECT airportcode FROM airports WHERE city = 'APG')
SELECT flightno FROM flights WHERE sourceairport IN (SELECT airportcode FROM airports WHERE city = 'APG')
SELECT flightno FROM flights WHERE sourceairport IN (SELECT airportcode FROM airports WHERE city = 'APG')",SELECT flightno FROM flights WHERE sourceairport IN (SELECT airportcode FROM airports WHERE city = 'APG'),0,1.0
459,855,What are the orchestras that do not have any performances?,orchestra,hard,SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance),7,"SELECT o.orchestra, o.conductor_id FROM orchestra o LEFT JOIN performance p ON o.orchestra_id = p.orchestra_id WHERE p.performance_id IS NULL
SELECT o.orchestra, o.conductor_id, o.record_company, o.year_of_founded, o.major_record_format FROM orchestra o LEFT JOIN performance p ON o.orchestra_id = p.orchestra_id WHERE p.performance_id IS NULL
SELECT o.orchestra, o.conductor_id, o.record_company, o.year_of_founded, o.major_record_format FROM orchestra o LEFT JOIN performance p ON o.orchestra_id = p.orchestra_id WHERE p.performance_id IS NULL
SELECT orchestra.orchestra_id, orchestra.orchestra, orchestra.conductor_id, orchestra.record_company, orchestra.year_of_founded, orchestra.major_record_format FROM orchestra LEFT JOIN performance ON orchestra.orchestra_id = performance.orchestra_id WHERE performance.performance_id IS NULL
SELECT o.orchestra, o.conductor_id FROM orchestra o LEFT JOIN performance p ON o.orchestra_id = p.orchestra_id WHERE p.performance_id IS NULL
SELECT o.orchestra, o.conductor_id FROM orchestra o LEFT JOIN performance p ON o.orchestra_id = p.orchestra_id WHERE p.performance_id IS NULL
SELECT o.orchestra, o.conductor_id, o.record_company, o.year_of_founded, o.major_record_format FROM orchestra o LEFT JOIN performance p ON o.orchestra_id = p.orchestra_id WHERE p.performance_id IS NULL","SELECT o.orchestra, o.conductor_id FROM orchestra o LEFT JOIN performance p ON o.orchestra_id = p.orchestra_id WHERE p.performance_id IS NULL",0,0.0
460,930,"Which owner owns the most dogs? List the owner id, first name and last name.",dog_kennels,extra,"SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT o.owner_id, o.first_name, o.last_name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id GROUP BY o.owner_id ORDER BY COUNT(d.dog_id) DESC LIMIT 1
SELECT o.owner_id, o.first_name, o.last_name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id GROUP BY o.owner_id ORDER BY COUNT(d.dog_id) DESC LIMIT 1
SELECT o.owner_id, o.first_name, o.last_name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id GROUP BY o.owner_id ORDER BY COUNT(d.dog_id) DESC LIMIT 1
SELECT o.owner_id, o.first_name, o.last_name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id GROUP BY o.owner_id ORDER BY COUNT(d.dog_id) DESC LIMIT 1
SELECT o.owner_id, o.first_name, o.last_name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id GROUP BY o.owner_id ORDER BY COUNT(d.dog_id) DESC LIMIT 1
SELECT o.owner_id, o.first_name, o.last_name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id GROUP BY o.owner_id ORDER BY COUNT(d.dog_id) DESC LIMIT 1
SELECT o.owner_id, o.first_name, o.last_name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id GROUP BY o.owner_id ORDER BY COUNT(d.dog_id) DESC LIMIT 1","SELECT o.owner_id, o.first_name, o.last_name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id GROUP BY o.owner_id ORDER BY COUNT(d.dog_id) DESC LIMIT 1",0,1.0
461,620,"When did the episode ""A Love of a Lifetime"" air?",tvshow,easy,"SELECT Air_Date FROM TV_series WHERE Episode = ""A Love of a Lifetime"";",7,"SELECT air_date FROM tv_series WHERE episode = 'A Love of a Lifetime'
SELECT air_date FROM tv_series WHERE episode = 'A Love of a Lifetime'
SELECT air_date FROM tv_series WHERE episode = 'A Love of a Lifetime'
SELECT air_date FROM tv_series WHERE episode = 'A Love of a Lifetime'
SELECT air_date FROM tv_series WHERE episode = 'A Love of a Lifetime'
SELECT air_date FROM tv_series WHERE episode = 'A Love of a Lifetime'
SELECT air_date FROM tv_series WHERE episode = 'A Love of a Lifetime'",SELECT air_date FROM tv_series WHERE episode = 'A Love of a Lifetime',True,1.0
462,786,Which unique cities are in Asian countries where Chinese is the official language ?,world_1,hard,"select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  ""asia""",7,"SELECT DISTINCT city.name FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode JOIN country ON city.countrycode = country.code WHERE countrylanguage.language = 'Chinese' AND countrylanguage.isofficial = 'T'
SELECT DISTINCT city.name FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode JOIN country ON city.countrycode = country.code WHERE countrylanguage.language = 'Chinese' AND countrylanguage.isofficial = 'T'
SELECT DISTINCT city.name FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode JOIN country ON city.countrycode = country.code WHERE countrylanguage.language = 'Chinese' AND countrylanguage.isofficial = 'T'
SELECT DISTINCT city.name FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode JOIN country ON city.countrycode = country.code WHERE countrylanguage.language = 'Chinese' AND countrylanguage.isofficial = 'T'
SELECT DISTINCT city.name FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode JOIN country ON city.countrycode = country.code WHERE countrylanguage.language = 'Chinese' AND countrylanguage.isofficial = 'T'
SELECT DISTINCT city.name FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode JOIN country ON city.countrycode = country.code WHERE countrylanguage.language = 'Chinese' AND countrylanguage.isofficial = 'T'
SELECT DISTINCT city.name FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode JOIN country ON city.countrycode = country.code WHERE countrylanguage.language = 'Chinese' AND countrylanguage.isofficial = 'T'",SELECT DISTINCT city.name FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode JOIN country ON city.countrycode = country.code WHERE countrylanguage.language = 'Chinese' AND countrylanguage.isofficial = 'T',0,0.0
463,390,What are the names of the teachers who are aged either 32 or 33?,course_teach,medium,SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33,7,"SELECT name FROM teacher WHERE age IN (32, 33)
SELECT name FROM teacher WHERE age IN (32, 33)
SELECT name FROM teacher WHERE age IN (32, 33)
SELECT name FROM teacher WHERE age IN (32, 33)
SELECT name FROM teacher WHERE age IN (32, 33)
SELECT name FROM teacher WHERE age IN (32, 33)
SELECT name FROM teacher WHERE age IN (32, 33)","SELECT name FROM teacher WHERE age IN (32, 33)",0,1.0
464,891,Return the names of friends of the high school student Kyle.,network_1,hard,"SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  ""Kyle""",7,"SELECT DISTINCT hs1.name FROM highschooler hs1 JOIN friend ON hs1.id = friend.student_id JOIN highschooler hs2 ON friend.friend_id = hs2.id WHERE hs2.name = 'Kyle'
SELECT DISTINCT hs1.name FROM highschooler hs1 JOIN friend ON hs1.id = friend.student_id JOIN highschooler hs2 ON friend.friend_id = hs2.id WHERE hs2.name = 'Kyle'
SELECT DISTINCT hs1.name FROM highschooler hs1 JOIN friend ON hs1.id = friend.student_id JOIN highschooler hs2 ON friend.friend_id = hs2.id WHERE hs2.name = 'Kyle'
SELECT DISTINCT hs1.name FROM highschooler hs1 JOIN friend ON hs1.id = friend.student_id JOIN highschooler hs2 ON friend.friend_id = hs2.id WHERE hs2.name = 'Kyle'
SELECT DISTINCT hs1.name FROM highschooler hs1 JOIN friend ON hs1.id = friend.student_id JOIN highschooler hs2 ON friend.friend_id = hs2.id WHERE hs2.name = 'Kyle'
SELECT DISTINCT hs2.name FROM highschooler hs1 JOIN friend ON hs1.id = friend.student_id JOIN highschooler hs2 ON friend.friend_id = hs2.id WHERE hs1.name = 'Kyle'
SELECT DISTINCT hs1.name FROM highschooler hs1 JOIN friend ON hs1.id = friend.student_id JOIN highschooler hs2 ON friend.friend_id = hs2.id WHERE hs2.name = 'Kyle'",SELECT DISTINCT hs1.name FROM highschooler hs1 JOIN friend ON hs1.id = friend.student_id JOIN highschooler hs2 ON friend.friend_id = hs2.id WHERE hs2.name = 'Kyle',0,0.0
465,28,Show the stadium names without any concert.,concert_singer,hard,SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert),7,"SELECT DISTINCT stadium.name FROM stadium LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.concert_id IS NULL
SELECT DISTINCT stadium.name FROM stadium LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.concert_id IS NULL
SELECT DISTINCT stadium.name FROM stadium LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.concert_id IS NULL
SELECT DISTINCT stadium.name FROM stadium LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.concert_id IS NULL
SELECT DISTINCT stadium.name FROM stadium LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.concert_id IS NULL
SELECT DISTINCT stadium.name FROM stadium LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.concert_id IS NULL
SELECT DISTINCT stadium.name FROM stadium LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.concert_id IS NULL",SELECT DISTINCT stadium.name FROM stadium LEFT JOIN concert ON stadium.stadium_id = concert.stadium_id WHERE concert.concert_id IS NULL,0,1.0
466,529,What is the semester which most student registered in? Show both the name and the id.,student_transcripts_tracking,extra,"SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT semester_id, semester_name FROM semesters ORDER BY (SELECT COUNT(*) FROM student_enrolment WHERE semesters.semester_id = student_enrolment.semester_id) DESC LIMIT 1
SELECT semester_id, semester_name FROM semesters ORDER BY (SELECT COUNT(*) FROM student_enrolment WHERE semesters.semester_id = student_enrolment.semester_id) DESC LIMIT 1
SELECT semester_id, semester_name FROM semesters ORDER BY (SELECT COUNT(*) FROM student_enrolment WHERE student_enrolment.semester_id = semesters.semester_id) DESC LIMIT 1
SELECT semester_id, semester_name FROM semesters ORDER BY (SELECT COUNT(*) FROM student_enrolment WHERE semesters.semester_id = student_enrolment.semester_id) DESC LIMIT 1
SELECT semester_id, semester_name FROM semesters ORDER BY (SELECT COUNT(*) FROM student_enrolment WHERE student_enrolment.semester_id = semesters.semester_id) DESC LIMIT 1
SELECT s.semester_id, s.semester_name FROM semesters s JOIN student_enrolment se ON s.semester_id = se.semester_id GROUP BY s.semester_id, s.semester_name ORDER BY COUNT(se.student_id) DESC LIMIT 1
SELECT semester_id, semester_name FROM semesters ORDER BY (SELECT COUNT(*) FROM student_enrolment WHERE student_enrolment.semester_id = semesters.semester_id) DESC LIMIT 1","SELECT semester_id, semester_name FROM semesters ORDER BY (SELECT COUNT(*) FROM student_enrolment WHERE semesters.semester_id = student_enrolment.semester_id) DESC LIMIT 1",0,0.0
467,101,Find the make and production time of the cars that were produced in the earliest year?,car_1,extra,"SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);",7,"SELECT maker, MIN(year) AS earliest_year FROM cars_data JOIN car_makers ON cars_data.id = car_makers.id GROUP BY maker ORDER BY earliest_year LIMIT 1
SELECT maker, year FROM cars_data JOIN car_makers ON cars_data.id = car_makers.id GROUP BY maker ORDER BY year ASC LIMIT 1
SELECT maker, MIN(year) AS earliest_year FROM cars_data JOIN car_makers ON cars_data.id = car_makers.id GROUP BY maker ORDER BY earliest_year LIMIT 1
SELECT maker, MIN(year) AS earliest_year FROM cars_data JOIN car_makers ON cars_data.id = car_makers.id GROUP BY maker ORDER BY earliest_year LIMIT 1
SELECT maker, MIN(year) AS earliest_year FROM cars_data JOIN car_makers ON cars_data.id = car_makers.id GROUP BY maker ORDER BY earliest_year LIMIT 1
SELECT maker, year FROM cars_data JOIN car_makers ON cars_data.id = car_makers.id GROUP BY maker ORDER BY year ASC LIMIT 1
SELECT maker, year FROM cars_data JOIN car_makers ON cars_data.id = car_makers.id GROUP BY maker ORDER BY year ASC LIMIT 1","SELECT maker, MIN(year) AS earliest_year FROM cars_data JOIN car_makers ON cars_data.id = car_makers.id GROUP BY maker ORDER BY earliest_year LIMIT 1",0,0.0
468,940,Which owner has paid the largest amount of money in total for their dogs? Show the owner id and zip code.,dog_kennels,extra,"SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1",7,"SELECT o.owner_id, o.zip_code FROM owners o JOIN dogs d ON o.owner_id = d.owner_id JOIN treatments t ON d.dog_id = t.dog_id GROUP BY o.owner_id, o.zip_code ORDER BY SUM(t.cost_of_treatment) DESC LIMIT 1
SELECT o.owner_id, o.zip_code FROM owners o JOIN dogs d ON o.owner_id = d.owner_id JOIN treatments t ON d.dog_id = t.dog_id GROUP BY o.owner_id, o.zip_code ORDER BY SUM(t.cost_of_treatment) DESC LIMIT 1
SELECT o.owner_id, o.zip_code FROM owners o JOIN dogs d ON o.owner_id = d.owner_id JOIN treatments t ON d.dog_id = t.dog_id GROUP BY o.owner_id, o.zip_code ORDER BY SUM(t.cost_of_treatment) DESC LIMIT 1
SELECT o.owner_id, o.zip_code FROM owners o JOIN dogs d ON o.owner_id = d.owner_id JOIN treatments t ON d.dog_id = t.dog_id GROUP BY o.owner_id, o.zip_code ORDER BY SUM(t.cost_of_treatment) DESC LIMIT 1
SELECT o.owner_id, o.zip_code FROM owners o JOIN dogs d ON o.owner_id = d.owner_id JOIN treatments t ON d.dog_id = t.dog_id GROUP BY o.owner_id, o.zip_code ORDER BY SUM(t.cost_of_treatment) DESC LIMIT 1
SELECT o.owner_id, o.zip_code FROM owners o JOIN dogs d ON o.owner_id = d.owner_id JOIN treatments t ON d.dog_id = t.dog_id GROUP BY o.owner_id, o.zip_code ORDER BY SUM(t.cost_of_treatment) DESC LIMIT 1
SELECT o.owner_id, o.zip_code FROM owners o JOIN dogs d ON o.owner_id = d.owner_id JOIN treatments t ON d.dog_id = t.dog_id GROUP BY o.owner_id, o.zip_code ORDER BY SUM(t.cost_of_treatment) DESC LIMIT 1","SELECT o.owner_id, o.zip_code FROM owners o JOIN dogs d ON o.owner_id = d.owner_id JOIN treatments t ON d.dog_id = t.dog_id GROUP BY o.owner_id, o.zip_code ORDER BY SUM(t.cost_of_treatment) DESC LIMIT 1",0,1.0
469,538,What is the degree summary name that has the most number of students enrolled?,student_transcripts_tracking,extra,SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1,7,"SELECT degree_summary_name, COUNT(student_id) AS num_students FROM degree_programs JOIN student_enrolment ON degree_programs.degree_program_id = student_enrolment.degree_program_id GROUP BY degree_summary_name ORDER BY num_students DESC LIMIT 1
SELECT degree_summary_name, COUNT(student_id) AS num_students FROM degree_programs JOIN student_enrolment ON degree_programs.degree_program_id = student_enrolment.degree_program_id GROUP BY degree_summary_name ORDER BY num_students DESC LIMIT 1
SELECT degree_summary_name, COUNT(student_id) AS num_students FROM degree_programs JOIN student_enrolment ON degree_programs.degree_program_id = student_enrolment.degree_program_id GROUP BY degree_summary_name ORDER BY num_students DESC LIMIT 1
SELECT degree_summary_name, COUNT(student_id) AS num_students FROM degree_programs JOIN student_enrolment ON degree_programs.degree_program_id = student_enrolment.degree_program_id GROUP BY degree_summary_name ORDER BY num_students DESC LIMIT 1
SELECT degree_summary_name, COUNT(student_id) AS num_students FROM degree_programs JOIN student_enrolment ON degree_programs.degree_program_id = student_enrolment.degree_program_id GROUP BY degree_summary_name ORDER BY num_students DESC LIMIT 1
SELECT degree_summary_name, COUNT(student_id) AS num_students FROM degree_programs JOIN student_enrolment ON degree_programs.degree_program_id = student_enrolment.degree_program_id GROUP BY degree_summary_name ORDER BY num_students DESC LIMIT 1
SELECT degree_summary_name, COUNT(student_id) AS num_students FROM degree_programs JOIN student_enrolment ON degree_programs.degree_program_id = student_enrolment.degree_program_id GROUP BY degree_summary_name ORDER BY num_students DESC LIMIT 1","SELECT degree_summary_name, COUNT(student_id) AS num_students FROM degree_programs JOIN student_enrolment ON degree_programs.degree_program_id = student_enrolment.degree_program_id GROUP BY degree_summary_name ORDER BY num_students DESC LIMIT 1",0,0.0
470,484,What are the names and ranks of the three youngest winners across all matches?,wta_1,medium,"SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3",7,"SELECT winner_name, winner_rank FROM matches ORDER BY winner_age ASC LIMIT 3
SELECT winner_name, winner_rank FROM matches ORDER BY winner_age ASC LIMIT 3
SELECT winner_name, winner_rank FROM matches ORDER BY winner_age ASC LIMIT 3
SELECT winner_name, winner_rank FROM matches ORDER BY winner_age ASC LIMIT 3
SELECT winner_name, winner_rank FROM matches ORDER BY winner_age ASC LIMIT 3
SELECT winner_name, winner_rank FROM matches ORDER BY winner_age ASC LIMIT 3
SELECT winner_name, winner_rank FROM matches ORDER BY winner_age ASC LIMIT 3","SELECT winner_name, winner_rank FROM matches ORDER BY winner_age ASC LIMIT 3",True,1.0
471,756,Which language is the most popular on the Asian continent?,world_1,extra,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  ""Asia"" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1",7,"SELECT language FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE continent = 'Asia') ORDER BY percentage DESC LIMIT 1
SELECT language FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE continent = 'Asia') ORDER BY percentage DESC LIMIT 1
SELECT language FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE continent = 'Asia') GROUP BY language ORDER BY COUNT(*) DESC LIMIT 1
SELECT language FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE continent = 'Asia') ORDER BY percentage DESC LIMIT 1
SELECT language FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE continent = 'Asia') ORDER BY percentage DESC LIMIT 1
SELECT language FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE continent = 'Asia') ORDER BY percentage DESC LIMIT 1
SELECT language FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE continent = 'Asia') GROUP BY language ORDER BY COUNT(*) DESC LIMIT 1",SELECT language FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE continent = 'Asia') ORDER BY percentage DESC LIMIT 1,0,0.0
472,285,Find the name of the shops that do not hire any employee.,employee_hire_evaluation,hard,SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring),7,"SELECT shop.name FROM shop LEFT JOIN hiring ON shop.shop_id = hiring.shop_id WHERE hiring.employee_id IS NULL
SELECT shop.name FROM shop LEFT JOIN hiring ON shop.shop_id = hiring.shop_id WHERE hiring.employee_id IS NULL
SELECT shop.name FROM shop LEFT JOIN hiring ON shop.shop_id = hiring.shop_id WHERE hiring.employee_id IS NULL
SELECT shop.name FROM shop LEFT JOIN hiring ON shop.shop_id = hiring.shop_id WHERE hiring.employee_id IS NULL
SELECT shop.name FROM shop LEFT JOIN hiring ON shop.shop_id = hiring.shop_id WHERE hiring.employee_id IS NULL
SELECT shop.name FROM shop LEFT JOIN hiring ON shop.shop_id = hiring.shop_id WHERE hiring.employee_id IS NULL
SELECT shop.name FROM shop LEFT JOIN hiring ON shop.shop_id = hiring.shop_id WHERE hiring.employee_id IS NULL",SELECT shop.name FROM shop LEFT JOIN hiring ON shop.shop_id = hiring.shop_id WHERE hiring.employee_id IS NULL,0,1.0
473,646,What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones?,tvshow,hard,SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'),7,"SELECT DISTINCT tv_channel.package_option FROM tv_channel LEFT JOIN tv_series ON tv_channel.id = tv_series.channel LEFT JOIN cartoon ON tv_series.id = cartoon.channel WHERE cartoon.directed_by != 'Ben Jones' AND cartoon.title != 'cartoons'
SELECT DISTINCT t.package_option FROM tv_channel t LEFT JOIN tv_series ts ON t.id = ts.channel LEFT JOIN cartoon c ON ts.id = c.channel WHERE c.directed_by = 'Ben Jones' AND c.title NOT LIKE '%cartoon%' 
SELECT DISTINCT tv_channel.package_option FROM tv_channel LEFT JOIN tv_series ON tv_channel.id = tv_series.channel LEFT JOIN cartoon ON tv_series.id = cartoon.channel WHERE cartoon.directed_by != 'Ben Jones' AND cartoon.title != 'cartoons'
SELECT DISTINCT t.package_option FROM tv_channel t LEFT JOIN tv_series ts ON t.id = ts.channel LEFT JOIN cartoon c ON ts.id = c.channel WHERE c.directed_by = 'Ben Jones' AND c.title NOT LIKE '%cartoon%' 
SELECT DISTINCT t.package_option FROM tv_channel t LEFT JOIN tv_series ts ON t.id = ts.channel LEFT JOIN cartoon c ON ts.id = c.channel WHERE c.directed_by = 'Ben Jones' AND c.title NOT LIKE '%cartoon%' 
SELECT DISTINCT t.package_option FROM tv_channel t LEFT JOIN tv_series ts ON t.id = ts.channel LEFT JOIN cartoon c ON ts.id = c.channel WHERE c.directed_by = 'Ben Jones' AND c.title NOT LIKE '%cartoon%' 
SELECT DISTINCT t.package_option FROM tv_channel t LEFT JOIN tv_series ts ON t.id = ts.channel LEFT JOIN cartoon c ON ts.id = c.channel WHERE c.directed_by = 'Ben Jones' AND c.title NOT LIKE '%cartoon%' ",SELECT DISTINCT t.package_option FROM tv_channel t LEFT JOIN tv_series ts ON t.id = ts.channel LEFT JOIN cartoon c ON ts.id = c.channel WHERE c.directed_by = 'Ben Jones' AND c.title NOT LIKE '%cartoon%' ,0,0.0
474,561,Which address holds the most number of students currently? List the address id and all lines.,student_transcripts_tracking,extra,"SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT a.address_id, a.line_1, a.line_2, a.line_3, a.city, a.zip_postcode, a.state_province_county, a.country, a.other_address_details FROM addresses a JOIN students s ON a.address_id = s.current_address_id GROUP BY a.address
SELECT a.address_id, a.line_1, a.line_2, a.line_3, a.city, a.zip_postcode, a.state_province_county, a.country, a.other_address_details FROM addresses a JOIN students s ON a.address_id = s.current_address_id GROUP BY a.address
SELECT a.address_id, a.line_1, a.line_2, a.line_3, a.city, a.zip_postcode, a.state_province_county, a.country, a.other_address_details FROM addresses a JOIN students s ON a.address_id = s.current_address_id GROUP BY a.address
SELECT a.address_id, a.line_1, a.line_2, a.line_3, a.city, a.zip_postcode, a.state_province_county, a.country, a.other_address_details FROM addresses a JOIN students s ON a.address_id = s.current_address_id GROUP BY a.address
SELECT a.address_id, a.line_1, a.line_2, a.line_3, a.city, a.zip_postcode, a.state_province_county, a.country, a.other_address_details FROM addresses a JOIN students s ON a.address_id = s.current_address_id GROUP BY a.address
SELECT a.address_id, a.line_1, a.line_2, a.line_3, a.city, a.zip_postcode, a.state_province_county, a.country, a.other_address_details FROM addresses a JOIN students s ON a.address_id = s.current_address_id GROUP BY a.address_id ORDER BY COUNT
SELECT a.address_id, a.line_1, a.line_2, a.line_3, a.city, a.zip_postcode, a.state_province_county, a.country, a.other_address_details FROM addresses a JOIN students s ON a.address_id = s.current_address_id GROUP BY a.address","SELECT a.address_id, a.line_1, a.line_2, a.line_3, a.city, a.zip_postcode, a.state_province_county, a.country, a.other_address_details FROM addresses a JOIN students s ON a.address_id = s.current_address_id GROUP BY a.address",0,0.0
475,696,What are the number of votes from state 'NY' or 'CA'?,voter_1,medium,SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA',7,"SELECT COUNT(votes.vote_id) FROM votes WHERE votes.state IN ('NY', 'CA')
SELECT COUNT(*) FROM votes WHERE state IN ('NY', 'CA')
SELECT COUNT(votes.vote_id) FROM votes WHERE votes.state IN ('NY', 'CA')
SELECT COUNT(votes.vote_id) FROM votes WHERE votes.state IN ('NY', 'CA')
SELECT COUNT(votes.vote_id) FROM votes WHERE votes.state IN ('NY', 'CA')
SELECT COUNT(*) FROM votes WHERE state IN ('NY', 'CA')
SELECT COUNT(votes.vote_id) FROM votes WHERE votes.state IN ('NY', 'CA')","SELECT COUNT(votes.vote_id) FROM votes WHERE votes.state IN ('NY', 'CA')",0,1.0
476,820,What are the codes of countries where Spanish is spoken by the largest percentage of people?,world_1,medium,"SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  ""Spanish"" GROUP BY CountryCode",7,"SELECT code FROM countrylanguage WHERE language = 'Spanish' ORDER BY percentage DESC LIMIT 1
SELECT code FROM countrylanguage WHERE language = 'Spanish' ORDER BY percentage DESC LIMIT 1
SELECT code FROM countrylanguage WHERE language = 'Spanish' ORDER BY percentage DESC LIMIT 1
SELECT code FROM countrylanguage WHERE language = 'Spanish' ORDER BY percentage DESC LIMIT 1
SELECT code FROM countrylanguage WHERE language = 'Spanish' ORDER BY percentage DESC LIMIT 1
SELECT code FROM countrylanguage WHERE language = 'Spanish' ORDER BY percentage DESC LIMIT 1
SELECT code FROM countrylanguage WHERE language = 'Spanish' ORDER BY percentage DESC LIMIT 1",SELECT code FROM countrylanguage WHERE language = 'Spanish' ORDER BY percentage DESC LIMIT 1,0,0.0
477,769,What is the official language used in the country the name of whose head of state is Beatrix.,world_1,medium,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  ""Beatrix"" AND T2.IsOfficial  =  ""T""",7,"SELECT language FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.headofstate = 'Beatrix'
SELECT language FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.headofstate = 'Beatrix'
SELECT language FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.headofstate = 'Beatrix'
SELECT language FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.headofstate = 'Beatrix'
SELECT language FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.headofstate = 'Beatrix'
SELECT language FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.headofstate = 'Beatrix'
SELECT language FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.headofstate = 'Beatrix'",SELECT language FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.headofstate = 'Beatrix',0,0.0
478,608,"For each language, list the number of TV Channels that use it.",tvshow,medium,"SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE",7,"SELECT language, COUNT(channel) AS num_channels FROM tv_channel GROUP BY language
SELECT language, COUNT(channel) AS num_channels FROM tv_channel GROUP BY language
SELECT language, COUNT(channel) AS num_channels FROM tv_channel GROUP BY language
SELECT language, COUNT(channel) AS num_channels FROM tv_channel GROUP BY language
SELECT language, COUNT(channel) AS num_channels FROM tv_channel GROUP BY language
SELECT language, COUNT(channel) AS num_channels FROM tv_channel GROUP BY language
SELECT language, COUNT(channel) AS num_channels FROM tv_channel GROUP BY language","SELECT language, COUNT(channel) AS num_channels FROM tv_channel GROUP BY language",0,0.0
479,666,Return the birth date of the poker player with the lowest earnings.,poker_player,hard,SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1,7,"SELECT p.birth_date FROM poker_player p ORDER BY p.earnings ASC LIMIT 1
SELECT p.birth_date FROM poker_player p ORDER BY p.earnings ASC LIMIT 1
SELECT p.birth_date FROM poker_player p ORDER BY p.earnings ASC LIMIT 1
SELECT p.birth_date FROM poker_player p ORDER BY p.earnings ASC LIMIT 1
SELECT p.birth_date FROM poker_player p ORDER BY p.earnings ASC LIMIT 1
SELECT p.birth_date FROM poker_player p ORDER BY p.earnings ASC LIMIT 1
SELECT p.birth_date FROM poker_player p ORDER BY p.earnings ASC LIMIT 1",SELECT p.birth_date FROM poker_player p ORDER BY p.earnings ASC LIMIT 1,0,0.0
480,986,What is the average age of all the dogs?,dog_kennels,easy,SELECT avg(age) FROM Dogs,7,"SELECT AVG(age) FROM dogs
SELECT AVG(age) FROM dogs
SELECT AVG(age) FROM dogs
SELECT AVG(age) FROM dogs
SELECT AVG(age) FROM dogs
SELECT AVG(age) FROM dogs
SELECT AVG(age) FROM dogs",SELECT AVG(age) FROM dogs,True,1.0
481,924,Which dogs have not cost their owner more than 1000 for treatment ? List the dog names .,dog_kennels,hard,select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 ),7,"SELECT d.name, d.breed_code, d.size_code, d.age, d.gender, d.weight FROM dogs d JOIN treatments t ON d.dog_id = t.dog_id WHERE t.cost_of_treatment <= 1000
SELECT d.name, d.breed_code, d.size_code, d.age, d.gender, d.weight FROM dogs d JOIN treatments t ON d.dog_id = t.dog_id WHERE t.cost_of_treatment <= 1000
SELECT d.name, d.breed_code, d.size_code, d.age, d.gender, d.weight FROM dogs d JOIN treatments t ON d.dog_id = t.dog_id WHERE t.cost_of_treatment <= 1000
SELECT d.name, d.breed_code, d.size_code, d.age, d.gender, d.weight FROM dogs d JOIN treatments t ON d.dog_id = t.dog_id WHERE t.cost_of_treatment <= 1000
SELECT d.name, d.breed_code, d.size_code, d.age, d.gender, d.weight FROM dogs d JOIN treatments t ON d.dog_id = t.dog_id WHERE t.cost_of_treatment <= 1000
SELECT d.name, d.breed_code, d.size_code FROM dogs d JOIN treatments t ON d.dog_id = t.dog_id WHERE t.cost_of_treatment <= 1000
SELECT d.name, d.breed_code, d.size_code, d.age, d.gender, d.weight FROM dogs d JOIN treatments t ON d.dog_id = t.dog_id WHERE t.cost_of_treatment <= 1000","SELECT d.name, d.breed_code, d.size_code, d.age, d.gender, d.weight FROM dogs d JOIN treatments t ON d.dog_id = t.dog_id WHERE t.cost_of_treatment <= 1000",0,0.0
482,651,List the final tables made and the best finishes of poker players.,poker_player,medium,"SELECT Final_Table_Made ,  Best_Finish FROM poker_player",7,"SELECT pp.poker_player_id, p.name, pp.final_table_made, pp.best_finish, pp.money_rank, pp.earnings FROM poker_player pp JOIN people p ON pp.people_id = p.people_id
SELECT pp.poker_player_id, p.name, pp.final_table_made, pp.best_finish, pp.money_rank, pp.earnings FROM poker_player pp JOIN people p ON pp.people_id = p.people_id
SELECT pp.poker_player_id, p.name, pp.final_table_made, pp.best_finish, pp.money_rank, pp.earnings FROM poker_player pp JOIN people p ON pp.people_id = p.people_id
SELECT pp.poker_player_id, p.name, pp.final_table_made, pp.best_finish, pp.money_rank, pp.earnings FROM poker_player pp JOIN people p ON pp.people_id = p.people_id
SELECT pp.poker_player_id, p.name, pp.final_table_made, pp.best_finish, pp.money_rank, pp.earnings FROM poker_player pp JOIN people p ON pp.people_id = p.people_id
SELECT pp.poker_player_id, p.name, pp.final_table_made, pp.best_finish, pp.money_rank, pp.earnings FROM poker_player pp JOIN people p ON pp.people_id = p.people_id
SELECT pp.poker_player_id, p.name, pp.final_table_made, pp.best_finish, pp.money_rank, pp.earnings FROM poker_player pp JOIN people p ON pp.people_id = p.people_id","SELECT pp.poker_player_id, p.name, pp.final_table_made, pp.best_finish, pp.money_rank, pp.earnings FROM poker_player pp JOIN people p ON pp.people_id = p.people_id",0,0.0
483,560,What is the first name of the student whose permanent address is different from his or her current one?,student_transcripts_tracking,easy,SELECT first_name FROM Students WHERE current_address_id != permanent_address_id,7,"SELECT s.first_name FROM students s WHERE s.permanent_address_id != s.current_address_id
SELECT first_name FROM students WHERE permanent_address_id != current_address_id
SELECT s.first_name FROM students s WHERE s.permanent_address_id != s.current_address_id
SELECT first_name FROM students WHERE permanent_address_id != current_address_id
SELECT first_name FROM students WHERE permanent_address_id != current_address_id
SELECT first_name FROM students WHERE permanent_address_id != current_address_id
SELECT s.first_name FROM students s WHERE s.permanent_address_id != s.current_address_id",SELECT first_name FROM students WHERE permanent_address_id != current_address_id,0,1.0
484,573,"Show the date of the transcript which shows the least number of results, also list the id.",student_transcripts_tracking,extra,"SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1",7,"SELECT transcript_date, id.addresses AS address_id, id.line_1, id.line_2, id.line_3, id.city, id.zip_postcode, id.state_province_county, id.country, id.other_address_details, courses.course_id, courses.course_name, courses.course_description, courses.
SELECT transcript_date, id.addresses AS address_id, id.line_1, id.line_2, id.line_3, id.city, id.zip_postcode, id.state_province_county, id.country, id.other_address_details, courses.course_id, courses.course_name, courses.course_description, courses.
SELECT transcript_date, id.addresses AS address_id, id.line_1, id.line_2, id.line_3, id.city, id.zip_postcode, id.state_province_county, id.country, id.other_address_details, courses.course_id, courses.course_name, courses.course_description, courses.
SELECT transcript_date, id.addresses AS address_id, id.line_1, id.line_2, id.line_3, id.city, id.zip_postcode, id.state_province_county, id.country, id.other_address_details, courses.course_id, courses.course_name, courses.course_description, courses.
SELECT transcript_date, id.addresses AS address_id, id.line_1, id.line_2, id.line_3, id.city, id.zip_postcode, id.state_province_county, id.country, id.other_address_details, courses.course_id, courses.course_name, courses.course_description, courses.
SELECT transcript_date, id.addresses AS address_id, id.line_1, id.line_2, id.line_3, id.city, id.zip_postcode, id.state_province_county, id.country, id.other_address_details, courses.course_id, courses.course_name, courses.course_description, courses.
SELECT transcript_date, id.addresses AS address_id, id.line_1, id.line_2, id.line_3, id.city, id.zip_postcode, id.state_province_county, id.country, id.other_address_details, courses.course_id, courses.course_name, courses.course_description, courses.","SELECT transcript_date, id.addresses AS address_id, id.line_1, id.line_2, id.line_3, id.city, id.zip_postcode, id.state_province_county, id.country, id.other_address_details, courses.course_id, courses.course_name, courses.course_description, courses.",0,0.0
485,827,"Return the names of conductors that do not have the nationality ""USA"".",orchestra,easy,SELECT Name FROM conductor WHERE Nationality != 'USA',7,"SELECT c.name FROM conductor c LEFT JOIN orchestra o ON c.conductor_id = o.conductor_id WHERE c.nationality != 'USA'
SELECT c.name FROM conductor c LEFT JOIN orchestra o ON c.conductor_id = o.conductor_id WHERE c.nationality != 'USA'
SELECT c.name FROM conductor c LEFT JOIN orchestra o ON c.conductor_id = o.conductor_id WHERE c.nationality != 'USA'
SELECT c.name FROM conductor c LEFT JOIN orchestra o ON c.conductor_id = o.conductor_id WHERE c.nationality != 'USA'
SELECT c.name FROM conductor c LEFT JOIN orchestra o ON c.conductor_id = o.conductor_id WHERE c.nationality != 'USA'
SELECT c.name FROM conductor c LEFT JOIN orchestra o ON c.conductor_id = o.conductor_id WHERE c.nationality != 'USA'
SELECT c.name FROM conductor c LEFT JOIN orchestra o ON c.conductor_id = o.conductor_id WHERE c.nationality != 'USA'",SELECT c.name FROM conductor c LEFT JOIN orchestra o ON c.conductor_id = o.conductor_id WHERE c.nationality != 'USA',0,1.0
486,209,How many flights arriving in Aberdeen city?,flight_2,medium,"SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""",7,"SELECT COUNT(*) FROM flights WHERE destairport = 'ABZ'
SELECT COUNT(*) FROM flights WHERE destairport = 'ABZ'
SELECT COUNT(*) FROM flights WHERE destairport = 'ABZ'
SELECT COUNT(*) FROM flights WHERE destairport = 'ABZ'
SELECT COUNT(*) FROM flights WHERE destairport = 'ABZ'
SELECT COUNT(*) FROM flights WHERE destairport = 'ABZ'
SELECT COUNT(*) FROM flights WHERE destairport = 'ABZ'",SELECT COUNT(*) FROM flights WHERE destairport = 'ABZ',0,1.0
487,279,Find the name of the employee who got the highest one time bonus.,employee_hire_evaluation,hard,SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1,7,"SELECT e.name FROM employee e JOIN evaluation ev ON e.employee_id = ev.employee_id WHERE ev.bonus = (SELECT MAX(bonus) FROM evaluation)
SELECT e.name FROM employee e JOIN evaluation ev ON e.employee_id = ev.employee_id WHERE ev.bonus = (SELECT MAX(bonus) FROM evaluation)
SELECT e.name FROM employee e JOIN evaluation ev ON e.employee_id = ev.employee_id WHERE ev.bonus = (SELECT MAX(bonus) FROM evaluation)
SELECT e.name FROM employee e JOIN evaluation ev ON e.employee_id = ev.employee_id WHERE ev.bonus = (SELECT MAX(bonus) FROM evaluation)
SELECT e.name FROM employee e JOIN evaluation ev ON e.employee_id = ev.employee_id WHERE ev.bonus = (SELECT MAX(bonus) FROM evaluation)
SELECT e.name FROM employee e JOIN evaluation ev ON e.employee_id = ev.employee_id WHERE ev.bonus = (SELECT MAX(bonus) FROM evaluation)
SELECT e.name FROM employee e JOIN evaluation ev ON e.employee_id = ev.employee_id WHERE ev.bonus = (SELECT MAX(bonus) FROM evaluation)",SELECT e.name FROM employee e JOIN evaluation ev ON e.employee_id = ev.employee_id WHERE ev.bonus = (SELECT MAX(bonus) FROM evaluation),0,1.0
488,751,How many continents speak Chinese?,world_1,medium,"SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""Chinese""",7,"SELECT COUNT(DISTINCT countrycode) FROM countrylanguage WHERE language = 'Chinese'
SELECT COUNT(DISTINCT countrycode) FROM countrylanguage WHERE language = 'Chinese'
SELECT COUNT(DISTINCT countrycode) AS num_continents_speaking_chinese FROM countrylanguage WHERE language = 'Chinese'
SELECT COUNT(DISTINCT countrycode) FROM countrylanguage WHERE language = 'Chinese'
SELECT COUNT(DISTINCT countrycode) AS num_continents_speaking_chinese FROM countrylanguage WHERE language = 'Chinese'
SELECT COUNT(DISTINCT countrycode) AS num_continents_speaking_chinese FROM countrylanguage WHERE language = 'Chinese'
SELECT COUNT(DISTINCT countrycode) FROM countrylanguage WHERE language = 'Chinese'",SELECT COUNT(DISTINCT countrycode) FROM countrylanguage WHERE language = 'Chinese',0,0.0
489,542,"What is the first, middle, and last name, along with the id and number of enrollments, for the student who enrolled the most in any program?",student_transcripts_tracking,extra,"SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT s.student_id, s.first_name, s.middle_name, s.last_name, COUNT(se.student_enrolment_id) AS number_of_enrollments FROM students s JOIN student_enrolment se ON s.student_id = se.student_id
SELECT s.student_id, s.first_name, s.middle_name, s.last_name, COUNT(se.student_enrolment_id) AS number_of_enrollments FROM students s JOIN student_enrolment se ON s.student_id = se.student_id
SELECT s.student_id, s.first_name, s.middle_name, s.last_name, COUNT(se.student_enrolment_id) AS number_of_enrollments FROM students s JOIN student_enrolment se ON s.student_id = se.student_id
SELECT s.student_id, s.first_name, s.middle_name, s.last_name, COUNT(se.student_enrolment_id) AS number_of_enrollments FROM students s JOIN student_enrolment se ON s.student_id = se.student_id
SELECT s.student_id, s.first_name, s.middle_name, s.last_name, COUNT(se.student_enrolment_id) AS number_of_enrollments FROM students s JOIN student_enrolment se ON s.student_id = se.student_id
SELECT s.student_id, s.first_name, s.middle_name, s.last_name, COUNT(se.student_enrolment_id) AS number_of_enrollments FROM students s JOIN student_enrolment se ON s.student_id = se.student_id
SELECT s.student_id, s.first_name, s.middle_name, s.last_name, COUNT(se.student_enrolment_id) AS number_of_enrollments FROM students s JOIN student_enrolment se ON s.student_id = se.student_id","SELECT s.student_id, s.first_name, s.middle_name, s.last_name, COUNT(se.student_enrolment_id) AS number_of_enrollments FROM students s JOIN student_enrolment se ON s.student_id = se.student_id",0,0.0
490,149,Which makers designed more than 3 car models? List full name and the id.,car_1,medium,"SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;",7,"SELECT cm.fullname, cm.id FROM car_makers cm WHERE cm.id IN (     SELECT maker     FROM model_list     GROUP BY maker     HAVING COUNT(*) > 3 )
SELECT cm.fullname, cm.id FROM car_makers cm WHERE cm.id IN (     SELECT maker     FROM model_list     GROUP BY maker     HAVING COUNT(*) > 3 )
SELECT cm.fullname, cm.id FROM car_makers cm WHERE cm.id IN (     SELECT maker     FROM model_list     GROUP BY maker     HAVING COUNT(model) > 3 )
SELECT cm.fullname, cm.id FROM car_makers cm WHERE cm.id IN (     SELECT maker     FROM model_list     GROUP BY maker     HAVING COUNT(model) > 3 )
SELECT cm.fullname, cm.id FROM car_makers cm JOIN model_list ml ON cm.id = ml.maker GROUP BY cm.id HAVING COUNT(ml.model) > 3
SELECT cm.fullname, cm.id FROM car_makers cm WHERE cm.id IN (     SELECT maker     FROM model_list     GROUP BY maker     HAVING COUNT(*) > 3 )
SELECT cm.fullname, cm.id FROM car_makers cm JOIN model_list ml ON cm.id = ml.maker GROUP BY cm.id HAVING COUNT(ml.model) > 3","SELECT cm.fullname, cm.id FROM car_makers cm WHERE cm.id IN (     SELECT maker     FROM model_list     GROUP BY maker     HAVING COUNT(*) > 3 )",0,1.0
491,967,Count the number of dogs that went through a treatment.,dog_kennels,easy,SELECT count(DISTINCT dog_id) FROM Treatments,7,"SELECT COUNT(*) FROM treatments
SELECT COUNT(*) FROM treatments
SELECT COUNT(*) FROM treatments
SELECT COUNT(*) FROM treatments
SELECT COUNT(*) FROM treatments
SELECT COUNT(*) FROM treatments
SELECT COUNT(*) FROM treatments",SELECT COUNT(*) FROM treatments,0,0.0
492,66,What is the first name of every student who has a dog but does not have a cat?,pets_1,extra,"SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",7,"SELECT s.fname FROM student s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'dog' AND NOT EXISTS (SELECT 1 FROM has_pet hp2 JOIN pets p2 ON hp2.petid = p2.petid WHERE hp2.stuid = s.stuid AND p2.pettype = 'cat')
SELECT s.fname FROM student s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'dog' AND NOT EXISTS (SELECT 1 FROM has_pet hp2 JOIN pets p2 ON hp2.petid = p2.petid WHERE hp2.stuid = s.stuid AND p2.pettype = 'cat')
SELECT s.fname FROM student s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'dog' AND NOT EXISTS (SELECT 1 FROM has_pet hp2 JOIN pets p2 ON hp2.petid = p2.petid WHERE hp2.stuid = s.stuid AND p2.pettype = 'cat')
SELECT s.fname FROM student s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'dog' AND NOT EXISTS (SELECT 1 FROM has_pet hp2 JOIN pets p2 ON hp2.petid = p2.petid WHERE hp2.stuid = s.stuid AND p2.pettype = 'cat')
SELECT s.fname FROM student s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'dog' AND NOT EXISTS (SELECT 1 FROM has_pet hp2 JOIN pets p2 ON hp2.petid = p2.petid WHERE hp2.stuid = s.stuid AND p2.pettype = 'cat')
SELECT s.fname FROM student s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'dog' AND NOT EXISTS (SELECT 1 FROM has_pet hp2 JOIN pets p2 ON hp2.petid = p2.petid WHERE hp2.stuid = s.stuid AND p2.pettype = 'cat')
SELECT s.fname FROM student s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'dog' AND NOT EXISTS (SELECT 1 FROM has_pet hp2 JOIN pets p2 ON hp2.petid = p2.petid WHERE hp2.stuid = s.stuid AND p2.pettype = 'cat')",SELECT s.fname FROM student s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'dog' AND NOT EXISTS (SELECT 1 FROM has_pet hp2 JOIN pets p2 ON hp2.petid = p2.petid WHERE hp2.stuid = s.stuid AND p2.pettype = 'cat'),0,0.0
493,67,Find the type and weight of the youngest pet.,pets_1,medium,"SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1",7,"SELECT pettype, weight  FROM pets  JOIN has_pet ON pets.petid = has_pet.petid  WHERE has_pet.stuid IN (SELECT stuid FROM student WHERE age = (SELECT MIN(age) FROM student))
SELECT pettype, weight  FROM pets  JOIN has_pet ON pets.petid = has_pet.petid  WHERE has_pet.stuid IN (     SELECT stuid      FROM student      ORDER BY age ASC      LIMIT 1 )
SELECT pettype, weight  FROM pets  JOIN has_pet ON pets.petid = has_pet.petid  WHERE has_pet.stuid IN (     SELECT stuid      FROM student      ORDER BY age ASC      LIMIT 1 )
SELECT pettype, weight  FROM pets  JOIN has_pet ON pets.petid = has_pet.petid  WHERE has_pet.stuid IN (     SELECT stuid      FROM student      ORDER BY age ASC      LIMIT 1 )
SELECT pettype, weight  FROM pets  JOIN has_pet ON pets.petid = has_pet.petid  WHERE has_pet.stuid IN (SELECT stuid FROM student WHERE age = (SELECT MIN(age) FROM student))
SELECT pettype, weight FROM pets JOIN has_pet ON pets.petid = has_pet.petid WHERE has_pet.stuid IN (     SELECT stuid     FROM student     WHERE age = (SELECT MIN(age) FROM student) )
SELECT pettype, weight FROM pets JOIN has_pet ON pets.petid = has_pet.petid WHERE has_pet.stuid IN (     SELECT stuid     FROM student     WHERE age = (SELECT MIN(age) FROM student) )","SELECT pettype, weight  FROM pets  JOIN has_pet ON pets.petid = has_pet.petid  WHERE has_pet.stuid IN (     SELECT stuid      FROM student      ORDER BY age ASC      LIMIT 1 )",0,0.0
494,222,Which city has the most frequent destination airport?,flight_2,extra,SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1,7,"SELECT destairport, COUNT(*) AS frequency FROM flights GROUP BY destairport ORDER BY frequency DESC LIMIT 1
SELECT destairport, COUNT(*) AS frequency FROM flights GROUP BY destairport ORDER BY frequency DESC LIMIT 1
SELECT destairport, COUNT(*) AS frequency FROM flights GROUP BY destairport ORDER BY frequency DESC LIMIT 1
SELECT destairport, COUNT(*) AS frequency FROM flights GROUP BY destairport ORDER BY frequency DESC LIMIT 1
SELECT destairport, COUNT(*) AS frequency FROM flights GROUP BY destairport ORDER BY frequency DESC LIMIT 1
SELECT destairport, COUNT(*) AS frequency FROM flights GROUP BY destairport ORDER BY frequency DESC LIMIT 1
SELECT destairport, COUNT(*) AS frequency FROM flights GROUP BY destairport ORDER BY frequency DESC LIMIT 1","SELECT destairport, COUNT(*) AS frequency FROM flights GROUP BY destairport ORDER BY frequency DESC LIMIT 1",0,0.0
495,605,List the language used least number of TV Channel. List language and number of TV Channel.,tvshow,hard,"SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;",7,"SELECT language, COUNT(*) AS num_channels FROM tv_channel GROUP BY language ORDER BY num_channels ASC LIMIT 1
SELECT language, COUNT(*) AS num_channels FROM tv_channel GROUP BY language ORDER BY num_channels ASC LIMIT 1
SELECT language, COUNT(*) AS num_channels FROM tv_channel GROUP BY language ORDER BY num_channels ASC LIMIT 1
SELECT language, COUNT(*) AS num_channels FROM tv_channel GROUP BY language ORDER BY num_channels ASC LIMIT 1
SELECT language, COUNT(*) AS num_channels FROM tv_channel GROUP BY language ORDER BY num_channels ASC LIMIT 1
SELECT language, COUNT(*) AS num_channels FROM tv_channel GROUP BY language ORDER BY num_channels ASC LIMIT 1
SELECT language, COUNT(*) AS num_channels FROM tv_channel GROUP BY language ORDER BY num_channels ASC LIMIT 1","SELECT language, COUNT(*) AS num_channels FROM tv_channel GROUP BY language ORDER BY num_channels ASC LIMIT 1",0,1.0
496,202,What are the names of airports in Aberdeen?,flight_2,easy,"SELECT AirportName FROM AIRPORTS WHERE City = ""Aberdeen""",7,"SELECT airportname FROM airports WHERE city = 'Aberdeen'
SELECT airportname FROM airports WHERE city = 'Aberdeen'
SELECT airportname FROM airports WHERE city = 'Aberdeen'
SELECT airportname FROM airports WHERE city = 'Aberdeen'
SELECT airportname FROM airports WHERE city = 'Aberdeen'
SELECT airportname FROM airports WHERE city = 'Aberdeen'
SELECT airportname FROM airports WHERE city = 'Aberdeen'",SELECT airportname FROM airports WHERE city = 'Aberdeen',True,1.0
497,599,"What is the content of TV Channel with serial name ""Sky Radio""?",tvshow,easy,"SELECT Content FROM TV_Channel WHERE series_name = ""Sky Radio"";",7,"SELECT content FROM tv_channel WHERE series_name = 'Sky Radio'
SELECT content FROM tv_channel WHERE series_name = 'Sky Radio'
SELECT content FROM tv_channel WHERE series_name = 'Sky Radio'
SELECT content FROM tv_channel WHERE series_name = 'Sky Radio'
SELECT content FROM tv_channel WHERE series_name = 'Sky Radio'
SELECT content FROM tv_channel WHERE series_name = 'Sky Radio'
SELECT content FROM tv_channel WHERE series_name = 'Sky Radio'",SELECT content FROM tv_channel WHERE series_name = 'Sky Radio',True,1.0
498,635,which countries' tv channels are not playing any cartoon written by Todd Casey?,tvshow,hard,SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey',7,"SELECT DISTINCT country FROM tv_channel WHERE content != 'cartoon' AND series_name IN (     SELECT series_name     FROM tv_series     JOIN cartoon ON tv_series.channel = cartoon.channel     WHERE written_by = 'Todd Casey' )
SELECT DISTINCT country FROM tv_channel WHERE content != 'cartoon' AND series_name IN (     SELECT series_name     FROM tv_series     JOIN cartoon ON tv_series.channel = cartoon.channel     WHERE written_by = 'Todd Casey' )
SELECT DISTINCT country FROM tv_channel WHERE content != 'cartoon' AND series_name IN (     SELECT series_name     FROM tv_series     JOIN cartoon ON tv_series.channel = cartoon.channel     WHERE written_by = 'Todd Casey' )
SELECT DISTINCT country FROM tv_channel WHERE content NOT LIKE '%cartoon%' AND channel IN (     SELECT channel     FROM cartoon     WHERE written_by = 'Todd Casey' )
SELECT DISTINCT country FROM tv_channel WHERE content != 'cartoon' AND series_name IN (     SELECT series_name     FROM tv_series     JOIN cartoon ON tv_series.channel = cartoon.channel     WHERE written_by = 'Todd Casey' )
SELECT DISTINCT country FROM tv_channel WHERE content != 'cartoon' AND series_name IN (     SELECT series_name     FROM tv_series     JOIN cartoon ON tv_series.channel = cartoon.channel     WHERE written_by = 'Todd Casey' )
SELECT country FROM tv_channel WHERE content != 'cartoon' AND series_name IN (SELECT series_name FROM tv_series WHERE channel IN (SELECT channel FROM cartoon WHERE written_by = 'Todd Casey'))",SELECT DISTINCT country FROM tv_channel WHERE content != 'cartoon' AND series_name IN (     SELECT series_name     FROM tv_series     JOIN cartoon ON tv_series.channel = cartoon.channel     WHERE written_by = 'Todd Casey' ),0,0.0
499,275,Find the names of stores whose number products is more than the average number of products.,employee_hire_evaluation,hard,SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop),7,"SELECT s.name FROM shop s JOIN hiring h ON s.shop_id = h.shop_id WHERE s.number_products > (SELECT AVG(number_products) FROM shop)
SELECT s.name FROM shop s WHERE s.number_products > (SELECT AVG(number_products) FROM shop)
SELECT s.name FROM shop s WHERE s.number_products > (SELECT AVG(number_products) FROM shop)
SELECT s.name FROM shop s WHERE s.number_products > (SELECT AVG(number_products) FROM shop)
SELECT s.name FROM shop s WHERE s.number_products > (SELECT AVG(number_products) FROM shop)
SELECT s.name  FROM shop s  WHERE s.number_products > (SELECT AVG(number_products) FROM shop)
SELECT s.name FROM shop s WHERE s.number_products > (SELECT AVG(number_products) FROM shop)",SELECT s.name FROM shop s WHERE s.number_products > (SELECT AVG(number_products) FROM shop),0,1.0
500,517,How many departments offer any degree?,student_transcripts_tracking,easy,SELECT count(DISTINCT department_id) FROM Degree_Programs,7,"SELECT COUNT(DISTINCT department_id) FROM degree_programs
SELECT COUNT(DISTINCT departments.department_id) FROM departments JOIN degree_programs ON departments.department_id = degree_programs.department_id
SELECT COUNT(DISTINCT departments.department_id) FROM departments INNER JOIN degree_programs ON departments.department_id = degree_programs.department_id
SELECT COUNT(DISTINCT department_id) FROM degree_programs
SELECT COUNT(DISTINCT department_id) FROM degree_programs
SELECT COUNT(DISTINCT departments.department_id) FROM departments JOIN degree_programs ON departments.department_id = degree_programs.department_id
SELECT COUNT(DISTINCT departments.department_id) FROM departments JOIN degree_programs ON departments.department_id = degree_programs.department_id",SELECT COUNT(DISTINCT department_id) FROM degree_programs,True,1.0
501,819,Count the number of countries for which Spanish is the predominantly spoken language.,world_1,extra,"SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  ""Spanish"" GROUP BY CountryCode",7,"SELECT COUNT(*) FROM countrylanguage WHERE language = 'Spanish' AND isofficial = 'T'
SELECT COUNT(*) FROM countrylanguage WHERE language = 'Spanish' AND isofficial = 'T'
SELECT COUNT(*) FROM countrylanguage WHERE language = 'Spanish' AND isofficial = 'True'
SELECT COUNT(*) FROM countrylanguage WHERE language = 'Spanish' AND isofficial = 'T'
SELECT COUNT(*) FROM countrylanguage WHERE language = 'Spanish' AND isofficial = 'T'
SELECT COUNT(*) FROM countrylanguage WHERE language = 'Spanish' AND isofficial = 'T'
SELECT COUNT(*) FROM countrylanguage WHERE language = 'Spanish' AND isofficial = 'T'",SELECT COUNT(*) FROM countrylanguage WHERE language = 'Spanish' AND isofficial = 'T',0,0.0
502,55,Find the number of distinct type of pets.,pets_1,easy,SELECT count(DISTINCT pettype) FROM pets,7,"SELECT COUNT(DISTINCT pettype) FROM pets
SELECT COUNT(DISTINCT pettype) FROM pets
SELECT COUNT(DISTINCT pettype) FROM pets
SELECT COUNT(DISTINCT pettype) FROM pets
SELECT COUNT(DISTINCT pettype) FROM pets
SELECT COUNT(DISTINCT pettype) FROM pets
SELECT COUNT(DISTINCT pettype) FROM pets",SELECT COUNT(DISTINCT pettype) FROM pets,True,1.0
503,565,When is the first transcript released? List the date and details.,student_transcripts_tracking,medium,"SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",7,"SELECT transcript_date, other_details  FROM transcripts  ORDER BY transcript_date  LIMIT 1
SELECT transcript_date, other_details  FROM transcripts  ORDER BY transcript_date  LIMIT 1
SELECT transcript_date, other_details  FROM transcripts  ORDER BY transcript_date  LIMIT 1
SELECT transcript_date, other_details  FROM transcripts  ORDER BY transcript_date  LIMIT 1
SELECT transcript_date, other_details  FROM transcripts  ORDER BY transcript_date  LIMIT 1
SELECT transcript_date, other_details  FROM transcripts  ORDER BY transcript_date  LIMIT 1
SELECT transcript_date, other_details  FROM transcripts  ORDER BY transcript_date  LIMIT 1","SELECT transcript_date, other_details  FROM transcripts  ORDER BY transcript_date  LIMIT 1",True,1.0
504,63,Find the id of students who do not have a cat pet.,pets_1,hard,SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat',7,"SELECT DISTINCT s.stuid FROM student s LEFT JOIN has_pet hp ON s.stuid = hp.stuid WHERE hp.petid IS NULL OR hp.petid NOT IN (SELECT petid FROM pets WHERE pettype = 'cat')
SELECT DISTINCT s.stuid FROM student s LEFT JOIN has_pet hp ON s.stuid = hp.stuid WHERE hp.petid IS NULL
SELECT DISTINCT s.stuid FROM student s LEFT JOIN has_pet hp ON s.stuid = hp.stuid WHERE hp.petid IS NULL
SELECT DISTINCT s.stuid FROM student s LEFT JOIN has_pet hp ON s.stuid = hp.stuid WHERE hp.petid IS NULL OR hp.petid NOT IN (SELECT petid FROM pets WHERE pettype = 'cat')
SELECT DISTINCT s.stuid FROM student s LEFT JOIN has_pet hp ON s.stuid = hp.stuid WHERE hp.petid IS NULL OR hp.petid NOT IN (SELECT petid FROM pets WHERE pettype = 'cat')
SELECT DISTINCT s.stuid FROM student s LEFT JOIN has_pet hp ON s.stuid = hp.stuid WHERE hp.petid IS NULL
SELECT DISTINCT s.stuid FROM student s LEFT JOIN has_pet hp ON s.stuid = hp.stuid WHERE hp.petid IS NULL OR hp.petid NOT IN (SELECT petid FROM pets WHERE pettype = 'cat')",SELECT DISTINCT s.stuid FROM student s LEFT JOIN has_pet hp ON s.stuid = hp.stuid WHERE hp.petid IS NULL OR hp.petid NOT IN (SELECT petid FROM pets WHERE pettype = 'cat'),0,1.0
505,375,What is the document id with least number of paragraphs?,cre_Doc_Template_Mgt,hard,SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1,7,"SELECT document_id FROM paragraphs GROUP BY document_id ORDER BY COUNT(*) ASC LIMIT 1
SELECT document_id FROM paragraphs GROUP BY document_id ORDER BY COUNT(*) ASC LIMIT 1
SELECT document_id FROM paragraphs GROUP BY document_id ORDER BY COUNT(*) ASC LIMIT 1
SELECT document_id FROM paragraphs GROUP BY document_id ORDER BY COUNT(*) ASC LIMIT 1
SELECT document_id FROM paragraphs GROUP BY document_id ORDER BY COUNT(*) ASC LIMIT 1
SELECT document_id FROM paragraphs GROUP BY document_id ORDER BY COUNT(*) ASC LIMIT 1
SELECT document_id FROM paragraphs GROUP BY document_id ORDER BY COUNT(*) ASC LIMIT 1",SELECT document_id FROM paragraphs GROUP BY document_id ORDER BY COUNT(*) ASC LIMIT 1,True,1.0
506,506,What are the notes of the death events which has substring 'East'?,battle_death,medium,SELECT note FROM death WHERE note LIKE '%East%',7,"SELECT death.note FROM death JOIN battle ON death.id = battle.id WHERE battle.name LIKE '%East%'
SELECT death.note FROM death JOIN battle ON death.id = battle.id WHERE battle.name LIKE '%East%'
SELECT death.note FROM death JOIN battle ON death.id = battle.id WHERE battle.name LIKE '%East%'
SELECT death.note FROM death JOIN battle ON death.id = battle.id WHERE battle.name LIKE '%East%'
SELECT death.note FROM death JOIN battle ON death.id = battle.id WHERE battle.name LIKE '%East%'
SELECT death.note FROM death JOIN battle ON death.id = battle.id WHERE battle.name LIKE '%East%'
SELECT death.note FROM death JOIN battle ON death.id = battle.id WHERE battle.name LIKE '%East%'",SELECT death.note FROM death JOIN battle ON death.id = battle.id WHERE battle.name LIKE '%East%',0,0.0
507,537,Find the kind of program which most number of students are enrolled in?,student_transcripts_tracking,extra,SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1,7,"SELECT course_name, COUNT(student_enrolment_id) AS student_count FROM student_enrolment_courses s JOIN student_enrolment e ON s.student_enrolment_id = e.student_enrolment_id JOIN courses c ON s.course_id = c.course_id GROUP BY course_name ORDER BY student_count DESC LIMIT 1
SELECT course_name, COUNT(student_enrolment_id) AS student_count FROM student_enrolment_courses s JOIN student_enrolment e ON s.student_enrolment_id = e.student_enrolment_id JOIN courses c ON s.course_id = c.course_id GROUP BY course_name ORDER BY student_count DESC LIMIT 1
SELECT course_name, COUNT(student_enrolment_id) AS student_count FROM student_enrolment_courses s JOIN student_enrolment e ON s.student_enrolment_id = e.student_enrolment_id JOIN courses c ON s.course_id = c.course_id GROUP BY course_name ORDER BY student_count DESC LIMIT 1
SELECT course_name, COUNT(student_enrolment_id) AS student_count FROM student_enrolment_courses s JOIN student_enrolment e ON s.student_enrolment_id = e.student_enrolment_id JOIN courses c ON s.course_id = c.course_id GROUP BY course_name ORDER BY student_count DESC LIMIT 1
SELECT course_name, COUNT(student_enrolment_id) AS student_count FROM student_enrolment_courses s JOIN student_enrolment e ON s.student_enrolment_id = e.student_enrolment_id JOIN courses c ON s.course_id = c.course_id GROUP BY course_name ORDER BY student_count DESC LIMIT 1
SELECT course_name, COUNT(student_enrolment_id) AS student_count FROM student_enrolment_courses s JOIN student_enrolment e ON s.student_enrolment_id = e.student_enrolment_id JOIN courses c ON s.course_id = c.course_id GROUP BY course_name ORDER BY student_count DESC LIMIT 1
SELECT course_name, COUNT(student_enrolment_id) AS student_count FROM student_enrolment_courses s JOIN student_enrolment e ON s.student_enrolment_id = e.student_enrolment_id JOIN courses c ON s.course_id = c.course_id GROUP BY course_name ORDER BY student_count DESC LIMIT 1","SELECT course_name, COUNT(student_enrolment_id) AS student_count FROM student_enrolment_courses s JOIN student_enrolment e ON s.student_enrolment_id = e.student_enrolment_id JOIN courses c ON s.course_id = c.course_id GROUP BY course_name ORDER BY student_count DESC LIMIT 1",0,0.0
508,522,How many degrees does the engineering department have?,student_transcripts_tracking,medium,SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer',7,"SELECT COUNT(*) FROM degree_programs
SELECT COUNT(*) FROM degree_programs
SELECT COUNT(*) FROM degree_programs
SELECT COUNT(*) FROM degree_programs
SELECT COUNT(*) FROM degree_programs
SELECT COUNT(*) FROM degree_programs
SELECT COUNT(*) FROM degree_programs",SELECT COUNT(*) FROM degree_programs,0,0.0
509,21,How many concerts occurred in 2014 or 2015?,concert_singer,medium,SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015,7,"SELECT COUNT(*) FROM concert WHERE year IN (2014, 2015)
SELECT COUNT(*) FROM concert WHERE year IN (2014, 2015)
SELECT COUNT(*) FROM concert WHERE year IN (2014, 2015)
SELECT COUNT(*) FROM concert WHERE year IN (2014, 2015)
SELECT COUNT(*) FROM concert WHERE year IN (2014, 2015)
SELECT COUNT(*) FROM concert WHERE year IN (2014, 2015)
SELECT COUNT(*) FROM concert WHERE year IN (2014, 2015)","SELECT COUNT(*) FROM concert WHERE year IN (2014, 2015)",0,1.0
510,947,What are the date and the operating professional's first name of each treatment?,dog_kennels,medium,"SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id",7,"SELECT date_of_treatment, professionals.first_name FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id
SELECT d.date_of_treatment, p.first_name  FROM treatments t  JOIN dogs d ON t.dog_id = d.dog_id  JOIN professionals p ON t.professional_id = p.professional_id
SELECT date_of_treatment, professionals.first_name FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id
SELECT date_of_treatment, professionals.first_name FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id
SELECT d.date_of_treatment, p.first_name  FROM treatments t  JOIN dogs d ON t.dog_id = d.dog_id  JOIN professionals p ON t.professional_id = p.professional_id
SELECT d.date_of_treatment, p.first_name  FROM treatments t  JOIN dogs d ON t.dog_id = d.dog_id  JOIN professionals p ON t.professional_id = p.professional_id
SELECT date_of_treatment, professionals.first_name FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id","SELECT date_of_treatment, professionals.first_name FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id",True,1.0
511,983,Find the number of professionals who have not treated any dogs.,dog_kennels,extra,SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments ),7,"SELECT COUNT(*)  FROM professionals p  WHERE NOT EXISTS (     SELECT 1      FROM treatments t      WHERE t.professional_id = p.professional_id ) 
SELECT COUNT(*) FROM professionals p LEFT JOIN treatments t ON p.professional_id = t.professional_id LEFT JOIN dogs d ON t.dog_id = d.dog_id WHERE d.breed_code IS NULL
SELECT COUNT(*) FROM professionals p LEFT JOIN treatments t ON p.professional_id = t.professional_id LEFT JOIN dogs d ON t.dog_id = d.dog_id WHERE d.breed_code IS NULL
SELECT COUNT(*) FROM professionals p LEFT JOIN treatments t ON p.professional_id = t.professional_id LEFT JOIN dogs d ON t.dog_id = d.dog_id WHERE d.breed_code IS NULL
SELECT COUNT(*) FROM professionals p LEFT JOIN treatments t ON p.professional_id = t.professional_id LEFT JOIN dogs d ON t.dog_id = d.dog_id WHERE d.breed_code IS NULL
SELECT COUNT(*) FROM professionals p LEFT JOIN treatments t ON p.professional_id = t.professional_id LEFT JOIN dogs d ON t.dog_id = d.dog_id WHERE d.breed_code IS NULL
SELECT COUNT(*) FROM professionals p LEFT JOIN treatments t ON p.professional_id = t.professional_id LEFT JOIN dogs d ON t.dog_id = d.dog_id WHERE d.breed_code IS NULL",SELECT COUNT(*) FROM professionals p LEFT JOIN treatments t ON p.professional_id = t.professional_id LEFT JOIN dogs d ON t.dog_id = d.dog_id WHERE d.breed_code IS NULL,0,1.0
512,922,"Which professionals live in the state of Indiana or have done treatment on more than 2 treatments? List his or her id, last name and cell phone.",dog_kennels,extra,"SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2",7,"SELECT professional_id, last_name, cell_number FROM professionals WHERE state = 'Indiana' OR professional_id IN (     SELECT professional_id     FROM treatments     GROUP BY professional_id     HAVING COUNT(treatment_id) > 2 )
SELECT professional_id, last_name, cell_number FROM professionals WHERE state = 'Indiana' OR professional_id IN (     SELECT professional_id     FROM treatments     GROUP BY professional_id     HAVING COUNT(treatment_id) > 2 )
SELECT professional_id, last_name, cell_number FROM professionals WHERE state = 'Indiana' OR professional_id IN (     SELECT professional_id     FROM treatments     GROUP BY professional_id     HAVING COUNT(treatment_id) > 2 )
SELECT professional_id, last_name, cell_number FROM professionals WHERE state = 'Indiana' OR professional_id IN (     SELECT professional_id     FROM treatments     GROUP BY professional_id     HAVING COUNT(treatment_id) > 2 )
SELECT professional_id, last_name, cell_number FROM professionals WHERE state = 'Indiana' OR professional_id IN (     SELECT professional_id     FROM treatments     GROUP BY professional_id     HAVING COUNT(treatment_id) > 2 )
SELECT professional_id, last_name, cell_number FROM professionals WHERE state = 'Indiana' OR professional_id IN (     SELECT professional_id     FROM treatments     GROUP BY professional_id     HAVING COUNT(treatment_id) > 2 )
SELECT professional_id, last_name, cell_number FROM professionals WHERE state = 'IN' OR professional_id IN (     SELECT professional_id     FROM treatments     GROUP BY professional_id     HAVING COUNT(treatment_id) > 2 )","SELECT professional_id, last_name, cell_number FROM professionals WHERE state = 'Indiana' OR professional_id IN (     SELECT professional_id     FROM treatments     GROUP BY professional_id     HAVING COUNT(treatment_id) > 2 )",0,1.0
513,254,Give the flight numbers of flights arriving in Aberdeen.,flight_2,medium,"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""",7,"SELECT flightno FROM flights WHERE destairport = 'ABZ'
SELECT flightno FROM flights WHERE destairport = 'ABZ'
SELECT flightno FROM flights WHERE destairport = 'ABZ'
SELECT flightno FROM flights WHERE destairport = 'ABZ'
SELECT flightno FROM flights WHERE destairport = 'ABZ'
SELECT flightno FROM flights WHERE destairport = 'ABZ'
SELECT flightno FROM flights WHERE destairport = 'ABZ'",SELECT flightno FROM flights WHERE destairport = 'ABZ',0,1.0
514,319,"Show template ids, version numbers, and template type codes for all templates.",cre_Doc_Template_Mgt,medium,"SELECT template_id ,  version_number ,  template_type_code FROM Templates",7,"SELECT t.template_id, t.version_number, t.template_type_code  FROM templates t  JOIN ref_template_types rtt  ON t.template_type_code = rtt.template_type_code
SELECT t.template_id, t.version_number, t.template_type_code  FROM templates t  JOIN ref_template_types rtt  ON t.template_type_code = rtt.template_type_code
SELECT t.template_id, t.version_number, t.template_type_code  FROM templates t  JOIN ref_template_types rtt ON t.template_type_code = rtt.template_type_code
SELECT t.template_id, t.version_number, t.template_type_code  FROM templates t  JOIN ref_template_types rtt  ON t.template_type_code = rtt.template_type_code
SELECT t.template_id, t.version_number, t.template_type_code  FROM templates t  JOIN ref_template_types rtt ON t.template_type_code = rtt.template_type_code
SELECT t.template_id, t.version_number, t.template_type_code  FROM templates t  JOIN ref_template_types rtt ON t.template_type_code = rtt.template_type_code
SELECT t.template_id, t.version_number, t.template_type_code  FROM templates t  JOIN ref_template_types rtt  ON t.template_type_code = rtt.template_type_code","SELECT t.template_id, t.version_number, t.template_type_code  FROM templates t  JOIN ref_template_types rtt  ON t.template_type_code = rtt.template_type_code",0,1.0
515,952,List pairs of the owner's first name and the dogs's name.,dog_kennels,medium,"SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id",7,"SELECT o.first_name, d.name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id
SELECT o.first_name, d.name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id
SELECT o.first_name, d.name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id
SELECT o.first_name, d.name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id
SELECT o.first_name, d.name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id
SELECT o.first_name, d.name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id
SELECT o.first_name, d.name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id","SELECT o.first_name, d.name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id",0,1.0
516,128,What is the average weight and year for each year?,car_1,medium,"SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;",7,"SELECT year, AVG(weight) AS average_weight, AVG(year) AS average_year FROM cars_data GROUP BY year
SELECT year, AVG(weight) AS average_weight, AVG(year) AS average_year FROM cars_data GROUP BY year
SELECT year, AVG(weight) AS average_weight, AVG(year) AS average_year FROM cars_data GROUP BY year
SELECT year, AVG(weight) AS average_weight, AVG(year) AS average_year FROM cars_data GROUP BY year
SELECT year, AVG(weight) AS average_weight, AVG(year) AS average_year FROM cars_data GROUP BY year
SELECT year, AVG(weight) AS average_weight, AVG(year) AS average_year FROM cars_data GROUP BY year
SELECT year, AVG(weight) AS average_weight, AVG(year) AS average_year FROM cars_data GROUP BY year","SELECT year, AVG(weight) AS average_weight, AVG(year) AS average_year FROM cars_data GROUP BY year",0,0.0
517,38,What are the names of the singers who performed in a concert in 2014?,concert_singer,hard,SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014,7,"SELECT DISTINCT singer.name FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE concert.year = 2014
SELECT DISTINCT singer.name FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE concert.year = 2014
SELECT DISTINCT singer.name FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE concert.year = 2014
SELECT DISTINCT singer.name FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE concert.year = 2014
SELECT DISTINCT singer.name FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE concert.year = 2014
SELECT DISTINCT s.name  FROM singer s  JOIN singer_in_concert sic ON s.singer_id = sic.singer_id  JOIN concert c ON sic.concert_id = c.concert_id  WHERE c.year = 2014
SELECT DISTINCT singer.name FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE concert.year = 2014",SELECT DISTINCT singer.name FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE concert.year = 2014,True,1.0
518,890,Show the names of all of the high schooler Kyle's friends.,network_1,hard,"SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  ""Kyle""",7,"SELECT h2.name FROM highschooler h1 JOIN friend ON h1.id = friend.student_id JOIN highschooler h2 ON friend.friend_id = h2.id WHERE h1.name = 'Kyle'
SELECT h2.name FROM highschooler h1 JOIN friend ON h1.id = friend.student_id JOIN highschooler h2 ON friend.friend_id = h2.id WHERE h1.name = 'Kyle'
SELECT h2.name FROM highschooler h1 JOIN friend ON h1.id = friend.student_id JOIN highschooler h2 ON friend.friend_id = h2.id WHERE h1.name = 'Kyle'
SELECT h2.name FROM highschooler h1 JOIN friend ON h1.id = friend.student_id JOIN highschooler h2 ON friend.friend_id = h2.id WHERE h1.name = 'Kyle'
SELECT h2.name FROM highschooler h1 JOIN friend ON h1.id = friend.student_id JOIN highschooler h2 ON friend.friend_id = h2.id WHERE h1.name = 'Kyle'
SELECT h2.name FROM highschooler h1 JOIN friend ON h1.id = friend.student_id JOIN highschooler h2 ON friend.friend_id = h2.id WHERE h1.name = 'Kyle'
SELECT h2.name FROM highschooler h1 JOIN friend ON h1.id = friend.student_id JOIN highschooler h2 ON friend.friend_id = h2.id WHERE h1.name = 'Kyle'",SELECT h2.name FROM highschooler h1 JOIN friend ON h1.id = friend.student_id JOIN highschooler h2 ON friend.friend_id = h2.id WHERE h1.name = 'Kyle',0,1.0
519,403,Show the name of the teacher for the math course.,course_teach,hard,"SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  ""Math""",7,"SELECT teacher.name FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.course_id WHERE course.course = 'math'
SELECT teacher.name FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.course_id WHERE course.course = 'math'
SELECT teacher.name FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.course_id WHERE course.course = 'math'
SELECT teacher.name FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.course_id WHERE course.course = 'math'
SELECT teacher.name FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.course_id WHERE course.course = 'math'
SELECT teacher.name FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.course_id WHERE course.course = 'math'
SELECT teacher.name FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.course_id WHERE course.course = 'math'",SELECT teacher.name FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.course_id WHERE course.course = 'math',True,0.0
520,60,What are the students' first names who have both cats and dogs as pets?,pets_1,extra,SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog',7,"SELECT DISTINCT fname FROM students s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype IN ('cat', 'dog') GROUP BY s.stuid HAVING COUNT(DISTINCT p.pettype) = 2
SELECT DISTINCT fname FROM students s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype IN ('cat', 'dog') GROUP BY s.stuid HAVING COUNT(DISTINCT p.pettype) = 2
SELECT DISTINCT fname FROM students s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype IN ('cat', 'dog') GROUP BY s.stuid HAVING COUNT(DISTINCT p.pettype) = 2
SELECT DISTINCT fname FROM students s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype IN ('cat', 'dog') GROUP BY s.stuid HAVING COUNT(DISTINCT p.pettype) = 2
SELECT DISTINCT fname FROM students s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype IN ('cat', 'dog') GROUP BY s.stuid HAVING COUNT(DISTINCT p.pettype) = 2
SELECT DISTINCT fname FROM students s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype IN ('cat', 'dog') GROUP BY s.stuid HAVING COUNT(DISTINCT p.pettype) = 2
SELECT DISTINCT fname FROM students s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype IN ('cat', 'dog') GROUP BY s.stuid HAVING COUNT(DISTINCT p.pettype) = 2","SELECT DISTINCT fname FROM students s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE p.pettype IN ('cat', 'dog') GROUP BY s.stuid HAVING COUNT(DISTINCT p.pettype) = 2",0,0.0
521,735,How many different forms of governments are there in Africa?,world_1,easy,"SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  ""Africa""",7,"SELECT COUNT(DISTINCT governmentform) FROM country WHERE continent = 'Africa'
SELECT COUNT(DISTINCT governmentform) FROM country WHERE continent = 'Africa'
SELECT COUNT(DISTINCT governmentform) FROM country WHERE continent = 'Africa'
SELECT COUNT(DISTINCT governmentform) FROM country WHERE continent = 'Africa'
SELECT COUNT(DISTINCT governmentform) FROM country WHERE continent = 'Africa'
SELECT COUNT(DISTINCT governmentform) FROM country WHERE continent = 'Africa'
SELECT COUNT(DISTINCT governmentform) FROM country WHERE continent = 'Africa'",SELECT COUNT(DISTINCT governmentform) FROM country WHERE continent = 'Africa',True,1.0
522,400,What is the name of each teacher and what course they teach?,course_teach,medium,"SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID",7,"SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id
SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id
SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id
SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id
SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id
SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id
SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id","SELECT t.name, c.course FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id",0,1.0
523,353,What are the distinct template type descriptions for the templates ever used by any document?,cre_Doc_Template_Mgt,medium,SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID,7,"SELECT DISTINCT template_type_description FROM templates
SELECT DISTINCT template_type_description FROM templates
SELECT DISTINCT template_type_description FROM templates
SELECT DISTINCT template_type_description FROM templates
SELECT DISTINCT template_type_description FROM templates
SELECT DISTINCT template_type_description FROM templates
SELECT DISTINCT template_type_description FROM templates",SELECT DISTINCT template_type_description FROM templates,0,0.0
524,765,Give the mean life expectancy of countries in which English is not the official language.,world_1,extra,"SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND T2.IsOfficial  =  ""T"")",7,"SELECT AVG(lifeexpectancy) FROM country LEFT JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language != 'English' AND countrylanguage.isofficial = 'True'
SELECT AVG(lifeexpectancy) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language != 'English' AND countrylanguage.isofficial = 'False'
SELECT AVG(lifeexpectancy) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language != 'English' AND countrylanguage.isofficial = 'False'
SELECT AVG(lifeexpectancy) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language != 'English' AND countrylanguage.isofficial = 'False'
SELECT AVG(lifeexpectancy) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language != 'English' AND countrylanguage.isofficial = 'False'
SELECT AVG(lifeexpectancy) FROM country LEFT JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language != 'English' AND countrylanguage.isofficial = 'True'
SELECT AVG(lifeexpectancy) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language != 'English' AND countrylanguage.isofficial = 'False'",SELECT AVG(lifeexpectancy) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language != 'English' AND countrylanguage.isofficial = 'False',0,0.0
525,122,What are the makers and models?,car_1,medium,"SELECT Maker ,  Model FROM MODEL_LIST;",7,"SELECT maker, model  FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  JOIN cars_data ON model_list.model = cars_data.make
SELECT maker, model  FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  JOIN cars_data ON model_list.model = cars_data.make
SELECT maker, model  FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  JOIN cars_data ON model_list.model = cars_data.make
SELECT maker, model  FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  JOIN cars_data ON model_list.model = cars_data.make
SELECT maker, model  FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  JOIN cars_data ON model_list.model = cars_data.make
SELECT maker, model  FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  JOIN cars_data ON model_list.model = cars_data.make
SELECT maker, model  FROM car_makers  JOIN model_list ON car_makers.id = model_list.maker  JOIN cars_data ON model_list.model = cars_data.make","SELECT maker, model  FROM model_list  JOIN car_makers ON model_list.maker = car_makers.id  JOIN cars_data ON model_list.model = cars_data.make",0,0.0
526,507,what are all the addresses including line 1 and line 2?,student_transcripts_tracking,medium,"SELECT line_1 ,  line_2 FROM addresses",7,"SELECT line_1, line_2 FROM addresses
SELECT line_1, line_2 FROM addresses
SELECT line_1, line_2 FROM addresses
SELECT line_1, line_2 FROM addresses
SELECT line_1, line_2 FROM addresses
SELECT line_1, line_2 FROM addresses
SELECT line_1, line_2 FROM addresses","SELECT line_1, line_2 FROM addresses",True,1.0
527,960,List the last name of the owner owning the youngest dog.,dog_kennels,extra,SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs ),7,"SELECT last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id WHERE dogs.date_of_birth = (SELECT MIN(date_of_birth) FROM dogs)
SELECT last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id WHERE dogs.date_of_birth = (SELECT MIN(date_of_birth) FROM dogs)
SELECT last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id WHERE dogs.date_of_birth = (SELECT MIN(date_of_birth) FROM dogs)
SELECT last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id WHERE dogs.date_of_birth = (SELECT MIN(date_of_birth) FROM dogs) LIMIT 1
SELECT last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id WHERE dogs.date_of_birth = (SELECT MIN(date_of_birth) FROM dogs)
SELECT last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id WHERE dogs.date_of_birth = (SELECT MIN(date_of_birth) FROM dogs)
SELECT last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id WHERE dogs.date_of_birth = (SELECT MIN(date_of_birth) FROM dogs)",SELECT last_name FROM owners JOIN dogs ON owners.owner_id = dogs.owner_id WHERE dogs.date_of_birth = (SELECT MIN(date_of_birth) FROM dogs),0,0.0
528,638,What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Michael Chang?,tvshow,extra,"SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'",7,"SELECT DISTINCT tv_channel.series_name, tv_channel.country FROM tv_channel JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.directed_by IN ('Ben Jones', 'Michael Chang') AND cartoon.content = 'cartoons'
SELECT DISTINCT tv_channel.series_name, tv_channel.country FROM tv_channel JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.directed_by IN ('Ben Jones', 'Michael Chang') AND cartoon.content = 'cartoons'
SELECT DISTINCT tv_channel.series_name, tv_channel.country FROM tv_channel JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.directed_by IN ('Ben Jones', 'Michael Chang') AND cartoon.content = 'cartoons'
SELECT DISTINCT tv_channel.series_name, tv_channel.country FROM tv_channel JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.directed_by IN ('Ben Jones', 'Michael Chang') AND cartoon.content = 'cartoons'
SELECT DISTINCT tv_channel.series_name, tv_channel.country FROM tv_channel JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.directed_by IN ('Ben Jones', 'Michael Chang') AND cartoon.content = 'cartoons'
SELECT DISTINCT tv_channel.series_name, tv_channel.country FROM tv_channel JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.directed_by IN ('Ben Jones', 'Michael Chang') AND cartoon.content = 'cartoons'
SELECT DISTINCT tv_channel.series_name, tv_channel.country FROM tv_channel JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.directed_by IN ('Ben Jones', 'Michael Chang') AND cartoon.content = 'cartoons'","SELECT DISTINCT tv_channel.series_name, tv_channel.country FROM tv_channel JOIN cartoon ON tv_channel.id = cartoon.channel WHERE cartoon.directed_by IN ('Ben Jones', 'Michael Chang') AND cartoon.content = 'cartoons'",0,0.0
529,539,Find the program which most number of students are enrolled in. List both the id and the summary.,student_transcripts_tracking,extra,"SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT c.course_id, c.course_name, c.course_description FROM courses c JOIN student_enrolment_courses sec ON c.course_id = sec.course_id JOIN student_enrolment se ON sec.student_enrolment_id = se.student_enrolment_id GROUP BY c.course_id 
SELECT c.course_id, c.course_name, c.course_description FROM courses c JOIN student_enrolment_courses sec ON c.course_id = sec.course_id JOIN student_enrolment se ON sec.student_enrolment_id = se.student_enrolment_id GROUP BY c.course_id 
SELECT c.course_id, c.course_name, c.course_description FROM courses c JOIN student_enrolment_courses sec ON c.course_id = sec.course_id JOIN student_enrolment se ON sec.student_enrolment_id = se.student_enrolment_id GROUP BY c.course_id 
SELECT c.course_id, c.course_name, c.course_description FROM courses c JOIN student_enrolment_courses sec ON c.course_id = sec.course_id JOIN student_enrolment se ON sec.student_enrolment_id = se.student_enrolment_id GROUP BY c.course_id 
SELECT c.course_id, c.course_name, c.course_description FROM courses c JOIN student_enrolment_courses sec ON c.course_id = sec.course_id JOIN student_enrolment se ON sec.student_enrolment_id = se.student_enrolment_id GROUP BY c.course_id 
SELECT c.course_id, c.course_name, c.course_description, COUNT(s.student_id) AS student_count FROM courses c JOIN student_enrolment_courses s ON c.course_id = s.course_id GROUP BY c.course_id ORDER BY student_count DESC LIMIT 1
SELECT c.course_id, c.course_name, c.course_description FROM courses c JOIN student_enrolment_courses sec ON c.course_id = sec.course_id JOIN student_enrolment se ON sec.student_enrolment_id = se.student_enrolment_id GROUP BY c.course_id ","SELECT c.course_id, c.course_name, c.course_description FROM courses c JOIN student_enrolment_courses sec ON c.course_id = sec.course_id JOIN student_enrolment se ON sec.student_enrolment_id = se.student_enrolment_id GROUP BY c.course_id ",0,0.0
530,694,What are the contestant numbers and names of the contestants who had at least two votes?,voter_1,medium,"SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2",7,"SELECT contestant_number, contestant_name FROM contestants WHERE contestant_number IN (SELECT contestant_number FROM votes GROUP BY contestant_number HAVING COUNT(vote_id) >= 2)
SELECT contestant_number, contestant_name FROM contestants WHERE contestant_number IN (SELECT contestant_number FROM votes GROUP BY contestant_number HAVING COUNT(vote_id) >= 2)
SELECT contestant_number, contestant_name FROM contestants WHERE contestant_number IN (SELECT contestant_number FROM votes GROUP BY contestant_number HAVING COUNT(vote_id) >= 2)
SELECT contestant_number, contestant_name FROM contestants WHERE contestant_number IN (SELECT contestant_number FROM votes GROUP BY contestant_number HAVING COUNT(vote_id) >= 2)
SELECT contestant_number, contestant_name FROM contestants WHERE contestant_number IN (SELECT contestant_number FROM votes GROUP BY contestant_number HAVING COUNT(vote_id) >= 2)
SELECT c.contestant_number, c.contestant_name FROM contestants c JOIN votes v ON c.contestant_number = v.contestant_number GROUP BY c.contestant_number HAVING COUNT(v.vote_id) >= 2
SELECT contestant_number, contestant_name FROM contestants WHERE contestant_number IN (SELECT contestant_number FROM votes GROUP BY contestant_number HAVING COUNT(vote_id) >= 2)","SELECT contestant_number, contestant_name FROM contestants WHERE contestant_number IN (SELECT contestant_number FROM votes GROUP BY contestant_number HAVING COUNT(vote_id) >= 2)",0,1.0
531,462,Which year had the most matches?,wta_1,hard,SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,7,"SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1
SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1
SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1
SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1
SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1
SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1
SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1","SELECT year, COUNT(*) AS match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1",0,0.0
532,465,Find the name of the winner who has the highest rank points and participated in the Australian Open tourney.,wta_1,hard,SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1,7,"SELECT winner_name  FROM matches  WHERE tourney_name = 'Australian Open'  ORDER BY winner_rank_points DESC  LIMIT 1
SELECT winner_name  FROM matches  WHERE tourney_name = 'Australian Open'  ORDER BY winner_rank_points DESC  LIMIT 1
SELECT winner_name FROM matches WHERE tourney_name = 'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1
SELECT winner_name  FROM matches  WHERE tourney_name = 'Australian Open'  ORDER BY winner_rank_points DESC  LIMIT 1
SELECT winner_name  FROM matches  WHERE tourney_name = 'Australian Open'  ORDER BY winner_rank_points DESC  LIMIT 1
SELECT winner_name FROM matches WHERE tourney_name = 'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1
SELECT winner_name  FROM matches  WHERE tourney_name = 'Australian Open'  ORDER BY winner_rank_points DESC  LIMIT 1",SELECT winner_name  FROM matches  WHERE tourney_name = 'Australian Open'  ORDER BY winner_rank_points DESC  LIMIT 1,True,1.0
533,316,What are the ids for templates that are not used in any documents?,cre_Doc_Template_Mgt,hard,SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents,7,"SELECT template_id FROM templates WHERE template_id NOT IN (SELECT template_id FROM documents)
SELECT template_id FROM templates WHERE template_id NOT IN (SELECT template_id FROM documents)
SELECT template_id FROM templates WHERE template_id NOT IN (SELECT template_id FROM documents)
SELECT template_id FROM templates WHERE template_id NOT IN (SELECT template_id FROM documents)
SELECT template_id FROM templates WHERE template_id NOT IN (SELECT template_id FROM documents)
SELECT template_id  FROM templates  WHERE template_id NOT IN (     SELECT template_id      FROM documents )
SELECT template_id FROM templates WHERE template_id NOT IN (SELECT template_id FROM documents)",SELECT template_id FROM templates WHERE template_id NOT IN (SELECT template_id FROM documents),0,1.0
534,738,How many official languages does Afghanistan have?,world_1,medium,"SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Afghanistan"" AND IsOfficial  =  ""T""",7,"SELECT COUNT(*) FROM countrylanguage WHERE countrycode = 'AFG'
SELECT COUNT(*) FROM countrylanguage WHERE countrycode = 'AFG'
SELECT COUNT(*) FROM countrylanguage WHERE countrycode = 'AFG'
SELECT COUNT(*) FROM countrylanguage WHERE countrycode = 'AFG'
SELECT COUNT(*) FROM countrylanguage WHERE countrycode = 'AFG'
SELECT COUNT(*) FROM countrylanguage WHERE countrycode = 'AFG'
SELECT COUNT(*) FROM countrylanguage WHERE countrycode = 'AFG'",SELECT COUNT(*) FROM countrylanguage WHERE countrycode = 'AFG',0,0.0
535,181,"What is the abbreviation of Airline ""JetBlue Airways""?",flight_2,easy,"SELECT Abbreviation FROM AIRLINES WHERE Airline  =  ""JetBlue Airways""",7,"SELECT abbreviation FROM airlines WHERE airline = 'JetBlue Airways'
SELECT abbreviation FROM airlines WHERE airline = 'JetBlue Airways'
SELECT abbreviation FROM airlines WHERE airline = 'JetBlue Airways'
SELECT abbreviation FROM airlines WHERE airline = 'JetBlue Airways'
SELECT abbreviation FROM airlines WHERE airline = 'JetBlue Airways'
SELECT abbreviation FROM airlines WHERE airline = 'JetBlue Airways'
SELECT abbreviation FROM airlines WHERE airline = 'JetBlue Airways'",SELECT abbreviation FROM airlines WHERE airline = 'JetBlue Airways',True,1.0
536,228,Give the code of the airport with the least flights.,flight_2,extra,SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1,7,"SELECT a.airportcode, COUNT(f.flightno) AS flight_count FROM flights f JOIN airlines a ON f.airline = a.uid GROUP BY a.airportcode ORDER BY flight_count ASC LIMIT 1
SELECT a.airportcode, COUNT(f.flightno) AS flight_count FROM flights f JOIN airports a ON f.sourceairport = a.airportcode GROUP BY a.airportcode ORDER BY flight_count ASC LIMIT 1
SELECT a.airportcode, COUNT(f.flightno) AS flight_count FROM flights f JOIN airlines a ON f.airline = a.uid GROUP BY a.airportcode ORDER BY flight_count ASC LIMIT 1
SELECT a.airportcode, COUNT(f.flightno) AS flight_count FROM flights f JOIN airlines a ON f.airline = a.uid GROUP BY a.airportcode ORDER BY flight_count ASC LIMIT 1
SELECT a.airportcode, COUNT(f.flightno) AS flight_count FROM flights f JOIN airports a ON f.sourceairport = a.airportcode GROUP BY a.airportcode ORDER BY flight_count ASC LIMIT 1
SELECT a.airportcode, COUNT(f.flightno) AS flight_count FROM flights f JOIN airlines a ON f.airline = a.uid GROUP BY a.airportcode ORDER BY flight_count ASC LIMIT 1
SELECT a.airportcode, COUNT(f.flightno) AS flight_count FROM airports a JOIN flights f ON a.airportcode = f.sourceairport GROUP BY a.airportcode ORDER BY flight_count ASC LIMIT 1","SELECT a.airportcode, COUNT(f.flightno) AS flight_count FROM flights f JOIN airlines a ON f.airline = a.uid GROUP BY a.airportcode ORDER BY flight_count ASC LIMIT 1",0,0.0
537,460,What is the first name and country code of the player with the most tours?,wta_1,hard,"SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1",7,"SELECT p.first_name, p.country_code  FROM players p  JOIN matches m ON p.player_id = m.winner_id  JOIN rankings r ON p.player_id = r.player_id  ORDER BY r.tours DESC  LIMIT 1
SELECT p.first_name, p.country_code FROM players p JOIN matches m ON p.player_id = m.winner_id JOIN rankings r ON p.player_id = r.player_id ORDER BY r.tours DESC LIMIT 1
SELECT p.first_name, p.country_code FROM players p JOIN matches m ON p.player_id = m.winner_id JOIN rankings r ON p.player_id = r.player_id ORDER BY r.tours DESC LIMIT 1
SELECT p.first_name, p.country_code FROM players p JOIN matches m ON p.player_id = m.winner_id JOIN rankings r ON p.player_id = r.player_id ORDER BY r.tours DESC LIMIT 1
SELECT p.first_name, p.country_code FROM players p JOIN matches m ON p.player_id = m.winner_id JOIN rankings r ON p.player_id = r.player_id ORDER BY r.tours DESC LIMIT 1
SELECT p.first_name, p.country_code FROM players p JOIN matches m ON p.player_id = m.winner_id JOIN rankings r ON p.player_id = r.player_id ORDER BY r.tours DESC LIMIT 1
SELECT p.first_name, p.country_code FROM players p JOIN matches m ON p.player_id = m.winner_id JOIN rankings r ON p.player_id = r.player_id ORDER BY r.tours DESC LIMIT 1","SELECT p.first_name, p.country_code FROM players p JOIN matches m ON p.player_id = m.winner_id JOIN rankings r ON p.player_id = r.player_id ORDER BY r.tours DESC LIMIT 1",0,0.0
538,105,How many car makers are there in each continents? List the continent name and the count.,car_1,hard,"SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;",7,"SELECT continent, COUNT(DISTINCT maker) AS car_maker_count FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY continent
SELECT continent, COUNT(DISTINCT maker) AS car_maker_count FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY continent
SELECT continent, COUNT(DISTINCT maker) AS car_maker_count FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY continent
SELECT continent, COUNT(DISTINCT car_makers.maker) AS car_maker_count FROM continents JOIN countries ON continents.contid = countries.continent JOIN car_makers ON countries.countryid = car_makers.country GROUP BY continent
SELECT continent, COUNT(DISTINCT car_makers.maker) AS car_maker_count FROM continents JOIN countries ON continents.contid = countries.continent JOIN car_makers ON countries.countryid = car_makers.country GROUP BY continent
SELECT continent, COUNT(DISTINCT car_makers.maker) AS car_maker_count FROM continents JOIN countries ON continents.contid = countries.continent JOIN car_makers ON countries.countryid = car_makers.country GROUP BY continent
SELECT continent, COUNT(DISTINCT maker) AS car_maker_count FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY continent","SELECT continent, COUNT(DISTINCT maker) AS car_maker_count FROM countries JOIN car_makers ON countries.countryid = car_makers.country GROUP BY continent",0,0.0
539,417,What are the opening year and staff number of the museum named Plaza Museum?,museum_visit,medium,"SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'",7,"SELECT open_year, num_of_staff FROM museum WHERE name = 'Plaza Museum'
SELECT open_year, num_of_staff FROM museum WHERE name = 'Plaza Museum'
SELECT open_year, num_of_staff FROM museum WHERE name = 'Plaza Museum'
SELECT open_year, num_of_staff FROM museum WHERE name = 'Plaza Museum'
SELECT open_year, num_of_staff FROM museum WHERE name = 'Plaza Museum'
SELECT open_year, num_of_staff FROM museum WHERE name = 'Plaza Museum'
SELECT open_year, num_of_staff FROM museum WHERE name = 'Plaza Museum'","SELECT open_year, num_of_staff FROM museum WHERE name = 'Plaza Museum'",True,0.0
540,371,List all document ids with at least two paragraphs.,cre_Doc_Template_Mgt,easy,SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2,7,"SELECT document_id FROM paragraphs GROUP BY document_id HAVING COUNT(paragraph_id) >= 2
SELECT document_id FROM paragraphs GROUP BY document_id HAVING COUNT(paragraph_id) >= 2
SELECT document_id FROM paragraphs GROUP BY document_id HAVING COUNT(paragraph_id) >= 2
SELECT document_id FROM paragraphs GROUP BY document_id HAVING COUNT(paragraph_id) >= 2
SELECT document_id FROM paragraphs GROUP BY document_id HAVING COUNT(paragraph_id) >= 2
SELECT document_id FROM paragraphs GROUP BY document_id HAVING COUNT(paragraph_id) >= 2
SELECT document_id FROM paragraphs GROUP BY document_id HAVING COUNT(paragraph_id) >= 2",SELECT document_id FROM paragraphs GROUP BY document_id HAVING COUNT(paragraph_id) >= 2,0,1.0
541,684,What are the names of people who do not play poker?,poker_player,hard,SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player),7,"SELECT p.name FROM people p LEFT JOIN poker_player pp ON p.people_id = pp.people_id WHERE pp.people_id IS NULL
SELECT p.name FROM people p LEFT JOIN poker_player pp ON p.people_id = pp.people_id WHERE pp.people_id IS NULL
SELECT p.name FROM people p LEFT JOIN poker_player pp ON p.people_id = pp.people_id WHERE pp.people_id IS NULL
SELECT p.name FROM people p LEFT JOIN poker_player pp ON p.people_id = pp.people_id WHERE pp.people_id IS NULL
SELECT p.name FROM people p LEFT JOIN poker_player pp ON p.people_id = pp.people_id WHERE pp.people_id IS NULL
SELECT p.name FROM people p LEFT JOIN poker_player pp ON p.people_id = pp.people_id WHERE pp.people_id IS NULL
SELECT p.name FROM people p LEFT JOIN poker_player pp ON p.people_id = pp.people_id WHERE pp.people_id IS NULL",SELECT p.name FROM people p LEFT JOIN poker_player pp ON p.people_id = pp.people_id WHERE pp.people_id IS NULL,0,1.0
542,926,Which first names are used for professionals or owners but are not used as dog names?,dog_kennels,hard,SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs,7,"SELECT DISTINCT first_name FROM owners UNION SELECT DISTINCT first_name FROM professionals WHERE first_name NOT IN (SELECT name FROM dogs) AND (SELECT COUNT(*) FROM dogs WHERE name = first_name) = 0
SELECT DISTINCT first_name FROM owners UNION SELECT DISTINCT first_name FROM professionals WHERE first_name NOT IN (SELECT name FROM dogs)
SELECT DISTINCT first_name FROM owners UNION SELECT DISTINCT first_name FROM professionals EXCEPT SELECT name FROM dogs
SELECT DISTINCT first_name FROM owners UNION SELECT DISTINCT first_name FROM professionals EXCEPT SELECT name FROM dogs
SELECT DISTINCT first_name FROM owners UNION SELECT DISTINCT first_name FROM professionals EXCEPT SELECT name FROM dogs
SELECT DISTINCT first_name FROM owners UNION SELECT DISTINCT first_name FROM professionals EXCEPT SELECT name FROM dogs
SELECT DISTINCT first_name FROM owners UNION SELECT DISTINCT first_name FROM professionals WHERE first_name NOT IN (SELECT name FROM dogs)",SELECT DISTINCT first_name FROM owners UNION SELECT DISTINCT first_name FROM professionals EXCEPT SELECT name FROM dogs,0,1.0
543,848,Please show the different record companies and the corresponding number of orchestras.,orchestra,medium,"SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company",7,"SELECT record_company, COUNT(orchestra_id) AS num_orchestras FROM orchestra GROUP BY record_company
SELECT record_company, COUNT(orchestra_id) AS number_of_orchestras FROM orchestra GROUP BY record_company
SELECT record_company, COUNT(orchestra_id) AS number_of_orchestras FROM orchestra GROUP BY record_company
SELECT record_company, COUNT(orchestra_id) AS number_of_orchestras FROM orchestra GROUP BY record_company
SELECT record_company, COUNT(orchestra_id) AS number_of_orchestras FROM orchestra GROUP BY record_company
SELECT record_company, COUNT(orchestra_id) AS number_of_orchestras FROM orchestra GROUP BY record_company
SELECT record_company, COUNT(orchestra_id) AS number_of_orchestras FROM orchestra GROUP BY record_company","SELECT record_company, COUNT(orchestra_id) AS number_of_orchestras FROM orchestra GROUP BY record_company",0,1.0
544,497,What are the name and results of the battles when the bulgarian commander is not 'Boril',battle_death,medium,"SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'",7,"SELECT name, result FROM battles WHERE bulgarian_commander != 'Boril'
SELECT name, result FROM battles WHERE bulgarian_commander != 'Boril'
SELECT name, result FROM battles WHERE bulgarian_commander != 'Boril'
SELECT name, result FROM battles WHERE bulgarian_commander != 'Boril'
SELECT name, result FROM battles WHERE bulgarian_commander != 'Boril'
SELECT name, result FROM battles WHERE bulgarian_commander != 'Boril'
SELECT name, result FROM battles WHERE bulgarian_commander != 'Boril'","SELECT name, result FROM battles WHERE bulgarian_commander != 'Boril'",0,0.0
545,642,What are the ids of all tv channels that have more than 2 TV channels?,tvshow,easy,SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2,7,"SELECT channel  FROM tv_series  GROUP BY channel  HAVING COUNT(channel) > 2
SELECT channel  FROM tv_series  GROUP BY channel  HAVING COUNT(channel) > 2
SELECT channel FROM tv_series GROUP BY channel HAVING COUNT(channel) > 2
SELECT channel  FROM tv_series  GROUP BY channel  HAVING COUNT(channel) > 2
SELECT channel FROM tv_series GROUP BY channel HAVING COUNT(channel) > 2
SELECT channel  FROM tv_series  GROUP BY channel  HAVING COUNT(channel) > 2
SELECT channel FROM tv_series GROUP BY channel HAVING COUNT(channel) > 2",SELECT channel  FROM tv_series  GROUP BY channel  HAVING COUNT(channel) > 2,0,0.0
546,773,Which countries have greater area than that of any country in Europe?,world_1,hard,"SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  ""Europe"")",7,"SELECT name FROM country WHERE surfacearea > (SELECT MAX(surfacearea) FROM country WHERE continent = 'Europe')
SELECT name FROM country WHERE surfacearea > (SELECT MAX(surfacearea) FROM country WHERE continent = 'Europe')
SELECT name FROM country WHERE surfacearea > (SELECT MAX(surfacearea) FROM country WHERE continent = 'Europe')
SELECT name FROM country WHERE surfacearea > (SELECT MAX(surfacearea) FROM country WHERE continent = 'Europe')
SELECT name FROM country WHERE surfacearea > (SELECT MAX(surfacearea) FROM country WHERE continent = 'Europe')
SELECT name FROM country WHERE surfacearea > (SELECT MAX(surfacearea) FROM country WHERE continent = 'Europe')
SELECT name FROM country WHERE surfacearea > (SELECT MAX(surfacearea) FROM country WHERE continent = 'Europe')",SELECT name FROM country WHERE surfacearea > (SELECT MAX(surfacearea) FROM country WHERE continent = 'Europe'),0,0.0
547,51,Find number of pets owned by students who are older than 20.,pets_1,medium,SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20,7,"SELECT COUNT(p.petid) AS num_pets FROM students s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE s.age > 20
SELECT COUNT(p.petid) AS num_pets FROM students s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE s.age > 20
SELECT COUNT(p.petid) AS num_pets FROM students s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE s.age > 20
SELECT COUNT(p.petid) AS num_pets FROM students s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE s.age > 20
SELECT COUNT(p.petid) AS num_pets FROM students s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE s.age > 20
SELECT COUNT(p.petid) AS num_pets FROM students s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE s.age > 20
SELECT COUNT(p.petid) AS num_pets FROM students s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE s.age > 20",SELECT COUNT(p.petid) AS num_pets FROM students s JOIN has_pet hp ON s.stuid = hp.stuid JOIN pets p ON hp.petid = p.petid WHERE s.age > 20,0,0.0
548,3,"What are the names, countries, and ages for every singer in descending order of age?",concert_singer,medium,"SELECT name ,  country ,  age FROM singer ORDER BY age DESC",7,"SELECT name, country, age FROM singer ORDER BY age DESC
SELECT name, country, age FROM singer ORDER BY age DESC
SELECT name, country, age FROM singer ORDER BY age DESC
SELECT name, country, age FROM singer ORDER BY age DESC
SELECT name, country, age FROM singer ORDER BY age DESC
SELECT name, country, age FROM singer ORDER BY age DESC
SELECT name, country, age FROM singer ORDER BY age DESC","SELECT name, country, age FROM singer ORDER BY age DESC",True,1.0
549,908,Show the names of students who have at least 2 likes.,network_1,medium,SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2,7,"SELECT DISTINCT name FROM highschooler WHERE id IN (SELECT student_id FROM likes GROUP BY student_id HAVING COUNT(liked_id) >= 2)
SELECT DISTINCT name FROM highschooler WHERE id IN (SELECT student_id FROM likes GROUP BY student_id HAVING COUNT(liked_id) >= 2)
SELECT DISTINCT name FROM highschooler WHERE id IN (SELECT student_id FROM likes GROUP BY student_id HAVING COUNT(liked_id) >= 2)
SELECT DISTINCT name FROM highschooler WHERE id IN (SELECT student_id FROM likes GROUP BY student_id HAVING COUNT(liked_id) >= 2)
SELECT DISTINCT name FROM highschooler WHERE id IN (SELECT student_id FROM likes GROUP BY student_id HAVING COUNT(liked_id) >= 2)
SELECT DISTINCT name FROM highschooler WHERE id IN (SELECT student_id FROM likes GROUP BY student_id HAVING COUNT(liked_id) >= 2)
SELECT DISTINCT name FROM highschooler WHERE id IN (SELECT student_id FROM likes GROUP BY student_id HAVING COUNT(liked_id) >= 2)",SELECT DISTINCT name FROM highschooler WHERE id IN (SELECT student_id FROM likes GROUP BY student_id HAVING COUNT(liked_id) >= 2),0,1.0
550,420,"What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?",museum_visit,extra,"SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1",7,"SELECT v.id, v.name, v.level_of_membership  FROM visitor v  JOIN visit vi ON v.id = vi.visitor_id  GROUP BY v.id  ORDER BY SUM(vi.total_spent) DESC  LIMIT 1
SELECT v.id, v.name, v.level_of_membership  FROM visitor v  JOIN visit vi ON v.id = vi.visitor_id  GROUP BY v.id  ORDER BY SUM(vi.total_spent) DESC  LIMIT 1
SELECT v.id, v.name, v.level_of_membership FROM visitor v JOIN visit vi ON v.id = vi.visitor_id GROUP BY v.id ORDER BY SUM(vi.total_spent) DESC LIMIT 1
SELECT v.id, v.name, v.level_of_membership  FROM visitor v  JOIN visit vi ON v.id = vi.visitor_id  GROUP BY v.id  ORDER BY SUM(vi.total_spent) DESC  LIMIT 1
SELECT v.id, v.name, v.level_of_membership  FROM visitor v  JOIN visit vi ON v.id = vi.visitor_id  GROUP BY v.id  ORDER BY SUM(vi.total_spent) DESC  LIMIT 1
SELECT v.id, v.name, v.level_of_membership  FROM visitor v  JOIN visit vi ON v.id = vi.visitor_id  GROUP BY v.id  ORDER BY SUM(vi.total_spent) DESC  LIMIT 1
SELECT v.id, v.name, v.level_of_membership  FROM visitor v  JOIN visit vi ON v.id = vi.visitor_id  GROUP BY v.id  ORDER BY SUM(vi.total_spent) DESC  LIMIT 1","SELECT v.id, v.name, v.level_of_membership  FROM visitor v  JOIN visit vi ON v.id = vi.visitor_id  GROUP BY v.id  ORDER BY SUM(vi.total_spent) DESC  LIMIT 1",0,0.0
551,425,What is the total ticket expense of the visitors whose membership level is 1?,museum_visit,medium,SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1,7,"SELECT SUM(v.total_spent) FROM visit v JOIN visitor vi ON v.visitor_id = vi.id WHERE vi.level_of_membership = 1
SELECT SUM(v.total_spent) FROM visit v JOIN visitor vi ON v.visitor_id = vi.id WHERE vi.level_of_membership = 1
SELECT SUM(v.total_spent) FROM visit v JOIN visitor vi ON v.visitor_id = vi.id WHERE vi.level_of_membership = 1
SELECT SUM(v.total_spent) FROM visit v JOIN visitor vi ON v.visitor_id = vi.id WHERE vi.level_of_membership = 1
SELECT SUM(v.total_spent) FROM visit v JOIN visitor vi ON v.visitor_id = vi.id WHERE vi.level_of_membership = 1
SELECT SUM(v.total_spent) FROM visit v JOIN visitor vi ON v.visitor_id = vi.id WHERE vi.level_of_membership = 1
SELECT SUM(v.total_spent) FROM visit v JOIN visitor vi ON v.visitor_id = vi.id WHERE vi.level_of_membership = 1",SELECT SUM(v.total_spent) FROM visit v JOIN visitor vi ON v.visitor_id = vi.id WHERE vi.level_of_membership = 1,0,1.0
552,782,What are the codes of the countries that do not speak English and whose government forms are not Republic?,world_1,hard,"SELECT Code FROM country WHERE GovernmentForm != ""Republic"" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  ""English""",7,"SELECT code FROM country WHERE governmentform NOT LIKE '%Republic%' AND continent NOT LIKE '%Europe%' AND countrylanguage.language NOT LIKE '%English%'
SELECT code FROM country WHERE governmentform NOT LIKE '%Republic%' AND continent NOT LIKE '%Europe%' AND countrylanguage.language NOT LIKE '%English%'
SELECT code FROM country WHERE governmentform NOT LIKE '%Republic%' AND continent NOT LIKE '%Europe%' AND countrylanguage.language NOT LIKE '%English%'
SELECT code FROM country WHERE governmentform NOT LIKE '%Republic%' AND continent NOT LIKE '%Europe%' AND countrylanguage.language NOT LIKE '%English%'
SELECT code FROM country WHERE governmentform NOT LIKE '%Republic%' AND continent NOT LIKE '%Europe%' AND countrylanguage.language NOT LIKE '%English%'
SELECT code FROM country WHERE governmentform NOT LIKE '%Republic%' AND continent NOT LIKE '%Europe%' AND countrylanguage.language NOT LIKE '%English%'
SELECT code FROM country WHERE governmentform NOT LIKE '%Republic%' AND continent NOT LIKE '%Europe%' AND countrylanguage.language NOT LIKE '%English%'",SELECT code FROM country WHERE governmentform NOT LIKE '%Republic%' AND continent NOT LIKE '%Europe%' AND countrylanguage.language NOT LIKE '%English%',0,0.0
553,606,What are the languages used by the least number of TV Channels and how many channels use it?,tvshow,hard,"SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;",7,"SELECT language, COUNT(*) AS channel_count FROM tv_channel GROUP BY language ORDER BY channel_count ASC LIMIT 1
SELECT language, COUNT(*) AS channel_count FROM tv_channel GROUP BY language ORDER BY channel_count ASC LIMIT 1
SELECT language, COUNT(*) AS channel_count FROM tv_channel GROUP BY language ORDER BY channel_count ASC LIMIT 1
SELECT language, COUNT(*) AS channel_count FROM tv_channel GROUP BY language ORDER BY channel_count ASC LIMIT 1
SELECT language, COUNT(*) AS channel_count FROM tv_channel GROUP BY language ORDER BY channel_count ASC LIMIT 1
SELECT language, COUNT(*) AS channel_count FROM tv_channel GROUP BY language ORDER BY channel_count ASC LIMIT 1
SELECT language, COUNT(*) AS channel_count FROM tv_channel GROUP BY language ORDER BY channel_count ASC LIMIT 1","SELECT language, COUNT(*) AS channel_count FROM tv_channel GROUP BY language ORDER BY channel_count ASC LIMIT 1",0,1.0
554,643,find the id of tv channels that do not play any cartoon directed by Ben Jones.,tvshow,hard,SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones',7,"SELECT tv_channel.id FROM tv_channel LEFT JOIN tv_series ON tv_channel.id = tv_series.channel LEFT JOIN cartoon ON tv_series.id = cartoon.channel WHERE cartoon.directed_by = 'Ben Jones' AND cartoon.title IS NULL
SELECT tv_channel.id FROM tv_channel LEFT JOIN tv_series ON tv_channel.id = tv_series.channel LEFT JOIN cartoon ON tv_series.id = cartoon.channel WHERE cartoon.directed_by = 'Ben Jones' AND cartoon.title IS NULL
SELECT tv_channel.id FROM tv_channel LEFT JOIN tv_series ON tv_channel.id = tv_series.channel LEFT JOIN cartoon ON tv_series.id = cartoon.channel WHERE cartoon.directed_by = 'Ben Jones' AND cartoon.title IS NULL
SELECT tv_channel.id FROM tv_channel LEFT JOIN tv_series ON tv_channel.id = tv_series.channel LEFT JOIN cartoon ON tv_series.id = cartoon.channel WHERE cartoon.directed_by = 'Ben Jones' AND cartoon.title IS NULL
SELECT tv_channel.id FROM tv_channel LEFT JOIN tv_series ON tv_channel.id = tv_series.channel LEFT JOIN cartoon ON tv_series.id = cartoon.channel WHERE cartoon.directed_by = 'Ben Jones' AND cartoon.title IS NULL
SELECT tv_channel.id FROM tv_channel LEFT JOIN tv_series ON tv_channel.id = tv_series.channel LEFT JOIN cartoon ON tv_series.id = cartoon.channel WHERE cartoon.directed_by = 'Ben Jones' AND cartoon.title IS NULL
SELECT tv_channel.id FROM tv_channel LEFT JOIN tv_series ON tv_channel.id = tv_series.channel LEFT JOIN cartoon ON tv_series.id = cartoon.channel WHERE cartoon.directed_by = 'Ben Jones' AND cartoon.title IS NULL",SELECT tv_channel.id FROM tv_channel LEFT JOIN tv_series ON tv_channel.id = tv_series.channel LEFT JOIN cartoon ON tv_series.id = cartoon.channel WHERE cartoon.directed_by = 'Ben Jones' AND cartoon.title IS NULL,0,0.0
555,801,Return the names and surface areas of the 5 largest countries.,world_1,medium,"SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5",7,"SELECT name, surfacearea FROM country ORDER BY surfacearea DESC LIMIT 5
SELECT name, surfacearea FROM country ORDER BY surfacearea DESC LIMIT 5
SELECT name, surfacearea FROM country ORDER BY surfacearea DESC LIMIT 5
SELECT name, surfacearea FROM country ORDER BY surfacearea DESC LIMIT 5
SELECT name, surfacearea FROM country ORDER BY surfacearea DESC LIMIT 5
SELECT name, surfacearea FROM country ORDER BY surfacearea DESC LIMIT 5
SELECT name, surfacearea FROM country ORDER BY surfacearea DESC LIMIT 5","SELECT name, surfacearea FROM country ORDER BY surfacearea DESC LIMIT 5",True,1.0
556,759,What languages are only used by a single country with a republic government?,world_1,hard,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  ""Republic"" GROUP BY T2.Language HAVING COUNT(*)  =  1",7,"SELECT cl.language  FROM countrylanguage cl  JOIN country c ON cl.countrycode = c.code  WHERE c.governmentform = 'Republic'  GROUP BY cl.language  HAVING COUNT(DISTINCT c.code) = 1
SELECT cl.language FROM countrylanguage cl JOIN country c ON cl.countrycode = c.code WHERE c.governmentform = 'Republic' GROUP BY cl.language HAVING COUNT(DISTINCT c.code) = 1
SELECT cl.language  FROM countrylanguage cl  JOIN country c ON cl.countrycode = c.code  WHERE c.governmentform = 'Republic'  GROUP BY cl.language  HAVING COUNT(DISTINCT c.code) = 1
SELECT cl.language  FROM countrylanguage cl  JOIN country c ON cl.countrycode = c.code  WHERE c.governmentform = 'Republic'  GROUP BY cl.language  HAVING COUNT(DISTINCT c.name) = 1
SELECT cl.language  FROM countrylanguage cl  JOIN country c ON cl.countrycode = c.code  WHERE c.governmentform = 'Republic'  GROUP BY cl.language  HAVING COUNT(DISTINCT c.code) = 1
SELECT cl.language FROM countrylanguage cl JOIN country c ON cl.countrycode = c.code WHERE c.governmentform = 'Republic' GROUP BY cl.language HAVING COUNT(DISTINCT c.code) = 1
SELECT cl.language  FROM countrylanguage cl  JOIN country c ON cl.countrycode = c.code  WHERE c.governmentform = 'Republic'  GROUP BY cl.language  HAVING COUNT(DISTINCT c.code) = 1",SELECT cl.language  FROM countrylanguage cl  JOIN country c ON cl.countrycode = c.code  WHERE c.governmentform = 'Republic'  GROUP BY cl.language  HAVING COUNT(DISTINCT c.code) = 1,0,1.0
557,189,How many airports do we have?,flight_2,easy,SELECT count(*) FROM AIRPORTS,7,"SELECT COUNT(*) FROM airports
SELECT COUNT(*) FROM airports
SELECT COUNT(*) FROM airports
SELECT COUNT(*) FROM airports
SELECT COUNT(*) FROM airports
SELECT COUNT(*) FROM airports
SELECT COUNT(*) FROM airports",SELECT COUNT(*) FROM airports,True,1.0
558,742,Which continent has the most diverse languages?,world_1,extra,SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1,7,"SELECT continent, COUNT(DISTINCT language) AS num_languages FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY continent ORDER BY num_languages DESC LIMIT 1
SELECT continent, COUNT(DISTINCT language) AS language_diversity FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY continent ORDER BY language_diversity DESC LIMIT 1
SELECT continent, COUNT(DISTINCT language) AS num_languages FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY continent ORDER BY num_languages DESC LIMIT 1
SELECT continent, COUNT(DISTINCT language) AS num_languages FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY continent ORDER BY num_languages DESC LIMIT 1
SELECT continent, COUNT(DISTINCT language) AS language_diversity FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY continent ORDER BY language_diversity DESC LIMIT 1
SELECT continent, COUNT(DISTINCT language) AS language_diversity FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY continent ORDER BY language_diversity DESC LIMIT 1
SELECT continent, COUNT(DISTINCT language) AS language_diversity FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY continent ORDER BY language_diversity DESC LIMIT 1","SELECT continent, COUNT(DISTINCT language) AS language_diversity FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY continent ORDER BY language_diversity DESC LIMIT 1",0,0.0
559,839,What is the name of the conductor who has worked the greatest number of years?,orchestra,medium,SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1,7,"SELECT c.name FROM conductor c JOIN performance p ON c.conductor_id = p.conductor_id GROUP BY c.conductor_id ORDER BY SUM(p.year_of_work) DESC LIMIT 1
SELECT c.name FROM conductor c JOIN performance p ON c.conductor_id = p.conductor_id GROUP BY c.conductor_id ORDER BY SUM(p.year_of_work) DESC LIMIT 1
SELECT c.name FROM conductor c JOIN performance p ON c.conductor_id = p.conductor_id GROUP BY c.conductor_id ORDER BY SUM(p.year_of_work) DESC LIMIT 1
SELECT c.name FROM conductor c JOIN performance p ON c.conductor_id = p.conductor_id GROUP BY c.conductor_id ORDER BY SUM(p.year_of_work) DESC LIMIT 1
SELECT c.name FROM conductor c JOIN performance p ON c.conductor_id = p.conductor_id GROUP BY c.conductor_id ORDER BY SUM(p.year_of_work) DESC LIMIT 1
SELECT c.name FROM conductor c JOIN performance p ON c.conductor_id = p.conductor_id GROUP BY c.conductor_id ORDER BY SUM(p.year_of_work) DESC LIMIT 1
SELECT c.name FROM conductor c JOIN performance p ON c.conductor_id = p.conductor_id GROUP BY c.conductor_id ORDER BY SUM(p.year_of_work) DESC LIMIT 1",SELECT c.name FROM conductor c JOIN performance p ON c.conductor_id = p.conductor_id GROUP BY c.conductor_id ORDER BY SUM(p.year_of_work) DESC LIMIT 1,0,0.0
560,640,What is the pixel aspect ratio and country of origin for all TV channels that do not use English?,tvshow,medium,"SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'",7,"SELECT country, pixel_aspect_ratio_par FROM tv_channel WHERE language != 'English'
SELECT country, pixel_aspect_ratio_par FROM tv_channel WHERE language != 'English'
SELECT country, pixel_aspect_ratio_par FROM tv_channel WHERE language != 'English'
SELECT country, pixel_aspect_ratio_par FROM tv_channel WHERE language != 'English'
SELECT country, pixel_aspect_ratio_par FROM tv_channel WHERE language != 'English'
SELECT country, pixel_aspect_ratio_par FROM tv_channel WHERE language != 'English'
SELECT country, pixel_aspect_ratio_par FROM tv_channel WHERE language != 'English'","SELECT country, pixel_aspect_ratio_par FROM tv_channel WHERE language != 'English'",True,0.0
561,32,What are the names of all stadiums that did not have a concert in 2014?,concert_singer,hard,SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014,7,"SELECT s.name FROM stadium s LEFT JOIN concert c ON s.stadium_id = c.stadium_id AND c.year = 2014 WHERE c.concert_id IS NULL
SELECT s.name FROM stadium s LEFT JOIN concert c ON s.stadium_id = c.stadium_id AND c.year = 2014 WHERE c.concert_id IS NULL
SELECT s.name FROM stadium s LEFT JOIN concert c ON s.stadium_id = c.stadium_id AND c.year = 2014 WHERE c.concert_id IS NULL
SELECT DISTINCT s.name  FROM stadium s  LEFT JOIN concert c ON s.stadium_id = c.stadium_id AND c.year = 2014  WHERE c.concert_id IS NULL
SELECT DISTINCT s.name  FROM stadium s  LEFT JOIN concert c ON s.stadium_id = c.stadium_id AND c.year = 2014  WHERE c.concert_id IS NULL
SELECT s.name FROM stadium s LEFT JOIN concert c ON s.stadium_id = c.stadium_id AND c.year = 2014 WHERE c.concert_id IS NULL
SELECT s.name FROM stadium s LEFT JOIN concert c ON s.stadium_id = c.stadium_id AND c.year = 2014 WHERE c.concert_id IS NULL",SELECT s.name FROM stadium s LEFT JOIN concert c ON s.stadium_id = c.stadium_id AND c.year = 2014 WHERE c.concert_id IS NULL,0,1.0
562,577,How many different addresses do the students currently live?,student_transcripts_tracking,easy,SELECT count(DISTINCT current_address_id) FROM Students,7,"SELECT COUNT(DISTINCT current_address_id) FROM students
SELECT COUNT(DISTINCT current_address_id) FROM students
SELECT COUNT(DISTINCT current_address_id) FROM students
SELECT COUNT(DISTINCT current_address_id) FROM students
SELECT COUNT(DISTINCT current_address_id) FROM students
SELECT COUNT(DISTINCT current_address_id) FROM students
SELECT COUNT(DISTINCT current_address_id) FROM students",SELECT COUNT(DISTINCT current_address_id) FROM students,True,1.0
563,227,What is the code of airport that has fewest number of flights?,flight_2,extra,SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1,7,"SELECT sourceairport AS code FROM flights GROUP BY sourceairport ORDER BY COUNT(*) ASC LIMIT 1
SELECT sourceairport AS code FROM flights GROUP BY sourceairport ORDER BY COUNT(*) ASC LIMIT 1
SELECT sourceairport AS code FROM flights GROUP BY sourceairport ORDER BY COUNT(*) ASC LIMIT 1
SELECT sourceairport AS code FROM flights GROUP BY sourceairport ORDER BY COUNT(*) ASC LIMIT 1
SELECT sourceairport AS code FROM flights GROUP BY sourceairport ORDER BY COUNT(*) ASC LIMIT 1
SELECT sourceairport AS code FROM flights GROUP BY sourceairport ORDER BY COUNT(*) ASC LIMIT 1
SELECT sourceairport AS code FROM flights GROUP BY sourceairport ORDER BY COUNT(*) ASC LIMIT 1",SELECT sourceairport AS code FROM flights GROUP BY sourceairport ORDER BY COUNT(*) ASC LIMIT 1,0,0.0
564,431,Find the total number of matches.,wta_1,easy,SELECT count(*) FROM matches,7,"SELECT COUNT(*) FROM matches
SELECT COUNT(*) FROM matches
SELECT COUNT(*) FROM matches
SELECT COUNT(*) FROM matches
SELECT COUNT(*) FROM matches
SELECT COUNT(*) FROM matches
SELECT COUNT(*) FROM matches",SELECT COUNT(*) FROM matches,True,1.0
565,331,Which template type code has most number of templates?,cre_Doc_Template_Mgt,hard,SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1,7,"SELECT template_type_code, COUNT(*) AS num_templates FROM templates GROUP BY template_type_code ORDER BY num_templates DESC LIMIT 1
SELECT template_type_code, COUNT(*) AS num_templates FROM templates GROUP BY template_type_code ORDER BY num_templates DESC LIMIT 1
SELECT template_type_code, COUNT(*) AS num_templates FROM templates GROUP BY template_type_code ORDER BY num_templates DESC LIMIT 1
SELECT template_type_code, COUNT(*) AS num_templates FROM templates GROUP BY template_type_code ORDER BY num_templates DESC LIMIT 1
SELECT template_type_code, COUNT(*) AS num_templates FROM templates GROUP BY template_type_code ORDER BY num_templates DESC LIMIT 1
SELECT template_type_code, COUNT(*) AS num_templates FROM templates GROUP BY template_type_code ORDER BY num_templates DESC LIMIT 1
SELECT template_type_code, COUNT(*) AS num_templates FROM templates GROUP BY template_type_code ORDER BY num_templates DESC LIMIT 1","SELECT template_type_code, COUNT(*) AS num_templates FROM templates GROUP BY template_type_code ORDER BY num_templates DESC LIMIT 1",0,0.0
566,40,What is the name and country of origin of every singer who has a song with the word 'Hey' in its title?,concert_singer,medium,"SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'",7,"SELECT DISTINCT s.name, s.country FROM singer s JOIN song ON s.song_name = song.title WHERE song.title LIKE '%Hey%'
SELECT s.name, s.country FROM singer s JOIN song ON s.song_name = song.title WHERE song.title LIKE '%Hey%'
SELECT DISTINCT s.name, s.country FROM singer s JOIN song ON s.song_name = song.title WHERE song.title LIKE '%Hey%'
SELECT DISTINCT s.name, s.country FROM singer s JOIN song ON s.song_name = song.title WHERE song.title LIKE '%Hey%'
SELECT DISTINCT s.name, s.country FROM singer s JOIN song ON s.song_name = song.title WHERE song.title LIKE '%Hey%'
SELECT DISTINCT s.name, s.country FROM singer s JOIN song ON s.song_name = song.title WHERE song.title LIKE '%Hey%'
SELECT DISTINCT s.name, s.country FROM singer s JOIN song ON s.song_name = song.title WHERE song.title LIKE '%Hey%'","SELECT DISTINCT s.name, s.country FROM singer s JOIN song ON s.song_name = song.title WHERE song.title LIKE '%Hey%'",0,0.0
567,1016,Show different citizenships and the maximum net worth of singers of each citizenship.,singer,medium,"SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship",7,"SELECT citizenship, MAX(net_worth_millions) AS max_net_worth FROM singer GROUP BY citizenship
SELECT citizenship, MAX(net_worth_millions) AS max_net_worth FROM singer GROUP BY citizenship
SELECT citizenship, MAX(net_worth_millions) AS max_net_worth FROM singer GROUP BY citizenship
SELECT citizenship, MAX(net_worth_millions) AS max_net_worth FROM singer GROUP BY citizenship
SELECT citizenship, MAX(net_worth_millions) AS max_net_worth FROM singer GROUP BY citizenship
SELECT citizenship, MAX(net_worth_millions) AS max_net_worth FROM singer GROUP BY citizenship
SELECT citizenship, MAX(net_worth_millions) AS max_net_worth FROM singer GROUP BY citizenship","SELECT citizenship, MAX(net_worth_millions) AS max_net_worth FROM singer GROUP BY citizenship",0,1.0
568,501,What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'?,battle_death,medium,SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I',7,"SELECT DISTINCT name  FROM battle  WHERE bulgarian_commander = 'Kaloyan'  AND latin_commander = 'Baldwin I'
SELECT DISTINCT name  FROM battle  WHERE bulgarian_commander = 'Kaloyan'  AND latin_commander = 'Baldwin I'
SELECT DISTINCT name  FROM battle  WHERE bulgarian_commander = 'Kaloyan'  AND latin_commander = 'Baldwin I'
SELECT DISTINCT name  FROM battle  WHERE bulgarian_commander = 'Kaloyan'  AND latin_commander = 'Baldwin I'
SELECT DISTINCT name  FROM battle  WHERE bulgarian_commander = 'Kaloyan'  AND latin_commander = 'Baldwin I'
SELECT DISTINCT name  FROM battle  WHERE bulgarian_commander = 'Kaloyan'  AND latin_commander = 'Baldwin I'
SELECT DISTINCT name  FROM battle  WHERE bulgarian_commander = 'Kaloyan'  AND latin_commander = 'Baldwin I'",SELECT DISTINCT name  FROM battle  WHERE bulgarian_commander = 'Kaloyan'  AND latin_commander = 'Baldwin I',True,1.0
569,549,Find the last name of the students who currently live in the state of North Carolina but have not registered in any degree program.,student_transcripts_tracking,extra,SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id,7,"SELECT s.last_name FROM students s LEFT JOIN student_enrolment se ON s.student_id = se.student_id LEFT JOIN degree_programs dp ON se.degree_program_id = dp.degree_program_id WHERE s.state_province_county = 'North Carolina' AND se.degree_program_
SELECT s.last_name FROM students s LEFT JOIN student_enrolment se ON s.student_id = se.student_id LEFT JOIN degree_programs dp ON se.degree_program_id = dp.degree_program_id WHERE s.state_province_county = 'North Carolina' AND se.degree_program_
SELECT s.last_name FROM students s JOIN addresses a ON s.current_address_id = a.address_id WHERE a.state_province_county = 'North Carolina' AND s.student_id NOT IN (     SELECT se.student_id     FROM student_enrolment se     JOIN degree_programs
SELECT s.last_name FROM students s JOIN addresses a ON s.current_address_id = a.address_id WHERE a.state_province_county = 'North Carolina' AND s.student_id NOT IN (     SELECT se.student_id     FROM student_enrolment se     JOIN degree_programs
SELECT s.last_name FROM students s LEFT JOIN student_enrolment se ON s.student_id = se.student_id WHERE s.state_province_county = 'North Carolina' AND se.degree_program_id IS NULL
SELECT s.last_name FROM students s LEFT JOIN student_enrolment se ON s.student_id = se.student_id LEFT JOIN degree_programs dp ON se.degree_program_id = dp.degree_program_id WHERE s.state_province_county = 'North Carolina' AND se.degree_program_
SELECT s.last_name FROM students s JOIN addresses a ON s.current_address_id = a.address_id WHERE a.state_province_county = 'North Carolina' AND s.student_id NOT IN (     SELECT se.student_id     FROM student_enrolment se     JOIN degree_programs",SELECT s.last_name FROM students s LEFT JOIN student_enrolment se ON s.student_id = se.student_id LEFT JOIN degree_programs dp ON se.degree_program_id = dp.degree_program_id WHERE s.state_province_county = 'North Carolina' AND se.degree_program_,0,0.0
570,1004,What are the birth year and citizenship of singers?,singer,medium,"SELECT Birth_Year ,  Citizenship FROM singer",7,"SELECT birth_year, citizenship FROM singer
SELECT birth_year, citizenship FROM singer
SELECT birth_year, citizenship FROM singer
SELECT birth_year, citizenship FROM singer
SELECT birth_year, citizenship FROM singer
SELECT birth_year, citizenship FROM singer
SELECT birth_year, citizenship FROM singer","SELECT birth_year, citizenship FROM singer",True,1.0
571,752,What are the regions that use English or Dutch?,world_1,hard,"SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" OR T2.Language  =  ""Dutch""",7,"SELECT DISTINCT region FROM country WHERE language = 'Dutch' OR language = 'English'
SELECT DISTINCT region FROM country WHERE language = 'Dutch' OR language = 'English'
SELECT DISTINCT region FROM country WHERE language = 'Dutch' OR language = 'English'
SELECT DISTINCT region FROM country WHERE language = 'Dutch' OR language = 'English'
SELECT DISTINCT region FROM country WHERE language = 'Dutch' OR language = 'English'
SELECT DISTINCT region FROM country WHERE language = 'Dutch' OR language = 'English'
SELECT DISTINCT region FROM country WHERE language = 'Dutch' OR language = 'English'",SELECT DISTINCT region FROM country WHERE language = 'Dutch' OR language = 'English',0,0.0
572,297,How many documents do we have?,cre_Doc_Template_Mgt,easy,SELECT count(*) FROM Documents,7,"SELECT COUNT(*) FROM documents
SELECT COUNT(*) FROM documents
SELECT COUNT(*) FROM documents
SELECT COUNT(*) FROM documents
SELECT COUNT(*) FROM documents
SELECT COUNT(*) FROM documents
SELECT COUNT(*) FROM documents",SELECT COUNT(*) FROM documents,True,1.0
573,100,What is the name of the different car makers who produced a car in 1970?,car_1,extra,SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';,7,"SELECT DISTINCT maker FROM car_makers JOIN cars_data ON car_makers.id = cars_data.id WHERE cars_data.year = 1970
SELECT DISTINCT maker FROM car_makers JOIN cars_data ON car_makers.id = cars_data.id WHERE cars_data.year = 1970
SELECT DISTINCT maker FROM car_makers JOIN cars_data ON car_makers.id = cars_data.id WHERE cars_data.year = 1970
SELECT DISTINCT maker FROM car_makers WHERE year = 1970
SELECT DISTINCT maker FROM car_makers WHERE year = 1970
SELECT DISTINCT maker FROM car_makers JOIN cars_data ON car_makers.id = cars_data.id WHERE cars_data.year = 1970
SELECT DISTINCT maker FROM car_makers WHERE year = 1970",SELECT DISTINCT maker FROM car_makers JOIN cars_data ON car_makers.id = cars_data.id WHERE cars_data.year = 1970,False,0.0
574,681,"Show names of people whose nationality is not ""Russia"".",poker_player,easy,"SELECT Name FROM people WHERE Nationality != ""Russia""",7,"SELECT people.name FROM people WHERE people.nationality != 'Russia'
SELECT people.name FROM people WHERE people.nationality != 'Russia'
SELECT people.name FROM people WHERE people.nationality != 'Russia'
SELECT people.name FROM people WHERE people.nationality != 'Russia'
SELECT people.name FROM people WHERE people.nationality != 'Russia'
SELECT people.name FROM people WHERE people.nationality != 'Russia'
SELECT p.name FROM people p WHERE p.nationality != 'Russia'",SELECT people.name FROM people WHERE people.nationality != 'Russia',True,1.0
575,749,Give the names of countries with English and French as official languages.,world_1,extra,"SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND T2.IsOfficial  =  ""T"" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""French"" AND T2.IsOfficial  =  ""T""",7,"SELECT name FROM country WHERE code IN (SELECT countrycode FROM countrylanguage WHERE language IN ('English', 'French') AND isofficial = 'True') GROUP BY name
SELECT name FROM country WHERE code IN (SELECT countrycode FROM countrylanguage WHERE language IN ('English', 'French') AND isofficial = 'True') GROUP BY name
SELECT name FROM country WHERE code IN (SELECT countrycode FROM countrylanguage WHERE language IN ('English', 'French') AND isofficial = 'True') GROUP BY name
SELECT name FROM country WHERE code IN (SELECT countrycode FROM countrylanguage WHERE language IN ('English', 'French') AND isofficial = 'T') GROUP BY name
SELECT name FROM country WHERE code IN (SELECT countrycode FROM countrylanguage WHERE language IN ('English', 'French') AND isofficial = 'True') GROUP BY name
SELECT name FROM country WHERE code IN (SELECT countrycode FROM countrylanguage WHERE language IN ('English', 'French') AND isofficial = 'True') GROUP BY name
SELECT name FROM country WHERE code IN (SELECT countrycode FROM countrylanguage WHERE language IN ('English', 'French') AND isofficial = 'True') GROUP BY name","SELECT name FROM country WHERE code IN (SELECT countrycode FROM countrylanguage WHERE language IN ('English', 'French') AND isofficial = 'True') GROUP BY name",0,0.0
576,566,"What is the earliest date of a transcript release, and what details can you tell me?",student_transcripts_tracking,medium,"SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1",7,"SELECT MIN(transcript_date) AS earliest_transcript_date FROM transcripts
SELECT MIN(transcript_date) AS earliest_transcript_date FROM transcripts
SELECT MIN(transcript_date) AS earliest_transcript_date FROM transcripts
SELECT MIN(transcript_date) AS earliest_transcript_date FROM transcripts
SELECT MIN(transcript_date) AS earliest_transcript_date FROM transcripts
SELECT MIN(transcript_date) AS earliest_transcript_date FROM transcripts
SELECT MIN(transcript_date) AS earliest_transcript_date FROM transcripts",SELECT MIN(transcript_date) AS earliest_transcript_date FROM transcripts,0,0.0
577,678,Return the nationalities for which there are two or more people.,poker_player,easy,SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2,7,"SELECT nationality FROM people GROUP BY nationality HAVING COUNT(people_id) >= 2
SELECT nationality FROM people GROUP BY nationality HAVING COUNT(people_id) >= 2
SELECT nationality FROM people GROUP BY nationality HAVING COUNT(people_id) >= 2
SELECT nationality FROM people GROUP BY nationality HAVING COUNT(people_id) >= 2
SELECT nationality FROM people GROUP BY nationality HAVING COUNT(people_id) >= 2
SELECT nationality FROM people GROUP BY nationality HAVING COUNT(people_id) >= 2
SELECT nationality FROM people GROUP BY nationality HAVING COUNT(people_id) >= 2",SELECT nationality FROM people GROUP BY nationality HAVING COUNT(people_id) >= 2,0,1.0
578,713,What language is predominantly spoken in Aruba?,world_1,extra,"SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  ""Aruba"" ORDER BY Percentage DESC LIMIT 1",7,"SELECT language FROM countrylanguage WHERE countrycode = 'ABW'
SELECT language FROM countrylanguage WHERE countrycode = 'ABW'
SELECT language FROM countrylanguage WHERE countrycode = 'ABW'
SELECT language FROM countrylanguage WHERE countrycode = 'ABW'
SELECT language FROM countrylanguage WHERE countrycode = 'ABW'
SELECT language FROM countrylanguage WHERE countrycode = 'ABW'
SELECT language FROM countrylanguage WHERE countrycode = 'ABW'",SELECT language FROM countrylanguage WHERE countrycode = 'ABW',0,0.0
579,814,Which language is spoken by the largest number of countries?,world_1,hard,SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1,7,"SELECT language FROM countrylanguage GROUP BY language ORDER BY COUNT(countrycode) DESC LIMIT 1
SELECT language FROM countrylanguage GROUP BY language ORDER BY COUNT(countrycode) DESC LIMIT 1
SELECT language FROM countrylanguage GROUP BY language ORDER BY COUNT(countrycode) DESC LIMIT 1
SELECT language FROM countrylanguage GROUP BY language ORDER BY COUNT(countrycode) DESC LIMIT 1
SELECT language FROM countrylanguage GROUP BY language ORDER BY COUNT(countrycode) DESC LIMIT 1
SELECT language FROM countrylanguage GROUP BY language ORDER BY COUNT(countrycode) DESC LIMIT 1
SELECT language FROM countrylanguage GROUP BY language ORDER BY COUNT(countrycode) DESC LIMIT 1",SELECT language FROM countrylanguage GROUP BY language ORDER BY COUNT(countrycode) DESC LIMIT 1,0,1.0
580,825,"What are the names of conductors, ordered by age?",orchestra,easy,SELECT Name FROM conductor ORDER BY Age ASC,7,"SELECT name FROM conductor ORDER BY age
SELECT name FROM conductor ORDER BY age
SELECT name FROM conductor ORDER BY age
SELECT name FROM conductor ORDER BY age
SELECT name FROM conductor ORDER BY age
SELECT name FROM conductor ORDER BY age
SELECT name FROM conductor ORDER BY age",SELECT name FROM conductor ORDER BY age,True,1.0
581,1028,Show the citizenship shared by singers with birth year before 1945 and after 1955.,singer,hard,SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955,7,"SELECT DISTINCT s.citizenship FROM singer s WHERE s.birth_year < 1945 OR s.birth_year > 1955
SELECT DISTINCT s.citizenship FROM singer s WHERE s.birth_year < 1945 OR s.birth_year > 1955
SELECT DISTINCT s.citizenship FROM singer s WHERE s.birth_year < 1945 OR s.birth_year > 1955
SELECT DISTINCT s.citizenship FROM singer s WHERE s.birth_year < 1945 OR s.birth_year > 1955
SELECT DISTINCT s.citizenship FROM singer s WHERE s.birth_year < 1945 OR s.birth_year > 1955
SELECT DISTINCT s.citizenship FROM singer s WHERE s.birth_year < 1945 OR s.birth_year > 1955
SELECT DISTINCT s.citizenship FROM singer s WHERE s.birth_year < 1945 OR s.birth_year > 1955",SELECT DISTINCT s.citizenship FROM singer s WHERE s.birth_year < 1945 OR s.birth_year > 1955,0,0.0
582,408,What are the names of the teachers who teach at least two courses?,course_teach,medium,SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2,7,"SELECT t.name FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id GROUP BY t.teacher_id HAVING COUNT(ca.course_id) >= 2
SELECT t.name FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id GROUP BY t.teacher_id HAVING COUNT(ca.course_id) >= 2
SELECT t.name FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id GROUP BY t.teacher_id HAVING COUNT(ca.course_id) >= 2
SELECT t.name FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id GROUP BY t.teacher_id HAVING COUNT(ca.course_id) >= 2
SELECT t.name FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id GROUP BY t.teacher_id HAVING COUNT(ca.course_id) >= 2
SELECT t.name FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id GROUP BY t.teacher_id HAVING COUNT(ca.course_id) >= 2
SELECT t.name FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id GROUP BY t.teacher_id HAVING COUNT(ca.course_id) >= 2",SELECT t.name FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id GROUP BY t.teacher_id HAVING COUNT(ca.course_id) >= 2,0,1.0
583,466,What is the name of the winner with the most rank points who participated in the Australian Open tournament?,wta_1,hard,SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1,7,"SELECT winner_name FROM matches WHERE tourney_name = 'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1
SELECT winner_name FROM matches WHERE tourney_name = 'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1
SELECT winner_name FROM matches WHERE tourney_name = 'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1
SELECT winner_name FROM matches WHERE tourney_name = 'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1
SELECT winner_name FROM matches WHERE tourney_name = 'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1
SELECT winner_name FROM matches WHERE tourney_name = 'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1
SELECT winner_name FROM matches WHERE tourney_name = 'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1",SELECT winner_name FROM matches WHERE tourney_name = 'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1,True,1.0
584,929,"Give me the id, role and email of the professionals who did not perform any treatment on dogs.",dog_kennels,extra,"SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id",7,"SELECT p.professional_id, p.role_code, p.email_address FROM professionals p WHERE NOT EXISTS (     SELECT 1     FROM treatments t     JOIN dogs d ON t.dog_id = d.dog_id     WHERE d.breed_code IN ('breed_code', 'breed_name')     AND t.professional_id = p.professional_id )
SELECT p.professional_id, p.role_code, p.email_address FROM professionals p WHERE NOT EXISTS (     SELECT 1     FROM treatments t     JOIN dogs d ON t.dog_id = d.dog_id     WHERE d.breed_code IN ('breed_code', 'breed_name')     AND t.professional_id = p.professional_id )
SELECT p.professional_id, p.role_code, p.email_address FROM professionals p WHERE NOT EXISTS (     SELECT 1     FROM treatments t     JOIN dogs d ON t.dog_id = d.dog_id     WHERE d.breed_code = 'breed_code' AND d.breed_name = 'breed_name' AND t.professional_id = p.professional_id )
SELECT p.professional_id, p.role_code, p.email_address FROM professionals p LEFT JOIN treatments t ON p.professional_id = t.professional_id WHERE t.dog_id IS NULL OR NOT EXISTS (SELECT 1 FROM treatments WHERE treatments.professional_id = p.professional_id)
SELECT p.professional_id, p.role_code, p.email_address FROM professionals p LEFT JOIN treatments t ON p.professional_id = t.professional_id WHERE t.dog_id IS NULL OR NOT EXISTS (SELECT 1 FROM treatments WHERE treatments.professional_id = p.professional_id)
SELECT p.professional_id, p.role_code, p.email_address FROM professionals p WHERE NOT EXISTS (     SELECT 1     FROM treatments t     JOIN dogs d ON t.dog_id = d.dog_id     WHERE d.breed_code = 'breed_code' AND d.breed_name = 'breed_name' AND t.professional_id = p.professional_id )
SELECT p.professional_id, p.role_code, p.email_address FROM professionals p LEFT JOIN treatments t ON p.professional_id = t.professional_id WHERE t.dog_id IS NULL OR NOT EXISTS (SELECT 1 FROM treatments WHERE treatments.professional_id = p.professional_id)","SELECT p.professional_id, p.role_code, p.email_address FROM professionals p LEFT JOIN treatments t ON p.professional_id = t.professional_id WHERE t.dog_id IS NULL OR NOT EXISTS (SELECT 1 FROM treatments WHERE treatments.professional_id = p.professional_id)",0,0.0
585,534,"What are the first, middle, and last names, along with the ids, of all students who enrolled in 2 degree programs in one semester?",student_transcripts_tracking,medium,"SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2",7,"SELECT s.first_name, s.middle_name, s.last_name, s.student_id FROM students s JOIN student_enrolment se ON s.student_id = se.student_id GROUP BY s.student_id HAVING COUNT(DISTINCT se.degree_program_id) = 
SELECT s.first_name, s.middle_name, s.last_name, s.student_id FROM students s JOIN student_enrolment se ON s.student_id = se.student_id GROUP BY s.student_id HAVING COUNT(DISTINCT se.degree_program_id)
SELECT s.first_name, s.middle_name, s.last_name, s.student_id FROM students s JOIN student_enrolment se ON s.student_id = se.student_id GROUP BY s.student_id HAVING COUNT(DISTINCT se.degree_program_id)
SELECT s.first_name, s.middle_name, s.last_name, s.student_id FROM students s JOIN student_enrolment se ON s.student_id = se.student_id GROUP BY s.student_id HAVING COUNT(DISTINCT se.degree_program_id) = 
SELECT s.first_name, s.middle_name, s.last_name, s.student_id FROM students s JOIN student_enrolment se ON s.student_id = se.student_id GROUP BY s.student_id HAVING COUNT(DISTINCT se.degree_program_id)
SELECT s.first_name, s.middle_name, s.last_name, s.student_id FROM students s JOIN student_enrolment se ON s.student_id = se.student_id GROUP BY s.student_id HAVING COUNT(DISTINCT se.degree_program_id) = 
SELECT s.first_name, s.middle_name, s.last_name, s.student_id FROM students s JOIN student_enrolment se ON s.student_id = se.student_id GROUP BY s.student_id HAVING COUNT(DISTINCT se.degree_program_id) = ","SELECT s.first_name, s.middle_name, s.last_name, s.student_id FROM students s JOIN student_enrolment se ON s.student_id = se.student_id GROUP BY s.student_id HAVING COUNT(DISTINCT se.degree_program_id) = ",0,0.0
586,161,How many countries has more than 2 car makers ?,car_1,medium,select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2,7,"SELECT COUNT(DISTINCT country) FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE countries.continent = 'Europe'
SELECT COUNT(DISTINCT country) FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE countries.continent = 'Europe'
SELECT COUNT(DISTINCT country) FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE countries.continent = 'Europe'
SELECT COUNT(DISTINCT country) FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE countries.continent = 'Europe'
SELECT COUNT(DISTINCT country) FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE countries.continent = 'Europe' HAVING COUNT(car_makers.id) > 2
SELECT COUNT(DISTINCT country) FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE countries.continent = 'Europe'
SELECT COUNT(DISTINCT country) FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE countries.continent = 'Europe'",SELECT COUNT(DISTINCT country) FROM countries JOIN car_makers ON countries.countryid = car_makers.country WHERE countries.continent = 'Europe',0,0.0
587,584,What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582 ?,student_transcripts_tracking,hard,select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582',7,"SELECT first_name FROM students WHERE country = 'Haiti' OR cell_mobile_number = '09700166582'
SELECT first_name FROM students WHERE country = 'Haiti' OR cell_mobile_number = '09700166582'
SELECT first_name FROM students WHERE country = 'Haiti' OR cell_mobile_number = '09700166582'
SELECT first_name FROM students WHERE country = 'Haiti' OR cell_mobile_number = '09700166582'
SELECT first_name FROM students WHERE country = 'Haiti' OR cell_mobile_number = '09700166582'
SELECT first_name FROM students WHERE country = 'Haiti' OR cell_mobile_number = '09700166582'
SELECT first_name FROM students WHERE country = 'Haiti' OR cell_mobile_number = '09700166582'",SELECT first_name FROM students WHERE country = 'Haiti' OR cell_mobile_number = '09700166582',0,0.0
588,906,What is the name of the high schooler who has the greatest number of likes?,network_1,extra,SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1,7,"SELECT hs.name FROM highschooler hs JOIN likes l ON hs.id = l.student_id GROUP BY hs.id ORDER BY COUNT(l.liked_id) DESC LIMIT 1
SELECT hs.name FROM highschooler hs JOIN likes l ON hs.id = l.student_id GROUP BY hs.id ORDER BY COUNT(l.liked_id) DESC LIMIT 1
SELECT hs.name FROM highschooler hs JOIN likes l ON hs.id = l.student_id GROUP BY hs.id ORDER BY COUNT(l.liked_id) DESC LIMIT 1
SELECT hs.name FROM highschooler hs JOIN likes l ON hs.id = l.student_id GROUP BY hs.id ORDER BY COUNT(l.liked_id) DESC LIMIT 1
SELECT hs.name FROM highschooler hs JOIN likes l ON hs.id = l.student_id GROUP BY hs.id ORDER BY COUNT(l.liked_id) DESC LIMIT 1
SELECT hs.name FROM highschooler hs JOIN likes l ON hs.id = l.student_id GROUP BY hs.id ORDER BY COUNT(l.liked_id) DESC LIMIT 1
SELECT hs.name FROM highschooler hs JOIN likes l ON hs.id = l.student_id GROUP BY hs.id ORDER BY COUNT(l.liked_id) DESC LIMIT 1",SELECT hs.name FROM highschooler hs JOIN likes l ON hs.id = l.student_id GROUP BY hs.id ORDER BY COUNT(l.liked_id) DESC LIMIT 1,0,1.0
589,588,What are the names of all cartoons directed by Ben Jones?,tvshow,easy,"SELECT Title FROM Cartoon WHERE Directed_by = ""Ben Jones"";",7,"SELECT title FROM cartoon WHERE directed_by = 'Ben Jones'
SELECT title FROM cartoon WHERE directed_by = 'Ben Jones'
SELECT title FROM cartoon WHERE directed_by = 'Ben Jones'
SELECT title FROM cartoon WHERE directed_by = 'Ben Jones'
SELECT title FROM cartoon WHERE directed_by = 'Ben Jones'
SELECT title FROM cartoon WHERE directed_by = 'Ben Jones'
SELECT title FROM cartoon WHERE directed_by = 'Ben Jones'",SELECT title FROM cartoon WHERE directed_by = 'Ben Jones',True,1.0
590,755,Which countries have either English or Dutch as an official language?,world_1,extra,"SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" AND IsOfficial  =  ""T"" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""Dutch"" AND IsOfficial  =  ""T""",7,"SELECT DISTINCT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language IN ('English', 'Dutch')
SELECT DISTINCT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language IN ('English', 'Dutch')
SELECT DISTINCT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language IN ('English', 'Dutch')
SELECT DISTINCT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language IN ('English', 'Dutch')
SELECT DISTINCT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language IN ('English', 'Dutch')
SELECT DISTINCT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language IN ('English', 'Dutch')
SELECT DISTINCT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language IN ('English', 'Dutch')","SELECT DISTINCT country.name FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode WHERE countrylanguage.language IN ('English', 'Dutch')",0,0.0
591,386,What is the age and hometown of every teacher?,course_teach,medium,"SELECT Age ,  Hometown FROM teacher",7,"SELECT t.name, t.age, t.hometown FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id
SELECT t.name, t.age, t.hometown FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id
SELECT t.name, t.age, t.hometown FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id
SELECT t.name, t.age, t.hometown FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id
SELECT t.name, t.age, t.hometown FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id
SELECT t.name, t.age, t.hometown FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id
SELECT t.name, t.age, t.hometown FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id","SELECT t.name, t.age, t.hometown FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id JOIN course c ON ca.course_id = c.course_id",0,0.0
592,328,Return the version numbers and template type codes of templates with a version number greater than 5.,cre_Doc_Template_Mgt,medium,"SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5",7,"SELECT version_number, template_type_code FROM templates WHERE version_number > 5
SELECT version_number, template_type_code FROM templates WHERE version_number > 5
SELECT version_number, template_type_code FROM templates WHERE version_number > 5
SELECT version_number, template_type_code FROM templates WHERE version_number > 5
SELECT version_number, template_type_code FROM templates WHERE version_number > 5
SELECT version_number, template_type_code FROM templates WHERE version_number > 5
SELECT version_number, template_type_code FROM templates WHERE version_number > 5","SELECT version_number, template_type_code FROM templates WHERE version_number > 5",True,1.0
593,62,"What major is every student who does not own a cat as a pet, and also how old are they?",pets_1,extra,"SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')",7,"SELECT s.major, s.age FROM student s LEFT JOIN has_pet hp ON s.stuid = hp.stuid LEFT JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'cat' AND p.weight IS NULL
SELECT s.major, s.age FROM student s LEFT JOIN has_pet hp ON s.stuid = hp.stuid LEFT JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'cat' AND p.pet_age IS NULL
SELECT s.major, s.age FROM student s LEFT JOIN has_pet hp ON s.stuid = hp.stuid LEFT JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'cat' AND p.pet_age IS NULL
SELECT s.major, s.age FROM student s LEFT JOIN has_pet hp ON s.stuid = hp.stuid LEFT JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'cat' AND p.pet_age IS NULL
SELECT s.major, s.age FROM student s LEFT JOIN has_pet hp ON s.stuid = hp.stuid LEFT JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'cat' AND p.pet_age IS NULL
SELECT s.major, s.age FROM student s LEFT JOIN has_pet hp ON s.stuid = hp.stuid LEFT JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'cat' AND p.pet_age IS NULL
SELECT s.major, s.age FROM student s LEFT JOIN has_pet hp ON s.stuid = hp.stuid LEFT JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'cat' AND p.pet_age IS NULL","SELECT s.major, s.age FROM student s LEFT JOIN has_pet hp ON s.stuid = hp.stuid LEFT JOIN pets p ON hp.petid = p.petid WHERE p.pettype = 'cat' AND p.pet_age IS NULL",0,0.0
594,57,Find the first name of students who have cat or dog pet.,pets_1,extra,SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog',7,"SELECT fname FROM students JOIN has_pet ON students.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype IN ('cat', 'dog')
SELECT fname FROM students INNER JOIN has_pet ON students.stuid = has_pet.stuid INNER JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype IN ('cat', 'dog')
SELECT fname FROM students JOIN has_pet ON students.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype IN ('cat', 'dog')
SELECT fname FROM students JOIN has_pet ON students.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype IN ('cat', 'dog')
SELECT fname FROM students JOIN has_pet ON students.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype IN ('cat', 'dog')
SELECT fname FROM students JOIN has_pet ON students.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype IN ('cat', 'dog')
SELECT fname FROM students JOIN has_pet ON students.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype IN ('cat', 'dog')","SELECT fname FROM students JOIN has_pet ON students.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE pets.pettype IN ('cat', 'dog')",0,0.0
595,883,How many friends does each student have?,network_1,medium,"SELECT student_id ,  count(*) FROM Friend GROUP BY student_id",7,"SELECT hs.name, COUNT(f.friend_id) AS num_friends FROM highschooler hs LEFT JOIN friend f ON hs.id = f.student_id GROUP BY hs.id
SELECT hs.name, COUNT(f.friend_id) AS num_friends FROM highschooler hs LEFT JOIN friend f ON hs.id = f.student_id GROUP BY hs.id
SELECT hs.name, COUNT(f.friend_id) AS num_friends FROM highschooler hs LEFT JOIN friend f ON hs.id = f.student_id GROUP BY hs.id
SELECT hs.name, COUNT(f.friend_id) AS num_friends FROM highschooler hs LEFT JOIN friend f ON hs.id = f.student_id GROUP BY hs.id
SELECT hs.name, COUNT(f.friend_id) AS num_friends FROM highschooler hs LEFT JOIN friend f ON hs.id = f.student_id GROUP BY hs.id
SELECT hs.name, COUNT(f.friend_id) AS num_friends FROM highschooler hs LEFT JOIN friend f ON hs.id = f.student_id GROUP BY hs.id
SELECT hs.name, COUNT(f.friend_id) AS num_friends FROM highschooler hs LEFT JOIN friend f ON hs.id = f.student_id GROUP BY hs.id","SELECT hs.name, COUNT(f.friend_id) AS num_friends FROM highschooler hs LEFT JOIN friend f ON hs.id = f.student_id GROUP BY hs.id",0,0.0
596,315,Show ids for all templates not used by any document.,cre_Doc_Template_Mgt,hard,SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents,7,"SELECT t.template_id FROM templates t LEFT JOIN documents d ON t.template_id = d.template_id WHERE d.template_id IS NULL
SELECT t.template_id FROM templates t LEFT JOIN documents d ON t.template_id = d.template_id WHERE d.template_id IS NULL
SELECT t.template_id FROM templates t LEFT JOIN documents d ON t.template_id = d.template_id WHERE d.template_id IS NULL
SELECT t.template_id FROM templates t LEFT JOIN documents d ON t.template_id = d.template_id WHERE d.template_id IS NULL
SELECT t.template_id FROM templates t LEFT JOIN documents d ON t.template_id = d.template_id WHERE d.template_id IS NULL
SELECT t.template_id FROM templates t LEFT JOIN documents d ON t.template_id = d.template_id WHERE d.template_id IS NULL AND t.template_type_code IN ('template_type_code', 'template_type_description')
SELECT t.template_id FROM templates t LEFT JOIN documents d ON t.template_id = d.template_id WHERE d.template_id IS NULL",SELECT t.template_id FROM templates t LEFT JOIN documents d ON t.template_id = d.template_id WHERE d.template_id IS NULL,0,1.0
597,571,How many times at most can a course enrollment result show in different transcripts? Also show the course enrollment id.,student_transcripts_tracking,hard,"SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT COUNT(*) AS max_course_enrollment_count, student_enrolment_id FROM student_enrolment_courses GROUP BY student_enrolment_id ORDER BY max_course_enrollment_count DESC
SELECT COUNT(*) AS max_enrollments, student_enrolment_id FROM student_enrolment_courses GROUP BY student_enrolment_id ORDER BY max_enrollments DESC
SELECT course_id, student_enrolment_id, COUNT(*) AS enrollment_count FROM student_enrolment_courses GROUP BY course_id, student_enrolment_id ORDER BY course_id, student_enrolment_id
SELECT COUNT(*) AS max_course_enrollments, student_enrolment_id FROM student_enrolment_courses GROUP BY student_enrolment_id ORDER BY max_course_enrollments DESC
SELECT COUNT(*) AS max_course_enrollment_count, student_enrolment_id FROM student_enrolment_courses GROUP BY student_enrolment_id ORDER BY max_course_enrollment_count DESC
SELECT student_course_id, COUNT(*) AS max_occurrences FROM transcript_contents GROUP BY student_course_id ORDER BY max_occurrences DESC, student_course_id
SELECT COUNT(*) AS max_course_enrollments, student_enrolment_id FROM student_enrolment_courses GROUP BY student_enrolment_id ORDER BY max_course_enrollments DESC","SELECT COUNT(*) AS max_course_enrollment_count, student_enrolment_id FROM student_enrolment_courses GROUP BY student_enrolment_id ORDER BY max_course_enrollment_count DESC",0,0.0
598,168,"Among the cars that do not have the minimum horsepower , what are the make ids and names of all those with less than 4 cylinders ?",car_1,extra,"select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;",7,"SELECT cm.id, cm.maker, ml.model FROM car_makers cm JOIN model_list ml ON cm.id = ml.maker JOIN cars_data cd ON ml.modelid = cd.id WHERE cd.horsepower < (SELECT MIN(horsepower) FROM cars_data) AND cd.cylinders < 4
SELECT cm.id, cm.maker, ml.model FROM car_makers cm JOIN model_list ml ON cm.id = ml.maker JOIN cars_data cd ON ml.modelid = cd.id WHERE cd.horsepower < (SELECT MIN(horsepower) FROM cars_data) AND cd.cylinders < 4
SELECT cm.id, cm.maker, ml.model FROM car_makers cm JOIN model_list ml ON cm.id = ml.maker JOIN cars_data cd ON ml.modelid = cd.id WHERE cd.horsepower < (SELECT MIN(horsepower) FROM cars_data) AND cd.cylinders < 4
SELECT cm.id, cm.maker, ml.model FROM car_makers cm JOIN model_list ml ON cm.id = ml.maker JOIN cars_data cd ON ml.modelid = cd.id WHERE cd.horsepower < (SELECT MIN(horsepower) FROM cars_data) AND cd.cylinders < 4
SELECT cm.id, cm.maker, ml.model FROM car_makers cm JOIN model_list ml ON cm.id = ml.maker JOIN cars_data cd ON ml.modelid = cd.id WHERE cd.horsepower < (SELECT MIN(horsepower) FROM cars_data) AND cd.cylinders < 4
SELECT cm.id, cm.maker, ml.model FROM car_makers cm JOIN model_list ml ON cm.id = ml.maker JOIN cars_data cd ON ml.modelid = cd.id WHERE cd.horsepower < (SELECT MIN(horsepower) FROM cars_data) AND cd.cylinders < 4
SELECT cm.id, cm.maker, ml.model FROM car_makers cm JOIN model_list ml ON cm.id = ml.maker JOIN cars_data cd ON ml.modelid = cd.id WHERE cd.horsepower < (SELECT MIN(horsepower) FROM cars_data) AND cd.cylinders < 4","SELECT cm.id, cm.maker, ml.model FROM car_makers cm JOIN model_list ml ON cm.id = ml.maker JOIN cars_data cd ON ml.modelid = cd.id WHERE cd.horsepower < (SELECT MIN(horsepower) FROM cars_data) AND cd.cylinders < 4",0,0.0
599,504,List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta',battle_death,extra,"SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'",7,"SELECT b.name, b.date FROM battle b JOIN ship s ON b.id = s.lost_in_battle WHERE s.name = 'Lettice' OR s.name = 'HMS Atalanta'
SELECT b.name, b.date FROM battle b JOIN ship s ON b.id = s.lost_in_battle WHERE s.name = 'Lettice' OR s.name = 'HMS Atalanta'
SELECT b.name, b.date FROM battle b JOIN ship s ON b.id = s.lost_in_battle WHERE s.name = 'Lettice' OR s.name = 'HMS Atalanta'
SELECT b.name, b.date FROM battle b JOIN ship s ON b.id = s.lost_in_battle WHERE s.name = 'Lettice' OR s.name = 'HMS Atalanta'
SELECT b.name, b.date FROM battle b JOIN ship s ON b.id = s.lost_in_battle WHERE s.name = 'Lettice' OR s.name = 'HMS Atalanta'
SELECT b.name, b.date FROM battle b JOIN ship s ON b.id = s.lost_in_battle WHERE s.name = 'Lettice' OR s.name = 'HMS Atalanta'
SELECT b.name, b.date FROM battle b JOIN ship s ON b.id = s.lost_in_battle WHERE s.name = 'Lettice' OR s.name = 'HMS Atalanta'","SELECT b.name, b.date FROM battle b JOIN ship s ON b.id = s.lost_in_battle WHERE s.name = 'Lettice' OR s.name = 'HMS Atalanta'",0,1.0
600,86,What is the average age for all students who do not own any pets ?,pets_1,extra,select avg(age) from student where stuid not in (select stuid from has_pet),7,"SELECT AVG(age) FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet)
SELECT AVG(age) FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet)
SELECT AVG(age) FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet)
SELECT AVG(age) FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet)
SELECT AVG(age) FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet)
SELECT AVG(age) FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet)
SELECT AVG(age) FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet)",SELECT AVG(age) FROM student WHERE stuid NOT IN (SELECT stuid FROM has_pet),True,1.0
601,404,What are the names of the people who teach math courses?,course_teach,hard,"SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  ""Math""",7,"SELECT teacher.name FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.course_id WHERE course.course = 'math'
SELECT teacher.name FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id WHERE course_arrange.course_id IN (SELECT course_id FROM course WHERE course = 'math')
SELECT teacher.name FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.course_id WHERE course.course = 'math'
SELECT teacher.name FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.course_id WHERE course.course = 'math'
SELECT teacher.name FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.course_id WHERE course.course = 'math'
SELECT teacher.name FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.course_id WHERE course.course = 'math'
SELECT teacher.name FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id WHERE course_arrange.course_id IN (SELECT course_id FROM course WHERE course = 'math')",SELECT teacher.name FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id JOIN course ON course_arrange.course_id = course.course_id WHERE course.course = 'math',True,0.0
602,305,How many different templates do all document use?,cre_Doc_Template_Mgt,easy,SELECT count(DISTINCT template_id) FROM Documents,7,"SELECT COUNT(DISTINCT template_type_code) FROM templates
SELECT COUNT(DISTINCT template_type_code) FROM templates
SELECT COUNT(DISTINCT template_type_code) FROM templates
SELECT COUNT(DISTINCT template_type_code) FROM templates
SELECT COUNT(DISTINCT template_type_code) FROM templates
SELECT COUNT(DISTINCT template_type_code) FROM templates
SELECT COUNT(DISTINCT template_type_code) FROM templates",SELECT COUNT(DISTINCT template_type_code) FROM templates,0,0.0
603,730,What is the average GNP and total population in all nations whose government is US territory?,world_1,medium,"SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  ""US Territory""",7,"SELECT AVG(gnp) AS average_gnp, SUM(population) AS total_population FROM country WHERE governmentform = 'US territory'
SELECT AVG(gnp) AS average_gnp, SUM(population) AS total_population FROM country WHERE governmentform = 'US territory'
SELECT AVG(gnp) AS average_gnp, SUM(population) AS total_population FROM country WHERE governmentform = 'US territory'
SELECT AVG(gnp) AS average_gnp, SUM(population) AS total_population FROM country WHERE governmentform = 'US territory'
SELECT AVG(gnp) AS average_gnp, SUM(population) AS total_population FROM country WHERE governmentform = 'US territory'
SELECT AVG(gnp) AS average_gnp, SUM(population) AS total_population FROM country WHERE governmentform = 'US territory'
SELECT AVG(gnp) AS average_gnp, SUM(population) AS total_population FROM country WHERE governmentform = 'US territory'","SELECT AVG(gnp) AS average_gnp, SUM(population) AS total_population FROM country WHERE governmentform = 'US territory'",0,0.0
604,98,What is the model for the car with a weight smaller than the average?,car_1,extra,SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA),7,"SELECT m.model FROM cars_data cd JOIN model_list m ON cd.id = m.modelid WHERE cd.weight < (SELECT AVG(weight) FROM cars_data)
SELECT ml.model FROM model_list ml JOIN car_makers cm ON ml.maker = cm.id JOIN cars_data cd ON ml.model = cd.make WHERE cd.weight < (SELECT AVG(weight) FROM cars_data)
SELECT ml.model FROM model_list ml JOIN car_makers cm ON ml.maker = cm.id JOIN cars_data cd ON ml.model = cd.make WHERE cd.weight < (SELECT AVG(weight) FROM cars_data)
SELECT ml.model FROM model_list ml JOIN car_makers cm ON ml.maker = cm.id JOIN cars_data cd ON ml.model = cd.make WHERE cd.weight < (SELECT AVG(weight) FROM cars_data)
SELECT ml.model FROM model_list ml JOIN car_makers cm ON ml.maker = cm.id JOIN cars_data cd ON ml.model = cd.make WHERE cd.weight < (SELECT AVG(weight) FROM cars_data)
SELECT ml.model FROM model_list ml JOIN car_makers cm ON ml.maker = cm.id JOIN cars_data cd ON ml.model = cd.make WHERE cd.weight < (SELECT AVG(weight) FROM cars_data)
SELECT ml.model FROM model_list ml JOIN car_makers cm ON ml.maker = cm.id JOIN cars_data cd ON ml.model = cd.make WHERE cd.weight < (SELECT AVG(weight) FROM cars_data)",SELECT ml.model FROM model_list ml JOIN car_makers cm ON ml.maker = cm.id JOIN cars_data cd ON ml.model = cd.make WHERE cd.weight < (SELECT AVG(weight) FROM cars_data),0,0.0
605,309,Show all template ids and number of documents using each template.,cre_Doc_Template_Mgt,medium,"SELECT template_id ,  count(*) FROM Documents GROUP BY template_id",7,"SELECT t.template_id, COUNT(d.document_id) AS number_of_documents FROM templates t JOIN documents d ON t.template_id = d.template_id GROUP BY t.template_id
SELECT t.template_id, COUNT(d.document_id) AS number_of_documents FROM templates t JOIN documents d ON t.template_id = d.template_id GROUP BY t.template_id
SELECT t.template_id, COUNT(d.document_id) AS number_of_documents FROM templates t JOIN documents d ON t.template_id = d.template_id GROUP BY t.template_id
SELECT t.template_id, COUNT(d.document_id) AS number_of_documents FROM templates t JOIN documents d ON t.template_id = d.template_id GROUP BY t.template_id
SELECT t.template_id, COUNT(d.document_id) AS number_of_documents FROM templates t JOIN documents d ON t.template_id = d.template_id GROUP BY t.template_id
SELECT t.template_id, COUNT(d.document_id) AS number_of_documents FROM templates t JOIN documents d ON t.template_id = d.template_id GROUP BY t.template_id
SELECT t.template_id, COUNT(d.document_id) AS number_of_documents FROM templates t JOIN documents d ON t.template_id = d.template_id GROUP BY t.template_id","SELECT t.template_id, COUNT(d.document_id) AS number_of_documents FROM templates t JOIN documents d ON t.template_id = d.template_id GROUP BY t.template_id",0,1.0
606,143,How many cars have more than 4 cylinders?,car_1,easy,SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;,7,"SELECT COUNT(*) FROM cars_data WHERE cylinders > 4
SELECT COUNT(*) FROM cars_data WHERE cylinders > 4
SELECT COUNT(*) FROM cars_data WHERE cylinders > 4
SELECT COUNT(*) FROM cars_data WHERE cylinders > 4
SELECT COUNT(*) FROM cars_data WHERE cylinders > 4
SELECT COUNT(*) FROM cars_data WHERE cylinders > 4
SELECT COUNT(*) FROM cars_data WHERE cylinders > 4",SELECT COUNT(*) FROM cars_data WHERE cylinders > 4,True,1.0
607,269,Find the manager name and district of the shop whose number of products is the largest.,employee_hire_evaluation,medium,"SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1",7,"SELECT s.manager_name, s.district  FROM shop s  JOIN hiring h ON s.shop_id = h.shop_id  WHERE s.number_products = (SELECT MAX(number_products) FROM shop)
SELECT s.manager_name, s.district  FROM shop s  JOIN hiring h ON s.shop_id = h.shop_id  WHERE s.number_products = (SELECT MAX(number_products) FROM shop)
SELECT s.manager_name, s.district  FROM shop s  JOIN hiring h ON s.shop_id = h.shop_id  WHERE s.number_products = (SELECT MAX(number_products) FROM shop)
SELECT s.manager_name, s.district FROM shop s JOIN hiring h ON s.shop_id = h.shop_id JOIN employee e ON h.employee_id = e.employee_id WHERE s.number_products = (SELECT MAX(number_products) FROM shop)
SELECT s.manager_name, s.district FROM shop s JOIN hiring h ON s.shop_id = h.shop_id JOIN employee e ON h.employee_id = e.employee_id WHERE s.number_products = (SELECT MAX(number_products) FROM shop)
SELECT s.manager_name, s.district  FROM shop s  JOIN hiring h ON s.shop_id = h.shop_id  WHERE s.number_products = (SELECT MAX(number_products) FROM shop)
SELECT s.manager_name, s.district  FROM shop s  JOIN hiring h ON s.shop_id = h.shop_id  WHERE s.number_products = (SELECT MAX(number_products) FROM shop)","SELECT s.manager_name, s.district  FROM shop s  JOIN hiring h ON s.shop_id = h.shop_id  WHERE s.number_products = (SELECT MAX(number_products) FROM shop)",0,1.0
608,794,Find the number of cities in each district whose population is greater than the average population of cities?,world_1,extra,"SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District",7,"SELECT district, COUNT(*) AS num_cities FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district
SELECT district, COUNT(*) AS num_cities FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district
SELECT district, COUNT(*) AS num_cities FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district
SELECT district, COUNT(*) AS num_cities FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district
SELECT district, COUNT(*) AS num_cities FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district
SELECT district, COUNT(*) AS num_cities FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district
SELECT district, COUNT(*) AS num_cities FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district","SELECT district, COUNT(*) AS num_cities FROM city WHERE population > (SELECT AVG(population) FROM city) GROUP BY district",0,0.0
609,85,Find the average age of students who do not have any pet .,pets_1,extra,select avg(age) from student where stuid not in (select stuid from has_pet),7,"SELECT AVG(s.age)  FROM student s  LEFT JOIN has_pet hp ON s.stuid = hp.stuid  WHERE hp.petid IS NULL
SELECT AVG(s.age)  FROM student s  LEFT JOIN has_pet hp ON s.stuid = hp.stuid  WHERE hp.petid IS NULL
SELECT AVG(s.age)  FROM student s  LEFT JOIN has_pet hp ON s.stuid = hp.stuid  WHERE hp.petid IS NULL
SELECT AVG(s.age)  FROM student s  LEFT JOIN has_pet hp ON s.stuid = hp.stuid  WHERE hp.petid IS NULL
SELECT AVG(s.age)  FROM student s  LEFT JOIN has_pet hp ON s.stuid = hp.stuid  WHERE hp.petid IS NULL
SELECT AVG(s.age)  FROM student s  LEFT JOIN has_pet hp ON s.stuid = hp.stuid  WHERE hp.petid IS NULL
SELECT AVG(s.age)  FROM student s  LEFT JOIN has_pet hp ON s.stuid = hp.stuid  WHERE hp.petid IS NULL",SELECT AVG(s.age)  FROM student s  LEFT JOIN has_pet hp ON s.stuid = hp.stuid  WHERE hp.petid IS NULL,0,1.0
610,253,"What are flight numbers of flights arriving at City ""Aberdeen""?",flight_2,medium,"SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  ""Aberdeen""",7,"SELECT flightno FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'
SELECT flightno FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'
SELECT flightno FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'
SELECT flightno FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'
SELECT flightno FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'
SELECT flightno FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'
SELECT flightno FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen'",SELECT flightno FROM flights JOIN airports ON flights.destairport = airports.airportcode WHERE airports.city = 'Aberdeen',True,1.0
611,1013,"For each citizenship, how many singers are from that country?",singer,medium,"SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship",7,"SELECT citizenship, COUNT(*) AS num_singers FROM singer GROUP BY citizenship
SELECT citizenship, COUNT(*) AS num_singers FROM singer GROUP BY citizenship ORDER BY num_singers DESC
SELECT citizenship, COUNT(*) AS num_singers FROM singer GROUP BY citizenship ORDER BY num_singers DESC
SELECT citizenship, COUNT(*) AS num_singers FROM singer GROUP BY citizenship
SELECT citizenship, COUNT(*) AS num_singers FROM singer GROUP BY citizenship ORDER BY num_singers DESC
SELECT citizenship, COUNT(*) AS num_singers FROM singer GROUP BY citizenship
SELECT citizenship, COUNT(*) AS num_singers FROM singer GROUP BY citizenship ORDER BY num_singers DESC","SELECT citizenship, COUNT(*) AS num_singers FROM singer GROUP BY citizenship ORDER BY num_singers DESC",0,1.0
612,416,Find the average number of staff working for the museums that were open before 2009.,museum_visit,easy,SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009,7,"SELECT AVG(num_of_staff) FROM museum WHERE open_year < 2009
SELECT AVG(num_of_staff) FROM museum WHERE open_year < 2009
SELECT AVG(num_of_staff) FROM museum WHERE open_year < 2009
SELECT AVG(num_of_staff) FROM museum WHERE open_year < 2009
SELECT AVG(num_of_staff) FROM museum WHERE open_year < 2009
SELECT AVG(num_of_staff) FROM museum WHERE open_year < 2009
SELECT AVG(num_of_staff) FROM museum WHERE open_year < 2009",SELECT AVG(num_of_staff) FROM museum WHERE open_year < 2009,True,1.0
613,479,Find the total number of tours for each ranking date.,wta_1,medium,"SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date",7,"SELECT ranking_date, SUM(tours) AS total_tours FROM rankings GROUP BY ranking_date
SELECT ranking_date, SUM(tours) AS total_tours FROM rankings GROUP BY ranking_date
SELECT ranking_date, SUM(tours) AS total_tours FROM rankings GROUP BY ranking_date
SELECT ranking_date, SUM(tours) AS total_tours FROM rankings GROUP BY ranking_date
SELECT ranking_date, SUM(tours) AS total_tours FROM rankings GROUP BY ranking_date
SELECT ranking_date, SUM(tours) AS total_tours FROM rankings GROUP BY ranking_date
SELECT ranking_date, SUM(tours) AS total_tours FROM rankings GROUP BY ranking_date","SELECT ranking_date, SUM(tours) AS total_tours FROM rankings GROUP BY ranking_date",0,0.0
614,753,Which regions speak Dutch or English?,world_1,hard,"SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  ""English"" OR T2.Language  =  ""Dutch""",7,"SELECT DISTINCT region FROM country WHERE language = 'Dutch' OR language = 'English'
SELECT DISTINCT region FROM country WHERE language = 'Dutch' OR language = 'English'
SELECT DISTINCT region FROM country WHERE language = 'Dutch' OR language = 'English'
SELECT DISTINCT region FROM country WHERE language = 'Dutch' OR language = 'English'
SELECT DISTINCT region FROM country WHERE language = 'Dutch' OR language = 'English'
SELECT DISTINCT region FROM country WHERE language = 'Dutch' OR language = 'English'
SELECT DISTINCT region FROM country WHERE language = 'Dutch' OR language = 'English'",SELECT DISTINCT region FROM country WHERE language = 'Dutch' OR language = 'English',0,0.0
615,974,How many dogs have an age below the average?,dog_kennels,hard,SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs ),7,"SELECT COUNT(*) FROM dogs WHERE age < (SELECT AVG(age) FROM dogs)
SELECT COUNT(*) FROM dogs WHERE age < (SELECT AVG(age) FROM dogs)
SELECT COUNT(*) FROM dogs WHERE age < (SELECT AVG(age) FROM dogs)
SELECT COUNT(*) FROM dogs WHERE age < (SELECT AVG(age) FROM dogs)
SELECT COUNT(*) FROM dogs WHERE age < (SELECT AVG(age) FROM dogs)
SELECT COUNT(*) FROM dogs WHERE age < (SELECT AVG(age) FROM dogs)
SELECT COUNT(*) FROM dogs WHERE age < (SELECT AVG(age) FROM dogs)",SELECT COUNT(*) FROM dogs WHERE age < (SELECT AVG(age) FROM dogs),True,1.0
616,937,Tell me the owner id and last name of the owner who spent the most on treatments of his or her dogs.,dog_kennels,extra,"SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT o.owner_id, o.last_name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id JOIN treatments t ON d.dog_id = t.dog_id GROUP BY o.owner_id ORDER BY SUM(t.cost_of_treatment) DESC LIMIT 1
SELECT o.owner_id, o.last_name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id JOIN treatments t ON d.dog_id = t.dog_id GROUP BY o.owner_id ORDER BY SUM(t.cost_of_treatment) DESC LIMIT 1
SELECT o.owner_id, o.last_name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id JOIN treatments t ON d.dog_id = t.dog_id GROUP BY o.owner_id ORDER BY SUM(t.cost_of_treatment) DESC LIMIT 1
SELECT o.owner_id, o.last_name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id JOIN treatments t ON d.dog_id = t.dog_id GROUP BY o.owner_id ORDER BY SUM(t.cost_of_treatment) DESC LIMIT 1
SELECT o.owner_id, o.last_name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id JOIN treatments t ON d.dog_id = t.dog_id GROUP BY o.owner_id ORDER BY SUM(t.cost_of_treatment) DESC LIMIT 1
SELECT o.owner_id, o.last_name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id JOIN treatments t ON d.dog_id = t.dog_id GROUP BY o.owner_id ORDER BY SUM(t.cost_of_treatment) DESC LIMIT 1
SELECT o.owner_id, o.last_name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id JOIN treatments t ON d.dog_id = t.dog_id GROUP BY o.owner_id ORDER BY SUM(t.cost_of_treatment) DESC LIMIT 1","SELECT o.owner_id, o.last_name FROM owners o JOIN dogs d ON o.owner_id = d.owner_id JOIN treatments t ON d.dog_id = t.dog_id GROUP BY o.owner_id ORDER BY SUM(t.cost_of_treatment) DESC LIMIT 1",0,0.0
617,26,Which year has most number of concerts?,concert_singer,hard,SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1,7,"SELECT year, COUNT(*) AS num_concerts FROM concert GROUP BY year ORDER BY num_concerts DESC LIMIT 1
SELECT year, COUNT(*) AS num_concerts FROM concert GROUP BY year ORDER BY num_concerts DESC LIMIT 1
SELECT year, COUNT(*) AS num_concerts FROM concert GROUP BY year ORDER BY num_concerts DESC LIMIT 1
SELECT year, COUNT(*) AS num_concerts FROM concert GROUP BY year ORDER BY num_concerts DESC LIMIT 1
SELECT year, COUNT(*) AS num_concerts FROM concert GROUP BY year ORDER BY num_concerts DESC LIMIT 1
SELECT year, COUNT(*) AS num_concerts FROM concert GROUP BY year ORDER BY num_concerts DESC LIMIT 1
SELECT year, COUNT(*) AS num_concerts FROM concert GROUP BY year ORDER BY num_concerts DESC LIMIT 1","SELECT year, COUNT(*) AS num_concerts FROM concert GROUP BY year ORDER BY num_concerts DESC LIMIT 1",0,0.0
618,271,find the minimum and maximum number of products of all stores.,employee_hire_evaluation,medium,"SELECT min(Number_products) ,  max(Number_products) FROM shop",7,"SELECT MIN(number_products) AS min_products, MAX(number_products) AS max_products FROM shop
SELECT MIN(number_products) AS min_products, MAX(number_products) AS max_products FROM shop
SELECT MIN(number_products) AS min_products, MAX(number_products) AS max_products FROM shop
SELECT MIN(number_products) AS min_products, MAX(number_products) AS max_products FROM shop
SELECT MIN(number_products) AS min_products, MAX(number_products) AS max_products FROM shop
SELECT MIN(number_products) AS min_products, MAX(number_products) AS max_products FROM shop
SELECT MIN(number_products) AS min_products, MAX(number_products) AS max_products FROM shop","SELECT MIN(number_products) AS min_products, MAX(number_products) AS max_products FROM shop",0,1.0
619,407,Show names of teachers that teach at least two courses.,course_teach,medium,SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2,7,"SELECT teacher.name FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id GROUP BY teacher.teacher_id HAVING COUNT(course_arrange.course_id) >= 2
SELECT t.name FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id GROUP BY t.teacher_id HAVING COUNT(ca.course_id) >= 2
SELECT t.name FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id GROUP BY t.teacher_id HAVING COUNT(ca.course_id) >= 2
SELECT t.name FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id GROUP BY t.teacher_id HAVING COUNT(ca.course_id) >= 2
SELECT teacher.name FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id GROUP BY teacher.teacher_id HAVING COUNT(course_arrange.course_id) >= 2
SELECT t.name FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id GROUP BY t.teacher_id HAVING COUNT(ca.course_id) >= 2
SELECT t.name FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id GROUP BY t.teacher_id HAVING COUNT(ca.course_id) >= 2",SELECT t.name FROM teacher t JOIN course_arrange ca ON t.teacher_id = ca.teacher_id GROUP BY t.teacher_id HAVING COUNT(ca.course_id) >= 2,0,1.0
620,575,Find the semester when both Master students and Bachelor students got enrolled in.,student_transcripts_tracking,extra,SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor',7,"SELECT s.semester_id, s.semester_name FROM semesters s JOIN student_enrolment se ON s.semester_id = se.semester_id JOIN students st ON se.student_id = st.student_id JOIN degree_programs dp ON se.degree_program_id = dp.degree_program_id WHERE dp.
SELECT semester_id FROM semesters s JOIN student_enrolment se ON s.semester_id = se.semester_id JOIN students st ON se.student_id = st.student_id WHERE st.student_id IN (     SELECT student_id FROM students WHERE degree_program_id IN (         SELECT degree_program_id FROM degree_programs WHERE department
SELECT s.semester_id, s.semester_name FROM semesters s JOIN student_enrolment se ON s.semester_id = se.semester_id JOIN students st ON se.student_id = st.student_id JOIN degree_programs dp ON se.degree_program_id = dp.degree_program_id WHERE dp.
SELECT s.semester_id, s.semester_name FROM semesters s JOIN student_enrolment se ON s.semester_id = se.semester_id JOIN students st ON se.student_id = st.student_id JOIN degree_programs dp ON se.degree_program_id = dp.degree_program_id WHERE dp.
SELECT s.semester_id, s.semester_name FROM semesters s JOIN student_enrolment se ON s.semester_id = se.semester_id JOIN students st ON se.student_id = st.student_id JOIN degree_programs dp ON se.degree_program_id = dp.degree_program_id WHERE dp.
SELECT s.semester_id, s.semester_name FROM semesters s JOIN student_enrolment se ON s.semester_id = se.semester_id JOIN students st ON se.student_id = st.student_id JOIN degree_programs dp ON se.degree_program_id = dp.degree_program_id WHERE dp.
SELECT semester_id FROM semesters s JOIN student_enrolment se ON s.semester_id = se.semester_id JOIN students st ON se.student_id = st.student_id WHERE st.student_id IN (     SELECT student_id FROM students WHERE degree_program_id IN (         SELECT degree_program_id FROM degree_programs WHERE department","SELECT s.semester_id, s.semester_name FROM semesters s JOIN student_enrolment se ON s.semester_id = se.semester_id JOIN students st ON se.student_id = st.student_id JOIN degree_programs dp ON se.degree_program_id = dp.degree_program_id WHERE dp.",0,0.0
621,256,How many flights land in Aberdeen or Abilene?,flight_2,hard,"SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  ""Aberdeen"" OR T2.city  =  ""Abilene""",7,"SELECT COUNT(*) FROM flights WHERE destairport IN ('ABZ', 'ABI')
SELECT COUNT(*) FROM flights WHERE destairport IN ('ABZ', 'ABI')
SELECT COUNT(*) FROM flights WHERE destairport IN ('ABZ', 'ABI')
SELECT COUNT(*) FROM flights WHERE destairport IN ('ABZ', 'ABI')
SELECT COUNT(*) FROM flights WHERE destairport IN ('ABZ', 'ABI')
SELECT COUNT(*) FROM flights WHERE destairport IN ('ABZ', 'ABI')
SELECT COUNT(*) FROM flights WHERE destairport IN ('ABZ', 'ABI')","SELECT COUNT(*) FROM flights WHERE destairport IN ('ABZ', 'ABI')",0,1.0
622,901,What are the names of high schoolers who both have friends and are liked?,network_1,hard,SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id,7,"SELECT DISTINCT hs.name FROM highschooler hs JOIN friend f ON hs.id = f.student_id JOIN likes l ON hs.id = l.student_id
SELECT DISTINCT hs.name FROM highschooler hs JOIN friend f ON hs.id = f.student_id JOIN likes l ON hs.id = l.student_id
SELECT DISTINCT hs.name FROM highschooler hs JOIN friend f ON hs.id = f.student_id JOIN likes l ON hs.id = l.student_id
SELECT DISTINCT hs.name FROM highschooler hs JOIN friend f ON hs.id = f.student_id JOIN likes l ON hs.id = l.student_id
SELECT DISTINCT hs.name FROM highschooler hs JOIN friend f ON hs.id = f.student_id JOIN likes l ON hs.id = l.student_id
SELECT DISTINCT hs.name FROM highschooler hs JOIN friend f ON hs.id = f.student_id JOIN likes l ON hs.id = l.student_id
SELECT DISTINCT hs.name FROM highschooler hs JOIN friend f ON hs.id = f.student_id JOIN likes l ON hs.id = l.student_id",SELECT DISTINCT hs.name FROM highschooler hs JOIN friend f ON hs.id = f.student_id JOIN likes l ON hs.id = l.student_id,0,0.0
623,132,What is the largest amount of horsepower for the models with 3 cylinders and what make is it?,car_1,extra,"SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;",7,"SELECT MAX(horsepower) AS max_horsepower, car_makers.maker FROM cars_data JOIN car_makers ON cars_data.id = car_makers.id WHERE cars_data.cylinders = 3 GROUP BY car_makers.maker
SELECT MAX(horsepower) AS max_horsepower, car_makers.maker FROM cars_data JOIN car_makers ON cars_data.id = car_makers.id WHERE cars_data.cylinders = 3 GROUP BY car_makers.maker
SELECT MAX(horsepower) AS max_horsepower, car_makers.maker FROM cars_data JOIN car_makers ON cars_data.id = car_makers.id WHERE cars_data.cylinders = 3 GROUP BY car_makers.maker
SELECT MAX(horsepower) AS max_horsepower, car_makers.maker FROM cars_data JOIN car_makers ON cars_data.id = car_makers.id WHERE cars_data.cylinders = 3 GROUP BY car_makers.maker
SELECT MAX(horsepower) AS max_horsepower, car_makers.maker FROM cars_data JOIN car_makers ON cars_data.id = car_makers.id WHERE cars_data.cylinders = 3 GROUP BY car_makers.maker
SELECT MAX(horsepower) AS max_horsepower, car_makers.maker FROM cars_data JOIN car_makers ON cars_data.id = car_makers.id WHERE cars_data.cylinders = 3 GROUP BY car_makers.maker
SELECT maker, MAX(horsepower) AS max_horsepower FROM cars_data JOIN model_list ON cars_data.id = model_list.modelid JOIN car_makers ON model_list.maker = car_makers.id WHERE cylinders = 3 GROUP BY maker","SELECT MAX(horsepower) AS max_horsepower, car_makers.maker FROM cars_data JOIN car_makers ON cars_data.id = car_makers.id WHERE cars_data.cylinders = 3 GROUP BY car_makers.maker",0,0.0
624,592,What is the name and directors of all the cartoons that are ordered by air date?,tvshow,medium,"SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date",7,"SELECT tv_series.series_name, cartoon.directed_by FROM cartoon JOIN tv_series ON cartoon.id = tv_series.id ORDER BY tv_series.air_date
SELECT tv_series.series_name, cartoon.directed_by FROM cartoon JOIN tv_series ON cartoon.id = tv_series.channel WHERE cartoon.content = 'cartoon' ORDER BY tv_series.air_date
SELECT tv_series.series_name, cartoon.directed_by FROM cartoon JOIN tv_series ON cartoon.id = tv_series.channel WHERE cartoon.content = 'cartoon' ORDER BY tv_series.air_date
SELECT tv_series.series_name, cartoon.directed_by FROM cartoon JOIN tv_series ON cartoon.id = tv_series.channel WHERE cartoon.content = 'cartoon' ORDER BY tv_series.air_date
SELECT tv_series.series_name, cartoon.directed_by FROM cartoon JOIN tv_series ON cartoon.id = tv_series.channel WHERE cartoon.content = 'cartoon' ORDER BY tv_series.air_date
SELECT tv_series.series_name, cartoon.directed_by FROM cartoon JOIN tv_series ON cartoon.id = tv_series.channel WHERE cartoon.content = 'cartoon' ORDER BY tv_series.air_date
SELECT tv_series.series_name, cartoon.directed_by FROM cartoon JOIN tv_series ON cartoon.id = tv_series.channel WHERE cartoon.content = 'cartoon' ORDER BY tv_series.air_date","SELECT tv_series.series_name, cartoon.directed_by FROM cartoon JOIN tv_series ON cartoon.id = tv_series.channel WHERE cartoon.content = 'cartoon' ORDER BY tv_series.air_date",0,0.0
625,854,List the names of orchestras that have no performance.,orchestra,hard,SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance),7,"SELECT o.name FROM orchestra o LEFT JOIN performance p ON o.conductor_id = p.conductor_id WHERE p.conductor_id IS NULL
SELECT o.name FROM orchestra o LEFT JOIN performance p ON o.conductor_id = p.conductor_id WHERE p.conductor_id IS NULL
SELECT o.name FROM orchestra o LEFT JOIN performance p ON o.conductor_id = p.conductor_id WHERE p.conductor_id IS NULL
SELECT o.name FROM orchestra o LEFT JOIN performance p ON o.conductor_id = p.conductor_id WHERE p.conductor_id IS NULL
SELECT o.name FROM orchestra o LEFT JOIN performance p ON o.conductor_id = p.conductor_id WHERE p.conductor_id IS NULL
SELECT o.name FROM orchestra o LEFT JOIN performance p ON o.conductor_id = p.conductor_id WHERE p.conductor_id IS NULL
SELECT o.name FROM orchestra o LEFT JOIN performance p ON o.conductor_id = p.conductor_id WHERE p.conductor_id IS NULL",SELECT o.name FROM orchestra o LEFT JOIN performance p ON o.conductor_id = p.conductor_id WHERE p.conductor_id IS NULL,0,0.0
626,979,Tell me the number of dogs that have not received any treatment .,dog_kennels,extra,select count(*) from dogs where dog_id not in ( select dog_id from treatments ),7,"SELECT COUNT(*)  FROM dogs  WHERE NOT EXISTS (     SELECT 1      FROM treatments      WHERE dogs.dog_id = treatments.dog_id )
SELECT COUNT(*)  FROM dogs  WHERE NOT EXISTS (     SELECT 1      FROM treatments      WHERE treatments.dog_id = dogs.dog_id )
SELECT COUNT(*)  FROM dogs  WHERE treatment_id IS NULL
SELECT COUNT(*)  FROM dogs  WHERE treatment_id IS NULL
SELECT COUNT(*)  FROM dogs  WHERE NOT EXISTS (     SELECT 1      FROM treatments      WHERE treatments.dog_id = dogs.dog_id )
SELECT COUNT(*)  FROM dogs  WHERE NOT EXISTS (     SELECT 1      FROM treatments      WHERE treatments.dog_id = dogs.dog_id )
SELECT COUNT(*)  FROM dogs  WHERE NOT EXISTS (     SELECT 1      FROM treatments      WHERE dogs.dog_id = treatments.dog_id )",SELECT COUNT(*)  FROM dogs  WHERE NOT EXISTS (     SELECT 1      FROM treatments      WHERE treatments.dog_id = dogs.dog_id ),0,1.0
627,421,What are the id and name of the museum visited most times?,museum_visit,extra,"SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1",7,"SELECT museum_id, name FROM museum WHERE num_of_staff = (SELECT MAX(num_of_staff) FROM museum)
SELECT museum_id, name FROM museum JOIN visit ON museum.museum_id = visit.museum_id GROUP BY museum_id ORDER BY COUNT(*) DESC LIMIT 1
SELECT museum_id, name FROM museum ORDER BY num_of_staff DESC LIMIT 1
SELECT museum_id, name  FROM museum  WHERE museum_id IN (     SELECT museum_id      FROM visit      GROUP BY museum_id      ORDER BY COUNT(*) DESC      LIMIT 1 )
SELECT museum_id, name FROM museum WHERE num_of_staff = (SELECT MAX(num_of_staff) FROM museum)
SELECT museum_id, name FROM museum WHERE num_of_staff = (SELECT MAX(num_of_staff) FROM museum)
SELECT museum_id, name FROM museum WHERE num_of_staff = (SELECT MAX(num_of_staff) FROM museum)","SELECT museum_id, name FROM museum WHERE num_of_staff = (SELECT MAX(num_of_staff) FROM museum)",0,0.0
628,6,Show the name and the release year of the song by the youngest singer.,concert_singer,medium,"SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1",7,"SELECT s.name, s.song_release_year FROM singer s JOIN singer_in_concert sic ON s.singer_id = sic.singer_id JOIN concert c ON sic.concert_id = c.concert_id WHERE s.age = (SELECT MIN(age) FROM singer) ORDER BY s.age
SELECT s.name, s.song_release_year FROM singer s JOIN singer_in_concert sic ON s.singer_id = sic.singer_id JOIN concert c ON sic.concert_id = c.concert_id WHERE s.age = (SELECT MIN(age) FROM singer) ORDER BY s.age
SELECT s.name, s.song_release_year FROM singer s JOIN singer_in_concert sic ON s.singer_id = sic.singer_id JOIN concert c ON sic.concert_id = c.concert_id WHERE s.age = (SELECT MIN(age) FROM singer) ORDER BY s.age
SELECT s.name, s.song_release_year FROM singer s JOIN singer_in_concert sic ON s.singer_id = sic.singer_id JOIN concert c ON sic.concert_id = c.concert_id WHERE s.age = (SELECT MIN(age) FROM singer) AND c.theme = 'stadium'
SELECT s.name, s.song_release_year FROM singer s JOIN singer_in_concert sic ON s.singer_id = sic.singer_id JOIN concert c ON sic.concert_id = c.concert_id WHERE s.age = (SELECT MIN(age) FROM singer) AND c.theme = 'stadium'
SELECT s.name, s.song_release_year FROM singer s JOIN singer_in_concert sic ON s.singer_id = sic.singer_id JOIN concert c ON sic.concert_id = c.concert_id WHERE s.age = (SELECT MIN(age) FROM singer) AND c.theme = 'stadium'
SELECT s.name, s.song_release_year FROM singer s JOIN singer_in_concert sic ON s.singer_id = sic.singer_id JOIN concert c ON sic.concert_id = c.concert_id WHERE s.age = (SELECT MIN(age) FROM singer) AND c.theme = 'stadium'","SELECT s.name, s.song_release_year FROM singer s JOIN singer_in_concert sic ON s.singer_id = sic.singer_id JOIN concert c ON sic.concert_id = c.concert_id WHERE s.age = (SELECT MIN(age) FROM singer) AND c.theme = 'stadium'",0,0.0
629,991,List each charge type and its amount.,dog_kennels,medium,"SELECT charge_type ,  charge_amount FROM Charges",7,"SELECT charge_type, charge_amount FROM charges
SELECT charge_type, charge_amount FROM charges
SELECT charge_type, charge_amount FROM charges
SELECT charge_type, charge_amount FROM charges
SELECT charge_type, charge_amount FROM charges
SELECT charge_type, charge_amount FROM charges
SELECT charge_type, charge_amount FROM charges","SELECT charge_type, charge_amount FROM charges",True,1.0
630,520,How many different degrees are offered?,student_transcripts_tracking,easy,SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs,7,"SELECT COUNT(DISTINCT degree_summary_name) FROM degree_programs
SELECT COUNT(DISTINCT degree_summary_name) FROM degree_programs
SELECT COUNT(DISTINCT degree_summary_name) FROM degree_programs
SELECT COUNT(DISTINCT degree_summary_name) FROM degree_programs
SELECT COUNT(DISTINCT degree_summary_name) FROM degree_programs
SELECT COUNT(DISTINCT degree_summary_name) FROM degree_programs
SELECT COUNT(DISTINCT degree_summary_name) FROM degree_programs",SELECT COUNT(DISTINCT degree_summary_name) FROM degree_programs,True,1.0
631,255,Find the number of flights landing in the city of Aberdeen or Abilene.,flight_2,hard,"SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  ""Aberdeen"" OR T2.city  =  ""Abilene""",7,"SELECT COUNT(*) FROM flights WHERE destairport IN ('ABZ', 'ABI')
SELECT COUNT(*) FROM flights WHERE destairport IN ('ABZ', 'ABI')
SELECT COUNT(*) FROM flights WHERE destairport IN ('ABZ', 'ABI')
SELECT COUNT(*) FROM flights WHERE destairport IN ('ABZ', 'ABI')
SELECT COUNT(*) FROM flights WHERE destairport IN ('ABZ', 'ABI')
SELECT COUNT(*) FROM flights WHERE destairport IN ('ABZ', 'ABI')
SELECT COUNT(*) FROM flights WHERE destairport IN ('ABZ', 'ABI')","SELECT COUNT(*) FROM flights WHERE destairport IN ('ABZ', 'ABI')",0,1.0
632,604,How many TV Channels use the English language?,tvshow,easy,"SELECT count(*) FROM TV_Channel WHERE LANGUAGE = ""English"";",7,"SELECT COUNT(*) FROM tv_channel WHERE language = 'English'
SELECT COUNT(*) FROM tv_channel WHERE language = 'English'
SELECT COUNT(*) FROM tv_channel WHERE language = 'English'
SELECT COUNT(*) FROM tv_channel WHERE language = 'English'
SELECT COUNT(*) FROM tv_channel WHERE language = 'English'
SELECT COUNT(*) FROM tv_channel WHERE language = 'English'
SELECT COUNT(*) FROM tv_channel WHERE language = 'English'",SELECT COUNT(*) FROM tv_channel WHERE language = 'English',True,1.0
633,311,What is the id and type code for the template used by the most documents?,cre_Doc_Template_Mgt,extra,"SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1",7,"SELECT template_id, template_type_code FROM templates ORDER BY COUNT(*) DESC LIMIT 1
SELECT template_id, template_type_code FROM templates ORDER BY (SELECT COUNT(*) FROM documents WHERE templates.template_id = documents.template_id) DESC LIMIT 1
SELECT template_id, template_type_code  FROM templates  WHERE template_id IN (     SELECT template_id      FROM documents      GROUP BY template_id      ORDER BY COUNT(*) DESC      LIMIT 1 )
SELECT template_id, template_type_code FROM templates ORDER BY (SELECT COUNT(*) FROM documents WHERE templates.template_id = documents.template_id) DESC LIMIT 1
SELECT template_id, template_type_code  FROM templates  WHERE template_id IN (     SELECT template_id      FROM documents      GROUP BY template_id      ORDER BY COUNT(*) DESC      LIMIT 1 )
SELECT template_id, template_type_code FROM templates ORDER BY (SELECT COUNT(*) FROM documents WHERE documents.template_id = templates.template_id) DESC LIMIT 1
SELECT template_id, template_type_code FROM templates ORDER BY (SELECT COUNT(*) FROM documents WHERE templates.template_id = documents.template_id) DESC LIMIT 1","SELECT template_id, template_type_code FROM templates ORDER BY (SELECT COUNT(*) FROM documents WHERE templates.template_id = documents.template_id) DESC LIMIT 1",0,0.0
634,503,How many battles did not lose any ship with tonnage '225'?,battle_death,extra,SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );,7,"SELECT COUNT(*) FROM battle WHERE id NOT IN (SELECT battle_id FROM ship WHERE tonnage = '225' AND disposition_of_ship = 'lost')
SELECT COUNT(*) FROM battle WHERE id NOT IN (SELECT battle_id FROM ship WHERE tonnage = '225' AND disposition_of_ship = 'lost')
SELECT COUNT(*) FROM battle WHERE id NOT IN (SELECT battle_id FROM ship WHERE tonnage = '225' AND disposition_of_ship = 'lost')
SELECT COUNT(*) FROM battle WHERE id NOT IN (SELECT battle_id FROM ship WHERE tonnage = '225' AND disposition_of_ship = 'lost')
SELECT COUNT(*) FROM battle WHERE id NOT IN (SELECT battle_id FROM ship WHERE tonnage = '225' AND disposition_of_ship = 'lost')
SELECT COUNT(*) FROM battle WHERE id NOT IN (SELECT battle_id FROM ship WHERE tonnage = '225' AND disposition_of_ship = 'lost')
SELECT COUNT(*) FROM battle WHERE id NOT IN (SELECT battle_id FROM ship WHERE tonnage = '225' AND disposition_of_ship = 'lost')",SELECT COUNT(*) FROM battle WHERE id NOT IN (SELECT battle_id FROM ship WHERE tonnage = '225' AND disposition_of_ship = 'lost'),0,0.0
635,250,Give the flight numbers of flights landing at APG.,flight_2,easy,"SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  ""APG""",7,"SELECT flightno FROM flights WHERE destairport IN (SELECT airportcode FROM airports WHERE countryabbrev = 'APG')
SELECT flightno FROM flights WHERE destairport IN (SELECT airportcode FROM airports WHERE countryabbrev = 'APG')
SELECT flightno FROM flights WHERE destairport IN (SELECT airportcode FROM airports WHERE countryabbrev = 'APG')
SELECT flightno FROM flights WHERE destairport IN (SELECT airportcode FROM airports WHERE countryabbrev = 'APG')
SELECT flightno FROM flights WHERE destairport IN (SELECT airportcode FROM airports WHERE countryabbrev = 'APG')
SELECT flightno FROM flights WHERE destairport IN (SELECT airportcode FROM airports WHERE countryabbrev = 'APG')
SELECT flightno FROM flights WHERE destairport IN (SELECT airportcode FROM airports WHERE countryabbrev = 'APG')",SELECT flightno FROM flights WHERE destairport IN (SELECT airportcode FROM airports WHERE countryabbrev = 'APG'),0,1.0
636,16,What is the maximum capacity and the average of all stadiums ?,concert_singer,medium,"select max(capacity), average from stadium",7,"SELECT MAX(capacity) AS max_capacity, AVG(capacity) AS avg_capacity FROM stadium
SELECT MAX(capacity) AS max_capacity, AVG(capacity) AS avg_capacity FROM stadium
SELECT MAX(capacity) AS max_capacity, AVG(capacity) AS average_capacity FROM stadium
SELECT MAX(capacity) AS max_capacity, AVG(capacity) AS avg_capacity FROM stadium
SELECT MAX(capacity) AS max_capacity, AVG(capacity) AS average_capacity FROM stadium
SELECT MAX(capacity) AS max_capacity, AVG(capacity) AS average_capacity FROM stadium
SELECT MAX(capacity) AS max_capacity, AVG(capacity) AS average_capacity FROM stadium","SELECT MAX(capacity) AS max_capacity, AVG(capacity) AS average_capacity FROM stadium",0,0.0
637,875,Count the number of high schoolers in grades 9 or 10.,network_1,medium,SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10,7,"SELECT COUNT(*)  FROM highschooler  WHERE grade IN (9, 10)
SELECT COUNT(*)  FROM highschooler  WHERE grade IN (9, 10)
SELECT COUNT(*)  FROM highschooler  WHERE grade IN (9, 10)
SELECT COUNT(*)  FROM highschooler  WHERE grade IN (9, 10)
SELECT COUNT(*)  FROM highschooler  WHERE grade IN (9, 10)
SELECT COUNT(*)  FROM highschooler  WHERE grade IN (9, 10)
SELECT COUNT(*)  FROM highschooler  WHERE grade IN (9, 10)","SELECT COUNT(*)  FROM highschooler  WHERE grade IN (9, 10)",0,1.0
638,313,Show ids for all templates that are used by more than one document.,cre_Doc_Template_Mgt,easy,SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1,7,"SELECT template_id  FROM templates  WHERE template_type_code IN (     SELECT template_type_code      FROM templates      GROUP BY template_type_code      HAVING COUNT(*) > 1 )  AND template_id IN (     SELECT template_id      FROM documents      GROUP BY template_id      HAVING COUNT(*) > 0 )
SELECT template_id FROM templates GROUP BY template_id HAVING COUNT(document_id) > 1
SELECT template_id  FROM templates  WHERE template_type_code IN (     SELECT template_type_code      FROM templates      GROUP BY template_type_code      HAVING COUNT(*) > 1 )  AND template_id IN (     SELECT template_id      FROM documents      GROUP BY template_id      HAVING COUNT(*) > 0 )
SELECT template_id  FROM templates  WHERE template_type_code IN (     SELECT template_type_code      FROM templates      GROUP BY template_type_code      HAVING COUNT(*) > 1 ) 
SELECT template_id FROM documents JOIN ref_template_types ON documents.template_id = ref_template_types.template_type_code GROUP BY template_id HAVING COUNT(document_id) > 1
SELECT template_id FROM templates JOIN documents ON templates.template_id = documents.template_id GROUP BY template_id HAVING COUNT(documents.document_id) > 1
SELECT template_id  FROM templates  WHERE template_type_code IN (     SELECT template_type_code      FROM templates      GROUP BY template_type_code      HAVING COUNT(*) > 1 ) ",SELECT template_id  FROM templates  WHERE template_type_code IN (     SELECT template_type_code      FROM templates      GROUP BY template_type_code      HAVING COUNT(*) > 1 )  AND template_id IN (     SELECT template_id      FROM documents      GROUP BY template_id      HAVING COUNT(*) > 0 ),0,0.0
639,422,What is the name of the museum that had no visitor yet?,museum_visit,hard,SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit),7,"SELECT name FROM museum WHERE museum_id NOT IN (SELECT museum_id FROM visit)
SELECT name FROM museum WHERE museum_id NOT IN (SELECT museum_id FROM visit)
SELECT name FROM museum WHERE museum_id NOT IN (SELECT museum_id FROM visit)
SELECT name FROM museum WHERE museum_id NOT IN (SELECT museum_id FROM visit)
SELECT name FROM museum WHERE museum_id NOT IN (SELECT museum_id FROM visit)
SELECT name FROM museum WHERE museum_id NOT IN (SELECT museum_id FROM visit)
SELECT name FROM museum WHERE museum_id NOT IN (SELECT museum_id FROM visit)",SELECT name FROM museum WHERE museum_id NOT IN (SELECT museum_id FROM visit),True,1.0
