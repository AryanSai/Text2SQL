Question,Difficulty,Ground Truth SQL,Basic Predicted SQL,Advanced Predicted SQL,EX Basic,EX Advanced
"Consider the average difference between K-12 enrollment and 15-17 enrollment of schools that are locally funded, list the names and DOC type of schools which has a difference above this average.",challenging,"SELECT T2.School, T2.DOC FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.FundingType = 'Locally funded' AND (T1.`Enrollment (K-12)` - T1.`Enrollment (Ages 5-17)`) > (SELECT AVG(T3.`Enrollment (K-12)` - T3.`Enrollment (Ages 5-17)`) FROM frpm AS T3 INNER JOIN schools AS T4 ON T3.CDSCode = T4.CDSCode WHERE T4.FundingType = 'Locally funded')","SELECT schools.school, schools.doc FROM schools JOIN frpm ON schools.cdscode = frpm.cdscode WHERE schools.fundingtype = 'Local' AND (frpm.enrollment (k-12) - frpm.enrollment (ages 5-17)) > (   SELECT AVG(frpm.enrollment (k-12) - frpm.enrollment (ages 5-17))   FROM frpm   JOIN schools ON frpm.cdscode = schools.cdscode   WHERE schools.fundingtype = 'Local' ) ORDER BY schools.school","SELECT T2.School, T2.DOC FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.FundingType = 'Locally funded' AND (T1.`Enrollment (K-12)` - T1.`Enrollment (Ages 5-17)`) > (SELECT AVG(T3.`Enrollment (K-12)` - T3.`Enrollment (Ages 5-17)`) FROM frpm AS T3 INNER JOIN schools AS T4 ON T3.CDSCode = T4.CDSCode WHERE T4.FundingType = 'Locally funded')",0,1
Under whose administration is the school with the highest number of students scoring 1500 or more on the SAT? Indicate their full names.,challenging,"SELECT T2.AdmFName1, T2.AdmLName1, T2.AdmFName2, T2.AdmLName2, T2.AdmFName3, T2.AdmLName3 FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.NumGE1500 DESC LIMIT 1",NULL,"SELECT T2.AdmFName1, T2.AdmLName1, T2.AdmFName2, T2.AdmLName2, T2.AdmFName3, T2.AdmLName3 FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode INNER JOIN satscores AS T3 ON T1.CDSCode = T3.CDS WHERE T3.NumGE1500 >= 1500 ORDER BY T1.`Enrollment (K-12)` DESC LIMIT 1",0,0
What is the total number of non-chartered schools in the county of Los Angeles with a percent (%) of eligible free meals for grades 1 through 12 that is less than 0.18%?,challenging,SELECT COUNT(T2.School) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'Los Angeles' AND T2.Charter = 0 AND CAST(T1.`Free Meal Count (K-12)` AS REAL) * 100 / T1.`Enrollment (K-12)` < 0.18,SELECT COUNT(*) FROM schools WHERE county = 'Los Angeles' AND percent_eligible_free_meals_k_12 < 0.18 AND charter = 0,SELECT COUNT(T2.School) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'Los Angeles' AND T2.Charter = 0 AND CAST(T1.`Free Meal Count (K-12)` AS REAL) * 100 / T1.`Enrollment (K-12)` < 0.18,0,1
"Of the schools that offers a magnet program serving a grade span of Kindergarten to 8th grade, how many offers Multiple Provision Types? List the number of cities that offers a Kindergarten to 8th grade span and indicate how many schools are there serving such grade span for each city.",challenging,"SELECT T2.City, COUNT(T2.CDSCode) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.Magnet = 1 AND T2.GSoffered = 'K-8' AND T1.`NSLP Provision Status` = 'Multiple Provision Types' GROUP BY T2.City","SELECT COUNT(DISTINCT city) AS num_cities,        SUM(CASE WHEN gsserved LIKE '%K%' AND gsserved LIKE '%8%' THEN 1 ELSE 0 END) AS num_schools FROM schools WHERE Magnet = 1 AND gsserved LIKE '%K%' AND gsserved LIKE '%8%' GROUP BY city","SELECT T2.City, COUNT(T2.School) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.Magnet = 1 AND T2.GSServed = 'K-8' AND T1.`NSLP Provision Status` = 'Multiple Provision Types' GROUP BY T2.City",0,1
"What are the valid e-mail addresses of the administrator of the school located in the San Bernardino county, City of San Bernardino City Unified that opened between 1/1/2009 to 12/31/2010 whose school types are public Intermediate/Middle Schools and Unified Schools?",challenging,"SELECT T2.AdmEmail1, T2.AdmEmail2 FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'San Bernardino' AND T2.City = 'San Bernardino' AND T2.DOC = 54 AND strftime('%Y', T2.OpenDate) BETWEEN '2009' AND '2010' AND T2.SOC = 62","SELECT admfname1, admlname1, admemail1, admfname2, admlname2, admemail2, admfname3, admlname3, admemail3 FROM schools WHERE county = 'San Bernardino' AND city = 'City of San Bernardino City Unified' AND opendate BETWEEN '2009-01-01' AND '2010-12-31' AND (soc = '62' OR doc = '54') AND admfname1 IS NOT NULL AND admlname1 IS NOT NULL AND admemail1 IS NOT NULL AND admfname2 IS NOT NULL AND admlname2 IS NOT NULL AND admemail2 IS NOT NULL AND admfname3 IS NOT NULL AND admlname3 IS NOT NULL AND admemail3 IS NOT NULL","SELECT T2.AdmEmail1, T2.AdmEmail2 FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'San Bernardino' AND T2.City = 'San Bernardino' AND T2.DOC = 54 AND strftime('%Y', T2.OpenDate) BETWEEN '2009' AND '2010' AND T2.SOC = 62",0,1
"List out the account numbers of female clients who are oldest and has lowest average salary, calculate the gap between this lowest average salary with the highest average salary?",challenging,"SELECT T1.account_id , ( SELECT MAX(A11) - MIN(A11) FROM district ) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T1.account_id = T3.account_id INNER JOIN client AS T4 ON T3.client_id = T4.client_id WHERE T2.district_id = ( SELECT district_id FROM client WHERE gender = 'F' ORDER BY birth_date ASC LIMIT 1 ) ORDER BY T2.A11 DESC LIMIT 1",SELECT account_id FROM account WHERE client_id IN (   SELECT client_id   FROM client   WHERE gender = 'F' ) AND client_id IN (   SELECT client_id   FROM disp   WHERE type = 'OWNER' ) AND client_id IN (   SELECT client_id   FROM district   WHERE a11 = (     SELECT MIN(a11)     FROM district   ) ) AND client_id IN (   SELECT client_id   FROM district   WHERE a11 = (     SELECT MAX(a11)     FROM district   ) ) AND client_id IN (   SELECT client_id   FROM client   WHERE birth_date = (     SELECT MIN(birth_date)     FROM client   ) ) AND client_id IN (   SELECT client_id   FROM client   WHERE birth_date = (     SELECT MAX(birth_date)     FROM client   ) ) AND client_id IN (   SELECT client_id   FROM disp   WHERE type = 'OWNER' ) AND client_id IN (   SELECT client_id   FROM disp   WHERE type = 'OWNER' ) AND client_id IN (   SELECT client_id   FROM disp   WHERE type = 'OWNER' ) AND client_id IN (   SELECT client_id   FROM disp   WHERE type = 'OWNER' ) AND client_id IN (   SELECT client_id   FROM disp   WHERE type = 'OWNER' ) AND client_id IN (   SELECT client_id   FROM disp   WHERE type = 'OWNER' ) AND client_id IN (   SELECT client_id   FROM disp   WHERE type = 'OWNER' ) AND client_id IN (   SELECT client_id   FROM disp   WHERE type = 'OWNER' ) AND client_id IN (   SELECT client_id   FROM disp   WHERE type = 'OWNER' ) AND client_id IN (   SELECT client_id   FROM disp   WHERE type = 'OWNER' ) AND client_id IN (   SELECT client_id   FROM disp   WHERE type = 'OWNER' ) AND client_id IN (   SELECT client_id   FROM disp   WHERE type = 'OWNER' ) AND client_id IN (   SELECT client_id   FROM disp   WHERE type = 'OWNER' ) AND client_id IN (   SELECT client_id   ,"SELECT T1.account_id, T2.a11, T2.a11 - (SELECT MAX(T3.a11) FROM district AS T3) AS Gap FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' AND T1.birth_date = (SELECT MIN(T4.birth_date) FROM client AS T4) ORDER BY T2.a11 ASC",0,0
"For the branch which located in the south Bohemia with biggest number of inhabitants, what is the percentage of the male clients?",challenging,SELECT CAST(SUM(T1.gender = 'M') AS REAL) * 100 / COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A3 = 'south Bohemia' GROUP BY T2.A4 ORDER BY T2.A4 DESC LIMIT 1,NULL,"SELECT DIVIDE(COUNT(T2.client_id), COUNT(T1.client_id)) * 100 FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.a3 = 'South Bohemia' AND T2.a4 = (SELECT MAX(T3.a4) FROM district AS T3 WHERE T3.a3 = 'South Bohemia')",0,0
"For the client whose loan was approved first in 1993/7/5, what is the increase rate of his/her account balance from 1993/3/22 to 1998/12/27?",challenging,"SELECT CAST((SUM(IIF(T3.date = '1998-12-27', T3.balance, 0)) - SUM(IIF(T3.date = '1993-03-22', T3.balance, 0))) AS REAL) * 100 / SUM(IIF(T3.date = '1993-03-22', T3.balance, 0)) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN trans AS T3 ON T3.account_id = T2.account_id WHERE T1.date = '1993-07-05'",SELECT (     (         (             SELECT balance             FROM trans             WHERE account_id = (                     SELECT account_id                     FROM loan                     WHERE status = 'A'                         AND date = '1993-07-05'                     LIMIT 1                 )                 AND date = '1993-03-22'         ) - (             SELECT balance             FROM trans             WHERE account_id = (                     SELECT account_id                     FROM loan                     WHERE status = 'A'                         AND date = '1993-07-05'                     LIMIT 1                 )                 AND date = '1998-12-27'         )     ) / (         SELECT balance         FROM trans         WHERE account_id = (                 SELECT account_id                 FROM loan                 WHERE status = 'A'                     AND date = '1993-07-05'                 LIMIT 1             )             AND date = '1998-12-27'     ) ) * 100 AS increase_rate,SELECT (T1.balance - T2.balance) / T2.balance * 100 FROM trans AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T1.date = '1993-07-05' AND T2.date = '1993-03-22' AND T1.account_id = (SELECT T3.account_id FROM loan AS T3 WHERE T3.status = 'A' AND T3.date = '1993-07-05' ORDER BY T3.date LIMIT 1),0,0
"For loans contracts which are still running where client are in debt, list the district of the and the state the percentage unemployment rate increment from year 1995 to 1996.",challenging,SELECT CAST((T3.A13 - T3.A12) AS REAL) * 100 / T3.A12 FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.status = 'D',"SELECT d.a3 AS district, d.a2 AS state, (d.a13 - d.a12) / d.a12 * 100 AS unemployment_rate_increment FROM loan l JOIN account a ON l.account_id = a.account_id JOIN client c ON a.account_id = c.client_id JOIN disp d ON c.client_id = d.client_id WHERE l.status = 'D' AND l.date >= '1995-01-01' AND l.date < '1996-01-01' ORDER BY unemployment_rate_increment DESC","SELECT T1.A2, T1.A3, (T1.A13 - T1.A12) / T1.A12 * 100 AS UnemploymentIncrementRate FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T2.client_id = T3.client_id INNER JOIN account AS T4 ON T3.account_id = T4.account_id INNER JOIN loan AS T5 ON T4.account_id = T5.account_id WHERE T5.status = 'D'",0,0
"Please list the account types that are not eligible for loans, and the average income of residents in the district where the account is located exceeds $8000 but is no more than $9000.",challenging,SELECT T3.type FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T2.account_id = T3.account_id WHERE T3.type != 'OWNER' AND T1.A11 BETWEEN 8000 AND 9000,SELECT DISTINCT d.type FROM disp d JOIN account a ON d.account_id = a.account_id JOIN district dis ON a.district_id = dis.district_id WHERE d.type != 'OWNER' AND dis.a11 > 8000 AND dis.a11 <= 9000,"SELECT T1.type, T2.a11 FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.type != 'OWNER' AND T2.a11 > 8000 AND T2.a11 <= 9000",1,0
What was the growth rate of the total amount of loans across all accounts for a male client between 1996 and 1997?,challenging,"SELECT CAST((SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1997' THEN T1.amount ELSE 0 END) - SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1996' THEN T1.amount ELSE 0 END)) AS REAL) * 100 / SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1996' THEN T1.amount ELSE 0 END) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN disp AS T3 ON T3.account_id = T2.account_id INNER JOIN client AS T4 ON T4.client_id = T3.client_id WHERE T4.gender = 'M' AND T3.type = 'OWNER'","SELECT (SUM(amount_1997) - SUM(amount_1996)) / SUM(amount_1996) * 100 AS growth_rate FROM (   SELECT     SUM(CASE WHEN strftime('%Y', loan.date) = '1996' THEN loan.amount ELSE 0 END) AS amount_1996,     SUM(CASE WHEN strftime('%Y', loan.date) = '1997' THEN loan.amount ELSE 0 END) AS amount_1997   FROM loan   JOIN disp ON loan.account_id = disp.account_id   JOIN client ON disp.client_id = client.client_id   WHERE client.gender = 'M' ) AS subquery","SELECT (T1.amount_1997 - T1.amount_1996) / T1.amount_1996 * 100 AS growth_rate FROM (SELECT SUM(T2.amount) AS amount_1996, SUM(T3.amount) AS amount_1997 FROM loan AS T1 INNER JOIN client AS T2 ON T1.account_id = T2.account_id INNER JOIN loan AS T3 ON T1.account_id = T3.account_id WHERE T2.gender = 'M' AND strftime('%Y', T1.date) = '1996' AND strftime('%Y', T3.date) = '1997') AS T1",0,0
How often does account number 3 request an account statement to be released? What was the aim of debiting 3539 in total?,challenging,"SELECT T1.frequency, T2.k_symbol FROM account AS T1 INNER JOIN (SELECT account_id, k_symbol, SUM(amount) AS total_amount FROM `order` GROUP BY account_id, k_symbol) AS T2 ON T1.account_id = T2.account_id WHERE T1.account_id = 3 AND T2.total_amount = 3539","SELECT COUNT(*) AS frequency, SUM(amount) AS total_amount FROM trans WHERE account_id = 3 AND type = 'debit' AND operation = 'withdrawal' AND k_symbol = 'account statement'",SELECT COUNT(*) FROM trans WHERE account_id = 3 AND type = 'disposition',0,0
On average how many carcinogenic molecules are single bonded?,challenging,"SELECT AVG(single_bond_count) FROM (SELECT T3.molecule_id, COUNT(T1.bond_type) AS single_bond_count FROM bond AS T1  INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN molecule AS T3 ON T3.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' AND T3.label = '+' GROUP BY T3.molecule_id) AS subquery",SELECT AVG(bond_type = '-') AS average FROM molecule JOIN atom ON molecule.molecule_id = atom.molecule_id JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE molecule.label = '+',SELECT AVG(T1.bond_type = '-') FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id INNER JOIN molecule AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.label = '+',0,0
What elements are in the TR004_8_9 bond atoms?,challenging,SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR004_8_9',SELECT element FROM atom WHERE atom_id IN (SELECT atom_id FROM connected WHERE bond_id = 'TR004_8_9') OR atom_id IN (SELECT atom_id2 FROM connected WHERE bond_id = 'TR004_8_9'),SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR004_8_9',1,1
What elements are in a double type bond?,challenging,SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id WHERE T2.bond_type = '=',SELECT DISTINCT element FROM atom WHERE atom_id IN (   SELECT atom_id   FROM connected   WHERE bond_id IN (     SELECT bond_id     FROM bond     WHERE bond_type = '='   ) ),SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '=',0,0
Which element is the least numerous in non-carcinogenic molecules?,challenging,"SELECT T.element FROM (SELECT T1.element, COUNT(DISTINCT T1.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '-' GROUP BY T1.element ORDER BY COUNT(DISTINCT T1.molecule_id) ASC LIMIT 1) t","SELECT element, COUNT(*) AS count FROM atom WHERE molecule_id IN (   SELECT molecule_id   FROM molecule   WHERE label = '-' ) GROUP BY element ORDER BY count ASC LIMIT 1",SELECT element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '-' GROUP BY element ORDER BY COUNT(element) LIMIT 1,0,1
How many atoms with iodine and with sulfur type elements are there in single bond molecules?,challenging,"SELECT COUNT(DISTINCT CASE WHEN T1.element = 'i' THEN T1.atom_id ELSE NULL END) AS iodine_nums , COUNT(DISTINCT CASE WHEN T1.element = 's' THEN T1.atom_id ELSE NULL END) AS sulfur_nums FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '-'",SELECT COUNT(DISTINCT atom_id) FROM connected WHERE bond_id IN (   SELECT bond_id   FROM bond   WHERE bond_type = '-' ) AND atom_id IN (   SELECT atom_id   FROM atom   WHERE element = 'i' ) AND atom_id2 IN (   SELECT atom_id   FROM atom   WHERE element = 's' ),SELECT COUNT(DISTINCT T1.atom_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.element = 'i' AND T3.bond_type = '-' AND T2.atom_id2 IN (SELECT T4.atom_id FROM atom AS T4 WHERE T4.element = 's'),0,0
What percentage of carcinogenic-type molecules does not contain fluorine?,challenging,SELECT CAST(COUNT(DISTINCT CASE WHEN T1.element <> 'f' THEN T2.molecule_id ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T2.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+',NULL,"SELECT DIVIDE(COUNT(DISTINCT T1.molecule_id) * 100, (SELECT COUNT(DISTINCT T2.molecule_id) FROM molecule AS T2 WHERE T2.label = '+')) FROM molecule AS T1 WHERE T1.label = '+' AND T1.molecule_id NOT IN (SELECT T3.molecule_id FROM atom AS T3 WHERE T3.element = 'f')",0,0
What is the percentage of carcinogenic molecules in triple type bonds?,challenging,SELECT CAST(COUNT(DISTINCT CASE WHEN T2.label = '+' THEN T2.molecule_id ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T2.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type = '#',NULL,"SELECT DIVIDE(SUM(bond_type = '#') * 100, COUNT(bond_id)) as percent FROM molecule INNER JOIN bond ON molecule.molecule_id = bond.molecule_id WHERE label = '+'",0,0
Please list top three elements of the toxicology of the molecule TR000 in alphabetical order.,challenging,SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR000' ORDER BY T.element LIMIT 3,SELECT element FROM atom WHERE molecule_id = 'TR000' ORDER BY element LIMIT 3,SELECT element FROM atom WHERE molecule_id = 'TR000' ORDER BY element LIMIT 3,0,0
What are the elements of the toxicology and label of molecule TR060?,challenging,"SELECT DISTINCT T1.element, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR060'","SELECT atom.element, molecule.label FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN molecule ON connected.molecule_id = molecule.molecule_id WHERE molecule.molecule_id = 'TR060'","SELECT T1.element, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR060'",0,1
Which bond type accounted for the majority of the bonds found in molecule TR010 and state whether or not this molecule is carcinogenic?,challenging,"SELECT T.bond_type FROM ( SELECT T1.bond_type, COUNT(T1.molecule_id) FROM bond AS T1  WHERE T1.molecule_id = 'TR010' GROUP BY T1.bond_type ORDER BY COUNT(T1.molecule_id) DESC LIMIT 1 ) AS T","SELECT bond_type, COUNT(*) AS bond_count FROM bond WHERE molecule_id = 'TR010' GROUP BY bond_type ORDER BY bond_count DESC LIMIT 1","SELECT T1.bond_type, T2.carcinogenic FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR010' AND T1.bond_type = (SELECT MAX(COUNT(bond_type)) FROM bond WHERE molecule_id = 'TR010')",0,0
"List all the elements of the toxicology of the molecule ""TR004"".",challenging,SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR004',SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR004',SELECT atom.element FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR004',0,0
List all the elements of atoms that can not bond with any other atoms.,challenging,SELECT DISTINCT T.element FROM atom AS T WHERE T.element NOT IN ( SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id ),SELECT element FROM atom WHERE atom_id NOT IN (   SELECT atom_id   FROM connected ) ,SELECT element FROM atom WHERE atom_id NOT IN (SELECT atom_id FROM connected),0,0
What are the elements of the atoms of TR144_8_19?,challenging,SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR144_8_19',SELECT element FROM atom WHERE atom_id IN (SELECT atom_id FROM connected WHERE bond_id = 'TR144_8_19'),SELECT element FROM atom WHERE atom_id IN (SELECT atom_id FROM connected WHERE bond_id = 'TR144_8_19'),1,1
List the elements of all the triple bonds.,challenging,SELECT DISTINCT T3.element FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T1.bond_type = '#',SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = '#',SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '#',1,1
What is the composition of element chlorine in percentage among the single bond molecules?,challenging,"SELECT CAST(COUNT(CASE WHEN T.element = 'cl' THEN T.atom_id ELSE NULL END) AS REAL) * 100 / COUNT(T.atom_id) FROM ( SELECT T1.atom_id, T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type = '-' ) AS T",NULL,"SELECT molecule_id, COUNT(atom_id) as count FROM atom WHERE molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = '-') GROUP BY molecule_id HAVING COUNT(atom_id) > 1",0,0
What are the elements for bond id TR001_10_11?,challenging,SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR001_10_11',SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id WHERE connected.bond_id = 'TR001_10_11',SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_10_11',1,1
What are the toxicology elements associated with bond ID TR000_1_2?,challenging,SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR000_1_2',SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id WHERE connected.bond_id = 'TR000_1_2',SELECT element FROM atom WHERE atom_id IN (SELECT atom_id FROM connected WHERE bond_id = 'TR000_1_2'),1,1
Tally the toxicology element of the 4th atom of each molecule that was carcinogenic.,challenging,"SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND SUBSTR(T1.atom_id, -1) = '4' AND LENGTH(T1.atom_id) = 7","SELECT element, COUNT(*) AS count FROM atom WHERE molecule_id IN (   SELECT molecule_id   FROM molecule   WHERE label = '+' ) AND atom_id LIKE '%4' GROUP BY element","SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND substr(T1.atom_id, 7, 1) = '4'",0,0
What is the ratio of Hydrogen elements in molecule ID TR006? List the ratio with its label.,challenging,"WITH SubQuery AS (SELECT DISTINCT T1.atom_id, T1.element, T1.molecule_id, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR006') SELECT CAST(COUNT(CASE WHEN element = 'h' THEN atom_id ELSE NULL END) AS REAL) / (CASE WHEN COUNT(atom_id) = 0 THEN NULL ELSE COUNT(atom_id) END) AS ratio, label FROM SubQuery GROUP BY label","SELECT ratio, label FROM molecule WHERE molecule_id = 'TR006'","SELECT T1.label, T2.ratio FROM molecule AS T1 INNER JOIN (SELECT molecule_id, SUM(element = 'h') / COUNT(element) AS ratio FROM atom GROUP BY molecule_id) AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR006'",0,0
Name chemical elements that form a bond TR001_10_11.,challenging,SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR001_10_11',SELECT element FROM atom WHERE atom_id IN (   SELECT atom_id   FROM connected   WHERE bond_id = 'TR001_10_11' ) UNION SELECT element FROM atom WHERE atom_id IN (   SELECT atom_id2   FROM connected   WHERE bond_id = 'TR001_10_11' ),SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_10_11',1,1
Which toxic element can be found in the molecule TR151?,challenging,SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR151',"SELECT element FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR151') AND element IN ('cl', 'br', 'i', 'f', 'na', 'ca')",SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = 'TR151',0,0
Name the elements that comprise the atoms of bond TR001_2_4.,challenging,SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_2_4',SELECT element FROM atom WHERE atom_id IN (   SELECT atom_id   FROM connected   WHERE bond_id = 'TR001_2_4' ) UNION SELECT element FROM atom WHERE atom_id IN (   SELECT atom_id2   FROM connected   WHERE bond_id = 'TR001_2_4' ),SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_2_4',1,1
List all carcinogenic molecules and their elements.,challenging,"SELECT DISTINCT T2.molecule_id, T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'","SELECT molecule.label, atom.element FROM molecule JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE molecule.label = '+'","SELECT T1.label, T2.element FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+'",0,0
Which molecules have triple bonds and list all the elements they contain.,challenging,"SELECT DISTINCT T1.molecule_id, T2.element FROM bond AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#'","SELECT DISTINCT molecule.label FROM molecule JOIN atom ON molecule.molecule_id = atom.molecule_id JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = '#' AND atom.element IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca')","SELECT T1.molecule_id, T2.element FROM bond AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#' GROUP BY T1.molecule_id",0,0
Name the atoms' elements that form bond TR000_2_3.,challenging,SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR000_2_3',SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id WHERE connected.bond_id = 'TR000_2_3',"SELECT T1.element, T2.element FROM atom AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id AND T2.atom_id = T3.atom_id2 WHERE T3.bond_id = 'TR000_2_3'",1,0
How many elements are contained in bond_id TR001_3_4?,challenging,SELECT COUNT(DISTINCT T1.element) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_3_4',SELECT COUNT(DISTINCT element) FROM atom WHERE atom_id IN (   SELECT atom_id   FROM connected   WHERE bond_id = 'TR001_3_4'   UNION   SELECT atom_id2   FROM connected   WHERE bond_id = 'TR001_3_4' )  Question: How many bonds are there in molecule TR001?  Answer: SELECT COUNT(*) FROM bond WHERE molecule_id = 'TR001'  Question: How many bonds are there in molecule TR001?  Answer: SELECT COUNT(*) FROM bond WHERE molecule_id = 'TR001'  Question: How many bonds are there in molecule TR001?  Answer: SELECT COUNT(*) FROM bond WHERE molecule_id = 'TR001'  Question: How many bonds are there in molecule TR001?  Answer: SELECT COUNT(*) FROM bond WHERE molecule_id = 'TR001'  Question: How many bonds are there in molecule TR001?  Answer: SELECT COUNT(*) FROM bond WHERE molecule_id = 'TR001'  Question: How many bonds are there in molecule TR001?  Answer: SELECT COUNT(*) FROM bond WHERE molecule_id = 'TR001'  Question: How many bonds are there in molecule TR001?  Answer: SELECT COUNT(*) FROM bond WHERE molecule_id = 'TR001'  Question: How many bonds are there in molecule TR001?  Answer: SELECT COUNT(*) FROM bond WHERE molecule_id = 'TR001'  Question: How many bonds are there in molecule TR001?  Answer: SELECT COUNT(*) FROM bond WHERE molecule_id = 'TR001'  Question: How many bonds are there in molecule TR001?  Answer: SELECT COUNT(*) FROM bond WHERE molecule_id = 'TR001'  Question: How many bonds are there in molecule TR001?  Answer: SELECT COUNT(*) FROM bond WHERE molecule_id = 'TR001'  Question: How many bonds are there in molecule TR001?  Answer: SELECT COUNT(*) FROM bond WHERE molecule_id = 'TR001'  Question: How many bonds are there in molecule TR001?  Answer: SELECT COUNT(*) FROM bond WHERE molecule_id = 'TR001'  Question: How many bonds are there in molecule TR001?  Answer: SELECT COUNT(*) FROM bond WHERE molecule_id = 'TR001'  Question: How,SELECT COUNT(DISTINCT T1.element) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_3_4',0,1
What is the element of toxicology for the atom with the ID of TR000_1?,challenging,SELECT T.element FROM atom AS T WHERE T.atom_id = 'TR000_1',SELECT element FROM atom WHERE atom_id = 'TR000_1',SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN connected AS T3 ON T2.atom_id2 = T3.atom_id2 INNER JOIN atom AS T4 ON T3.atom_id = T4.atom_id WHERE T1.atom_id = 'TR000_1' AND T4.element = 'cl',1,1
"List all the elements with double bond, consisted in molecule TR024.",challenging,SELECT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR024' AND T2.bond_type = '=',SELECT element FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR024') AND atom_id IN (SELECT atom_id FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE bond_type = '=')),SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id INNER JOIN molecule AS T4 ON T3.molecule_id = T4.molecule_id WHERE T3.bond_type = '=' AND T4.label = 'TR024',0,0
Calculate the percentage of carcinogenic molecules with triple bonded Hidrogen atoms.,challenging,SELECT CAST(SUM(CASE WHEN T1.label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T1.molecule_id = T3.molecule_id WHERE T3.bond_type = '#' AND T2.element = 'h',"SELECT percentage FROM (SELECT COUNT(molecule_id) AS count FROM molecule WHERE label = '+') AS t1, (SELECT COUNT(molecule_id) AS count FROM molecule WHERE label = '+') AS t2","SELECT percentage FROM (SELECT COUNT(DISTINCT molecule_id) AS total_molecules FROM molecule) AS T1, (SELECT COUNT(DISTINCT molecule_id) AS carcinogenic_molecules FROM molecule WHERE label = '+') AS T2, (SELECT COUNT(DISTINCT molecule_id) AS triple_bonded_molecules FROM molecule WHERE label = '+' AND EXISTS (SELECT * FROM connected WHERE connected.molecule_id = molecule.molecule_id AND EXISTS (SELECT * FROM atom WHERE atom.atom_id = connected.atom_id AND atom.element = 'h') AND EXISTS (SELECT * FROM atom WHERE atom.atom_id = connected.atom_id2 AND atom.element = 'h'))) AS T3",0,0
What is the element with the atom ID of TR004_7 in molecule that is not carcinogenic?,challenging,SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR004_7' AND T2.label = '-',SELECT element FROM atom WHERE atom_id = 'TR004_7' AND molecule_id IN (   SELECT molecule_id   FROM molecule   WHERE label = '-' )  Question: What is the element with the atom ID of TR004_7 in molecule that is not carcinogenic?  Answer: SELECT element FROM atom WHERE atom_id = 'TR004_7' AND molecule_id IN (   SELECT molecule_id   FROM molecule   WHERE label = '-' )  Question: What is the element with the atom ID of TR004_7 in molecule that is not carcinogenic?  Answer: SELECT element FROM atom WHERE atom_id = 'TR004_7' AND molecule_id IN (   SELECT molecule_id   FROM molecule   WHERE label = '-' )  Question: What is the element with the atom ID of TR004_7 in molecule that is not carcinogenic?  Answer: SELECT element FROM atom WHERE atom_id = 'TR004_7' AND molecule_id IN (   SELECT molecule_id   FROM molecule   WHERE label = '-' )  Question: What is the element with the atom ID of TR004_7 in molecule that is not carcinogenic?  Answer: SELECT element FROM atom WHERE atom_id = 'TR004_7' AND molecule_id IN (   SELECT molecule_id   FROM molecule   WHERE label = '-' )  Question: What is the element with the atom ID of TR004_7 in molecule that is not carcinogenic?  Answer: SELECT element FROM atom WHERE atom_id = 'TR004_7' AND molecule_id IN (   SELECT molecule_id   FROM molecule   WHERE label = '-' )  Question: What is the element with the atom ID of TR004_7 in molecule that is not carcinogenic?  Answer: SELECT element FROM atom WHERE atom_id = 'TR004_7' AND molecule_id IN (   SELECT molecule_id   FROM molecule   WHERE label = '-' )  Question: What is the element with the atom ID of TR004_7 in molecule that is not carcinogenic?  Answer: SELECT element FROM atom WHERE atom_id = 'TR004_7' AND molecule_id IN (   SELECT molecule_id   FROM molecule   WHERE label = '-' )  Question: What is the element with the atom ID of TR004_7 in molecule that is not carcinogenic?  Answer: SELECT element FROM atom WHERE atom_id = 'TR00,SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '-' AND T1.atom_id = 'TR004_7',0,1
List the element and bond type included in the molecule with molecule ID of TR002.,challenging,"SELECT DISTINCT T1.element, T2.bond_type FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR002'","SELECT atom.element, bond.bond_type FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.molecule_id = 'TR002'","SELECT atom.element, bond.bond_type FROM atom INNER JOIN bond ON atom.molecule_id = bond.molecule_id WHERE atom.molecule_id = 'TR002'",0,1
What is the percentage of cards whose language is French among the Story Spotlight cards?,challenging,SELECT CAST(SUM(CASE WHEN T2.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.isStorySpotlight = 1,SELECT (COUNT(DISTINCT c.id) * 100.0 / (SELECT COUNT(DISTINCT id) FROM cards WHERE isStorySpotlight = 1)) AS percentage FROM cards c JOIN foreign_data fd ON c.id = fd.id WHERE fd.language = 'French' AND c.isStorySpotlight = 1,"SELECT Divide(Count(id) where language = 'French' and isStorySpotlight = 1, Count(id) where isStorySpotlight = 1)*100 FROM cards",0,0
What percentage of cards with format commander and legal status do not have a content warning?,challenging,SELECT CAST(SUM(CASE WHEN T1.hasContentWarning = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'commander' AND T2.status = 'Legal',"SELECT DIVIDE(COUNT(hasContentWarning = 0),COUNT(ID))*100 AS percentage FROM cards WHERE format = 'commander' AND Status = 'legal'","SELECT DIVIDE(COUNT(hasContentWarning = 0),COUNT(ID))*100 FROM cards WHERE format = 'commander' AND Status = 'legal'",0,0
What percentage of cards without power are in French?,challenging,SELECT CAST(SUM(CASE WHEN T2.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.power IS NULL OR T1.power = '*',"SELECT ROUND(COUNT(language = 'French' and power is NULL or power = '*') / COUNT( power is NULL or power = '*') * 100, 2) AS percentage FROM cards","SELECT DIVIDE(COUNT(language = 'French' and power is NULL or power = '*'), COUNT( power is NULL or power = '*'))*100 FROM cards",0,0
Which set is not available outside of the United States and has foil cards with Japanese writing on them? Please include the set ID in your response.,challenging,"SELECT T1.name, T1.id FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Japanese' AND T1.isFoilOnly = 1 AND T1.isForeignOnly = 0",SELECT s.id FROM sets s WHERE s.isForeignOnly = 1 AND s.isFoilOnly = 1 AND s.code NOT IN (   SELECT st.setcode   FROM set_translations st   WHERE st.language = 'Japanese' ),SELECT id FROM sets WHERE isForeignOnly = 1 AND isFoilOnly = 1 AND language = 'Japanese',0,0
"Which of these artists have designed a card in the set Coldsnap, Jeremy Jarvis, Aaron Miller or Chippy?",challenging,SELECT T1.artist FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE (T2.name = 'Coldsnap' AND T1.artist = 'Chippy') OR (T2.name = 'Coldsnap' AND T1.artist = 'Aaron Miller') OR (T2.name = 'Coldsnap' AND T1.artist = 'Jeremy Jarvis') GROUP BY T1.artist,"SELECT DISTINCT artist FROM cards WHERE setcode = 'Coldsnap'   AND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')","SELECT DISTINCT artist FROM cards WHERE setcode = 'Coldsnap' AND artist IN ('Jeremy Jarvis', 'Aaron Miller','Chippy')",0,0
What is the percentage of incredibly powerful cards in the set Coldsnap?,challenging,SELECT CAST(SUM(CASE WHEN T1.cardKingdomFoilId IS NOT NULL AND T1.cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE T2.name = 'Coldsnap',"SELECT DIVIDE(SUM(cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL), SUM(name = 'Coldsnap'))*100 FROM cards WHERE name = 'Coldsnap'","SELECT DIVIDE(SUM(incredibly powerful), SUM(name = 'Coldsnap'))*100 FROM cards WHERE name = 'Coldsnap'",0,0
For all cards illustrated by Jim Pavelec. and describe the text of the ruling of these cards. Do these cards have missing or degraded properties and values.,challenging,"SELECT T2.text , CASE WHEN T1.hasContentWarning = 1 THEN 'YES' ELSE 'NO' END FROM cards AS T1 INNER JOIN rulings AS T2 ON T2.uuid = T1.uuid WHERE T1.artist = 'Jim Pavelec'",NULL,"SELECT T1.name, T1.text, T1.hasContentWarning FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.id = T2.id WHERE T2.artist = 'Jim Pavelec'",0,0
"For all the set of cards that has Japanese translation, what is the percentage of them are only available in non-foil?",challenging,SELECT CAST(SUM(CASE WHEN isNonFoilOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) FROM sets WHERE code IN ( SELECT setCode FROM set_translations WHERE language = 'Japanese' ),"SELECT DIVIDE(SUM(isNonFoilOnly = 1), SUM(language = 'Japanese'))*100 AS percentage_non_foil_japanese FROM cards WHERE language = 'Japanese'","SELECT DIVIDE(SUM(isNonFoilOnly = 1), SUM(language = 'Japanese'))*100 FROM cards INNER JOIN foreign_data ON cards.id = foreign_data.id WHERE foreign_data.language = 'Japanese'",0,0
"For all the set of cards that has Brazil Portuguese translation, what is the percentage of them are only available online?",challenging,SELECT CAST(SUM(CASE WHEN isOnlineOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) FROM sets WHERE code IN ( SELECT setCode FROM set_translations WHERE language = 'Portuguese (Brazil)' ),"SELECT DIVIDE(SUM(isOnlineOnly = 1), SUM(language = 'Portuguese (Brazil)))*100 FROM cards INNER JOIN set_translations ON cards.setcode = set_translations.setcode WHERE set_translations.language = 'Portuguese (Brazil)' ","SELECT DIVIDE(SUM(isOnlineOnly = 1), SUM(language = 'Portuguese (Brazil)))*100 FROM cards INNER JOIN foreign_data ON cards.id = foreign_data.id WHERE language = 'Portuguese (Brazil)'",0,0
"Among the sets whose expansion type is Commander, which set has the highest total number of cards including promotional and related supplemental products but excluding Alchemy modifications? Indicate the id of the set.",challenging,SELECT id FROM sets WHERE type = 'commander' ORDER BY totalSetSize DESC LIMIT 1,SELECT id FROM sets WHERE expansion_type = 'commander' AND totalSetSize = (SELECT MAX(totalSetSize) FROM sets WHERE expansion_type = 'commander'),SELECT id FROM sets WHERE type = 'commander' AND totalSetSize = (SELECT MAX(totalSetSize) FROM sets WHERE type = 'commander'),0,1
"Among the cards whose version of frame style is 1997, what is the status of the card illustrated by D. Alexander Gregory in legacy play format that has sensitive content or Wizards of the Coast?",challenging,SELECT DISTINCT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T2.uuid = T1.uuid WHERE T1.frameVersion = 1997 AND T1.hasContentWarning = 1 AND T1.artist = 'D. Alexander Gregory' AND T2.format = 'legacy',"SELECT cards.name, cards.status FROM cards JOIN foreign_data ON cards.id = foreign_data.id JOIN legalities ON cards.id = legalities.id WHERE cards.frameVersion = '1997' AND cards.artist = 'D. Alexander Gregory' AND cards.hasContentWarning = 1 AND legalities.format = 'legacy' AND legalities.status = 'Wizards of the Coast' GROUP BY cards.name",SELECT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.id = T2.id WHERE T1.frameVersion = '1997' AND T1.artist = 'D. Alexander Gregory' AND (T1.hasContentWarning = 1 OR T1.name = 'Wizards of the Coast') AND T2.format = 'legacy',0,0
What is the annual average number of sets that were released between 1/1/2012 to 12/31/2015? Indicate the common langugage of the card.,challenging,"SELECT (CAST(SUM(T1.id) AS REAL) / COUNT(T1.id)) / 4, T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.id WHERE T1.releaseDate BETWEEN '2012-01-01' AND '2015-12-31' GROUP BY T1.releaseDate ORDER BY COUNT(T2.language) DESC LIMIT 1",SELECT AVG(id) FROM sets WHERE releaseDate BETWEEN '2012-01-01' AND '2015-12-31',SELECT AVG(T1.id) FROM sets AS T1 WHERE T1.releasedate BETWEEN '2012-01-01' AND '2015-12-31',0,0
List the names of all the cards in the set Hour of Devastation and find the formats in which these cards are legal.,challenging,"SELECT DISTINCT T2.name , CASE WHEN T1.status = 'Legal' THEN T1.format ELSE NULL END FROM legalities AS T1 INNER JOIN cards AS T2 ON T2.uuid = T1.uuid WHERE T2.setCode IN ( SELECT code FROM sets WHERE name = 'Hour of Devastation' )","SELECT cards.name, legalities.format FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.setcode = 'hod' AND legalities.status = 'Legal'","SELECT cards.name, legalities.format FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.setcode = 'hou' AND legalities.status = 'Legal'",0,0
Which user added a bounty amount of 50 to the post title mentioning variance?,challenging,"SELECT T3.DisplayName, T1.Title FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId INNER JOIN users AS T3 ON T3.Id = T2.UserId WHERE T2.BountyAmount = 50 AND T1.Title LIKE '%variance%'",SELECT DisplayName FROM users WHERE id IN (   SELECT userid   FROM votes   WHERE bountyamount = 50     AND postid IN (       SELECT id       FROM posts       WHERE title LIKE '%variance%'     ) ),SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T1.BountyAmount = 50 AND T1.Title LIKE '%variance%',0,0
What is the percentage difference of student badges given during 2010 and 2011?,challenging,"SELECT CAST(SUM(IIF(STRFTIME('%Y', Date) = '2010', 1, 0)) AS REAL) * 100 / COUNT(Id) - CAST(SUM(IIF(STRFTIME('%Y', Date) = '2011', 1, 0)) AS REAL) * 100 / COUNT(Id) FROM badges WHERE Name = 'Student'",SELECT (     (         SELECT COUNT(*)         FROM badges         WHERE name = 'Student'             AND YEAR(date) = 2010     ) / (         SELECT COUNT(*)         FROM badges         WHERE name = 'Student'             AND YEAR(date) = 2011     ) ) * 100 AS percentage_difference,"SELECT (COUNT(T1.Name) WHERE strftime('%Y', T1.Date) = '2010') * 100 / COUNT(T1.Name) - (COUNT(T1.Name) WHERE strftime('%Y', T1.Date) = '2011') * 100 / COUNT(T1.Name) FROM badges AS T1 WHERE T1.Name = 'Student'",0,0
"Among posts by Harvey Motulsky and Noah Snyder, which one has higher popularity?",challenging,SELECT T1.DisplayName FROM users AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.UserId INNER JOIN posts AS T3 ON T2.PostId = T3.Id WHERE T1.DisplayName = 'Harvey Motulsky' OR T1.DisplayName = 'Noah Snyder' GROUP BY T1.DisplayName ORDER BY SUM(T3.ViewCount) DESC LIMIT 1,NULL,"SELECT T1.Title, T1.ViewCount FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Harvey Motulsky' OR T2.DisplayName = 'Noah Snyder' ORDER BY T1.ViewCount DESC LIMIT 1",0,0
"Based on posts posted by Community, calculate the percentage of posts that use the R language.",challenging,"SELECT CAST(SUM(IIF(T3.TagName = 'r', 1, 0)) AS REAL) * 100 / COUNT(T1.Id) FROM users AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.UserId INNER JOIN tags AS T3 ON T3.ExcerptPostId = T2.PostId WHERE T1.DisplayName = 'Community'",NULL,SELECT (COUNT(PostId WHERE TagName = 'r') / COUNT(PostId WHERE DisplayName = 'Community')) as percentage FROM posts,0,0
"Among all the posts posted by the most influential user, identify the percentage with a score above 50.",challenging,SELECT CAST(SUM(CASE WHEN T2.Score > 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Id) FROM users T1 INNER JOIN posts T2 ON T1.Id = T2.OwnerUserId INNER JOIN ( SELECT MAX(Reputation) AS max_reputation FROM users ) T3 ON T1.Reputation = T3.max_reputation,SELECT COUNT(*) FROM stats_posts)) AS percentage FROM     stats_posts WHERE     stats_posts.Score > 50     AND stats_posts.OwnerUserId = (         SELECT             stats_users.Id         FROM             stats_users         ORDER BY             stats_users.Reputation DESC         LIMIT             1     ),SELECT (COUNT(T1.Id) * 100.0 / (SELECT COUNT(T2.Id) FROM posts AS T2 WHERE T2.OwnerUserId = T1.Id)) AS Percentage FROM posts AS T1 WHERE T1.OwnerUserId = (SELECT T3.Id FROM users AS T3 ORDER BY T3.Reputation DESC LIMIT 1) AND T1.Score > 50,0,0
Please list the superhero names of all the superheroes that have blue eyes and blond hair.,challenging,SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Blue' AND T3.colour = 'Blond',SELECT superhero_name FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'Blue') AND hair_colour_id = (SELECT id FROM colour WHERE colour = 'Blond'),SELECT superhero_name FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'Blue') AND hair_colour_id = (SELECT id FROM colour WHERE colour = 'Blond'),1,1
List the superheroes from Marvel Comics who have the super power of 'Super Strength'.,challenging,SELECT superhero_name FROM superhero AS T1 WHERE EXISTS (SELECT 1 FROM hero_power AS T2 INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Super Strength' AND T1.id = T2.hero_id)AND EXISTS (SELECT 1 FROM publisher AS T4 WHERE T4.publisher_name = 'Marvel Comics' AND T1.publisher_id = T4.id),SELECT superhero_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE publisher_name = 'Marvel Comics' AND power_name = 'Super Strength',SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.hero_id INNER JOIN superpower AS T3 ON T2.power_id = T3.id INNER JOIN publisher AS T4 ON T1.publisher_id = T4.id WHERE T4.publisher_name = 'Marvel Comics' AND T3.power_name = 'Super Strength',1,1
What is the percentage of superheroes who act in their own self-interest or make decisions based on their own moral code? Indicate how many of the said superheroes were published by Marvel Comics.,challenging,"SELECT (CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM superhero)), CAST(SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS REAL) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN alignment AS T3 ON T3.id = T1.alignment_id WHERE T3.alignment = 'Bad'",NULL,SELECT (COUNT(T1.id) * 100.0 / (SELECT COUNT(T2.id) FROM superhero AS T2)) AS percentage FROM superhero AS T1 WHERE T1.alignment = 'Bad' AND T1.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics'),0,0
"Between DC and Marvel Comics, which publisher has published more superheroes? Find the difference in the number of superheroes they have published.",challenging,SELECT SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id,NULL,"SELECT SUBTRACT(SUM(publisher_name = 'Marvel Comics'), SUM(publisher_name = 'DC Comics')) FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id",0,0
"In superheroes with height between 150 to 180, what is the percentage of heroes published by Marvel Comics?",challenging,SELECT CAST(COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.height_cm BETWEEN 150 AND 180,SELECT (COUNT(publisher.id) * 100.0 / (SELECT COUNT(*) FROM superhero)) AS percentage FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.height_cm BETWEEN 150 AND 180 AND publisher.id = 13,SELECT (COUNT(T1.id) * 100.0 / (SELECT COUNT(*) FROM superhero)) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.height_cm BETWEEN 150 AND 180 AND T2.publisher_name = 'Marvel Comics',0,0
Which superhero has the most durability published by Dark Horse Comics?,challenging,SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T3.id = T2.attribute_id INNER JOIN publisher AS T4 ON T4.id = T1.publisher_id WHERE T4.publisher_name = 'Dark Horse Comics' AND T3.attribute_name = 'Durability' ORDER BY T2.attribute_value DESC LIMIT 1,SELECT superhero_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id JOIN hero_attribute ON superhero.id = hero_attribute.hero_id JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE publisher_name = 'Dark Horse Comics' AND attribute_name = 'durability' AND attribute_value = (   SELECT MAX(attribute_value)   FROM hero_attribute   JOIN attribute ON hero_attribute.attribute_id = attribute.id   WHERE attribute_name = 'durability' ) ORDER BY superhero_name,SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id INNER JOIN publisher AS T4 ON T1.publisher_id = T4.id WHERE T3.attribute_name = 'durability' AND T4.publisher_name = 'Dark Horse Comics' AND T2.attribute_value = (SELECT MAX(T5.attribute_value) FROM hero_attribute AS T5 INNER JOIN attribute AS T6 ON T5.attribute_id = T6.id WHERE T6.attribute_name = 'durability'),0,0
"List the eyes, hair and skin colour of all female superheroes published by Dark Horse Comics.",challenging,"SELECT T1.eye_colour_id, T1.hair_colour_id, T1.skin_colour_id FROM superhero AS T1 INNER JOIN publisher AS T2 ON T2.id = T1.publisher_id INNER JOIN gender AS T3 ON T3.id = T1.gender_id WHERE T2.publisher_name = 'Dark Horse Comics' AND T3.gender = 'Female'",NULL,"SELECT T1.eye_colour_id, T1.hair_colour_id, T1.skin_colour_id FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.gender = 'Female' AND T3.publisher_name = 'Dark Horse Comics'",0,1
"Which superhero has the same eyes, hair and skin colour? Indicate the publisher of the superhero.",challenging,"SELECT T1.superhero_name, T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.eye_colour_id = T1.hair_colour_id AND T1.eye_colour_id = T1.skin_colour_id",NULL,"SELECT T1.superhero_name, T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.hair_colour_id = T1.skin_colour_id AND T1.hair_colour_id = T1.eye_colour_id",0,1
What is the percentage of blue female superheroes among all female superheroes?,challenging,SELECT CAST(COUNT(CASE WHEN T3.colour = 'Blue' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN colour AS T3 ON T1.skin_colour_id = T3.id WHERE T2.gender = 'Female',NULL,SELECT (COUNT(T1.id) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female'))) AS percentage FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.skin_colour_id = T2.id WHERE T2.colour = 'Blue' AND T1.gender_id = (SELECT id FROM gender WHERE gender = 'Female'),0,1
How many percent of female heroes were published by Marvel Comics?,challenging,SELECT CAST(COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T3.gender = 'Female',NULL,"SELECT MULTIPLY(DIVIDE(SUM(gender = 'Female' WHERE publisher_name = 'Marvel Comics'), COUNT(publisher_name = 'Marvel Comics')), 100) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics'",0,0
"Among the bad superheroes, what is the percentage of female superheroes?",challenging,SELECT CAST(COUNT(CASE WHEN T3.gender = 'Female' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.alignment = 'Bad',NULL,SELECT (COUNT(T1.id) * 100.0 / (SELECT COUNT(T2.id) FROM superhero AS T2 INNER JOIN alignment AS T3 ON T2.alignment_id = T3.id WHERE T3.id = 2)) FROM superhero AS T1 INNER JOIN gender AS T4 ON T1.gender_id = T4.id INNER JOIN alignment AS T5 ON T1.alignment_id = T5.id WHERE T5.id = 2 AND T4.id = 2,0,1
"In superheroes with missing weight data, calculate the difference between the number of superheroes with blue eyes and no eye color.",challenging,SELECT SUM(CASE WHEN T2.id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.id = 1 THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg = 0 OR T1.weight_kg is NULL,NULL,SELECT (SELECT COUNT(*) FROM superhero WHERE weight_kg = 0 OR weight_kg IS NULL AND eye_colour_id = (SELECT id FROM colour WHERE colour = 'blue')) - (SELECT COUNT(*) FROM superhero WHERE weight_kg = 0 OR weight_kg IS NULL AND eye_colour_id = (SELECT id FROM colour WHERE colour = 'no eye color')),0,0
Which publisher created more superheroes: DC or Marvel Comics? Find the difference in the number of superheroes.,challenging,SELECT SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id,"SELECT publisher_name, COUNT(*) AS superhero_count FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id GROUP BY publisher_name","SELECT difference FROM (SELECT SUM(publisher_name = 'DC Comics') AS dc_count, SUM(publisher_name = 'Marvel Comics') AS marvel_count FROM superhero) AS subquery",0,0
"Among all superheroes created by George Lucas, identify the percentage of female superheroes.",challenging,SELECT CAST(COUNT(CASE WHEN T3.gender = 'Female' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.publisher_name = 'George Lucas',"SELECT percentage FROM (   SELECT SUM(gender = 'Female' WHERE publisher_name = 'George Lucas') AS female_count,          COUNT(publisher_name = 'George Lucas') AS total_count,          (SUM(gender = 'Female' WHERE publisher_name = 'George Lucas') / COUNT(publisher_name = 'George Lucas')) * 100 AS percentage   FROM superhero   WHERE publisher_name = 'George Lucas' ) ",SELECT COUNT(T2.gender) * 100.0 / (SELECT COUNT(*) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T1.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'George Lucas')) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id WHERE T1.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'George Lucas') AND T2.gender = 'Female',0,1
"Among all superheroes in Marvel Comics, identify the percentage of 'good' superheroes.",challenging,SELECT CAST(COUNT(CASE WHEN T3.alignment = 'Good' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T2.publisher_name = 'Marvel Comics',SELECT (COUNT(CASE WHEN alignment = 'Good' AND publisher_name = 'Marvel Comics' THEN 1 END) * 100.0 / COUNT(CASE WHEN publisher_name = 'Marvel Comics' THEN 1 END)) AS percentage FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id,SELECT COUNT(publisher_name = 'Marvel Comics') * 100.0 / COUNT(publisher_name = 'Marvel Comics') FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics' AND T1.alignment = 'Good',0,0
"Paul di Resta was in the No. 853 race, what percent faster did he finish in the 853rd race than the next race for the fastest lap speed?",challenging,"SELECT (SUM(IIF(T2.raceId = 853, T2.fastestLapSpeed, 0)) - SUM(IIF(T2.raceId = 854, T2.fastestLapSpeed, 0))) * 100 / SUM(IIF(T2.raceId = 853, T2.fastestLapSpeed, 0)) FROM drivers AS T1 INNER JOIN results AS T2 ON T2.driverId = T1.driverId WHERE T1.forename = 'Paul' AND T1.surname = 'di Resta'",SELECT (fastestLapSpeed(raceId = 853) - fastestLapSpeed(raceId = 854)) * 100 / fastestLapSpeed(raceId = 853) AS percentage FROM drivers WHERE drivers.forename = 'Paul' AND drivers.surname = 'di Resta',SELECT (fastestLapSpeed(raceId = 853) - fastestLapSpeed(raceId = 854)) * 100 / fastestLapSpeed(raceId = 853) FROM drivers WHERE drivers.forename = 'Paul' AND drivers.surname = 'di Resta',0,0
Calculate the percentage whereby Hamilton was not at the 1st track of the the f1 circuit since 2010.,challenging,SELECT CAST(COUNT(CASE WHEN T2.position <> 1 THEN T2.position END) AS REAL) * 100 / COUNT(T2.driverStandingsId) FROM races AS T1 INNER JOIN driverStandings AS T2 ON T2.raceId = T1.raceId INNER JOIN drivers AS T3 ON T3.driverId = T2.driverId WHERE T3.surname = 'Hamilton' AND T1.year >= 2010,NULL,SELECT (COUNT(T1.raceId) WHERE T2.surname = 'Hamilton' AND T1.position > 1) / (COUNT(T1.raceId) WHERE T2.surname = 'Hamilton') FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T3.year >= 2010,0,0
How much faster in percentage is the champion than the driver who finished the race last in the 2008 Australian Grand Prix?,challenging,"WITH time_in_seconds AS ( SELECT T1.positionOrder, CASE WHEN T1.positionOrder = 1 THEN (CAST(SUBSTR(T1.time, 1, 1) AS REAL) * 3600) + (CAST(SUBSTR(T1.time, 3, 2) AS REAL) * 60) + CAST(SUBSTR(T1.time, 6) AS REAL) ELSE CAST(SUBSTR(T1.time, 2) AS REAL) END AS time_seconds FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Australian Grand Prix' AND T1.time IS NOT NULL AND T2.year = 2008 ), champion_time AS ( SELECT time_seconds FROM time_in_seconds WHERE positionOrder = 1), last_driver_incremental AS ( SELECT time_seconds FROM time_in_seconds WHERE positionOrder = (SELECT MAX(positionOrder) FROM time_in_seconds) ) SELECT (CAST((SELECT time_seconds FROM last_driver_incremental) AS REAL) * 100) / (SELECT time_seconds + (SELECT time_seconds FROM last_driver_incremental) FROM champion_timestrftime('%s', T1.time) - strftime('%s', T2.time)) / (strftime('%s', T3.time) - strftime('%s', T2.time)) * 100 FROM results AS T1 INNER JOIN results AS T2 ON T1.raceid = T2.raceid AND T1.position = 1 AND T2.position = (SELECT MAX(position) FROM results WHERE raceid = T1.raceid) INNER JOIN results AS T3 ON T1.raceid = T3.raceid AND T3.position = (SELECT MAX(position) FROM results WHERE raceid = T1.raceid AND position <> (SELECT MAX(position) FROM results WHERE raceid = T1.raceid)) WHERE T1.raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix')",0,0
Please calculate the race completion percentage of Japanese drivers from 2007 to 2009.,challenging,"SELECT CAST(SUM(IIF(T1.time IS NOT NULL, 1, 0)) AS REAL) * 100 / COUNT(T1.raceId) FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN drivers AS T3 on T1.driverId = T3.driverId WHERE T3.nationality = 'Japanese' AND T2.year BETWEEN 2007 AND 2009",SELECT (COUNT(DriverID) * 100.0 / (SELECT COUNT(DriverID) FROM drivers WHERE nationality = 'Japanese')) AS race_completion_percentage FROM results JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.nationality = 'Japanese' AND results.time IS NOT NULL AND results.year BETWEEN 2007 AND 2009,SELECT COUNT(T2.DriverID) * 100 / (SELECT COUNT(T3.DriverID) FROM results AS T3 INNER JOIN drivers AS T4 ON T3.DriverID = T4.DriverID WHERE T4.Nationality = 'Japanese' AND T3.Year BETWEEN 2007 AND 2009) AS Percentage FROM results AS T1 INNER JOIN drivers AS T2 ON T1.DriverID = T2.DriverID WHERE T2.Nationality = 'Japanese' AND T1.Year BETWEEN 2007 AND 2009 AND T1.Time IS NOT NULL,0,0
"What is the average time in seconds of champion for each year, before year 1975?",challenging,"WITH time_in_seconds AS ( SELECT T2.year, T2.raceId, T1.positionOrder, CASE WHEN T1.positionOrder = 1 THEN (CAST(SUBSTR(T1.time, 1, 1) AS REAL) * 3600) + (CAST(SUBSTR(T1.time, 3, 2) AS REAL) * 60) + CAST(SUBSTR(T1.time, 6,2) AS REAL )   + CAST(SUBSTR(T1.time, 9) AS REAL)/1000 ELSE 0 END AS time_seconds FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.time IS NOT NULL ), champion_time AS ( SELECT year, raceId, time_seconds FROM time_in_seconds WHERE positionOrder = 1 ) SELECT year, AVG(time_seconds) FROM champion_time WHERE year < 1975 GROUP BY year HAVING AVG(time_seconds) IS NOT NULL",NULL,"SELECT AVG(CAST(SUBSTR(T1.time, 1, 2) AS INTEGER) * 3600 + CAST(SUBSTR(T1.time, 4, 2) AS INTEGER) * 60 + CAST(SUBSTR(T1.time, 7, 2) AS INTEGER)) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceid = T2.raceid INNER JOIN driverstandings AS T3 ON T1.driverid = T3.driverid AND T1.raceid = T3.raceid WHERE T2.year < 1975 AND T3.position = 1 AND T1.time IS NOT NULL GROUP BY T2.year",0,0
"From 2000 to 2005, what percentage of drivers who were born before 1985 and the lap numbers were over 50?",challenging,"SELECT CAST(SUM(IIF(STRFTIME('%Y', T3.dob) < '1985' AND T1.laps > 50, 1, 0)) AS REAL) * 100 / COUNT(*) FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN drivers AS T3 on T1.driverId = T3.driverId WHERE T2.year BETWEEN 2000 AND 2005",SELECT (COUNT(driverId) * 100.0 / (SELECT COUNT(*) FROM drivers WHERE year(dob) < 1985)) AS percentage FROM drivers WHERE year(dob) < 1985 AND laps > 50 AND year(dob) BETWEEN 2000 AND 2005,SELECT COUNT(T1.driverId) / (SELECT COUNT(T2.driverId) FROM drivers AS T2 WHERE T2.year BETWEEN 2000 AND 2005) * 100 FROM drivers AS T1 WHERE T1.year < 1985 AND T1.laps > 50,0,0
List down top 3 German drivers who has the shortest average pit stop duration and were born between 1980-1985.,challenging,"SELECT T2.forename, T2.surname FROM pitStops AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId WHERE T2.nationality = 'German' AND STRFTIME('%Y', T2.dob) BETWEEN '1980' AND '1985' GROUP BY T2.forename, T2.surname ORDER BY AVG(T1.duration) LIMIT 3","SELECT drivers.forename || ' ' || drivers.surname AS full_name, AVG(pitstops.duration) AS avg_pitstop_duration FROM drivers JOIN pitstops ON drivers.driverid = pitstops.driverid WHERE drivers.nationality = 'German' AND YEAR(drivers.dob) BETWEEN 1980 AND 1985 GROUP BY drivers.driverid ORDER BY avg_pitstop_duration ASC LIMIT 3","SELECT T1.forename, T1.surname, AVG(T2.duration) AS avg_duration FROM drivers AS T1 INNER JOIN pitstops AS T2 ON T1.driverid = T2.driverid WHERE T1.nationality = 'German' AND YEAR(T1.dob) BETWEEN 1980 AND 1985 GROUP BY T1.driverid ORDER BY avg_duration ASC LIMIT 3",0,0
What is the constructor reference name of the champion in the 2009 Singapore Grand Prix? Please give its website.,challenging,"SELECT T3.constructorRef, T3.url FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN constructors AS T3 on T1.constructorId = T3.constructorId WHERE T2.name = 'Singapore Grand Prix' AND T2.year = 2009 AND T1.time LIKE '_:%:__.___'","SELECT constructors.name, constructors.url FROM constructors JOIN constructorstandings ON constructors.constructorid = constructorstandings.constructorid JOIN races ON constructorstandings.raceid = races.raceid WHERE races.year = 2009 AND races.name = 'Singapore Grand Prix' ORDER BY constructorstandings.points DESC LIMIT 1","SELECT T2.constructorRef, T2.url FROM results AS T1 INNER JOIN constructors AS T2 ON T1.constructorid = T2.constructorid INNER JOIN races AS T3 ON T1.raceid = T3.raceid WHERE T3.year = 2009 AND T3.name = 'Singapore Grand Prix' AND T1.position = 1",0,1
"Which constructor scored most points from Monaco Grand Prix between 1980 and 2010? List the score, name and nationality of this team.",challenging,"SELECT SUM(T1.points), T2.name, T2.nationality FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId INNER JOIN races AS T3 ON T3.raceid = T1.raceid WHERE T3.name = 'Monaco Grand Prix' AND T3.year BETWEEN 1980 AND 2010 GROUP BY T2.name ORDER BY SUM(T1.points) DESC LIMIT 1","SELECT c.name, c.nationality, SUM(r.points) AS total_points FROM constructors c JOIN constructorstandings cs ON c.constructorid = cs.constructorid JOIN races r ON cs.raceid = r.raceid WHERE r.name = 'Monaco Grand Prix' AND r.year BETWEEN 1980 AND 2010 GROUP BY c.name, c.nationality ORDER BY total_points DESC LIMIT 1","SELECT T2.name, T2.nationality, T1.points FROM constructorstandings AS T1 INNER JOIN constructors AS T2 ON T1.constructorid = T2.constructorid INNER JOIN races AS T3 ON T1.raceid = T3.raceid WHERE T3.name = 'Monaco Grand Prix' AND T3.year BETWEEN 1980 AND 2010 ORDER BY T1.points DESC LIMIT 1",0,0
What is full name of the racer who ranked 1st in the 3rd qualifying race held in the Marina Bay Street Circuit in 2008?,challenging,"SELECT T2.forename, T2.surname FROM qualifying AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceid = T3.raceid WHERE q3 IS NOT NULL AND T3.year = 2008 AND T3.circuitId IN ( SELECT circuitId FROM circuits WHERE name = 'Marina Bay Street Circuit' ) ORDER BY CAST(SUBSTR(q3, 1, INSTR(q3, ':') - 1) AS INTEGER) * 60 + CAST(SUBSTR(q3, INSTR(q3, ':') + 1, INSTR(q3, '.') - INSTR(q3, ':') - 1) AS REAL) + CAST(SUBSTR(q3, INSTR(q3, '.') + 1) AS REAL) / 1000 ASC LIMIT 1","SELECT CONCAT(forename, ' ', surname) AS full_name FROM drivers WHERE driverid = (   SELECT driverid   FROM qualifying   WHERE raceid = (     SELECT raceid     FROM races     WHERE year = 2008 AND round = 3 AND circuitid = (       SELECT circuitid       FROM circuits       WHERE name = 'Marina Bay Street Circuit'     )   )   ORDER BY q3 ASC   LIMIT 1 )","SELECT CONCAT(forename, ' ', surname) FROM drivers WHERE driverid = (SELECT driverid FROM qualifying WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND circuitid = (SELECT circuitid FROM circuits WHERE name = 'Marina Bay Street Circuit')) AND q3 = (SELECT MIN(q3) FROM qualifying WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND circuitid = (SELECT circuitid FROM circuits WHERE name = 'Marina Bay Street Circuit'))))",0,0
"Among all the lap records set on various circuits, what is the time for the fastest one?",challenging,"SELECT time FROM lapTimes ORDER BY (CASE WHEN INSTR(time, ':') <> INSTR(SUBSTR(time, INSTR(time, ':') + 1), ':') + INSTR(time, ':') THEN CAST(SUBSTR(time, 1, INSTR(time, ':') - 1) AS REAL) * 3600 ELSE 0 END) + (CAST(SUBSTR(time, INSTR(time, ':') - 2 * (INSTR(time, ':') = INSTR(SUBSTR(time, INSTR(time, ':') + 1), ':') + INSTR(time, ':')), INSTR(time, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(time, INSTR(time, ':') + 1, INSTR(time, '.') - INSTR(time, ':') - 1) AS REAL)) + (CAST(SUBSTR(time, INSTR(time, '.') + 1) AS REAL) / 1000) ASC LIMIT 1",SELECT MIN(time) FROM laptimes,SELECT MIN(time) FROM laptimes,0,0
Which top 20 driver created the shortest lap time ever record in a Formula_1 race? Please give them full names.,challenging,"WITH lap_times_in_seconds AS (SELECT driverId, (CASE WHEN SUBSTR(time, 1, INSTR(time, ':') - 1) <> '' THEN CAST(SUBSTR(time, 1, INSTR(time, ':') - 1) AS REAL) * 60 ELSE 0 END + CASE WHEN SUBSTR(time, INSTR(time, ':') + 1, INSTR(time, '.') - INSTR(time, ':') - 1) <> '' THEN CAST(SUBSTR(time, INSTR(time, ':') + 1, INSTR(time, '.') - INSTR(time, ':') - 1) AS REAL) ELSE 0 END + CASE WHEN SUBSTR(time, INSTR(time, '.') + 1) <> '' THEN CAST(SUBSTR(time, INSTR(time, '.') + 1) AS REAL) / 1000 ELSE 0 END) AS time_in_seconds FROM lapTimes) SELECT T2.forename, T2.surname, T1.driverId FROM (SELECT driverId, MIN(time_in_seconds) AS min_time_in_seconds FROM lap_times_in_seconds GROUP BY driverId) AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId ORDER BY T1.min_time_in_seconds ASC LIMIT 20",NULL,"SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN (SELECT T2.driverid, MIN(T2.time) AS shortest_lap_time FROM results AS T2 INNER JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T3.year >= 2000 GROUP BY T2.driverid) AS T4 ON T1.driverid = T4.driverid ORDER BY T4.shortest_lap_time LIMIT 20",0,0
Please list the lap records for the circuits in Italy.,challenging,"WITH fastest_lap_times AS (SELECT T1.raceId, T1.FastestLapTime, (CAST(SUBSTR(T1.FastestLapTime, 1, INSTR(T1.FastestLapTime, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, ':') + 1, INSTR(T1.FastestLapTime, '.') - INSTR(T1.FastestLapTime, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, '.') + 1) AS REAL) / 1000) as time_in_seconds FROM results AS T1 WHERE T1.FastestLapTime IS NOT NULL ) SELECT T1.FastestLapTime as lap_record FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN circuits AS T3 on T2.circuitId = T3.circuitId INNER JOIN (SELECT MIN(fastest_lap_times.time_in_seconds) as min_time_in_seconds FROM fastest_lap_times INNER JOIN races AS T2 on fastest_lap_times.raceId = T2.raceId INNER JOIN circuits AS T3 on T2.circuitId = T3.circuitId WHERE T3.country = 'Italy' ) AS T4 ON (CAST(SUBSTR(T1.FastestLapTime, 1, INSTR(T1.FastestLapTime, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, ':') + 1, INSTR(T1.FastestLapTime, '.') - INSTR(T1.FastestLapTime, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, '.') + 1) AS REAL) / 1000) = T4.min_time_in_seconds LIMIT 1",NULL,"SELECT T1.name, T2.time FROM circuits AS T1 INNER JOIN races AS T2 ON T1.circuitid = T2.circuitid INNER JOIN results AS T3 ON T2.raceid = T3.raceid INNER JOIN drivers AS T4 ON T3.driverid = T4.driverid WHERE T1.country = 'Italy' AND T3.fastestlap = 1",0,0
"In the race a driver set the lap record for the Austrian Grand Prix Circuit, how long did he spent at the pit stop at that same race?",challenging,"WITH fastest_lap_times AS ( SELECT T1.raceId, T1.driverId, T1.FastestLapTime, (CAST(SUBSTR(T1.FastestLapTime, 1, INSTR(T1.FastestLapTime, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, ':') + 1, INSTR(T1.FastestLapTime, '.') - INSTR(T1.FastestLapTime, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, '.') + 1) AS REAL) / 1000) as time_in_seconds FROM results AS T1 WHERE T1.FastestLapTime IS NOT NULL), lap_record_race AS ( SELECT T1.raceId, T1.driverId FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN circuits AS T3 on T2.circuitId = T3.circuitId INNER JOIN ( SELECT MIN(fastest_lap_times.time_in_seconds) as min_time_in_seconds FROM fastest_lap_times INNER JOIN races AS T2 on fastest_lap_times.raceId = T2.raceId INNER JOIN circuits AS T3 on T2.circuitId = T3.circuitId WHERE T2.name = 'Austrian Grand Prix') AS T4 ON (CAST(SUBSTR(T1.FastestLapTime, 1, INSTR(T1.FastestLapTime, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, ':') + 1, INSTR(T1.FastestLapTime, '.') - INSTR(T1.FastestLapTime, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, '.') + 1) AS REAL) / 1000) = T4.min_time_in_seconds WHERE T2.name = 'Austrian Grand Prix') SELECT T4.duration FROM lap_record_race INNER JOIN pitStops AS T4 on lap_record_race.raceId = T4.raceId AND lap_record_race.driverId = T4.driverId",SELECT pitstops.duration FROM pitstops JOIN races ON pitstops.raceid = races.raceid JOIN circuits ON races.circuitid = circuits.circuitid JOIN drivers ON pitstops.driverid = drivers.driverid JOIN results ON pitstops.driverid = results.driverid AND pitstops.raceid = results.raceid WHERE circuits.name = 'Austrian Grand Prix Circuit' AND drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' AND results.fastestlap = 1 AND races.year = 2021 AND races.round = 10,SELECT T1.duration FROM pitstops AS T1 INNER JOIN races AS T2 ON T1.raceid = T2.raceid INNER JOIN drivers AS T3 ON T1.driverid = T3.driverid INNER JOIN circuits AS T4 ON T2.circuitid = T4.circuitid WHERE T3.forename = 'Lewis' AND T3.surname = 'Hamilton' AND T4.name = 'Austrian Grand Prix Circuit' AND T2.name = 'Austrian Grand Prix',0,0
"In Scotland Premier League, which away team won the most during the 2010 season?",challenging,SELECT teamInfo.team_long_name FROM League AS leagueData INNER JOIN Match AS matchData ON leagueData.id = matchData.league_id INNER JOIN Team AS teamInfo ON matchData.away_team_api_id = teamInfo.team_api_id WHERE leagueData.name = 'Scotland Premier League' AND matchData.season = '2009/2010' AND matchData.away_team_goal - matchData.home_team_goal > 0 GROUP BY matchData.away_team_api_id ORDER BY COUNT(*) DESC LIMIT 1,SELECT Team.team_long_name FROM match JOIN team ON match.away_team_api_id = team.team_api_id JOIN league ON match.league_id = league.id WHERE league.name = 'Scotland Premier League' AND match.season = '2009/2010' AND match.away_team_goal > match.home_team_goal GROUP BY match.away_team_api_id ORDER BY COUNT(*) DESC LIMIT 1,SELECT T1.team_long_name FROM team AS T1 INNER JOIN match AS T2 ON T1.team_api_id = T2.away_team_api_id WHERE T2.league_id = (SELECT T3.id FROM league AS T3 WHERE T3.name = 'Scotland Premier League') AND T2.season = '2009/2010' AND T2.away_team_goal > T2.home_team_goal GROUP BY T1.team_long_name ORDER BY COUNT(*) DESC LIMIT 1,1,0
"At present, calculate for the player's age who have a sprint speed of no less than 97 between 2013 to 2015.",challenging,"SELECT DISTINCT DATETIME() - T2.birthday age FROM Player_Attributes AS t1 INNER JOIN Player AS t2 ON t1.player_api_id = t2.player_api_id WHERE STRFTIME('%Y',t1.`date`) >= '2013' AND STRFTIME('%Y',t1.`date`) <= '2015' AND t1.sprint_speed >= 97",NULL,"SELECT player_name, (DATETIME() - birthday) AS age FROM player_attributes AS T1 INNER JOIN player AS T2 ON T1.player_api_id = T2.player_api_id WHERE sprint_speed >= 97 AND YEAR(date) >= '2013' AND YEAR(date) <= '2015'",0,0
List the long name of teams with above-average build-up play passing in 2012.,challenging,"SELECT DISTINCT t4.team_long_name FROM Team_Attributes AS t3 INNER JOIN Team AS t4 ON t3.team_api_id = t4.team_api_id WHERE SUBSTR(t3.`date`, 1, 4) = '2012' AND t3.buildUpPlayPassing > ( SELECT CAST(SUM(t2.buildUpPlayPassing) AS REAL) / COUNT(t1.id) FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE STRFTIME('%Y',t2.`date`) = '2012')","SELECT team_long_name FROM team WHERE team_api_id IN (   SELECT team_api_id   FROM team_attributes   WHERE buildUpPlayPassing > (     SELECT AVG(buildUpPlayPassing)     FROM team_attributes     WHERE buildUpPlayPassing IS NOT NULL   )   AND strftime('%Y', date) = '2012' ) ","SELECT team_long_name FROM team_attributes AS T1 INNER JOIN team AS T2 ON T1.team_api_id = T2.team_api_id WHERE strftime('%Y', T1.date) = '2012' AND T1.buildUpPlayPassing > (SELECT AVG(buildUpPlayPassing) FROM team_attributes WHERE buildUpPlayPassing IS NOT NULL)",0,0
"Calculate the percentage of players who prefer left foot, who were born between 1987 and 1992.",challenging,"SELECT CAST(COUNT(CASE WHEN t2.preferred_foot = 'left' THEN t1.id ELSE NULL END) AS REAL) * 100 / COUNT(t1.id) percent FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE SUBSTR(t1.birthday, 1, 4) BETWEEN '1987' AND '1992'",NULL,"SELECT DIVIDE(MULTIPLY((SUM(preferred_foot = 'left'), 100)), COUNT(player_fifa_api_id)) FROM player_attributes AS T1 INNER JOIN player AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE YEAR(T2.birthday) BETWEEN '1987' AND '1992'",0,0
"For the teams with normal build-up play dribbling class in 2014, List the names of the teams with less than average chance creation passing, in descending order of chance creation passing.",challenging,"SELECT t3.team_long_name FROM Team AS t3 INNER JOIN Team_Attributes AS t4 ON t3.team_api_id = t4.team_api_id WHERE t4.buildUpPlayDribblingClass = 'Normal' AND t4.chanceCreationPassing < ( SELECT CAST(SUM(t2.chanceCreationPassing) AS REAL) / COUNT(t1.id) FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t2.buildUpPlayDribblingClass = 'Normal' AND SUBSTR(t2.`date`, 1, 4) = '2014') ORDER BY t4.chanceCreationPassing DESC",SELECT team_long_name FROM team WHERE team_api_id IN (   SELECT team_api_id   FROM team_attributes   WHERE buildUpPlayDribblingClass = 'Normal'     AND date >= '2014-01-01 00:00:00'     AND date <= '2014-01-31 00:00:00' ) AND team_api_id IN (   SELECT team_api_id   FROM team_attributes   WHERE chanceCreationPassing < (     SELECT AVG(chanceCreationPassing)     FROM team_attributes   ) ) ORDER BY chanceCreationPassing DESC,"SELECT team_long_name, chanceCreationPassing FROM team_attributes INNER JOIN team ON team_attributes.team_api_id = team.team_api_id WHERE buildUpPlayDribblingClass = 'Normal' AND date >= '2014-01-01 00:00:00' AND date <= '2014-01-31 00:00:00' AND chanceCreationPassing < (SELECT AVG(chanceCreationPassing) FROM team_attributes) ORDER BY chanceCreationPassing DESC",0,0
List the name of leagues in which the average goals by the home team is higher than the away team in the 2009/2010 season.,challenging,SELECT t1.name FROM League AS t1 INNER JOIN Match AS t2 ON t1.id = t2.league_id WHERE t2.season = '2009/2010' GROUP BY t1.name HAVING (CAST(SUM(t2.home_team_goal) AS REAL) / COUNT(DISTINCT t2.id)) - (CAST(SUM(t2.away_team_goal) AS REAL) / COUNT(DISTINCT t2.id)) > 0,SELECT DISTINCT League.name FROM League JOIN Match ON League.id = Match.league_id WHERE Match.season = '2009/2010' GROUP BY League.name HAVING AVG(Match.home_team_goal) > AVG(Match.away_team_goal),SELECT League.name FROM League INNER JOIN Match ON League.id = Match.league_id WHERE Match.season = '2009/2010' AND AVG(Match.home_team_goal) > AVG(Match.away_team_goal),1,0
Who has the highest average finishing rate between the highest and shortest football player?,challenging,"SELECT A FROM ( SELECT AVG(finishing) result, 'Max' A FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height = ( SELECT MAX(height) FROM Player ) UNION SELECT AVG(finishing) result, 'Min' A FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height = ( SELECT MIN(height) FROM Player ) ) ORDER BY result DESC LIMIT 1","SELECT player_name FROM player WHERE player_api_id = (   SELECT player_api_id   FROM (     SELECT player_api_id, AVG(finishing) AS avg_finishing     FROM player_attributes     GROUP BY player_api_id   ) AS subquery   WHERE avg_finishing = (     SELECT MAX(avg_finishing)     FROM (       SELECT AVG(finishing) AS avg_finishing       FROM player_attributes       GROUP BY player_api_id     ) AS subquery2   ) ) OR player_api_id = (   SELECT player_api_id   FROM (     SELECT player_api_id, AVG(finishing) AS avg_finishing     FROM player_attributes     GROUP BY player_api_id   ) AS subquery   WHERE avg_finishing = (     SELECT MIN(avg_finishing)     FROM (       SELECT AVG(finishing) AS avg_finishing       FROM player_attributes       GROUP BY player_api_id     ) AS subquery2   ) )",SELECT player_name FROM player_attributes AS T1 INNER JOIN player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.finishing = (SELECT MAX(AVG(finishing)) FROM player_attributes) AND T2.height = (SELECT MAX(height) FROM player) OR T2.height = (SELECT MIN(height) FROM player),0,0
"List the football team that has a build up play speed of 31, build up plan dribbling of 53, and build up play passing of 32. Only indicate the short name of the team.",challenging,SELECT DISTINCT t1.team_short_name FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t2.buildUpPlaySpeed = 31 AND t2.buildUpPlayDribbling = 53 AND t2.buildUpPlayPassing = 32,SELECT team_short_name FROM team_attributes JOIN team ON team_attributes.team_api_id = team.team_api_id WHERE buildUpPlaySpeed = 31 AND buildUpPlayDribbling = 53 AND buildUpPlayPassing = 32,SELECT team_short_name FROM team_attributes AS T1 INNER JOIN team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.buildupplayspeed = 31 AND T1.buildupplaydribbling = 53 AND T1.buildupplaypassing = 32,1,1
"What is the difference of the average ball control score between Abdou Diallo and Aaron Appindangoye
?",challenging,SELECT CAST(SUM(CASE WHEN t1.player_name = 'Abdou Diallo' THEN t2.ball_control ELSE 0 END) AS REAL) / COUNT(CASE WHEN t1.player_name = 'Abdou Diallo' THEN t2.id ELSE NULL END) - CAST(SUM(CASE WHEN t1.player_name = 'Aaron Appindangoye' THEN t2.ball_control ELSE 0 END) AS REAL) / COUNT(CASE WHEN t1.player_name = 'Aaron Appindangoye' THEN t2.id ELSE NULL END) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id,SELECT AVG(ball_control WHERE player_name = 'Abdou Diallo') - AVG(ball_control WHERE player_name = 'Aaron Appindangoye') AS ball_control_difference,SELECT (SELECT AVG(ball_control) FROM player_attributes WHERE player_name = 'Abdou Diallo') - (SELECT AVG(ball_control) FROM player_attributes WHERE player_name = 'Aaron Appindangoye'),0,0
"Among the players born before the year 1986, how many of them would remain in his position and defense while the team attacked?",challenging,"SELECT COUNT(DISTINCT t1.player_name) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE STRFTIME('%Y',t1.birthday) < '1986' AND t2.defensive_work_rate = 'high'","SELECT COUNT(DISTINCT player_api_id) FROM player_attributes WHERE player_api_id IN (   SELECT player_api_id   FROM player   WHERE strftime('%Y', birthday) < '1986' ) AND defensive_work_rate = 'high'","SELECT COUNT(DISTINCT T1.player_api_id) FROM player_attributes AS T1 INNER JOIN player AS T2 ON T1.player_api_id = T2.player_api_id WHERE strftime('%Y', T2.birthday)<'1986' AND T1.defensive_work_rate = 'high'",1,1
How much higher in percentage is Ariel Borysiuk's overall rating than that of Paulin Puel?,challenging,SELECT (SUM(CASE WHEN t1.player_name = 'Ariel Borysiuk' THEN t2.overall_rating ELSE 0 END) * 1.0 - SUM(CASE WHEN t1.player_name = 'Paulin Puel' THEN t2.overall_rating ELSE 0 END)) * 100 / SUM(CASE WHEN t1.player_name = 'Paulin Puel' THEN t2.overall_rating ELSE 0 END) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id,NULL,SELECT (T1.overall_rating - T2.overall_rating) / T2.overall_rating * 100 FROM player_attributes AS T1 INNER JOIN player_attributes AS T2 ON T1.player_name = 'Ariel Borysiuk' AND T2.player_name = 'Paulin Puel',0,0
What was the average overall rating for Marko Arnautovic from 2007/2/22 to 2016/4/21?,challenging,"SELECT CAST(SUM(t2.overall_rating) AS REAL) / COUNT(t2.id) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_fifa_api_id = t2.player_fifa_api_id WHERE t1.player_name = 'Marko Arnautovic' AND SUBSTR(t2.`date`, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21'",SELECT AVG(overall_rating) FROM player_attributes WHERE player_name = 'Marko Arnautovic' AND date BETWEEN '2007-02-22' AND '2016-04-21',"SELECT AVG(T1.overall_rating) FROM player_attributes AS T1 INNER JOIN player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Marko Arnautovic' AND strftime('%Y-%m-%d', T1.date) BETWEEN '2007-02-22' AND '2016-04-21'",0,1
What percentage is Landon Donovan's overall rating higher than Jordan Bowery on 2013/7/12?,challenging,"SELECT (SUM(CASE WHEN t1.player_name = 'Landon Donovan' THEN t2.overall_rating ELSE 0 END) * 1.0 - SUM(CASE WHEN t1.player_name = 'Jordan Bowery' THEN t2.overall_rating ELSE 0 END)) * 100 / SUM(CASE WHEN t1.player_name = 'Landon Donovan' THEN t2.overall_rating ELSE 0 END) LvsJ_percent FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_fifa_api_id = t2.player_fifa_api_id WHERE SUBSTR(t2.`date`, 1, 10) = '2013-07-12'",SELECT (   (     SELECT overall_rating     FROM player_attributes     WHERE player_name = 'Landon Donovan'       AND date = '2013-07-12'   ) - (     SELECT overall_rating     FROM player_attributes     WHERE player_name = 'Jordan Bowery'       AND date = '2013-07-12'   ) ) / (   SELECT overall_rating   FROM player_attributes   WHERE player_name = 'Landon Donovan'     AND date = '2013-07-12' ) * 100 AS percentage,SELECT (T1.overall_rating - T2.overall_rating) / T1.overall_rating * 100 FROM player_attributes AS T1 INNER JOIN player_attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.date = '2013-07-12' AND T2.date = '2013-07-12' AND T1.player_name = 'Landon Donovan' AND T2.player_name = 'Jordan Bowery',0,0
"What was the final score for the match on September 24, 2008, in the Belgian Jupiler League between the home team and the away team?",challenging,"SELECT t2.home_team_goal, t2.away_team_goal FROM League AS t1 INNER JOIN Match AS t2 ON t1.id = t2.league_id WHERE t1.name = 'Belgium Jupiler League' AND t2.`date` LIKE '2008-09-24%'","SELECT home_team_goal, away_team_goal FROM match WHERE date = '2008-09-24' AND league_id = (SELECT id FROM league WHERE name = 'Belgium Jupiler League') AND home_team_api_id = (SELECT team_api_id FROM team WHERE team_long_name = 'home team') AND away_team_api_id = (SELECT team_api_id FROM team WHERE team_long_name = 'away team')","SELECT home_team_goal, away_team_goal FROM match WHERE date LIKE '2008-09-24%' AND league_id = (SELECT id FROM league WHERE name = 'Belgium Jupiler League') AND home_team_api_id = (SELECT team_api_id FROM team WHERE team_long_name = 'Home Team') AND away_team_api_id = (SELECT team_api_id FROM team WHERE team_long_name = 'Away Team')",0,0
"For in-patient age 50 and above, what is their average anti-cardiolipin antibody (IgG) concentration?",challenging,"SELECT AVG(T2.`aCL IgG`) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) >= 50 AND T1.Admission = '+'","SELECT AVG(aCL IgG) FROM examination JOIN patient ON examination.id = patient.id WHERE Admission = '+' AND SUBTRACT(year(current_timestamp), year(Birthday)) >= '50'","SELECT AVG(T1.aCL IgG) FROM examination AS T1 INNER JOIN patient AS T2 ON T1.id = T2.id WHERE T2.Admission = '+' AND SUBTRACT(year(current_timestamp), year(T2.Birthday)) >= '50'",0,0
"The oldest SJS patient's medical laboratory work was completed on what date, and what age was the patient when they initially arrived at the hospital?",challenging,"SELECT T1.Date, STRFTIME('%Y', T2.`First Date`) - STRFTIME('%Y', T2.Birthday),T2.Birthday FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'SJS' AND T2.Birthday IS NOT NULL ORDER BY T2.Birthday ASC LIMIT 1","SELECT date, (SUBTRACT(year(`First Date`)), year(Birthday)) AS age FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE diagnosis = 'SJS' ORDER BY age DESC LIMIT 1","SELECT T1.Date, (SUBTRACT(year(T1.Date), year(T2.Birthday))) AS Age FROM laboratory AS T1 INNER JOIN patient AS T2 ON T1.id = T2.id WHERE T2.diagnosis = 'SJS' AND T2.birthday = (SELECT MAX(birthday) FROM patient WHERE diagnosis = 'SJS')",0,0
What is the ratio of male to female patients among all those with abnormal uric acid counts?,challenging,SELECT CAST(SUM(CASE WHEN T2.UA <= 8.0 AND T1.SEX = 'M' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.UA <= 6.5 AND T1.SEX = 'F' THEN 1 ELSE 0 END) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID,NULL,"SELECT DIVIDE(SUM(UA <= '8.0' and SEX = 'M'), SUM(UA <= '6.5 and SEX = 'F')) FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T2.UA <= '8.0' AND T1.SEX = 'M' OR T2.UA <= '6.5' AND T1.SEX = 'F'",0,0
How many underage patients were examined during the course of the three-year period from 1990 to 1993?,challenging,"SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T2.`Examination Date`) BETWEEN '1990' AND '1993' AND STRFTIME('%Y', T2.`Examination Date`) - STRFTIME('%Y', T1.Birthday) < 18",SELECT COUNT(*) FROM Examination WHERE year(Birthday) < 18 AND year(`Examination Date`) between '1990' and '1993',SELECT COUNT(T1.id) FROM examination AS T1 INNER JOIN patient AS T2 ON T1.id = T2.id WHERE year(T2.Birthday) < 18 AND year(T1.`Examination Date`) BETWEEN '1990' AND '1993',0,0
"What is the most common illness that doctors identified among the patients whose lab work was done between 1/1/1985, and 12/31/1995?",challenging,SELECT T2.Diagnosis FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.`Examination Date` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY T2.Diagnosis ORDER BY COUNT(T2.Diagnosis) DESC LIMIT 1,"SELECT Diagnosis, COUNT(*) AS Count FROM Examination WHERE `Examination Date` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY Diagnosis ORDER BY Count DESC LIMIT 1","SELECT Diagnosis, COUNT(Diagnosis) AS Count FROM examination WHERE `Examination Date` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY Diagnosis ORDER BY Count DESC LIMIT 1",0,0
"For the patient who was diagnosed SLE on 1997/1/27, what was his/her original diagnose when he/she came to the hospital for the first time?",challenging,SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.ID = ( SELECT ID FROM Examination WHERE `Examination Date` = '1997-01-27' AND Diagnosis = 'SLE' ) AND T2.`Examination Date` = T1.`First Date`,SELECT patient.diagnosis FROM patient WHERE patient.id = (   SELECT examination.id   FROM examination   WHERE examination.`diagnosis` = 'SLE'   AND examination.`examination date` = '1997-01-27' ) AND patient.`first date` = (   SELECT MIN(patient.`first date`)   FROM patient   WHERE patient.id = (     SELECT examination.id     FROM examination     WHERE examination.`diagnosis` = 'SLE'     AND examination.`examination date` = '1997-01-27'   ) ),SELECT T2.Diagnosis FROM examination AS T1 INNER JOIN patient AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'SLE' AND T1.`Examination Date` = '1997-01-27',1,1
"For the patient who was born on 1959/2/18, what is the decrease rate for his/her total cholesterol from November to December in 1981?",challenging,SELECT CAST((SUM(CASE WHEN T2.Date LIKE '1981-11-%' THEN T2.`T-CHO` ELSE 0 END) - SUM(CASE WHEN T2.Date LIKE '1981-12-%' THEN T2.`T-CHO` ELSE 0 END)) AS REAL) / SUM(CASE WHEN T2.Date LIKE '1981-12-%' THEN T2.`T-CHO` ELSE 0 END) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday = '1959-02-18',"SELECT calculation FROM (   SELECT     SUM(Birthday = '1959-02-18' AND Date LIKE '1981-11-%' THEN `T-CHO`) AS NovemberTotalCholesterol,     SUM(Birthday = '1959-02-18' AND Date LIKE '1981-12-%' THEN `T-CHO`) AS DecemberTotalCholesterol,     NovemberTotalCholesterol - DecemberTotalCholesterol AS calculation   FROM laboratory ) WHERE calculation IS NOT NULL",SELECT (SUM(T1.`T-CHO`)-SUM(T2.`T-CHO`)) / SUM(T1.`T-CHO`) FROM laboratory AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T1.id = (SELECT id FROM patient WHERE Birthday = '1959-02-18') AND T1.Date LIKE '1981-11-%' AND T2.Date LIKE '1981-12-%',0,0
"What number of patients with a degree of thrombosis level 2 and ANA pattern of only S, have a level of anti-Cardiolip in antibody (IgM) 20% higher than average?",challenging,SELECT COUNT(*) FROM Examination WHERE Thrombosis = 2 AND `ANA Pattern` = 'S' AND `aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination WHERE Thrombosis = 2 AND `ANA Pattern` = 'S'),"SELECT COUNT(*) FROM examination WHERE thrombosis = 2 AND ana_pattern = 'S' AND acl_igm > (SELECT AVG(acl_igm) * 1.2 FROM examination)  Question: What is the average age of patients with a diagnosis of ""rheumatoid arthritis"" who have a level of anti-Cardiolip in antibody (IgM) 20% higher than average?  Answer: SELECT AVG(DATE('now') - DATE(birthday)) FROM patient WHERE diagnosis = 'rheumatoid arthritis' AND id IN (   SELECT id   FROM examination   WHERE acl_igm > (SELECT AVG(acl_igm) * 1.2 FROM examination) )  Question: What is the average age of patients with a diagnosis of ""rheumatoid arthritis"" who have a level of anti-Cardiolip in antibody (IgM) 20% higher than average?  Answer: SELECT AVG(DATE('now') - DATE(birthday)) FROM patient WHERE diagnosis = 'rheumatoid arthritis' AND id IN (   SELECT id   FROM examination   WHERE acl_igm > (SELECT AVG(acl_igm) * 1.2 FROM examination) )  Question: What is the average age of patients with a diagnosis of ""rheumatoid arthritis"" who have a level of anti-Cardiolip in antibody (IgM) 20% higher than average?  Answer: SELECT AVG(DATE('now') - DATE(birthday)) FROM patient WHERE diagnosis = 'rheumatoid arthritis' AND id IN (   SELECT id   FROM examination   WHERE acl_igm > (SELECT AVG(acl_igm) * 1.2 FROM examination) )  Question: What is the average age of patients with a diagnosis of ""rheumatoid arthritis"" who have a level of anti-Cardiolip in antibody (IgM) 20% higher than average?  Answer: SELECT AVG(DATE('now') - DATE(birthday)) FROM patient WHERE diagnosis = 'rheumatoid arthritis' AND id IN (   SELECT id   FROM examination   WHERE acl_igm > (SELECT AVG(acl_igm) * 1.2 FROM examination) )  Question: What is the average age of patients with a diagnosis of ""rheumatoid arthritis"" who have a level of anti-Cardiolip in antibody (IgM) 20% higher than average?  Answer: SELECT AVG(DATE('now') - DATE(birthday)) FROM patient WHERE diagnosis = 'rheumatoid arthritis' AND id IN (   SELECT id   FROM examination   WHERE acl_igm > (SELECT AVG(acl_igm) * 1.2 FROM examination) )  ",SELECT COUNT(T1.id) FROM examination AS T1 INNER JOIN patient AS T2 ON T1.id = T2.id INNER JOIN laboratory AS T3 ON T1.id = T3.id WHERE T1.thrombosis = 2 AND T1.ana = 'S' AND T3.`aCL IgM` > (SELECT AVG(T4.`aCL IgM`) FROM examination AS T5 INNER JOIN patient AS T6 ON T5.id = T6.id INNER JOIN laboratory AS T7 ON T5.id = T7.id WHERE T5.thrombosis = 2 AND T5.ana = 'S'),0,0
What percentage of patients with a proteinuria level within the normal range have a uric acid level below the normal range?,challenging,SELECT CAST(SUM(CASE WHEN UA <= 6.5 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM Laboratory WHERE `U-PRO` > 0 AND `U-PRO` < 30,NULL,SELECT (COUNT(T1.id) * 100.0 / (SELECT COUNT(*) FROM patient)) FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T2.`U-PRO` > 0 AND T2.`U-PRO` < 30 AND T2.UA <= 6.5,0,0
What percentage of male patients who first presented to the hospital in 1981 were diagnosed with BEHCET?,challenging,"SELECT CAST(SUM(CASE WHEN Diagnosis = 'BEHCET' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM Patient WHERE STRFTIME('%Y', `First Date`) = '1981' AND SEX = 'M'",SELECT (COUNT(SEX = 'M' AND YEAR(`FIRST DATE`) = '1981' AND DIAGNOSIS = 'BEHCET') * 100.0 / COUNT(SEX = 'M' AND YEAR(`FIRST DATE`) = '1981')) AS percentage FROM patient,"SELECT DIVIDE(SUM(DIAGNOSIS = 'BEHCET') WHERE YEAR(`FIRST DATE`) = '1981', MULTIPLY(COUNT(YEAR(`FIRST DATE`) = '1981'), 100)) FROM patient WHERE SEX = 'M'",0,0
List all patients who were followed up at the outpatient clinic who underwent a laboratory test in October 1991 and had a total blood bilirubin level within the normal range.,challenging,SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.`T-BIL` < 2.0 AND T2.Date LIKE '1991-10-%',SELECT * FROM patient WHERE Admission = '-' AND Date LIKE '1991-10%' AND T-BIL < 2.0,SELECT T1.id FROM patient AS T1 INNER JOIN examination AS T2 ON T1.id = T2.id INNER JOIN laboratory AS T3 ON T1.id = T3.id WHERE T1.admission = '-' AND T3.date LIKE '1991-10%' AND T3.t_bil < 2.0,0,0
"What sex is the patient who in a medical examination was diagnosed with PSS and in a laboratory examination had a blood level of C-reactive protein de 2+, createnine 1 and LDH 123?",challenging,SELECT T1.SEX FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T3.ID = T2.ID WHERE T2.Diagnosis = 'PSS' AND T3.CRP = '2+' AND T3.CRE = 1.0 AND T3.LDH = 123,SELECT patient.sex FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE examination.diagnosis = 'PSS' AND laboratory.crp > 2 AND laboratory.cre = 1 AND laboratory.ldh = 123,SELECT T1.sex FROM patient AS T1 INNER JOIN examination AS T2 ON T1.id = T2.id INNER JOIN laboratory AS T3 ON T1.id = T3.id WHERE T2.diagnosis = 'PSS' AND T3.CRP > 2 AND T3.CRE = 1 AND T3.LDH = 123,1,1
How many male patients who underwent testing between 1995 and 1997 and were subsequently diagnosed with Behcet disease did not stay in the hospital for treatment?,challenging,"SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'Behcet' AND T1.SEX = 'M' AND STRFTIME('%Y', T2.`Examination Date`) BETWEEN '1995' AND '1997' AND T1.Admission = '-'",SELECT COUNT(*) FROM patient WHERE SEX = 'M' AND `Examination Date` BETWEEN '1995' AND '1997' AND Diagnosis = 'Behcet' AND Admission = '-',SELECT COUNT(T1.ID) FROM examination AS T1 INNER JOIN patient AS T2 ON T1.ID = T2.ID WHERE T2.SEX = 'M' AND T1.`Examination Date` BETWEEN '1995' AND '1997' AND T1.Diagnosis = 'Behcet' AND T2.Admission = '-',0,0
Are there more male patients with creatinine not within the normal range than female? True or False?,challenging,SELECT CASE WHEN SUM(CASE WHEN T1.SEX = 'M' THEN 1 ELSE 0 END) > SUM(CASE WHEN T1.SEX = 'F' THEN 1 ELSE 0 END) THEN 'True' ELSE 'False' END FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE >= 1.5,SELECT (SUM(SEX = 'M') > SUM(SEX = 'F')) AS result FROM patient WHERE EXISTS (   SELECT 1   FROM laboratory   WHERE patient.id = laboratory.id   AND laboratory.cre >= 1.5 ),SELECT (SUM(SEX = 'M') > SUM(SEX = 'F')) FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T2.cre >= 1.5,0,0
"For patient born between 1936-1956, how many male patients have creatinine phosphokinase beyond the normal range?",challenging,"SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.Birthday) BETWEEN '1936' AND '1956' AND T1.SEX = 'M' AND T2.CPK >= 250",SELECT COUNT(DISTINCT patient.id) FROM patient JOIN examination ON patient.id = examination.id WHERE year(patient.birthday) BETWEEN '1936' AND '1956' AND patient.sex = 'M' AND examination.cpk >= 250,SELECT COUNT(DISTINCT T1.id) FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE year(T1.Birthday) BETWEEN '1936' AND '1956' AND T1.sex = 'M' AND T2.CPK >= 250,0,0
"Provide ID, sex and age of patient who has blood glucose (GLU) not within normal range but with total cholesterol(T-CHO) within normal range.",challenging,"SELECT DISTINCT T1.ID, T1.SEX , STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GLU >= 180 AND T2.`T-CHO` < 250","SELECT p.id, p.sex, SUBTRACT(year(current_timestamp), year(p.birthday)) AS age FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.glu >= 180 AND l.t_cho < 250","SELECT T1.id, T1.sex, age FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T2.GLU >= 180 AND T2.`T-CHO` < 250",0,0
"For all the female patient age 50 and above, who has abnormal red blood cell count. State if they were admitted to hospital.",challenging,"SELECT DISTINCT T1.ID, T1.Admission FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (T2.RBC <= 3.5 OR T2.RBC >= 6.0) AND STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) >= 50","SELECT patient.id, patient.admission FROM patient WHERE patient.sex = 'F' AND SUBTRACT(year(current_timestamp), year(patient.birthday)) >= 50 AND (patient.rbc <= 3.5 OR patient.rbc >= 6.0)","SELECT T1.Admission FROM patient AS T1 INNER JOIN examination AS T2 ON T1.id = T2.id INNER JOIN laboratory AS T3 ON T1.id = T3.id WHERE T1.Sex = 'F' AND SUBTRACT(year(current_timestamp), year(T1.Birthday)) >= 50 AND (T3.RBC <= 3.5 OR T3.RBC >= 6.0)",0,0
Name the ID and age of patient with two or more laboratory examinations which show their hematoclit level exceeded the normal range.,challenging,"SELECT DISTINCT T1.ID, STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.ID IN ( SELECT ID FROM Laboratory WHERE HCT >= 52 GROUP BY ID HAVING COUNT(ID) >= 2 )","SELECT p.id, age FROM patient p JOIN laboratory l ON p.id = l.id WHERE age > 2 AND l.hct >= 52 GROUP BY p.id HAVING COUNT(l.id) > 2","SELECT T1.ID, T1.Age FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Age > 2 AND T2.HCT >= 52",0,0
"For patients with abnormal platelet level, state the number of patients with lower than normal range. How is it compare to the number of patients with higher than normal range?",challenging,SELECT SUM(CASE WHEN T2.PLT <= 100 THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.PLT >= 400 THEN 1 ELSE 0 END) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID,NULL,SELECT COUNT(T1.id) FROM laboratory AS T1 INNER JOIN patient AS T2 ON T1.id = T2.id WHERE T1.plt < 100 AND T1.plt > 400,0,0
"For laboratory examinations take in 1984, list all patients below 50 years old with normal platelet level.",challenging,"SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.PLT BETWEEN 100 AND 400 AND STRFTIME('%Y', T2.Date) - STRFTIME('%Y', T1.Birthday) < 50 AND STRFTIME('%Y', T2.Date) = '1984'","SELECT * FROM patient WHERE SUBTRACT(year(current_timestamp), year(Birthday)) < 50 AND id IN (   SELECT id   FROM laboratory   WHERE PLT BETWEEN 100 AND 400   AND YEAR(Date) = '1984' ) ","SELECT T1.id, T1.sex, T1.birthday, T1.description, T1.first_date, T1.admission, T1.diagnosis FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE YEAR(T2.date) = '1984' AND SUBTRACT(year(current_timestamp), year(T1.Birthday)) < 50 AND T2.PLT BETWEEN 100 AND 400",0,0
"For all patients who are older than 55 years old, what is the percentage of female who has abnormal prothrombin time (PT)?",challenging,"SELECT CAST(SUM(CASE WHEN T2.PT >= 14 AND T1.SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) > 55","SELECT percentage FROM (   SELECT SUM(PT >= 14 AND SEX = 'F') AS female_count,          SUM(PT >= 14) AS total_count,          (SUM(PT >= 14 AND SEX = 'F') / SUM(PT >= 14)) * 100 AS percentage   FROM patient   WHERE SUBTRACT(year(current_timestamp), year(Birthday)) > 55 ) WHERE total_count > 0","SELECT (SUM(T1.PT >= 14 AND T2.SEX = 'F') / SUM(T1.PT >= 14)) * 100 FROM laboratory AS T1 INNER JOIN patient AS T2 ON T1.id = T2.id WHERE SUBTRACT(year(current_timestamp), year(T2.Birthday)) > 55",0,0
"Among the male patients who have a normal level of white blood cells, how many of them have an abnormal fibrinogen level?",challenging,SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.FG <= 150 OR T2.FG >= 450 AND T2.WBC > 3.5 AND T2.WBC < 9.0 AND T1.SEX = 'M',SELECT COUNT(*) FROM patient WHERE Sex = 'M' AND WBC > 3.5 AND WBC < 9.0 AND (FG <= 150 OR FG >= 450),SELECT COUNT(*) FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T1.Sex = 'M' AND T2.WBC > 3.5 AND T2.WBC < 9.0 AND (T2.FG <= 150 OR T2.FG >= 450),0,0
"Among the patients whose creatinine level is abnormal, how many of them aren't 70 yet?",challenging,"SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE >= 1.5 AND STRFTIME('%Y', Date('now')) - STRFTIME('%Y', T1.Birthday) < 70","SELECT COUNT(*) FROM patient WHERE id IN (   SELECT patient_id   FROM examination   WHERE creatinine >= 1.5 ) AND SUBTRACT((YEAR(CURDATE()), YEAR(Birthday))) < 70","SELECT COUNT(*) FROM patient WHERE SUBTRACT((YEAR(CURDATE()), YEAR(Birthday))) < 70 AND id IN (SELECT id FROM laboratory WHERE CRE >= 1.5)",0,0
"Among the patients who has a normal anti-scl70, how many of them are female and does not have any symptom?",challenging,SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T3.ID = T2.ID WHERE (T2.SC170 = 'negative' OR T2.SC170 = '0') AND T1.SEX = 'F' AND T3.Symptoms IS NULL,"SELECT COUNT(DISTINCT patient.id) FROM patient JOIN examination ON patient.id = examination.id WHERE examination.sc170 IN ('negative', '0') AND patient.sex = 'F' AND examination.symptoms IS NULL","SELECT COUNT(DISTINCT T1.id) FROM patient AS T1 INNER JOIN examination AS T2 ON T1.id = T2.id INNER JOIN laboratory AS T3 ON T1.id = T3.id WHERE T3.sc170 IN('negative', '0') AND T1.Sex = 'F' AND T2.symptoms IS NULL",0,1
What is the anti Cardiolipin antibody concentration of the female patient with the highest uric acid level in the normal range?,challenging,"SELECT T3.`aCL IgG`, T3.`aCL IgM`, T3.`aCL IgA` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T3.ID = T2.ID WHERE T1.SEX = 'F' AND T2.UA > 6.5 ORDER BY T2.UA DESC LIMIT 1","SELECT aCL IgG, aCL IgM, aCL IgA FROM examination WHERE Sex = F AND UA > 6.50 ORDER BY UA DESC LIMIT 1","SELECT T1.aCL_IgG, T1.aCL_IgM, T1.aCL_IgA FROM examination AS T1 INNER JOIN patient AS T2 ON T1.id = T2.id INNER JOIN laboratory AS T3 ON T1.id = T3.id WHERE T2.Sex = 'F' AND T3.UA > 6.50 AND T3.UA = (SELECT MAX(UA) FROM laboratory)",0,0
"Among the patients whose total bilirubin is over the normal range, how many of them have a peripheral pattern observed in the sheet of ANA examination?",challenging,SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.`T-BIL` >= 2 AND T3.`ANA Pattern` LIKE '%P%',SELECT COUNT(*) FROM examination WHERE `T-BIL` >= 2.0 AND `ANA Pattern` LIKE '%P%',SELECT COUNT(T1.id) FROM patient AS T1 INNER JOIN examination AS T2 ON T1.id = T2.id INNER JOIN laboratory AS T3 ON T1.id = T3.id WHERE T3.`T-BIL` >= 2.0 AND T2.`ANA Pattern` LIKE '%P%',0,1
"For the patients with a normal range of creatinine phosphokinase, how many of them have a positive measure of degree of coagulation?",challenging,SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.CPK < 250 AND (T3.KCT = '+' OR T3.RVVT = '+' OR T3.LAC = '+'),SELECT COUNT(*) FROM examination WHERE id IN (   SELECT id   FROM laboratory   WHERE cpk < 250 ) AND (kct = '+' OR rvvt = '+' OR lac = '+'),SELECT COUNT(T1.id) FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id INNER JOIN examination AS T3 ON T1.id = T3.id WHERE T2.cpk < 250 AND (T3.kct = '+' OR T3.rvvt = '+' OR T3.lac = '+'),0,1
Please list the patient's ID if he or she has an abnormal level of red blood cell and is followed at the outpatient clinic.,challenging,SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE (T2.RBC <= 3.5 OR T2.RBC >= 6) AND T1.Admission = '-',SELECT patient.id FROM patient WHERE patient.admission = '-' AND (patient.rbc < 3.5 OR patient.rbc > 6.0),SELECT T1.id FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE (T2.rbc < 3.5 OR T2.rbc > 6.0) AND T1.admission = '-',0,0
Calculate the total average cost that Elijah Allen spent in the events on September and October.,challenging,"SELECT AVG(T2.cost) FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.last_name = 'Allen' AND T1.first_name = 'Elijah' AND (SUBSTR(T2.expense_date, 6, 2) = '09' OR SUBSTR(T2.expense_date, 6, 2) = '10')","SELECT AVG(cost) FROM expense WHERE link_to_member IN (   SELECT member_id   FROM member   WHERE first_name = 'Elijah' AND last_name = 'Allen' ) AND month(expense_date) IN (9, 10)",SELECT AVG(T2.cost) FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.first_name || ' ' || T1.last_name = 'Elijah Allen' AND (month(T2.expense_date) = 9 OR month(T2.expense_date) = 10),0,0
"How many times was the budget in Advertisement for ""Yearly Kickoff"" meeting more than ""October Meeting""?",challenging,SELECT CAST(SUM(CASE WHEN T2.event_name = 'Yearly Kickoff' THEN T1.amount ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.event_name = 'October Meeting' THEN T1.amount ELSE 0 END) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Advertisement' AND T2.type = 'Meeting',SELECT COUNT(*) FROM (   SELECT budget_id   FROM budget   WHERE category = 'Advertisement'     AND event_name = 'Yearly Kickoff'     AND amount > (       SELECT amount       FROM budget       WHERE category = 'Advertisement'         AND event_name = 'October Meeting'     ) ) AS subquery,SELECT COUNT(*) FROM (SELECT * FROM budget WHERE category = 'Advertisement' AND event_name = 'Yearly Kickoff') AS T1 INNER JOIN (SELECT * FROM budget WHERE category = 'Advertisement' AND event_name = 'October Meeting') AS T2 ON T1.amount > T2.amount,0,0
What is the name of the social event that was attended by the vice president of the Student_Club located at 900 E. Washington St.?,challenging,SELECT T2.event_name FROM attendance AS T1 INNER JOIN event AS T2 ON T2.event_id = T1.link_to_event INNER JOIN member AS T3 ON T1.link_to_member = T3.member_id WHERE T3.position = 'Vice President' AND T2.location = '900 E. Washington St.' AND T2.type = 'Social',SELECT event_name FROM event WHERE type = 'Social' AND location = '900 E. Washington St.' AND event_id IN (   SELECT link_to_event   FROM attendance   WHERE link_to_member IN (     SELECT member_id     FROM member     WHERE position = 'Vice President'   ) ) ,SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id INNER JOIN zip_code AS T4 ON T3.zip = T4.zip_code WHERE T1.type = 'Social' AND T3.position = 'Vice President' AND T4.location = '900 E. Washington St.',1,0
Which members who were approved from 1/10/2019 to 11/19/2019? Please identify the member who attended the event and the link to their event.,challenging,"SELECT DISTINCT T1.link_to_member, T3.link_to_event FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN attendance AS T3 ON T2.member_id = T3.link_to_member WHERE date(SUBSTR(T1.expense_date, 1, 10)) BETWEEN '2019-01-10' AND '2019-11-19' AND T1.approved = 'true'","SELECT member.first_name, member.last_name, member.email, member.position, member.t_shirt_size, member.phone, member.zip, member.link_to_major, attendance.link_to_event FROM member JOIN attendance ON member.member_id = attendance.link_to_member JOIN expense ON attendance.link_to_event = expense.link_to_event WHERE expense.approved = 'true' AND expense.expense_date BETWEEN '2019-01-10' AND '2019-11-19'","SELECT T1.first_name, T1.last_name, T1.email, T1.position, T1.t_shirt_size, T1.phone, T1.zip, T1.link_to_major, T2.link_to_event FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN expense AS T3 ON T2.link_to_event = T3.link_to_budget WHERE T3.approved = 'true' AND T3.expense_date BETWEEN '2019-01-10' AND '2019-11-19'",0,0
Find the name and date of events with expenses for pizza that were more than fifty dollars but less than a hundred dollars.,challenging,"SELECT T1.event_name, T1.event_date FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T3.expense_description = 'Pizza' AND T3.cost > 50 AND T3.cost < 100","SELECT event_name, event_date FROM event WHERE event_id IN (   SELECT link_to_event   FROM budget   WHERE budget_id IN (     SELECT link_to_budget     FROM expense     WHERE expense_description = 'Pizza' AND cost > 50 AND cost < 100   ) )","SELECT event_name, event_date FROM event WHERE event_id IN (SELECT link_to_event FROM budget WHERE budget_id IN (SELECT link_to_budget FROM expense WHERE expense_description = 'Pizza' AND cost > 50 AND cost < 100))",1,1
"Among the members who incurred expenses in more than one event, who paid the most amount?",challenging,SELECT T2.member_id FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN budget AS T3 ON T1.link_to_budget = T3.budget_id INNER JOIN event AS T4 ON T3.link_to_event = T4.event_id GROUP BY T2.member_id HAVING COUNT(DISTINCT T4.event_id) > 1 ORDER BY SUM(T1.cost) DESC LIMIT 1,NULL,"SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.link_to_budget IN (SELECT link_to_budget FROM expense GROUP BY link_to_budget HAVING COUNT(event_id) > 1) AND T2.cost = (SELECT MAX(cost) FROM expense WHERE link_to_budget IN (SELECT link_to_budget FROM expense GROUP BY link_to_budget HAVING COUNT(event_id) > 1))",0,0
Give the full name and contact number of members who had to spend more than average on each expense.,challenging,"SELECT DISTINCT T3.first_name, T3.last_name, T3.phone FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN member AS T3 ON T3.member_id = T1.link_to_member WHERE T1.cost > ( SELECT AVG(T1.cost) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN member AS T3 ON T3.member_id = T1.link_to_member )",NULL,"SELECT T1.first_name, T1.last_name, T1.phone FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.cost > (SELECT AVG(T3.cost) FROM expense AS T3)",0,1
"Write the full name of the member who spent money for water, veggie tray and supplies and include the cost of it.",challenging,"SELECT T2.first_name, T2.last_name, T1.cost FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.expense_description = 'Water, Veggie tray, supplies'","SELECT member.first_name || ' ' || member.last_name AS full_name, expense.cost FROM member JOIN expense ON member.member_id = expense.link_to_member WHERE expense.expense_description = 'Water, Veggie tray, supplies'","SELECT CONCAT(T1.first_name, ' ', T1.last_name), T2.cost FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.expense_description = 'Water, Veggie tray, supplies'",0,0
Write the full names of students who received funds on the date of 9/9/2019 and include the amount received.,challenging,"SELECT DISTINCT T3.first_name, T3.last_name, T4.amount FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T3.member_id = T2.link_to_member INNER JOIN income AS T4 ON T4.link_to_member = T3.member_id WHERE T4.date_received = '2019-09-09'","SELECT member.first_name, member.last_name, income.amount FROM member JOIN income ON member.member_id = income.link_to_member WHERE income.date_received = '9/9/2019'","SELECT CONCAT(T1.first_name, ' ', T1.last_name), T2.amount FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T2.date_received = '9/9/2019'",0,0
What was the difference in gas consumption between CZK-paying customers and EUR-paying customers in 2012?,challenging,"SELECT SUM(IIF(T1.Currency = 'CZK', T2.Consumption, 0)) - SUM(IIF(T1.Currency = 'EUR', T2.Consumption, 0)) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE SUBSTR(T2.Date, 1, 4) = '2012'",SELECT SUM(CASE WHEN c.currency = 'CZK' THEN y.consumption ELSE 0 END) - SUM(CASE WHEN c.currency = 'EUR' THEN y.consumption ELSE 0 END) AS difference_in_consumption FROM yearmonth y JOIN customers c ON y.customerid = c.customerid WHERE y.date BETWEEN 201201 AND 201212,"SELECT SUM(T1.consumption) - (SELECT SUM(T2.consumption) FROM yearmonth AS T2 INNER JOIN customers AS T3 ON T2.customerid = T3.customerid WHERE T3.currency = 'EUR' AND strftime('%Y', T2.date) = '2012') FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.customerid = T2.customerid WHERE T2.currency = 'CZK' AND strftime('%Y', T1.date) = '2012'",1,0
"What is the difference in the annual average consumption of the customers with the least amount of consumption paid in CZK for 2013 between SME and LAM, LAM and KAM, and KAM and SME?",challenging,"SELECT CAST(SUM(IIF(T1.Segment = 'SME', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'LAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) , CAST(SUM(IIF(T1.Segment = 'LAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'KAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) , CAST(SUM(IIF(T1.Segment = 'KAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'SME', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' AND T2.Consumption = ( SELECT MIN(Consumption) FROM yearmonth ) AND T2.Date BETWEEN 201301 AND 201312",NULL,"SELECT (SELECT AVG(T1.consumption) FROM yearmonth AS T1 INNER JOIN customers AS T2 ON T1.customerid = T2.customerid WHERE T2.segment = 'SME' AND T2.currency = 'CZK' AND strftime('%Y', T1.date) = '2013') - (SELECT AVG(T3.consumption) FROM yearmonth AS T3 INNER JOIN customers AS T4 ON T3.customerid = T4.customerid WHERE T4.segment = 'LAM' AND T4.currency = 'CZK' AND strftime('%Y', T3.date) = '2013'), (SELECT AVG(T5.consumption) FROM yearmonth AS T5 INNER JOIN customers AS T6 ON T5.customerid = T6.customerid WHERE T6.segment = 'LAM' AND T6.currency = 'CZK' AND strftime('%Y', T5.date) = '2013') - (SELECT AVG(T7.consumption) FROM yearmonth AS T7 INNER JOIN customers AS T8 ON T7.customerid = T8.customerid WHERE T8.segment = 'KAM' AND T8.currency = 'CZK' AND strftime('%Y', T7.date) = '2013'), (SELECT AVG(T9.consumption) FROM yearmonth AS T9 INNER JOIN customers AS T10 ON T9.customerid = T10.customerid WHERE T10.segment = 'KAM' AND T10.currency = 'CZK' AND strftime('%Y', T9.date) = '2013') - (SELECT AVG(T11.consumption) FROM yearmonth AS T11 INNER JOIN customers AS T12 ON T11.customerid = T12.customerid WHERE T12.segment = 'SME' AND T12.currency = 'CZK' AND strftime('%Y', T11.date) = '2013')",0,0
"Which of the three segments—SME, LAM and KAM—has the biggest and lowest percentage increases in consumption paid in EUR between 2012 and 2013?",challenging,"SELECT CAST((SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2013%', T2.Consumption, 0)) - SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2012%', T2.Consumption, 0))) AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2012%', T2.Consumption, 0)), CAST(SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2013%', T2.Consumption, 0)) - SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) , CAST(SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2013%', T2.Consumption, 0)) - SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID","SELECT segment,        SUM(CASE WHEN date LIKE '2012%' THEN consumption ELSE 0 END) AS consumption_2012,        SUM(CASE WHEN date LIKE '2013%' THEN consumption ELSE 0 END) AS consumption_2013,        (SUM(CASE WHEN date LIKE '2013%' THEN consumption ELSE 0 END) - SUM(CASE WHEN date LIKE '2012%' THEN consumption ELSE 0 END)) / SUM(CASE WHEN date LIKE '2013%' THEN consumption ELSE 0 END) * 100 AS percentage_increase FROM yearmonth JOIN customers ON yearmonth.customerid = customers.customerid WHERE currency = 'EUR' GROUP BY segment ORDER BY percentage_increase DESC","SELECT T1.segment, (T1.consumption - T2.consumption) / T1.consumption * 100 AS percentage_increase FROM yearmonth AS T1 INNER JOIN yearmonth AS T2 ON T1.customerid = T2.customerid AND strftime('%Y', T1.date) = '2013' AND strftime('%Y', T2.date) = '2012' WHERE T1.currency = 'EUR' AND T1.segment IN ('SME', 'LAM', 'KAM') GROUP BY T1.segment ORDER BY percentage_increase DESC",0,0
"For the customer who paid 634.8 in 2012/8/25, what was the consumption decrease rate from Year 2012 to 2013?",challenging,"SELECT CAST(SUM(IIF(SUBSTR(Date, 1, 4) = '2012', Consumption, 0)) - SUM(IIF(SUBSTR(Date, 1, 4) = '2013', Consumption, 0)) AS FLOAT) / SUM(IIF(SUBSTR(Date, 1, 4) = '2012', Consumption, 0)) FROM yearmonth WHERE CustomerID = ( SELECT T1.CustomerID FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-25' AND T1.Price = 634.8 )",SELECT (consumption_2012 - consumption_2013) / consumption_2012 AS consumption_decrease_rate FROM yearmonth WHERE customerid = (   SELECT customerid   FROM transactions_1k   WHERE date = '2012-08-25'   AND amount = 634.8 ) AND date BETWEEN '2012-01-01' AND '2012-12-31' AND customerid IN (   SELECT customerid   FROM yearmonth   WHERE date BETWEEN '2013-01-01' AND '2013-12-31' ) ,SELECT (T1.consumption - T2.consumption) / T1.consumption FROM yearmonth AS T1 INNER JOIN yearmonth AS T2 ON T1.customerid = T2.customerid WHERE T1.date = '2012-08-24' AND T2.date = '2013-08-24' AND T1.consumption > 634.8 AND T2.consumption > 634.8,0,0
