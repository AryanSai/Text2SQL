Question,Difficulty,Ground Truth SQL,Basic Predicted SQL,Advanced Predicted SQL,EX Basic,EX Advanced
"Consider the average difference between K-12 enrollment and 15-17 enrollment of schools that are locally funded, list the names and DOC type of schools which has a difference above this average.",challenging,"SELECT T2.School, T2.DOC FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.FundingType = 'Locally funded' AND (T1.`Enrollment (K-12)` - T1.`Enrollment (Ages 5-17)`) > (SELECT AVG(T3.`Enrollment (K-12)` - T3.`Enrollment (Ages 5-17)`) FROM frpm AS T3 INNER JOIN schools AS T4 ON T3.CDSCode = T4.CDSCode WHERE T4.FundingType = 'Locally funded')","SELECT s.school, s.doctype FROM schools AS s JOIN (     SELECT f.cdscode, (f['enrollment (k-12)'] - f['enrollment (ages 5-17)']) AS diff     FROM frpm AS f     WHERE f['educational option type'] = 'Locally Funded' ) AS subquery ON s.cdscode = subquery.cdscode WHERE subquery.diff > (     SELECT AVG(diff)     FROM (         SELECT (f['enrollment (k-12)'] - f['enrollment (ages 5-17)']) AS diff         FROM frpm AS f         WHERE f['educational option type'] = 'Locally Funded'     ) ) ",NULL,0,0
Under whose administration is the school with the highest number of students scoring 1500 or more on the SAT? Indicate their full names.,challenging,"SELECT T2.AdmFName1, T2.AdmLName1, T2.AdmFName2, T2.AdmLName2, T2.AdmFName3, T2.AdmLName3 FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.NumGE1500 DESC LIMIT 1","SELECT schools.admfname1, schools.admlname1, schools.admfname2, schools.admlname2, schools.admfname3, schools.admlname3 FROM schools JOIN satscores ON schools.cdscode = satscores.cds WHERE satscores.numge1500 = (SELECT MAX(numge1500) FROM satscores)","SELECT T2.AdmFName1, T2.AdmLName1, T2.AdmFName2, T2.AdmLName2, T2.AdmFName3, T2.AdmLName3 FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode INNER JOIN satscores AS T3 ON T1.CDSCode = T3.CDSCode WHERE T3.NumGE1500 >= 1500 ORDER BY T1.`Enrollment (K-12)` DESC LIMIT 1",1,0
What is the total number of non-chartered schools in the county of Los Angeles with a percent (%) of eligible free meals for grades 1 through 12 that is less than 0.18%?,challenging,SELECT COUNT(T2.School) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'Los Angeles' AND T2.Charter = 0 AND CAST(T1.`Free Meal Count (K-12)` AS REAL) * 100 / T1.`Enrollment (K-12)` < 0.18,SELECT COUNT(*)  FROM schools  JOIN frpm ON schools.cdscode = frpm.cdscode  WHERE schools.charter = 0  AND frpm.`county name` = 'Los Angeles'  AND frpm.`percent (%) eligible free (k-12)` < 0.18,NULL,0,0
"Of the schools that offers a magnet program serving a grade span of Kindergarten to 8th grade, how many offers Multiple Provision Types? List the number of cities that offers a Kindergarten to 8th grade span and indicate how many schools are there serving such grade span for each city.",challenging,"SELECT T2.City, COUNT(T2.CDSCode) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.Magnet = 1 AND T2.GSoffered = 'K-8' AND T1.`NSLP Provision Status` = 'Multiple Provision Types' GROUP BY T2.City","SELECT COUNT(DISTINCT s.city) AS NumberOfCities, s.city, COUNT(s.cdscode) AS NumberOfSchools FROM schools AS s JOIN frpm AS f ON s.cdscode = f.cdscode WHERE s.magnet = 1 AND f.low_grade = 'K' AND f.high_grade = '8' AND f.nslp_provision_status = 'Multiple Provision Types' GROUP BY s.city","SELECT T2.City, COUNT(T2.School) FROM schools AS T2 INNER JOIN frpm AS T1 ON T1.CDSCode = T2.CDSCode WHERE T2.Magnet = 1 AND T1.`Low Grade` <= 'K' AND T1.`High Grade` >= '8' AND T1.`NSLP Provision Status` = 'Multiple Provision Types' GROUP BY T2.City",0,1
"What are the valid e-mail addresses of the administrator of the school located in the San Bernardino county, City of San Bernardino City Unified that opened between 1/1/2009 to 12/31/2010 whose school types are public Intermediate/Middle Schools and Unified Schools?",challenging,"SELECT T2.AdmEmail1, T2.AdmEmail2 FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'San Bernardino' AND T2.City = 'San Bernardino' AND T2.DOC = 54 AND strftime('%Y', T2.OpenDate) BETWEEN '2009' AND '2010' AND T2.SOC = 62","SELECT schools.admemail1, schools.admemail2, schools.admemail3 FROM schools JOIN frpm ON schools.cdscode = frpm.cdscode WHERE frpm.county_name = 'San Bernardino' AND schools.city = 'San Bernardino City Unified' AND schools.opendate BETWEEN '2009-01-01' AND '2010-12-31' AND (schools.doc = '54' OR schools.soc = '62') AND schools.admemail1 IS NOT NULL OR schools.admemail2 IS NOT NULL OR schools.admemail3 IS NOT NULL",NULL,0,0
"List out the account numbers of female clients who are oldest and has lowest average salary, calculate the gap between this lowest average salary with the highest average salary?",challenging,"SELECT T1.account_id , ( SELECT MAX(A11) - MIN(A11) FROM district ) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T1.account_id = T3.account_id INNER JOIN client AS T4 ON T3.client_id = T4.client_id WHERE T2.district_id = ( SELECT district_id FROM client WHERE gender = 'F' ORDER BY birth_date ASC LIMIT 1 ) ORDER BY T2.A11 DESC LIMIT 1","SELECT a.account_id, b.a11 as average_salary, (SELECT MAX(a11) FROM district) - b.a11 as gap FROM account a JOIN disp d ON a.account_id = d.account_id JOIN client c ON d.client_id = c.client_id JOIN district b ON c.district_id = b.district_id WHERE c.gender = 'F' ORDER BY c.birth_date ASC LIMIT 1",SELECT T1.account_id FROM account AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T2.gender = 'F' AND T2.birth_date = (SELECT MAX(T3.birth_date) FROM client AS T3 WHERE T3.gender = 'F') AND T1.a11 = (SELECT MIN(T4.a11) FROM account AS T4 INNER JOIN client AS T5 ON T4.district_id = T5.district_id WHERE T5.gender = 'F' AND T5.birth_date = (SELECT MAX(T6.birth_date) FROM client AS T6 WHERE T6.gender = 'F')),0,0
"For the branch which located in the south Bohemia with biggest number of inhabitants, what is the percentage of the male clients?",challenging,SELECT CAST(SUM(T1.gender = 'M') AS REAL) * 100 / COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A3 = 'south Bohemia' GROUP BY T2.A4 ORDER BY T2.A4 DESC LIMIT 1,SELECT    (SELECT      (COUNT(client.client_id) * 100.0) / (SELECT COUNT(*) FROM client)   FROM      client   INNER JOIN      disp    ON      client.client_id = disp.client_id   INNER JOIN      account    ON      disp.account_id = account.account_id   INNER JOIN      district    ON      account.district_id = district.district_id   WHERE      client.gender = 'M' AND district.a3 = 'south Bohemia'   ) AS male_clients_percentage,SELECT (SELECT COUNT(*) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id WHERE T1.gender = 'M' AND T3.district_id = T2.account_id) / (SELECT COUNT(*) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id WHERE T3.district_id = T2.account_id) * 100 AS Percentage FROM district AS T3 ORDER BY T3.a4 DESC LIMIT 1,0,0
"For the client whose loan was approved first in 1993/7/5, what is the increase rate of his/her account balance from 1993/3/22 to 1998/12/27?",challenging,"SELECT CAST((SUM(IIF(T3.date = '1998-12-27', T3.balance, 0)) - SUM(IIF(T3.date = '1993-03-22', T3.balance, 0))) AS REAL) * 100 / SUM(IIF(T3.date = '1993-03-22', T3.balance, 0)) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN trans AS T3 ON T3.account_id = T2.account_id WHERE T1.date = '1993-07-05'",SELECT    (((SELECT balance FROM trans WHERE account_id = (SELECT account_id FROM loan WHERE status = 'A' AND date = '1993/7/5' LIMIT 1) AND date = '1993/3/22' LIMIT 1)    -    (SELECT balance FROM trans WHERE account_id = (SELECT account_id FROM loan WHERE status = 'A' AND date = '1993/7/5' LIMIT 1) AND date = '1998/12/27' LIMIT 1))    /    ((SELECT balance FROM trans WHERE account_id = (SELECT account_id FROM loan WHERE status = 'A' AND date = '1993/7/5' LIMIT 1) AND date = '1993/3/22' LIMIT 1))    * 100) AS balance_increase_rate,"SELECT (T2.balance - T1.balance) / T1.balance * 100 AS IncreaseRate FROM (SELECT T.balance FROM trans AS T WHERE T.account_id = (SELECT D.account_id FROM disp AS D INNER JOIN client AS C ON D.client_id = C.client_id WHERE C.birth_date = '1993-07-05' LIMIT 1) AND T.date = '1993-03-22') AS T1, (SELECT T.balance FROM trans AS T WHERE T.account_id = (SELECT D.account_id FROM disp AS D INNER JOIN client AS C ON D.client_id = C.client_id WHERE C.birth_date = '1993-07-05' LIMIT 1) AND T.date = '1998-12-27') AS T2",0,0
"For loans contracts which are still running where client are in debt, list the district of the and the state the percentage unemployment rate increment from year 1995 to 1996.",challenging,SELECT CAST((T3.A13 - T3.A12) AS REAL) * 100 / T3.A12 FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.status = 'D',"SELECT d.a2 AS District_Name,         (((d.a13 - d.a12) / d.a12) * 100) AS Unemployment_Increment_Rate FROM loan AS l JOIN account AS a ON l.account_id = a.account_id JOIN district AS d ON a.district_id = d.district_id WHERE l.status = 'D' GROUP BY a.district_id","SELECT T2.a5, ((T2.a13 - T2.a12) / T2.a12) * 100 as UnemploymentIncrement FROM loan AS T1 INNER JOIN district AS T2 ON T1.account_id = T2.district_id WHERE T1.status = 'D'",0,0
"Please list the account types that are not eligible for loans, and the average income of residents in the district where the account is located exceeds $8000 but is no more than $9000.",challenging,SELECT T3.type FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T2.account_id = T3.account_id WHERE T3.type != 'OWNER' AND T1.A11 BETWEEN 8000 AND 9000,SELECT DISTINCT disp.type  FROM disp  INNER JOIN account ON disp.account_id = account.account_id  INNER JOIN district ON account.district_id = district.district_id  WHERE district.a11 > 8000 AND district.a11 <= 9000 AND disp.type != 'OWNER',SELECT DISTINCT T1.type FROM account AS T1 LEFT JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.account_id IS NULL AND T1.district_id IN (SELECT T3.district_id FROM district AS T3 WHERE T3.a11 > 8000 AND T3.a11 <= 9000),1,0
What was the growth rate of the total amount of loans across all accounts for a male client between 1996 and 1997?,challenging,"SELECT CAST((SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1997' THEN T1.amount ELSE 0 END) - SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1996' THEN T1.amount ELSE 0 END)) AS REAL) * 100 / SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1996' THEN T1.amount ELSE 0 END) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN disp AS T3 ON T3.account_id = T2.account_id INNER JOIN client AS T4 ON T4.client_id = T3.client_id WHERE T4.gender = 'M' AND T3.type = 'OWNER'",SELECT    (     (       SELECT          SUM(amount)        FROM          loan        WHERE          account_id IN (           SELECT              account_id            FROM              disp            WHERE              client_id IN (               SELECT                  client_id                FROM                  client                WHERE                  gender = 'M'             )         )          AND date LIKE '1997%'     ) - (       SELECT          SUM(amount)        FROM          loan        WHERE          account_id IN (           SELECT              account_id            FROM              disp            WHERE              client_id IN (               SELECT                  client_id                FROM                  client                WHERE                  gender = 'M'             )         )          AND date LIKE '1996%'     )   ) / (     SELECT        SUM(amount)      FROM        loan      WHERE        account_id IN (         SELECT            account_id          FROM            disp          WHERE            client_id IN (             SELECT                client_id              FROM                client              WHERE                gender = 'M'           )       )        AND date LIKE '1996%'   ) * 100 AS growth_rate,"SELECT (SUM(CASE WHEN strftime('%Y', T1.date) = '1997' THEN T1.amount ELSE 0 END) - SUM(CASE WHEN strftime('%Y', T1.date) = '1996' THEN T1.amount ELSE 0 END)) / SUM(CASE WHEN strftime('%Y', T1.date) = '1996' THEN T1.amount ELSE 0 END) * 100 AS growth_rate FROM loan AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id WHERE T3.gender = 'M'",0,0
How often does account number 3 request an account statement to be released? What was the aim of debiting 3539 in total?,challenging,"SELECT T1.frequency, T2.k_symbol FROM account AS T1 INNER JOIN (SELECT account_id, k_symbol, SUM(amount) AS total_amount FROM `order` GROUP BY account_id, k_symbol) AS T2 ON T1.account_id = T2.account_id WHERE T1.account_id = 3 AND T2.total_amount = 3539","SELECT COUNT(*) as statement_request_count, k_symbol as purpose_of_debit FROM trans WHERE account_id = 3 AND type = 'withdrawal' GROUP BY k_symbol",SELECT COUNT(*) FROM trans WHERE account_id = 3 AND type = 'withdrawal',0,0
On average how many carcinogenic molecules are single bonded?,challenging,"SELECT AVG(single_bond_count) FROM (SELECT T3.molecule_id, COUNT(T1.bond_type) AS single_bond_count FROM bond AS T1  INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN molecule AS T3 ON T3.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' AND T3.label = '+' GROUP BY T3.molecule_id) AS subquery","SELECT AVG(single_bond_count)  FROM (   SELECT m.molecule_id, COUNT(a.atom_id) as single_bond_count   FROM molecule m   JOIN bond b ON m.molecule_id = b.molecule_id   JOIN connected c ON b.bond_id = c.bond_id   JOIN atom a ON c.atom_id = a.atom_id   WHERE m.label = '+' AND b.bond_type = '-'   GROUP BY m.molecule_id )","SELECT AVG(T2.single_bonds) FROM atom AS T1 INNER JOIN (SELECT T3.molecule_id, COUNT(T4.atom_id) as single_bonds FROM molecule AS T3 INNER JOIN connected AS T4 ON T3.molecule_id = T4.atom_id INNER JOIN bond AS T5 ON T4.bond_id = T5.bond_id WHERE T3.label = '+' AND T5.bond_type = '-' GROUP BY T3.molecule_id) AS T2 ON T1.molecule_id = T2.molecule_id",0,0
What elements are in the TR004_8_9 bond atoms?,challenging,SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR004_8_9',SELECT a.element  FROM atom a  JOIN connected c ON a.atom_id = c.atom_id  JOIN bond b ON c.bond_id = b.bond_id  WHERE b.bond_id = 'TR004_8_9',SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR004_8_9',1,1
What elements are in a double type bond?,challenging,SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id WHERE T2.bond_type = '=',SELECT a1.element  FROM atom a1  JOIN connected c ON a1.atom_id = c.atom_id  JOIN bond b ON c.bond_id = b.bond_id  JOIN atom a2 ON a2.atom_id = c.atom_id2  WHERE b.bond_type = '=',SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '=',0,0
Which element is the least numerous in non-carcinogenic molecules?,challenging,"SELECT T.element FROM (SELECT T1.element, COUNT(DISTINCT T1.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '-' GROUP BY T1.element ORDER BY COUNT(DISTINCT T1.molecule_id) ASC LIMIT 1) t",SELECT a.element  FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = '-' GROUP BY a.element ORDER BY COUNT(a.element) ASC LIMIT 1,SELECT element FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '-') GROUP BY element ORDER BY COUNT(element) ASC LIMIT 1,1,1
How many atoms with iodine and with sulfur type elements are there in single bond molecules?,challenging,"SELECT COUNT(DISTINCT CASE WHEN T1.element = 'i' THEN T1.atom_id ELSE NULL END) AS iodine_nums , COUNT(DISTINCT CASE WHEN T1.element = 's' THEN T1.atom_id ELSE NULL END) AS sulfur_nums FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '-'","SELECT COUNT(DISTINCT atom_id)  FROM atom  JOIN connected ON atom.atom_id = connected.atom_id  JOIN bond ON connected.bond_id = bond.bond_id  WHERE element IN ('i', 's') AND bond_type = '-'",SELECT COUNT(DISTINCT T1.atom_id) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id INNER JOIN atom AS T4 ON T3.atom_id2 = T4.atom_id WHERE (T1.element = 'i' OR T4.element = 'i') AND (T1.element = 's' OR T4.element = 's') AND T2.bond_type = '-',0,0
What percentage of carcinogenic-type molecules does not contain fluorine?,challenging,SELECT CAST(COUNT(DISTINCT CASE WHEN T1.element <> 'f' THEN T2.molecule_id ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T2.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+',SELECT (   (SELECT COUNT(DISTINCT m.molecule_id)    FROM molecule m   LEFT JOIN atom a ON m.molecule_id = a.molecule_id   WHERE m.label = '+' AND a.element != 'f') /   (SELECT COUNT(DISTINCT m.molecule_id)    FROM molecule m   WHERE m.label = '+') ) * 100 AS percentage,SELECT (SELECT COUNT(DISTINCT T1.molecule_id) FROM atom AS T1 WHERE T1.element = 'f' AND T1.molecule_id IN (SELECT T2.molecule_id FROM molecule AS T2 WHERE T2.label = '+')) * 100.0 / (SELECT COUNT(DISTINCT T3.molecule_id) FROM molecule AS T3 WHERE T3.label = '+') AS 'Percentage',1,0
What is the percentage of carcinogenic molecules in triple type bonds?,challenging,SELECT CAST(COUNT(DISTINCT CASE WHEN T2.label = '+' THEN T2.molecule_id ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T2.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type = '#',"SELECT DIVIDE(SUM(CASE WHEN bond_type = '#' THEN 1 ELSE 0 END) * 100, COUNT(molecule_id)) as percent  FROM molecule  INNER JOIN bond ON molecule.molecule_id = bond.molecule_id  WHERE label = '+'","SELECT DIVIDE(SUM(T2.bond_type = '#') * 100, COUNT(T2.bond_id)) as percent FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+'",0,0
Please list top three elements of the toxicology of the molecule TR000 in alphabetical order.,challenging,SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR000' ORDER BY T.element LIMIT 3,SELECT a.element  FROM atom a  JOIN connected c ON a.atom_id = c.atom_id  JOIN bond b ON c.bond_id = b.bond_id  WHERE a.molecule_id = 'TR000'  GROUP BY a.element  ORDER BY a.element ASC  LIMIT 3,SELECT element FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'toxicology') AND atom_id IN (SELECT atom_id FROM connected WHERE bond_id IN (SELECT bond_id FROM bond WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'toxicology'))) AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'TR000') ORDER BY element ASC LIMIT 3,1,0
What are the elements of the toxicology and label of molecule TR060?,challenging,"SELECT DISTINCT T1.element, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR060'","SELECT a.element, m.label  FROM atom a  JOIN molecule m ON a.molecule_id = m.molecule_id  WHERE m.molecule_id = 'TR060'","SELECT T1.element, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = 'toxicology' AND T2.molecule_id = 'TR060'",1,0
Which bond type accounted for the majority of the bonds found in molecule TR010 and state whether or not this molecule is carcinogenic?,challenging,"SELECT T.bond_type FROM ( SELECT T1.bond_type, COUNT(T1.molecule_id) FROM bond AS T1  WHERE T1.molecule_id = 'TR010' GROUP BY T1.bond_type ORDER BY COUNT(T1.molecule_id) DESC LIMIT 1 ) AS T","SELECT b.bond_type, m.carcinogenic  FROM bond AS b  JOIN molecule AS m ON b.molecule_id = m.molecule_id  WHERE b.molecule_id = 'TR010'  GROUP BY b.bond_type  ORDER BY COUNT(b.bond_type) DESC  LIMIT 1","SELECT T2.bond_type, T1.carcinogenic FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = 'TR010' AND T2.bond_type = (SELECT MAX(COUNT(bond_type)) FROM bond WHERE molecule_id = 'TR010')",0,0
"List all the elements of the toxicology of the molecule ""TR004"".",challenging,SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR004',SELECT a.element  FROM atom a  JOIN connected c ON a.atom_id = c.atom_id  JOIN bond b ON c.bond_id = b.bond_id  WHERE a.molecule_id = 'TR004' AND b.bond_type = 'toxicology',SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.molecule_id = 'TR004' AND T3.bond_type = 'toxicology',0,0
List all the elements of atoms that can not bond with any other atoms.,challenging,SELECT DISTINCT T.element FROM atom AS T WHERE T.element NOT IN ( SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id ),SELECT DISTINCT a.element  FROM atom a  LEFT JOIN connected c ON a.atom_id = c.atom_id  WHERE c.atom_id IS NULL,SELECT DISTINCT T1.element FROM atom AS T1 WHERE T1.atom_id NOT IN (SELECT DISTINCT T2.atom_id FROM connected AS T2),0,0
What are the elements of the atoms of TR144_8_19?,challenging,SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR144_8_19',SELECT a.element  FROM atom a  JOIN connected c ON a.atom_id = c.atom_id  JOIN bond b ON c.bond_id = b.bond_id  WHERE b.bond_id = 'TR144_8_19',SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR144_8_19',1,1
List the elements of all the triple bonds.,challenging,SELECT DISTINCT T3.element FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T1.bond_type = '#',"SELECT a1.element, a2.element FROM connected c JOIN bond b ON c.bond_id = b.bond_id JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE b.bond_type = '#'",SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '#',0,1
What is the composition of element chlorine in percentage among the single bond molecules?,challenging,"SELECT CAST(COUNT(CASE WHEN T.element = 'cl' THEN T.atom_id ELSE NULL END) AS REAL) * 100 / COUNT(T.atom_id) FROM ( SELECT T1.atom_id, T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type = '-' ) AS T",SELECT    (SELECT COUNT(*)     FROM       atom     INNER JOIN       connected ON atom.atom_id = connected.atom_id     INNER JOIN       bond ON connected.bond_id = bond.bond_id     WHERE       atom.element = 'cl'       AND bond.bond_type = '-') * 100.0 /    (SELECT COUNT(*)     FROM       atom     INNER JOIN       connected ON atom.atom_id = connected.atom_id     INNER JOIN       bond ON connected.bond_id = bond.bond_id     WHERE       bond.bond_type = '-') AS percent,"SELECT T2.label, (SELECT COUNT(T3.atom_id) FROM atom AS T3 WHERE T3.molecule_id = T1.molecule_id AND T3.element = 'cl') * 100.0 / COUNT(T1.atom_id) as percent FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T1.bond_id = T3.bond_id WHERE T3.bond_type = '-' GROUP BY T2.label",0,0
What are the elements for bond id TR001_10_11?,challenging,SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR001_10_11',"SELECT a1.element, a2.element FROM connected c JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_id = 'TR001_10_11'",SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR001_10_11',0,1
What are the toxicology elements associated with bond ID TR000_1_2?,challenging,SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR000_1_2',SELECT a1.element  FROM atom a1  JOIN connected c1 ON a1.atom_id = c1.atom_id  JOIN bond b1 ON c1.bond_id = b1.bond_id  WHERE b1.bond_id = 'TR000_1_2',SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR000_1_2',1,1
Tally the toxicology element of the 4th atom of each molecule that was carcinogenic.,challenging,"SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND SUBSTR(T1.atom_id, -1) = '4' AND LENGTH(T1.atom_id) = 7","SELECT element, COUNT(*)  FROM atom  INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE molecule.label = '+' AND SUBSTR(atom.atom_id, 7, 1) = '4'  GROUP BY element","SELECT T1.element, COUNT(*) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id INNER JOIN molecule AS T4 ON T1.molecule_id = T4.molecule_id AND T3.molecule_id = T4.molecule_id WHERE T4.label = '+' AND substr(T1.atom_id, 7, 1) = '4' GROUP BY T1.element",0,0
What is the ratio of Hydrogen elements in molecule ID TR006? List the ratio with its label.,challenging,"WITH SubQuery AS (SELECT DISTINCT T1.atom_id, T1.element, T1.molecule_id, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR006') SELECT CAST(COUNT(CASE WHEN element = 'h' THEN atom_id ELSE NULL END) AS REAL) / (CASE WHEN COUNT(atom_id) = 0 THEN NULL ELSE COUNT(atom_id) END) AS ratio, label FROM SubQuery GROUP BY label","SELECT      molecule.label,      (SELECT COUNT(atom.atom_id) FROM atom WHERE atom.element = 'h' AND atom.molecule_id = 'TR006') / (SELECT COUNT(atom.atom_id) FROM atom WHERE atom.molecule_id = 'TR006') AS ratio FROM      molecule WHERE      molecule.molecule_id = 'TR006'","SELECT M.label, CAST(COUNT(A.atom_id) AS REAL) / (SELECT COUNT(*) FROM atom WHERE molecule_id = 'TR006') AS ratio FROM atom AS A INNER JOIN molecule AS M ON A.molecule_id = M.molecule_id WHERE A.element = 'h' AND A.molecule_id = 'TR006' GROUP BY M.label",0,0
Name chemical elements that form a bond TR001_10_11.,challenging,SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR001_10_11',"SELECT DISTINCT a1.element AS element1, a2.element AS element2  FROM connected  JOIN atom a1 ON a1.atom_id = connected.atom_id  JOIN atom a2 ON a2.atom_id = connected.atom_id2  JOIN bond ON bond.bond_id = connected.bond_id  WHERE bond.bond_id = 'TR001_10_11'",SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.molecule_id = (SELECT T4.molecule_id FROM bond AS T4 WHERE T4.bond_id = 'TR001_10_11'),0,0
Which toxic element can be found in the molecule TR151?,challenging,SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR151',"SELECT a1.element  FROM atom a1  JOIN molecule m1 ON a1.molecule_id = m1.molecule_id  WHERE m1.label = 'TR151' AND a1.element IN ('br', 'f', 'i', 'sn', 'pb', 'te') ","SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = 'TR151' AND T1.element IN ('cl', 's', 'br', 'i', 'sn', 'pb', 'te')",0,0
Name the elements that comprise the atoms of bond TR001_2_4.,challenging,SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_2_4',SELECT a1.element FROM atom a1 JOIN connected c1 ON a1.atom_id = c1.atom_id JOIN bond b1 ON c1.bond_id = b1.bond_id WHERE b1.bond_id = 'TR001_2_4',SELECT DISTINCT a.element FROM atom AS a INNER JOIN connected AS c ON a.atom_id = c.atom_id INNER JOIN bond AS b ON c.bond_id = b.bond_id WHERE b.molecule_id = (SELECT molecule_id FROM bond WHERE bond_id = 'TR001_2_4'),1,0
List all carcinogenic molecules and their elements.,challenging,"SELECT DISTINCT T2.molecule_id, T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'","SELECT m.label AS carcinogenic_molecule, a.element  FROM molecule AS m  JOIN atom AS a ON m.molecule_id = a.molecule_id  WHERE m.label = '+'","SELECT T2.label, T3.element FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN atom AS T3 ON T1.molecule_id = T3.molecule_id WHERE T2.label = '+'",0,0
Which molecules have triple bonds and list all the elements they contain.,challenging,"SELECT DISTINCT T1.molecule_id, T2.element FROM bond AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#'","SELECT m.molecule_id, a.element FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON (c.atom_id = a.atom_id OR c.atom_id2 = a.atom_id) WHERE b.bond_type = '#'","SELECT T2.label, T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T1.bond_id = T3.bond_id WHERE T3.bond_type = '#'",0,0
Name the atoms' elements that form bond TR000_2_3.,challenging,SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR000_2_3',SELECT a1.element FROM atom a1 JOIN connected c1 ON a1.atom_id = c1.atom_id JOIN bond b1 ON c1.bond_id = b1.bond_id WHERE b1.bond_id = 'TR000_2_3',SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR000_2_3',1,1
How many elements are contained in bond_id TR001_3_4?,challenging,SELECT COUNT(DISTINCT T1.element) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_3_4',SELECT COUNT(atom.atom_id)  FROM atom  JOIN connected ON atom.atom_id = connected.atom_id  JOIN bond ON connected.bond_id = bond.bond_id  WHERE bond.bond_id = 'TR001_3_4',SELECT COUNT(DISTINCT T1.element) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR001_3_4',0,1
What is the element of toxicology for the atom with the ID of TR000_1?,challenging,SELECT T.element FROM atom AS T WHERE T.atom_id = 'TR000_1',SELECT a.element  FROM atom a  WHERE a.atom_id = 'TR000_1',SELECT T1.element FROM atom AS T1 WHERE T1.atom_id = 'TR000_1',1,1
"List all the elements with double bond, consisted in molecule TR024.",challenging,SELECT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR024' AND T2.bond_type = '=',SELECT DISTINCT a1.element  FROM atom a1  JOIN connected c1 ON a1.atom_id = c1.atom_id  JOIN bond b1 ON c1.bond_id = b1.bond_id  JOIN molecule m1 ON a1.molecule_id = m1.molecule_id AND b1.molecule_id = m1.molecule_id  WHERE m1.label = 'TR024' AND b1.bond_type = '=',SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id INNER JOIN molecule AS T4 ON T1.molecule_id = T4.molecule_id WHERE T2.bond_type = '=' AND T4.label = 'TR024',0,0
Calculate the percentage of carcinogenic molecules with triple bonded Hidrogen atoms.,challenging,SELECT CAST(SUM(CASE WHEN T1.label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T1.molecule_id = T3.molecule_id WHERE T3.bond_type = '#' AND T2.element = 'h',SELECT (   (     SELECT COUNT(*)      FROM (       SELECT DISTINCT m.molecule_id        FROM molecule AS m        JOIN atom AS a ON m.molecule_id = a.molecule_id        JOIN bond AS b ON m.molecule_id = b.molecule_id        JOIN connected AS c ON a.atom_id = c.atom_id        WHERE m.label = '+'        AND a.element = 'h'        AND b.bond_type = '#'     )   )    * 100.0 /    (     SELECT COUNT(*)      FROM molecule      WHERE label = '+'   ) ) AS percentage,SELECT (SELECT COUNT(*) FROM (SELECT DISTINCT T1.molecule_id FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id INNER JOIN atom AS T4 ON T3.atom_id2 = T4.atom_id WHERE T1.element = 'h' AND T2.bond_type = '#' AND T4.molecule_id IN (SELECT T5.molecule_id FROM molecule AS T5 WHERE T5.label = '+'))) / (SELECT COUNT(DISTINCT molecule_id) FROM atom WHERE element = 'h') * 100.0 AS percentage,0,0
What is the element with the atom ID of TR004_7 in molecule that is not carcinogenic?,challenging,SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR004_7' AND T2.label = '-',SELECT element FROM atom  INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE atom_id = 'TR004_7' AND label != '-',SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR004_7' AND T2.label <> '-',0,0
List the element and bond type included in the molecule with molecule ID of TR002.,challenging,"SELECT DISTINCT T1.element, T2.bond_type FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR002'","SELECT a.element, b.bond_type FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE a.molecule_id = 'TR002' AND b.molecule_id = 'TR002'","SELECT DISTINCT T1.element, T2.bond_type FROM atom AS T1 INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id INNER JOIN bond AS T2 ON T3.bond_id = T2.bond_id WHERE T1.molecule_id = 'TR002' AND T2.molecule_id = 'TR002'",0,0
What is the percentage of cards whose language is French among the Story Spotlight cards?,challenging,SELECT CAST(SUM(CASE WHEN T2.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.isStorySpotlight = 1,SELECT (SELECT COUNT(*) FROM cards WHERE language = 'French' AND isStorySpotlight = 1) / (SELECT COUNT(*) FROM cards WHERE isStorySpotlight = 1) * 100 AS Percentage,SELECT (SELECT COUNT(id) FROM cards WHERE language = 'French' AND isStorySpotlight = 1) * 100.0 / (SELECT COUNT(id) FROM cards WHERE isStorySpotlight = 1),0,0
What percentage of cards with format commander and legal status do not have a content warning?,challenging,SELECT CAST(SUM(CASE WHEN T1.hasContentWarning = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'commander' AND T2.status = 'Legal',SELECT (CAST(COUNT(cards.id) AS FLOAT) / (SELECT COUNT(*) FROM cards WHERE cards.hascontentwarning = 0 AND cards.id IN (SELECT id FROM legalities WHERE format = 'commander' AND status = 'legal'))) * 100 AS percentage FROM cards WHERE cards.hascontentwarning = 0 AND cards.id IN (SELECT id FROM legalities WHERE format = 'commander' AND status = 'legal') ,SELECT (SELECT COUNT(*) FROM legalities AS T1 INNER JOIN cards AS T2 ON T1.id = T2.id WHERE T1.format = 'commander' AND T1.status = 'legal' AND T2.hascontentwarning = 0) / (SELECT COUNT(*) FROM legalities AS T3 WHERE T3.format = 'commander' AND T3.status = 'legal') * 100,0,0
What percentage of cards without power are in French?,challenging,SELECT CAST(SUM(CASE WHEN T2.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.power IS NULL OR T1.power = '*',SELECT (SELECT COUNT(*) FROM cards WHERE (power IS NULL OR power = '*') AND id IN (SELECT card_id FROM foreign_data WHERE language = 'French')) / (SELECT COUNT(*) FROM cards WHERE power IS NULL OR power = '*') * 100 AS percentage,SELECT (SELECT COUNT(*) FROM cards WHERE (power IS NULL OR power = '*') AND id IN (SELECT id FROM foreign_data WHERE language = 'French')) / (SELECT COUNT(*) FROM cards WHERE power IS NULL OR power = '*') * 100,0,0
Which set is not available outside of the United States and has foil cards with Japanese writing on them? Please include the set ID in your response.,challenging,"SELECT T1.name, T1.id FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Japanese' AND T1.isFoilOnly = 1 AND T1.isForeignOnly = 0",SELECT sets.id  FROM sets  JOIN set_translations ON sets.id = set_translations.setcode  WHERE sets.isforeignonly = 1 AND sets.hasfoil = 1 AND set_translations.language = 'Japanese',SELECT T1.id FROM sets AS T1 WHERE T1.isForeignOnly = 1 AND T1.isFoilOnly = 1 AND T1.language = 'Japanese',0,0
"Which of these artists have designed a card in the set Coldsnap, Jeremy Jarvis, Aaron Miller or Chippy?",challenging,SELECT T1.artist FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE (T2.name = 'Coldsnap' AND T1.artist = 'Chippy') OR (T2.name = 'Coldsnap' AND T1.artist = 'Aaron Miller') OR (T2.name = 'Coldsnap' AND T1.artist = 'Jeremy Jarvis') GROUP BY T1.artist,"SELECT DISTINCT artist  FROM cards  WHERE setcode = 'coldsnap' AND artist IN ('Jeremy Jarvis', 'Aaron Miller','Chippy')","SELECT DISTINCT artist FROM cards WHERE setcode = 'coldsnap' AND artist IN ('Jeremy Jarvis', 'Aaron Miller','Chippy')",0,0
What is the percentage of incredibly powerful cards in the set Coldsnap?,challenging,SELECT CAST(SUM(CASE WHEN T1.cardKingdomFoilId IS NOT NULL AND T1.cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE T2.name = 'Coldsnap',SELECT (SELECT COUNT(*) FROM cards WHERE setcode = 'Coldsnap' AND hasfoil = 1) / (SELECT COUNT(*) FROM cards WHERE setcode = 'Coldsnap') * 100,SELECT (SELECT COUNT(*) FROM cards WHERE setcode = 'Coldsnap' AND foil = 1) / (SELECT COUNT(*) FROM cards WHERE setcode = 'Coldsnap') * 100,0,0
For all cards illustrated by Jim Pavelec. and describe the text of the ruling of these cards. Do these cards have missing or degraded properties and values.,challenging,"SELECT T2.text , CASE WHEN T1.hasContentWarning = 1 THEN 'YES' ELSE 'NO' END FROM cards AS T1 INNER JOIN rulings AS T2 ON T2.uuid = T1.uuid WHERE T1.artist = 'Jim Pavelec'","SELECT c.name, r.text, c.hascontentwarning FROM cards c JOIN rulings r ON c.uuid = r.uuid WHERE c.artist = 'Jim Pavelec'","SELECT T1.name, T2.text, T1.hascontentwarning FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.id = T2.id WHERE T1.artist = 'Jim Pavelec'",0,0
"For all the set of cards that has Japanese translation, what is the percentage of them are only available in non-foil?",challenging,SELECT CAST(SUM(CASE WHEN isNonFoilOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) FROM sets WHERE code IN ( SELECT setCode FROM set_translations WHERE language = 'Japanese' ),SELECT (   SELECT COUNT(*)    FROM cards    WHERE isNonFoilOnly = 1 AND language = 'Japanese' ) / (   SELECT COUNT(*)    FROM cards    WHERE language = 'Japanese' ) * 100 AS Percentage,SELECT (SELECT COUNT(*) FROM cards AS T1 WHERE T1.language = 'Japanese' AND T1.isNonFoilOnly = 1) / (SELECT COUNT(*) FROM cards AS T2 WHERE T2.language = 'Japanese') * 100,0,0
"For all the set of cards that has Brazil Portuguese translation, what is the percentage of them are only available online?",challenging,SELECT CAST(SUM(CASE WHEN isOnlineOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) FROM sets WHERE code IN ( SELECT setCode FROM set_translations WHERE language = 'Portuguese (Brazil)' ),SELECT (   SELECT COUNT(*)    FROM cards    INNER JOIN set_translations ON cards.setcode = set_translations.setcode    WHERE set_translations.language = 'Portuguese (Brazil)' AND cards.isonlineonly = 1 ) / (   SELECT COUNT(*)    FROM cards    INNER JOIN set_translations ON cards.setcode = set_translations.setcode    WHERE set_translations.language = 'Portuguese (Brazil)' ) * 100 AS percentage_online_only,SELECT (SELECT COUNT(*) FROM cards AS T1 INNER JOIN set_translations AS T2 ON T1.setcode = T2.setcode WHERE T2.language = 'Portuguese (Brazil)' AND T1.isonlineonly = 1) / (SELECT COUNT(*) FROM cards AS T3 INNER JOIN set_translations AS T4 ON T3.setcode = T4.setcode WHERE T4.language = 'Portuguese (Brazil)') * 100,0,0
"Among the sets whose expansion type is Commander, which set has the highest total number of cards including promotional and related supplemental products but excluding Alchemy modifications? Indicate the id of the set.",challenging,SELECT id FROM sets WHERE type = 'commander' ORDER BY totalSetSize DESC LIMIT 1,SELECT sets.id  FROM sets  WHERE sets.type = 'commander'  ORDER BY sets.totalsetsize DESC  LIMIT 1,SELECT id FROM sets WHERE type = 'Commander' ORDER BY totalSetSize DESC LIMIT 1,1,0
"Among the cards whose version of frame style is 1997, what is the status of the card illustrated by D. Alexander Gregory in legacy play format that has sensitive content or Wizards of the Coast?",challenging,SELECT DISTINCT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T2.uuid = T1.uuid WHERE T1.frameVersion = 1997 AND T1.hasContentWarning = 1 AND T1.artist = 'D. Alexander Gregory' AND T2.format = 'legacy',SELECT status  FROM legalities  WHERE uuid IN (   SELECT uuid    FROM cards    WHERE artist = 'D. Alexander Gregory'    AND frameVersion = '1997'    AND hasContentWarning = 1 ),SELECT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.id = T2.id WHERE T1.frameVersion = '1997' AND T1.artist = 'D. Alexander Gregory' AND T2.format = 'legacy' AND (T1.hasContentWarning = 1 OR T1.watermark = 'Wizards of the Coast'),0,0
What is the annual average number of sets that were released between 1/1/2012 to 12/31/2015? Indicate the common langugage of the card.,challenging,"SELECT (CAST(SUM(T1.id) AS REAL) / COUNT(T1.id)) / 4, T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.id WHERE T1.releaseDate BETWEEN '2012-01-01' AND '2015-12-31' GROUP BY T1.releaseDate ORDER BY COUNT(T2.language) DESC LIMIT 1","SELECT AVG(yearly_sets), language FROM (   SELECT COUNT(DISTINCT setcode) as yearly_sets,           language,           strftime('%Y', releasedate) as year   FROM sets   JOIN cards ON sets.code = cards.setcode   WHERE releasedate BETWEEN '2012-01-01' AND '2015-12-31'   GROUP BY year, language ) GROUP BY language","SELECT AVG(T1.annual_avg), T2.language FROM (SELECT COUNT(id) as annual_avg FROM sets WHERE releaseDate BETWEEN '2012-01-01' AND '2015-12-31' GROUP BY strftime('%Y', releaseDate)) AS T1 INNER JOIN (SELECT language, COUNT(language) as lang_count FROM cards GROUP BY language ORDER BY lang_count DESC LIMIT 1) AS T2 ON T1.annual_avg = T2.lang_count",0,0
List the names of all the cards in the set Hour of Devastation and find the formats in which these cards are legal.,challenging,"SELECT DISTINCT T2.name , CASE WHEN T1.status = 'Legal' THEN T1.format ELSE NULL END FROM legalities AS T1 INNER JOIN cards AS T2 ON T2.uuid = T1.uuid WHERE T2.setCode IN ( SELECT code FROM sets WHERE name = 'Hour of Devastation' )","SELECT cards.name, legalities.format  FROM cards  JOIN legalities ON cards.uuid = legalities.uuid  JOIN sets ON cards.setcode = sets.code  WHERE sets.name = 'Hour of Devastation' AND legalities.status = 'Legal'","SELECT T1.name, T2.format FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.id = T2.id WHERE T1.setcode = 'HOU'",1,0
Which user added a bounty amount of 50 to the post title mentioning variance?,challenging,"SELECT T3.DisplayName, T1.Title FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId INNER JOIN users AS T3 ON T3.Id = T2.UserId WHERE T2.BountyAmount = 50 AND T1.Title LIKE '%variance%'",SELECT users.displayname  FROM users  JOIN votes ON users.id = votes.userid  JOIN posts ON votes.postid = posts.id  WHERE votes.bountyamount = 50 AND posts.title LIKE '%variance%',SELECT T2.DisplayName FROM votes AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.BountyAmount = 50 AND T1.PostId IN (SELECT id FROM posts WHERE Title LIKE '%variance%'),0,0
What is the percentage difference of student badges given during 2010 and 2011?,challenging,"SELECT CAST(SUM(IIF(STRFTIME('%Y', Date) = '2010', 1, 0)) AS REAL) * 100 / COUNT(Id) - CAST(SUM(IIF(STRFTIME('%Y', Date) = '2011', 1, 0)) AS REAL) * 100 / COUNT(Id) FROM badges WHERE Name = 'Student'","SELECT (     (         (             SELECT COUNT(*)              FROM badges              WHERE name = 'Student' AND strftime('%Y', date) = '2010'         ) / (             SELECT COUNT(*)              FROM badges         ) * 100     ) -      (         (             SELECT COUNT(*)              FROM badges              WHERE name = 'Student' AND strftime('%Y', date) = '2011'         ) / (             SELECT COUNT(*)              FROM badges         ) * 100     ) ) AS Percentage_Difference","SELECT (SELECT COUNT(name) FROM badges WHERE name = 'Student' AND strftime('%Y', date) = '2010') - (SELECT COUNT(name) FROM badges WHERE name = 'Student' AND strftime('%Y', date) = '2011') * 100.0 / (SELECT COUNT(name) FROM badges WHERE name = 'Student') AS 'Percentage Difference'",0,0
"Among posts by Harvey Motulsky and Noah Snyder, which one has higher popularity?",challenging,SELECT T1.DisplayName FROM users AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.UserId INNER JOIN posts AS T3 ON T2.PostId = T3.Id WHERE T1.DisplayName = 'Harvey Motulsky' OR T1.DisplayName = 'Noah Snyder' GROUP BY T1.DisplayName ORDER BY SUM(T3.ViewCount) DESC LIMIT 1,"SELECT posts.id, posts.title, posts.viewcount  FROM posts  INNER JOIN users ON posts.owneruserid = users.id  WHERE users.displayname IN ('Harvey Motulsky', 'Noah Snyder')  GROUP BY posts.id  ORDER BY posts.viewcount DESC  LIMIT 1",SELECT MAX(SUM(T1.ViewCount)) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id WHERE T2.DisplayName = 'Harvey Motulsky' OR T2.DisplayName = 'Noah Snyder',0,0
"Based on posts posted by Community, calculate the percentage of posts that use the R language.",challenging,"SELECT CAST(SUM(IIF(T3.TagName = 'r', 1, 0)) AS REAL) * 100 / COUNT(T1.Id) FROM users AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.UserId INNER JOIN tags AS T3 ON T3.ExcerptPostId = T2.PostId WHERE T1.DisplayName = 'Community'",SELECT (COUNT(posts.id) * 1.0 / (SELECT COUNT(*) FROM posts WHERE posts.ownerdisplayname = 'Community')) * 100 as percentage FROM posts INNER JOIN tags ON posts.id = tags.excerptpostid WHERE tags.tagname = 'r' AND posts.ownerdisplayname = 'Community',SELECT (COUNT(T1.PostId) / (SELECT COUNT(T2.PostId) FROM posts AS T2 WHERE T2.OwnerDisplayName = 'Community')) * 100 AS percentage FROM posts AS T1 WHERE T1.TagName = 'r' AND T1.OwnerDisplayName = 'Community',0,0
"Among all the posts posted by the most influential user, identify the percentage with a score above 50.",challenging,SELECT CAST(SUM(CASE WHEN T2.Score > 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Id) FROM users T1 INNER JOIN posts T2 ON T1.Id = T2.OwnerUserId INNER JOIN ( SELECT MAX(Reputation) AS max_reputation FROM users ) T3 ON T1.Reputation = T3.max_reputation,SELECT (   (SELECT COUNT(*) FROM posts WHERE owneruserid = (SELECT id FROM users ORDER BY reputation DESC LIMIT 1) AND score > 50) * 100.0 /   (SELECT COUNT(*) FROM posts WHERE owneruserid = (SELECT id FROM users ORDER BY reputation DESC LIMIT 1)) ) AS percentage,SELECT (SELECT COUNT(posts.id) FROM posts INNER JOIN users ON posts.owneruserid = users.id WHERE posts.score > 50 AND users.reputation = (SELECT MAX(reputation) FROM users)) * 100 / (SELECT COUNT(posts.id) FROM posts INNER JOIN users ON posts.owneruserid = users.id WHERE users.reputation = (SELECT MAX(reputation) FROM users)) AS percentage,1,0
Please list the superhero names of all the superheroes that have blue eyes and blond hair.,challenging,SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Blue' AND T3.colour = 'Blond',SELECT superhero.superhero_name  FROM superhero  JOIN colour ON superhero.eye_colour_id = colour.id AND colour.colour = 'Blue'  JOIN colour ON superhero.hair_colour_id = colour.id AND colour.colour = 'Blond'  ,SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Blue' AND T3.colour = 'Blond',0,1
List the superheroes from Marvel Comics who have the super power of 'Super Strength'.,challenging,SELECT superhero_name FROM superhero AS T1 WHERE EXISTS (SELECT 1 FROM hero_power AS T2 INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Super Strength' AND T1.id = T2.hero_id)AND EXISTS (SELECT 1 FROM publisher AS T4 WHERE T4.publisher_name = 'Marvel Comics' AND T1.publisher_id = T4.id),"SELECT s.superhero_name, s.full_name FROM superhero AS s JOIN hero_power AS hp ON s.id = hp.hero_id JOIN superpower AS p ON hp.power_id = p.id JOIN publisher AS pub ON s.publisher_id = pub.id WHERE pub.publisher_name = 'Marvel Comics' AND p.power_name = 'Super Strength'","SELECT T1.superhero_name, T1.full_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T4 ON T3.power_id = T4.id WHERE T2.publisher_name = 'Marvel Comics' AND T4.power_name = 'Super Strength'",0,0
What is the percentage of superheroes who act in their own self-interest or make decisions based on their own moral code? Indicate how many of the said superheroes were published by Marvel Comics.,challenging,"SELECT (CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM superhero)), CAST(SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS REAL) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN alignment AS T3 ON T3.id = T1.alignment_id WHERE T3.alignment = 'Bad'","SELECT    (COUNT(CASE WHEN alignment_id IN (SELECT id FROM alignment WHERE alignment = 'Bad') THEN 1 END) * 100.0 / COUNT(*)) AS percentage,   COUNT(CASE WHEN alignment_id IN (SELECT id FROM alignment WHERE alignment = 'Bad') AND publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') THEN 1 END) AS marvel_count FROM    superhero","SELECT COUNT(T1.id) * 100 / (SELECT COUNT(T2.id) FROM superhero AS T2), COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T1.alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad') AND T3.publisher_name = 'Marvel Comics'",1,0
"Between DC and Marvel Comics, which publisher has published more superheroes? Find the difference in the number of superheroes they have published.",challenging,SELECT SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id,SELECT    SUM(CASE WHEN publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) -    SUM(CASE WHEN publisher_name = 'DC Comics' THEN 1 ELSE 0 END) AS Difference FROM    superhero INNER JOIN    publisher ON superhero.publisher_id = publisher.id,"SELECT T1.publisher_name, COUNT(T2.id) as superhero_count FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id GROUP BY T1.publisher_name ORDER BY superhero_count DESC LIMIT 2",1,0
"In superheroes with height between 150 to 180, what is the percentage of heroes published by Marvel Comics?",challenging,SELECT CAST(COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.height_cm BETWEEN 150 AND 180,SELECT      (SELECT COUNT(*)       FROM superhero       WHERE height_cm BETWEEN 150 AND 180 AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')      ) / (SELECT COUNT(*) FROM superhero) * 100 AS percentage,SELECT (SELECT COUNT(T1.id) FROM superhero AS T1 WHERE T1.height_cm BETWEEN 150 AND 180 AND T1.publisher_id = 13) / (SELECT COUNT(T2.id) FROM superhero AS T2 WHERE T2.height_cm BETWEEN 150 AND 180) * 100,0,0
Which superhero has the most durability published by Dark Horse Comics?,challenging,SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T3.id = T2.attribute_id INNER JOIN publisher AS T4 ON T4.id = T1.publisher_id WHERE T4.publisher_name = 'Dark Horse Comics' AND T3.attribute_name = 'Durability' ORDER BY T2.attribute_value DESC LIMIT 1,SELECT s.superhero_name  FROM superhero s  JOIN hero_attribute ha ON s.id = ha.hero_id  JOIN attribute a ON ha.attribute_id = a.id  JOIN publisher p ON s.publisher_id = p.id  WHERE a.attribute_name = 'durability' AND p.publisher_name = 'Dark Horse Comics'  ORDER BY ha.attribute_value DESC  LIMIT 1,SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T2.attribute_id = T3.id INNER JOIN publisher AS T4 ON T1.publisher_id = T4.id WHERE T3.attribute_name = 'durability' AND T4.publisher_name = 'Dark Horse Comics' ORDER BY T2.attribute_value DESC LIMIT 1,0,0
"List the eyes, hair and skin colour of all female superheroes published by Dark Horse Comics.",challenging,"SELECT T1.eye_colour_id, T1.hair_colour_id, T1.skin_colour_id FROM superhero AS T1 INNER JOIN publisher AS T2 ON T2.id = T1.publisher_id INNER JOIN gender AS T3 ON T3.id = T1.gender_id WHERE T2.publisher_name = 'Dark Horse Comics' AND T3.gender = 'Female'","SELECT s.superhero_name, c1.colour AS eyes, c2.colour AS hair, c3.colour AS skin_colour FROM superhero AS s JOIN gender AS g ON s.gender_id = g.id JOIN colour AS c1 ON s.eye_colour_id = c1.id JOIN colour AS c2 ON s.hair_colour_id = c2.id JOIN colour AS c3 ON s.skin_colour_id = c3.id JOIN publisher AS p ON s.publisher_id = p.id WHERE g.gender = 'Female' AND p.publisher_name = 'Dark Horse Comics'","SELECT T1.eye_colour_id, T1.hair_colour_id, T1.skin_colour_id FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.gender = 'Female' AND T3.publisher_name = 'Dark Horse Comics'",0,1
"Which superhero has the same eyes, hair and skin colour? Indicate the publisher of the superhero.",challenging,"SELECT T1.superhero_name, T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.eye_colour_id = T1.hair_colour_id AND T1.eye_colour_id = T1.skin_colour_id","SELECT s.superhero_name, p.publisher_name  FROM superhero s  JOIN colour c1 ON s.eye_colour_id = c1.id  JOIN colour c2 ON s.hair_colour_id = c2.id  JOIN colour c3 ON s.skin_colour_id = c3.id  JOIN publisher p ON s.publisher_id = p.id  WHERE c1.id = c2.id AND c2.id = c3.id","SELECT T1.superhero_name, T3.publisher_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T1.eye_colour_id = T1.hair_colour_id AND T1.hair_colour_id = T1.skin_colour_id",1,1
What is the percentage of blue female superheroes among all female superheroes?,challenging,SELECT CAST(COUNT(CASE WHEN T3.colour = 'Blue' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN colour AS T3 ON T1.skin_colour_id = T3.id WHERE T2.gender = 'Female',SELECT (   SELECT COUNT(*)    FROM superhero    WHERE skin_colour_id IN (SELECT id FROM colour WHERE colour = 'Blue')      AND gender_id IN (SELECT id FROM gender WHERE gender = 'Female') ) / (   SELECT COUNT(*)    FROM superhero    WHERE gender_id IN (SELECT id FROM gender WHERE gender = 'Female') ) * 100 AS percentage,SELECT (SELECT COUNT(T1.id) FROM superhero AS T1 WHERE T1.gender_id IN (SELECT T2.id FROM gender AS T2 WHERE T2.gender = 'Female') AND T1.skin_colour_id IN (SELECT T3.id FROM colour AS T3 WHERE T3.colour = 'Blue')) * 100.0 / (SELECT COUNT(T4.id) FROM superhero AS T4 WHERE T4.gender_id IN (SELECT T5.id FROM gender AS T5 WHERE T5.gender = 'Female')) AS percentage,0,1
How many percent of female heroes were published by Marvel Comics?,challenging,SELECT CAST(COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T3.gender = 'Female',SELECT (   SELECT COUNT(*)    FROM superhero    WHERE gender_id IN (SELECT id FROM gender WHERE gender = 'Female')    AND publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') ) /  (   SELECT COUNT(*)    FROM superhero    WHERE publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') ) * 100 AS percent,SELECT (SELECT COUNT(*) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.gender = 'Female' AND T3.publisher_name = 'Marvel Comics') * 100.0 / (SELECT COUNT(*) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics'),0,0
"Among the bad superheroes, what is the percentage of female superheroes?",challenging,SELECT CAST(COUNT(CASE WHEN T3.gender = 'Female' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.alignment = 'Bad',"SELECT    ROUND(     (       SELECT          COUNT(*)        FROM          superhero        WHERE          gender_id = 2          AND alignment_id = 2     ) * 100.0 / (       SELECT          COUNT(*)        FROM          superhero        WHERE          alignment_id = 2     ),      2   ) AS percentage",SELECT (SELECT COUNT(T2.id) FROM gender AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.gender_id WHERE T2.alignment_id = 2 AND T1.id = 2) * 100.0 / (SELECT COUNT(T3.id) FROM alignment AS T4 INNER JOIN superhero AS T3 ON T4.id = T3.alignment_id WHERE T4.id = 2) AS percentage,0,1
"In superheroes with missing weight data, calculate the difference between the number of superheroes with blue eyes and no eye color.",challenging,SELECT SUM(CASE WHEN T2.id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.id = 1 THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg = 0 OR T1.weight_kg is NULL,SELECT    (SELECT COUNT(*)     FROM superhero AS T1     WHERE T1.eye_colour_id = 7 AND (T1.weight_kg = 0 OR T1.weight_kg IS NULL)) -    (SELECT COUNT(*)     FROM superhero AS T1     WHERE T1.eye_colour_id = 1 AND (T1.weight_kg = 0 OR T1.weight_kg IS NULL)) AS difference,SELECT COUNT(T1.id) - (SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg = 0 OR T1.weight_kg IS NULL AND T2.id = 1) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg = 0 OR T1.weight_kg IS NULL AND T2.id = 7,1,0
Which publisher created more superheroes: DC or Marvel Comics? Find the difference in the number of superheroes.,challenging,SELECT SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id,"SELECT    CASE      WHEN (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics')) >           (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics'))      THEN 'DC Comics'      ELSE 'Marvel Comics'    END AS publisher_with_most_superheroes,    ABS(     (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics')) -      (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics'))   ) AS difference",SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'DC Comics',0,0
"Among all superheroes created by George Lucas, identify the percentage of female superheroes.",challenging,SELECT CAST(COUNT(CASE WHEN T3.gender = 'Female' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.publisher_name = 'George Lucas',"SELECT    ROUND(     (       SELECT          COUNT(*)        FROM          superhero        WHERE          gender_id = (SELECT id FROM gender WHERE gender = 'Female')          AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'George Lucas')     ) * 100.0 / (       SELECT          COUNT(*)        FROM          superhero        WHERE          publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'George Lucas')     ), 2   ) AS female_superheroes_percentage",SELECT (SELECT COUNT(*) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.gender = 'Female' AND T3.publisher_name = 'George Lucas') * 100.0 / (SELECT COUNT(*) FROM superhero AS T4 INNER JOIN publisher AS T5 ON T4.publisher_id = T5.id WHERE T5.publisher_name = 'George Lucas') AS percentage,0,1
"Among all superheroes in Marvel Comics, identify the percentage of 'good' superheroes.",challenging,SELECT CAST(COUNT(CASE WHEN T3.alignment = 'Good' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T2.publisher_name = 'Marvel Comics',"SELECT      ROUND(         (             SELECT                  COUNT(*)              FROM                  superhero              WHERE                  alignment_id IN (SELECT id FROM alignment WHERE alignment = 'good')                  AND publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')         ) * 100.0 /          (             SELECT                  COUNT(*)              FROM                  superhero              WHERE                  publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')         ), 2     ) AS percentage_of_good_superheroes",SELECT (SELECT COUNT(*) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN publisher AS T3 ON T1.publisher_id = T3.id WHERE T2.alignment = 'Good' AND T3.publisher_name = 'Marvel Comics') * 100.0 / (SELECT COUNT(*) FROM superhero AS T4 INNER JOIN publisher AS T5 ON T4.publisher_id = T5.id WHERE T5.publisher_name = 'Marvel Comics') AS percentage,0,0
"Paul di Resta was in the No. 853 race, what percent faster did he finish in the 853rd race than the next race for the fastest lap speed?",challenging,"SELECT (SUM(IIF(T2.raceId = 853, T2.fastestLapSpeed, 0)) - SUM(IIF(T2.raceId = 854, T2.fastestLapSpeed, 0))) * 100 / SUM(IIF(T2.raceId = 853, T2.fastestLapSpeed, 0)) FROM drivers AS T1 INNER JOIN results AS T2 ON T2.driverId = T1.driverId WHERE T1.forename = 'Paul' AND T1.surname = 'di Resta'",SELECT (   (     SELECT        MAX(results.fastestlapspeed)      FROM        results      WHERE        results.raceid = 853   ) -    (     SELECT        MAX(results.fastestlapspeed)      FROM        results      WHERE        results.raceid = 854   ) ) /  (   SELECT      MAX(results.fastestlapspeed)    FROM      results    WHERE      results.raceid = 853 ) * 100 AS percentage,"SELECT (T1.fastestlapspeed - T2.fastestlapspeed) * 100 / T1.fastestlapspeed AS percentage FROM (SELECT T3.fastestlapspeed FROM results AS T3 INNER JOIN drivers AS T4 ON T3.driverid = T4.driverid WHERE T4.forename = 'Paul' AND T4.surname = 'di Resta' AND T3.raceid = 853) AS T1, (SELECT T5.fastestlapspeed FROM results AS T5 INNER JOIN drivers AS T6 ON T5.driverid = T6.driverid WHERE T6.forename = 'Paul' AND T6.surname = 'di Resta' AND T5.raceid = 854) AS T2",0,1
Calculate the percentage whereby Hamilton was not at the 1st track of the the f1 circuit since 2010.,challenging,SELECT CAST(COUNT(CASE WHEN T2.position <> 1 THEN T2.position END) AS REAL) * 100 / COUNT(T2.driverStandingsId) FROM races AS T1 INNER JOIN driverStandings AS T2 ON T2.raceId = T1.raceId INNER JOIN drivers AS T3 ON T3.driverId = T2.driverId WHERE T3.surname = 'Hamilton' AND T1.year >= 2010,SELECT    (COUNT(CASE WHEN r.position > 1 THEN 1 END) * 1.0 / COUNT(*)) * 100 AS percentage FROM    results r JOIN    drivers d ON r.driverid = d.driverid WHERE    d.surname = 'Hamilton' AND r.year >= 2010,SELECT (SELECT COUNT(*) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverid = T2.driverid WHERE T2.surname = 'Hamilton' AND T1.position > 1 AND T1.raceid IN (SELECT raceid FROM races WHERE year >= 2010)) / (SELECT COUNT(*) FROM results AS T3 INNER JOIN drivers AS T4 ON T3.driverid = T4.driverid WHERE T4.surname = 'Hamilton' AND T3.raceid IN (SELECT raceid FROM races WHERE year >= 2010)) * 100,0,0
How much faster in percentage is the champion than the driver who finished the race last in the 2008 Australian Grand Prix?,challenging,"WITH time_in_seconds AS ( SELECT T1.positionOrder, CASE WHEN T1.positionOrder = 1 THEN (CAST(SUBSTR(T1.time, 1, 1) AS REAL) * 3600) + (CAST(SUBSTR(T1.time, 3, 2) AS REAL) * 60) + CAST(SUBSTR(T1.time, 6) AS REAL) ELSE CAST(SUBSTR(T1.time, 2) AS REAL) END AS time_seconds FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Australian Grand Prix' AND T1.time IS NOT NULL AND T2.year = 2008 ), champion_time AS ( SELECT time_seconds FROM time_in_seconds WHERE positionOrder = 1), last_driver_incremental AS ( SELECT time_seconds FROM time_in_seconds WHERE positionOrder = (SELECT MAX(positionOrder) FROM time_in_seconds) ) SELECT (CAST((SELECT time_seconds FROM last_driver_incremental) AS REAL) * 100) / (SELECT time_seconds + (SELECT time_seconds FROM last_driver_incremental) FROM champion_time)","SELECT      (         (             strftime('%s', '00:' || substr(results.time, 4))              -              strftime('%s', '00:' || substr(                 (                     SELECT                          time                      FROM                          results                      WHERE                          position = 1                          AND raceid = (                             SELECT                                  raceid                              FROM                                  races                              WHERE                                  year = 2008                                  AND circuitid = (                                     SELECT                                          circuitid                                      FROM                                          circuits                                      WHERE                                          name LIKE '%Australian%'                                 )                         )                 ), 4             ))         )          /          strftime('%s', '00:' || substr(results.time, 4))     ) * 100 as percentage FROM      results  WHERE      position = 1      AND raceid = (         SELECT              raceid          FROM              races          WHERE              year = 2008              AND circuitid = (                 SELECT                      circuitid                  FROM                      circuits                  WHERE                      name LIKE '%Australian%'             )     )","SELECT ((strftime('%s', T1.time) - strftime('%s', T2.time)) / strftime('%s', T3.time) * 100) AS 'Percentage Faster' FROM results AS T1 INNER JOIN (SELECT time FROM results WHERE position = 1 AND raceid = (SELECT raceid FROM races WHERE year = 2008 AND circuitid = (SELECT circuitid FROM circuits WHERE name = 'Australian Grand Prix'))) AS T2 ON 1 = 1 INNER JOIN (SELECT time FROM results WHERE position = (SELECT MAX(position) FROM results WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND circuitid = (SELECT circuitid FROM circuits WHERE name = 'Australian Grand Prix'))) AND raceid = (SELECT raceid FROM races WHERE year = 2008 AND circuitid = (SELECT circuitid FROM circuits WHERE name = 'Australian Grand Prix'))) AS T3 ON 1 = 1",0,0
Please calculate the race completion percentage of Japanese drivers from 2007 to 2009.,challenging,"SELECT CAST(SUM(IIF(T1.time IS NOT NULL, 1, 0)) AS REAL) * 100 / COUNT(T1.raceId) FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN drivers AS T3 on T1.driverId = T3.driverId WHERE T3.nationality = 'Japanese' AND T2.year BETWEEN 2007 AND 2009",SELECT    (CAST(COUNT(CASE                   WHEN results.time IS NOT NULL AND seasons.year BETWEEN 2007 AND 2009 AND drivers.nationality = 'Japanese'                   THEN 1                 END) AS FLOAT) / CAST(COUNT(CASE                                               WHEN seasons.year BETWEEN 2007 AND 2009 AND drivers.nationality = 'Japanese'                                               THEN 1                                             END) AS FLOAT)) * 100 AS RaceCompletionPercentage FROM    results   INNER JOIN races ON results.raceid = races.raceid   INNER JOIN seasons ON races.year = seasons.year   INNER JOIN drivers ON results.driverid = drivers.driverid WHERE    drivers.nationality = 'Japanese' AND seasons.year BETWEEN 2007 AND 2009,SELECT CAST(COUNT(T3.DriverID) AS REAL) / (SELECT COUNT(T1.DriverID) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.DriverID = T2.DriverID WHERE T1.Year BETWEEN 2007 AND 2009 AND T2.Nationality = 'Japanese') * 100 AS RaceCompletionPercentage FROM results AS T3 INNER JOIN drivers AS T4 ON T3.DriverID = T4.DriverID WHERE T3.Time IS NOT NULL AND T3.Year BETWEEN 2007 AND 2009 AND T4.Nationality = 'Japanese',0,0
"What is the average time in seconds of champion for each year, before year 1975?",challenging,"WITH time_in_seconds AS ( SELECT T2.year, T2.raceId, T1.positionOrder, CASE WHEN T1.positionOrder = 1 THEN (CAST(SUBSTR(T1.time, 1, 1) AS REAL) * 3600) + (CAST(SUBSTR(T1.time, 3, 2) AS REAL) * 60) + CAST(SUBSTR(T1.time, 6,2) AS REAL )   + CAST(SUBSTR(T1.time, 9) AS REAL)/1000 ELSE 0 END AS time_seconds FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.time IS NOT NULL ), champion_time AS ( SELECT year, raceId, time_seconds FROM time_in_seconds WHERE positionOrder = 1 ) SELECT year, AVG(time_seconds) FROM champion_time WHERE year < 1975 GROUP BY year HAVING AVG(time_seconds) IS NOT NULL",SELECT AVG(results.time) as average_time_in_seconds FROM results JOIN races ON results.raceid = races.raceid WHERE races.year < 1975 AND results.time IS NOT NULL AND results.position = 1,"SELECT AVG(strftime('%s', T1.time)) FROM results AS T1 INNER JOIN seasons AS T2 ON T1.raceid = T2.year WHERE T1.position = 1 AND T1.time IS NOT NULL AND T2.year < 1975",0,0
"From 2000 to 2005, what percentage of drivers who were born before 1985 and the lap numbers were over 50?",challenging,"SELECT CAST(SUM(IIF(STRFTIME('%Y', T3.dob) < '1985' AND T1.laps > 50, 1, 0)) AS REAL) * 100 / COUNT(*) FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN drivers AS T3 on T1.driverId = T3.driverId WHERE T2.year BETWEEN 2000 AND 2005",SELECT (   CAST(     (SELECT COUNT(DISTINCT driverid)       FROM results       WHERE EXTRACT(YEAR FROM dob) < 1985       AND laps > 50       AND EXTRACT(YEAR FROM date) BETWEEN 2000 AND 2005) AS FLOAT   ) /   (SELECT COUNT(DISTINCT driverid)     FROM results     WHERE EXTRACT(YEAR FROM dob) BETWEEN 2000 AND 2005) * 100 ) AS percentage,"SELECT (SELECT COUNT(DISTINCT T1.driverid) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverid = T2.driverid WHERE strftime('%Y', T2.dob) < 1985 AND T1.laps > 50) / (SELECT COUNT(DISTINCT T3.driverid) FROM results AS T3 INNER JOIN drivers AS T4 ON T3.driverid = T4.driverid WHERE strftime('%Y', T4.dob) BETWEEN 2000 AND 2005) * 100 AS percentage",0,0
List down top 3 German drivers who has the shortest average pit stop duration and were born between 1980-1985.,challenging,"SELECT T2.forename, T2.surname FROM pitStops AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId WHERE T2.nationality = 'German' AND STRFTIME('%Y', T2.dob) BETWEEN '1980' AND '1985' GROUP BY T2.forename, T2.surname ORDER BY AVG(T1.duration) LIMIT 3","SELECT drivers.forename, drivers.surname, AVG(pitstops.duration) as avg_pit_stop_duration FROM drivers JOIN pitstops ON drivers.driverid = pitstops.driverid WHERE drivers.nationality = 'German' AND strftime('%Y', drivers.dob) BETWEEN '1980' AND '1985' GROUP BY drivers.driverid ORDER BY avg_pit_stop_duration ASC LIMIT 3","SELECT T1.forename, T1.surname, T2.avg_pit_stop_duration FROM drivers AS T1 INNER JOIN (SELECT T3.driverid, AVG(T4.duration) AS avg_pit_stop_duration FROM drivers AS T3 INNER JOIN pitstops AS T4 ON T3.driverid = T4.driverid WHERE T3.nationality = 'German' AND strftime('%Y', T3.dob) BETWEEN '1980' AND '1985' GROUP BY T3.driverid ORDER BY avg_pit_stop_duration ASC LIMIT 3) AS T2 ON T1.driverid = T2.driverid",0,0
What is the constructor reference name of the champion in the 2009 Singapore Grand Prix? Please give its website.,challenging,"SELECT T3.constructorRef, T3.url FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN constructors AS T3 on T1.constructorId = T3.constructorId WHERE T2.name = 'Singapore Grand Prix' AND T2.year = 2009 AND T1.time LIKE '_:%:__.___'","SELECT constructors.constructorref, constructors.url  FROM constructors  JOIN constructorstandings ON constructors.constructorid = constructorstandings.constructorid  JOIN races ON races.raceid = constructorstandings.raceid  WHERE races.year = 2009 AND races.name = 'Singapore Grand Prix' AND constructorstandings.position = 1","SELECT T2.constructorRef, T2.url FROM results AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T3.name = 'Singapore Grand Prix' AND T3.year = 2009 AND T1.position = 1",0,1
"Which constructor scored most points from Monaco Grand Prix between 1980 and 2010? List the score, name and nationality of this team.",challenging,"SELECT SUM(T1.points), T2.name, T2.nationality FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId INNER JOIN races AS T3 ON T3.raceid = T1.raceid WHERE T3.name = 'Monaco Grand Prix' AND T3.year BETWEEN 1980 AND 2010 GROUP BY T2.name ORDER BY SUM(T1.points) DESC LIMIT 1","SELECT cr.name, cr.nationality, SUM(cr.points) as total_points FROM constructorresults as cr JOIN races as r ON cr.raceid = r.raceid JOIN constructors as c ON cr.constructorid = c.constructorid WHERE r.name LIKE '%Monaco Grand Prix%' AND r.year BETWEEN 1980 AND 2010 GROUP BY cr.constructorid ORDER BY total_points DESC LIMIT 1","SELECT MAX(T1.points), T2.name, T2.nationality FROM constructorresults AS T1 INNER JOIN constructors AS T2 ON T1.constructorid = T2.constructorid INNER JOIN races AS T3 ON T1.raceid = T3.raceid WHERE T3.name = 'Monaco Grand Prix' AND T3.year BETWEEN 1980 AND 2010",0,0
What is full name of the racer who ranked 1st in the 3rd qualifying race held in the Marina Bay Street Circuit in 2008?,challenging,"SELECT T2.forename, T2.surname FROM qualifying AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceid = T3.raceid WHERE q3 IS NOT NULL AND T3.year = 2008 AND T3.circuitId IN ( SELECT circuitId FROM circuits WHERE name = 'Marina Bay Street Circuit' ) ORDER BY CAST(SUBSTR(q3, 1, INSTR(q3, ':') - 1) AS INTEGER) * 60 + CAST(SUBSTR(q3, INSTR(q3, ':') + 1, INSTR(q3, '.') - INSTR(q3, ':') - 1) AS REAL) + CAST(SUBSTR(q3, INSTR(q3, '.') + 1) AS REAL) / 1000 ASC LIMIT 1","SELECT forename, surname  FROM drivers  INNER JOIN qualifying ON drivers.driverid = qualifying.driverid  INNER JOIN circuits ON qualifying.raceid = circuits.circuitid  WHERE qualifying.q3 = (SELECT MIN(q3) FROM qualifying WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND circuitid IN (SELECT circuitid FROM circuits WHERE name = 'Marina Bay Street Circuit'))) LIMIT 1","SELECT T3.forename, T3.surname FROM qualifying AS T1 INNER JOIN races AS T2 ON T1.raceid = T2.raceid INNER JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T2.year = 2008 AND T2.circuitid = (SELECT circuitid FROM circuits WHERE name = 'Marina Bay Street Circuit') AND T1.position = 1 AND T1.q3 = (SELECT MIN(q3) FROM qualifying WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND circuitid = (SELECT circuitid FROM circuits WHERE name = 'Marina Bay Street Circuit')))",1,1
"Among all the lap records set on various circuits, what is the time for the fastest one?",challenging,"SELECT time FROM lapTimes ORDER BY (CASE WHEN INSTR(time, ':') <> INSTR(SUBSTR(time, INSTR(time, ':') + 1), ':') + INSTR(time, ':') THEN CAST(SUBSTR(time, 1, INSTR(time, ':') - 1) AS REAL) * 3600 ELSE 0 END) + (CAST(SUBSTR(time, INSTR(time, ':') - 2 * (INSTR(time, ':') = INSTR(SUBSTR(time, INSTR(time, ':') + 1), ':') + INSTR(time, ':')), INSTR(time, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(time, INSTR(time, ':') + 1, INSTR(time, '.') - INSTR(time, ':') - 1) AS REAL)) + (CAST(SUBSTR(time, INSTR(time, '.') + 1) AS REAL) / 1000) ASC LIMIT 1",SELECT MIN(time) as fastest_lap_time FROM laptimes,SELECT MIN(time) FROM laptimes,0,0
Which top 20 driver created the shortest lap time ever record in a Formula_1 race? Please give them full names.,challenging,"WITH lap_times_in_seconds AS (SELECT driverId, (CASE WHEN SUBSTR(time, 1, INSTR(time, ':') - 1) <> '' THEN CAST(SUBSTR(time, 1, INSTR(time, ':') - 1) AS REAL) * 60 ELSE 0 END + CASE WHEN SUBSTR(time, INSTR(time, ':') + 1, INSTR(time, '.') - INSTR(time, ':') - 1) <> '' THEN CAST(SUBSTR(time, INSTR(time, ':') + 1, INSTR(time, '.') - INSTR(time, ':') - 1) AS REAL) ELSE 0 END + CASE WHEN SUBSTR(time, INSTR(time, '.') + 1) <> '' THEN CAST(SUBSTR(time, INSTR(time, '.') + 1) AS REAL) / 1000 ELSE 0 END) AS time_in_seconds FROM lapTimes) SELECT T2.forename, T2.surname, T1.driverId FROM (SELECT driverId, MIN(time_in_seconds) AS min_time_in_seconds FROM lap_times_in_seconds GROUP BY driverId) AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId ORDER BY T1.min_time_in_seconds ASC LIMIT 20","SELECT    d.forename || ' ' || d.surname AS full_name,    MIN(l.time) AS shortest_lap_time FROM    laptimes AS l JOIN    drivers AS d ON l.driverid = d.driverid GROUP BY    d.driverid ORDER BY    shortest_lap_time ASC LIMIT 20","SELECT T2.forename, T2.surname FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverid = T2.driverid WHERE T1.fastestlap = 1 ORDER BY T1.fastestlaptime ASC LIMIT 20",0,0
Please list the lap records for the circuits in Italy.,challenging,"WITH fastest_lap_times AS (SELECT T1.raceId, T1.FastestLapTime, (CAST(SUBSTR(T1.FastestLapTime, 1, INSTR(T1.FastestLapTime, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, ':') + 1, INSTR(T1.FastestLapTime, '.') - INSTR(T1.FastestLapTime, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, '.') + 1) AS REAL) / 1000) as time_in_seconds FROM results AS T1 WHERE T1.FastestLapTime IS NOT NULL ) SELECT T1.FastestLapTime as lap_record FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN circuits AS T3 on T2.circuitId = T3.circuitId INNER JOIN (SELECT MIN(fastest_lap_times.time_in_seconds) as min_time_in_seconds FROM fastest_lap_times INNER JOIN races AS T2 on fastest_lap_times.raceId = T2.raceId INNER JOIN circuits AS T3 on T2.circuitId = T3.circuitId WHERE T3.country = 'Italy' ) AS T4 ON (CAST(SUBSTR(T1.FastestLapTime, 1, INSTR(T1.FastestLapTime, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, ':') + 1, INSTR(T1.FastestLapTime, '.') - INSTR(T1.FastestLapTime, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, '.') + 1) AS REAL) / 1000) = T4.min_time_in_seconds LIMIT 1","SELECT circuits.name, MIN(laptimes.time) as lap_record FROM laptimes JOIN races ON laptimes.raceid = races.raceid JOIN circuits ON races.circuitid = circuits.circuitid WHERE circuits.country = 'Italy' GROUP BY circuits.name","SELECT T1.name, MIN(T2.time) as 'Lap Record' FROM circuits AS T1 INNER JOIN (SELECT raceid, MIN(time) as 'time' FROM laptimes GROUP BY raceid) AS T2 ON T1.circuitid = T2.raceid WHERE T1.country = 'Italy' GROUP BY T1.name",0,0
"In the race a driver set the lap record for the Austrian Grand Prix Circuit, how long did he spent at the pit stop at that same race?",challenging,"WITH fastest_lap_times AS ( SELECT T1.raceId, T1.driverId, T1.FastestLapTime, (CAST(SUBSTR(T1.FastestLapTime, 1, INSTR(T1.FastestLapTime, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, ':') + 1, INSTR(T1.FastestLapTime, '.') - INSTR(T1.FastestLapTime, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, '.') + 1) AS REAL) / 1000) as time_in_seconds FROM results AS T1 WHERE T1.FastestLapTime IS NOT NULL), lap_record_race AS ( SELECT T1.raceId, T1.driverId FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN circuits AS T3 on T2.circuitId = T3.circuitId INNER JOIN ( SELECT MIN(fastest_lap_times.time_in_seconds) as min_time_in_seconds FROM fastest_lap_times INNER JOIN races AS T2 on fastest_lap_times.raceId = T2.raceId INNER JOIN circuits AS T3 on T2.circuitId = T3.circuitId WHERE T2.name = 'Austrian Grand Prix') AS T4 ON (CAST(SUBSTR(T1.FastestLapTime, 1, INSTR(T1.FastestLapTime, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, ':') + 1, INSTR(T1.FastestLapTime, '.') - INSTR(T1.FastestLapTime, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, '.') + 1) AS REAL) / 1000) = T4.min_time_in_seconds WHERE T2.name = 'Austrian Grand Prix') SELECT T4.duration FROM lap_record_race INNER JOIN pitStops AS T4 on lap_record_race.raceId = T4.raceId AND lap_record_race.driverId = T4.driverId",SELECT pitstops.duration  FROM pitstops  JOIN races ON pitstops.raceid = races.raceid  JOIN circuits ON races.circuitid = circuits.circuitid  WHERE circuits.name = 'Austrian Grand Prix' AND races.date = (SELECT MIN(races.date) FROM races JOIN pitstops ON races.raceid = pitstops.raceid JOIN circuits ON races.circuitid = circuits.circuitid WHERE circuits.name = 'Austrian Grand Prix') ORDER BY pitstops.duration ASC LIMIT 1,SELECT T3.duration FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitid = T2.circuitid INNER JOIN pitstops AS T3 ON T1.raceid = T3.raceid WHERE T2.name = 'Austrian Grand Prix' AND T3.time = (SELECT MIN(T4.time) FROM pitstops AS T4 INNER JOIN races AS T5 ON T4.raceid = T5.raceid INNER JOIN circuits AS T6 ON T5.circuitid = T6.circuitid WHERE T6.name = 'Austrian Grand Prix'),0,0
"In Scotland Premier League, which away team won the most during the 2010 season?",challenging,SELECT teamInfo.team_long_name FROM League AS leagueData INNER JOIN Match AS matchData ON leagueData.id = matchData.league_id INNER JOIN Team AS teamInfo ON matchData.away_team_api_id = teamInfo.team_api_id WHERE leagueData.name = 'Scotland Premier League' AND matchData.season = '2009/2010' AND matchData.away_team_goal - matchData.home_team_goal > 0 GROUP BY matchData.away_team_api_id ORDER BY COUNT(*) DESC LIMIT 1,"SELECT    team.team_long_name,    COUNT(*) as wins FROM    match JOIN    team  ON    match.away_team_api_id = team.team_api_id WHERE    match.league_id = (SELECT id FROM league WHERE name = 'Scotland Premier League')    AND match.season = '2009/2010'   AND match.away_team_goal > match.home_team_goal GROUP BY    team.team_api_id ORDER BY    wins DESC LIMIT 1",SELECT T2.team_long_name FROM match AS T1 INNER JOIN team AS T2 ON T1.away_team_api_id = T2.team_api_id WHERE T1.league_id = (SELECT id FROM league WHERE name = 'Scotland Premier League') AND T1.season = '2009/2010' GROUP BY T1.away_team_api_id ORDER BY SUM(T1.away_team_goal > T1.home_team_goal) DESC LIMIT 1,0,1
"At present, calculate for the player's age who have a sprint speed of no less than 97 between 2013 to 2015.",challenging,"SELECT DISTINCT DATETIME() - T2.birthday age FROM Player_Attributes AS t1 INNER JOIN Player AS t2 ON t1.player_api_id = t2.player_api_id WHERE STRFTIME('%Y',t1.`date`) >= '2013' AND STRFTIME('%Y',t1.`date`) <= '2015' AND t1.sprint_speed >= 97","SELECT    player.player_name,    (julianday('now') - julianday(player.birthday)) / 365 as age FROM    player  JOIN    player_attributes  ON    player.player_api_id = player_attributes.player_api_id  WHERE    player_attributes.sprint_speed >= 97 AND    strftime('%Y', player_attributes.date) BETWEEN '2013' AND '2015'","SELECT player.player_name, player.birthday, player_attributes.sprint_speed FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.sprint_speed >= 97 AND strftime('%Y', player_attributes.date) BETWEEN '2013' AND '2015'",0,0
List the long name of teams with above-average build-up play passing in 2012.,challenging,"SELECT DISTINCT t4.team_long_name FROM Team_Attributes AS t3 INNER JOIN Team AS t4 ON t3.team_api_id = t4.team_api_id WHERE SUBSTR(t3.`date`, 1, 4) = '2012' AND t3.buildUpPlayPassing > ( SELECT CAST(SUM(t2.buildUpPlayPassing) AS REAL) / COUNT(t1.id) FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE STRFTIME('%Y',t2.`date`) = '2012')","SELECT team_long_name  FROM team_attributes  JOIN team ON team_attributes.team_api_id = team.team_api_id  WHERE buildUpPlayPassing > (SELECT AVG(buildUpPlayPassing) FROM team_attributes WHERE strftime('%Y', date) = '2012' AND buildUpPlayPassing IS NOT NULL)","SELECT T1.team_long_name FROM team_attributes AS T1 INNER JOIN match AS T2 ON T1.team_api_id = T2.home_team_api_id OR T1.team_api_id = T2.away_team_api_id WHERE strftime('%Y', T2.date) = '2012' AND T1.buildUpPlayPassing > (SELECT AVG(T3.buildUpPlayPassing) FROM team_attributes AS T3 INNER JOIN match AS T4 ON T3.team_api_id = T4.home_team_api_id OR T3.team_api_id = T4.away_team_api_id WHERE strftime('%Y', T4.date) = '2012')",0,0
"Calculate the percentage of players who prefer left foot, who were born between 1987 and 1992.",challenging,"SELECT CAST(COUNT(CASE WHEN t2.preferred_foot = 'left' THEN t1.id ELSE NULL END) AS REAL) * 100 / COUNT(t1.id) percent FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE SUBSTR(t1.birthday, 1, 4) BETWEEN '1987' AND '1992'",NULL,"SELECT (SUM(T1.preferred_foot = 'left') * 100.0 / COUNT(T1.player_fifa_api_id)) FROM player_attributes AS T1 INNER JOIN player AS T2 ON T1.player_api_id = T2.player_api_id WHERE strftime('%Y', T2.birthday) BETWEEN '1987' AND '1992'",0,1
"For the teams with normal build-up play dribbling class in 2014, List the names of the teams with less than average chance creation passing, in descending order of chance creation passing.",challenging,"SELECT t3.team_long_name FROM Team AS t3 INNER JOIN Team_Attributes AS t4 ON t3.team_api_id = t4.team_api_id WHERE t4.buildUpPlayDribblingClass = 'Normal' AND t4.chanceCreationPassing < ( SELECT CAST(SUM(t2.chanceCreationPassing) AS REAL) / COUNT(t1.id) FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t2.buildUpPlayDribblingClass = 'Normal' AND SUBSTR(t2.`date`, 1, 4) = '2014') ORDER BY t4.chanceCreationPassing DESC","SELECT team.team_long_name, team_attributes.chancecreationpassing FROM team JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id WHERE team_attributes.buildupplaydribblingclass = 'Normal' AND team_attributes.date >= '2014-01-01 00:00:00' AND team_attributes.date <= '2014-01-31 00:00:00' GROUP BY team.team_long_name HAVING AVG(team_attributes.chancecreationpassing) < (SELECT AVG(chancecreationpassing) FROM team_attributes) ORDER BY team_attributes.chancecreationpassing DESC","SELECT T2.team_long_name, T2.chanceCreationPassing FROM team_attributes AS T1 INNER JOIN team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.buildUpPlayDribblingClass = 'Normal' AND T1.date >= '2014-01-01 00:00:00' AND T1.date <= '2014-01-31 00:00:00' AND T1.chanceCreationPassing < (SELECT AVG(T3.chanceCreationPassing) FROM team_attributes AS T3 WHERE T3.buildUpPlayDribblingClass = 'Normal' AND T3.date >= '2014-01-01 00:00:00' AND T3.date <= '2014-01-31 00:00:00') ORDER BY T1.chanceCreationPassing DESC",0,0
List the name of leagues in which the average goals by the home team is higher than the away team in the 2009/2010 season.,challenging,SELECT t1.name FROM League AS t1 INNER JOIN Match AS t2 ON t1.id = t2.league_id WHERE t2.season = '2009/2010' GROUP BY t1.name HAVING (CAST(SUM(t2.home_team_goal) AS REAL) / COUNT(DISTINCT t2.id)) - (CAST(SUM(t2.away_team_goal) AS REAL) / COUNT(DISTINCT t2.id)) > 0,SELECT League.name FROM Match JOIN League ON Match.league_id = League.id WHERE Match.season = '2009/2010' GROUP BY League.name HAVING AVG(Match.home_team_goal) > AVG(Match.away_team_goal),SELECT League.name FROM Match INNER JOIN League ON Match.league_id = League.id WHERE Match.season = '2009/2010' GROUP BY Match.league_id HAVING AVG(Match.home_team_goal) > AVG(Match.away_team_goal),1,1
Who has the highest average finishing rate between the highest and shortest football player?,challenging,"SELECT A FROM ( SELECT AVG(finishing) result, 'Max' A FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height = ( SELECT MAX(height) FROM Player ) UNION SELECT AVG(finishing) result, 'Min' A FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height = ( SELECT MIN(height) FROM Player ) ) ORDER BY result DESC LIMIT 1","SELECT player.player_name, player_attributes.finishing FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.finishing = (     SELECT MAX(player_attributes.finishing)     FROM player     JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id     WHERE player.height = (         SELECT MAX(height)         FROM player         UNION         SELECT MIN(height)         FROM player     ) )","SELECT T2.player_name, T1.finishing FROM player_attributes AS T1 INNER JOIN player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.finishing = (SELECT MAX(T3.finishing) FROM player_attributes AS T3 WHERE T3.height = (SELECT MAX(T4.height) FROM player AS T4) OR T3.height = (SELECT MIN(T5.height) FROM player AS T5))",0,0
"List the football team that has a build up play speed of 31, build up plan dribbling of 53, and build up play passing of 32. Only indicate the short name of the team.",challenging,SELECT DISTINCT t1.team_short_name FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t2.buildUpPlaySpeed = 31 AND t2.buildUpPlayDribbling = 53 AND t2.buildUpPlayPassing = 32,SELECT team_short_name  FROM team_attributes  JOIN team ON team_attributes.team_api_id = team.team_api_id  WHERE buildUpPlaySpeed = 31 AND buildUpPlayDribbling = 53 AND buildUpPlayPassing = 32,SELECT T2.team_short_name FROM match AS T1 INNER JOIN team_attributes AS T2 ON T1.home_team_api_id = T2.team_api_id WHERE T2.buildUpPlaySpeed = 31 AND T2.buildUpPlayDribbling = 53 AND T2.buildUpPlayPassing = 32,1,0
"What is the difference of the average ball control score between Abdou Diallo and Aaron Appindangoye
?",challenging,SELECT CAST(SUM(CASE WHEN t1.player_name = 'Abdou Diallo' THEN t2.ball_control ELSE 0 END) AS REAL) / COUNT(CASE WHEN t1.player_name = 'Abdou Diallo' THEN t2.id ELSE NULL END) - CAST(SUM(CASE WHEN t1.player_name = 'Aaron Appindangoye' THEN t2.ball_control ELSE 0 END) AS REAL) / COUNT(CASE WHEN t1.player_name = 'Aaron Appindangoye' THEN t2.id ELSE NULL END) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id,SELECT    (SELECT AVG(pa.ball_control)     FROM player_attributes pa     JOIN player p ON pa.player_api_id = p.player_api_id     WHERE p.player_name = 'Abdou Diallo') -    (SELECT AVG(pa.ball_control)     FROM player_attributes pa     JOIN player p ON pa.player_api_id = p.player_api_id     WHERE p.player_name = 'Aaron Appindangoye') AS difference,SELECT AVG(CASE WHEN player_name = 'Abdou Diallo' THEN ball_control ELSE 0 END) - AVG(CASE WHEN player_name = 'Aaron Appindangoye' THEN ball_control ELSE 0 END) AS difference FROM player_attributes AS T1 INNER JOIN player AS T2 ON T1.player_api_id = T2.player_api_id,1,0
"Among the players born before the year 1986, how many of them would remain in his position and defense while the team attacked?",challenging,"SELECT COUNT(DISTINCT t1.player_name) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE STRFTIME('%Y',t1.birthday) < '1986' AND t2.defensive_work_rate = 'high'","SELECT COUNT(DISTINCT player_api_id)  FROM player_attributes  JOIN player ON player_attributes.player_api_id = player.player_api_id  WHERE strftime('%Y', player.birthday) < '1986'  AND defensive_work_rate = 'high'","SELECT COUNT(DISTINCT T1.player_api_id) FROM player_attributes AS T1 INNER JOIN player AS T2 ON T1.player_api_id = T2.player_api_id WHERE strftime('%Y', T2.birthday) < '1986' AND T1.defensive_work_rate = 'high'",0,1
How much higher in percentage is Ariel Borysiuk's overall rating than that of Paulin Puel?,challenging,SELECT (SUM(CASE WHEN t1.player_name = 'Ariel Borysiuk' THEN t2.overall_rating ELSE 0 END) * 1.0 - SUM(CASE WHEN t1.player_name = 'Paulin Puel' THEN t2.overall_rating ELSE 0 END)) * 100 / SUM(CASE WHEN t1.player_name = 'Paulin Puel' THEN t2.overall_rating ELSE 0 END) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id,SELECT (100 * ((SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Ariel Borysiuk')) - (SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Paulin Puel'))) / (SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Paulin Puel')))) AS percentage_difference,SELECT (CAST((SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Ariel Borysiuk')) AS REAL) - CAST((SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Paulin Puel')) AS REAL)) / CAST((SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT player_api_id FROM player WHERE player_name = 'Paulin Puel')) AS REAL) * 100 AS percentage_difference,0,0
What was the average overall rating for Marko Arnautovic from 2007/2/22 to 2016/4/21?,challenging,"SELECT CAST(SUM(t2.overall_rating) AS REAL) / COUNT(t2.id) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_fifa_api_id = t2.player_fifa_api_id WHERE t1.player_name = 'Marko Arnautovic' AND SUBSTR(t2.`date`, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21'",SELECT AVG(overall_rating)  FROM player_attributes  INNER JOIN player ON player_attributes.player_api_id = player.player_api_id  WHERE player.player_name = 'Marko Arnautovic' AND player_attributes.date BETWEEN '2007-02-22' AND '2016-04-21',"SELECT AVG(T1.overall_rating) FROM player_attributes AS T1 INNER JOIN player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.player_name = 'Marko Arnautovic' AND strftime('%Y-%m-%d', T1.date) BETWEEN '2007-02-22' AND '2016-04-21'",0,1
What percentage is Landon Donovan's overall rating higher than Jordan Bowery on 2013/7/12?,challenging,"SELECT (SUM(CASE WHEN t1.player_name = 'Landon Donovan' THEN t2.overall_rating ELSE 0 END) * 1.0 - SUM(CASE WHEN t1.player_name = 'Jordan Bowery' THEN t2.overall_rating ELSE 0 END)) * 100 / SUM(CASE WHEN t1.player_name = 'Landon Donovan' THEN t2.overall_rating ELSE 0 END) LvsJ_percent FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_fifa_api_id = t2.player_fifa_api_id WHERE SUBSTR(t2.`date`, 1, 10) = '2013-07-12'",SELECT (   (     SELECT overall_rating      FROM player_attributes      JOIN player ON player_attributes.player_api_id = player.player_api_id     WHERE player.player_name = 'Landon Donovan' AND player_attributes.date = '2013-07-12'   ) -   (     SELECT overall_rating      FROM player_attributes      JOIN player ON player_attributes.player_api_id = player.player_api_id     WHERE player.player_name = 'Jordan Bowery' AND player_attributes.date = '2013-07-12'   ) ) / (   (     SELECT overall_rating      FROM player_attributes      JOIN player ON player_attributes.player_api_id = player.player_api_id     WHERE player.player_name = 'Landon Donovan' AND player_attributes.date = '2013-07-12'   ) ) * 100 AS percentage,SELECT (T1.overall_rating - T2.overall_rating) / T1.overall_rating * 100 FROM player_attributes AS T1 INNER JOIN player_attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.date = '2013-07-12' AND T2.date = '2013-07-12' AND T1.player_name = 'Landon Donovan' AND T2.player_name = 'Jordan Bowery',0,0
"What was the final score for the match on September 24, 2008, in the Belgian Jupiler League between the home team and the away team?",challenging,"SELECT t2.home_team_goal, t2.away_team_goal FROM League AS t1 INNER JOIN Match AS t2 ON t1.id = t2.league_id WHERE t1.name = 'Belgium Jupiler League' AND t2.`date` LIKE '2008-09-24%'","SELECT home_team_goal, away_team_goal  FROM match  JOIN league ON match.league_id = league.id  WHERE match.date LIKE '2008-09-24%' AND league.name = 'Belgium Jupiler League'","SELECT home_team_goal, away_team_goal FROM match WHERE date LIKE '2008-09-24%' AND league_id = (SELECT id FROM league WHERE name = 'Belgium Jupiler League')",1,1
"For in-patient age 50 and above, what is their average anti-cardiolipin antibody (IgG) concentration?",challenging,"SELECT AVG(T2.`aCL IgG`) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) >= 50 AND T1.Admission = '+'","SELECT AVG(examination.`acl igg`)  FROM examination  INNER JOIN patient ON examination.id = patient.id  WHERE patient.admission = '+' AND (SUBTRACT(year(current_timestamp), year(patient.birthday)) >= 50)","SELECT AVG(T2.`acl igg`) FROM patient AS T1 INNER JOIN examination AS T2 ON T1.id = T2.id WHERE T1.admission = '+' AND SUBTRACT(year(current_timestamp), year(T1.Birthday)) >= '50'",0,0
"The oldest SJS patient's medical laboratory work was completed on what date, and what age was the patient when they initially arrived at the hospital?",challenging,"SELECT T1.Date, STRFTIME('%Y', T2.`First Date`) - STRFTIME('%Y', T2.Birthday),T2.Birthday FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'SJS' AND T2.Birthday IS NOT NULL ORDER BY T2.Birthday ASC LIMIT 1","SELECT MAX(`examination date`), (SUBTRACT(year(`first date`)), year(Birthday)) as Age FROM examination JOIN patient ON examination.id = patient.id JOIN laboratory ON examination.id = laboratory.id WHERE `diagnosis` = 'SJS' LIMIT 1","SELECT MAX(T1.Birthday), T2.`First Date` FROM patient AS T1 INNER JOIN examination AS T2 ON T1.id = T2.id WHERE T2.diagnosis = 'SJS'",0,0
What is the ratio of male to female patients among all those with abnormal uric acid counts?,challenging,SELECT CAST(SUM(CASE WHEN T2.UA <= 8.0 AND T1.SEX = 'M' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.UA <= 6.5 AND T1.SEX = 'F' THEN 1 ELSE 0 END) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID,"SELECT    (SELECT COUNT(*) FROM patient WHERE sex = 'M' AND id IN      (SELECT patient_id FROM examination WHERE ""abnormal uric acid"" = 'Yes')) /    (SELECT COUNT(*) FROM patient WHERE sex = 'F' AND id IN      (SELECT patient_id FROM examination WHERE ""abnormal uric acid"" = 'Yes')) AS ratio",SELECT (SELECT COUNT(*) FROM patient AS T1 INNER JOIN examination AS T2 ON T1.id = T2.id WHERE T1.sex = 'M' AND T2.ua > '8.0') / (SELECT COUNT(*) FROM patient AS T1 INNER JOIN examination AS T2 ON T1.id = T2.id WHERE T1.sex = 'F' AND T2.ua > '6.5'),0,0
How many underage patients were examined during the course of the three-year period from 1990 to 1993?,challenging,"SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T2.`Examination Date`) BETWEEN '1990' AND '1993' AND STRFTIME('%Y', T2.`Examination Date`) - STRFTIME('%Y', T1.Birthday) < 18",SELECT COUNT(*)  FROM examination  INNER JOIN patient ON examination.id = patient.id  WHERE YEAR(patient.birthday) < 18 AND YEAR(examination.`examination date`) BETWEEN 1990 AND 1993,"SELECT COUNT(DISTINCT T1.id) FROM patient AS T1 INNER JOIN examination AS T2 ON T1.id = T2.id WHERE strftime('%Y', T2.`examination date`) BETWEEN '1990' AND '1993' AND (2021 - strftime('%Y', T1.birthday)) < 18",0,0
"What is the most common illness that doctors identified among the patients whose lab work was done between 1/1/1985, and 12/31/1995?",challenging,SELECT T2.Diagnosis FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.`Examination Date` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY T2.Diagnosis ORDER BY COUNT(T2.Diagnosis) DESC LIMIT 1,SELECT MAX(COUNT(examination.diagnosis)) as Most_Common_Illness FROM examination WHERE examination.`examination date` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY examination.diagnosis,SELECT Diagnosis FROM examination WHERE `examination date` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY Diagnosis ORDER BY COUNT(*) DESC LIMIT 1,0,0
"For the patient who was diagnosed SLE on 1997/1/27, what was his/her original diagnose when he/she came to the hospital for the first time?",challenging,SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.ID = ( SELECT ID FROM Examination WHERE `Examination Date` = '1997-01-27' AND Diagnosis = 'SLE' ) AND T2.`Examination Date` = T1.`First Date`,SELECT patient.diagnosis  FROM patient  JOIN examination ON patient.id = examination.id  WHERE examination.`examination date` = '1997-01-27' AND patient.`first date` = examination.`examination date`,SELECT patient.diagnosis FROM examination INNER JOIN patient ON examination.id = patient.id WHERE examination.`examination date` = '1997-01-27' AND patient.`first date` = '1997-01-27',1,1
"For the patient who was born on 1959/2/18, what is the decrease rate for his/her total cholesterol from November to December in 1981?",challenging,SELECT CAST((SUM(CASE WHEN T2.Date LIKE '1981-11-%' THEN T2.`T-CHO` ELSE 0 END) - SUM(CASE WHEN T2.Date LIKE '1981-12-%' THEN T2.`T-CHO` ELSE 0 END)) AS REAL) / SUM(CASE WHEN T2.Date LIKE '1981-12-%' THEN T2.`T-CHO` ELSE 0 END) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday = '1959-02-18',"SELECT      SUM(CASE              WHEN strftime('%Y-%m', examination.`examination date`) = '1981-11' THEN examination.`t cho`              ELSE 0          END) -      SUM(CASE              WHEN strftime('%Y-%m', examination.`examination date`) = '1981-12' THEN examination.`t cho`              ELSE 0          END) as 'Decrease Rate' FROM      examination JOIN      patient ON examination.id = patient.id WHERE      patient.birthday = '1959-02-18'",SELECT SUM(T2.`T-CHO`) FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T1.Birthday = '1959-02-18' and T2.Date like '1981-11-%' - SUM(T2.`T-CHO`) FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T1.Birthday = '1959-02-18' and T2.Date like '1981-12-%',0,0
"What number of patients with a degree of thrombosis level 2 and ANA pattern of only S, have a level of anti-Cardiolip in antibody (IgM) 20% higher than average?",challenging,SELECT COUNT(*) FROM Examination WHERE Thrombosis = 2 AND `ANA Pattern` = 'S' AND `aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination WHERE Thrombosis = 2 AND `ANA Pattern` = 'S'),SELECT COUNT(*)  FROM examination  JOIN patient ON examination.id = patient.id  WHERE thrombosis = 2  AND `ana pattern` = 'S'  AND `acl igm` > (SELECT AVG(`acl igm`) * 1.2 FROM examination),SELECT COUNT(T2.id) FROM examination AS T1 INNER JOIN patient AS T2 ON T1.id = T2.id WHERE T1.Thrombosis = 2 AND T1.ANA = 'S' AND T1.`acl igm` > (SELECT AVG(`acl igm`) * 1.2 FROM examination),0,0
What percentage of patients with a proteinuria level within the normal range have a uric acid level below the normal range?,challenging,SELECT CAST(SUM(CASE WHEN UA <= 6.5 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM Laboratory WHERE `U-PRO` > 0 AND `U-PRO` < 30,SELECT      (SELECT COUNT(*) FROM patient      INNER JOIN examination ON patient.id = examination.id      INNER JOIN laboratory ON patient.id = laboratory.id      WHERE `U-PRO` > 0 AND `U-PRO` < 30 AND UA < = 6.5) /      (SELECT COUNT(*) FROM patient      INNER JOIN examination ON patient.id = examination.id      INNER JOIN laboratory ON patient.id = laboratory.id      WHERE `U-PRO` > 0 AND `U-PRO` < 30) * 100 AS percentage,SELECT (SELECT COUNT(*) FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T2.`U-PRO` > 0 AND T2.`U-PRO` < 30 AND T2.UA <= 6.5) / (SELECT COUNT(*) FROM patient AS T3 INNER JOIN laboratory AS T4 ON T3.id = T4.id WHERE T4.`U-PRO` > 0 AND T4.`U-PRO` < 30) * 100,0,0
What percentage of male patients who first presented to the hospital in 1981 were diagnosed with BEHCET?,challenging,"SELECT CAST(SUM(CASE WHEN Diagnosis = 'BEHCET' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM Patient WHERE STRFTIME('%Y', `First Date`) = '1981' AND SEX = 'M'","SELECT ROUND(   (SELECT COUNT(*)     FROM patient     INNER JOIN examination ON patient.id = examination.id    WHERE patient.sex = 'M' AND YEAR(patient.`first date`) = '1981' AND examination.diagnosis = 'BEHCET')   /   (SELECT COUNT(*)     FROM patient     WHERE YEAR(patient.`first date`) = '1981' AND patient.sex = 'M')   * 100, 2) AS percentage","SELECT (SELECT COUNT(*) FROM patient AS T1 INNER JOIN examination AS T2 ON T1.id = T2.id WHERE T1.sex = 'M' AND strftime('%Y', T1.`first date`) = '1981' AND T2.diagnosis = 'BEHCET') / (SELECT COUNT(*) FROM patient WHERE strftime('%Y', `first date`) = '1981') * 100",0,0
List all patients who were followed up at the outpatient clinic who underwent a laboratory test in October 1991 and had a total blood bilirubin level within the normal range.,challenging,SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.`T-BIL` < 2.0 AND T2.Date LIKE '1991-10-%',"SELECT patient.id, patient.sex, patient.birthday, patient.description, patient.first_date, patient.admission, patient.diagnosis  FROM patient  JOIN examination ON patient.id = examination.id  JOIN laboratory ON patient.id = laboratory.id  WHERE patient.admission = '-'  AND laboratory.date LIKE '1991-10%'  AND laboratory.t_bil < 2.0","SELECT T1.id FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T1.admission = '-' AND strftime('%Y-%m', T2.date) LIKE '1991-10%' AND T2.`t-bil` < 2.0",0,1
"What sex is the patient who in a medical examination was diagnosed with PSS and in a laboratory examination had a blood level of C-reactive protein de 2+, createnine 1 and LDH 123?",challenging,SELECT T1.SEX FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T3.ID = T2.ID WHERE T2.Diagnosis = 'PSS' AND T3.CRP = '2+' AND T3.CRE = 1.0 AND T3.LDH = 123,SELECT patient.sex  FROM patient  JOIN examination ON patient.id = examination.id  JOIN laboratory ON patient.id = laboratory.id  WHERE examination.diagnosis = 'PSS'  AND laboratory.crp > 2  AND laboratory.cre = 1  AND laboratory.ldh = 123,SELECT T2.sex FROM examination AS T1 INNER JOIN patient AS T2 ON T1.id = T2.id INNER JOIN laboratory AS T3 ON T1.id = T3.id WHERE T1.diagnosis = 'PSS' AND T3.crp > 2 AND T3.cre = 1 AND T3.ldh = 123,1,1
How many male patients who underwent testing between 1995 and 1997 and were subsequently diagnosed with Behcet disease did not stay in the hospital for treatment?,challenging,"SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'Behcet' AND T1.SEX = 'M' AND STRFTIME('%Y', T2.`Examination Date`) BETWEEN '1995' AND '1997' AND T1.Admission = '-'",SELECT COUNT(*)  FROM patient  JOIN examination ON patient.id = examination.id  WHERE patient.sex = 'M'  AND examination.`examination date` BETWEEN '1995' AND '1997'  AND examination.diagnosis = 'Behcet'  AND patient.admission = '-',"SELECT COUNT(*) FROM patient AS T1 INNER JOIN examination AS T2 ON T1.id = T2.id WHERE T1.sex = 'M' AND strftime('%Y', T2.`examination date`) BETWEEN '1995' AND '1997' AND T2.diagnosis = 'Behcet' AND T1.admission = '-'",0,1
Are there more male patients with creatinine not within the normal range than female? True or False?,challenging,SELECT CASE WHEN SUM(CASE WHEN T1.SEX = 'M' THEN 1 ELSE 0 END) > SUM(CASE WHEN T1.SEX = 'F' THEN 1 ELSE 0 END) THEN 'True' ELSE 'False' END FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE >= 1.5,SELECT    CASE      WHEN (SELECT COUNT(*) FROM patient WHERE sex = 'M' AND id IN (SELECT id FROM examination WHERE cre >= 1.5)) > (SELECT COUNT(*) FROM patient WHERE sex = 'F' AND id IN (SELECT id FROM examination WHERE cre >= 1.5)) THEN 'True'      ELSE 'False'    END AS result,SELECT (SELECT COUNT(*) FROM patient AS T1 INNER JOIN examination AS T2 ON T1.id = T2.id INNER JOIN laboratory AS T3 ON T1.id = T3.id WHERE T1.sex = 'M' AND T3.CRE >= 1.5) > (SELECT COUNT(*) FROM patient AS T1 INNER JOIN examination AS T2 ON T1.id = T2.id INNER JOIN laboratory AS T3 ON T1.id = T3.id WHERE T1.sex = 'F' AND T3.CRE >= 1.5),0,0
"For patient born between 1936-1956, how many male patients have creatinine phosphokinase beyond the normal range?",challenging,"SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.Birthday) BETWEEN '1936' AND '1956' AND T1.SEX = 'M' AND T2.CPK >= 250",SELECT COUNT(DISTINCT patient.id)  FROM patient  JOIN examination ON patient.id = examination.id  JOIN laboratory ON patient.id = laboratory.id  WHERE patient.birthday BETWEEN '1936' AND '1956'  AND patient.sex = 'M'  AND laboratory.cpk >= 250,"SELECT COUNT(DISTINCT T1.id) FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE strftime('%Y', T1.birthday) BETWEEN '1936' AND '1956' AND T1.sex = 'M' AND T2.cpk >= 250",0,1
"Provide ID, sex and age of patient who has blood glucose (GLU) not within normal range but with total cholesterol(T-CHO) within normal range.",challenging,"SELECT DISTINCT T1.ID, T1.SEX , STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GLU >= 180 AND T2.`T-CHO` < 250","SELECT patient.id, patient.sex, (SUBSTR('-'||age,2))  FROM patient  JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.glu >= 180 AND laboratory.t_cho < 250","SELECT T2.id, T2.sex, SUBTRACT(year(current_timestamp), year(T2.Birthday)) FROM examination AS T1 INNER JOIN patient AS T2 ON T1.id = T2.id INNER JOIN laboratory AS T3 ON T1.id = T3.id WHERE T3.GLU > 180 AND T3.`T-CHO` < 250",0,0
"For all the female patient age 50 and above, who has abnormal red blood cell count. State if they were admitted to hospital.",challenging,"SELECT DISTINCT T1.ID, T1.Admission FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (T2.RBC <= 3.5 OR T2.RBC >= 6.0) AND STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) >= 50","SELECT    patient.id AS PatientID,   patient.sex AS Sex,   SUBTRACT(year(current_timestamp), year(patient.birthday)) AS Age,   laboratory.rbc AS RBC,   patient.admission AS Admission FROM    patient JOIN    laboratory ON patient.id = laboratory.id WHERE    patient.sex = 'F'    AND SUBTRACT(year(current_timestamp), year(patient.birthday)) >= 50    AND (laboratory.rbc <= 3.5 OR laboratory.rbc >= 6.0)","SELECT T2.id, T2.admission FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T1.sex = 'F' AND SUBTRACT(year(current_timestamp), year(T1.Birthday)) >= 50 AND (T2.RBC <= 3.5 OR T2.RBC >= 6.0)",0,0
Name the ID and age of patient with two or more laboratory examinations which show their hematoclit level exceeded the normal range.,challenging,"SELECT DISTINCT T1.ID, STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.ID IN ( SELECT ID FROM Laboratory WHERE HCT >= 52 GROUP BY ID HAVING COUNT(ID) >= 2 )","SELECT patient.id, (SUBSTR('current_timestamp', 1, 4) - SUBSTR(patient.birthday, 1, 4)) AS age  FROM patient  JOIN (SELECT id FROM laboratory WHERE hct >= 52 GROUP BY id HAVING COUNT(id) > 2) AS lab_filter  ON patient.id = lab_filter.id","SELECT T2.id, SUBTRACT(year(current_timestamp), year(T2.Birthday)) FROM examination AS T1 INNER JOIN patient AS T2 ON T1.id = T2.id INNER JOIN laboratory AS T3 ON T1.id = T3.id WHERE COUNT(T3.id) > 2 AND T3.HCT >= 52",0,0
"For patients with abnormal platelet level, state the number of patients with lower than normal range. How is it compare to the number of patients with higher than normal range?",challenging,SELECT SUM(CASE WHEN T2.PLT <= 100 THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.PLT >= 400 THEN 1 ELSE 0 END) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID,"SELECT    SUM(CASE WHEN PLT < 100 THEN 1 ELSE 0 END) AS lower_than_normal,   SUM(CASE WHEN PLT > 400 THEN 1 ELSE 0 END) AS higher_than_normal FROM    laboratory JOIN    patient ON laboratory.id = patient.id WHERE    PLT < 100 OR PLT > 400","SELECT COUNT(DISTINCT CASE WHEN T2.PLT < 100 THEN T1.id END) as 'Lower than Normal', COUNT(DISTINCT CASE WHEN T2.PLT > 400 THEN T1.id END) as 'Higher than Normal' FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T2.PLT <= 100 OR T2.PLT >= 400",0,0
"For laboratory examinations take in 1984, list all patients below 50 years old with normal platelet level.",challenging,"SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.PLT BETWEEN 100 AND 400 AND STRFTIME('%Y', T2.Date) - STRFTIME('%Y', T1.Birthday) < 50 AND STRFTIME('%Y', T2.Date) = '1984'","SELECT patient.id, patient.birthday, patient.sex, laboratory.plt FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE YEAR(laboratory.date) = '1984'  AND (SUBTRACT(YEAR(CURRENT_TIMESTAMP), YEAR(patient.birthday)) < 50) AND (laboratory.plt BETWEEN 100 AND 400)","SELECT T2.id, T2.sex, T2.birthday FROM examination AS T1 INNER JOIN patient AS T2 ON T1.id = T2.id INNER JOIN laboratory AS T3 ON T1.id = T3.id WHERE YEAR(T1.`examination date`) = '1984' AND SUBTRACT(year(current_timestamp), year(T2.birthday)) < 50 AND T3.plt BETWEEN 100 AND 400",0,0
"For all patients who are older than 55 years old, what is the percentage of female who has abnormal prothrombin time (PT)?",challenging,"SELECT CAST(SUM(CASE WHEN T2.PT >= 14 AND T1.SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) > 55","SELECT    (SELECT COUNT(*) FROM examination     INNER JOIN patient ON examination.id = patient.id     WHERE SUBTRACT(year(current_timestamp), year(patient.birthday)) > 55     AND patient.sex = 'F'     AND examination.pt >= 14) /    (SELECT COUNT(*) FROM examination     INNER JOIN patient ON examination.id = patient.id     WHERE SUBTRACT(year(current_timestamp), year(patient.birthday)) > 55) * 100 AS percentage",SELECT (SELECT COUNT(*) FROM patient AS T1 INNER JOIN examination AS T2 ON T1.id = T2.id INNER JOIN laboratory AS T3 ON T1.id = T3.id WHERE T1.sex = 'F' AND T3.pt >= 14 AND (SELECT YEAR(CURRENT_TIMESTAMP) - YEAR(T1.birthday)) > 55) / (SELECT COUNT(*) FROM patient AS T1 INNER JOIN examination AS T2 ON T1.id = T2.id INNER JOIN laboratory AS T3 ON T1.id = T3.id WHERE T3.pt >= 14 AND (SELECT YEAR(CURRENT_TIMESTAMP) - YEAR(T1.birthday)) > 55) * 100,0,0
"Among the male patients who have a normal level of white blood cells, how many of them have an abnormal fibrinogen level?",challenging,SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.FG <= 150 OR T2.FG >= 450 AND T2.WBC > 3.5 AND T2.WBC < 9.0 AND T1.SEX = 'M',SELECT COUNT(*)  FROM patient  JOIN laboratory ON patient.id = laboratory.id  WHERE patient.sex = 'M'  AND laboratory.wbc > 3.5  AND laboratory.wbc < 9.0  AND (laboratory.fg <= 150 OR laboratory.fg >= 450),SELECT COUNT(*) FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T1.sex = 'M' AND T2.WBC BETWEEN 3.5 AND 9 AND (T2.FG BETWEEN 150 AND 450),0,0
"Among the patients whose creatinine level is abnormal, how many of them aren't 70 yet?",challenging,"SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE >= 1.5 AND STRFTIME('%Y', Date('now')) - STRFTIME('%Y', T1.Birthday) < 70","SELECT COUNT(*)  FROM patient  JOIN examination ON patient.id = examination.id  JOIN laboratory ON patient.id = laboratory.id  WHERE CRE >= 1.5 AND SUBTRACT((YEAR(CURDATE()), YEAR(Birthday))) < 70","SELECT COUNT(*) FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T2.cre >= 1.5 AND SUBTRACT(YEAR(CURDATE()), YEAR(T1.birthday)) < 70",0,0
"Among the patients who has a normal anti-scl70, how many of them are female and does not have any symptom?",challenging,SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T3.ID = T2.ID WHERE (T2.SC170 = 'negative' OR T2.SC170 = '0') AND T1.SEX = 'F' AND T3.Symptoms IS NULL,"SELECT COUNT(DISTINCT patient.id)  FROM patient  JOIN examination ON patient.id = examination.id  WHERE patient.sex = 'F' AND examination.symptoms IS NULL AND examination.sc170 IN ('negative', '0')","SELECT COUNT(DISTINCT T1.id) FROM patient AS T1 INNER JOIN examination AS T2 ON T1.id = T2.id INNER JOIN laboratory AS T3 ON T1.id = T3.id WHERE T1.sex = 'F' AND T2.symptoms IS NULL AND T3.sc170 IN ('negative', '0')",0,1
What is the anti Cardiolipin antibody concentration of the female patient with the highest uric acid level in the normal range?,challenging,"SELECT T3.`aCL IgG`, T3.`aCL IgM`, T3.`aCL IgA` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T3.ID = T2.ID WHERE T1.SEX = 'F' AND T2.UA > 6.5 ORDER BY T2.UA DESC LIMIT 1","SELECT ""patient"".""id"", ""patient"".""sex"", ""examination"".""acl igg"", ""examination"".""acl igm"", ""examination"".""acl iga"" FROM ""patient"" JOIN ""examination"" ON ""patient"".""id"" = ""examination"".""id"" WHERE ""patient"".""sex"" = 'F' AND ""examination"".""ua"" <= 6.50 ORDER BY ""examination"".""ua"" DESC LIMIT 1","SELECT MAX(T1.`aCL IgG`, T1.`aCL IgM`, T1.`aCL IgA`) FROM examination AS T1 INNER JOIN patient AS T2 ON T1.id = T2.id INNER JOIN laboratory AS T3 ON T1.id = T3.id WHERE T2.sex = 'F' AND T3.UA <= 6.50",0,0
"Among the patients whose total bilirubin is over the normal range, how many of them have a peripheral pattern observed in the sheet of ANA examination?",challenging,SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.`T-BIL` >= 2 AND T3.`ANA Pattern` LIKE '%P%',"SELECT COUNT(*)  FROM examination  INNER JOIN patient ON examination.id = patient.id  INNER JOIN laboratory ON examination.id = laboratory.id  WHERE T-BIL >= 2.0 AND ""ANA Pattern"" LIKE '%P%'",SELECT COUNT(*) FROM patient AS T1 INNER JOIN examination AS T2 ON T1.id = T2.id INNER JOIN laboratory AS T3 ON T1.id = T3.id WHERE T3.`T-BIL` >= 2.0 AND T2.`ana pattern` LIKE '%P%',0,1
"For the patients with a normal range of creatinine phosphokinase, how many of them have a positive measure of degree of coagulation?",challenging,SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.CPK < 250 AND (T3.KCT = '+' OR T3.RVVT = '+' OR T3.LAC = '+'),SELECT COUNT(*)  FROM examination  INNER JOIN patient ON examination.id = patient.id  INNER JOIN laboratory ON examination.id = laboratory.id  WHERE laboratory.cpk < 250 AND (examination.kct = '+' OR examination.rvvt = '+' OR examination.lac = '+'),SELECT COUNT(*) FROM patient AS T1 INNER JOIN examination AS T2 ON T1.id = T2.id INNER JOIN laboratory AS T3 ON T1.id = T3.id WHERE T3.CPK < 250 AND (T2.KCT = '+' OR T2.RVVT = '+' OR T2.LAC = '+'),1,1
Please list the patient's ID if he or she has an abnormal level of red blood cell and is followed at the outpatient clinic.,challenging,SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE (T2.RBC <= 3.5 OR T2.RBC >= 6) AND T1.Admission = '-',SELECT patient.id  FROM patient  JOIN laboratory ON patient.id = laboratory.id  WHERE (laboratory.rbc <= 3.5 OR laboratory.rbc >= 6.0) AND patient.admission = '-',SELECT T2.id FROM examination AS T1 INNER JOIN patient AS T2 ON T1.id = T2.id INNER JOIN laboratory AS T3 ON T1.id = T3.id WHERE (T3.rbc <= 3.5 OR T3.rbc >= 6.0) AND T2.admission = '-',1,0
Calculate the total average cost that Elijah Allen spent in the events on September and October.,challenging,"SELECT AVG(T2.cost) FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.last_name = 'Allen' AND T1.first_name = 'Elijah' AND (SUBSTR(T2.expense_date, 6, 2) = '09' OR SUBSTR(T2.expense_date, 6, 2) = '10')","SELECT AVG(e.cost) as average_cost FROM expense e JOIN member m ON e.link_to_member = m.member_id WHERE m.first_name = 'Elijah' AND m.last_name = 'Allen' AND (strftime('%m', e.expense_date) = '09' OR strftime('%m', e.expense_date) = '10')","SELECT AVG(T2.cost) FROM event AS T1 INNER JOIN expense AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T3.first_name = 'Elijah' AND T3.last_name = 'Allen' AND (strftime('%m', T2.expense_date) = '09' OR strftime('%m', T2.expense_date) = '10')",1,0
"How many times was the budget in Advertisement for ""Yearly Kickoff"" meeting more than ""October Meeting""?",challenging,SELECT CAST(SUM(CASE WHEN T2.event_name = 'Yearly Kickoff' THEN T1.amount ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.event_name = 'October Meeting' THEN T1.amount ELSE 0 END) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Advertisement' AND T2.type = 'Meeting',SELECT COUNT(*)  FROM budget  WHERE category = 'Advertisement'  AND (event_status = 'Yearly Kickoff'  AND amount > (SELECT SUM(amount) FROM budget WHERE event_status = 'October Meeting')),SELECT COUNT(*) FROM (SELECT CASE WHEN T1.event_name = 'Yearly Kickoff' AND T2.category = 'Advertisement' AND T1.amount > (SELECT T3.amount FROM event AS T3 INNER JOIN budget AS T4 ON T3.event_id = T4.link_to_event WHERE T3.event_name = 'October Meeting' AND T4.category = 'Advertisement') THEN 1 ELSE 0 END AS is_more FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event) WHERE is_more = 1,0,0
What is the name of the social event that was attended by the vice president of the Student_Club located at 900 E. Washington St.?,challenging,SELECT T2.event_name FROM attendance AS T1 INNER JOIN event AS T2 ON T2.event_id = T1.link_to_event INNER JOIN member AS T3 ON T1.link_to_member = T3.member_id WHERE T3.position = 'Vice President' AND T2.location = '900 E. Washington St.' AND T2.type = 'Social',SELECT event_name  FROM event  INNER JOIN attendance ON event.event_id = attendance.link_to_event  INNER JOIN member ON attendance.link_to_member = member.member_id  WHERE member.position = 'Vice President' AND event.type = 'Social' AND member.zip = (SELECT zip_code FROM zip_code WHERE city = 'Indianapolis' AND state = 'IN'),SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T1.type = 'Social' AND T3.position = 'Vice President' AND T3.zip IN (SELECT zip_code FROM zip_code WHERE location = '900 E. Washington St.'),0,1
Which members who were approved from 1/10/2019 to 11/19/2019? Please identify the member who attended the event and the link to their event.,challenging,"SELECT DISTINCT T1.link_to_member, T3.link_to_event FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN attendance AS T3 ON T2.member_id = T3.link_to_member WHERE date(SUBSTR(T1.expense_date, 1, 10)) BETWEEN '2019-01-10' AND '2019-11-19' AND T1.approved = 'true'","SELECT member.member_id, member.first_name, member.last_name, expense.approved, attendance.link_to_event FROM member JOIN expense ON member.member_id = expense.link_to_member JOIN attendance ON member.member_id = attendance.link_to_member WHERE expense.approved = 'true' AND expense.expense_date BETWEEN '2019-01-10' and '2019-11-19'","SELECT T1.member_id, T1.first_name, T1.last_name, T1.email, T1.position, T1.t_shirt_size, T1.phone, T1.zip, T1.link_to_major, T3.link_to_event FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member INNER JOIN attendance AS T3 ON T1.member_id = T3.link_to_member WHERE T2.approved = 'true' AND T2.expense_date BETWEEN '2019-01-10' AND '2019-11-19'",0,0
Find the name and date of events with expenses for pizza that were more than fifty dollars but less than a hundred dollars.,challenging,"SELECT T1.event_name, T1.event_date FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T3.expense_description = 'Pizza' AND T3.cost > 50 AND T3.cost < 100","SELECT event.event_name, event.event_date FROM event JOIN expense ON event.event_id = expense.link_to_event WHERE expense.expense_description = 'Pizza' AND expense.cost > 50 AND expense.cost < 100","SELECT event.event_name, event.event_date FROM event INNER JOIN expense ON event.event_id = expense.link_to_event WHERE expense.expense_description = 'Pizza' AND expense.cost > 50 AND expense.cost < 100",0,0
"Among the members who incurred expenses in more than one event, who paid the most amount?",challenging,SELECT T2.member_id FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN budget AS T3 ON T1.link_to_budget = T3.budget_id INNER JOIN event AS T4 ON T3.link_to_event = T4.event_id GROUP BY T2.member_id HAVING COUNT(DISTINCT T4.event_id) > 1 ORDER BY SUM(T1.cost) DESC LIMIT 1,"SELECT member.first_name, member.last_name, SUM(expense.cost) as total_expense FROM member JOIN expense ON member.member_id = expense.link_to_member JOIN event ON expense.link_to_event = event.event_id GROUP BY member.member_id HAVING COUNT(DISTINCT event.event_id) > 1 ORDER BY total_expense DESC LIMIT 1","SELECT T1.first_name, T1.last_name, T2.cost FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.cost = (SELECT MAX(T3.cost) FROM expense AS T3 WHERE (SELECT COUNT(T4.event_id) FROM event AS T4 WHERE T4.event_id = T3.link_to_event) > 1)",0,0
Give the full name and contact number of members who had to spend more than average on each expense.,challenging,"SELECT DISTINCT T3.first_name, T3.last_name, T3.phone FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN member AS T3 ON T3.member_id = T1.link_to_member WHERE T1.cost > ( SELECT AVG(T1.cost) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN member AS T3 ON T3.member_id = T1.link_to_member )","SELECT member.first_name || ' ' || member.last_name AS full_name, member.phone FROM member JOIN expense ON member.member_id = expense.link_to_member WHERE expense.cost > (SELECT AVG(expense.cost) FROM expense)","SELECT member.first_name || ' ' || member.last_name AS full_name, member.phone FROM member INNER JOIN expense ON member.member_id = expense.link_to_member GROUP BY member.member_id HAVING AVG(expense.cost) > (SELECT AVG(expense.cost) FROM expense)",0,0
"Write the full name of the member who spent money for water, veggie tray and supplies and include the cost of it.",challenging,"SELECT T2.first_name, T2.last_name, T1.cost FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.expense_description = 'Water, Veggie tray, supplies'","SELECT member.first_name, member.last_name, expense.cost  FROM member  JOIN expense ON member.member_id = expense.link_to_member  WHERE expense.expense_description = 'Water, Veggie tray, supplies'","SELECT member.first_name || ' ' || member.last_name AS FullName, expense.cost FROM member INNER JOIN expense ON member.member_id = expense.link_to_member WHERE expense.expense_description = 'Water, Veggie tray, supplies'",1,0
Write the full names of students who received funds on the date of 9/9/2019 and include the amount received.,challenging,"SELECT DISTINCT T3.first_name, T3.last_name, T4.amount FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T3.member_id = T2.link_to_member INNER JOIN income AS T4 ON T4.link_to_member = T3.member_id WHERE T4.date_received = '2019-09-09'","SELECT member.first_name, member.last_name, income.amount FROM member JOIN income ON member.member_id = income.link_to_member WHERE income.date_received = '9/9/2019'","SELECT member.first_name || ' ' || member.last_name AS FullName, income.amount FROM member INNER JOIN income ON member.member_id = income.link_to_member WHERE income.date_received = '9/9/2019'",0,0
What was the difference in gas consumption between CZK-paying customers and EUR-paying customers in 2012?,challenging,"SELECT SUM(IIF(T1.Currency = 'CZK', T2.Consumption, 0)) - SUM(IIF(T1.Currency = 'EUR', T2.Consumption, 0)) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE SUBSTR(T2.Date, 1, 4) = '2012'",SELECT    SUM(CASE WHEN customers.currency = 'CZK' THEN yearmonth.consumption ELSE 0 END) -    SUM(CASE WHEN customers.currency = 'EUR' THEN yearmonth.consumption ELSE 0 END) AS 'Difference in Consumption' FROM    customers JOIN    transactions_1k ON customers.customerid = transactions_1k.customerid JOIN    yearmonth ON transactions_1k.date BETWEEN 201201 AND 201212 AND customers.customerid = yearmonth.customerid GROUP BY    customers.currency,"SELECT SUM(CASE WHEN T1.currency = 'CZK' THEN T3.consumption ELSE 0 END) - SUM(CASE WHEN T1.currency = 'EUR' THEN T3.consumption ELSE 0 END) AS 'Consumption Difference' FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.customerid = T2.customerid INNER JOIN yearmonth AS T3 ON T2.transactionid = T3.transactionid WHERE strftime('%Y', T3.date) = '2012'",0,0
"What is the difference in the annual average consumption of the customers with the least amount of consumption paid in CZK for 2013 between SME and LAM, LAM and KAM, and KAM and SME?",challenging,"SELECT CAST(SUM(IIF(T1.Segment = 'SME', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'LAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) , CAST(SUM(IIF(T1.Segment = 'LAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'KAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) , CAST(SUM(IIF(T1.Segment = 'KAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'SME', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' AND T2.Consumption = ( SELECT MIN(Consumption) FROM yearmonth ) AND T2.Date BETWEEN 201301 AND 201312","SELECT    (SELECT AVG(consumption)     FROM yearmonth     WHERE SUBSTR(date, 1, 4) = '2013'     AND customerid IN       (SELECT customerid        FROM customers        WHERE segment = 'SME'        AND currency = 'CZK'        AND customerid IN          (SELECT customerid           FROM transactions_1k           GROUP BY customerid           ORDER BY SUM(amount)           LIMIT 1))     ) -    (SELECT AVG(consumption)     FROM yearmonth     WHERE SUBSTR(date, 1, 4) = '2013'     AND customerid IN       (SELECT customerid        FROM customers        WHERE segment = 'LAM'        AND currency = 'CZK'        AND customerid IN          (SELECT customerid           FROM transactions_1k           GROUP BY customerid           ORDER BY SUM(amount)           LIMIT 1))     ) AS 'SME_LAM',      (SELECT AVG(consumption)     FROM yearmonth     WHERE SUBSTR(date, 1, 4) = '2013'     AND customerid IN       (SELECT customerid        FROM customers        WHERE segment = 'LAM'        AND currency = 'CZK'        AND customerid IN          (SELECT customerid           FROM transactions_1k           GROUP BY customerid           ORDER BY SUM(amount)           LIMIT 1))     ) -    (SELECT AVG(consumption)     FROM yearmonth     WHERE SUBSTR(date, 1, 4) = '2013'     AND customerid IN       (SELECT customerid        FROM customers        WHERE segment = 'KAM'        AND currency = 'CZK'        AND customerid IN          (SELECT customerid           FROM transactions_1k           GROUP BY customerid           ORDER BY SUM(amount)           LIMIT 1))     ) AS 'LAM_KAM',      (SELECT AVG(consumption)     FROM yearmonth     WHERE SUBSTR(date, 1, 4) = '2013'     AND customerid IN","SELECT    (SELECT AVG(T2.consumption) FROM yearmonth AS T2 INNER JOIN customers AS T3 ON T2.customerid = T3.customerid WHERE T3.currency = 'CZK' AND T3.segment = 'SME' AND strftime('%Y', T2.date) = '2013') -    (SELECT AVG(T2.consumption) FROM yearmonth AS T2 INNER JOIN customers AS T3 ON T2.customerid = T3.customerid WHERE T3.currency = 'CZK' AND T3.segment = 'LAM' AND strftime('%Y', T2.date) = '2013') AS 'SME_LAM',   (SELECT AVG(T2.consumption) FROM yearmonth AS T2 INNER JOIN customers AS T3 ON T2.customerid = T3.customerid WHERE T3.currency = 'CZK' AND T3.segment = 'LAM' AND strftime('%Y', T2.date) = '2013') -    (SELECT AVG(T2.consumption) FROM yearmonth AS T2 INNER JOIN customers AS T3 ON T2.customerid = T3.customerid WHERE T3.currency = 'CZK' AND T3.segment = 'KAM' AND strftime('%Y', T2.date) = '2013') AS 'LAM_KAM',   (SELECT AVG(T2.consumption) FROM yearmonth AS T2 INNER JOIN customers AS T3 ON T2.customerid = T3.customerid WHERE T3.currency = 'CZK' AND T3.segment = 'KAM' AND strftime('%Y', T2.date) = '2013') -    (SELECT AVG(T2.consumption) FROM yearmonth AS T2 INNER JOIN customers AS T3 ON T2.customerid = T3.customerid WHERE T3.currency = 'CZK' AND T3.segment = 'SME' AND strftime('%Y', T2.date) = '2013') AS 'KAM_SME'",0,0
"Which of the three segments—SME, LAM and KAM—has the biggest and lowest percentage increases in consumption paid in EUR between 2012 and 2013?",challenging,"SELECT CAST((SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2013%', T2.Consumption, 0)) - SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2012%', T2.Consumption, 0))) AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2012%', T2.Consumption, 0)), CAST(SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2013%', T2.Consumption, 0)) - SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) , CAST(SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2013%', T2.Consumption, 0)) - SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID","SELECT    segment,    (SUM(CASE WHEN strftime('%Y', date) = '2013' THEN consumption ELSE 0 END) - SUM(CASE WHEN strftime('%Y', date) = '2012' THEN consumption ELSE 0 END)) / SUM(CASE WHEN strftime('%Y', date) = '2013' THEN consumption ELSE 0 END) * 100 AS Percentage_Increase FROM    yearmonth JOIN    customers ON yearmonth.customerid = customers.customerid WHERE    currency = 'EUR' GROUP BY    segment ORDER BY    Percentage_Increase DESC LIMIT 1","SELECT    T1.segment,    (T1.consumption_2013 - T1.consumption_2012) / T1.consumption_2013 * 100 AS Percentage_Increase FROM    (     SELECT        T2.segment,        SUM(CASE WHEN strftime('%Y', T3.date) = '2012' THEN T3.consumption ELSE 0 END) AS consumption_2012,        SUM(CASE WHEN strftime('%Y', T3.date) = '2013' THEN T3.consumption ELSE 0 END) AS consumption_2013     FROM        customers AS T2        INNER JOIN yearmonth AS T3 ON T2.customerid = T3.customerid     WHERE        T2.currency = 'EUR'      GROUP BY        T2.segment   ) AS T1 ORDER BY    Percentage_Increase DESC LIMIT 1",0,0
"For the customer who paid 634.8 in 2012/8/25, what was the consumption decrease rate from Year 2012 to 2013?",challenging,"SELECT CAST(SUM(IIF(SUBSTR(Date, 1, 4) = '2012', Consumption, 0)) - SUM(IIF(SUBSTR(Date, 1, 4) = '2013', Consumption, 0)) AS FLOAT) / SUM(IIF(SUBSTR(Date, 1, 4) = '2012', Consumption, 0)) FROM yearmonth WHERE CustomerID = ( SELECT T1.CustomerID FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-25' AND T1.Price = 634.8 )","SELECT    (SELECT      SUM(t1.amount * t1.price) AS consumption_2012   FROM      transactions_1k AS t1   WHERE      strftime('%Y', t1.date) = '2012' AND      t1.customerid = (       SELECT          customerid        FROM          transactions_1k        WHERE          strftime('%Y-%m-%d', date) = '2012-08-25' AND          amount * price = 634.8     )   ) -    (SELECT      SUM(t2.amount * t2.price) AS consumption_2013   FROM      transactions_1k AS t2   WHERE      strftime('%Y', t2.date) = '2013' AND      t2.customerid = (       SELECT          customerid        FROM          transactions_1k        WHERE          strftime('%Y-%m-%d', date) = '2012-08-25' AND          amount * price = 634.8     )   ) /    (SELECT      SUM(t1.amount * t1.price) AS consumption_2012   FROM      transactions_1k AS t1   WHERE      strftime('%Y', t1.date) = '2012' AND      t1.customerid = (       SELECT          customerid        FROM          transactions_1k        WHERE          strftime('%Y-%m-%d', date) = '2012-08-25' AND          amount * price = 634.8     )   ) AS decrease_rate","SELECT (SELECT consumption FROM yearmonth WHERE customerid = T1.customerid AND strftime('%Y', date) = '2012') - (SELECT consumption FROM yearmonth WHERE customerid = T1.customerid AND strftime('%Y', date) = '2013') / (SELECT consumption FROM yearmonth WHERE customerid = T1.customerid AND strftime('%Y', date) = '2012') AS decrease_rate FROM transactions_1k AS T1 WHERE T1.date = '2012-08-25' AND T1.amount = 634.8",0,0
