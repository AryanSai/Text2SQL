Question,Difficulty,Ground Truth SQL,Basic Predicted SQL,Advanced Predicted SQL,EX Basic,EX Advanced
"Consider the average difference between K-12 enrollment and 15-17 enrollment of schools that are locally funded, list the names and DOC type of schools which has a difference above this average.",challenging,"SELECT T2.School, T2.DOC FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.FundingType = 'Locally funded' AND (T1.`Enrollment (K-12)` - T1.`Enrollment (Ages 5-17)`) > (SELECT AVG(T3.`Enrollment (K-12)` - T3.`Enrollment (Ages 5-17)`) FROM frpm AS T3 INNER JOIN schools AS T4 ON T3.CDSCode = T4.CDSCode WHERE T4.FundingType = 'Locally funded')","SELECT s.school_name, s.doc_type FROM schools s JOIN frpm f ON s.cdscode = f.cdscode WHERE s.fundingtype = 'Locally Funded' AND (s.enrollment_k_12 - s.enrollment_ages_5_17) > (     SELECT AVG(enrollment_k_12 - enrollment_ages_5_17)     FROM schools     WHERE fundingtype = 'Locally Funded' )",NULL,0,0
Under whose administration is the school with the highest number of students scoring 1500 or more on the SAT? Indicate their full names.,challenging,"SELECT T2.AdmFName1, T2.AdmLName1, T2.AdmFName2, T2.AdmLName2, T2.AdmFName3, T2.AdmLName3 FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.NumGE1500 DESC LIMIT 1","SELECT    admfname1,    admlname1,    admfname2,    admlname2,    admfname3,    admlname3  FROM    schools  WHERE    ncesschool IN (     SELECT        ncesschool      FROM        satscores      WHERE        numge1500 = (         SELECT            MAX(numge1500)          FROM            satscores       )   )","SELECT T2.AdmFName1, T2.AdmLName1, T2.AdmEmail1 FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode INNER JOIN satscores AS T3 ON T2.CDSCode = T3.CDS WHERE T3.NumGE1500 >= 1500 ORDER BY T1.`Enrollment (K-12)` DESC LIMIT 1",0,0
What is the total number of non-chartered schools in the county of Los Angeles with a percent (%) of eligible free meals for grades 1 through 12 that is less than 0.18%?,challenging,SELECT COUNT(T2.School) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'Los Angeles' AND T2.Charter = 0 AND CAST(T1.`Free Meal Count (K-12)` AS REAL) * 100 / T1.`Enrollment (K-12)` < 0.18,SELECT COUNT(*) AS total_non_chartered_schools FROM frpm f JOIN schools s ON f.cdscode = s.cdscode WHERE s.charter = 0 AND f.county_name = 'Los Angeles' AND (f.`Free Meal Count (K-12)` * 100.0 / f.`Enrollment (K-12)`) < 0.18,NULL,0,0
"Of the schools that offers a magnet program serving a grade span of Kindergarten to 8th grade, how many offers Multiple Provision Types? List the number of cities that offers a Kindergarten to 8th grade span and indicate how many schools are there serving such grade span for each city.",challenging,"SELECT T2.City, COUNT(T2.CDSCode) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.Magnet = 1 AND T2.GSoffered = 'K-8' AND T1.`NSLP Provision Status` = 'Multiple Provision Types' GROUP BY T2.City","SELECT    COUNT(DISTINCT city) AS num_cities,   city,   COUNT(school) AS num_schools FROM    schools WHERE    magnet = 1 AND   (low_grade = 'K' OR low_grade = '1') AND   (high_grade = '8' OR high_grade = '2') AND   NSLP_Provision_Status = 'Multiple Provision Types' GROUP BY    city","SELECT T2.City, COUNT(T2.School) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.Magnet = 1 AND T1.lowgrade = 0 AND T1.highgrade = 8 AND T2.soc = 62 AND T2.soctype = 'Intermediate/Middle Schools' AND T1.nslpprovisionstatus = 'Multiple Provision Types' GROUP BY T2.City",0,0
"What are the valid e-mail addresses of the administrator of the school located in the San Bernardino county, City of San Bernardino City Unified that opened between 1/1/2009 to 12/31/2010 whose school types are public Intermediate/Middle Schools and Unified Schools?",challenging,"SELECT T2.AdmEmail1, T2.AdmEmail2 FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'San Bernardino' AND T2.City = 'San Bernardino' AND T2.DOC = 54 AND strftime('%Y', T2.OpenDate) BETWEEN '2009' AND '2010' AND T2.SOC = 62","SELECT admemail1, admemail2, admemail3 FROM schools WHERE county = 'San Bernardino' AND city = 'San Bernardino City Unified' AND opendate BETWEEN '2009-01-01' AND '2010-12-31' AND (SOC = 62 OR DOC = 54)",NULL,0,0
"List out the account numbers of female clients who are oldest and has lowest average salary, calculate the gap between this lowest average salary with the highest average salary?",challenging,"SELECT T1.account_id , ( SELECT MAX(A11) - MIN(A11) FROM district ) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T1.account_id = T3.account_id INNER JOIN client AS T4 ON T3.client_id = T4.client_id WHERE T2.district_id = ( SELECT district_id FROM client WHERE gender = 'F' ORDER BY birth_date ASC LIMIT 1 ) ORDER BY T2.A11 DESC LIMIT 1",SELECT    a.account_id FROM    account a JOIN    disp d ON a.account_id = d.account_id JOIN    client c ON d.client_id = c.client_id JOIN    district d2 ON c.district_id = d2.district_id WHERE    c.gender = 'F' ORDER BY    c.birth_date ASC LIMIT    1,NULL,0,0
"For the branch which located in the south Bohemia with biggest number of inhabitants, what is the percentage of the male clients?",challenging,SELECT CAST(SUM(T1.gender = 'M') AS REAL) * 100 / COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A3 = 'south Bohemia' GROUP BY T2.A4 ORDER BY T2.A4 DESC LIMIT 1,"SELECT    DIVIDE(COUNT(client.client_id), COUNT(DISTINCT client.client_id)) * 100 AS percentage_of_male_clients FROM    client JOIN    district ON client.district_id = district.district_id WHERE    district.a3 = 'south Bohemia'",SELECT (COUNT(T1.client_id) FILTER (WHERE T1.gender = 'M') * 100.0 / COUNT(T1.client_id)) AS PercentageOfMaleClients FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.a3 = 'South Bohemia',0,0
"For the client whose loan was approved first in 1993/7/5, what is the increase rate of his/her account balance from 1993/3/22 to 1998/12/27?",challenging,"SELECT CAST((SUM(IIF(T3.date = '1998-12-27', T3.balance, 0)) - SUM(IIF(T3.date = '1993-03-22', T3.balance, 0))) AS REAL) * 100 / SUM(IIF(T3.date = '1993-03-22', T3.balance, 0)) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN trans AS T3 ON T3.account_id = T2.account_id WHERE T1.date = '1993-07-05'",SELECT (   (     (SELECT balance      FROM trans      WHERE account_id = (        SELECT account_id        FROM loan        WHERE date = '1993/7/5'      ) AND date = '1998/12/27'   ) - (SELECT balance        FROM trans        WHERE account_id = (          SELECT account_id          FROM loan          WHERE date = '1993/7/5'        ) AND date = '1993/3/22'   ) ) / (SELECT balance      FROM trans      WHERE account_id = (        SELECT account_id        FROM loan        WHERE date = '1993/7/5'      ) AND date = '1993/3/22' ) ) * 100 AS increase_rate,SELECT ((SELECT T1.balance FROM trans AS T1 WHERE T1.account_id = (SELECT T2.account_id FROM loan AS T2 WHERE T2.date = '1993/7/5') AND T1.date = '1998/12/27') - (SELECT T3.balance FROM trans AS T3 WHERE T3.account_id = (SELECT T4.account_id FROM loan AS T4 WHERE T4.date = '1993/7/5') AND T3.date = '1993/3/22')) / (SELECT T5.balance FROM trans AS T5 WHERE T5.account_id = (SELECT T6.account_id FROM loan AS T6 WHERE T6.date = '1993/7/5') AND T5.date = '1993/3/22')) * 100 AS IncreaseRate,0,0
"For loans contracts which are still running where client are in debt, list the district of the and the state the percentage unemployment rate increment from year 1995 to 1996.",challenging,SELECT CAST((T3.A13 - T3.A12) AS REAL) * 100 / T3.A12 FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.status = 'D',"SELECT      d.district_id,     d.a12 AS unemployment_rate_1995,     d.a13 AS unemployment_rate_2016,     ((d.a13 - d.a12) / d.a12) * 100 AS unemployment_rate_increment_percentage FROM      district d JOIN      loan l ON d.district_id = l.account_id WHERE      l.status = 'D'     AND d.a12 IS NOT NULL     AND d.a13 IS NOT NULL","SELECT T2.district_id, T4.A12, T4.A13 FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.district_id = T3.district_id INNER JOIN district AS T4 ON T2.district_id = T4.district_id WHERE T1.status = 'D' AND (CAST(T4.A13 AS REAL) - CAST(T4.A12 AS REAL)) / CAST(T4.A12 AS REAL) * 100",0,0
"Please list the account types that are not eligible for loans, and the average income of residents in the district where the account is located exceeds $8000 but is no more than $9000.",challenging,SELECT T3.type FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T2.account_id = T3.account_id WHERE T3.type != 'OWNER' AND T1.A11 BETWEEN 8000 AND 9000,"SELECT d.a11 AS average_income, acc.type AS account_type FROM district d JOIN account acc ON d.district_id = acc.district_id WHERE d.a11 BETWEEN 8000 AND 9000 AND acc.type != 'OWNER'",SELECT DISTINCT T1.type FROM disp AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE T2.type != 'OWNER' AND T2.district_id IN (SELECT district_id FROM district WHERE a11 * 1000 > 8000 AND a11 * 1000 <= 9000),0,0
What was the growth rate of the total amount of loans across all accounts for a male client between 1996 and 1997?,challenging,"SELECT CAST((SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1997' THEN T1.amount ELSE 0 END) - SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1996' THEN T1.amount ELSE 0 END)) AS REAL) * 100 / SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1996' THEN T1.amount ELSE 0 END) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN disp AS T3 ON T3.account_id = T2.account_id INNER JOIN client AS T4 ON T4.client_id = T3.client_id WHERE T4.gender = 'M' AND T3.type = 'OWNER'","SELECT ((SUM(amount_1997) - SUM(amount_1996)) / SUM(amount_1996)) * 100 AS growth_rate FROM (     SELECT SUM(l.amount) AS amount_1996, 0 AS amount_1997     FROM loan l     JOIN disp d ON l.account_id = d.account_id     JOIN client c ON d.client_id = c.client_id     WHERE c.gender = 'M' AND YEAR(l.date) = 1996     UNION ALL     SELECT 0 AS amount_1996, SUM(l.amount) AS amount_1997     FROM loan l     JOIN disp d ON l.account_id = d.account_id     JOIN client c ON d.client_id = c.client_id     WHERE c.gender = 'M' AND YEAR(l.date) = 1997 ) AS loan_amounts",NULL,0,0
How often does account number 3 request an account statement to be released? What was the aim of debiting 3539 in total?,challenging,"SELECT T1.frequency, T2.k_symbol FROM account AS T1 INNER JOIN (SELECT account_id, k_symbol, SUM(amount) AS total_amount FROM `order` GROUP BY account_id, k_symbol) AS T2 ON T1.account_id = T2.account_id WHERE T1.account_id = 3 AND T2.total_amount = 3539",NULL,"SELECT T1.frequency, T2.amount, T2.k_symbol FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T1.account_id = 3 AND T2.type = 'credit' AND T2.operation = 'withdrawal'",0,0
On average how many carcinogenic molecules are single bonded?,challenging,"SELECT AVG(single_bond_count) FROM (SELECT T3.molecule_id, COUNT(T1.bond_type) AS single_bond_count FROM bond AS T1  INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN molecule AS T3 ON T3.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' AND T3.label = '+' GROUP BY T3.molecule_id) AS subquery",SELECT AVG(single_bonded_count) AS average_single_bonded_carcinogenic_molecules FROM (     SELECT COUNT(m.molecule_id) AS single_bonded_count     FROM molecule m     JOIN bond b ON m.molecule_id = b.molecule_id     JOIN connected c ON b.bond_id = c.bond_id     WHERE m.label = '+' AND b.bond_type = '-'     GROUP BY m.molecule_id ) AS subquery,NULL,0,0
What elements are in the TR004_8_9 bond atoms?,challenging,SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR004_8_9',SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_id = 'TR004_8_9',SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.atom_id2 IN (SELECT atom_id FROM connected WHERE bond_id = 'TR004_8_9') OR T2.atom_id = (SELECT atom_id FROM connected WHERE bond_id = 'TR004_8_9'),1,0
What elements are in a double type bond?,challenging,SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id WHERE T2.bond_type = '=',SELECT DISTINCT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = '=',SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.atom_id = T2.atom_id INNER JOIN connected AS T3 ON T2.bond_id = T3.bond_id WHERE T2.bond_type = '=',0,0
Which element is the least numerous in non-carcinogenic molecules?,challenging,"SELECT T.element FROM (SELECT T1.element, COUNT(DISTINCT T1.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '-' GROUP BY T1.element ORDER BY COUNT(DISTINCT T1.molecule_id) ASC LIMIT 1) t","SELECT element, COUNT(*) AS element_count FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '-' GROUP BY element ORDER BY element_count ASC LIMIT 1",SELECT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN molecule AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.label = '-' GROUP BY T1.element ORDER BY COUNT(T1.element) LIMIT 1,0,1
How many atoms with iodine and with sulfur type elements are there in single bond molecules?,challenging,"SELECT COUNT(DISTINCT CASE WHEN T1.element = 'i' THEN T1.atom_id ELSE NULL END) AS iodine_nums , COUNT(DISTINCT CASE WHEN T1.element = 's' THEN T1.atom_id ELSE NULL END) AS sulfur_nums FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '-'","SELECT COUNT(DISTINCT atom.atom_id) AS total_atoms FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.element IN ('i', 's') AND bond.bond_type = '-' GROUP BY bond.molecule_id HAVING COUNT(DISTINCT atom.atom_id) > 0",NULL,0,0
What percentage of carcinogenic-type molecules does not contain fluorine?,challenging,SELECT CAST(COUNT(DISTINCT CASE WHEN T1.element <> 'f' THEN T2.molecule_id ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T2.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+',"SELECT    DIVIDE(COUNT(DISTINCT m.molecule_id), (     SELECT COUNT(DISTINCT molecule_id)      FROM molecule     WHERE label = '+'   )) * 100 AS percentage FROM    molecule m JOIN    atom a ON m.molecule_id = a.molecule_id WHERE    m.label = '+'    AND NOT EXISTS (     SELECT 1      FROM atom a2     JOIN connected c ON a2.atom_id = c.atom_id2     WHERE a.atom_id = c.atom_id        AND a2.element = 'f'   )",NULL,0,0
What is the percentage of carcinogenic molecules in triple type bonds?,challenging,SELECT CAST(COUNT(DISTINCT CASE WHEN T2.label = '+' THEN T2.molecule_id ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T2.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type = '#',"SELECT      DIVIDE(SUM(bond_type = '#') * 100, COUNT(bond_id)) AS percent FROM      bond JOIN      molecule ON bond.molecule_id = molecule.molecule_id WHERE      molecule.label = '+'",NULL,0,0
Please list top three elements of the toxicology of the molecule TR000 in alphabetical order.,challenging,SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR000' ORDER BY T.element LIMIT 3,SELECT element FROM atom WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR000') ORDER BY element ASC LIMIT 3,SELECT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.atom_id = T2.atom_id INNER JOIN connected AS T3 ON T2.bond_id = T3.bond_id INNER JOIN molecule AS T4 ON T3.atom_id2 = T4.molecule_id WHERE T4.molecule_id = 'TR000' ORDER BY T1.element ASC LIMIT 3,0,0
What are the elements of the toxicology and label of molecule TR060?,challenging,"SELECT DISTINCT T1.element, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR060'","SELECT a.element, m.label FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.molecule_id = 'TR060'","SELECT T1.element, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR060'",1,1
Which bond type accounted for the majority of the bonds found in molecule TR010 and state whether or not this molecule is carcinogenic?,challenging,"SELECT T.bond_type FROM ( SELECT T1.bond_type, COUNT(T1.molecule_id) FROM bond AS T1  WHERE T1.molecule_id = 'TR010' GROUP BY T1.bond_type ORDER BY COUNT(T1.molecule_id) DESC LIMIT 1 ) AS T","SELECT bond_type, COUNT(*) AS bond_count FROM bond WHERE molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR010') GROUP BY bond_type ORDER BY bond_count DESC LIMIT 1","SELECT T2.bond_type, COUNT(T2.bond_type) AS bond_count FROM bond AS T2 INNER JOIN connected AS T1 ON T2.bond_id = T1.bond_id WHERE T1.molecule_id = 'TR010' GROUP BY T2.bond_type ORDER BY bond_count DESC LIMIT 1",0,0
"List all the elements of the toxicology of the molecule ""TR004"".",challenging,SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR004',SELECT a.element FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = 'TR004',SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id INNER JOIN molecule AS T4 ON T3.molecule_id = T4.molecule_id WHERE T4.molecule_id = 'TR004',0,1
List all the elements of atoms that can not bond with any other atoms.,challenging,SELECT DISTINCT T.element FROM atom AS T WHERE T.element NOT IN ( SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id ),SELECT a.element FROM atom a WHERE a.atom_id NOT IN (     SELECT c.atom_id     FROM connected c ) ,SELECT DISTINCT T1.element FROM atom AS T1 LEFT JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.atom_id IS NULL,0,0
What are the elements of the atoms of TR144_8_19?,challenging,SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR144_8_19',SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_id = 'TR144_8_19',SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR144_8_19',1,1
List the elements of all the triple bonds.,challenging,SELECT DISTINCT T3.element FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T1.bond_type = '#',SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = '#',SELECT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.atom_id = T2.atom_id INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id INNER JOIN atom AS T4 ON T3.atom_id2 = T4.atom_id WHERE T2.bond_type = '#' AND T4.element IS NOT NULL,1,0
What is the composition of element chlorine in percentage among the single bond molecules?,challenging,"SELECT CAST(COUNT(CASE WHEN T.element = 'cl' THEN T.atom_id ELSE NULL END) AS REAL) * 100 / COUNT(T.atom_id) FROM ( SELECT T1.atom_id, T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type = '-' ) AS T","SELECT      DIVIDE(SUM(a.element = 'cl'), COUNT(a.atom_id)) * 100 AS percent FROM      atom a JOIN      bond b ON a.molecule_id = b.molecule_id JOIN      connected c ON a.atom_id = c.atom_id WHERE      b.bond_type = '-' GROUP BY      b.molecule_id",NULL,0,0
What are the elements for bond id TR001_10_11?,challenging,SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR001_10_11',SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id WHERE c.atom_id2 = (SELECT atom_id FROM atom WHERE bond_id = 'TR001_10_11') OR c.atom_id = (SELECT atom_id FROM atom WHERE bond_id = 'TR001_10_11'),SELECT T1.element FROM bond AS T1 WHERE T1.bond_id = 'TR001_10_11',0,0
What are the toxicology elements associated with bond ID TR000_1_2?,challenging,SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR000_1_2',SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id WHERE c.atom_id2 IN (SELECT atom_id FROM connected WHERE bond_id = 'TR000_1_2') OR c.atom_id = (SELECT atom_id FROM connected WHERE bond_id = 'TR000_1_2'),SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.atom_id2 = (SELECT atom_id2 FROM connected WHERE bond_id = 'TR000_1_2') AND T2.bond_id = 'TR000_1_2',0,0
Tally the toxicology element of the 4th atom of each molecule that was carcinogenic.,challenging,"SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND SUBSTR(T1.atom_id, -1) = '4' AND LENGTH(T1.atom_id) = 7","SELECT COUNT(DISTINCT a.atom_id) AS toxicology_count FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id JOIN connected c ON a.atom_id = c.atom_id WHERE m.label = '+' AND SUBSTR(a.atom_id, 7, 1) = '4'","SELECT COUNT(T1.element) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.atom_id = T2.atom_id INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id INNER JOIN molecule AS T4 ON T2.molecule_id = T4.molecule_id WHERE T4.label = '+' AND SUBSTR(T1.atom_id, 7, 1) = '4'",0,0
What is the ratio of Hydrogen elements in molecule ID TR006? List the ratio with its label.,challenging,"WITH SubQuery AS (SELECT DISTINCT T1.atom_id, T1.element, T1.molecule_id, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR006') SELECT CAST(COUNT(CASE WHEN element = 'h' THEN atom_id ELSE NULL END) AS REAL) / (CASE WHEN COUNT(atom_id) = 0 THEN NULL ELSE COUNT(atom_id) END) AS ratio, label FROM SubQuery GROUP BY label","SELECT    DIVIDE(SUM(a.element = 'h'), COUNT(a.element)) AS hydrogen_ratio,   m.label FROM    atom a JOIN    molecule m ON a.molecule_id = m.molecule_id WHERE    a.molecule_id = 'TR006' GROUP BY    m.label",NULL,0,0
Name chemical elements that form a bond TR001_10_11.,challenging,SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR001_10_11',"SELECT a1.element, a2.element FROM connected c JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE c.bond_id = 'TR001_10_11'","SELECT a.element, b.element FROM bond AS b INNER JOIN atom AS a ON b.atom_id = a.atom_id WHERE b.bond_id = 'TR001_10_11'",0,0
Which toxic element can be found in the molecule TR151?,challenging,SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR151',SELECT element FROM atom WHERE molecule_id IN (SELECT molecule_id FROM molecule WHERE label = 'TR151'),"SELECT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.atom_id = T2.atom_id INNER JOIN molecule AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.label = 'TR151' AND T1.element IN ('cl', 'br', 'i', 'sn', 'pb', 'te')",0,0
Name the elements that comprise the atoms of bond TR001_2_4.,challenging,SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_2_4',SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id WHERE c.atom_id2 = 4 AND c.bond_id = 'TR001_2_4',SELECT a.element FROM atom AS a INNER JOIN connected AS c ON a.atom_id = c.atom_id INNER JOIN bond AS b ON c.bond_id = b.bond_id WHERE b.bond_id = 'TR001_2_4',0,1
List all carcinogenic molecules and their elements.,challenging,"SELECT DISTINCT T2.molecule_id, T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'","SELECT m.label, a.element FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = '+'","SELECT T1.label, T2.element FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+' AND (T2.element = 'cl' OR T2.element = 'c' OR T2.element = 'h' OR T2.element = 'o' OR T2.element = 's' OR T2.element = 'n' OR T2.element = 'p' OR T2.element = 'na' OR T2.element = 'br' OR T2.element = 'f' OR T2.element = 'i' OR T2.element = 'sn' OR T2.element = 'pb' OR T2.element = 'te' OR T2.element = 'ca')",0,0
Which molecules have triple bonds and list all the elements they contain.,challenging,"SELECT DISTINCT T1.molecule_id, T2.element FROM bond AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#'","SELECT m.label, a.element FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON c.atom_id = a.atom_id WHERE b.bond_type = '#' GROUP BY m.molecule_id, a.element ORDER BY m.label, a.element",SELECT DISTINCT T1.label FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN atom AS T3 ON T2.bond_id = T3.atom_id WHERE T2.bond_type = '#' AND (T3.element = 'cl' OR T3.element = 'c' OR T3.element = 'h' OR T3.element = 'o' OR T3.element = 's' OR T3.element = 'n' OR T3.element = 'p' OR T3.element = 'na' OR T3.element = 'br' OR T3.element = 'f' OR T3.element = 'i' OR T3.element = 'sn' OR T3.element = 'pb' OR T3.element = 'te' OR T3.element = 'ca'),0,0
Name the atoms' elements that form bond TR000_2_3.,challenging,SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR000_2_3',SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_id = 'TR000_2_3',SELECT a.element FROM atom AS a INNER JOIN connected AS c ON a.atom_id = c.atom_id WHERE c.bond_id = 'TR000_2_3',1,1
How many elements are contained in bond_id TR001_3_4?,challenging,SELECT COUNT(DISTINCT T1.element) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_3_4',SELECT COUNT(DISTINCT element) FROM atom WHERE atom_id IN (SELECT atom_id FROM connected WHERE bond_id = 'TR001_3_4'),SELECT COUNT(*) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR001_3_4',1,0
What is the element of toxicology for the atom with the ID of TR000_1?,challenging,SELECT T.element FROM atom AS T WHERE T.atom_id = 'TR000_1',SELECT element FROM atom WHERE atom_id = 'TR000_1',"SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.atom_id2 = 'TR000_1' AND T1.element IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca')",1,0
"List all the elements with double bond, consisted in molecule TR024.",challenging,SELECT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR024' AND T2.bond_type = '=',SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id JOIN molecule m ON b.molecule_id = m.molecule_id WHERE m.label = 'TR024' AND b.bond_type = '=',SELECT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.atom_id = T2.atom_id INNER JOIN molecule AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.label = 'TR024' AND T2.bond_type = '=',0,0
Calculate the percentage of carcinogenic molecules with triple bonded Hidrogen atoms.,challenging,SELECT CAST(SUM(CASE WHEN T1.label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T1.molecule_id = T3.molecule_id WHERE T3.bond_type = '#' AND T2.element = 'h',SELECT (SUM(m.label = '+') / COUNT(m.molecule_id)) * 100.0 AS percentage FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON m.molecule_id = b.molecule_id WHERE a.element = 'h' AND b.bond_type = '#',NULL,0,0
What is the element with the atom ID of TR004_7 in molecule that is not carcinogenic?,challenging,SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR004_7' AND T2.label = '-',SELECT a.element FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.atom_id = 'TR004_7' AND m.label = '-',SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id INNER JOIN molecule AS T4 ON T3.molecule_id = T4.molecule_id WHERE T1.atom_id = 'TR004_7' AND T4.label = '-',1,1
List the element and bond type included in the molecule with molecule ID of TR002.,challenging,"SELECT DISTINCT T1.element, T2.bond_type FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR002'","SELECT a.element, b.bond_type FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.molecule_id = 'TR002'","SELECT T1.element, T2.bond_type FROM atom AS T1 INNER JOIN bond AS T2 ON T1.atom_id = T2.atom_id INNER JOIN molecule AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.molecule_id = 'TR002'",0,0
What is the percentage of cards whose language is French among the Story Spotlight cards?,challenging,SELECT CAST(SUM(CASE WHEN T2.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.isStorySpotlight = 1,SELECT (COUNT(cards.id) FILTER (WHERE cards.isStorySpotlight = 1 AND foreign_data.language = 'French')) * 100.0 / COUNT(cards.id) FILTER (WHERE cards.isStorySpotlight = 1) AS percentage FROM cards LEFT JOIN foreign_data ON cards.id = foreign_data.id,NULL,0,0
What percentage of cards with format commander and legal status do not have a content warning?,challenging,SELECT CAST(SUM(CASE WHEN T1.hasContentWarning = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'commander' AND T2.status = 'Legal',SELECT (COUNT(CASE WHEN hasContentWarning = 0 AND format = 'commander' AND status = 'legal' THEN 1 END) * 1.0 / COUNT(cards.id)) * 100 AS percentage FROM cards JOIN legalities ON cards.id = legalities.id,NULL,0,0
What percentage of cards without power are in French?,challenging,SELECT CAST(SUM(CASE WHEN T2.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.power IS NULL OR T1.power = '*',SELECT (COUNT(CASE WHEN language = 'French' AND (power IS NULL OR power = '*') THEN 1 END) * 1.0 / COUNT(CASE WHEN power IS NULL OR power = '*' THEN 1 END)) * 100 AS percentage FROM cards,NULL,0,0
Which set is not available outside of the United States and has foil cards with Japanese writing on them? Please include the set ID in your response.,challenging,"SELECT T1.name, T1.id FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Japanese' AND T1.isFoilOnly = 1 AND T1.isForeignOnly = 0",SELECT s.code FROM sets s JOIN set_translations st ON s.code = st.setcode WHERE s.isForeignOnly = 1 AND s.isFoilOnly = 1 AND st.language = 'Japanese',SELECT T1.code FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setcode WHERE T1.isForeignOnly = 1 AND T1.isFoilOnly = 1 AND T2.language = 'Japanese',0,0
"Which of these artists have designed a card in the set Coldsnap, Jeremy Jarvis, Aaron Miller or Chippy?",challenging,SELECT T1.artist FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE (T2.name = 'Coldsnap' AND T1.artist = 'Chippy') OR (T2.name = 'Coldsnap' AND T1.artist = 'Aaron Miller') OR (T2.name = 'Coldsnap' AND T1.artist = 'Jeremy Jarvis') GROUP BY T1.artist,"SELECT DISTINCT artist FROM cards WHERE setcode = 'Coldsnap' AND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')","SELECT DISTINCT T1.artist FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.id = T2.id WHERE T1.name = 'Coldsnap' AND T2.artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')",0,0
What is the percentage of incredibly powerful cards in the set Coldsnap?,challenging,SELECT CAST(SUM(CASE WHEN T1.cardKingdomFoilId IS NOT NULL AND T1.cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE T2.name = 'Coldsnap',SELECT    (SUM(CASE WHEN cards.cardKingdomFoilId IS NOT NULL AND cards.cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) / COUNT(*)) * 100 AS percentage_incredibly_powerful FROM    cards WHERE    cards.name = 'Coldsnap',NULL,0,0
For all cards illustrated by Jim Pavelec. and describe the text of the ruling of these cards. Do these cards have missing or degraded properties and values.,challenging,"SELECT T2.text , CASE WHEN T1.hasContentWarning = 1 THEN 'YES' ELSE 'NO' END FROM cards AS T1 INNER JOIN rulings AS T2 ON T2.uuid = T1.uuid WHERE T1.artist = 'Jim Pavelec'","SELECT      c.name AS card_name,     c.text AS card_text,     c.hascontentwarning AS has_content_warning,     r.text AS ruling_text FROM      cards c JOIN      rulings r ON c.uuid = r.uuid WHERE      c.artist = 'Jim Pavelec'","SELECT T1.name, T1.text, T1.hascontentwarning FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.id = T2.id WHERE T1.artist = 'Jim Pavelec' AND T2.text IS NOT NULL",0,0
"For all the set of cards that has Japanese translation, what is the percentage of them are only available in non-foil?",challenging,SELECT CAST(SUM(CASE WHEN isNonFoilOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) FROM sets WHERE code IN ( SELECT setCode FROM set_translations WHERE language = 'Japanese' ),SELECT (SUM(cards.isnonfoilonly) / COUNT(*)) * 100 AS percentage_non_foil FROM cards JOIN sets ON cards.setcode = sets.code WHERE sets.set_translations.language = 'Japanese',SELECT (SUM(T1.isNonFoilOnly) * 100) / COUNT(*) AS PercentageOfJapaneseNonFoil FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.id = T2.id WHERE T2.language = 'Japanese',0,0
"For all the set of cards that has Brazil Portuguese translation, what is the percentage of them are only available online?",challenging,SELECT CAST(SUM(CASE WHEN isOnlineOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) FROM sets WHERE code IN ( SELECT setCode FROM set_translations WHERE language = 'Portuguese (Brazil)' ),SELECT (SUM(cards.isOnlineOnly) / COUNT(*)) * 100 AS percentage_online_only FROM cards JOIN set_translations ON cards.setcode = set_translations.setcode WHERE set_translations.language = 'Portuguese (Brazil)',NULL,0,0
"Among the sets whose expansion type is Commander, which set has the highest total number of cards including promotional and related supplemental products but excluding Alchemy modifications? Indicate the id of the set.",challenging,SELECT id FROM sets WHERE type = 'commander' ORDER BY totalSetSize DESC LIMIT 1,SELECT id FROM sets WHERE type = 'commander' ORDER BY basesetsize DESC LIMIT 1,SELECT id FROM sets WHERE type = 'commander' ORDER BY basesetsize DESC LIMIT 1,1,1
"Among the cards whose version of frame style is 1997, what is the status of the card illustrated by D. Alexander Gregory in legacy play format that has sensitive content or Wizards of the Coast?",challenging,SELECT DISTINCT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T2.uuid = T1.uuid WHERE T1.frameVersion = 1997 AND T1.hasContentWarning = 1 AND T1.artist = 'D. Alexander Gregory' AND T2.format = 'legacy',SELECT status FROM cards JOIN foreign_data ON cards.id = foreign_data.id JOIN legalities ON cards.id = legalities.id WHERE cards.frameversion = '1997' AND cards.artist = 'D. Alexander Gregory' AND legalities.format = 'legacy' AND (cards.hascontentwarning = 1 OR cards.name LIKE '%Wizards of the Coast%'),SELECT T1.status FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.id = T2.id WHERE T1.frameVersion = '1997' AND T2.artist = 'D. Alexander Gregory' AND T1.format = 'legacy' AND T1.hasContentWarning = 1 AND T2.name LIKE '%Wizards of the Coast%' OR T1.status = 'legal',0,0
What is the annual average number of sets that were released between 1/1/2012 to 12/31/2015? Indicate the common langugage of the card.,challenging,"SELECT (CAST(SUM(T1.id) AS REAL) / COUNT(T1.id)) / 4, T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.id WHERE T1.releaseDate BETWEEN '2012-01-01' AND '2015-12-31' GROUP BY T1.releaseDate ORDER BY COUNT(T2.language) DESC LIMIT 1","SELECT AVG(num_sets) AS annual_average, common_language FROM (     SELECT COUNT(*) AS num_sets, MAX(COUNT(language)) AS common_language     FROM sets     WHERE releasedate BETWEEN '2012-01-01' AND '2015-12-31'     GROUP BY releasedate ) ",NULL,0,0
List the names of all the cards in the set Hour of Devastation and find the formats in which these cards are legal.,challenging,"SELECT DISTINCT T2.name , CASE WHEN T1.status = 'Legal' THEN T1.format ELSE NULL END FROM legalities AS T1 INNER JOIN cards AS T2 ON T2.uuid = T1.uuid WHERE T2.setCode IN ( SELECT code FROM sets WHERE name = 'Hour of Devastation' )","SELECT c.name AS card_name, l.format AS legal_format FROM cards c JOIN legalities l ON c.id = l.id JOIN sets s ON c.setcode = s.code WHERE s.name = 'Hour of Devastation' AND l.status = 'Legal'","SELECT DISTINCT T2.name FROM cards AS T2 INNER JOIN legalities AS T1 ON T2.id = T1.id WHERE T1.format IN ('Standard', 'Modern', 'Legacy', 'Vintage', 'Penny Dreadful', 'Pauper', 'Commander') AND T2.setcode = (SELECT id FROM sets WHERE name = 'Hour of Devastation')",0,0
Which user added a bounty amount of 50 to the post title mentioning variance?,challenging,"SELECT T3.DisplayName, T1.Title FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId INNER JOIN users AS T3 ON T3.Id = T2.UserId WHERE T2.BountyAmount = 50 AND T1.Title LIKE '%variance%'",SELECT u.displayname FROM users u JOIN votes v ON u.id = v.userid JOIN posts p ON v.postid = p.id WHERE v.bountyamount = 50 AND p.title LIKE '%variance%',"SELECT T6.DisplayName FROM votes AS T1 INNER JOIN posts AS T2 ON T1.postid = T2.id INNER JOIN users AS T6 ON T1.userid = T6.id WHERE T1.BountyAmount = 50 AND T2.Title LIKE '%variance%'  Step-by-Step Sub-Questions: 1. Which posts have a title mentioning 'variance'? 2. For these posts, which votes have a bounty amount of 50? 3. Which users added these votes? 4. What are the display names of these users?",0,0
What is the percentage difference of student badges given during 2010 and 2011?,challenging,"SELECT CAST(SUM(IIF(STRFTIME('%Y', Date) = '2010', 1, 0)) AS REAL) * 100 / COUNT(Id) - CAST(SUM(IIF(STRFTIME('%Y', Date) = '2011', 1, 0)) AS REAL) * 100 / COUNT(Id) FROM badges WHERE Name = 'Student'",SELECT      ((COUNT(CASE WHEN Year(date) = 2010 THEN userid END) / COUNT(*) * 100) -       (COUNT(CASE WHEN Year(date) = 2011 THEN userid END) / COUNT(*) * 100)) AS percentage_difference FROM      badges WHERE      name = 'Student',NULL,0,0
"Among posts by Harvey Motulsky and Noah Snyder, which one has higher popularity?",challenging,SELECT T1.DisplayName FROM users AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.UserId INNER JOIN posts AS T3 ON T2.PostId = T3.Id WHERE T1.DisplayName = 'Harvey Motulsky' OR T1.DisplayName = 'Noah Snyder' GROUP BY T1.DisplayName ORDER BY SUM(T3.ViewCount) DESC LIMIT 1,"SELECT DisplayName, SUM(ViewCount) AS TotalViewCount FROM posts WHERE DisplayName IN ('Harvey Motulsky', 'Noah Snyder') GROUP BY DisplayName ORDER BY TotalViewCount DESC LIMIT 1",NULL,0,0
"Based on posts posted by Community, calculate the percentage of posts that use the R language.",challenging,"SELECT CAST(SUM(IIF(T3.TagName = 'r', 1, 0)) AS REAL) * 100 / COUNT(T1.Id) FROM users AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.UserId INNER JOIN tags AS T3 ON T3.ExcerptPostId = T2.PostId WHERE T1.DisplayName = 'Community'",SELECT    (COUNT(p.id) FILTER (WHERE t.tagname = 'r')) * 100.0 / COUNT(p.id) FILTER (WHERE p.ownerdisplayname = 'Community') AS percentage FROM    posts p JOIN    tags t ON p.id = t.excerptpostid,NULL,0,0
"Among all the posts posted by the most influential user, identify the percentage with a score above 50.",challenging,SELECT CAST(SUM(CASE WHEN T2.Score > 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Id) FROM users T1 INNER JOIN posts T2 ON T1.Id = T2.OwnerUserId INNER JOIN ( SELECT MAX(Reputation) AS max_reputation FROM users ) T3 ON T1.Reputation = T3.max_reputation,"SELECT      COUNT(p.Id) AS HighScorePostsCount,     COUNT(p.Id) * 1.0 / (SELECT COUNT(*) FROM posts WHERE MAX(u.Reputation)) AS PercentageOfHighScorePosts FROM      posts p JOIN      users u ON p.OwnerUserId = u.Id WHERE      p.Score > 50 AND MAX(u.Reputation) = (SELECT MAX(Reputation) FROM users)",NULL,0,0
Please list the superhero names of all the superheroes that have blue eyes and blond hair.,challenging,SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Blue' AND T3.colour = 'Blond',SELECT s.superhero_name FROM superhero s JOIN colour e ON s.eye_colour_id = e.id JOIN colour h ON s.hair_colour_id = h.id WHERE e.colour = 'Blue' AND h.colour = 'Blond',SELECT T2.superhero_name FROM superhero AS T1 INNER JOIN colour AS T3 ON T1.eye_colour_id = T3.id INNER JOIN colour AS T4 ON T1.hair_colour_id = T4.id WHERE T3.colour = 'Blue' AND T4.colour = 'Blond',1,0
List the superheroes from Marvel Comics who have the super power of 'Super Strength'.,challenging,SELECT superhero_name FROM superhero AS T1 WHERE EXISTS (SELECT 1 FROM hero_power AS T2 INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Super Strength' AND T1.id = T2.hero_id)AND EXISTS (SELECT 1 FROM publisher AS T4 WHERE T4.publisher_name = 'Marvel Comics' AND T1.publisher_id = T4.id),SELECT s.superhero_name FROM superhero s JOIN publisher p ON s.publisher_id = p.id JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE p.publisher_name = 'Marvel Comics' AND sp.power_name = 'Super Strength',"SELECT T2.superhero_name, T2.full_name FROM superhero AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.id WHERE T1.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') AND T2.id IN (SELECT hero_id FROM hero_power INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Super Strength')",1,0
What is the percentage of superheroes who act in their own self-interest or make decisions based on their own moral code? Indicate how many of the said superheroes were published by Marvel Comics.,challenging,"SELECT (CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM superhero)), CAST(SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS REAL) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN alignment AS T3 ON T3.id = T1.alignment_id WHERE T3.alignment = 'Bad'","SELECT    ROUND(     (COUNT(DISTINCT s.id) FILTER (WHERE s.alignment_id IN (       SELECT id FROM alignment WHERE alignment = 'Bad'     ))) / COUNT(DISTINCT s.id) * 100   ) AS percentage_bad_aligned,   COUNT(DISTINCT s.id) FILTER (WHERE s.publisher_id IN (     SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics'   )) AS marvel_comics_count FROM    superhero s","SELECT COUNT(DISTINCT T2.id) * 100 / (SELECT COUNT(DISTINCT id) FROM superhero) AS Percentage, COUNT(DISTINCT T2.id) AS Marvel_Superheroes FROM superhero AS T2 INNER JOIN publisher AS T1 ON T2.publisher_id = T1.id WHERE T1.publisher_name = 'Marvel Comics' AND T2.alignment_id IN (SELECT id FROM alignment WHERE alignment = 'Bad')",0,0
"Between DC and Marvel Comics, which publisher has published more superheroes? Find the difference in the number of superheroes they have published.",challenging,SELECT SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id,SELECT    (SELECT COUNT(*) FROM superhero WHERE publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) -    (SELECT COUNT(*) FROM superhero WHERE publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'DC Comics')) AS difference FROM superhero LIMIT 1,SELECT ABS(   (SELECT COUNT(*) FROM superhero WHERE publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) -   (SELECT COUNT(*) FROM superhero WHERE publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'DC Comics')) ) AS difference,1,1
"In superheroes with height between 150 to 180, what is the percentage of heroes published by Marvel Comics?",challenging,SELECT CAST(COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.height_cm BETWEEN 150 AND 180,SELECT      (COUNT(s.id) / (SELECT COUNT(*) FROM superhero WHERE height_cm BETWEEN 150 AND 180)) * 100 AS percentage_published_by_marvel FROM      superhero s JOIN      publisher p ON s.publisher_id = p.id WHERE      s.height_cm BETWEEN 150 AND 180 AND      p.publisher_name = 'Marvel Comics',SELECT (COUNT(T2.id) * 100.0 / (SELECT COUNT(*) FROM superhero AS T3 WHERE T3.height_cm BETWEEN 150 AND 180)) AS Percentage FROM superhero AS T2 WHERE T2.height_cm BETWEEN 150 AND 180 AND T2.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics'),0,1
Which superhero has the most durability published by Dark Horse Comics?,challenging,SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id INNER JOIN attribute AS T3 ON T3.id = T2.attribute_id INNER JOIN publisher AS T4 ON T4.id = T1.publisher_id WHERE T4.publisher_name = 'Dark Horse Comics' AND T3.attribute_name = 'Durability' ORDER BY T2.attribute_value DESC LIMIT 1,SELECT s.superhero_name FROM superhero s JOIN hero_attribute ha ON s.id = ha.hero_id JOIN attribute a ON ha.attribute_id = a.id JOIN publisher p ON s.publisher_id = p.id WHERE a.attribute_name = 'durability' AND p.publisher_name = 'Dark Horse Comics' ORDER BY ha.attribute_value DESC LIMIT 1,SELECT T2.superhero_name FROM superhero AS T1 INNER JOIN hero_attribute AS T3 ON T1.id = T3.hero_id INNER JOIN publisher AS T4 ON T1.publisher_id = T4.id WHERE T4.publisher_name = 'Dark Horse Comics' AND T3.attribute_name = 'durability' AND T3.attribute_value = (SELECT MAX(T5.attribute_value) FROM hero_attribute AS T5 WHERE T5.attribute_name = 'durability'),0,0
"List the eyes, hair and skin colour of all female superheroes published by Dark Horse Comics.",challenging,"SELECT T1.eye_colour_id, T1.hair_colour_id, T1.skin_colour_id FROM superhero AS T1 INNER JOIN publisher AS T2 ON T2.id = T1.publisher_id INNER JOIN gender AS T3 ON T3.id = T1.gender_id WHERE T2.publisher_name = 'Dark Horse Comics' AND T3.gender = 'Female'","SELECT s.eye_colour_id AS eyes, s.hair_colour_id AS hair, s.skin_colour_id AS skin_colour FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE s.gender_id = (SELECT id FROM gender WHERE gender = 'Female') AND p.publisher_name = 'Dark Horse Comics'","SELECT T2.eye_colour_id, T2.hair_colour_id, T2.skin_colour_id FROM superhero AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.id WHERE T1.gender_id = (SELECT id FROM gender WHERE gender = 'Female') AND T2.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Dark Horse Comics')",1,1
"Which superhero has the same eyes, hair and skin colour? Indicate the publisher of the superhero.",challenging,"SELECT T1.superhero_name, T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.eye_colour_id = T1.hair_colour_id AND T1.eye_colour_id = T1.skin_colour_id","SELECT s.superhero_name, p.publisher_name FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE s.hair_colour_id = s.skin_colour_id AND s.hair_colour_id = s.eye_colour_id","SELECT T2.superhero_name, T3.publisher_name FROM superhero AS T2 INNER JOIN hero_power AS T1 ON T2.id = T1.hero_id INNER JOIN publisher AS T3 ON T2.publisher_id = T3.id WHERE T2.hair_colour_id = T2.skin_colour_id AND T2.hair_colour_id = T2.eye_colour_id",1,0
What is the percentage of blue female superheroes among all female superheroes?,challenging,SELECT CAST(COUNT(CASE WHEN T3.colour = 'Blue' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN colour AS T3 ON T1.skin_colour_id = T3.id WHERE T2.gender = 'Female',SELECT (SUM(CASE WHEN s.eye_colour_id = c.id AND s.gender_id = g.id AND g.gender = 'Female' THEN 1 ELSE 0 END) / COUNT(DISTINCT s.id)) * 100 AS percentage FROM superhero s JOIN colour c ON s.eye_colour_id = c.id JOIN gender g ON s.gender_id = g.id,SELECT (SUM(T1.colour = 'Blue') * 100 / COUNT(T1.gender = 'Female')) AS Percentage FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN skin_colour AS T3 ON T1.skin_colour_id = T3.id WHERE T2.gender = 'Female' AND T3.colour = 'Blue',0,0
How many percent of female heroes were published by Marvel Comics?,challenging,SELECT CAST(COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T3.gender = 'Female',SELECT (COUNT(gender = 'Female') * 100.0 / COUNT(publisher_name = 'Marvel Comics')) AS percent FROM superhero WHERE publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics'),NULL,0,0
"Among the bad superheroes, what is the percentage of female superheroes?",challenging,SELECT CAST(COUNT(CASE WHEN T3.gender = 'Female' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.alignment = 'Bad',"SELECT      ROUND(         (SELECT COUNT(*)           FROM superhero           JOIN gender ON superhero.gender_id = gender.id           JOIN alignment ON superhero.alignment_id = alignment.id           WHERE alignment.id = 2 AND gender.id = 2)          /          (SELECT COUNT(*)           FROM superhero           JOIN alignment ON superhero.alignment_id = alignment.id           WHERE alignment.id = 2)          * 100.0,      1) AS percentage ",SELECT (SUM(CASE WHEN gender.id = 2 THEN 1 ELSE 0 END) * 100.0 / COUNT(alignment.id = 2)) AS Percentage FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T3.id = 2,0,0
"In superheroes with missing weight data, calculate the difference between the number of superheroes with blue eyes and no eye color.",challenging,SELECT SUM(CASE WHEN T2.id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.id = 1 THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg = 0 OR T1.weight_kg is NULL,SELECT      (SELECT COUNT(*) FROM superhero T1 WHERE T1.weight_kg = 0 OR T1.weight_kg IS NULL) -      (SELECT COUNT(*) FROM superhero T2 WHERE T2.eye_colour_id = 7) AS difference FROM      superhero LIMIT 1,SELECT (SELECT COUNT(*) FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T2.attribute_id = 7 AND T1.weight_kg = 0 OR T1.weight_kg IS NULL) - (SELECT COUNT(*) FROM superhero AS T1 INNER JOIN hero_attribute AS T2 ON T1.id = T2.hero_id WHERE T2.attribute_id = 1 AND T1.weight_kg = 0 OR T1.weight_kg IS NULL) AS difference,0,0
Which publisher created more superheroes: DC or Marvel Comics? Find the difference in the number of superheroes.,challenging,SELECT SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id,"SELECT    publisher_name,    COUNT(*) AS superhero_count FROM    superhero JOIN    publisher ON superhero.publisher_id = publisher.id WHERE    publisher_name IN ('DC Comics', 'Marvel Comics') GROUP BY    publisher_name ORDER BY    superhero_count DESC",SELECT (SELECT COUNT(*) FROM superhero WHERE publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'DC Comics')) - (SELECT COUNT(*) FROM superhero WHERE publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS Difference,0,1
"Among all superheroes created by George Lucas, identify the percentage of female superheroes.",challenging,SELECT CAST(COUNT(CASE WHEN T3.gender = 'Female' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.publisher_name = 'George Lucas',SELECT    (SUM(gender = 'Female') / COUNT(*)) * 100.0 AS percentage FROM    superhero JOIN    gender ON superhero.gender_id = gender.id JOIN    publisher ON superhero.publisher_id = publisher.id WHERE    publisher.publisher_name = 'George Lucas',SELECT (SUM(T1.gender_id = (SELECT id FROM gender WHERE gender = 'Female')) * 100.0 / COUNT(*)) AS Percentage FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'George Lucas',0,1
"Among all superheroes in Marvel Comics, identify the percentage of 'good' superheroes.",challenging,SELECT CAST(COUNT(CASE WHEN T3.alignment = 'Good' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T2.publisher_name = 'Marvel Comics',SELECT (SUM(CASE WHEN s.alignment = 'Good' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS good_superheroes_percentage FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics',SELECT (SUM(CASE WHEN T2.alignment_id = 1 THEN 1 ELSE 0 END) * 100.0 / COUNT(*)) AS PercentageOfGoodSuperheroes FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T2.publisher_name = 'Marvel Comics',0,0
"Paul di Resta was in the No. 853 race, what percent faster did he finish in the 853rd race than the next race for the fastest lap speed?",challenging,"SELECT (SUM(IIF(T2.raceId = 853, T2.fastestLapSpeed, 0)) - SUM(IIF(T2.raceId = 854, T2.fastestLapSpeed, 0))) * 100 / SUM(IIF(T2.raceId = 853, T2.fastestLapSpeed, 0)) FROM drivers AS T1 INNER JOIN results AS T2 ON T2.driverId = T1.driverId WHERE T1.forename = 'Paul' AND T1.surname = 'di Resta'",SELECT (   (SELECT fastestlapspeed FROM results WHERE raceid = 853 AND driverid IN (SELECT driverid FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta')) -   (SELECT fastestlapspeed FROM results WHERE raceid = 854 AND position = 1) ) * 100.0 / (SELECT fastestlapspeed FROM results WHERE raceid = 853 AND driverid IN (SELECT driverid FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta')) AS percentage_faster FROM results WHERE raceid = 853 AND driverid IN (SELECT driverid FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta') LIMIT 1,SELECT (T1.fastestlapspeed - T2.fastestlapspeed) * 100 / T1.fastestlapspeed AS Percentage FROM results AS T1 INNER JOIN results AS T2 ON T1.raceid = 853 AND T2.raceid = 854 AND T1.driverid = (SELECT driverid FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta') AND T2.position = 1 AND T1.fastestlap = 1 AND T2.fastestlap = 1,0,0
Calculate the percentage whereby Hamilton was not at the 1st track of the the f1 circuit since 2010.,challenging,SELECT CAST(COUNT(CASE WHEN T2.position <> 1 THEN T2.position END) AS REAL) * 100 / COUNT(T2.driverStandingsId) FROM races AS T1 INNER JOIN driverStandings AS T2 ON T2.raceId = T1.raceId INNER JOIN drivers AS T3 ON T3.driverId = T2.driverId WHERE T3.surname = 'Hamilton' AND T1.year >= 2010,"SELECT    DIVIDE(     COUNT(DISTINCT r.raceid) FILTER (WHERE rs.surname = 'Hamilton' AND r.round = 1 AND rs.position > 1),     COUNT(DISTINCT r.raceid) FILTER (WHERE rs.surname = 'Hamilton' AND r.round = 1)   ) * 100 AS percentage FROM    races r JOIN    results rs ON r.raceid = rs.raceid WHERE    r.year >= 2010",NULL,0,0
How much faster in percentage is the champion than the driver who finished the race last in the 2008 Australian Grand Prix?,challenging,"WITH time_in_seconds AS ( SELECT T1.positionOrder, CASE WHEN T1.positionOrder = 1 THEN (CAST(SUBSTR(T1.time, 1, 1) AS REAL) * 3600) + (CAST(SUBSTR(T1.time, 3, 2) AS REAL) * 60) + CAST(SUBSTR(T1.time, 6) AS REAL) ELSE CAST(SUBSTR(T1.time, 2) AS REAL) END AS time_seconds FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Australian Grand Prix' AND T1.time IS NOT NULL AND T2.year = 2008 ), champion_time AS ( SELECT time_seconds FROM time_in_seconds WHERE positionOrder = 1), last_driver_incremental AS ( SELECT time_seconds FROM time_in_seconds WHERE positionOrder = (SELECT MAX(positionOrder) FROM time_in_seconds) ) SELECT (CAST((SELECT time_seconds FROM last_driver_incremental) AS REAL) * 100) / (SELECT time_seconds + (SELECT time_seconds FROM last_driver_incremental) FROM champion_time)",SELECT    ROUND(     (       (         (SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND position = 1)          - (SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND position = (SELECT COUNT(*) FROM results WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix')))       ) / (SELECT time FROM results WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND position = (SELECT COUNT(*) FROM results WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix')))     ) * 100   ) AS percentage_difference FROM results WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND position = 1,SELECT (CAST(T1.time AS REAL) - CAST(T2.time AS REAL)) * 100 / CAST(T2.time AS REAL) AS PercentageDifference FROM results AS T1 INNER JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND T2.position = (SELECT MAX(position) FROM results WHERE raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix')) AND T1.time IS NOT NULL AND T2.time IS NOT NULL,0,0
Please calculate the race completion percentage of Japanese drivers from 2007 to 2009.,challenging,"SELECT CAST(SUM(IIF(T1.time IS NOT NULL, 1, 0)) AS REAL) * 100 / COUNT(T1.raceId) FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN drivers AS T3 on T1.driverId = T3.driverId WHERE T3.nationality = 'Japanese' AND T2.year BETWEEN 2007 AND 2009","SELECT    ROUND(     (COUNT(DISTINCT results.driverid) FILTER (WHERE results.time IS NOT NULL AND results.raceid IN (       SELECT raceid        FROM races        WHERE year BETWEEN 2007 AND 2009     )))::DECIMAL /      COUNT(DISTINCT results.driverid) FILTER (WHERE results.raceid IN (       SELECT raceid        FROM races        WHERE year BETWEEN 2007 AND 2009     ))   ) * 100, 2) AS race_completion_percentage FROM results WHERE results.driverid IN (   SELECT driverid    FROM drivers    WHERE nationality = 'Japanese' ) AND results.raceid IN (   SELECT raceid    FROM races    WHERE year BETWEEN 2007 AND 2009 )",SELECT (COUNT(DISTINCT T2.DriverID) FILTER (WHERE T1.time IS NOT NULL AND T1.year BETWEEN 2007 AND 2009) * 100.0 / COUNT(DISTINCT T2.DriverID) FILTER (WHERE T1.year BETWEEN 2007 AND 2009)) AS CompletionPercentage FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverid = T2.driverid WHERE T2.nationality = 'Japanese',0,0
"What is the average time in seconds of champion for each year, before year 1975?",challenging,"WITH time_in_seconds AS ( SELECT T2.year, T2.raceId, T1.positionOrder, CASE WHEN T1.positionOrder = 1 THEN (CAST(SUBSTR(T1.time, 1, 1) AS REAL) * 3600) + (CAST(SUBSTR(T1.time, 3, 2) AS REAL) * 60) + CAST(SUBSTR(T1.time, 6,2) AS REAL )   + CAST(SUBSTR(T1.time, 9) AS REAL)/1000 ELSE 0 END AS time_seconds FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.time IS NOT NULL ), champion_time AS ( SELECT year, raceId, time_seconds FROM time_in_seconds WHERE positionOrder = 1 ) SELECT year, AVG(time_seconds) FROM champion_time WHERE year < 1975 GROUP BY year HAVING AVG(time_seconds) IS NOT NULL","SELECT r.year, AVG(r.time) AS average_time_seconds FROM results r JOIN races ra ON r.raceid = ra.raceid WHERE ra.year < 1975 AND r.time IS NOT NULL GROUP BY r.year","SELECT T1.year, AVG(CAST(SUBSTR(T1.time, 1, 2) * 3600 + SUBSTR(T1.time, 4, 2) * 60 + SUBSTR(T1.time, 7, 2) + SUBSTR(T1.time, 10, 3) / 1000 AS FLOAT)) AS avg_time_seconds FROM results AS T1 INNER JOIN status AS T2 ON T1.statusid = T2.statusid WHERE T2.status = 'Finished' AND T1.time IS NOT NULL AND T1.year < 1975 GROUP BY T1.year",0,0
"From 2000 to 2005, what percentage of drivers who were born before 1985 and the lap numbers were over 50?",challenging,"SELECT CAST(SUM(IIF(STRFTIME('%Y', T3.dob) < '1985' AND T1.laps > 50, 1, 0)) AS REAL) * 100 / COUNT(*) FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN drivers AS T3 on T1.driverId = T3.driverId WHERE T2.year BETWEEN 2000 AND 2005",SELECT (COUNT(DISTINCT laptimes.driverid) FILTER (WHERE laptimes.lap > 50 AND YEAR(drivers.dob) < 1985) / COUNT(DISTINCT qualifying.driverid) FILTER (WHERE YEAR(drivers.dob) BETWEEN 2000 AND 2005)) * 100 AS percentage FROM laptimes JOIN drivers ON laptimes.driverid = drivers.driverid JOIN qualifying ON laptimes.driverid = qualifying.driverid WHERE YEAR(qualifying.raceid) BETWEEN 2000 AND 2005,SELECT (COUNT(T1.driverid) * 100 / (SELECT COUNT(T2.driverid) FROM drivers AS T2 INNER JOIN results AS T3 ON T2.driverid = T3.driverid WHERE T2.dob < '1985' AND T3.laps > 50 AND T3.raceid IN (SELECT T4.raceid FROM races AS T4 WHERE T4.year BETWEEN '2000' AND '2005')) ) AS Percentage FROM drivers AS T1 INNER JOIN results AS T5 ON T1.driverid = T5.driverid WHERE T1.dob < '1985' AND T5.laps > 50 AND T5.raceid IN (SELECT T6.raceid FROM races AS T6 WHERE T6.year BETWEEN '2000' AND '2005'),0,0
List down top 3 German drivers who has the shortest average pit stop duration and were born between 1980-1985.,challenging,"SELECT T2.forename, T2.surname FROM pitStops AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId WHERE T2.nationality = 'German' AND STRFTIME('%Y', T2.dob) BETWEEN '1980' AND '1985' GROUP BY T2.forename, T2.surname ORDER BY AVG(T1.duration) LIMIT 3","SELECT d.forename, d.surname, AVG(p.duration) AS avg_duration FROM drivers d JOIN pitstops p ON d.driverid = p.driverid WHERE d.nationality = 'German' AND YEAR(d.dob) BETWEEN 1980 AND 1985 GROUP BY d.driverid ORDER BY avg_duration ASC LIMIT 3","SELECT drivers.forename, drivers.surname, AVG(pitstops.duration) AS avg_duration FROM drivers INNER JOIN pitstops ON drivers.driverid = pitstops.driverid WHERE drivers.nationality = 'German' AND 1980 < strftime('%Y', drivers.dob) AND strftime('%Y', drivers.dob) < 1985 GROUP BY drivers.driverid ORDER BY avg_duration ASC LIMIT 3",0,0
What is the constructor reference name of the champion in the 2009 Singapore Grand Prix? Please give its website.,challenging,"SELECT T3.constructorRef, T3.url FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN constructors AS T3 on T1.constructorId = T3.constructorId WHERE T2.name = 'Singapore Grand Prix' AND T2.year = 2009 AND T1.time LIKE '_:%:__.___'","SELECT c.constructorref, c.url FROM constructorresults cr JOIN constructors c ON cr.constructorid = c.constructorid JOIN races r ON cr.raceid = r.raceid WHERE r.year = 2009 AND r.name = 'Singapore Grand Prix' ORDER BY cr.points DESC LIMIT 1","SELECT T2.constructorref, T2.url FROM results AS T1 INNER JOIN constructors AS T2 ON T1.constructorid = T2.constructorid INNER JOIN races AS T3 ON T1.raceid = T3.raceid WHERE T3.year = 2009 AND T3.name = 'Singapore Grand Prix' AND T1.position = 1",1,1
"Which constructor scored most points from Monaco Grand Prix between 1980 and 2010? List the score, name and nationality of this team.",challenging,"SELECT SUM(T1.points), T2.name, T2.nationality FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId INNER JOIN races AS T3 ON T3.raceid = T1.raceid WHERE T3.name = 'Monaco Grand Prix' AND T3.year BETWEEN 1980 AND 2010 GROUP BY T2.name ORDER BY SUM(T1.points) DESC LIMIT 1","SELECT c.points, c.name, c.nationality FROM constructorstandings cs JOIN constructors c ON cs.constructorid = c.constructorid JOIN races r ON cs.raceid = r.raceid WHERE r.name = 'Monaco Grand Prix' AND r.year BETWEEN 1980 AND 2010 ORDER BY c.points DESC LIMIT 1","SELECT T1.points, T2.name, T2.nationality  FROM constructorstandings AS T1  INNER JOIN constructors AS T2 ON T1.constructorid = T2.constructorid  INNER JOIN races AS T3 ON T1.raceid = T3.raceid  WHERE T3.circuitid = (SELECT circuitid FROM circuits WHERE name = 'Monaco Grand Prix')  AND T3.year BETWEEN 1980 AND 2010  ORDER BY T1.points DESC  LIMIT 1",0,0
What is full name of the racer who ranked 1st in the 3rd qualifying race held in the Marina Bay Street Circuit in 2008?,challenging,"SELECT T2.forename, T2.surname FROM qualifying AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceid = T3.raceid WHERE q3 IS NOT NULL AND T3.year = 2008 AND T3.circuitId IN ( SELECT circuitId FROM circuits WHERE name = 'Marina Bay Street Circuit' ) ORDER BY CAST(SUBSTR(q3, 1, INSTR(q3, ':') - 1) AS INTEGER) * 60 + CAST(SUBSTR(q3, INSTR(q3, ':') + 1, INSTR(q3, '.') - INSTR(q3, ':') - 1) AS REAL) + CAST(SUBSTR(q3, INSTR(q3, '.') + 1) AS REAL) / 1000 ASC LIMIT 1","SELECT d.forename, d.surname FROM drivers d JOIN qualifying q ON d.driverid = q.driverid JOIN races r ON q.raceid = r.raceid JOIN circuits c ON r.circuitid = c.circuitid WHERE c.name = 'Marina Bay Street Circuit' AND r.year = 2008 ORDER BY q.q3 LIMIT 1","SELECT T2.forename, T2.surname FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverid = T2.driverid INNER JOIN races AS T3 ON T1.raceid = T3.raceid INNER JOIN circuits AS T4 ON T3.circuitid = T4.circuitid WHERE T3.year = 2008 AND T4.name = 'Marina Bay Street Circuit' AND T1.position = 1 AND T1.grid = (SELECT MIN(q3) FROM qualifying WHERE raceid = T3.raceid)",0,0
"Among all the lap records set on various circuits, what is the time for the fastest one?",challenging,"SELECT time FROM lapTimes ORDER BY (CASE WHEN INSTR(time, ':') <> INSTR(SUBSTR(time, INSTR(time, ':') + 1), ':') + INSTR(time, ':') THEN CAST(SUBSTR(time, 1, INSTR(time, ':') - 1) AS REAL) * 3600 ELSE 0 END) + (CAST(SUBSTR(time, INSTR(time, ':') - 2 * (INSTR(time, ':') = INSTR(SUBSTR(time, INSTR(time, ':') + 1), ':') + INSTR(time, ':')), INSTR(time, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(time, INSTR(time, ':') + 1, INSTR(time, '.') - INSTR(time, ':') - 1) AS REAL)) + (CAST(SUBSTR(time, INSTR(time, '.') + 1) AS REAL) / 1000) ASC LIMIT 1",SELECT MIN(laptimes.time) AS fastest_lap_time FROM laptimes,SELECT MIN(laptimes.time) AS FastestLapTime FROM laptimes,0,0
Which top 20 driver created the shortest lap time ever record in a Formula_1 race? Please give them full names.,challenging,"WITH lap_times_in_seconds AS (SELECT driverId, (CASE WHEN SUBSTR(time, 1, INSTR(time, ':') - 1) <> '' THEN CAST(SUBSTR(time, 1, INSTR(time, ':') - 1) AS REAL) * 60 ELSE 0 END + CASE WHEN SUBSTR(time, INSTR(time, ':') + 1, INSTR(time, '.') - INSTR(time, ':') - 1) <> '' THEN CAST(SUBSTR(time, INSTR(time, ':') + 1, INSTR(time, '.') - INSTR(time, ':') - 1) AS REAL) ELSE 0 END + CASE WHEN SUBSTR(time, INSTR(time, '.') + 1) <> '' THEN CAST(SUBSTR(time, INSTR(time, '.') + 1) AS REAL) / 1000 ELSE 0 END) AS time_in_seconds FROM lapTimes) SELECT T2.forename, T2.surname, T1.driverId FROM (SELECT driverId, MIN(time_in_seconds) AS min_time_in_seconds FROM lap_times_in_seconds GROUP BY driverId) AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId ORDER BY T1.min_time_in_seconds ASC LIMIT 20","SELECT d.forename, d.surname FROM drivers d JOIN results r ON d.driverid = r.driverid JOIN (     SELECT raceid, MIN(time) AS shortest_lap_time     FROM results     WHERE time IS NOT NULL     GROUP BY raceid ) AS shortest ON r.raceid = shortest.raceid ORDER BY shortest.shortest_lap_time ASC LIMIT 20","SELECT T2.forename, T2.surname FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverid = T2.driverid INNER JOIN (SELECT raceid, MIN(time) AS shortest_time FROM laptimes GROUP BY raceid) AS T3 ON T1.raceid = T3.raceid WHERE T1.time = T3.shortest_time ORDER BY T3.shortest_time LIMIT 20",0,0
Please list the lap records for the circuits in Italy.,challenging,"WITH fastest_lap_times AS (SELECT T1.raceId, T1.FastestLapTime, (CAST(SUBSTR(T1.FastestLapTime, 1, INSTR(T1.FastestLapTime, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, ':') + 1, INSTR(T1.FastestLapTime, '.') - INSTR(T1.FastestLapTime, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, '.') + 1) AS REAL) / 1000) as time_in_seconds FROM results AS T1 WHERE T1.FastestLapTime IS NOT NULL ) SELECT T1.FastestLapTime as lap_record FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN circuits AS T3 on T2.circuitId = T3.circuitId INNER JOIN (SELECT MIN(fastest_lap_times.time_in_seconds) as min_time_in_seconds FROM fastest_lap_times INNER JOIN races AS T2 on fastest_lap_times.raceId = T2.raceId INNER JOIN circuits AS T3 on T2.circuitId = T3.circuitId WHERE T3.country = 'Italy' ) AS T4 ON (CAST(SUBSTR(T1.FastestLapTime, 1, INSTR(T1.FastestLapTime, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, ':') + 1, INSTR(T1.FastestLapTime, '.') - INSTR(T1.FastestLapTime, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, '.') + 1) AS REAL) / 1000) = T4.min_time_in_seconds LIMIT 1","SELECT c.name AS circuit_name, MIN(l.time) AS fastest_lap_time FROM circuits c JOIN races r ON c.circuitid = r.circuitid JOIN laptimes l ON r.raceid = l.raceid WHERE c.country = 'Italy' GROUP BY c.circuitid","SELECT T1.name, MIN(T2.time) AS lap_record FROM circuits AS T1 INNER JOIN laptimes AS T2 ON T1.circuitid = T2.raceid WHERE T1.country = 'Italy' GROUP BY T1.circuitid",0,0
"In the race a driver set the lap record for the Austrian Grand Prix Circuit, how long did he spent at the pit stop at that same race?",challenging,"WITH fastest_lap_times AS ( SELECT T1.raceId, T1.driverId, T1.FastestLapTime, (CAST(SUBSTR(T1.FastestLapTime, 1, INSTR(T1.FastestLapTime, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, ':') + 1, INSTR(T1.FastestLapTime, '.') - INSTR(T1.FastestLapTime, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, '.') + 1) AS REAL) / 1000) as time_in_seconds FROM results AS T1 WHERE T1.FastestLapTime IS NOT NULL), lap_record_race AS ( SELECT T1.raceId, T1.driverId FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN circuits AS T3 on T2.circuitId = T3.circuitId INNER JOIN ( SELECT MIN(fastest_lap_times.time_in_seconds) as min_time_in_seconds FROM fastest_lap_times INNER JOIN races AS T2 on fastest_lap_times.raceId = T2.raceId INNER JOIN circuits AS T3 on T2.circuitId = T3.circuitId WHERE T2.name = 'Austrian Grand Prix') AS T4 ON (CAST(SUBSTR(T1.FastestLapTime, 1, INSTR(T1.FastestLapTime, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, ':') + 1, INSTR(T1.FastestLapTime, '.') - INSTR(T1.FastestLapTime, ':') - 1) AS REAL)) + (CAST(SUBSTR(T1.FastestLapTime, INSTR(T1.FastestLapTime, '.') + 1) AS REAL) / 1000) = T4.min_time_in_seconds WHERE T2.name = 'Austrian Grand Prix') SELECT T4.duration FROM lap_record_race INNER JOIN pitStops AS T4 on lap_record_race.raceId = T4.raceId AND lap_record_race.driverId = T4.driverId",SELECT p.duration FROM pitstops p JOIN races r ON p.raceid = r.raceid JOIN circuits c ON r.circuitid = c.circuitid WHERE c.name = 'Austrian Grand Prix' AND c.circuitid = r.circuitid AND p.driverid = r.driverid,SELECT T6.duration FROM laptimes AS T1 INNER JOIN races AS T2 ON T1.raceid = T2.raceid INNER JOIN circuits AS T3 ON T2.circuitid = T3.circuitid INNER JOIN results AS T4 ON T1.raceid = T4.raceid AND T1.driverid = T4.driverid INNER JOIN pitstops AS T5 ON T1.raceid = T5.raceid AND T1.driverid = T5.driverid AND T1.lap = T5.lap INNER JOIN status AS T6 ON T4.statusid = T6.statusid WHERE T3.location = 'Austrian Grand Prix Circuit' AND T1.time = (SELECT MIN(T7.time) FROM laptimes AS T7 WHERE T7.raceid = T1.raceid),0,0
"In Scotland Premier League, which away team won the most during the 2010 season?",challenging,SELECT teamInfo.team_long_name FROM League AS leagueData INNER JOIN Match AS matchData ON leagueData.id = matchData.league_id INNER JOIN Team AS teamInfo ON matchData.away_team_api_id = teamInfo.team_api_id WHERE leagueData.name = 'Scotland Premier League' AND matchData.season = '2009/2010' AND matchData.away_team_goal - matchData.home_team_goal > 0 GROUP BY matchData.away_team_api_id ORDER BY COUNT(*) DESC LIMIT 1,SELECT t.team_long_name FROM team t JOIN match m ON t.team_api_id = m.away_team_api_id JOIN league l ON m.league_id = l.id WHERE l.name = 'Scotland Premier League' AND m.season = '2009/2010' AND m.away_team_goal > m.home_team_goal GROUP BY t.team_long_name ORDER BY COUNT(*) DESC LIMIT 1,NULL,0,0
"At present, calculate for the player's age who have a sprint speed of no less than 97 between 2013 to 2015.",challenging,"SELECT DISTINCT DATETIME() - T2.birthday age FROM Player_Attributes AS t1 INNER JOIN Player AS t2 ON t1.player_api_id = t2.player_api_id WHERE STRFTIME('%Y',t1.`date`) >= '2013' AND STRFTIME('%Y',t1.`date`) <= '2015' AND t1.sprint_speed >= 97","SELECT    p.id,   p.player_api_id,   p.player_name,   p.player_fifa_api_id,   p.birthday,   p.height,   p.weight,   (julianday('now') - julianday(p.birthday)) / 365.25 AS age,   pa.sprint_speed FROM    player p JOIN    player_attributes pa ON p.player_api_id = pa.player_api_id WHERE    pa.sprint_speed >= 97 AND   strftime('%Y', pa.date) BETWEEN '2013' AND '2015'",NULL,0,0
List the long name of teams with above-average build-up play passing in 2012.,challenging,"SELECT DISTINCT t4.team_long_name FROM Team_Attributes AS t3 INNER JOIN Team AS t4 ON t3.team_api_id = t4.team_api_id WHERE SUBSTR(t3.`date`, 1, 4) = '2012' AND t3.buildUpPlayPassing > ( SELECT CAST(SUM(t2.buildUpPlayPassing) AS REAL) / COUNT(t1.id) FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE STRFTIME('%Y',t2.`date`) = '2012')","SELECT team_long_name FROM team_attributes JOIN team ON team_attributes.team_api_id = team.team_api_id WHERE strftime('%Y', team_attributes.date) = '2012' AND buildUpPlayPassing > (     SELECT AVG(buildUpPlayPassing)     FROM team_attributes     WHERE buildUpPlayPassing IS NOT NULL ) ",NULL,0,0
"Calculate the percentage of players who prefer left foot, who were born between 1987 and 1992.",challenging,"SELECT CAST(COUNT(CASE WHEN t2.preferred_foot = 'left' THEN t1.id ELSE NULL END) AS REAL) * 100 / COUNT(t1.id) percent FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE SUBSTR(t1.birthday, 1, 4) BETWEEN '1987' AND '1992'","SELECT      DIVIDE(MULTIPLY((SELECT COUNT(*) FROM player WHERE preferred_foot = 'left' AND YEAR(birthday) BETWEEN '1987' AND '1992'), 100), (SELECT COUNT(*) FROM player)) AS percentage_left_foot_players FROM      player LIMIT 1",NULL,0,0
"For the teams with normal build-up play dribbling class in 2014, List the names of the teams with less than average chance creation passing, in descending order of chance creation passing.",challenging,"SELECT t3.team_long_name FROM Team AS t3 INNER JOIN Team_Attributes AS t4 ON t3.team_api_id = t4.team_api_id WHERE t4.buildUpPlayDribblingClass = 'Normal' AND t4.chanceCreationPassing < ( SELECT CAST(SUM(t2.chanceCreationPassing) AS REAL) / COUNT(t1.id) FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t2.buildUpPlayDribblingClass = 'Normal' AND SUBSTR(t2.`date`, 1, 4) = '2014') ORDER BY t4.chanceCreationPassing DESC",SELECT t.team_long_name FROM team_attributes ta JOIN team t ON ta.team_api_id = t.team_api_id WHERE ta.buildupplaydribblingclass = 'Normal' AND ta.date >= '2014-01-01 00:00:00' AND ta.date <= '2014-01-31 00:00:00' AND (SELECT AVG(chanceCreationPassing) FROM team_attributes) > ta.chanceCreationPassing ORDER BY ta.chanceCreationPassing DESC,NULL,0,0
List the name of leagues in which the average goals by the home team is higher than the away team in the 2009/2010 season.,challenging,SELECT t1.name FROM League AS t1 INNER JOIN Match AS t2 ON t1.id = t2.league_id WHERE t2.season = '2009/2010' GROUP BY t1.name HAVING (CAST(SUM(t2.home_team_goal) AS REAL) / COUNT(DISTINCT t2.id)) - (CAST(SUM(t2.away_team_goal) AS REAL) / COUNT(DISTINCT t2.id)) > 0,SELECT league.name FROM league JOIN match ON league.id = match.league_id WHERE match.season = '2009/2010' GROUP BY league.name HAVING AVG(match.home_team_goal) > AVG(match.away_team_goal),NULL,1,0
Who has the highest average finishing rate between the highest and shortest football player?,challenging,"SELECT A FROM ( SELECT AVG(finishing) result, 'Max' A FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height = ( SELECT MAX(height) FROM Player ) UNION SELECT AVG(finishing) result, 'Min' A FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height = ( SELECT MIN(height) FROM Player ) ) ORDER BY result DESC LIMIT 1","SELECT p.player_name, AVG(pa.finishing) AS avg_finishing FROM player p JOIN player_attributes pa ON p.player_api_id = pa.player_api_id WHERE p.height IN (SELECT MAX(height) FROM player UNION SELECT MIN(height) FROM player) GROUP BY p.player_api_id ORDER BY avg_finishing DESC LIMIT 1","SELECT T1.player_name, T1.height FROM player AS T1 INNER JOIN player_attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height IN ((SELECT MAX(height) FROM player), (SELECT MIN(height) FROM player)) AND T2.finishing = (SELECT MAX(AVG(finishing)) FROM player_attributes)",0,0
"List the football team that has a build up play speed of 31, build up plan dribbling of 53, and build up play passing of 32. Only indicate the short name of the team.",challenging,SELECT DISTINCT t1.team_short_name FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t2.buildUpPlaySpeed = 31 AND t2.buildUpPlayDribbling = 53 AND t2.buildUpPlayPassing = 32,SELECT team_short_name FROM team_attributes WHERE buildUpPlaySpeed = 31 AND buildUpPlayDribbling = 53 AND buildUpPlayPassing = 32,NULL,0,0
"What is the difference of the average ball control score between Abdou Diallo and Aaron Appindangoye
?",challenging,SELECT CAST(SUM(CASE WHEN t1.player_name = 'Abdou Diallo' THEN t2.ball_control ELSE 0 END) AS REAL) / COUNT(CASE WHEN t1.player_name = 'Abdou Diallo' THEN t2.id ELSE NULL END) - CAST(SUM(CASE WHEN t1.player_name = 'Aaron Appindangoye' THEN t2.ball_control ELSE 0 END) AS REAL) / COUNT(CASE WHEN t1.player_name = 'Aaron Appindangoye' THEN t2.id ELSE NULL END) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id,SELECT      (AVG(CASE WHEN player_name = 'Abdou Diallo' THEN ball_control ELSE NULL END) -       AVG(CASE WHEN player_name = 'Aaron Appindangoye' THEN ball_control ELSE NULL END)) AS difference_of_average_ball_control FROM      player_attributes,NULL,0,0
"Among the players born before the year 1986, how many of them would remain in his position and defense while the team attacked?",challenging,"SELECT COUNT(DISTINCT t1.player_name) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE STRFTIME('%Y',t1.birthday) < '1986' AND t2.defensive_work_rate = 'high'","SELECT COUNT(DISTINCT player_fifa_api_id) AS players_count FROM player_attributes WHERE strftime('%Y', birthday) < '1986' AND defensive_work_rate = 'high'",NULL,0,0
How much higher in percentage is Ariel Borysiuk's overall rating than that of Paulin Puel?,challenging,SELECT (SUM(CASE WHEN t1.player_name = 'Ariel Borysiuk' THEN t2.overall_rating ELSE 0 END) * 1.0 - SUM(CASE WHEN t1.player_name = 'Paulin Puel' THEN t2.overall_rating ELSE 0 END)) * 100 / SUM(CASE WHEN t1.player_name = 'Paulin Puel' THEN t2.overall_rating ELSE 0 END) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id,"SELECT overall_rating FROM player_attributes WHERE player_name = 'Ariel Borysiuk', SELECT overall_rating FROM player_attributes WHERE player_name = 'Paulin Puel'), SELECT overall_rating FROM player_attributes WHERE player_name = 'Paulin Puel'), 100)",NULL,0,0
What was the average overall rating for Marko Arnautovic from 2007/2/22 to 2016/4/21?,challenging,"SELECT CAST(SUM(t2.overall_rating) AS REAL) / COUNT(t2.id) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_fifa_api_id = t2.player_fifa_api_id WHERE t1.player_name = 'Marko Arnautovic' AND SUBSTR(t2.`date`, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21'",SELECT AVG(overall_rating) AS average_overall_rating FROM player_attributes JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name = 'Marko Arnautovic' AND date BETWEEN '2007-02-22' AND '2016-04-21',NULL,0,0
What percentage is Landon Donovan's overall rating higher than Jordan Bowery on 2013/7/12?,challenging,"SELECT (SUM(CASE WHEN t1.player_name = 'Landon Donovan' THEN t2.overall_rating ELSE 0 END) * 1.0 - SUM(CASE WHEN t1.player_name = 'Jordan Bowery' THEN t2.overall_rating ELSE 0 END)) * 100 / SUM(CASE WHEN t1.player_name = 'Landon Donovan' THEN t2.overall_rating ELSE 0 END) LvsJ_percent FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_fifa_api_id = t2.player_fifa_api_id WHERE SUBSTR(t2.`date`, 1, 10) = '2013-07-12'",SELECT ((Landon_Donovan.overall_rating - Jordan_Bowery.overall_rating) / Landon_Donovan.overall_rating) * 100 AS percentage FROM player_attributes AS Landon_Donovan JOIN player_attributes AS Jordan_Bowery ON Landon_Donovan.player_api_id = Jordan_Bowery.player_api_id WHERE Landon_Donovan.player_name = 'Landon Donovan' AND Jordan_Bowery.player_name = 'Jordan Bowery' AND Landon_Donovan.date = '2013/7/12' AND Jordan_Bowery.date = '2013/7/12',NULL,0,0
"What was the final score for the match on September 24, 2008, in the Belgian Jupiler League between the home team and the away team?",challenging,"SELECT t2.home_team_goal, t2.away_team_goal FROM League AS t1 INNER JOIN Match AS t2 ON t1.id = t2.league_id WHERE t1.name = 'Belgium Jupiler League' AND t2.`date` LIKE '2008-09-24%'","SELECT home_team_goal, away_team_goal FROM match WHERE date = '2008-09-24' AND league_id IN (SELECT id FROM league WHERE name = 'Belgium Jupiler League')",NULL,0,0
"For in-patient age 50 and above, what is their average anti-cardiolipin antibody (IgG) concentration?",challenging,"SELECT AVG(T2.`aCL IgG`) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) >= 50 AND T1.Admission = '+'","SELECT AVG(e.""acl igg"") AS average_acl_igg FROM examination e JOIN patient p ON e.id = p.id WHERE p.""admission"" = '+' AND (EXTRACT(YEAR FROM CURRENT_DATE) - EXTRACT(YEAR FROM p.""birthday"")) >= 50",NULL,0,0
"The oldest SJS patient's medical laboratory work was completed on what date, and what age was the patient when they initially arrived at the hospital?",challenging,"SELECT T1.Date, STRFTIME('%Y', T2.`First Date`) - STRFTIME('%Y', T2.Birthday),T2.Birthday FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'SJS' AND T2.Birthday IS NOT NULL ORDER BY T2.Birthday ASC LIMIT 1","SELECT l.date, p.birthday FROM laboratory l JOIN patient p ON l.id = p.id WHERE p.diagnosis = 'SJS' ORDER BY p.birthday ASC LIMIT 1","SELECT T2.date, (YEAR(T2.`First Date`) - YEAR(T1.birthday)) AS Age FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T1.diagnosis = 'SJS' ORDER BY T1.birthday ASC LIMIT 1",0,0
What is the ratio of male to female patients among all those with abnormal uric acid counts?,challenging,SELECT CAST(SUM(CASE WHEN T2.UA <= 8.0 AND T1.SEX = 'M' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.UA <= 6.5 AND T1.SEX = 'F' THEN 1 ELSE 0 END) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID,"SELECT    SUM(CASE WHEN sex = 'M' AND (SELECT COUNT(*) FROM patient WHERE sex = 'M' AND (SELECT COUNT(*) FROM laboratory WHERE UA <= '8.0' AND sex = 'M') > 0) > 0 THEN 1 ELSE 0 END) AS male_count,   SUM(CASE WHEN sex = 'F' AND (SELECT COUNT(*) FROM patient WHERE sex = 'F' AND (SELECT COUNT(*) FROM laboratory WHERE UA <= '6.5' AND sex = 'F') > 0) > 0 THEN 1 ELSE 0 END) AS female_count,   (SELECT SUM(CASE WHEN sex = 'M' AND (SELECT COUNT(*) FROM patient WHERE sex = 'M' AND (SELECT COUNT(*) FROM laboratory WHERE UA <= '8.0' AND sex = 'M') > 0) > 0 THEN 1 ELSE 0 END)) /    (SELECT SUM(CASE WHEN sex = 'F' AND (SELECT COUNT(*) FROM patient WHERE sex = 'F' AND (SELECT COUNT(*) FROM laboratory WHERE UA <= '6.5' AND sex = 'F') > 0) > 0 THEN 1 ELSE 0 END)) AS ratio FROM patient",NULL,0,0
How many underage patients were examined during the course of the three-year period from 1990 to 1993?,challenging,"SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T2.`Examination Date`) BETWEEN '1990' AND '1993' AND STRFTIME('%Y', T2.`Examination Date`) - STRFTIME('%Y', T1.Birthday) < 18",SELECT COUNT(*) AS underage_patients_examined FROM patient p JOIN examination e ON p.id = e.id WHERE YEAR(p.birthday) < 18 AND YEAR(e.examination date) BETWEEN '1990' AND '1993',NULL,0,0
"What is the most common illness that doctors identified among the patients whose lab work was done between 1/1/1985, and 12/31/1995?",challenging,SELECT T2.Diagnosis FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.`Examination Date` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY T2.Diagnosis ORDER BY COUNT(T2.Diagnosis) DESC LIMIT 1,"SELECT Diagnosis, COUNT(*) AS IllnessFrequency FROM examination WHERE ""examination date"" BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY Diagnosis ORDER BY IllnessFrequency DESC LIMIT 1",SELECT T1.diagnosis FROM examination AS T1 WHERE T1.`examination date` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY T1.diagnosis ORDER BY COUNT(T1.diagnosis) DESC LIMIT 1,0,1
"For the patient who was diagnosed SLE on 1997/1/27, what was his/her original diagnose when he/she came to the hospital for the first time?",challenging,SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.ID = ( SELECT ID FROM Examination WHERE `Examination Date` = '1997-01-27' AND Diagnosis = 'SLE' ) AND T2.`Examination Date` = T1.`First Date`,"SELECT p.diagnosis FROM patient p JOIN examination e ON p.id = e.""id"" WHERE e.""examination date"" = '1997-01-27' AND p.diagnosis = 'SLE'",SELECT T2.diagnosis FROM examination AS T1 INNER JOIN patient AS T2 ON T1.id = T2.id WHERE T1.`examination date` = '1997-01-27' AND T2.diagnosis = 'SLE',1,1
"For the patient who was born on 1959/2/18, what is the decrease rate for his/her total cholesterol from November to December in 1981?",challenging,SELECT CAST((SUM(CASE WHEN T2.Date LIKE '1981-11-%' THEN T2.`T-CHO` ELSE 0 END) - SUM(CASE WHEN T2.Date LIKE '1981-12-%' THEN T2.`T-CHO` ELSE 0 END)) AS REAL) / SUM(CASE WHEN T2.Date LIKE '1981-12-%' THEN T2.`T-CHO` ELSE 0 END) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday = '1959-02-18',SELECT    (SUM(CASE WHEN DATE(laboratory.date) LIKE '1981-11-%' THEN laboratory.t_cho ELSE 0 END) -     SUM(CASE WHEN DATE(laboratory.date) LIKE '1981-12-%' THEN laboratory.t_cho ELSE 0 END)) /    SUM(CASE WHEN DATE(laboratory.date) LIKE '1981-11-%' THEN laboratory.t_cho ELSE 0 END) * 100 AS decrease_rate FROM    laboratory JOIN    patient ON laboratory.id = patient.id WHERE    patient.birthday = '1959-02-18',"SELECT (SELECT SUM(T2.`T-CHO`) FROM laboratory AS T1 INNER JOIN patient AS T2 ON T1.id = T2.id WHERE T2.birthday = '1959-02-18' AND strftime('%Y-%m', T1.date) LIKE '1981-11-%') - (SELECT SUM(T2.`T-CHO`) FROM laboratory AS T1 INNER JOIN patient AS T2 ON T1.id = T2.id WHERE T2.birthday = '1959-02-18' AND strftime('%Y-%m', T1.date) LIKE '1981-12-%') AS decrease_rate",0,0
"What number of patients with a degree of thrombosis level 2 and ANA pattern of only S, have a level of anti-Cardiolip in antibody (IgM) 20% higher than average?",challenging,SELECT COUNT(*) FROM Examination WHERE Thrombosis = 2 AND `ANA Pattern` = 'S' AND `aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination WHERE Thrombosis = 2 AND `ANA Pattern` = 'S'),SELECT COUNT(*) AS number_of_patients FROM patient p JOIN examination e ON p.id = e.id WHERE e.thrombosis = 2 AND e.ana = 'S' AND e.acl_igm * 1.2 < (SELECT AVG(acl_igm) FROM examination),NULL,0,0
What percentage of patients with a proteinuria level within the normal range have a uric acid level below the normal range?,challenging,SELECT CAST(SUM(CASE WHEN UA <= 6.5 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM Laboratory WHERE `U-PRO` > 0 AND `U-PRO` < 30,SELECT    (SUM(CASE WHEN (UA <= 6.5) AND (U-PRO > 0 AND U-PRO < 30) THEN 1 ELSE 0 END) / COUNT(*)) * 100 AS percentage FROM    patient p JOIN    laboratory l ON p.id = l.id,NULL,0,0
What percentage of male patients who first presented to the hospital in 1981 were diagnosed with BEHCET?,challenging,"SELECT CAST(SUM(CASE WHEN Diagnosis = 'BEHCET' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM Patient WHERE STRFTIME('%Y', `First Date`) = '1981' AND SEX = 'M'",SELECT (SUM(CASE WHEN p.diagnosis = 'BEHCET' THEN 1 ELSE 0 END) / COUNT(*)) * 100 AS percentage FROM patient p WHERE p.sex = 'M' AND YEAR(p.first_date) = '1981',NULL,0,0
List all patients who were followed up at the outpatient clinic who underwent a laboratory test in October 1991 and had a total blood bilirubin level within the normal range.,challenging,SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.`T-BIL` < 2.0 AND T2.Date LIKE '1991-10-%',"SELECT DISTINCT p.id, p.sex, p.birthday, p.description, p.first_date, p.admission, p.diagnosis FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.admission = '-' AND l.date LIKE '1991-10%' AND l.t_bil < 2.0","SELECT DISTINCT T1.id, T1.sex, T1.birthday, T1.description, T1.first date, T1.admission, T1.diagnosis FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T1.admission = '-' AND T2.date LIKE '1991-10%' AND T2.t-bil < 2.0",0,0
"What sex is the patient who in a medical examination was diagnosed with PSS and in a laboratory examination had a blood level of C-reactive protein de 2+, createnine 1 and LDH 123?",challenging,SELECT T1.SEX FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T3.ID = T2.ID WHERE T2.Diagnosis = 'PSS' AND T3.CRP = '2+' AND T3.CRE = 1.0 AND T3.LDH = 123,SELECT sex FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE examination.diagnosis = 'PSS' AND laboratory.crp > 2 AND laboratory.cre = 1 AND laboratory.LDH = 123,SELECT T1.sex FROM patient AS T1 INNER JOIN examination AS T2 ON T1.id = T2.id INNER JOIN laboratory AS T3 ON T1.id = T3.id WHERE T2.diagnosis = 'PSS' AND T3.CRP > 2 AND T3.CRE = 1 AND T3.LDH = 123,1,1
How many male patients who underwent testing between 1995 and 1997 and were subsequently diagnosed with Behcet disease did not stay in the hospital for treatment?,challenging,"SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'Behcet' AND T1.SEX = 'M' AND STRFTIME('%Y', T2.`Examination Date`) BETWEEN '1995' AND '1997' AND T1.Admission = '-'","SELECT COUNT(*) FROM patient p JOIN examination e ON p.id = e.id WHERE p.sex = 'M' AND e.""examination date"" BETWEEN '1995' AND '1997' AND p.diagnosis = 'Behcet' AND p.admission = '-'",NULL,0,0
Are there more male patients with creatinine not within the normal range than female? True or False?,challenging,SELECT CASE WHEN SUM(CASE WHEN T1.SEX = 'M' THEN 1 ELSE 0 END) > SUM(CASE WHEN T1.SEX = 'F' THEN 1 ELSE 0 END) THEN 'True' ELSE 'False' END FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE >= 1.5,SELECT (SUM(Sex = 'M') > SUM(Sex = 'F')) AS result FROM patient WHERE cre >= 1.5,SELECT (SUM(CASE WHEN T1.sex = 'M' AND T2.cre >= 1.5 THEN 1 ELSE 0 END) > SUM(CASE WHEN T1.sex = 'F' AND T2.cre >= 1.5 THEN 1 ELSE 0 END)) AS more_male_than_female FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id,0,0
"For patient born between 1936-1956, how many male patients have creatinine phosphokinase beyond the normal range?",challenging,"SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.Birthday) BETWEEN '1936' AND '1956' AND T1.SEX = 'M' AND T2.CPK >= 250",SELECT COUNT(DISTINCT patient.id) AS male_patients_with_high_cpk FROM patient WHERE (YEAR(patient.birthday) BETWEEN 1936 AND 1956) AND (patient.sex = 'M') AND (patient.id IN (SELECT patient_id FROM laboratory WHERE cpk >= 250)),SELECT COUNT(DISTINCT T1.id) FROM patient AS T1 WHERE T1.sex = 'M' AND T1.birthday BETWEEN '1936' AND '1956' AND T1.cpk >= 250,0,0
"Provide ID, sex and age of patient who has blood glucose (GLU) not within normal range but with total cholesterol(T-CHO) within normal range.",challenging,"SELECT DISTINCT T1.ID, T1.SEX , STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GLU >= 180 AND T2.`T-CHO` < 250","SELECT p.id, p.sex, (EXTRACT(YEAR FROM CURRENT_TIMESTAMP) - EXTRACT(YEAR FROM p.birthday)) AS age FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.glu >= 180 AND l.t_cho < 250","SELECT T2.id, T2.sex, (strftime('%Y', 'now') - strftime('%Y', T2.birthday)) - (strftime('%m-%d', 'now') < strftime('%m-%d', T2.birthday)) AS age FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T2.glu >= 180 AND T2.t_cho < 250",0,0
"For all the female patient age 50 and above, who has abnormal red blood cell count. State if they were admitted to hospital.",challenging,"SELECT DISTINCT T1.ID, T1.Admission FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (T2.RBC <= 3.5 OR T2.RBC >= 6.0) AND STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) >= 50","SELECT p.id, p.sex, p.birthday, p.admission, p.diagnosis FROM patient p WHERE p.sex = 'F' AND (EXTRACT(YEAR FROM CURRENT_DATE) - EXTRACT(YEAR FROM p.birthday)) >= 50 AND (p.rbc < 3.5 OR p.rbc > 6.0) ORDER BY p.id","SELECT T2.id, T2.admission, T3.examination date, T3.acl igg, T3.acl igm, T3.ana, T3.ana pattern, T3.acl iga, T3.diagnosis, T3.kct, T3.rvvt, T3.lac, T3.symptoms, T3.thrombosis FROM patient AS T2 INNER JOIN examination AS T3 ON T2.id = T3.id WHERE T2.sex = 'F' AND (YEAR(CURRENT_TIMESTAMP) - YEAR(T2.birthday)) >= 50 AND (T2.rbc < = 3.5 OR T2.rbc >= 6.0) AND T2.admission = '+'",0,0
Name the ID and age of patient with two or more laboratory examinations which show their hematoclit level exceeded the normal range.,challenging,"SELECT DISTINCT T1.ID, STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.ID IN ( SELECT ID FROM Laboratory WHERE HCT >= 52 GROUP BY ID HAVING COUNT(ID) >= 2 )","SELECT p.id, (EXTRACT(YEAR FROM CURRENT_DATE) - EXTRACT(YEAR FROM p.birthday)) AS age FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.hct >= 52 GROUP BY p.id HAVING COUNT(l.id) > 2","SELECT T1.id, (strftime('%Y', 'now') - strftime('%Y', T1.birthday)) AS age FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T2.hct >= 52 GROUP BY T1.id HAVING COUNT(T2.id) > 2",0,0
"For patients with abnormal platelet level, state the number of patients with lower than normal range. How is it compare to the number of patients with higher than normal range?",challenging,SELECT SUM(CASE WHEN T2.PLT <= 100 THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.PLT >= 400 THEN 1 ELSE 0 END) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID,"SELECT    SUM(CASE WHEN plt < 100 THEN 1 ELSE 0 END) AS lower_than_normal_count,   SUM(CASE WHEN plt > 400 THEN 1 ELSE 0 END) AS higher_than_normal_count FROM    laboratory WHERE    id IN (SELECT id FROM patient WHERE id IN (SELECT id FROM examination WHERE id IN (SELECT id FROM laboratory)))",SELECT COUNT(*) FROM patient WHERE id IN (SELECT patient_id FROM laboratory WHERE PLT <= 100 OR PLT >= 400),0,0
"For laboratory examinations take in 1984, list all patients below 50 years old with normal platelet level.",challenging,"SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.PLT BETWEEN 100 AND 400 AND STRFTIME('%Y', T2.Date) - STRFTIME('%Y', T1.Birthday) < 50 AND STRFTIME('%Y', T2.Date) = '1984'","SELECT DISTINCT p.id, p.sex, p.birthday, p.description, p.first_date, p.admission, p.diagnosis FROM patient p JOIN laboratory l ON p.id = l.id WHERE YEAR(l.date) = '1984' AND SUBTRACT(year(current_timestamp), year(p.birthday)) < 50 AND l.plt BETWEEN 100 AND 400","SELECT DISTINCT T1.id, T1.sex, T1.birthday, T1.description, T1.first_date, T1.admission, T1.diagnosis FROM patient AS T1 INNER JOIN examination AS T2 ON T1.id = T2.id WHERE YEAR(T2.`examination date`) = '1984' AND SUBTRACT(year(current_timestamp), year(T1.birthday)) < 50 AND T1.plt BETWEEN 100 AND 400",0,0
"For all patients who are older than 55 years old, what is the percentage of female who has abnormal prothrombin time (PT)?",challenging,"SELECT CAST(SUM(CASE WHEN T2.PT >= 14 AND T1.SEX = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) > 55",SELECT (SUM(CASE WHEN PT >= 14 AND SEX = 'F' THEN 1 ELSE 0 END) / SUM(CASE WHEN PT >= 14 THEN 1 ELSE 0 END)) * 100 AS percentage FROM patient WHERE (YEAR(CURRENT_TIMESTAMP) - YEAR(birthday)) > 55,NULL,0,0
"Among the male patients who have a normal level of white blood cells, how many of them have an abnormal fibrinogen level?",challenging,SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.FG <= 150 OR T2.FG >= 450 AND T2.WBC > 3.5 AND T2.WBC < 9.0 AND T1.SEX = 'M',SELECT COUNT(*) FROM patient p JOIN examination e ON p.id = e.id WHERE p.sex = 'M' AND (e.fg <= 150 OR e.fg >= 450) AND (e.wbc > 3.5 AND e.wbc < 9.0),NULL,0,0
"Among the patients whose creatinine level is abnormal, how many of them aren't 70 yet?",challenging,"SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE >= 1.5 AND STRFTIME('%Y', Date('now')) - STRFTIME('%Y', T1.Birthday) < 70",SELECT COUNT(*) AS NumberOfPatients FROM patient WHERE diagnosis = 'creatinine level is abnormal' AND (YEAR(CURDATE()) - YEAR(birthday)) < 70,SELECT COUNT(*) FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T2.cre >= 1.5 AND (YEAR(CURDATE()) - YEAR(T1.birthday)) < 70,0,0
"Among the patients who has a normal anti-scl70, how many of them are female and does not have any symptom?",challenging,SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T3.ID = T2.ID WHERE (T2.SC170 = 'negative' OR T2.SC170 = '0') AND T1.SEX = 'F' AND T3.Symptoms IS NULL,SELECT COUNT(DISTINCT p.id) AS number_of_patients FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.sc170 = 'negative' OR l.sc170 = '0' AND p.sex = 'F' AND p.symptoms IS NULL,SELECT COUNT(DISTINCT T1.id) FROM patient AS T1 INNER JOIN laboratory AS T2 ON T1.id = T2.id WHERE T2.SC170 = 'negative' OR T2.SC170 = 0 AND T1.sex = 'F' AND T1.symptoms IS NULL,0,0
What is the anti Cardiolipin antibody concentration of the female patient with the highest uric acid level in the normal range?,challenging,"SELECT T3.`aCL IgG`, T3.`aCL IgM`, T3.`aCL IgA` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T3.ID = T2.ID WHERE T1.SEX = 'F' AND T2.UA > 6.5 ORDER BY T2.UA DESC LIMIT 1","SELECT p.id, p.sex, l.igg, l.igm, l.iga FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'F' AND l.ua > 6.50 ORDER BY l.ua DESC LIMIT 1",NULL,0,0
"Among the patients whose total bilirubin is over the normal range, how many of them have a peripheral pattern observed in the sheet of ANA examination?",challenging,SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.`T-BIL` >= 2 AND T3.`ANA Pattern` LIKE '%P%',"SELECT COUNT(DISTINCT p.id) AS num_patients FROM patient p JOIN examination e ON p.id = e.id WHERE e.""T-BIL"" >= 2.0 AND e.""ANA Pattern"" LIKE '%P%'",SELECT COUNT(DISTINCT T1.id) FROM patient AS T1 INNER JOIN examination AS T2 ON T1.id = T2.id WHERE T2.`T-BIL` >= 2.0 AND T2.`ANA Pattern` LIKE '%P%',0,0
"For the patients with a normal range of creatinine phosphokinase, how many of them have a positive measure of degree of coagulation?",challenging,SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.CPK < 250 AND (T3.KCT = '+' OR T3.RVVT = '+' OR T3.LAC = '+'),SELECT COUNT(*)  FROM patient  WHERE id IN (     SELECT patient_id      FROM examination      WHERE kct = '+' OR rvvt = '+' OR lac = '+' ) AND id IN (     SELECT patient_id      FROM examination      WHERE cpk < 250 ),SELECT COUNT(*) FROM patient AS T1 INNER JOIN examination AS T2 ON T1.id = T2.id WHERE T1.diagnosis = 'normal range of creatinine phosphokinase' AND (T2.KCT = '+' OR T2.RVVT = '+' OR T2.LAC = '+'),0,0
Please list the patient's ID if he or she has an abnormal level of red blood cell and is followed at the outpatient clinic.,challenging,SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE (T2.RBC <= 3.5 OR T2.RBC >= 6) AND T1.Admission = '-',SELECT p.id FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.rbc <= 3.5 OR l.rbc >= 6.0 AND p.admission = '-',SELECT T1.id FROM patient AS T1 INNER JOIN examination AS T2 ON T1.id = T2.id WHERE T1.admission = '-' AND (T2.rbc <= 3.5 OR T2.rbc >= 6.0),0,0
Calculate the total average cost that Elijah Allen spent in the events on September and October.,challenging,"SELECT AVG(T2.cost) FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.last_name = 'Allen' AND T1.first_name = 'Elijah' AND (SUBSTR(T2.expense_date, 6, 2) = '09' OR SUBSTR(T2.expense_date, 6, 2) = '10')","SELECT AVG(e.cost) AS average_cost FROM expense e JOIN member m ON e.link_to_member = m.member_id WHERE m.first_name = 'Elijah' AND m.last_name = 'Allen' AND EXTRACT(MONTH FROM e.expense_date) IN (9, 10)","SELECT AVG(T3.cost) FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN event AS T3 ON T1.link_to_event = T3.event_id WHERE T2.first_name = 'Elijah' AND T2.last_name = 'Allen' AND strftime('%m', T1.expense_date) IN ('09', '10')",0,0
"How many times was the budget in Advertisement for ""Yearly Kickoff"" meeting more than ""October Meeting""?",challenging,SELECT CAST(SUM(CASE WHEN T2.event_name = 'Yearly Kickoff' THEN T1.amount ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.event_name = 'October Meeting' THEN T1.amount ELSE 0 END) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Advertisement' AND T2.type = 'Meeting',SELECT      (SELECT COUNT(*)       FROM budget       WHERE category = 'Advertisement' AND event_status = 'Yearly Kickoff') /      (SELECT COUNT(*)       FROM budget       WHERE category = 'Advertisement' AND event_status = 'October Meeting') AS ratio ,NULL,0,0
What is the name of the social event that was attended by the vice president of the Student_Club located at 900 E. Washington St.?,challenging,SELECT T2.event_name FROM attendance AS T1 INNER JOIN event AS T2 ON T2.event_id = T1.link_to_event INNER JOIN member AS T3 ON T1.link_to_member = T3.member_id WHERE T3.position = 'Vice President' AND T2.location = '900 E. Washington St.' AND T2.type = 'Social',SELECT event_name FROM event WHERE type = 'Social' AND location = '900 E. Washington St.',SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T1.type = 'Social' AND T3.position = 'Vice President' AND T1.location = '900 E. Washington St.',1,1
Which members who were approved from 1/10/2019 to 11/19/2019? Please identify the member who attended the event and the link to their event.,challenging,"SELECT DISTINCT T1.link_to_member, T3.link_to_event FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN attendance AS T3 ON T2.member_id = T3.link_to_member WHERE date(SUBSTR(T1.expense_date, 1, 10)) BETWEEN '2019-01-10' AND '2019-11-19' AND T1.approved = 'true'","SELECT m.member_id, m.first_name, m.last_name, a.link_to_event FROM member m JOIN attendance a ON m.member_id = a.link_to_member JOIN expense e ON m.member_id = e.link_to_member WHERE e.approved = 'true' AND e.expense_date BETWEEN '2019-01-10' AND '2019-11-19'","SELECT T1.member_id, T1.first_name, T1.last_name, T1.email, T2.event_id, T2.event_name, T2.event_date, T3.link_to_event FROM member AS T1 INNER JOIN attendance AS T3 ON T1.member_id = T3.link_to_member INNER JOIN event AS T2 ON T3.link_to_event = T2.event_id WHERE T2.status = 'approved' AND T3.approved = 'true' AND T2.event_date BETWEEN '2019-01-10' AND '2019-11-19'",0,0
Find the name and date of events with expenses for pizza that were more than fifty dollars but less than a hundred dollars.,challenging,"SELECT T1.event_name, T1.event_date FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T3.expense_description = 'Pizza' AND T3.cost > 50 AND T3.cost < 100","SELECT e.event_name, e.event_date FROM event e JOIN budget b ON e.event_id = b.link_to_event JOIN expense ex ON b.budget_id = ex.link_to_budget WHERE ex.expense_description = 'Pizza' AND ex.cost > 50 AND ex.cost < 100",NULL,1,0
"Among the members who incurred expenses in more than one event, who paid the most amount?",challenging,SELECT T2.member_id FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN budget AS T3 ON T1.link_to_budget = T3.budget_id INNER JOIN event AS T4 ON T3.link_to_event = T4.event_id GROUP BY T2.member_id HAVING COUNT(DISTINCT T4.event_id) > 1 ORDER BY SUM(T1.cost) DESC LIMIT 1,"SELECT m.member_id, m.first_name, m.last_name, SUM(e.cost) AS total_expense_cost FROM member m JOIN expense e ON m.member_id = e.link_to_member GROUP BY m.member_id HAVING COUNT(e.link_to_event) > 1 ORDER BY total_expense_cost DESC LIMIT 1","SELECT T1.member_id, T1.first_name, T1.last_name, T1.email, T1.phone FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T2.cost = (SELECT MAX(T3.cost) FROM expense AS T3 WHERE COUNT(T3.event_id) > 1)",0,0
Give the full name and contact number of members who had to spend more than average on each expense.,challenging,"SELECT DISTINCT T3.first_name, T3.last_name, T3.phone FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN member AS T3 ON T3.member_id = T1.link_to_member WHERE T1.cost > ( SELECT AVG(T1.cost) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN member AS T3 ON T3.member_id = T1.link_to_member )","SELECT m.first_name, m.last_name, m.phone FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.cost > (SELECT AVG(cost) FROM expense)",NULL,1,0
"Write the full name of the member who spent money for water, veggie tray and supplies and include the cost of it.",challenging,"SELECT T2.first_name, T2.last_name, T1.cost FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.expense_description = 'Water, Veggie tray, supplies'","SELECT m.first_name || ' ' || m.last_name AS full_name, e.cost FROM member m JOIN expense e ON m.member_id = e.link_to_member WHERE e.expense_description = 'Water, Veggie tray, supplies'","SELECT CONCAT(T2.first_name, ' ', T2.last_name) AS FullName, T4.cost FROM member AS T2 INNER JOIN expense AS T3 ON T2.member_id = T3.link_to_member INNER JOIN expense AS T4 ON T3.expense_id = T4.expense_id WHERE T4.expense_description = 'Water, Veggie tray, supplies'",0,0
Write the full names of students who received funds on the date of 9/9/2019 and include the amount received.,challenging,"SELECT DISTINCT T3.first_name, T3.last_name, T4.amount FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T3.member_id = T2.link_to_member INNER JOIN income AS T4 ON T4.link_to_member = T3.member_id WHERE T4.date_received = '2019-09-09'","SELECT first_name, last_name, amount FROM member JOIN income ON member.member_id = income.link_to_member WHERE date_received = '2019-09-09'","SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN income AS T2 ON T1.member_id = T2.link_to_member WHERE T2.date_received = '2019-09-09' AND T1.position = 'student'",1,0
What was the difference in gas consumption between CZK-paying customers and EUR-paying customers in 2012?,challenging,"SELECT SUM(IIF(T1.Currency = 'CZK', T2.Consumption, 0)) - SUM(IIF(T1.Currency = 'EUR', T2.Consumption, 0)) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE SUBSTR(T2.Date, 1, 4) = '2012'","SELECT      SUM(czk_consumption) - SUM(eur_consumption) AS difference_in_consumption FROM (     SELECT          SUM(CASE WHEN c.currency = 'CZK' THEN y.consumption ELSE 0 END) AS czk_consumption,         SUM(CASE WHEN c.currency = 'EUR' THEN y.consumption ELSE 0 END) AS eur_consumption     FROM          yearmonth y     JOIN          customers c ON y.customerid = c.customerid     WHERE          SUBSTR(y.date, 1, 4) = '2012'     GROUP BY          y.customerid ) AS consumption_summary",NULL,1,0
"What is the difference in the annual average consumption of the customers with the least amount of consumption paid in CZK for 2013 between SME and LAM, LAM and KAM, and KAM and SME?",challenging,"SELECT CAST(SUM(IIF(T1.Segment = 'SME', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'LAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) , CAST(SUM(IIF(T1.Segment = 'LAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'KAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) , CAST(SUM(IIF(T1.Segment = 'KAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'SME', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' AND T2.Consumption = ( SELECT MIN(Consumption) FROM yearmonth ) AND T2.Date BETWEEN 201301 AND 201312","SELECT          customerid,         SUM(consumption) AS total_consumption     FROM          yearmonth     WHERE          date BETWEEN '201301' AND '201312'     GROUP BY          customerid ), MinConsumptionCustomers AS (     SELECT          y.customerid,         y.total_consumption,         c.segment     FROM          Year2013Consumption y     JOIN          customers c ON y.customerid = c.customerid     ORDER BY          y.total_consumption ASC     LIMIT          1 ), SegmentConsumption AS (     SELECT          mcc.segment,         AVG(mcc.total_consumption) AS avg_consumption     FROM          MinConsumptionCustomers mcc     GROUP BY          mcc.segment ) SELECT      s1.segment AS Segment1,     s2.segment AS Segment2,     s1.avg_consumption AS SME_Avg,     s2.avg_consumption AS LAM_Avg,     (s2.avg_consumption - s1.avg_consumption) AS Difference_LAM_SME,     (s3.avg_consumption - s2.avg_consumption) AS Difference_KAM_LAM,     (s1.avg_consumption - s3.avg_consumption) AS Difference_SME_KAM FROM      SegmentConsumption s1 JOIN      SegmentConsumption s2 ON s1.segment = 'SME' AND s2.segment = 'LAM' JOIN      SegmentConsumption s3 ON s2.segment = 'LAM' AND s3.segment = 'KAM' ",NULL,0,0
"Which of the three segments—SME, LAM and KAM—has the biggest and lowest percentage increases in consumption paid in EUR between 2012 and 2013?",challenging,"SELECT CAST((SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2013%', T2.Consumption, 0)) - SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2012%', T2.Consumption, 0))) AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2012%', T2.Consumption, 0)), CAST(SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2013%', T2.Consumption, 0)) - SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) , CAST(SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2013%', T2.Consumption, 0)) - SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID","SELECT customerid, SUM(consumption) AS consumption_2012     FROM yearmonth     WHERE date LIKE '2012%'     GROUP BY customerid ), consumption_2013 AS (     SELECT customerid, SUM(consumption) AS consumption_2013     FROM yearmonth     WHERE date LIKE '2013%'     GROUP BY customerid ), percentage_increase AS (     SELECT          c2013.customerid,         c2013.consumption_2013,         c2012.consumption_2012,         (c2013.consumption_2013 - c2012.consumption_2012) AS increase,         ((c2013.consumption_2013 - c2012.consumption_2012) / c2013.consumption_2013) * 100 AS percentage_increase     FROM consumption_2013 c2013     JOIN consumption_2012 c2012 ON c2013.customerid = c2012.customerid ), segment_percentage_increase AS (     SELECT          p.segment,         AVG(pi.percentage_increase) AS avg_percentage_increase     FROM percentage_increase pi     JOIN customers c ON pi.customerid = c.customerid     JOIN products p ON c.currency = p.productid     WHERE p.segment IN ('SME', 'LAM', 'KAM')     GROUP BY p.segment ) SELECT      segment,     avg_percentage_increase FROM segment_percentage_increase ORDER BY avg_percentage_increase DESC","SELECT T2.segment, ((T1.consumption_2013 - T1.consumption_2012) / T1.consumption_2013) * 100 AS PercentageIncrease FROM (SELECT customerid, SUM(consumption) AS consumption_2012 FROM yearmonth WHERE strftime('%Y', date) = '2012' GROUP BY customerid) AS T1 INNER JOIN customers AS T2 ON T1.customerid = T2.customerid WHERE T2.currency = 'EUR' AND T2.segment IN ('SME', 'LAM', 'KAM') ORDER BY PercentageIncrease DESC",0,0
"For the customer who paid 634.8 in 2012/8/25, what was the consumption decrease rate from Year 2012 to 2013?",challenging,"SELECT CAST(SUM(IIF(SUBSTR(Date, 1, 4) = '2012', Consumption, 0)) - SUM(IIF(SUBSTR(Date, 1, 4) = '2013', Consumption, 0)) AS FLOAT) / SUM(IIF(SUBSTR(Date, 1, 4) = '2012', Consumption, 0)) FROM yearmonth WHERE CustomerID = ( SELECT T1.CustomerID FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-25' AND T1.Price = 634.8 )","SELECT (consumption_2012 - consumption_2013) / consumption_2012 AS consumption_decrease_rate FROM yearmonth WHERE customerid = (     SELECT customerid     FROM transactions_1k     WHERE amount = 634.8 AND date = '2012-08-25' ) AND date IN ('2012-08-01', '2013-08-01')","SELECT (T1.consumption_2013 - T1.consumption_2012) / T1.consumption_2012 AS consumption_decrease_rate FROM (   SELECT yearmonth.consumption AS consumption_2012, yearmonth_2.consumption AS consumption_2013   FROM yearmonth   INNER JOIN yearmonth AS yearmonth_2 ON yearmonth.customerid = yearmonth_2.customerid AND strftime('%Y-%m', yearmonth.date) = '2012-08' AND strftime('%Y-%m', yearmonth_2.date) = '2013-08'   WHERE yearmonth.customerid = (     SELECT transactions_1k.customerid     FROM transactions_1k     WHERE transactions_1k.amount = 634.8 AND transactions_1k.date = '2012/8/25'   ) ) AS T1",0,0
