[
    {
        "query": "SELECT COUNT(member_id) FROM member WHERE position = 'Member' AND t_shirt_size = 'X-Large'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "among the members refers to position = 'Member'; extra large t-shirt size refers to t_shirt_size = 'X-Large'",
        "question": "Among the members, how many of them have an extra large t-shirt size?",
        "question_id": 1424,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                40,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            44,
                            false
                        ],
                        null
                    ],
                    "\"Member\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ],
                    "\"X-Large\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR001'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "TR001 is the molecule id",
        "question": "List the toxicology elements associated with molecule TR001.",
        "question_id": 274,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"TR001\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT T.element FROM atom AS T WHERE T.atom_id = 'TR000_1'",
        "db_id": "toxicology",
        "difficulty": "challenging",
        "evidence": "atom with ID refers to atom_id; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium",
        "question": "What is the element of toxicology for the atom with the ID of TR000_1?",
        "question_id": 322,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    "\"TR000_1\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(t1.id) FROM Player_Attributes AS t1 WHERE t1.preferred_foot = 'left' AND t1.crossing = ( SELECT MAX(crossing) FROM Player_Attributes)",
        "db_id": "european_football_2",
        "difficulty": "moderate",
        "evidence": "highest potential score for crossing refers to MAX(crossing); preferred to use their left foots while attacking refers to preferred_foot = 'left'",
        "question": "How many players had the highest potential score for crossing that preferred to use their left foots while attacking?",
        "question_id": 1136,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"left\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            10,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM Player WHERE birthday > '1990' AND player_name LIKE 'Aaron%'",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "first name \"Aaron\" refers to player_name LIKE 'Aaron%'; born after the 1990s refers to birthday > '1990'",
        "question": "How many football players born after the 1990s have the first name \"Aaron\"?",
        "question_id": 1133,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                43,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            47,
                            false
                        ],
                        null
                    ],
                    "\"1990\"",
                    null
                ],
                "and",
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ],
                    "\"Aaron%\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT NCESDist FROM schools WHERE SOC = 31",
        "db_id": "california_schools",
        "difficulty": "simple",
        "evidence": "State Special Schools means that SOC = 31.",
        "question": "Please provide the National Center for Educational Statistics school district identification number for all schools with a School Ownership Code that are part of the State Special Schools.",
        "question_id": 69,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                42,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            68,
                            false
                        ],
                        null
                    ],
                    31.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(major_id) FROM major WHERE department = 'School of Applied Sciences, Technology and Education' AND college = 'College of Agriculture and Applied Sciences'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "",
        "question": "In the College of Agriculture and Applied Sciences, how many majors are under the department of School of Applied Sciences, Technology and Education?",
        "question_id": 1425,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"School of Applied Sciences, Technology and Education\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"College of Agriculture and Applied Sciences\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT AVG(LDH) FROM Laboratory WHERE LDH < 500",
        "db_id": "thrombosis_prediction",
        "difficulty": "simple",
        "evidence": "average index of the lactate dehydrogenase (LDH) refers to AVG(LDH); (LDH) within the normal range refers to LDH < 500",
        "question": "What is the average index of the lactate dehydrogenase (LDH) for all patients with lactate dehydrogenase (LDH) within the normal range.",
        "question_id": 1210,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            25,
                            false
                        ],
                        null
                    ],
                    500.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "total expense refers SUM(cost) where expense_date = '2019-08-20'",
        "question": "Mention the total expense used on 8/20/2019.",
        "question_id": 1409,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            29,
                            false
                        ],
                        null
                    ],
                    "\"2019-08-20\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT expense_description FROM expense GROUP BY expense_description HAVING AVG(cost) > 50",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "expense refers to expense_description; spend more than fifty dollars on average refers to DIVIDE( SUM(cost), COUNT(expense_id) ) > 50",
        "question": "List the expenses that spend more than fifty dollars on average.",
        "question_id": 1444,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    28,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            5,
                            30,
                            false
                        ],
                        null
                    ],
                    50.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                28,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT COUNT(DISTINCT T.molecule_id) FROM bond AS T WHERE T.molecule_id BETWEEN 'TR004' AND 'TR010' AND T.bond_type = '-'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "single bond refers to bond_type = '-'; molecules between TR004 to TR010 refers molecule_id BETWEEN 'TR004' and 'TR010';",
        "question": "Among the molecules between TR004 to TR010, how many of them has single bonds?",
        "question_id": 332,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                5,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"TR004\"",
                    "\"TR010\""
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "\"-\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Id FROM users WHERE Reputation = ( SELECT MAX(Reputation) FROM users )",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "highest reputation refers to Max(Reputation)",
        "question": "Which user ID has the highest reputation?",
        "question_id": 589,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                52,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            53,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    6
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            53,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT CommentCount, AnswerCount FROM posts WHERE Title = 'Clustering 1D data'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "",
        "question": "How many comments and answers were left by the users on the post with the title 'Clustering 1D data'?",
        "question_id": 698,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                38,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            35,
                            false
                        ],
                        null
                    ],
                    "\"Clustering 1D data\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT hero_id FROM hero_attribute WHERE attribute_value = ( SELECT MIN(attribute_value) FROM hero_attribute )",
        "db_id": "superhero",
        "difficulty": "simple",
        "evidence": "lowest attribute value refers to MIN(attribute_value);",
        "question": "Give the hero ID of superhero with the lowest attribute value.",
        "question_id": 837,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    7
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            27,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT LastEditDate, LastEditorUserId FROM posts WHERE Title = 'Detecting a given face in a database of facial images'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "Title = 'Detecting a given face in a database of facial images';",
        "question": "Provide the last edit date and last edit user ID for the post \"Detecting a given face in a database of facial images\".",
        "question_id": 644,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                41,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                40,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            35,
                            false
                        ],
                        null
                    ],
                    "\"Detecting a given face in a database of facial images\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Text FROM comments WHERE PostId IN ( SELECT Id FROM posts WHERE ViewCount BETWEEN 100 AND 150 ) ORDER BY Score DESC LIMIT 1",
        "db_id": "codebase_community",
        "difficulty": "moderate",
        "evidence": "views ranging from 100 to 150 refers to ViewCount BETWEEN 100 and 150; comment with the highest score refers to Text where MAX(Score);",
        "question": "Among the posts with views ranging from 100 to 150, what is the comment with the highest score?",
        "question_id": 707,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    4
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            26,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                1,
                                [
                                    0,
                                    [
                                        0,
                                        31,
                                        false
                                    ],
                                    null
                                ],
                                100.0,
                                150.0
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Title FROM posts WHERE Id = ( SELECT PostId FROM comments ORDER BY Score DESC LIMIT 1 )",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "highest score comment refers to Max(comments.Score)",
        "question": "What is the title for the post which got the highest score comment?",
        "question_id": 561,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            26,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": 1,
                        "orderBy": [
                            "desc",
                            [
                                [
                                    0,
                                    [
                                        0,
                                        7,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        ],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            6,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT keyruneCode FROM sets WHERE code = 'PKHC'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "keyrune code refers to keyruneCode",
        "question": "List the keyrune code for the set whose code is 'PKHC'.",
        "question_id": 489,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                97,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            91,
                            false
                        ],
                        null
                    ],
                    "\"PKHC\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT id, language FROM set_translations WHERE id = ( SELECT id FROM cards WHERE convertedManaCost = 5 ) AND setCode = '10E'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "set 10E refers to setCode = '10E'; converted mana of 5 refers to convertedManaCost = 5;",
        "question": "What are the cards in set 10E with converted mana of 5 have translation and what are the languages?",
        "question_id": 388,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                108,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                109,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            108,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            1,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        11,
                                        false
                                    ],
                                    null
                                ],
                                5.0,
                                null
                            ]
                        ]
                    },
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            110,
                            false
                        ],
                        null
                    ],
                    "\"10E\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-25' GROUP BY CustomerID ORDER BY SUM(Price) DESC LIMIT 1",
        "db_id": "debit_card_specializing",
        "difficulty": "simple",
        "evidence": "'2012/8/25' can be represented by '2012-08-25'",
        "question": "Which customer paid the most in 2012/8/25?",
        "question_id": 1512,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    13,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            4,
                            18,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"2012-08-25\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT player_name FROM player ORDER BY height ASC LIMIT 1",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "shortest height refers to MIN(height);",
        "question": "Which football player has the shortest height?",
        "question_id": 1069,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            48,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                45,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT COUNT(major_name) FROM major WHERE college = 'College of Humanities and Social Sciences'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "",
        "question": "How many majors are there in \"College of Humanities and Social Sciences\"?",
        "question_id": 1345,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"College of Humanities and Social Sciences\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DISTINCT availability FROM cards WHERE artist = 'Aleksi Briclot' AND isTextless = 1",
        "db_id": "card_games",
        "difficulty": "moderate",
        "evidence": "created by Aleksi Briclot refers to artist = 'Aleksi Briclot'; doesn't have a text box refers to isTextless = 1; available printing types refers to availability",
        "question": "What are the available printing types of the cards that doesn't have a text box created by Aleksi Briclot?",
        "question_id": 508,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Aleksi Briclot\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            34,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(t1.id) FROM Player_Attributes AS t1 WHERE t1.preferred_foot = 'left' AND t1.crossing = ( SELECT MAX(crossing) FROM Player_Attributes)",
        "db_id": "european_football_2",
        "difficulty": "moderate",
        "evidence": "highest potential score for crossing refers to MAX(crossing); preferred to use their left foots while attacking refers to preferred_foot = 'left'",
        "question": "How many players had the highest potential score for crossing that preferred to use their left foots while attacking?",
        "question_id": 1136,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"left\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            10,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DisplayName, WebsiteUrl FROM users WHERE Id = ( SELECT UserId FROM votes WHERE VoteTypeId = 8 ORDER BY BountyAmount DESC LIMIT 1 )",
        "db_id": "codebase_community",
        "difficulty": "moderate",
        "evidence": "vote type of 8 refers to VoteTypeId = 8; the highest bounty amount refers to MAX(BountyAmount);",
        "question": "Under the vote type of 8, provide the display names and websites URLs of the user who got the highest bounty amount.",
        "question_id": 657,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                55,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                57,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            52,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    7
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": 1,
                        "orderBy": [
                            "desc",
                            [
                                [
                                    0,
                                    [
                                        0,
                                        71,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        ],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            70,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        68,
                                        false
                                    ],
                                    null
                                ],
                                8.0,
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT id FROM sets ORDER BY baseSetSize DESC LIMIT 1",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "the highest number of cards refers to MAX(baseSetSize); unique id refers to id",
        "question": "What is the unique id of the set that has the highest number of cards?",
        "question_id": 509,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            88,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                87,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT COUNT(DISTINCT T.molecule_id) FROM bond AS T WHERE T.molecule_id BETWEEN 'TR004' AND 'TR010' AND T.bond_type = '-'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "single bond refers to bond_type = '-'; molecules between TR004 to TR010 refers molecule_id BETWEEN 'TR004' and 'TR010';",
        "question": "Among the molecules between TR004 to TR010, how many of them has single bonds?",
        "question_id": 332,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                5,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"TR004\"",
                    "\"TR010\""
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "\"-\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM Player WHERE birthday > '1990' AND player_name LIKE 'Aaron%'",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "first name \"Aaron\" refers to player_name LIKE 'Aaron%'; born after the 1990s refers to birthday > '1990'",
        "question": "How many football players born after the 1990s have the first name \"Aaron\"?",
        "question_id": 1133,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                43,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            47,
                            false
                        ],
                        null
                    ],
                    "\"1990\"",
                    null
                ],
                "and",
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ],
                    "\"Aaron%\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT layout FROM cards WHERE keywords = 'Flying'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "",
        "question": "What are the card layout of cards with keyword of flying?",
        "question_id": 376,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            36,
                            false
                        ],
                        null
                    ],
                    "\"Flying\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(city) FROM zip_code WHERE county = 'Orange County' AND state = 'Virginia'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "Orange County is the county name, Virginia is the state name",
        "question": "How many cities are there in Orange County, Virginia?",
        "question_id": 1362,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"Orange County\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ],
                    "\"Virginia\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT expense_description FROM expense GROUP BY expense_description HAVING AVG(cost) > 50",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "expense refers to expense_description; spend more than fifty dollars on average refers to DIVIDE( SUM(cost), COUNT(expense_id) ) > 50",
        "question": "List the expenses that spend more than fifty dollars on average.",
        "question_id": 1444,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    28,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            5,
                            30,
                            false
                        ],
                        null
                    ],
                    50.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                28,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT full_name FROM superhero WHERE superhero_name = 'Alien'",
        "db_id": "superhero",
        "difficulty": "simple",
        "evidence": "",
        "question": "Provide the full name of the superhero named Alien.",
        "question_id": 838,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    "\"Alien\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT translation FROM set_translations WHERE setCode IN ( SELECT code FROM sets WHERE name = 'Mirrodin' ) AND language = 'Chinese Simplified'",
        "db_id": "card_games",
        "difficulty": "moderate",
        "evidence": "Simplified Chinese translation refers to language = 'Chinese Simplified'; name of the set \"Mirrodin\" refers to name = 'Mirrodin'",
        "question": "Show the Simplified Chinese translation of the name of the set \"Mirrodin\"?",
        "question_id": 505,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                111,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            110,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    3
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            91,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        102,
                                        false
                                    ],
                                    null
                                ],
                                "\"Mirrodin\"",
                                null
                            ]
                        ]
                    },
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            109,
                            false
                        ],
                        null
                    ],
                    "\"Chinese Simplified\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(*) FROM cards WHERE power = '*'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "infinite power refers to power = '*';",
        "question": "How many cards have infinite power?",
        "question_id": 356,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            55,
                            false
                        ],
                        null
                    ],
                    "\"*\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(T.molecule_id) FROM molecule AS T WHERE T.label = '+'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "label = '+' mean molecules are carcinogenic;",
        "question": "How many chemical compounds in the database are identified as carcinogenic.",
        "question_id": 291,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"+\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DISTINCT ID FROM Laboratory WHERE Date BETWEEN '1987-07-06' AND '1996-01-31' AND GPT > 30 AND ALB < 4",
        "db_id": "thrombosis_prediction",
        "difficulty": "moderate",
        "evidence": "examined between 1987/7/6 and 1996/1/31 refers to Date BETWEEN '1987-07-06' AND '1996-01-31'; GPT level greater than 30 refers to GPT > 30; ALB level less than 4 ALB < 4",
        "question": "How many patients who were examined between 1987/7/6 and 1996/1/31 had a GPT level greater than 30 and an ALB level less than 4? List them by their ID.",
        "question_id": 1187,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    "\"1987-07-06\"",
                    "\"1996-01-31\""
                ],
                "and",
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            24,
                            false
                        ],
                        null
                    ],
                    30.0,
                    null
                ],
                "and",
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            28,
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler'",
        "db_id": "superhero",
        "difficulty": "simple",
        "evidence": "name the superhero refers to superhero_name; Charles Chandler is the full name of superhero;",
        "question": "Name the superhero, otherwise known as Charles Chandler.",
        "question_id": 833,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"Charles Chandler\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT manaCost FROM cards WHERE availability = 'mtgo,paper' AND borderColor = 'black' AND frameVersion = 2003 AND layout = 'normal'",
        "db_id": "card_games",
        "difficulty": "moderate",
        "evidence": "available in paper and mtgo refers to availability = 'mtgo,paper'; frameVersion = 2003;borderColor = 'black'",
        "question": "What is the mana cost of cards with a normal layout, a 2003 frame version, with a black border color, and available in paper and mtgo?",
        "question_id": 397,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                41,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"mtgo,paper\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"black\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    2003.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            37,
                            false
                        ],
                        null
                    ],
                    "\"normal\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Title FROM posts ORDER BY ViewCount DESC LIMIT 5",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "Higher view count means the post has higher popularity; the highest popularity refers to MAX(ViewCount);",
        "question": "What are the titles of the top 5 posts with the highest popularity?",
        "question_id": 658,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 5,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            31,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT id FROM Player_Attributes WHERE preferred_foot = 'right' ORDER BY potential DESC LIMIT 5",
        "db_id": "european_football_2",
        "difficulty": "moderate",
        "evidence": "lowest potential players refers to MIN(potential); prefer to use the right foot when attacking refers to preferred_foot = 'right'",
        "question": "Please provide top five football players' IDs who are among the lowest potential players and prefer to use the right foot when attacking.",
        "question_id": 1135,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 5,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"right\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT id FROM Player_Attributes ORDER BY crossing DESC LIMIT 5",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "perform better in crossing actions refers to MAX(crossing)",
        "question": "Who are the top 5 players who perform better in crossing actions? Indicate their player id.",
        "question_id": 1024,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 5,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT COUNT(major_id) FROM major WHERE department = 'School of Applied Sciences, Technology and Education' AND college = 'College of Agriculture and Applied Sciences'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "",
        "question": "In the College of Agriculture and Applied Sciences, how many majors are under the department of School of Applied Sciences, Technology and Education?",
        "question_id": 1425,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"School of Applied Sciences, Technology and Education\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"College of Agriculture and Applied Sciences\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT type FROM sets WHERE name LIKE '%FROM the Vault: Lore%'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "set \"From the Vault refers to name which contains 'From the Vault: Lore'; expansion type refers to type",
        "question": "For the set \"From the Vault: Lore\", what is its expansion type?",
        "question_id": 492,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                107,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            102,
                            false
                        ],
                        null
                    ],
                    "\"%FROM the Vault: Lore%\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek'",
        "db_id": "superhero",
        "difficulty": "simple",
        "evidence": "Star Trek is the publisher_name;",
        "question": "Give the publisher ID of Star Trek.",
        "question_id": 745,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"Star Trek\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT label FROM molecule AS T WHERE T.molecule_id = 'TR000'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic",
        "question": "Is molecule TR000 is carcinogenic or not?",
        "question_id": 323,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"TR000\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 10",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "heaviest refers to MAX(weight)",
        "question": "What are the player api id of 10 heaviest players?",
        "question_id": 1117,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 10,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            49,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                44,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT Text FROM comments WHERE PostId IN ( SELECT Id FROM posts WHERE ViewCount BETWEEN 100 AND 150 ) ORDER BY Score DESC LIMIT 1",
        "db_id": "codebase_community",
        "difficulty": "moderate",
        "evidence": "views ranging from 100 to 150 refers to ViewCount BETWEEN 100 and 150; comment with the highest score refers to Text where MAX(Score);",
        "question": "Among the posts with views ranging from 100 to 150, what is the comment with the highest score?",
        "question_id": 707,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    4
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            26,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                1,
                                [
                                    0,
                                    [
                                        0,
                                        31,
                                        false
                                    ],
                                    null
                                ],
                                100.0,
                                150.0
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek'",
        "db_id": "superhero",
        "difficulty": "simple",
        "evidence": "Star Trek is the publisher_name;",
        "question": "Give the publisher ID of Star Trek.",
        "question_id": 745,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"Star Trek\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT expense_description FROM expense GROUP BY expense_description HAVING AVG(cost) > 50",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "expense refers to expense_description; spend more than fifty dollars on average refers to DIVIDE( SUM(cost), COUNT(expense_id) ) > 50",
        "question": "List the expenses that spend more than fifty dollars on average.",
        "question_id": 1444,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    28,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            5,
                            30,
                            false
                        ],
                        null
                    ],
                    50.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                28,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT Symptoms FROM Examination WHERE Diagnosis = 'SLE' GROUP BY Symptoms ORDER BY COUNT(Symptoms) DESC LIMIT 1",
        "db_id": "thrombosis_prediction",
        "difficulty": "simple",
        "evidence": "the most common sign refers to MAX(symptoms); 'SLE' refers to diagnosis",
        "question": "What is the most common sign of patients with SLE disease?",
        "question_id": 1196,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    12,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            12,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "\"SLE\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT T2.category, SUM(T2.amount) FROM event AS T1 JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'April Speaker' GROUP BY T2.category ORDER BY SUM(T2.amount) ASC",
        "db_id": "student_club",
        "difficulty": "moderate",
        "evidence": "'April Speaker' is an event name; amount budgeted refers to SUM(amount); budget categories refers to category",
        "question": "Calculate the amount budgeted for 'April Speaker' event. List all the budgeted categories for said event in an ascending order based on their amount budgeted.",
        "question_id": 1405,
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            26,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    21,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            4,
                            24,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"April Speaker\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT duration FROM pitStops ORDER BY duration DESC LIMIT 1",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "longest time spent at pitstop refers to MAX(duration)",
        "question": "What was the longest time a driver had ever spent at a pit stop?",
        "question_id": 1005,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        9
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            64,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                64,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT player_name FROM Player WHERE height > 180",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "height>180;",
        "question": "Please list player names which are higher than 180.",
        "question_id": 1059,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                45,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            48,
                            false
                        ],
                        null
                    ],
                    180.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(major_name) FROM major WHERE college = 'College of Humanities and Social Sciences'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "",
        "question": "How many majors are there in \"College of Humanities and Social Sciences\"?",
        "question_id": 1345,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"College of Humanities and Social Sciences\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT CommentCount, AnswerCount FROM posts WHERE Title = 'Clustering 1D data'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "",
        "question": "How many comments and answers were left by the users on the post with the title 'Clustering 1D data'?",
        "question_id": 698,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                38,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            35,
                            false
                        ],
                        null
                    ],
                    "\"Clustering 1D data\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(T.molecule_id) FROM molecule AS T WHERE molecule_id BETWEEN 'TR000' AND 'TR099' AND T.label = '+'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "first 100 molecules in number order refers to molecule_id between 'TR000' and 'TR099'; label = '+' means molecules are carcinogenic",
        "question": "Of the first 100 molecules in number order, how many are carcinogenic?",
        "question_id": 204,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"TR000\"",
                    "\"TR099\""
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"+\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT id FROM sets ORDER BY baseSetSize DESC LIMIT 1",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "the highest number of cards refers to MAX(baseSetSize); unique id refers to id",
        "question": "What is the unique id of the set that has the highest number of cards?",
        "question_id": 509,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            88,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                87,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT CreationDate FROM users WHERE DisplayName = 'IrishStat'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "DisplayName = 'IrishStat'; when create his or her account refers to CreationDate;",
        "question": "When did the user known as 'IrishStat' create his or her account?",
        "question_id": 699,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                54,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            55,
                            false
                        ],
                        null
                    ],
                    "\"IrishStat\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT name FROM foreign_data WHERE uuid IN ( SELECT uuid FROM cards WHERE types = 'Creature' AND layout = 'normal' AND borderColor = 'black' AND artist = 'Matthew D. Wilson' ) AND language = 'French'",
        "db_id": "card_games",
        "difficulty": "moderate",
        "evidence": "in French refers to language = 'French'; black border color refers to borderColor = 'black'",
        "question": "What is the foreign name of the card in French of type Creature, normal layout and black border color, by artist Matthew D. Wilson?",
        "question_id": 412,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                79,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            82,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            72,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        71,
                                        false
                                    ],
                                    null
                                ],
                                "\"Creature\"",
                                null
                            ],
                            "and",
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        37,
                                        false
                                    ],
                                    null
                                ],
                                "\"normal\"",
                                null
                            ],
                            "and",
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        5,
                                        false
                                    ],
                                    null
                                ],
                                "\"black\"",
                                null
                            ],
                            "and",
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        2,
                                        false
                                    ],
                                    null
                                ],
                                "\"Matthew D. Wilson\"",
                                null
                            ]
                        ]
                    },
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            77,
                            false
                        ],
                        null
                    ],
                    "\"French\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT player_name FROM Player WHERE height > 180",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "height>180;",
        "question": "Please list player names which are higher than 180.",
        "question_id": 1059,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                45,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            48,
                            false
                        ],
                        null
                    ],
                    180.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Title FROM posts WHERE Id = ( SELECT PostId FROM comments ORDER BY Score DESC LIMIT 1 )",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "highest score comment refers to Max(comments.Score)",
        "question": "What is the title for the post which got the highest score comment?",
        "question_id": 561,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            26,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": 1,
                        "orderBy": [
                            "desc",
                            [
                                [
                                    0,
                                    [
                                        0,
                                        7,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        ],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            6,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler'",
        "db_id": "superhero",
        "difficulty": "simple",
        "evidence": "name the superhero refers to superhero_name; Charles Chandler is the full name of superhero;",
        "question": "Name the superhero, otherwise known as Charles Chandler.",
        "question_id": 833,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"Charles Chandler\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(player_api_id) FROM Player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'low'",
        "db_id": "european_football_2",
        "difficulty": "moderate",
        "evidence": "preferred foot when attacking was the left refers to preferred_foot = 'left'; players who would remain in his position when the team attacked refers to attacking_work_rate = 'low';",
        "question": "Among the players whose preferred foot was the left foot when attacking, how many of them would remain in his position when the team attacked?",
        "question_id": 1080,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"left\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "\"low\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT year FROM races GROUP BY year ORDER BY COUNT(round) DESC LIMIT 1",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "the most number of races refers to max(round);",
        "question": "Which year has the most number of races?",
        "question_id": 886,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    27,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            28,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                27,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT team_long_name FROM Team WHERE team_short_name = 'GEN'",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "long name for the team refers to team_long_name; team_short_name = 'GEN';",
        "question": "What's the long name for the team GEN?",
        "question_id": 1077,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                58,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            59,
                            false
                        ],
                        null
                    ],
                    "\"GEN\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT translation FROM set_translations WHERE setCode IN ( SELECT code FROM sets WHERE name = 'Mirrodin' ) AND language = 'Chinese Simplified'",
        "db_id": "card_games",
        "difficulty": "moderate",
        "evidence": "Simplified Chinese translation refers to language = 'Chinese Simplified'; name of the set \"Mirrodin\" refers to name = 'Mirrodin'",
        "question": "Show the Simplified Chinese translation of the name of the set \"Mirrodin\"?",
        "question_id": 505,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                111,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            110,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    3
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            91,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        102,
                                        false
                                    ],
                                    null
                                ],
                                "\"Mirrodin\"",
                                null
                            ]
                        ]
                    },
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            109,
                            false
                        ],
                        null
                    ],
                    "\"Chinese Simplified\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-25' GROUP BY CustomerID ORDER BY SUM(Price) DESC LIMIT 1",
        "db_id": "debit_card_specializing",
        "difficulty": "simple",
        "evidence": "'2012/8/25' can be represented by '2012-08-25'",
        "question": "Which customer paid the most in 2012/8/25?",
        "question_id": 1512,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    13,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            4,
                            18,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"2012-08-25\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(Id) FROM posts WHERE ViewCount > 35000 AND CommentCount = 0",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "have been viewed over 35000 times refers to ViewCount > 35000; received no comments refers to CommentCount = 0;",
        "question": "Identify the number of posts that have been viewed over 35000 times but have received no comments from other users.",
        "question_id": 688,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            31,
                            false
                        ],
                        null
                    ],
                    35000.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            38,
                            false
                        ],
                        null
                    ],
                    0.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(Id) FROM comments WHERE UserId = 13 AND Score < 60",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "negative comments refer to Score < 60;",
        "question": "How many negative comments were given by user ID 13?",
        "question_id": 645,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    13.0,
                    null
                ],
                "and",
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    60.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT T4.amount FROM card AS T1 JOIN disp AS T2 ON T1.disp_id = T2.disp_id JOIN account AS T3 on T2.account_id = T3.account_id JOIN trans AS T4 on T3.account_id = T4.account_id WHERE T1.issued = '1996-10-21' ORDER BY T4.amount DESC LIMIT 1",
        "db_id": "financial",
        "difficulty": "simple",
        "evidence": "",
        "question": "What is the biggest amount of transaction that the client whose card was opened in 1996/10/21 made?",
        "question_id": 106,
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            47,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            51,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                51,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "\"1996-10-21\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT CreationDate FROM users WHERE DisplayName = 'IrishStat'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "DisplayName = 'IrishStat'; when create his or her account refers to CreationDate;",
        "question": "When did the user known as 'IrishStat' create his or her account?",
        "question_id": 699,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                54,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            55,
                            false
                        ],
                        null
                    ],
                    "\"IrishStat\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT language FROM foreign_data WHERE multiverseid = 149934",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "multiverse number 149934 refers to multiverseid = 149934;",
        "question": "What is the language of the card with the multiverse number 149934?",
        "question_id": 422,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                77,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            78,
                            false
                        ],
                        null
                    ],
                    149934.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DISTINCT ID FROM Laboratory WHERE Date BETWEEN '1987-07-06' AND '1996-01-31' AND GPT > 30 AND ALB < 4",
        "db_id": "thrombosis_prediction",
        "difficulty": "moderate",
        "evidence": "examined between 1987/7/6 and 1996/1/31 refers to Date BETWEEN '1987-07-06' AND '1996-01-31'; GPT level greater than 30 refers to GPT > 30; ALB level less than 4 ALB < 4",
        "question": "How many patients who were examined between 1987/7/6 and 1996/1/31 had a GPT level greater than 30 and an ALB level less than 4? List them by their ID.",
        "question_id": 1187,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    "\"1987-07-06\"",
                    "\"1996-01-31\""
                ],
                "and",
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            24,
                            false
                        ],
                        null
                    ],
                    30.0,
                    null
                ],
                "and",
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            28,
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT superhero_name FROM superhero ORDER BY height_cm DESC LIMIT 1",
        "db_id": "superhero",
        "difficulty": "simple",
        "evidence": "who refers to superhero_name; tallest superhero refers to MAX(height_cm);",
        "question": "Who is the tallest superhero?",
        "question_id": 802,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT hero_id FROM hero_attribute WHERE attribute_value = ( SELECT MIN(attribute_value) FROM hero_attribute )",
        "db_id": "superhero",
        "difficulty": "simple",
        "evidence": "lowest attribute value refers to MIN(attribute_value);",
        "question": "Give the hero ID of superhero with the lowest attribute value.",
        "question_id": 837,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    7
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            27,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(DISTINCT T.molecule_id) FROM bond AS T WHERE T.molecule_id BETWEEN 'TR004' AND 'TR010' AND T.bond_type = '-'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "single bond refers to bond_type = '-'; molecules between TR004 to TR010 refers molecule_id BETWEEN 'TR004' and 'TR010';",
        "question": "Among the molecules between TR004 to TR010, how many of them has single bonds?",
        "question_id": 332,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                5,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"TR004\"",
                    "\"TR010\""
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "\"-\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM cards WHERE toughness = 99",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "",
        "question": "How many cards are there with toughness of 99?",
        "question_id": 372,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            69,
                            false
                        ],
                        null
                    ],
                    99.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT name FROM cards ORDER BY faceConvertedManaCost LIMIT 1",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "more converted mana for the face refers to Max(faceConvertedManaCost);",
        "question": "List the card names with value that cost more converted mana for the face.",
        "question_id": 342,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                49,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT mcmId FROM sets WHERE code = 'SS2'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "magic card market id refers to mcmId",
        "question": "For the set which had 'SS2' as the code, what is its magic card market id?",
        "question_id": 490,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                98,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            91,
                            false
                        ],
                        null
                    ],
                    "\"SS2\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT name FROM sets WHERE code IN ( SELECT setCode FROM set_translations WHERE language = 'Korean' AND language NOT LIKE '%Japanese%' )",
        "db_id": "card_games",
        "difficulty": "moderate",
        "evidence": "names of sets refers to name; doesn't have Japanese translation refers to language not like '%Japanese%'; have Korean translation refers to language = 'Korean'",
        "question": "Find and list the names of sets which doesn't have Japanese translation but have Korean translation.",
        "question_id": 529,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                102,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            91,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    4
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            110,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        109,
                                        false
                                    ],
                                    null
                                ],
                                "\"Korean\"",
                                null
                            ],
                            "and",
                            [
                                true,
                                9,
                                [
                                    0,
                                    [
                                        0,
                                        109,
                                        false
                                    ],
                                    null
                                ],
                                "\"%Japanese%\"",
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(T.molecule_id) FROM molecule AS T WHERE molecule_id BETWEEN 'TR000' AND 'TR099' AND T.label = '+'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "first 100 molecules in number order refers to molecule_id between 'TR000' and 'TR099'; label = '+' means molecules are carcinogenic",
        "question": "Of the first 100 molecules in number order, how many are carcinogenic?",
        "question_id": 204,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"TR000\"",
                    "\"TR099\""
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"+\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(T.molecule_id) FROM molecule AS T WHERE molecule_id BETWEEN 'TR000' AND 'TR099' AND T.label = '+'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "first 100 molecules in number order refers to molecule_id between 'TR000' and 'TR099'; label = '+' means molecules are carcinogenic",
        "question": "Of the first 100 molecules in number order, how many are carcinogenic?",
        "question_id": 204,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"TR000\"",
                    "\"TR099\""
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"+\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "total expense refers SUM(cost) where expense_date = '2019-08-20'",
        "question": "Mention the total expense used on 8/20/2019.",
        "question_id": 1409,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            29,
                            false
                        ],
                        null
                    ],
                    "\"2019-08-20\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT id, language FROM set_translations WHERE id = ( SELECT id FROM cards WHERE convertedManaCost = 5 ) AND setCode = '10E'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "set 10E refers to setCode = '10E'; converted mana of 5 refers to convertedManaCost = 5;",
        "question": "What are the cards in set 10E with converted mana of 5 have translation and what are the languages?",
        "question_id": 388,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                108,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                109,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            108,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            1,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        11,
                                        false
                                    ],
                                    null
                                ],
                                5.0,
                                null
                            ]
                        ]
                    },
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            110,
                            false
                        ],
                        null
                    ],
                    "\"10E\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Age FROM users WHERE Reputation = ( SELECT MAX(Reputation) FROM users )",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "How old describes age; the most influential refers to user where MAX(Reputation);",
        "question": "How old is the most influential user?",
        "question_id": 661,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                64,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            53,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    6
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            53,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT id FROM cards WHERE borderColor = 'black' GROUP BY id",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "border with black color refers to borderColor = 'black'",
        "question": "How many card border with black color ? List out the card id.",
        "question_id": 435,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"black\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(T.molecule_id) FROM molecule AS T WHERE molecule_id BETWEEN 'TR000' AND 'TR099' AND T.label = '+'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "first 100 molecules in number order refers to molecule_id between 'TR000' and 'TR099'; label = '+' means molecules are carcinogenic",
        "question": "Of the first 100 molecules in number order, how many are carcinogenic?",
        "question_id": 204,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"TR000\"",
                    "\"TR099\""
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"+\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT NCESDist FROM schools WHERE SOC = 31",
        "db_id": "california_schools",
        "difficulty": "simple",
        "evidence": "State Special Schools means that SOC = 31.",
        "question": "Please provide the National Center for Educational Statistics school district identification number for all schools with a School Ownership Code that are part of the State Special Schools.",
        "question_id": 69,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                42,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            68,
                            false
                        ],
                        null
                    ],
                    31.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(DISTINCT T.molecule_id) FROM bond AS T WHERE T.bond_type = '#'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "triple bond refers to bond_type = '#';",
        "question": "How many molecules have a triple bond type?",
        "question_id": 238,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                5,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "\"#\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(Id) FROM users WHERE Location = 'New York'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "New York refers to Location;",
        "question": "How many users were from New York?",
        "question_id": 625,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                52,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            58,
                            false
                        ],
                        null
                    ],
                    "\"New York\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DisplayName, Age FROM users WHERE Views = ( SELECT MAX(Views) FROM users )",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "the highest in views refers to MAX(Views);",
        "question": "What are the display names and ages of user who got the highest in views?",
        "question_id": 643,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                55,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                64,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            60,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    6
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            60,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Id, DisplayName FROM users WHERE Views = ( SELECT MAX(Views) FROM users )",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "users have the highest number of views refer to DisplayName where MAX(Views);",
        "question": "Which users have the highest number of views?",
        "question_id": 628,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                52,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                55,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            60,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    6
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            60,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT T.molecule_id FROM molecule AS T WHERE T.label = '-'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "label = '-' means molecules are non-carcinogenic",
        "question": "List down the molecule id for non carcinogenic molecules.",
        "question_id": 265,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"-\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT year FROM races GROUP BY year ORDER BY COUNT(round) DESC LIMIT 1",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "the most number of races refers to max(round);",
        "question": "Which year has the most number of races?",
        "question_id": 886,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    27,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            28,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                27,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT COUNT(driverId) FROM driverStandings WHERE raceId = 18",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "",
        "question": "How many driver participated in race ID number 18?",
        "question_id": 966,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                48,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            47,
                            false
                        ],
                        null
                    ],
                    18.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT expense_description FROM expense GROUP BY expense_description HAVING AVG(cost) > 50",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "expense refers to expense_description; spend more than fifty dollars on average refers to DIVIDE( SUM(cost), COUNT(expense_id) ) > 50",
        "question": "List the expenses that spend more than fifty dollars on average.",
        "question_id": 1444,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    28,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            5,
                            30,
                            false
                        ],
                        null
                    ],
                    50.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                28,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT COUNT(driverId) FROM driverStandings WHERE raceId = 18",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "",
        "question": "How many driver participated in race ID number 18?",
        "question_id": 966,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                48,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            47,
                            false
                        ],
                        null
                    ],
                    18.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DISTINCT availability FROM cards WHERE artist = 'Aleksi Briclot' AND isTextless = 1",
        "db_id": "card_games",
        "difficulty": "moderate",
        "evidence": "created by Aleksi Briclot refers to artist = 'Aleksi Briclot'; doesn't have a text box refers to isTextless = 1; available printing types refers to availability",
        "question": "What are the available printing types of the cards that doesn't have a text box created by Aleksi Briclot?",
        "question_id": 508,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Aleksi Briclot\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            34,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT label FROM molecule AS T WHERE T.molecule_id = 'TR000'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic",
        "question": "Is molecule TR000 is carcinogenic or not?",
        "question_id": 323,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"TR000\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Id FROM users WHERE Reputation = ( SELECT MAX(Reputation) FROM users )",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "highest reputation refers to Max(Reputation)",
        "question": "Which user ID has the highest reputation?",
        "question_id": 589,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                52,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            53,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    6
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            53,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT driverRef FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton'",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "reference name refers to driverRef",
        "question": "What's Lewis Hamilton's reference name?",
        "question_id": 918,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    "\"Lewis\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ],
                    "\"Hamilton\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT player_name FROM Player WHERE height > 180",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "height>180;",
        "question": "Please list player names which are higher than 180.",
        "question_id": 1059,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                45,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            48,
                            false
                        ],
                        null
                    ],
                    180.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(T.atom_id) FROM atom AS T WHERE T.element = 'c' OR T.element = 'h'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "consisting of element carbon and hydrogen refers to element in('c', 'h')",
        "question": "Calculate the total atoms consisting of the element carbon and hydrogen.",
        "question_id": 256,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"c\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"h\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(city) FROM zip_code WHERE county = 'Orange County' AND state = 'Virginia'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "Orange County is the county name, Virginia is the state name",
        "question": "How many cities are there in Orange County, Virginia?",
        "question_id": 1362,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"Orange County\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ],
                    "\"Virginia\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "Carlo Jacobs is the full name; full name refers to first_name, last_name;",
        "question": "Tell the phone number of \"Carlo Jacobs\".",
        "question_id": 1346,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                46,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            41,
                            false
                        ],
                        null
                    ],
                    "\"Carlo\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            42,
                            false
                        ],
                        null
                    ],
                    "\"Jacobs\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit'",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "reference name refers to circuitRef; Marina Bay Street Circuit refers to circuits.name = 'Marina Bay Street Circuit'",
        "question": "What's the reference name of Marina Bay Street Circuit?",
        "question_id": 912,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Marina Bay Street Circuit\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT cost FROM expense WHERE expense_description = 'Posters' AND expense_date = '2019-09-04'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "'Poster' is an event description; on 2019/9/14 refers to event_date = '2019-09-04'",
        "question": "What was the cost for the \"Posters\" on 2019/9/4?",
        "question_id": 1342,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            28,
                            false
                        ],
                        null
                    ],
                    "\"Posters\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            29,
                            false
                        ],
                        null
                    ],
                    "\"2019-09-04\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT AVG(LDH) FROM Laboratory WHERE LDH < 500",
        "db_id": "thrombosis_prediction",
        "difficulty": "simple",
        "evidence": "average index of the lactate dehydrogenase (LDH) refers to AVG(LDH); (LDH) within the normal range refers to LDH < 500",
        "question": "What is the average index of the lactate dehydrogenase (LDH) for all patients with lactate dehydrogenase (LDH) within the normal range.",
        "question_id": 1210,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            25,
                            false
                        ],
                        null
                    ],
                    500.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT team_long_name FROM Team WHERE team_short_name = 'GEN'",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "long name for the team refers to team_long_name; team_short_name = 'GEN';",
        "question": "What's the long name for the team GEN?",
        "question_id": 1077,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                58,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            59,
                            false
                        ],
                        null
                    ],
                    "\"GEN\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT source FROM income WHERE date_received BETWEEN '2019-09-01' and '2019-09-30' ORDER BY source DESC LIMIT 1",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "top source funds refers to MAX(source); September 2019 means date_received BETWEEN '2019-09-01' and '2019-09-30'",
        "question": "Indicate the top source of funds received in September 2019 based on their amount.",
        "question_id": 1392,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            37,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            35,
                            false
                        ],
                        null
                    ],
                    "\"2019-09-01\"",
                    "\"2019-09-30\""
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM users WHERE Age BETWEEN 19 AND 65",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "adult refers to user where Age BETWEEN 19 and 65;",
        "question": "How many users were adult?",
        "question_id": 627,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                52,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            64,
                            false
                        ],
                        null
                    ],
                    19.0,
                    65.0
                ]
            ]
        }
    },
    {
        "query": "SELECT id FROM Player_Attributes ORDER BY crossing DESC LIMIT 5",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "perform better in crossing actions refers to MAX(crossing)",
        "question": "Who are the top 5 players who perform better in crossing actions? Indicate their player id.",
        "question_id": 1024,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 5,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT COUNT(member_id) FROM member WHERE position = 'Member' AND t_shirt_size = 'X-Large'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "among the members refers to position = 'Member'; extra large t-shirt size refers to t_shirt_size = 'X-Large'",
        "question": "Among the members, how many of them have an extra large t-shirt size?",
        "question_id": 1424,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                40,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            44,
                            false
                        ],
                        null
                    ],
                    "\"Member\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ],
                    "\"X-Large\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM cards WHERE originalType = 'Summon - Angel' AND subtypes != 'Angel'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "subtype other than Angel refers to subtypes is not 'Angel';",
        "question": "How many cards with original type of \"Summon - Angel\" have subtype other than \"Angel\"?",
        "question_id": 377,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            53,
                            false
                        ],
                        null
                    ],
                    "\"Summon - Angel\"",
                    null
                ],
                "and",
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            65,
                            false
                        ],
                        null
                    ],
                    "\"Angel\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT id FROM Player_Attributes WHERE preferred_foot = 'right' ORDER BY potential DESC LIMIT 5",
        "db_id": "european_football_2",
        "difficulty": "moderate",
        "evidence": "lowest potential players refers to MIN(potential); prefer to use the right foot when attacking refers to preferred_foot = 'right'",
        "question": "Please provide top five football players' IDs who are among the lowest potential players and prefer to use the right foot when attacking.",
        "question_id": 1135,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 5,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"right\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(major_id) FROM major WHERE department = 'School of Applied Sciences, Technology and Education' AND college = 'College of Agriculture and Applied Sciences'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "",
        "question": "In the College of Agriculture and Applied Sciences, how many majors are under the department of School of Applied Sciences, Technology and Education?",
        "question_id": 1425,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"School of Applied Sciences, Technology and Education\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"College of Agriculture and Applied Sciences\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT expense_description FROM expense GROUP BY expense_description HAVING AVG(cost) > 50",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "expense refers to expense_description; spend more than fifty dollars on average refers to DIVIDE( SUM(cost), COUNT(expense_id) ) > 50",
        "question": "List the expenses that spend more than fifty dollars on average.",
        "question_id": 1444,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    28,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            5,
                            30,
                            false
                        ],
                        null
                    ],
                    50.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                28,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT COUNT(Id) FROM posts WHERE ViewCount > 35000 AND CommentCount = 0",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "have been viewed over 35000 times refers to ViewCount > 35000; received no comments refers to CommentCount = 0;",
        "question": "Identify the number of posts that have been viewed over 35000 times but have received no comments from other users.",
        "question_id": 688,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            31,
                            false
                        ],
                        null
                    ],
                    35000.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            38,
                            false
                        ],
                        null
                    ],
                    0.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Text FROM comments WHERE CreationDate = '2010-07-19 19:16:14.0'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "detailed content of the comment refers to Text; created on 7/19/2010 7:16:14 PM refers to CreationDate = '2010-07-19 19:16:14.0'",
        "question": "State the detailed content of the comment which was created on 7/19/2010 7:25:47 PM.",
        "question_id": 608,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "\"2010-07-19 19:16:14.0\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Id, DisplayName FROM users WHERE Views = ( SELECT MAX(Views) FROM users )",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "users have the highest number of views refer to DisplayName where MAX(Views);",
        "question": "Which users have the highest number of views?",
        "question_id": 628,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                52,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                55,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            60,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    6
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            60,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "are oversized refers to isOversized = 1; reprinted refers to isReprint = 1; printed for promotions refers to isPromo = 1",
        "question": "How many cards are oversized, reprinted, and printed for promotions?",
        "question_id": 420,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            28,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            30,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            29,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT full_name FROM superhero WHERE superhero_name = 'Alien'",
        "db_id": "superhero",
        "difficulty": "simple",
        "evidence": "",
        "question": "Provide the full name of the superhero named Alien.",
        "question_id": 838,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    "\"Alien\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit'",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "reference name refers to circuitRef; Marina Bay Street Circuit refers to circuits.name = 'Marina Bay Street Circuit'",
        "question": "What's the reference name of Marina Bay Street Circuit?",
        "question_id": 912,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Marina Bay Street Circuit\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(Id) FROM tags WHERE TagName = 'careers'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "tag specified as 'careers' refers to TagName = 'careers';",
        "question": "Count the number of posts with a tag specified as 'careers'.",
        "question_id": 696,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                47,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            48,
                            false
                        ],
                        null
                    ],
                    "\"careers\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT LastEditDate, LastEditorUserId FROM posts WHERE Title = 'Detecting a given face in a database of facial images'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "Title = 'Detecting a given face in a database of facial images';",
        "question": "Provide the last edit date and last edit user ID for the post \"Detecting a given face in a database of facial images\".",
        "question_id": 644,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                41,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                40,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            35,
                            false
                        ],
                        null
                    ],
                    "\"Detecting a given face in a database of facial images\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT id FROM Player_Attributes ORDER BY crossing DESC LIMIT 5",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "perform better in crossing actions refers to MAX(crossing)",
        "question": "Who are the top 5 players who perform better in crossing actions? Indicate their player id.",
        "question_id": 1024,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 5,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT T.bond_type FROM bond AS T WHERE T.bond_id = 'TR007_4_19'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "double bond refers to bond_type = ' = '; single bond refers to bond_type = '-'; triple bond refers to bond_type = '#';",
        "question": "What is the bond type of TR007_4_19?",
        "question_id": 301,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"TR007_4_19\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Title FROM posts ORDER BY ViewCount DESC LIMIT 5",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "Higher view count means the post has higher popularity; the highest popularity refers to MAX(ViewCount);",
        "question": "What are the titles of the top 5 posts with the highest popularity?",
        "question_id": 658,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 5,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            31,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT COUNT(major_name) FROM major WHERE college = 'College of Humanities and Social Sciences'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "",
        "question": "How many majors are there in \"College of Humanities and Social Sciences\"?",
        "question_id": 1345,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"College of Humanities and Social Sciences\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Website FROM schools WHERE County = 'San Joaquin' AND Virtual = 'P' AND Charter = 1",
        "db_id": "california_schools",
        "difficulty": "simple",
        "evidence": "Virtual = 'P' means partially virtual; Charter schools refers to Charter = 1 in the table schools",
        "question": "What are the websites for all the partially virtual chartered schools located in San Joaquin?",
        "question_id": 60,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                60,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ],
                    "\"San Joaquin\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            76,
                            false
                        ],
                        null
                    ],
                    "\"P\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            63,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT id FROM sets ORDER BY baseSetSize DESC LIMIT 1",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "the highest number of cards refers to MAX(baseSetSize); unique id refers to id",
        "question": "What is the unique id of the set that has the highest number of cards?",
        "question_id": 509,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            88,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                87,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT COUNT(major_name) FROM major WHERE college = 'College of Humanities and Social Sciences'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "",
        "question": "How many majors are there in \"College of Humanities and Social Sciences\"?",
        "question_id": 1345,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"College of Humanities and Social Sciences\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Title FROM posts WHERE Id = ( SELECT PostId FROM comments ORDER BY Score DESC LIMIT 1 )",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "highest score comment refers to Max(comments.Score)",
        "question": "What is the title for the post which got the highest score comment?",
        "question_id": 561,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            26,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": 1,
                        "orderBy": [
                            "desc",
                            [
                                [
                                    0,
                                    [
                                        0,
                                        7,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        ],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            6,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT cost FROM expense WHERE expense_description = 'Posters' AND expense_date = '2019-09-04'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "'Poster' is an event description; on 2019/9/14 refers to event_date = '2019-09-04'",
        "question": "What was the cost for the \"Posters\" on 2019/9/4?",
        "question_id": 1342,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            28,
                            false
                        ],
                        null
                    ],
                    "\"Posters\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            29,
                            false
                        ],
                        null
                    ],
                    "\"2019-09-04\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT superhero_name FROM superhero ORDER BY height_cm DESC LIMIT 1",
        "db_id": "superhero",
        "difficulty": "simple",
        "evidence": "who refers to superhero_name; tallest superhero refers to MAX(height_cm);",
        "question": "Who is the tallest superhero?",
        "question_id": 802,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT keyruneCode FROM sets WHERE code = 'PKHC'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "keyrune code refers to keyruneCode",
        "question": "List the keyrune code for the set whose code is 'PKHC'.",
        "question_id": 489,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                97,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            91,
                            false
                        ],
                        null
                    ],
                    "\"PKHC\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "are oversized refers to isOversized = 1; reprinted refers to isReprint = 1; printed for promotions refers to isPromo = 1",
        "question": "How many cards are oversized, reprinted, and printed for promotions?",
        "question_id": 420,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            28,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            30,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            29,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek'",
        "db_id": "superhero",
        "difficulty": "simple",
        "evidence": "Star Trek is the publisher_name;",
        "question": "Give the publisher ID of Star Trek.",
        "question_id": 745,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"Star Trek\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM superhero WHERE full_name LIKE 'John%'",
        "db_id": "superhero",
        "difficulty": "simple",
        "evidence": "have John as their first name refers to full_name LIKE 'John%';",
        "question": "What is the total number of superheroes that have John as their first name?",
        "question_id": 836,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"John%\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT name FROM foreign_data WHERE uuid IN ( SELECT uuid FROM cards WHERE types = 'Creature' AND layout = 'normal' AND borderColor = 'black' AND artist = 'Matthew D. Wilson' ) AND language = 'French'",
        "db_id": "card_games",
        "difficulty": "moderate",
        "evidence": "in French refers to language = 'French'; black border color refers to borderColor = 'black'",
        "question": "What is the foreign name of the card in French of type Creature, normal layout and black border color, by artist Matthew D. Wilson?",
        "question_id": 412,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                79,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            82,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            72,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        71,
                                        false
                                    ],
                                    null
                                ],
                                "\"Creature\"",
                                null
                            ],
                            "and",
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        37,
                                        false
                                    ],
                                    null
                                ],
                                "\"normal\"",
                                null
                            ],
                            "and",
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        5,
                                        false
                                    ],
                                    null
                                ],
                                "\"black\"",
                                null
                            ],
                            "and",
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        2,
                                        false
                                    ],
                                    null
                                ],
                                "\"Matthew D. Wilson\"",
                                null
                            ]
                        ]
                    },
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            77,
                            false
                        ],
                        null
                    ],
                    "\"French\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT country FROM circuits ORDER BY alt DESC LIMIT 1",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "highest altitude refers to max(alt)",
        "question": "In which country can I find the circuit with the highest altitude?",
        "question_id": 913,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT COUNT(*) FROM cards WHERE power = '*'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "infinite power refers to power = '*';",
        "question": "How many cards have infinite power?",
        "question_id": 356,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            55,
                            false
                        ],
                        null
                    ],
                    "\"*\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(Id) FROM users WHERE Location = 'New York'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "New York refers to Location;",
        "question": "How many users were from New York?",
        "question_id": 625,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                52,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            58,
                            false
                        ],
                        null
                    ],
                    "\"New York\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(T.molecule_id) FROM molecule AS T WHERE T.label = '+'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "label = '+' mean molecules are carcinogenic;",
        "question": "How many chemical compounds in the database are identified as carcinogenic.",
        "question_id": 291,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"+\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT artist FROM cards WHERE flavorName = 'Battra, Dark Destroyer'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "promotional name is \"Battra, Dark Destroyer\" refers to flavorName = 'Battra, Dark Destroyer'",
        "question": "Which artist designed the card whose promotional name is \"Battra, Dark Destroyer\"?",
        "question_id": 460,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ],
                    "\"Battra, Dark Destroyer\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT type FROM sets WHERE name LIKE '%FROM the Vault: Lore%'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "set \"From the Vault refers to name which contains 'From the Vault: Lore'; expansion type refers to type",
        "question": "For the set \"From the Vault: Lore\", what is its expansion type?",
        "question_id": 492,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                107,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            102,
                            false
                        ],
                        null
                    ],
                    "\"%FROM the Vault: Lore%\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(member_id) FROM member WHERE position = 'Member' AND t_shirt_size = 'X-Large'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "among the members refers to position = 'Member'; extra large t-shirt size refers to t_shirt_size = 'X-Large'",
        "question": "Among the members, how many of them have an extra large t-shirt size?",
        "question_id": 1424,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                40,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            44,
                            false
                        ],
                        null
                    ],
                    "\"Member\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ],
                    "\"X-Large\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT manaCost FROM cards WHERE availability = 'mtgo,paper' AND borderColor = 'black' AND frameVersion = 2003 AND layout = 'normal'",
        "db_id": "card_games",
        "difficulty": "moderate",
        "evidence": "available in paper and mtgo refers to availability = 'mtgo,paper'; frameVersion = 2003;borderColor = 'black'",
        "question": "What is the mana cost of cards with a normal layout, a 2003 frame version, with a black border color, and available in paper and mtgo?",
        "question_id": 397,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                41,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"mtgo,paper\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"black\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    2003.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            37,
                            false
                        ],
                        null
                    ],
                    "\"normal\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit'",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "reference name refers to circuitRef; Marina Bay Street Circuit refers to circuits.name = 'Marina Bay Street Circuit'",
        "question": "What's the reference name of Marina Bay Street Circuit?",
        "question_id": 912,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Marina Bay Street Circuit\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(player_api_id) FROM Player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'low'",
        "db_id": "european_football_2",
        "difficulty": "moderate",
        "evidence": "preferred foot when attacking was the left refers to preferred_foot = 'left'; players who would remain in his position when the team attacked refers to attacking_work_rate = 'low';",
        "question": "Among the players whose preferred foot was the left foot when attacking, how many of them would remain in his position when the team attacked?",
        "question_id": 1080,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"left\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "\"low\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT PostId, UserId FROM postHistory WHERE PostId IN ( SELECT Id FROM posts WHERE Score > 60 )",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "score more than 60 refers to Score > 60",
        "question": "List out all post ID with score more than 60 and list out all the user ID that created these post.",
        "question_id": 602,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    4
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            26,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                3,
                                [
                                    0,
                                    [
                                        0,
                                        30,
                                        false
                                    ],
                                    null
                                ],
                                60.0,
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(Id) FROM votes WHERE UserId = 58 AND CreationDate = '2010-07-19'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "user no. 58 refers to UserId = 58; on 2010/7/19 refers to CreationDate = '2010-07-19'",
        "question": "How many votes did the user No.58 take on 2010/7/19?",
        "question_id": 558,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                66,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            70,
                            false
                        ],
                        null
                    ],
                    58.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            69,
                            false
                        ],
                        null
                    ],
                    "\"2010-07-19\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit'",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "location coordinates refers to (lat, lng); Silverstone Circuit refers to circuits.name = 'Silverstone Circuit'",
        "question": "What's the location coordinates of Silverstone Circuit?",
        "question_id": 910,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Silverstone Circuit\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Text FROM comments WHERE CreationDate = '2010-07-19 19:16:14.0'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "detailed content of the comment refers to Text; created on 7/19/2010 7:16:14 PM refers to CreationDate = '2010-07-19 19:16:14.0'",
        "question": "State the detailed content of the comment which was created on 7/19/2010 7:25:47 PM.",
        "question_id": 608,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "\"2010-07-19 19:16:14.0\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(player_api_id) FROM Player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'low'",
        "db_id": "european_football_2",
        "difficulty": "moderate",
        "evidence": "preferred foot when attacking was the left refers to preferred_foot = 'left'; players who would remain in his position when the team attacked refers to attacking_work_rate = 'low';",
        "question": "Among the players whose preferred foot was the left foot when attacking, how many of them would remain in his position when the team attacked?",
        "question_id": 1080,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"left\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "\"low\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(*) FROM cards WHERE power = '*'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "infinite power refers to power = '*';",
        "question": "How many cards have infinite power?",
        "question_id": 356,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            55,
                            false
                        ],
                        null
                    ],
                    "\"*\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Text FROM comments WHERE PostId IN ( SELECT Id FROM posts WHERE ViewCount BETWEEN 100 AND 150 ) ORDER BY Score DESC LIMIT 1",
        "db_id": "codebase_community",
        "difficulty": "moderate",
        "evidence": "views ranging from 100 to 150 refers to ViewCount BETWEEN 100 and 150; comment with the highest score refers to Text where MAX(Score);",
        "question": "Among the posts with views ranging from 100 to 150, what is the comment with the highest score?",
        "question_id": 707,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    4
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            26,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                1,
                                [
                                    0,
                                    [
                                        0,
                                        31,
                                        false
                                    ],
                                    null
                                ],
                                100.0,
                                150.0
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM Player_Attributes WHERE overall_rating BETWEEN 60 AND 65 AND defensive_work_rate = 'low'",
        "db_id": "european_football_2",
        "difficulty": "moderate",
        "evidence": "overall_rating > = 60 AND overall_rating < 65; players whose going to be in all of your attack moves instead of defensing refers to defensive_work_rate = 'low';",
        "question": "Among the players with an overall rating between 60 to 65, how many players whose going to be in all of your attack moves instead of defensing?",
        "question_id": 1023,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    60.0,
                    65.0
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "\"low\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit'",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "reference name refers to circuitRef; Marina Bay Street Circuit refers to circuits.name = 'Marina Bay Street Circuit'",
        "question": "What's the reference name of Marina Bay Street Circuit?",
        "question_id": 912,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Marina Bay Street Circuit\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Age FROM users WHERE Reputation = ( SELECT MAX(Reputation) FROM users )",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "How old describes age; the most influential refers to user where MAX(Reputation);",
        "question": "How old is the most influential user?",
        "question_id": 661,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                64,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            53,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    6
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            53,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-25' GROUP BY CustomerID ORDER BY SUM(Price) DESC LIMIT 1",
        "db_id": "debit_card_specializing",
        "difficulty": "simple",
        "evidence": "'2012/8/25' can be represented by '2012-08-25'",
        "question": "Which customer paid the most in 2012/8/25?",
        "question_id": 1512,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    13,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            4,
                            18,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"2012-08-25\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT driverId FROM lapTimes WHERE lap = 1 ORDER BY time LIMIT 5",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "fastest time refers to Min(time);",
        "question": "List the driver's ID of the top five driver, by descending order, the fastest time during the first lap of the race.",
        "question_id": 976,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        8
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 5,
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            57,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                54,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            55,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "Carlo Jacobs is the full name; full name refers to first_name, last_name;",
        "question": "Tell the phone number of \"Carlo Jacobs\".",
        "question_id": 1346,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                46,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            41,
                            false
                        ],
                        null
                    ],
                    "\"Carlo\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            42,
                            false
                        ],
                        null
                    ],
                    "\"Jacobs\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(T.bond_id) FROM bond AS T WHERE T.bond_type = '#'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "triple type bonds refers to bond_type = '#'",
        "question": "How many triple type bonds are there?",
        "question_id": 202,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "\"#\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM Player_Attributes WHERE overall_rating BETWEEN 60 AND 65 AND defensive_work_rate = 'low'",
        "db_id": "european_football_2",
        "difficulty": "moderate",
        "evidence": "overall_rating > = 60 AND overall_rating < 65; players whose going to be in all of your attack moves instead of defensing refers to defensive_work_rate = 'low';",
        "question": "Among the players with an overall rating between 60 to 65, how many players whose going to be in all of your attack moves instead of defensing?",
        "question_id": 1023,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    60.0,
                    65.0
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "\"low\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT country FROM circuits ORDER BY alt DESC LIMIT 1",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "highest altitude refers to max(alt)",
        "question": "In which country can I find the circuit with the highest altitude?",
        "question_id": 913,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT surname FROM drivers WHERE nationality = 'Italian'",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "Italian refers to nationality = 'italian'",
        "question": "Please list the surnames of all the Italian drivers.",
        "question_id": 916,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    "\"Italian\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR151'",
        "db_id": "toxicology",
        "difficulty": "challenging",
        "evidence": "element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium",
        "question": "Which toxic element can be found in the molecule TR151?",
        "question_id": 290,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"TR151\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT hero_id FROM hero_attribute WHERE attribute_value = ( SELECT MIN(attribute_value) FROM hero_attribute )",
        "db_id": "superhero",
        "difficulty": "simple",
        "evidence": "lowest attribute value refers to MIN(attribute_value);",
        "question": "Give the hero ID of superhero with the lowest attribute value.",
        "question_id": 837,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    7
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            27,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT id FROM cards WHERE borderColor = 'black' GROUP BY id",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "border with black color refers to borderColor = 'black'",
        "question": "How many card border with black color ? List out the card id.",
        "question_id": 435,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"black\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT T.bond_type FROM bond AS T WHERE T.bond_id = 'TR007_4_19'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "double bond refers to bond_type = ' = '; single bond refers to bond_type = '-'; triple bond refers to bond_type = '#';",
        "question": "What is the bond type of TR007_4_19?",
        "question_id": 301,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"TR007_4_19\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DISTINCT availability FROM cards WHERE artist = 'Aleksi Briclot' AND isTextless = 1",
        "db_id": "card_games",
        "difficulty": "moderate",
        "evidence": "created by Aleksi Briclot refers to artist = 'Aleksi Briclot'; doesn't have a text box refers to isTextless = 1; available printing types refers to availability",
        "question": "What are the available printing types of the cards that doesn't have a text box created by Aleksi Briclot?",
        "question_id": 508,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Aleksi Briclot\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            34,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(*) FROM cards WHERE power = '*'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "infinite power refers to power = '*';",
        "question": "How many cards have infinite power?",
        "question_id": 356,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            55,
                            false
                        ],
                        null
                    ],
                    "\"*\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT name FROM races WHERE year = 2017 AND name NOT IN ( SELECT name FROM races WHERE year = 2000 )",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "not hosted means not in;",
        "question": "Name the races in year 2017 that are not hosted in year 2000.",
        "question_id": 887,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    2017.0,
                    null
                ],
                "and",
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            30,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    4
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            30,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        27,
                                        false
                                    ],
                                    null
                                ],
                                2000.0,
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DISTINCT ID FROM Laboratory WHERE Date BETWEEN '1987-07-06' AND '1996-01-31' AND GPT > 30 AND ALB < 4",
        "db_id": "thrombosis_prediction",
        "difficulty": "moderate",
        "evidence": "examined between 1987/7/6 and 1996/1/31 refers to Date BETWEEN '1987-07-06' AND '1996-01-31'; GPT level greater than 30 refers to GPT > 30; ALB level less than 4 ALB < 4",
        "question": "How many patients who were examined between 1987/7/6 and 1996/1/31 had a GPT level greater than 30 and an ALB level less than 4? List them by their ID.",
        "question_id": 1187,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    "\"1987-07-06\"",
                    "\"1996-01-31\""
                ],
                "and",
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            24,
                            false
                        ],
                        null
                    ],
                    30.0,
                    null
                ],
                "and",
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            28,
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(Id) FROM tags WHERE TagName = 'careers'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "tag specified as 'careers' refers to TagName = 'careers';",
        "question": "Count the number of posts with a tag specified as 'careers'.",
        "question_id": 696,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                47,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            48,
                            false
                        ],
                        null
                    ],
                    "\"careers\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT T.molecule_id FROM molecule AS T WHERE T.label = '-'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "label = '-' means molecules are non-carcinogenic",
        "question": "List down the molecule id for non carcinogenic molecules.",
        "question_id": 265,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"-\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(School) FROM schools WHERE DOC = 52 AND Charter = 1 AND City = 'Hickman'",
        "db_id": "california_schools",
        "difficulty": "simple",
        "evidence": "Elementary School District refers to DOC = 52; Chartered schools refer to Charter = 1 in the table schools",
        "question": "How many chartered schools located in the city of Hickman are owned by the Elementary School District?",
        "question_id": 61,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                47,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            66,
                            false
                        ],
                        null
                    ],
                    52.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            63,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            50,
                            false
                        ],
                        null
                    ],
                    "\"Hickman\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT MAX(spent) FROM budget",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "highest amount of budget spend refers to MAX(spent)",
        "question": "What is the highest amount of budget spend for an event?",
        "question_id": 1378,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT COUNT(T.atom_id) FROM atom AS T WHERE T.element = 'c' OR T.element = 'h'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "consisting of element carbon and hydrogen refers to element in('c', 'h')",
        "question": "Calculate the total atoms consisting of the element carbon and hydrogen.",
        "question_id": 256,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"c\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"h\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT duration FROM pitStops ORDER BY duration DESC LIMIT 1",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "longest time spent at pitstop refers to MAX(duration)",
        "question": "What was the longest time a driver had ever spent at a pit stop?",
        "question_id": 1005,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        9
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            64,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                64,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT name FROM cards ORDER BY faceConvertedManaCost LIMIT 1",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "more converted mana for the face refers to Max(faceConvertedManaCost);",
        "question": "List the card names with value that cost more converted mana for the face.",
        "question_id": 342,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                49,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT id FROM Player_Attributes WHERE preferred_foot = 'right' ORDER BY potential DESC LIMIT 5",
        "db_id": "european_football_2",
        "difficulty": "moderate",
        "evidence": "lowest potential players refers to MIN(potential); prefer to use the right foot when attacking refers to preferred_foot = 'right'",
        "question": "Please provide top five football players' IDs who are among the lowest potential players and prefer to use the right foot when attacking.",
        "question_id": 1135,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 5,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"right\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM cards WHERE originalType = 'Summon - Angel' AND subtypes != 'Angel'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "subtype other than Angel refers to subtypes is not 'Angel';",
        "question": "How many cards with original type of \"Summon - Angel\" have subtype other than \"Angel\"?",
        "question_id": 377,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            53,
                            false
                        ],
                        null
                    ],
                    "\"Summon - Angel\"",
                    null
                ],
                "and",
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            65,
                            false
                        ],
                        null
                    ],
                    "\"Angel\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT manaCost FROM cards WHERE availability = 'mtgo,paper' AND borderColor = 'black' AND frameVersion = 2003 AND layout = 'normal'",
        "db_id": "card_games",
        "difficulty": "moderate",
        "evidence": "available in paper and mtgo refers to availability = 'mtgo,paper'; frameVersion = 2003;borderColor = 'black'",
        "question": "What is the mana cost of cards with a normal layout, a 2003 frame version, with a black border color, and available in paper and mtgo?",
        "question_id": 397,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                41,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"mtgo,paper\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"black\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    2003.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            37,
                            false
                        ],
                        null
                    ],
                    "\"normal\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(Id) FROM users WHERE Location = 'New York'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "New York refers to Location;",
        "question": "How many users were from New York?",
        "question_id": 625,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                52,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            58,
                            false
                        ],
                        null
                    ],
                    "\"New York\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT player_name FROM player ORDER BY height ASC LIMIT 1",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "shortest height refers to MIN(height);",
        "question": "Which football player has the shortest height?",
        "question_id": 1069,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            48,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                45,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR004'",
        "db_id": "toxicology",
        "difficulty": "challenging",
        "evidence": "TR004 is the molecule id;",
        "question": "List all the elements of the toxicology of the molecule \"TR004\".",
        "question_id": 240,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"TR004\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT cost FROM expense WHERE expense_description = 'Posters' AND expense_date = '2019-09-04'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "'Poster' is an event description; on 2019/9/14 refers to event_date = '2019-09-04'",
        "question": "What was the cost for the \"Posters\" on 2019/9/4?",
        "question_id": 1342,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            28,
                            false
                        ],
                        null
                    ],
                    "\"Posters\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            29,
                            false
                        ],
                        null
                    ],
                    "\"2019-09-04\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT name FROM cards ORDER BY faceConvertedManaCost LIMIT 1",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "more converted mana for the face refers to Max(faceConvertedManaCost);",
        "question": "List the card names with value that cost more converted mana for the face.",
        "question_id": 342,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                49,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT id FROM sets ORDER BY baseSetSize DESC LIMIT 1",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "the highest number of cards refers to MAX(baseSetSize); unique id refers to id",
        "question": "What is the unique id of the set that has the highest number of cards?",
        "question_id": 509,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            88,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                87,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR151'",
        "db_id": "toxicology",
        "difficulty": "challenging",
        "evidence": "element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium",
        "question": "Which toxic element can be found in the molecule TR151?",
        "question_id": 290,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"TR151\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT name FROM races WHERE year = 2017 AND name NOT IN ( SELECT name FROM races WHERE year = 2000 )",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "not hosted means not in;",
        "question": "Name the races in year 2017 that are not hosted in year 2000.",
        "question_id": 887,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    2017.0,
                    null
                ],
                "and",
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            30,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    4
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            30,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        27,
                                        false
                                    ],
                                    null
                                ],
                                2000.0,
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT AVG(LDH) FROM Laboratory WHERE LDH < 500",
        "db_id": "thrombosis_prediction",
        "difficulty": "simple",
        "evidence": "average index of the lactate dehydrogenase (LDH) refers to AVG(LDH); (LDH) within the normal range refers to LDH < 500",
        "question": "What is the average index of the lactate dehydrogenase (LDH) for all patients with lactate dehydrogenase (LDH) within the normal range.",
        "question_id": 1210,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            25,
                            false
                        ],
                        null
                    ],
                    500.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DisplayName, Age FROM users WHERE Views = ( SELECT MAX(Views) FROM users )",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "the highest in views refers to MAX(Views);",
        "question": "What are the display names and ages of user who got the highest in views?",
        "question_id": 643,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                55,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                64,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            60,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    6
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            60,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Symptoms FROM Examination WHERE Diagnosis = 'SLE' GROUP BY Symptoms ORDER BY COUNT(Symptoms) DESC LIMIT 1",
        "db_id": "thrombosis_prediction",
        "difficulty": "simple",
        "evidence": "the most common sign refers to MAX(symptoms); 'SLE' refers to diagnosis",
        "question": "What is the most common sign of patients with SLE disease?",
        "question_id": 1196,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    12,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            12,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "\"SLE\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(*) FROM cards WHERE power = '*'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "infinite power refers to power = '*';",
        "question": "How many cards have infinite power?",
        "question_id": 356,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            55,
                            false
                        ],
                        null
                    ],
                    "\"*\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT driverRef FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton'",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "reference name refers to driverRef",
        "question": "What's Lewis Hamilton's reference name?",
        "question_id": 918,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    "\"Lewis\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ],
                    "\"Hamilton\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT language FROM set_translations WHERE id IN ( SELECT id FROM cards WHERE name = 'Angel of Mercy' )",
        "db_id": "card_games",
        "difficulty": "moderate",
        "evidence": "Angel of Mercy' is the name of card;",
        "question": "cards are not directly linked to language but through table 'set'. you need to add set in covered table & rephrase your question\nWhat are the languages available for the set that card 'Angel of Mercy' is in?",
        "question_id": 360,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                109,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            108,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            1,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        49,
                                        false
                                    ],
                                    null
                                ],
                                "\"Angel of Mercy\"",
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR000' ORDER BY T.element LIMIT 3",
        "db_id": "toxicology",
        "difficulty": "challenging",
        "evidence": "TR000 is the molecule id;",
        "question": "Please list top three elements of the toxicology of the molecule TR000 in alphabetical order.",
        "question_id": 220,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 3,
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"TR000\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(Id) FROM users WHERE Upvotes > 100 AND Downvotes > 1",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "more than 100 upvotes refers to Upvotes > 100; more than 1 downvotes refers to Downvotes > 1",
        "question": "Among the users who have more than 100 upvotes, how many of them have more then 1 downvotes?",
        "question_id": 535,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                52,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            61,
                            false
                        ],
                        null
                    ],
                    100.0,
                    null
                ],
                "and",
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            62,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT id, language FROM set_translations WHERE id = ( SELECT id FROM cards WHERE convertedManaCost = 5 ) AND setCode = '10E'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "set 10E refers to setCode = '10E'; converted mana of 5 refers to convertedManaCost = 5;",
        "question": "What are the cards in set 10E with converted mana of 5 have translation and what are the languages?",
        "question_id": 388,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                108,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                109,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            108,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            1,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        11,
                                        false
                                    ],
                                    null
                                ],
                                5.0,
                                null
                            ]
                        ]
                    },
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            110,
                            false
                        ],
                        null
                    ],
                    "\"10E\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(T.molecule_id) FROM molecule AS T WHERE T.molecule_id BETWEEN 'TR000' AND 'TR030' AND T.label = '+'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "label = '+' mean molecules are carcinogenic",
        "question": "Calculate the total carcinogenic molecules for molecule id from TR000 to TR030.",
        "question_id": 266,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"TR000\"",
                    "\"TR030\""
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"+\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT mcmId FROM sets WHERE code = 'SS2'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "magic card market id refers to mcmId",
        "question": "For the set which had 'SS2' as the code, what is its magic card market id?",
        "question_id": 490,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                98,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            91,
                            false
                        ],
                        null
                    ],
                    "\"SS2\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT setCode FROM set_translations WHERE language = 'Spanish'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "Spanish refer to language; set code refers to setCode",
        "question": "Lists the set code of all cards translated into Spanish.",
        "question_id": 400,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                110,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            109,
                            false
                        ],
                        null
                    ],
                    "\"Spanish\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT T4.amount FROM card AS T1 JOIN disp AS T2 ON T1.disp_id = T2.disp_id JOIN account AS T3 on T2.account_id = T3.account_id JOIN trans AS T4 on T3.account_id = T4.account_id WHERE T1.issued = '1996-10-21' ORDER BY T4.amount DESC LIMIT 1",
        "db_id": "financial",
        "difficulty": "simple",
        "evidence": "",
        "question": "What is the biggest amount of transaction that the client whose card was opened in 1996/10/21 made?",
        "question_id": 106,
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            47,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            51,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                51,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "\"1996-10-21\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT language FROM set_translations WHERE id IN ( SELECT id FROM cards WHERE name = 'Angel of Mercy' )",
        "db_id": "card_games",
        "difficulty": "moderate",
        "evidence": "Angel of Mercy' is the name of card;",
        "question": "cards are not directly linked to language but through table 'set'. you need to add set in covered table & rephrase your question\nWhat are the languages available for the set that card 'Angel of Mercy' is in?",
        "question_id": 360,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                109,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            108,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            1,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        49,
                                        false
                                    ],
                                    null
                                ],
                                "\"Angel of Mercy\"",
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT T.element FROM atom AS T WHERE T.atom_id = 'TR000_1'",
        "db_id": "toxicology",
        "difficulty": "challenging",
        "evidence": "atom with ID refers to atom_id; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium",
        "question": "What is the element of toxicology for the atom with the ID of TR000_1?",
        "question_id": 322,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    "\"TR000_1\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT type FROM sets WHERE name LIKE '%FROM the Vault: Lore%'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "set \"From the Vault refers to name which contains 'From the Vault: Lore'; expansion type refers to type",
        "question": "For the set \"From the Vault: Lore\", what is its expansion type?",
        "question_id": 492,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                107,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            102,
                            false
                        ],
                        null
                    ],
                    "\"%FROM the Vault: Lore%\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT year FROM races WHERE name = 'Singapore Grand Prix' ORDER BY year ASC LIMIT 1",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "the first race refers to race happened in min(year);",
        "question": "Which year was the first Singapore Grand Prix?",
        "question_id": 882,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                27,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            30,
                            false
                        ],
                        null
                    ],
                    "\"Singapore Grand Prix\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM Player_Attributes WHERE overall_rating BETWEEN 60 AND 65 AND defensive_work_rate = 'low'",
        "db_id": "european_football_2",
        "difficulty": "moderate",
        "evidence": "overall_rating > = 60 AND overall_rating < 65; players whose going to be in all of your attack moves instead of defensing refers to defensive_work_rate = 'low';",
        "question": "Among the players with an overall rating between 60 to 65, how many players whose going to be in all of your attack moves instead of defensing?",
        "question_id": 1023,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    60.0,
                    65.0
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "\"low\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(T.molecule_id) FROM molecule AS T WHERE T.molecule_id BETWEEN 'TR000' AND 'TR030' AND T.label = '+'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "label = '+' mean molecules are carcinogenic",
        "question": "Calculate the total carcinogenic molecules for molecule id from TR000 to TR030.",
        "question_id": 266,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"TR000\"",
                    "\"TR030\""
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"+\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM Player WHERE weight > 170 AND player_name LIKE 'Adam%'",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "team names refers to team_long_name; speed class refers to buildUpPlaySpeedClass; buildUpPlaySpeedClass = 'Fast';",
        "question": "How many players whose first names are Adam and weigh more than 170?",
        "question_id": 1061,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                43,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            49,
                            false
                        ],
                        null
                    ],
                    170.0,
                    null
                ],
                "and",
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ],
                    "\"Adam%\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR151'",
        "db_id": "toxicology",
        "difficulty": "challenging",
        "evidence": "element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium",
        "question": "Which toxic element can be found in the molecule TR151?",
        "question_id": 290,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"TR151\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM users WHERE Age BETWEEN 19 AND 65",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "adult refers to user where Age BETWEEN 19 and 65;",
        "question": "How many users were adult?",
        "question_id": 627,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                52,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            64,
                            false
                        ],
                        null
                    ],
                    19.0,
                    65.0
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(city) FROM zip_code WHERE county = 'Orange County' AND state = 'Virginia'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "Orange County is the county name, Virginia is the state name",
        "question": "How many cities are there in Orange County, Virginia?",
        "question_id": 1362,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"Orange County\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ],
                    "\"Virginia\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT name FROM cards ORDER BY faceConvertedManaCost LIMIT 1",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "more converted mana for the face refers to Max(faceConvertedManaCost);",
        "question": "List the card names with value that cost more converted mana for the face.",
        "question_id": 342,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                49,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT COUNT(School) FROM schools WHERE DOC = 52 AND Charter = 1 AND City = 'Hickman'",
        "db_id": "california_schools",
        "difficulty": "simple",
        "evidence": "Elementary School District refers to DOC = 52; Chartered schools refer to Charter = 1 in the table schools",
        "question": "How many chartered schools located in the city of Hickman are owned by the Elementary School District?",
        "question_id": 61,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                47,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            66,
                            false
                        ],
                        null
                    ],
                    52.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            63,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            50,
                            false
                        ],
                        null
                    ],
                    "\"Hickman\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Symptoms FROM Examination WHERE Diagnosis = 'SLE' GROUP BY Symptoms ORDER BY COUNT(Symptoms) DESC LIMIT 1",
        "db_id": "thrombosis_prediction",
        "difficulty": "simple",
        "evidence": "the most common sign refers to MAX(symptoms); 'SLE' refers to diagnosis",
        "question": "What is the most common sign of patients with SLE disease?",
        "question_id": 1196,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    12,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            12,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "\"SLE\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT id FROM sets WHERE type = 'commander' ORDER BY totalSetSize DESC LIMIT 1",
        "db_id": "card_games",
        "difficulty": "challenging",
        "evidence": "expansion type refers to type where type = 'commander'; totalSetSize: The total number of cards in the set, including promotional and related supplemental products but excluding Alchemy modifications; highest total number of cards refers to MAX(totalSetSize)",
        "question": "Among the sets whose expansion type is Commander, which set has the highest total number of cards including promotional and related supplemental products but excluding Alchemy modifications? Indicate the id of the set.",
        "question_id": 513,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            106,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                87,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            107,
                            false
                        ],
                        null
                    ],
                    "\"commander\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(Id) FROM tags WHERE TagName = 'careers'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "tag specified as 'careers' refers to TagName = 'careers';",
        "question": "Count the number of posts with a tag specified as 'careers'.",
        "question_id": 696,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                47,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            48,
                            false
                        ],
                        null
                    ],
                    "\"careers\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(DISTINCT T.molecule_id) FROM bond AS T WHERE T.bond_type = '#'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "triple bond refers to bond_type = '#';",
        "question": "How many molecules have a triple bond type?",
        "question_id": 238,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                5,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "\"#\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM superhero WHERE full_name LIKE 'John%'",
        "db_id": "superhero",
        "difficulty": "simple",
        "evidence": "have John as their first name refers to full_name LIKE 'John%';",
        "question": "What is the total number of superheroes that have John as their first name?",
        "question_id": 836,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"John%\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "Carlo Jacobs is the full name; full name refers to first_name, last_name;",
        "question": "Tell the phone number of \"Carlo Jacobs\".",
        "question_id": 1346,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                46,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            41,
                            false
                        ],
                        null
                    ],
                    "\"Carlo\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            42,
                            false
                        ],
                        null
                    ],
                    "\"Jacobs\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler'",
        "db_id": "superhero",
        "difficulty": "simple",
        "evidence": "name the superhero refers to superhero_name; Charles Chandler is the full name of superhero;",
        "question": "Name the superhero, otherwise known as Charles Chandler.",
        "question_id": 833,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"Charles Chandler\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT MAX(spent) FROM budget",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "highest amount of budget spend refers to MAX(spent)",
        "question": "What is the highest amount of budget spend for an event?",
        "question_id": 1378,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT Id FROM users WHERE Reputation = ( SELECT MAX(Reputation) FROM users )",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "highest reputation refers to Max(Reputation)",
        "question": "Which user ID has the highest reputation?",
        "question_id": 589,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                52,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            53,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    6
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            53,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(t1.id) FROM Player_Attributes AS t1 WHERE t1.preferred_foot = 'left' AND t1.crossing = ( SELECT MAX(crossing) FROM Player_Attributes)",
        "db_id": "european_football_2",
        "difficulty": "moderate",
        "evidence": "highest potential score for crossing refers to MAX(crossing); preferred to use their left foots while attacking refers to preferred_foot = 'left'",
        "question": "How many players had the highest potential score for crossing that preferred to use their left foots while attacking?",
        "question_id": 1136,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"left\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            10,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT PostId, UserId FROM postHistory WHERE PostId IN ( SELECT Id FROM posts WHERE Score > 60 )",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "score more than 60 refers to Score > 60",
        "question": "List out all post ID with score more than 60 and list out all the user ID that created these post.",
        "question_id": 602,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    4
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            26,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                3,
                                [
                                    0,
                                    [
                                        0,
                                        30,
                                        false
                                    ],
                                    null
                                ],
                                60.0,
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM users WHERE Age BETWEEN 19 AND 65",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "adult refers to user where Age BETWEEN 19 and 65;",
        "question": "How many users were adult?",
        "question_id": 627,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                52,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            64,
                            false
                        ],
                        null
                    ],
                    19.0,
                    65.0
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(T.bond_id) FROM bond AS T WHERE T.bond_type = '#'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "triple type bonds refers to bond_type = '#'",
        "question": "How many triple type bonds are there?",
        "question_id": 202,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "\"#\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT name, date FROM races WHERE year = 1999 ORDER BY round DESC LIMIT 1",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "the last round refers to max(round);",
        "question": "State the name and date of the last round of race in year 1999.",
        "question_id": 885,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            28,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                31,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    1999.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Title FROM posts WHERE Id = ( SELECT PostId FROM comments ORDER BY Score DESC LIMIT 1 )",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "highest score comment refers to Max(comments.Score)",
        "question": "What is the title for the post which got the highest score comment?",
        "question_id": 561,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            26,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": 1,
                        "orderBy": [
                            "desc",
                            [
                                [
                                    0,
                                    [
                                        0,
                                        7,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        ],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            6,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT name FROM sets WHERE code IN ( SELECT setCode FROM set_translations WHERE language = 'Korean' AND language NOT LIKE '%Japanese%' )",
        "db_id": "card_games",
        "difficulty": "moderate",
        "evidence": "names of sets refers to name; doesn't have Japanese translation refers to language not like '%Japanese%'; have Korean translation refers to language = 'Korean'",
        "question": "Find and list the names of sets which doesn't have Japanese translation but have Korean translation.",
        "question_id": 529,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                102,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            91,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    4
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            110,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        109,
                                        false
                                    ],
                                    null
                                ],
                                "\"Korean\"",
                                null
                            ],
                            "and",
                            [
                                true,
                                9,
                                [
                                    0,
                                    [
                                        0,
                                        109,
                                        false
                                    ],
                                    null
                                ],
                                "\"%Japanese%\"",
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(Id) FROM comments WHERE UserId = 13 AND Score < 60",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "negative comments refer to Score < 60;",
        "question": "How many negative comments were given by user ID 13?",
        "question_id": 645,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    13.0,
                    null
                ],
                "and",
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    60.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Phone, Ext, School FROM schools WHERE Zip = '95203-3704'",
        "db_id": "california_schools",
        "difficulty": "simple",
        "evidence": "",
        "question": "What is the phone number and extension number for the school with the zip code 95203-3704? Indicate the school's name.",
        "question_id": 58,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                58,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                59,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                47,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            51,
                            false
                        ],
                        null
                    ],
                    "\"95203-3704\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(T.bond_id) FROM bond AS T WHERE T.bond_type = '#'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "triple type bonds refers to bond_type = '#'",
        "question": "How many triple type bonds are there?",
        "question_id": 202,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "\"#\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM Player WHERE weight > 170 AND player_name LIKE 'Adam%'",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "team names refers to team_long_name; speed class refers to buildUpPlaySpeedClass; buildUpPlaySpeedClass = 'Fast';",
        "question": "How many players whose first names are Adam and weigh more than 170?",
        "question_id": 1061,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                43,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            49,
                            false
                        ],
                        null
                    ],
                    170.0,
                    null
                ],
                "and",
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ],
                    "\"Adam%\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT CommentCount, AnswerCount FROM posts WHERE Title = 'Clustering 1D data'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "",
        "question": "How many comments and answers were left by the users on the post with the title 'Clustering 1D data'?",
        "question_id": 698,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                38,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            35,
                            false
                        ],
                        null
                    ],
                    "\"Clustering 1D data\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT country FROM circuits ORDER BY alt DESC LIMIT 1",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "highest altitude refers to max(alt)",
        "question": "In which country can I find the circuit with the highest altitude?",
        "question_id": 913,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT COUNT(id) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "are oversized refers to isOversized = 1; reprinted refers to isReprint = 1; printed for promotions refers to isPromo = 1",
        "question": "How many cards are oversized, reprinted, and printed for promotions?",
        "question_id": 420,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            28,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            30,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            29,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT superhero_name FROM superhero ORDER BY height_cm DESC LIMIT 1",
        "db_id": "superhero",
        "difficulty": "simple",
        "evidence": "who refers to superhero_name; tallest superhero refers to MAX(height_cm);",
        "question": "Who is the tallest superhero?",
        "question_id": 802,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT COUNT(Id) FROM tags WHERE TagName = 'careers'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "tag specified as 'careers' refers to TagName = 'careers';",
        "question": "Count the number of posts with a tag specified as 'careers'.",
        "question_id": 696,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                47,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            48,
                            false
                        ],
                        null
                    ],
                    "\"careers\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT source FROM income WHERE date_received BETWEEN '2019-09-01' and '2019-09-30' ORDER BY source DESC LIMIT 1",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "top source funds refers to MAX(source); September 2019 means date_received BETWEEN '2019-09-01' and '2019-09-30'",
        "question": "Indicate the top source of funds received in September 2019 based on their amount.",
        "question_id": 1392,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            37,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            35,
                            false
                        ],
                        null
                    ],
                    "\"2019-09-01\"",
                    "\"2019-09-30\""
                ]
            ]
        }
    },
    {
        "query": "SELECT year FROM races GROUP BY year ORDER BY COUNT(round) DESC LIMIT 1",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "the most number of races refers to max(round);",
        "question": "Which year has the most number of races?",
        "question_id": 886,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    27,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            28,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                27,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT COUNT(id) FROM Player WHERE weight > 170 AND player_name LIKE 'Adam%'",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "team names refers to team_long_name; speed class refers to buildUpPlaySpeedClass; buildUpPlaySpeedClass = 'Fast';",
        "question": "How many players whose first names are Adam and weigh more than 170?",
        "question_id": 1061,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                43,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            49,
                            false
                        ],
                        null
                    ],
                    170.0,
                    null
                ],
                "and",
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ],
                    "\"Adam%\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT name FROM sets WHERE code = 'ALL'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "",
        "question": "List out the set name of the set code \"ALL\".",
        "question_id": 439,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                102,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            91,
                            false
                        ],
                        null
                    ],
                    "\"ALL\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT MAX(spent) FROM budget",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "highest amount of budget spend refers to MAX(spent)",
        "question": "What is the highest amount of budget spend for an event?",
        "question_id": 1378,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT surname FROM drivers WHERE nationality = 'Italian'",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "Italian refers to nationality = 'italian'",
        "question": "Please list the surnames of all the Italian drivers.",
        "question_id": 916,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    "\"Italian\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(t1.id) FROM Player_Attributes AS t1 WHERE t1.preferred_foot = 'left' AND t1.crossing = ( SELECT MAX(crossing) FROM Player_Attributes)",
        "db_id": "european_football_2",
        "difficulty": "moderate",
        "evidence": "highest potential score for crossing refers to MAX(crossing); preferred to use their left foots while attacking refers to preferred_foot = 'left'",
        "question": "How many players had the highest potential score for crossing that preferred to use their left foots while attacking?",
        "question_id": 1136,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"left\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            10,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM Player WHERE birthday > '1990' AND player_name LIKE 'Aaron%'",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "first name \"Aaron\" refers to player_name LIKE 'Aaron%'; born after the 1990s refers to birthday > '1990'",
        "question": "How many football players born after the 1990s have the first name \"Aaron\"?",
        "question_id": 1133,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                43,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            47,
                            false
                        ],
                        null
                    ],
                    "\"1990\"",
                    null
                ],
                "and",
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ],
                    "\"Aaron%\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT sprint_speed, agility, acceleration FROM Player_Attributes WHERE player_api_id IN ( SELECT player_api_id FROM Player WHERE player_name = 'Alexis Blin' )",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "Alexis Blin's refers to player_name = 'Alexis Blin'",
        "question": "What are Alexis Blin's sprint speed, agility, and acceleration scores?",
        "question_id": 1140,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            44,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        45,
                                        false
                                    ],
                                    null
                                ],
                                "\"Alexis Blin\"",
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM cards WHERE toughness = 99",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "",
        "question": "How many cards are there with toughness of 99?",
        "question_id": 372,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            69,
                            false
                        ],
                        null
                    ],
                    99.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'",
        "db_id": "codebase_community",
        "difficulty": "moderate",
        "evidence": "\"Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer\" is the Title of post; views refers to ViewCount",
        "question": "How many views did the post titled 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer' get?",
        "question_id": 572,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                31,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            35,
                            false
                        ],
                        null
                    ],
                    "\"Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT name FROM sets WHERE code = 'ALL'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "",
        "question": "List out the set name of the set code \"ALL\".",
        "question_id": 439,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                102,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            91,
                            false
                        ],
                        null
                    ],
                    "\"ALL\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'",
        "db_id": "codebase_community",
        "difficulty": "moderate",
        "evidence": "\"Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer\" is the Title of post; views refers to ViewCount",
        "question": "How many views did the post titled 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer' get?",
        "question_id": 572,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                31,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            35,
                            false
                        ],
                        null
                    ],
                    "\"Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR004'",
        "db_id": "toxicology",
        "difficulty": "challenging",
        "evidence": "TR004 is the molecule id;",
        "question": "List all the elements of the toxicology of the molecule \"TR004\".",
        "question_id": 240,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"TR004\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Text FROM comments WHERE PostId IN ( SELECT Id FROM posts WHERE ViewCount BETWEEN 100 AND 150 ) ORDER BY Score DESC LIMIT 1",
        "db_id": "codebase_community",
        "difficulty": "moderate",
        "evidence": "views ranging from 100 to 150 refers to ViewCount BETWEEN 100 and 150; comment with the highest score refers to Text where MAX(Score);",
        "question": "Among the posts with views ranging from 100 to 150, what is the comment with the highest score?",
        "question_id": 707,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    4
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            26,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                1,
                                [
                                    0,
                                    [
                                        0,
                                        31,
                                        false
                                    ],
                                    null
                                ],
                                100.0,
                                150.0
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT cost FROM expense WHERE expense_description = 'Posters' AND expense_date = '2019-09-04'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "'Poster' is an event description; on 2019/9/14 refers to event_date = '2019-09-04'",
        "question": "What was the cost for the \"Posters\" on 2019/9/4?",
        "question_id": 1342,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            28,
                            false
                        ],
                        null
                    ],
                    "\"Posters\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            29,
                            false
                        ],
                        null
                    ],
                    "\"2019-09-04\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT name FROM sets WHERE code IN ( SELECT setCode FROM set_translations WHERE language = 'Korean' AND language NOT LIKE '%Japanese%' )",
        "db_id": "card_games",
        "difficulty": "moderate",
        "evidence": "names of sets refers to name; doesn't have Japanese translation refers to language not like '%Japanese%'; have Korean translation refers to language = 'Korean'",
        "question": "Find and list the names of sets which doesn't have Japanese translation but have Korean translation.",
        "question_id": 529,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                102,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            91,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    4
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            110,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        109,
                                        false
                                    ],
                                    null
                                ],
                                "\"Korean\"",
                                null
                            ],
                            "and",
                            [
                                true,
                                9,
                                [
                                    0,
                                    [
                                        0,
                                        109,
                                        false
                                    ],
                                    null
                                ],
                                "\"%Japanese%\"",
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Phone, Ext, School FROM schools WHERE Zip = '95203-3704'",
        "db_id": "california_schools",
        "difficulty": "simple",
        "evidence": "",
        "question": "What is the phone number and extension number for the school with the zip code 95203-3704? Indicate the school's name.",
        "question_id": 58,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                58,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                59,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                47,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            51,
                            false
                        ],
                        null
                    ],
                    "\"95203-3704\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT name FROM cards ORDER BY faceConvertedManaCost LIMIT 1",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "more converted mana for the face refers to Max(faceConvertedManaCost);",
        "question": "List the card names with value that cost more converted mana for the face.",
        "question_id": 342,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                49,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT COUNT(Id) FROM users WHERE Location = 'New York'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "New York refers to Location;",
        "question": "How many users were from New York?",
        "question_id": 625,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                52,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            58,
                            false
                        ],
                        null
                    ],
                    "\"New York\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT PostId, UserId FROM postHistory WHERE PostId IN ( SELECT Id FROM posts WHERE Score > 60 )",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "score more than 60 refers to Score > 60",
        "question": "List out all post ID with score more than 60 and list out all the user ID that created these post.",
        "question_id": 602,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    4
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            26,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                3,
                                [
                                    0,
                                    [
                                        0,
                                        30,
                                        false
                                    ],
                                    null
                                ],
                                60.0,
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Symptoms FROM Examination WHERE Diagnosis = 'SLE' GROUP BY Symptoms ORDER BY COUNT(Symptoms) DESC LIMIT 1",
        "db_id": "thrombosis_prediction",
        "difficulty": "simple",
        "evidence": "the most common sign refers to MAX(symptoms); 'SLE' refers to diagnosis",
        "question": "What is the most common sign of patients with SLE disease?",
        "question_id": 1196,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    12,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            12,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "\"SLE\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR000' ORDER BY T.element LIMIT 3",
        "db_id": "toxicology",
        "difficulty": "challenging",
        "evidence": "TR000 is the molecule id;",
        "question": "Please list top three elements of the toxicology of the molecule TR000 in alphabetical order.",
        "question_id": 220,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 3,
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"TR000\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT artist FROM cards WHERE flavorName = 'Battra, Dark Destroyer'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "promotional name is \"Battra, Dark Destroyer\" refers to flavorName = 'Battra, Dark Destroyer'",
        "question": "Which artist designed the card whose promotional name is \"Battra, Dark Destroyer\"?",
        "question_id": 460,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ],
                    "\"Battra, Dark Destroyer\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT setCode FROM set_translations WHERE language = 'Spanish'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "Spanish refer to language; set code refers to setCode",
        "question": "Lists the set code of all cards translated into Spanish.",
        "question_id": 400,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                110,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            109,
                            false
                        ],
                        null
                    ],
                    "\"Spanish\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT CreationDate FROM users WHERE DisplayName = 'IrishStat'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "DisplayName = 'IrishStat'; when create his or her account refers to CreationDate;",
        "question": "When did the user known as 'IrishStat' create his or her account?",
        "question_id": 699,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                54,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            55,
                            false
                        ],
                        null
                    ],
                    "\"IrishStat\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DISTINCT artist FROM cards WHERE availability = 'arena' AND BorderColor = 'black'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "black borders refers to BorderColor = 'black'; available only in arena refers to availability = 'arena'",
        "question": "List the artists who illustrated cards with black borders which are available only in arena.",
        "question_id": 524,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"arena\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"black\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT language FROM set_translations WHERE id IN ( SELECT id FROM cards WHERE name = 'Angel of Mercy' )",
        "db_id": "card_games",
        "difficulty": "moderate",
        "evidence": "Angel of Mercy' is the name of card;",
        "question": "cards are not directly linked to language but through table 'set'. you need to add set in covered table & rephrase your question\nWhat are the languages available for the set that card 'Angel of Mercy' is in?",
        "question_id": 360,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                109,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            108,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            1,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        49,
                                        false
                                    ],
                                    null
                                ],
                                "\"Angel of Mercy\"",
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT player_api_id FROM Player_Attributes ORDER BY overall_rating DESC LIMIT 1",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "highest overall rating refers to MAX(overall_rating);",
        "question": "Which player has the highest overall rating? Indicate the player's api id.",
        "question_id": 1020,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT sprint_speed, agility, acceleration FROM Player_Attributes WHERE player_api_id IN ( SELECT player_api_id FROM Player WHERE player_name = 'Alexis Blin' )",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "Alexis Blin's refers to player_name = 'Alexis Blin'",
        "question": "What are Alexis Blin's sprint speed, agility, and acceleration scores?",
        "question_id": 1140,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            44,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        45,
                                        false
                                    ],
                                    null
                                ],
                                "\"Alexis Blin\"",
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Id, DisplayName FROM users WHERE Views = ( SELECT MAX(Views) FROM users )",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "users have the highest number of views refer to DisplayName where MAX(Views);",
        "question": "Which users have the highest number of views?",
        "question_id": 628,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                52,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                55,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            60,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    6
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            60,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT duration FROM pitStops ORDER BY duration DESC LIMIT 1",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "longest time spent at pitstop refers to MAX(duration)",
        "question": "What was the longest time a driver had ever spent at a pit stop?",
        "question_id": 1005,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        9
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            64,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                64,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT driverRef FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton'",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "reference name refers to driverRef",
        "question": "What's Lewis Hamilton's reference name?",
        "question_id": 918,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    "\"Lewis\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ],
                    "\"Hamilton\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(T.molecule_id) FROM molecule AS T WHERE molecule_id BETWEEN 'TR000' AND 'TR099' AND T.label = '+'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "first 100 molecules in number order refers to molecule_id between 'TR000' and 'TR099'; label = '+' means molecules are carcinogenic",
        "question": "Of the first 100 molecules in number order, how many are carcinogenic?",
        "question_id": 204,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"TR000\"",
                    "\"TR099\""
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"+\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT LastEditDate, LastEditorUserId FROM posts WHERE Title = 'Detecting a given face in a database of facial images'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "Title = 'Detecting a given face in a database of facial images';",
        "question": "Provide the last edit date and last edit user ID for the post \"Detecting a given face in a database of facial images\".",
        "question_id": 644,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                41,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                40,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            35,
                            false
                        ],
                        null
                    ],
                    "\"Detecting a given face in a database of facial images\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(t1.id) FROM Player_Attributes AS t1 WHERE t1.preferred_foot = 'left' AND t1.crossing = ( SELECT MAX(crossing) FROM Player_Attributes)",
        "db_id": "european_football_2",
        "difficulty": "moderate",
        "evidence": "highest potential score for crossing refers to MAX(crossing); preferred to use their left foots while attacking refers to preferred_foot = 'left'",
        "question": "How many players had the highest potential score for crossing that preferred to use their left foots while attacking?",
        "question_id": 1136,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"left\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            10,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT raceId FROM races WHERE year = 2009",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "",
        "question": "List out the Id number of races which were hold in 2009.",
        "question_id": 965,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    2009.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(DISTINCT T.molecule_id) FROM bond AS T WHERE T.bond_type = '#'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "triple bond refers to bond_type = '#';",
        "question": "How many molecules have a triple bond type?",
        "question_id": 238,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                5,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "\"#\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT full_name FROM superhero WHERE superhero_name = 'Alien'",
        "db_id": "superhero",
        "difficulty": "simple",
        "evidence": "",
        "question": "Provide the full name of the superhero named Alien.",
        "question_id": 838,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    "\"Alien\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT surname FROM drivers WHERE nationality = 'Italian'",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "Italian refers to nationality = 'italian'",
        "question": "Please list the surnames of all the Italian drivers.",
        "question_id": 916,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    "\"Italian\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT MAX(spent) FROM budget",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "highest amount of budget spend refers to MAX(spent)",
        "question": "What is the highest amount of budget spend for an event?",
        "question_id": 1378,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT COUNT(id) FROM posts WHERE Score = 10",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "score of 10 refers to Score = 10; post refers to Id",
        "question": "How many posts have a score of 10 on the list?",
        "question_id": 609,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            30,
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT id FROM cards WHERE frameEffects = 'extendedart' GROUP BY id",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "\nframe effect as extendedart refers to frameEffects = 'extendedart'\n",
        "question": "How many cards have frame effect as extendedart? List out the id of those cards.",
        "question_id": 436,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    "\"extendedart\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM Player_Attributes WHERE overall_rating BETWEEN 60 AND 65 AND defensive_work_rate = 'low'",
        "db_id": "european_football_2",
        "difficulty": "moderate",
        "evidence": "overall_rating > = 60 AND overall_rating < 65; players whose going to be in all of your attack moves instead of defensing refers to defensive_work_rate = 'low';",
        "question": "Among the players with an overall rating between 60 to 65, how many players whose going to be in all of your attack moves instead of defensing?",
        "question_id": 1023,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    60.0,
                    65.0
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "\"low\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT year FROM races WHERE name = 'Singapore Grand Prix' ORDER BY year ASC LIMIT 1",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "the first race refers to race happened in min(year);",
        "question": "Which year was the first Singapore Grand Prix?",
        "question_id": 882,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                27,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            30,
                            false
                        ],
                        null
                    ],
                    "\"Singapore Grand Prix\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "total expense refers SUM(cost) where expense_date = '2019-08-20'",
        "question": "Mention the total expense used on 8/20/2019.",
        "question_id": 1409,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            29,
                            false
                        ],
                        null
                    ],
                    "\"2019-08-20\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit'",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "location coordinates refers to (lat, lng); Silverstone Circuit refers to circuits.name = 'Silverstone Circuit'",
        "question": "What's the location coordinates of Silverstone Circuit?",
        "question_id": 910,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Silverstone Circuit\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT id FROM cards WHERE borderColor = 'black' GROUP BY id",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "border with black color refers to borderColor = 'black'",
        "question": "How many card border with black color ? List out the card id.",
        "question_id": 435,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"black\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(DISTINCT T.molecule_id) FROM bond AS T WHERE T.molecule_id BETWEEN 'TR004' AND 'TR010' AND T.bond_type = '-'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "single bond refers to bond_type = '-'; molecules between TR004 to TR010 refers molecule_id BETWEEN 'TR004' and 'TR010';",
        "question": "Among the molecules between TR004 to TR010, how many of them has single bonds?",
        "question_id": 332,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                5,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"TR004\"",
                    "\"TR010\""
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "\"-\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 10",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "heaviest refers to MAX(weight)",
        "question": "What are the player api id of 10 heaviest players?",
        "question_id": 1117,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 10,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            49,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                44,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT COUNT(Id) FROM comments WHERE UserId = 13 AND Score < 60",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "negative comments refer to Score < 60;",
        "question": "How many negative comments were given by user ID 13?",
        "question_id": 645,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    13.0,
                    null
                ],
                "and",
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    60.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT translation FROM set_translations WHERE setCode IN ( SELECT code FROM sets WHERE name = 'Mirrodin' ) AND language = 'Chinese Simplified'",
        "db_id": "card_games",
        "difficulty": "moderate",
        "evidence": "Simplified Chinese translation refers to language = 'Chinese Simplified'; name of the set \"Mirrodin\" refers to name = 'Mirrodin'",
        "question": "Show the Simplified Chinese translation of the name of the set \"Mirrodin\"?",
        "question_id": 505,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                111,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            110,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    3
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            91,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        102,
                                        false
                                    ],
                                    null
                                ],
                                "\"Mirrodin\"",
                                null
                            ]
                        ]
                    },
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            109,
                            false
                        ],
                        null
                    ],
                    "\"Chinese Simplified\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT edhrecRank FROM cards WHERE frameVersion = 2015",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "",
        "question": "List the edhrecRank for cards with frame version 2015.",
        "question_id": 380,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    2015.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(T.molecule_id) FROM molecule AS T WHERE T.molecule_id BETWEEN 'TR000' AND 'TR030' AND T.label = '+'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "label = '+' mean molecules are carcinogenic",
        "question": "Calculate the total carcinogenic molecules for molecule id from TR000 to TR030.",
        "question_id": 266,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"TR000\"",
                    "\"TR030\""
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"+\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(major_id) FROM major WHERE department = 'School of Applied Sciences, Technology and Education' AND college = 'College of Agriculture and Applied Sciences'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "",
        "question": "In the College of Agriculture and Applied Sciences, how many majors are under the department of School of Applied Sciences, Technology and Education?",
        "question_id": 1425,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"School of Applied Sciences, Technology and Education\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"College of Agriculture and Applied Sciences\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT NCESDist FROM schools WHERE SOC = 31",
        "db_id": "california_schools",
        "difficulty": "simple",
        "evidence": "State Special Schools means that SOC = 31.",
        "question": "Please provide the National Center for Educational Statistics school district identification number for all schools with a School Ownership Code that are part of the State Special Schools.",
        "question_id": 69,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                42,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            68,
                            false
                        ],
                        null
                    ],
                    31.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT driverRef FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton'",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "reference name refers to driverRef",
        "question": "What's Lewis Hamilton's reference name?",
        "question_id": 918,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    "\"Lewis\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ],
                    "\"Hamilton\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT country FROM circuits ORDER BY alt DESC LIMIT 1",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "highest altitude refers to max(alt)",
        "question": "In which country can I find the circuit with the highest altitude?",
        "question_id": 913,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "Carlo Jacobs is the full name; full name refers to first_name, last_name;",
        "question": "Tell the phone number of \"Carlo Jacobs\".",
        "question_id": 1346,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                46,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            41,
                            false
                        ],
                        null
                    ],
                    "\"Carlo\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            42,
                            false
                        ],
                        null
                    ],
                    "\"Jacobs\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT edhrecRank FROM cards WHERE frameVersion = 2015",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "",
        "question": "List the edhrecRank for cards with frame version 2015.",
        "question_id": 380,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    2015.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(Id) FROM votes WHERE UserId = 58 AND CreationDate = '2010-07-19'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "user no. 58 refers to UserId = 58; on 2010/7/19 refers to CreationDate = '2010-07-19'",
        "question": "How many votes did the user No.58 take on 2010/7/19?",
        "question_id": 558,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                66,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            70,
                            false
                        ],
                        null
                    ],
                    58.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            69,
                            false
                        ],
                        null
                    ],
                    "\"2010-07-19\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR000' ORDER BY T.element LIMIT 3",
        "db_id": "toxicology",
        "difficulty": "challenging",
        "evidence": "TR000 is the molecule id;",
        "question": "Please list top three elements of the toxicology of the molecule TR000 in alphabetical order.",
        "question_id": 220,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 3,
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"TR000\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(city) FROM zip_code WHERE county = 'Orange County' AND state = 'Virginia'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "Orange County is the county name, Virginia is the state name",
        "question": "How many cities are there in Orange County, Virginia?",
        "question_id": 1362,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"Orange County\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ],
                    "\"Virginia\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DisplayName, Age FROM users WHERE Views = ( SELECT MAX(Views) FROM users )",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "the highest in views refers to MAX(Views);",
        "question": "What are the display names and ages of user who got the highest in views?",
        "question_id": 643,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                55,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                64,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            60,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    6
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            60,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT id FROM sets ORDER BY baseSetSize DESC LIMIT 1",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "the highest number of cards refers to MAX(baseSetSize); unique id refers to id",
        "question": "What is the unique id of the set that has the highest number of cards?",
        "question_id": 509,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            88,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                87,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT CommentCount, AnswerCount FROM posts WHERE Title = 'Clustering 1D data'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "",
        "question": "How many comments and answers were left by the users on the post with the title 'Clustering 1D data'?",
        "question_id": 698,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                38,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            35,
                            false
                        ],
                        null
                    ],
                    "\"Clustering 1D data\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT cost FROM expense WHERE expense_description = 'Posters' AND expense_date = '2019-09-04'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "'Poster' is an event description; on 2019/9/14 refers to event_date = '2019-09-04'",
        "question": "What was the cost for the \"Posters\" on 2019/9/4?",
        "question_id": 1342,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            28,
                            false
                        ],
                        null
                    ],
                    "\"Posters\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            29,
                            false
                        ],
                        null
                    ],
                    "\"2019-09-04\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT PostId, UserId FROM postHistory WHERE PostId IN ( SELECT Id FROM posts WHERE Score > 60 )",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "score more than 60 refers to Score > 60",
        "question": "List out all post ID with score more than 60 and list out all the user ID that created these post.",
        "question_id": 602,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    4
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            26,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                3,
                                [
                                    0,
                                    [
                                        0,
                                        30,
                                        false
                                    ],
                                    null
                                ],
                                60.0,
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Age FROM users WHERE Reputation = ( SELECT MAX(Reputation) FROM users )",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "How old describes age; the most influential refers to user where MAX(Reputation);",
        "question": "How old is the most influential user?",
        "question_id": 661,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                64,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            53,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    6
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            53,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT T4.amount FROM card AS T1 JOIN disp AS T2 ON T1.disp_id = T2.disp_id JOIN account AS T3 on T2.account_id = T3.account_id JOIN trans AS T4 on T3.account_id = T4.account_id WHERE T1.issued = '1996-10-21' ORDER BY T4.amount DESC LIMIT 1",
        "db_id": "financial",
        "difficulty": "simple",
        "evidence": "",
        "question": "What is the biggest amount of transaction that the client whose card was opened in 1996/10/21 made?",
        "question_id": 106,
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            47,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            51,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                51,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "\"1996-10-21\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Website FROM schools WHERE County = 'San Joaquin' AND Virtual = 'P' AND Charter = 1",
        "db_id": "california_schools",
        "difficulty": "simple",
        "evidence": "Virtual = 'P' means partially virtual; Charter schools refers to Charter = 1 in the table schools",
        "question": "What are the websites for all the partially virtual chartered schools located in San Joaquin?",
        "question_id": 60,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                60,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ],
                    "\"San Joaquin\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            76,
                            false
                        ],
                        null
                    ],
                    "\"P\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            63,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(Id) FROM comments WHERE UserId = 13 AND Score < 60",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "negative comments refer to Score < 60;",
        "question": "How many negative comments were given by user ID 13?",
        "question_id": 645,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    13.0,
                    null
                ],
                "and",
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    60.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT raceId FROM races WHERE year = 2009",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "",
        "question": "List out the Id number of races which were hold in 2009.",
        "question_id": 965,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    2009.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT full_name FROM superhero WHERE superhero_name = 'Alien'",
        "db_id": "superhero",
        "difficulty": "simple",
        "evidence": "",
        "question": "Provide the full name of the superhero named Alien.",
        "question_id": 838,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    "\"Alien\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT T2.category, SUM(T2.amount) FROM event AS T1 JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'April Speaker' GROUP BY T2.category ORDER BY SUM(T2.amount) ASC",
        "db_id": "student_club",
        "difficulty": "moderate",
        "evidence": "'April Speaker' is an event name; amount budgeted refers to SUM(amount); budget categories refers to category",
        "question": "Calculate the amount budgeted for 'April Speaker' event. List all the budgeted categories for said event in an ascending order based on their amount budgeted.",
        "question_id": 1405,
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            26,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    21,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            4,
                            24,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"April Speaker\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT surname FROM drivers WHERE nationality = 'Italian'",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "Italian refers to nationality = 'italian'",
        "question": "Please list the surnames of all the Italian drivers.",
        "question_id": 916,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    "\"Italian\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek'",
        "db_id": "superhero",
        "difficulty": "simple",
        "evidence": "Star Trek is the publisher_name;",
        "question": "Give the publisher ID of Star Trek.",
        "question_id": 745,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"Star Trek\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT sprint_speed, agility, acceleration FROM Player_Attributes WHERE player_api_id IN ( SELECT player_api_id FROM Player WHERE player_name = 'Alexis Blin' )",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "Alexis Blin's refers to player_name = 'Alexis Blin'",
        "question": "What are Alexis Blin's sprint speed, agility, and acceleration scores?",
        "question_id": 1140,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            44,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        45,
                                        false
                                    ],
                                    null
                                ],
                                "\"Alexis Blin\"",
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM superhero WHERE full_name LIKE 'John%'",
        "db_id": "superhero",
        "difficulty": "simple",
        "evidence": "have John as their first name refers to full_name LIKE 'John%';",
        "question": "What is the total number of superheroes that have John as their first name?",
        "question_id": 836,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"John%\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM posts WHERE Score = 10",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "score of 10 refers to Score = 10; post refers to Id",
        "question": "How many posts have a score of 10 on the list?",
        "question_id": 609,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            30,
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(T.molecule_id) FROM molecule AS T WHERE T.molecule_id BETWEEN 'TR000' AND 'TR030' AND T.label = '+'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "label = '+' mean molecules are carcinogenic",
        "question": "Calculate the total carcinogenic molecules for molecule id from TR000 to TR030.",
        "question_id": 266,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"TR000\"",
                    "\"TR030\""
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"+\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "Carlo Jacobs is the full name; full name refers to first_name, last_name;",
        "question": "Tell the phone number of \"Carlo Jacobs\".",
        "question_id": 1346,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                46,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            41,
                            false
                        ],
                        null
                    ],
                    "\"Carlo\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            42,
                            false
                        ],
                        null
                    ],
                    "\"Jacobs\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT T.element FROM atom AS T WHERE T.atom_id = 'TR000_1'",
        "db_id": "toxicology",
        "difficulty": "challenging",
        "evidence": "atom with ID refers to atom_id; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium",
        "question": "What is the element of toxicology for the atom with the ID of TR000_1?",
        "question_id": 322,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    "\"TR000_1\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(DISTINCT T.molecule_id) FROM bond AS T WHERE T.bond_type = '#'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "triple bond refers to bond_type = '#';",
        "question": "How many molecules have a triple bond type?",
        "question_id": 238,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                5,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "\"#\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT PostId, UserId FROM postHistory WHERE PostId IN ( SELECT Id FROM posts WHERE Score > 60 )",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "score more than 60 refers to Score > 60",
        "question": "List out all post ID with score more than 60 and list out all the user ID that created these post.",
        "question_id": 602,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    4
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            26,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                3,
                                [
                                    0,
                                    [
                                        0,
                                        30,
                                        false
                                    ],
                                    null
                                ],
                                60.0,
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT PostId, UserId FROM postHistory WHERE PostId IN ( SELECT Id FROM posts WHERE Score > 60 )",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "score more than 60 refers to Score > 60",
        "question": "List out all post ID with score more than 60 and list out all the user ID that created these post.",
        "question_id": 602,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    4
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            26,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                3,
                                [
                                    0,
                                    [
                                        0,
                                        30,
                                        false
                                    ],
                                    null
                                ],
                                60.0,
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT name FROM sets WHERE code = 'ALL'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "",
        "question": "List out the set name of the set code \"ALL\".",
        "question_id": 439,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                102,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            91,
                            false
                        ],
                        null
                    ],
                    "\"ALL\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT CommentCount, AnswerCount FROM posts WHERE Title = 'Clustering 1D data'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "",
        "question": "How many comments and answers were left by the users on the post with the title 'Clustering 1D data'?",
        "question_id": 698,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                38,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            35,
                            false
                        ],
                        null
                    ],
                    "\"Clustering 1D data\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT department FROM major WHERE college = 'College of Humanities and Social Sciences'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "",
        "question": "List all of the College of Humanities and Social Sciences' departments.",
        "question_id": 1363,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"College of Humanities and Social Sciences\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "total expense refers SUM(cost) where expense_date = '2019-08-20'",
        "question": "Mention the total expense used on 8/20/2019.",
        "question_id": 1409,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            29,
                            false
                        ],
                        null
                    ],
                    "\"2019-08-20\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(School) FROM schools WHERE DOC = 52 AND Charter = 1 AND City = 'Hickman'",
        "db_id": "california_schools",
        "difficulty": "simple",
        "evidence": "Elementary School District refers to DOC = 52; Chartered schools refer to Charter = 1 in the table schools",
        "question": "How many chartered schools located in the city of Hickman are owned by the Elementary School District?",
        "question_id": 61,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                47,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            66,
                            false
                        ],
                        null
                    ],
                    52.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            63,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            50,
                            false
                        ],
                        null
                    ],
                    "\"Hickman\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT T.element FROM atom AS T WHERE T.atom_id = 'TR000_1'",
        "db_id": "toxicology",
        "difficulty": "challenging",
        "evidence": "atom with ID refers to atom_id; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium",
        "question": "What is the element of toxicology for the atom with the ID of TR000_1?",
        "question_id": 322,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    "\"TR000_1\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT id FROM Player_Attributes ORDER BY crossing DESC LIMIT 5",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "perform better in crossing actions refers to MAX(crossing)",
        "question": "Who are the top 5 players who perform better in crossing actions? Indicate their player id.",
        "question_id": 1024,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 5,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "total expense refers SUM(cost) where expense_date = '2019-08-20'",
        "question": "Mention the total expense used on 8/20/2019.",
        "question_id": 1409,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            29,
                            false
                        ],
                        null
                    ],
                    "\"2019-08-20\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM posts WHERE Score = 10",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "score of 10 refers to Score = 10; post refers to Id",
        "question": "How many posts have a score of 10 on the list?",
        "question_id": 609,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            30,
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT country FROM circuits ORDER BY alt DESC LIMIT 1",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "highest altitude refers to max(alt)",
        "question": "In which country can I find the circuit with the highest altitude?",
        "question_id": 913,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT id, language FROM set_translations WHERE id = ( SELECT id FROM cards WHERE convertedManaCost = 5 ) AND setCode = '10E'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "set 10E refers to setCode = '10E'; converted mana of 5 refers to convertedManaCost = 5;",
        "question": "What are the cards in set 10E with converted mana of 5 have translation and what are the languages?",
        "question_id": 388,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                108,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                109,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            108,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            1,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        11,
                                        false
                                    ],
                                    null
                                ],
                                5.0,
                                null
                            ]
                        ]
                    },
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            110,
                            false
                        ],
                        null
                    ],
                    "\"10E\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Id FROM users WHERE Reputation = ( SELECT MAX(Reputation) FROM users )",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "highest reputation refers to Max(Reputation)",
        "question": "Which user ID has the highest reputation?",
        "question_id": 589,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                52,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            53,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    6
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            53,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT year FROM races GROUP BY year ORDER BY COUNT(round) DESC LIMIT 1",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "the most number of races refers to max(round);",
        "question": "Which year has the most number of races?",
        "question_id": 886,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    27,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            28,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                27,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT id FROM cards WHERE borderColor = 'black' GROUP BY id",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "border with black color refers to borderColor = 'black'",
        "question": "How many card border with black color ? List out the card id.",
        "question_id": 435,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"black\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT player_api_id FROM Player_Attributes ORDER BY overall_rating DESC LIMIT 1",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "highest overall rating refers to MAX(overall_rating);",
        "question": "Which player has the highest overall rating? Indicate the player's api id.",
        "question_id": 1020,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT year FROM races WHERE name = 'Singapore Grand Prix' ORDER BY year ASC LIMIT 1",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "the first race refers to race happened in min(year);",
        "question": "Which year was the first Singapore Grand Prix?",
        "question_id": 882,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                27,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            30,
                            false
                        ],
                        null
                    ],
                    "\"Singapore Grand Prix\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DISTINCT availability FROM cards WHERE artist = 'Aleksi Briclot' AND isTextless = 1",
        "db_id": "card_games",
        "difficulty": "moderate",
        "evidence": "created by Aleksi Briclot refers to artist = 'Aleksi Briclot'; doesn't have a text box refers to isTextless = 1; available printing types refers to availability",
        "question": "What are the available printing types of the cards that doesn't have a text box created by Aleksi Briclot?",
        "question_id": 508,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Aleksi Briclot\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            34,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT AVG(LDH) FROM Laboratory WHERE LDH < 500",
        "db_id": "thrombosis_prediction",
        "difficulty": "simple",
        "evidence": "average index of the lactate dehydrogenase (LDH) refers to AVG(LDH); (LDH) within the normal range refers to LDH < 500",
        "question": "What is the average index of the lactate dehydrogenase (LDH) for all patients with lactate dehydrogenase (LDH) within the normal range.",
        "question_id": 1210,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            25,
                            false
                        ],
                        null
                    ],
                    500.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT CommentCount, AnswerCount FROM posts WHERE Title = 'Clustering 1D data'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "",
        "question": "How many comments and answers were left by the users on the post with the title 'Clustering 1D data'?",
        "question_id": 698,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                38,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            35,
                            false
                        ],
                        null
                    ],
                    "\"Clustering 1D data\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM cards WHERE originalType = 'Summon - Angel' AND subtypes != 'Angel'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "subtype other than Angel refers to subtypes is not 'Angel';",
        "question": "How many cards with original type of \"Summon - Angel\" have subtype other than \"Angel\"?",
        "question_id": 377,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            53,
                            false
                        ],
                        null
                    ],
                    "\"Summon - Angel\"",
                    null
                ],
                "and",
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            65,
                            false
                        ],
                        null
                    ],
                    "\"Angel\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM cards WHERE hAND = '-1' AND artist = 'UDON' AND Availability = 'mtgo' ",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "UDON refer to artist; availabe in mtgo refers to availability = 'mtgo'; starting maximum hand size of -1 refers to hand = -1",
        "question": "How many cards designed by UDON and available in mtgo print type has a starting maximum hand size of -1?",
        "question_id": 395,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ],
                    "\"-1\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"UDON\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"mtgo\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT name, date FROM races WHERE year = 1999 ORDER BY round DESC LIMIT 1",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "the last round refers to max(round);",
        "question": "State the name and date of the last round of race in year 1999.",
        "question_id": 885,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            28,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                31,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    1999.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM Player WHERE birthday > '1990' AND player_name LIKE 'Aaron%'",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "first name \"Aaron\" refers to player_name LIKE 'Aaron%'; born after the 1990s refers to birthday > '1990'",
        "question": "How many football players born after the 1990s have the first name \"Aaron\"?",
        "question_id": 1133,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                43,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            47,
                            false
                        ],
                        null
                    ],
                    "\"1990\"",
                    null
                ],
                "and",
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ],
                    "\"Aaron%\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Age FROM users WHERE Reputation = ( SELECT MAX(Reputation) FROM users )",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "How old describes age; the most influential refers to user where MAX(Reputation);",
        "question": "How old is the most influential user?",
        "question_id": 661,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                64,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            53,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    6
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            53,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT team_long_name FROM Team WHERE team_short_name = 'GEN'",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "long name for the team refers to team_long_name; team_short_name = 'GEN';",
        "question": "What's the long name for the team GEN?",
        "question_id": 1077,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                58,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            59,
                            false
                        ],
                        null
                    ],
                    "\"GEN\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR151'",
        "db_id": "toxicology",
        "difficulty": "challenging",
        "evidence": "element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium",
        "question": "Which toxic element can be found in the molecule TR151?",
        "question_id": 290,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"TR151\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(Id) FROM users WHERE Upvotes > 100 AND Downvotes > 1",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "more than 100 upvotes refers to Upvotes > 100; more than 1 downvotes refers to Downvotes > 1",
        "question": "Among the users who have more than 100 upvotes, how many of them have more then 1 downvotes?",
        "question_id": 535,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                52,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            61,
                            false
                        ],
                        null
                    ],
                    100.0,
                    null
                ],
                "and",
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            62,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(T.bond_id) FROM bond AS T WHERE T.bond_type = '#'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "triple type bonds refers to bond_type = '#'",
        "question": "How many triple type bonds are there?",
        "question_id": 202,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "\"#\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT player_name FROM player ORDER BY height ASC LIMIT 1",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "shortest height refers to MIN(height);",
        "question": "Which football player has the shortest height?",
        "question_id": 1069,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            48,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                45,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT full_name FROM superhero WHERE superhero_name = 'Alien'",
        "db_id": "superhero",
        "difficulty": "simple",
        "evidence": "",
        "question": "Provide the full name of the superhero named Alien.",
        "question_id": 838,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    "\"Alien\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT T2.category, SUM(T2.amount) FROM event AS T1 JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'April Speaker' GROUP BY T2.category ORDER BY SUM(T2.amount) ASC",
        "db_id": "student_club",
        "difficulty": "moderate",
        "evidence": "'April Speaker' is an event name; amount budgeted refers to SUM(amount); budget categories refers to category",
        "question": "Calculate the amount budgeted for 'April Speaker' event. List all the budgeted categories for said event in an ascending order based on their amount budgeted.",
        "question_id": 1405,
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            26,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    21,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            4,
                            24,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"April Speaker\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT name, date FROM races WHERE year = 1999 ORDER BY round DESC LIMIT 1",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "the last round refers to max(round);",
        "question": "State the name and date of the last round of race in year 1999.",
        "question_id": 885,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            28,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                31,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    1999.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(driverId) FROM driverStandings WHERE raceId = 18",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "",
        "question": "How many driver participated in race ID number 18?",
        "question_id": 966,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                48,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            47,
                            false
                        ],
                        null
                    ],
                    18.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 10",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "heaviest refers to MAX(weight)",
        "question": "What are the player api id of 10 heaviest players?",
        "question_id": 1117,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 10,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            49,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                44,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT COUNT(id) FROM Player WHERE weight > 170 AND player_name LIKE 'Adam%'",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "team names refers to team_long_name; speed class refers to buildUpPlaySpeedClass; buildUpPlaySpeedClass = 'Fast';",
        "question": "How many players whose first names are Adam and weigh more than 170?",
        "question_id": 1061,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                43,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            49,
                            false
                        ],
                        null
                    ],
                    170.0,
                    null
                ],
                "and",
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ],
                    "\"Adam%\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Id, DisplayName FROM users WHERE Views = ( SELECT MAX(Views) FROM users )",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "users have the highest number of views refer to DisplayName where MAX(Views);",
        "question": "Which users have the highest number of views?",
        "question_id": 628,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                52,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                55,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            60,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    6
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            60,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(Id) FROM posts WHERE ViewCount > 35000 AND CommentCount = 0",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "have been viewed over 35000 times refers to ViewCount > 35000; received no comments refers to CommentCount = 0;",
        "question": "Identify the number of posts that have been viewed over 35000 times but have received no comments from other users.",
        "question_id": 688,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            31,
                            false
                        ],
                        null
                    ],
                    35000.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            38,
                            false
                        ],
                        null
                    ],
                    0.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT artist FROM cards WHERE flavorName = 'Battra, Dark Destroyer'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "promotional name is \"Battra, Dark Destroyer\" refers to flavorName = 'Battra, Dark Destroyer'",
        "question": "Which artist designed the card whose promotional name is \"Battra, Dark Destroyer\"?",
        "question_id": 460,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ],
                    "\"Battra, Dark Destroyer\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit'",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "location coordinates refers to (lat, lng); Silverstone Circuit refers to circuits.name = 'Silverstone Circuit'",
        "question": "What's the location coordinates of Silverstone Circuit?",
        "question_id": 910,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Silverstone Circuit\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM cards WHERE toughness = 99",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "",
        "question": "How many cards are there with toughness of 99?",
        "question_id": 372,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            69,
                            false
                        ],
                        null
                    ],
                    99.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT notes FROM income WHERE source = 'Fundraising' AND date_received = '2019-09-14'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "fundraising on 2019/9/14 refers to source = 'Fundraising' where date_received = '2019-09-14'",
        "question": "What was the notes of the fundraising on 2019/9/14?",
        "question_id": 1344,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                38,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            37,
                            false
                        ],
                        null
                    ],
                    "\"Fundraising\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            35,
                            false
                        ],
                        null
                    ],
                    "\"2019-09-14\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT name FROM sets WHERE code = 'ALL'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "",
        "question": "List out the set name of the set code \"ALL\".",
        "question_id": 439,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                102,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            91,
                            false
                        ],
                        null
                    ],
                    "\"ALL\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT expense_description FROM expense GROUP BY expense_description HAVING AVG(cost) > 50",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "expense refers to expense_description; spend more than fifty dollars on average refers to DIVIDE( SUM(cost), COUNT(expense_id) ) > 50",
        "question": "List the expenses that spend more than fifty dollars on average.",
        "question_id": 1444,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    28,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            5,
                            30,
                            false
                        ],
                        null
                    ],
                    50.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                28,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT COUNT(id) FROM Player WHERE weight > 170 AND player_name LIKE 'Adam%'",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "team names refers to team_long_name; speed class refers to buildUpPlaySpeedClass; buildUpPlaySpeedClass = 'Fast';",
        "question": "How many players whose first names are Adam and weigh more than 170?",
        "question_id": 1061,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                43,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            49,
                            false
                        ],
                        null
                    ],
                    170.0,
                    null
                ],
                "and",
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ],
                    "\"Adam%\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-25' GROUP BY CustomerID ORDER BY SUM(Price) DESC LIMIT 1",
        "db_id": "debit_card_specializing",
        "difficulty": "simple",
        "evidence": "'2012/8/25' can be represented by '2012-08-25'",
        "question": "Which customer paid the most in 2012/8/25?",
        "question_id": 1512,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    13,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            4,
                            18,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"2012-08-25\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(driverId) FROM driverStandings WHERE raceId = 18",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "",
        "question": "How many driver participated in race ID number 18?",
        "question_id": 966,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                48,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            47,
                            false
                        ],
                        null
                    ],
                    18.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Website FROM schools WHERE County = 'San Joaquin' AND Virtual = 'P' AND Charter = 1",
        "db_id": "california_schools",
        "difficulty": "simple",
        "evidence": "Virtual = 'P' means partially virtual; Charter schools refers to Charter = 1 in the table schools",
        "question": "What are the websites for all the partially virtual chartered schools located in San Joaquin?",
        "question_id": 60,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                60,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ],
                    "\"San Joaquin\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            76,
                            false
                        ],
                        null
                    ],
                    "\"P\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            63,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT setCode FROM set_translations WHERE language = 'Spanish'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "Spanish refer to language; set code refers to setCode",
        "question": "Lists the set code of all cards translated into Spanish.",
        "question_id": 400,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                110,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            109,
                            false
                        ],
                        null
                    ],
                    "\"Spanish\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT department FROM major WHERE college = 'College of Humanities and Social Sciences'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "",
        "question": "List all of the College of Humanities and Social Sciences' departments.",
        "question_id": 1363,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"College of Humanities and Social Sciences\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(DISTINCT T.molecule_id) FROM bond AS T WHERE T.bond_type = '#'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "triple bond refers to bond_type = '#';",
        "question": "How many molecules have a triple bond type?",
        "question_id": 238,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                5,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "\"#\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT notes FROM income WHERE source = 'Fundraising' AND date_received = '2019-09-14'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "fundraising on 2019/9/14 refers to source = 'Fundraising' where date_received = '2019-09-14'",
        "question": "What was the notes of the fundraising on 2019/9/14?",
        "question_id": 1344,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                38,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            37,
                            false
                        ],
                        null
                    ],
                    "\"Fundraising\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            35,
                            false
                        ],
                        null
                    ],
                    "\"2019-09-14\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(T.atom_id) FROM atom AS T WHERE T.element = 'c' OR T.element = 'h'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "consisting of element carbon and hydrogen refers to element in('c', 'h')",
        "question": "Calculate the total atoms consisting of the element carbon and hydrogen.",
        "question_id": 256,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"c\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"h\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "are oversized refers to isOversized = 1; reprinted refers to isReprint = 1; printed for promotions refers to isPromo = 1",
        "question": "How many cards are oversized, reprinted, and printed for promotions?",
        "question_id": 420,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            28,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            30,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            29,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(Id) FROM votes WHERE UserId = 58 AND CreationDate = '2010-07-19'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "user no. 58 refers to UserId = 58; on 2010/7/19 refers to CreationDate = '2010-07-19'",
        "question": "How many votes did the user No.58 take on 2010/7/19?",
        "question_id": 558,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                66,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            70,
                            false
                        ],
                        null
                    ],
                    58.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            69,
                            false
                        ],
                        null
                    ],
                    "\"2010-07-19\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT duration FROM pitStops ORDER BY duration DESC LIMIT 1",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "longest time spent at pitstop refers to MAX(duration)",
        "question": "What was the longest time a driver had ever spent at a pit stop?",
        "question_id": 1005,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        9
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            64,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                64,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT name FROM foreign_data WHERE uuid IN ( SELECT uuid FROM cards WHERE types = 'Creature' AND layout = 'normal' AND borderColor = 'black' AND artist = 'Matthew D. Wilson' ) AND language = 'French'",
        "db_id": "card_games",
        "difficulty": "moderate",
        "evidence": "in French refers to language = 'French'; black border color refers to borderColor = 'black'",
        "question": "What is the foreign name of the card in French of type Creature, normal layout and black border color, by artist Matthew D. Wilson?",
        "question_id": 412,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                79,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            82,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            72,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        71,
                                        false
                                    ],
                                    null
                                ],
                                "\"Creature\"",
                                null
                            ],
                            "and",
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        37,
                                        false
                                    ],
                                    null
                                ],
                                "\"normal\"",
                                null
                            ],
                            "and",
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        5,
                                        false
                                    ],
                                    null
                                ],
                                "\"black\"",
                                null
                            ],
                            "and",
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        2,
                                        false
                                    ],
                                    null
                                ],
                                "\"Matthew D. Wilson\"",
                                null
                            ]
                        ]
                    },
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            77,
                            false
                        ],
                        null
                    ],
                    "\"French\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(Id) FROM users WHERE Location = 'New York'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "New York refers to Location;",
        "question": "How many users were from New York?",
        "question_id": 625,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                52,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            58,
                            false
                        ],
                        null
                    ],
                    "\"New York\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT MAX(spent) FROM budget",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "highest amount of budget spend refers to MAX(spent)",
        "question": "What is the highest amount of budget spend for an event?",
        "question_id": 1378,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT Website FROM schools WHERE County = 'San Joaquin' AND Virtual = 'P' AND Charter = 1",
        "db_id": "california_schools",
        "difficulty": "simple",
        "evidence": "Virtual = 'P' means partially virtual; Charter schools refers to Charter = 1 in the table schools",
        "question": "What are the websites for all the partially virtual chartered schools located in San Joaquin?",
        "question_id": 60,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                60,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ],
                    "\"San Joaquin\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            76,
                            false
                        ],
                        null
                    ],
                    "\"P\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            63,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT NCESDist FROM schools WHERE SOC = 31",
        "db_id": "california_schools",
        "difficulty": "simple",
        "evidence": "State Special Schools means that SOC = 31.",
        "question": "Please provide the National Center for Educational Statistics school district identification number for all schools with a School Ownership Code that are part of the State Special Schools.",
        "question_id": 69,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                42,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            68,
                            false
                        ],
                        null
                    ],
                    31.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT id FROM sets WHERE type = 'commander' ORDER BY totalSetSize DESC LIMIT 1",
        "db_id": "card_games",
        "difficulty": "challenging",
        "evidence": "expansion type refers to type where type = 'commander'; totalSetSize: The total number of cards in the set, including promotional and related supplemental products but excluding Alchemy modifications; highest total number of cards refers to MAX(totalSetSize)",
        "question": "Among the sets whose expansion type is Commander, which set has the highest total number of cards including promotional and related supplemental products but excluding Alchemy modifications? Indicate the id of the set.",
        "question_id": 513,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            106,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                87,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            107,
                            false
                        ],
                        null
                    ],
                    "\"commander\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT name FROM races WHERE year = 2017 AND name NOT IN ( SELECT name FROM races WHERE year = 2000 )",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "not hosted means not in;",
        "question": "Name the races in year 2017 that are not hosted in year 2000.",
        "question_id": 887,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    2017.0,
                    null
                ],
                "and",
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            30,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    4
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            30,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        27,
                                        false
                                    ],
                                    null
                                ],
                                2000.0,
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM superhero WHERE full_name LIKE 'John%'",
        "db_id": "superhero",
        "difficulty": "simple",
        "evidence": "have John as their first name refers to full_name LIKE 'John%';",
        "question": "What is the total number of superheroes that have John as their first name?",
        "question_id": 836,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"John%\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT CreationDate FROM users WHERE DisplayName = 'IrishStat'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "DisplayName = 'IrishStat'; when create his or her account refers to CreationDate;",
        "question": "When did the user known as 'IrishStat' create his or her account?",
        "question_id": 699,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                54,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            55,
                            false
                        ],
                        null
                    ],
                    "\"IrishStat\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT sprint_speed, agility, acceleration FROM Player_Attributes WHERE player_api_id IN ( SELECT player_api_id FROM Player WHERE player_name = 'Alexis Blin' )",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "Alexis Blin's refers to player_name = 'Alexis Blin'",
        "question": "What are Alexis Blin's sprint speed, agility, and acceleration scores?",
        "question_id": 1140,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            44,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        45,
                                        false
                                    ],
                                    null
                                ],
                                "\"Alexis Blin\"",
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT team_long_name FROM Team WHERE team_short_name = 'GEN'",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "long name for the team refers to team_long_name; team_short_name = 'GEN';",
        "question": "What's the long name for the team GEN?",
        "question_id": 1077,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                58,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            59,
                            false
                        ],
                        null
                    ],
                    "\"GEN\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT cost FROM expense WHERE expense_description = 'Posters' AND expense_date = '2019-09-04'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "'Poster' is an event description; on 2019/9/14 refers to event_date = '2019-09-04'",
        "question": "What was the cost for the \"Posters\" on 2019/9/4?",
        "question_id": 1342,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            28,
                            false
                        ],
                        null
                    ],
                    "\"Posters\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            29,
                            false
                        ],
                        null
                    ],
                    "\"2019-09-04\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DISTINCT ID FROM Laboratory WHERE Date BETWEEN '1987-07-06' AND '1996-01-31' AND GPT > 30 AND ALB < 4",
        "db_id": "thrombosis_prediction",
        "difficulty": "moderate",
        "evidence": "examined between 1987/7/6 and 1996/1/31 refers to Date BETWEEN '1987-07-06' AND '1996-01-31'; GPT level greater than 30 refers to GPT > 30; ALB level less than 4 ALB < 4",
        "question": "How many patients who were examined between 1987/7/6 and 1996/1/31 had a GPT level greater than 30 and an ALB level less than 4? List them by their ID.",
        "question_id": 1187,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    "\"1987-07-06\"",
                    "\"1996-01-31\""
                ],
                "and",
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            24,
                            false
                        ],
                        null
                    ],
                    30.0,
                    null
                ],
                "and",
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            28,
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(T.molecule_id) FROM molecule AS T WHERE T.molecule_id BETWEEN 'TR000' AND 'TR030' AND T.label = '+'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "label = '+' mean molecules are carcinogenic",
        "question": "Calculate the total carcinogenic molecules for molecule id from TR000 to TR030.",
        "question_id": 266,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"TR000\"",
                    "\"TR030\""
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"+\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT name FROM sets WHERE code IN ( SELECT setCode FROM set_translations WHERE language = 'Korean' AND language NOT LIKE '%Japanese%' )",
        "db_id": "card_games",
        "difficulty": "moderate",
        "evidence": "names of sets refers to name; doesn't have Japanese translation refers to language not like '%Japanese%'; have Korean translation refers to language = 'Korean'",
        "question": "Find and list the names of sets which doesn't have Japanese translation but have Korean translation.",
        "question_id": 529,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                102,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            91,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    4
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            110,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        109,
                                        false
                                    ],
                                    null
                                ],
                                "\"Korean\"",
                                null
                            ],
                            "and",
                            [
                                true,
                                9,
                                [
                                    0,
                                    [
                                        0,
                                        109,
                                        false
                                    ],
                                    null
                                ],
                                "\"%Japanese%\"",
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT driverRef FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton'",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "reference name refers to driverRef",
        "question": "What's Lewis Hamilton's reference name?",
        "question_id": 918,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    "\"Lewis\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ],
                    "\"Hamilton\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM Player WHERE weight > 170 AND player_name LIKE 'Adam%'",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "team names refers to team_long_name; speed class refers to buildUpPlaySpeedClass; buildUpPlaySpeedClass = 'Fast';",
        "question": "How many players whose first names are Adam and weigh more than 170?",
        "question_id": 1061,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                43,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            49,
                            false
                        ],
                        null
                    ],
                    170.0,
                    null
                ],
                "and",
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ],
                    "\"Adam%\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM cards WHERE originalType = 'Summon - Angel' AND subtypes != 'Angel'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "subtype other than Angel refers to subtypes is not 'Angel';",
        "question": "How many cards with original type of \"Summon - Angel\" have subtype other than \"Angel\"?",
        "question_id": 377,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            53,
                            false
                        ],
                        null
                    ],
                    "\"Summon - Angel\"",
                    null
                ],
                "and",
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            65,
                            false
                        ],
                        null
                    ],
                    "\"Angel\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT CreationDate FROM users WHERE DisplayName = 'IrishStat'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "DisplayName = 'IrishStat'; when create his or her account refers to CreationDate;",
        "question": "When did the user known as 'IrishStat' create his or her account?",
        "question_id": 699,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                54,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            55,
                            false
                        ],
                        null
                    ],
                    "\"IrishStat\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT surname FROM drivers WHERE nationality = 'Italian'",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "Italian refers to nationality = 'italian'",
        "question": "Please list the surnames of all the Italian drivers.",
        "question_id": 916,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    "\"Italian\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT year FROM races WHERE name = 'Singapore Grand Prix' ORDER BY year ASC LIMIT 1",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "the first race refers to race happened in min(year);",
        "question": "Which year was the first Singapore Grand Prix?",
        "question_id": 882,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                27,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            30,
                            false
                        ],
                        null
                    ],
                    "\"Singapore Grand Prix\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(Id) FROM users WHERE Upvotes > 100 AND Downvotes > 1",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "more than 100 upvotes refers to Upvotes > 100; more than 1 downvotes refers to Downvotes > 1",
        "question": "Among the users who have more than 100 upvotes, how many of them have more then 1 downvotes?",
        "question_id": 535,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                52,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            61,
                            false
                        ],
                        null
                    ],
                    100.0,
                    null
                ],
                "and",
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            62,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT department FROM major WHERE college = 'College of Humanities and Social Sciences'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "",
        "question": "List all of the College of Humanities and Social Sciences' departments.",
        "question_id": 1363,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"College of Humanities and Social Sciences\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT setCode FROM set_translations WHERE language = 'Spanish'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "Spanish refer to language; set code refers to setCode",
        "question": "Lists the set code of all cards translated into Spanish.",
        "question_id": 400,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                110,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            109,
                            false
                        ],
                        null
                    ],
                    "\"Spanish\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT id FROM Player_Attributes ORDER BY crossing DESC LIMIT 5",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "perform better in crossing actions refers to MAX(crossing)",
        "question": "Who are the top 5 players who perform better in crossing actions? Indicate their player id.",
        "question_id": 1024,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 5,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT COUNT(id) FROM cards WHERE hAND = '-1' AND artist = 'UDON' AND Availability = 'mtgo' ",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "UDON refer to artist; availabe in mtgo refers to availability = 'mtgo'; starting maximum hand size of -1 refers to hand = -1",
        "question": "How many cards designed by UDON and available in mtgo print type has a starting maximum hand size of -1?",
        "question_id": 395,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ],
                    "\"-1\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"UDON\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"mtgo\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DISTINCT artist FROM cards WHERE availability = 'arena' AND BorderColor = 'black'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "black borders refers to BorderColor = 'black'; available only in arena refers to availability = 'arena'",
        "question": "List the artists who illustrated cards with black borders which are available only in arena.",
        "question_id": 524,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"arena\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"black\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT id FROM cards WHERE frameEffects = 'extendedart' GROUP BY id",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "\nframe effect as extendedart refers to frameEffects = 'extendedart'\n",
        "question": "How many cards have frame effect as extendedart? List out the id of those cards.",
        "question_id": 436,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    "\"extendedart\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit'",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "reference name refers to circuitRef; Marina Bay Street Circuit refers to circuits.name = 'Marina Bay Street Circuit'",
        "question": "What's the reference name of Marina Bay Street Circuit?",
        "question_id": 912,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Marina Bay Street Circuit\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "Carlo Jacobs is the full name; full name refers to first_name, last_name;",
        "question": "Tell the phone number of \"Carlo Jacobs\".",
        "question_id": 1346,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                46,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            41,
                            false
                        ],
                        null
                    ],
                    "\"Carlo\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            42,
                            false
                        ],
                        null
                    ],
                    "\"Jacobs\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(Id) FROM votes WHERE UserId = 58 AND CreationDate = '2010-07-19'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "user no. 58 refers to UserId = 58; on 2010/7/19 refers to CreationDate = '2010-07-19'",
        "question": "How many votes did the user No.58 take on 2010/7/19?",
        "question_id": 558,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                66,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            70,
                            false
                        ],
                        null
                    ],
                    58.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            69,
                            false
                        ],
                        null
                    ],
                    "\"2010-07-19\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT player_name FROM player ORDER BY height ASC LIMIT 1",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "shortest height refers to MIN(height);",
        "question": "Which football player has the shortest height?",
        "question_id": 1069,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            48,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                45,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT raceId FROM races WHERE year = 2009",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "",
        "question": "List out the Id number of races which were hold in 2009.",
        "question_id": 965,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    2009.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler'",
        "db_id": "superhero",
        "difficulty": "simple",
        "evidence": "name the superhero refers to superhero_name; Charles Chandler is the full name of superhero;",
        "question": "Name the superhero, otherwise known as Charles Chandler.",
        "question_id": 833,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"Charles Chandler\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT name FROM races WHERE year = 2017 AND name NOT IN ( SELECT name FROM races WHERE year = 2000 )",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "not hosted means not in;",
        "question": "Name the races in year 2017 that are not hosted in year 2000.",
        "question_id": 887,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    2017.0,
                    null
                ],
                "and",
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            30,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    4
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            30,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        27,
                                        false
                                    ],
                                    null
                                ],
                                2000.0,
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT id FROM sets WHERE type = 'commander' ORDER BY totalSetSize DESC LIMIT 1",
        "db_id": "card_games",
        "difficulty": "challenging",
        "evidence": "expansion type refers to type where type = 'commander'; totalSetSize: The total number of cards in the set, including promotional and related supplemental products but excluding Alchemy modifications; highest total number of cards refers to MAX(totalSetSize)",
        "question": "Among the sets whose expansion type is Commander, which set has the highest total number of cards including promotional and related supplemental products but excluding Alchemy modifications? Indicate the id of the set.",
        "question_id": 513,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            106,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                87,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            107,
                            false
                        ],
                        null
                    ],
                    "\"commander\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT layout FROM cards WHERE keywords = 'Flying'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "",
        "question": "What are the card layout of cards with keyword of flying?",
        "question_id": 376,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            36,
                            false
                        ],
                        null
                    ],
                    "\"Flying\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(Id) FROM users WHERE Upvotes > 100 AND Downvotes > 1",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "more than 100 upvotes refers to Upvotes > 100; more than 1 downvotes refers to Downvotes > 1",
        "question": "Among the users who have more than 100 upvotes, how many of them have more then 1 downvotes?",
        "question_id": 535,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                52,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            61,
                            false
                        ],
                        null
                    ],
                    100.0,
                    null
                ],
                "and",
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            62,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT country FROM circuits ORDER BY alt DESC LIMIT 1",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "highest altitude refers to max(alt)",
        "question": "In which country can I find the circuit with the highest altitude?",
        "question_id": 913,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT edhrecRank FROM cards WHERE frameVersion = 2015",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "",
        "question": "List the edhrecRank for cards with frame version 2015.",
        "question_id": 380,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    2015.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT driverId FROM lapTimes WHERE lap = 1 ORDER BY time LIMIT 5",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "fastest time refers to Min(time);",
        "question": "List the driver's ID of the top five driver, by descending order, the fastest time during the first lap of the race.",
        "question_id": 976,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        8
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 5,
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            57,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                54,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            55,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Phone, Ext, School FROM schools WHERE Zip = '95203-3704'",
        "db_id": "california_schools",
        "difficulty": "simple",
        "evidence": "",
        "question": "What is the phone number and extension number for the school with the zip code 95203-3704? Indicate the school's name.",
        "question_id": 58,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                58,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                59,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                47,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            51,
                            false
                        ],
                        null
                    ],
                    "\"95203-3704\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Symptoms FROM Examination WHERE Diagnosis = 'SLE' GROUP BY Symptoms ORDER BY COUNT(Symptoms) DESC LIMIT 1",
        "db_id": "thrombosis_prediction",
        "difficulty": "simple",
        "evidence": "the most common sign refers to MAX(symptoms); 'SLE' refers to diagnosis",
        "question": "What is the most common sign of patients with SLE disease?",
        "question_id": 1196,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    12,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            12,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "\"SLE\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM users WHERE Age BETWEEN 19 AND 65",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "adult refers to user where Age BETWEEN 19 and 65;",
        "question": "How many users were adult?",
        "question_id": 627,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                52,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            64,
                            false
                        ],
                        null
                    ],
                    19.0,
                    65.0
                ]
            ]
        }
    },
    {
        "query": "SELECT Age FROM users WHERE Reputation = ( SELECT MAX(Reputation) FROM users )",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "How old describes age; the most influential refers to user where MAX(Reputation);",
        "question": "How old is the most influential user?",
        "question_id": 661,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                64,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            53,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    6
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            53,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT LastEditDate, LastEditorUserId FROM posts WHERE Title = 'Detecting a given face in a database of facial images'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "Title = 'Detecting a given face in a database of facial images';",
        "question": "Provide the last edit date and last edit user ID for the post \"Detecting a given face in a database of facial images\".",
        "question_id": 644,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                41,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                40,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            35,
                            false
                        ],
                        null
                    ],
                    "\"Detecting a given face in a database of facial images\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT setCode FROM set_translations WHERE language = 'Spanish'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "Spanish refer to language; set code refers to setCode",
        "question": "Lists the set code of all cards translated into Spanish.",
        "question_id": 400,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                110,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            109,
                            false
                        ],
                        null
                    ],
                    "\"Spanish\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT MAX(spent) FROM budget",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "highest amount of budget spend refers to MAX(spent)",
        "question": "What is the highest amount of budget spend for an event?",
        "question_id": 1378,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT id FROM Player_Attributes WHERE preferred_foot = 'right' ORDER BY potential DESC LIMIT 5",
        "db_id": "european_football_2",
        "difficulty": "moderate",
        "evidence": "lowest potential players refers to MIN(potential); prefer to use the right foot when attacking refers to preferred_foot = 'right'",
        "question": "Please provide top five football players' IDs who are among the lowest potential players and prefer to use the right foot when attacking.",
        "question_id": 1135,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 5,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"right\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR001'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "TR001 is the molecule id",
        "question": "List the toxicology elements associated with molecule TR001.",
        "question_id": 274,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"TR001\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT name FROM sets WHERE code = 'ALL'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "",
        "question": "List out the set name of the set code \"ALL\".",
        "question_id": 439,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                102,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            91,
                            false
                        ],
                        null
                    ],
                    "\"ALL\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT name FROM foreign_data WHERE uuid IN ( SELECT uuid FROM cards WHERE types = 'Creature' AND layout = 'normal' AND borderColor = 'black' AND artist = 'Matthew D. Wilson' ) AND language = 'French'",
        "db_id": "card_games",
        "difficulty": "moderate",
        "evidence": "in French refers to language = 'French'; black border color refers to borderColor = 'black'",
        "question": "What is the foreign name of the card in French of type Creature, normal layout and black border color, by artist Matthew D. Wilson?",
        "question_id": 412,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                79,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            82,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            72,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        71,
                                        false
                                    ],
                                    null
                                ],
                                "\"Creature\"",
                                null
                            ],
                            "and",
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        37,
                                        false
                                    ],
                                    null
                                ],
                                "\"normal\"",
                                null
                            ],
                            "and",
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        5,
                                        false
                                    ],
                                    null
                                ],
                                "\"black\"",
                                null
                            ],
                            "and",
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        2,
                                        false
                                    ],
                                    null
                                ],
                                "\"Matthew D. Wilson\"",
                                null
                            ]
                        ]
                    },
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            77,
                            false
                        ],
                        null
                    ],
                    "\"French\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(School) FROM schools WHERE DOC = 52 AND Charter = 1 AND City = 'Hickman'",
        "db_id": "california_schools",
        "difficulty": "simple",
        "evidence": "Elementary School District refers to DOC = 52; Chartered schools refer to Charter = 1 in the table schools",
        "question": "How many chartered schools located in the city of Hickman are owned by the Elementary School District?",
        "question_id": 61,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                47,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            66,
                            false
                        ],
                        null
                    ],
                    52.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            63,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            50,
                            false
                        ],
                        null
                    ],
                    "\"Hickman\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT driverRef FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton'",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "reference name refers to driverRef",
        "question": "What's Lewis Hamilton's reference name?",
        "question_id": 918,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    "\"Lewis\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ],
                    "\"Hamilton\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT id FROM sets ORDER BY baseSetSize DESC LIMIT 1",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "the highest number of cards refers to MAX(baseSetSize); unique id refers to id",
        "question": "What is the unique id of the set that has the highest number of cards?",
        "question_id": 509,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            88,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                87,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT lat, lng FROM circuits WHERE country = 'USA'",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "location coordinates refers to (lat, lng); the US refers to country = 'USA';",
        "question": "Please list the location coordinates of the US circuits.",
        "question_id": 946,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"USA\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT language FROM set_translations WHERE id IN ( SELECT id FROM cards WHERE name = 'Angel of Mercy' )",
        "db_id": "card_games",
        "difficulty": "moderate",
        "evidence": "Angel of Mercy' is the name of card;",
        "question": "cards are not directly linked to language but through table 'set'. you need to add set in covered table & rephrase your question\nWhat are the languages available for the set that card 'Angel of Mercy' is in?",
        "question_id": 360,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                109,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            108,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            1,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        49,
                                        false
                                    ],
                                    null
                                ],
                                "\"Angel of Mercy\"",
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(T.molecule_id) FROM molecule AS T WHERE T.label = '+'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "label = '+' mean molecules are carcinogenic;",
        "question": "How many chemical compounds in the database are identified as carcinogenic.",
        "question_id": 291,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"+\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT notes FROM income WHERE source = 'Fundraising' AND date_received = '2019-09-14'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "fundraising on 2019/9/14 refers to source = 'Fundraising' where date_received = '2019-09-14'",
        "question": "What was the notes of the fundraising on 2019/9/14?",
        "question_id": 1344,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                38,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            37,
                            false
                        ],
                        null
                    ],
                    "\"Fundraising\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            35,
                            false
                        ],
                        null
                    ],
                    "\"2019-09-14\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DISTINCT ID FROM Laboratory WHERE Date BETWEEN '1987-07-06' AND '1996-01-31' AND GPT > 30 AND ALB < 4",
        "db_id": "thrombosis_prediction",
        "difficulty": "moderate",
        "evidence": "examined between 1987/7/6 and 1996/1/31 refers to Date BETWEEN '1987-07-06' AND '1996-01-31'; GPT level greater than 30 refers to GPT > 30; ALB level less than 4 ALB < 4",
        "question": "How many patients who were examined between 1987/7/6 and 1996/1/31 had a GPT level greater than 30 and an ALB level less than 4? List them by their ID.",
        "question_id": 1187,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    "\"1987-07-06\"",
                    "\"1996-01-31\""
                ],
                "and",
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            24,
                            false
                        ],
                        null
                    ],
                    30.0,
                    null
                ],
                "and",
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            28,
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Website FROM schools WHERE County = 'San Joaquin' AND Virtual = 'P' AND Charter = 1",
        "db_id": "california_schools",
        "difficulty": "simple",
        "evidence": "Virtual = 'P' means partially virtual; Charter schools refers to Charter = 1 in the table schools",
        "question": "What are the websites for all the partially virtual chartered schools located in San Joaquin?",
        "question_id": 60,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                60,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ],
                    "\"San Joaquin\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            76,
                            false
                        ],
                        null
                    ],
                    "\"P\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            63,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT id FROM cards WHERE borderColor = 'black' GROUP BY id",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "border with black color refers to borderColor = 'black'",
        "question": "How many card border with black color ? List out the card id.",
        "question_id": 435,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"black\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT lat, lng FROM circuits WHERE country = 'USA'",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "location coordinates refers to (lat, lng); the US refers to country = 'USA';",
        "question": "Please list the location coordinates of the US circuits.",
        "question_id": 946,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"USA\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DISTINCT availability FROM cards WHERE artist = 'Aleksi Briclot' AND isTextless = 1",
        "db_id": "card_games",
        "difficulty": "moderate",
        "evidence": "created by Aleksi Briclot refers to artist = 'Aleksi Briclot'; doesn't have a text box refers to isTextless = 1; available printing types refers to availability",
        "question": "What are the available printing types of the cards that doesn't have a text box created by Aleksi Briclot?",
        "question_id": 508,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Aleksi Briclot\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            34,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR000' ORDER BY T.element LIMIT 3",
        "db_id": "toxicology",
        "difficulty": "challenging",
        "evidence": "TR000 is the molecule id;",
        "question": "Please list top three elements of the toxicology of the molecule TR000 in alphabetical order.",
        "question_id": 220,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 3,
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"TR000\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 10",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "heaviest refers to MAX(weight)",
        "question": "What are the player api id of 10 heaviest players?",
        "question_id": 1117,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 10,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            49,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                44,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT COUNT(id) FROM Player_Attributes WHERE overall_rating BETWEEN 60 AND 65 AND defensive_work_rate = 'low'",
        "db_id": "european_football_2",
        "difficulty": "moderate",
        "evidence": "overall_rating > = 60 AND overall_rating < 65; players whose going to be in all of your attack moves instead of defensing refers to defensive_work_rate = 'low';",
        "question": "Among the players with an overall rating between 60 to 65, how many players whose going to be in all of your attack moves instead of defensing?",
        "question_id": 1023,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    60.0,
                    65.0
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "\"low\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT setCode FROM set_translations WHERE language = 'Spanish'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "Spanish refer to language; set code refers to setCode",
        "question": "Lists the set code of all cards translated into Spanish.",
        "question_id": 400,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                110,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            109,
                            false
                        ],
                        null
                    ],
                    "\"Spanish\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(driverId) FROM driverStandings WHERE raceId = 18",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "",
        "question": "How many driver participated in race ID number 18?",
        "question_id": 966,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                48,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            47,
                            false
                        ],
                        null
                    ],
                    18.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "total expense refers SUM(cost) where expense_date = '2019-08-20'",
        "question": "Mention the total expense used on 8/20/2019.",
        "question_id": 1409,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            29,
                            false
                        ],
                        null
                    ],
                    "\"2019-08-20\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Title FROM posts ORDER BY ViewCount DESC LIMIT 5",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "Higher view count means the post has higher popularity; the highest popularity refers to MAX(ViewCount);",
        "question": "What are the titles of the top 5 posts with the highest popularity?",
        "question_id": 658,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 5,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            31,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT keyruneCode FROM sets WHERE code = 'PKHC'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "keyrune code refers to keyruneCode",
        "question": "List the keyrune code for the set whose code is 'PKHC'.",
        "question_id": 489,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                97,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            91,
                            false
                        ],
                        null
                    ],
                    "\"PKHC\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT T4.amount FROM card AS T1 JOIN disp AS T2 ON T1.disp_id = T2.disp_id JOIN account AS T3 on T2.account_id = T3.account_id JOIN trans AS T4 on T3.account_id = T4.account_id WHERE T1.issued = '1996-10-21' ORDER BY T4.amount DESC LIMIT 1",
        "db_id": "financial",
        "difficulty": "simple",
        "evidence": "",
        "question": "What is the biggest amount of transaction that the client whose card was opened in 1996/10/21 made?",
        "question_id": 106,
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            47,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            51,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                51,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "\"1996-10-21\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM posts WHERE Score = 10",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "score of 10 refers to Score = 10; post refers to Id",
        "question": "How many posts have a score of 10 on the list?",
        "question_id": 609,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            30,
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT id FROM cards WHERE frameEffects = 'extendedart' GROUP BY id",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "\nframe effect as extendedart refers to frameEffects = 'extendedart'\n",
        "question": "How many cards have frame effect as extendedart? List out the id of those cards.",
        "question_id": 436,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    "\"extendedart\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT keyruneCode FROM sets WHERE code = 'PKHC'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "keyrune code refers to keyruneCode",
        "question": "List the keyrune code for the set whose code is 'PKHC'.",
        "question_id": 489,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                97,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            91,
                            false
                        ],
                        null
                    ],
                    "\"PKHC\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Text FROM comments WHERE PostId IN ( SELECT Id FROM posts WHERE ViewCount BETWEEN 100 AND 150 ) ORDER BY Score DESC LIMIT 1",
        "db_id": "codebase_community",
        "difficulty": "moderate",
        "evidence": "views ranging from 100 to 150 refers to ViewCount BETWEEN 100 and 150; comment with the highest score refers to Text where MAX(Score);",
        "question": "Among the posts with views ranging from 100 to 150, what is the comment with the highest score?",
        "question_id": 707,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    4
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            26,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                1,
                                [
                                    0,
                                    [
                                        0,
                                        31,
                                        false
                                    ],
                                    null
                                ],
                                100.0,
                                150.0
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit'",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "location coordinates refers to (lat, lng); Silverstone Circuit refers to circuits.name = 'Silverstone Circuit'",
        "question": "What's the location coordinates of Silverstone Circuit?",
        "question_id": 910,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Silverstone Circuit\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit'",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "location coordinates refers to (lat, lng); Silverstone Circuit refers to circuits.name = 'Silverstone Circuit'",
        "question": "What's the location coordinates of Silverstone Circuit?",
        "question_id": 910,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Silverstone Circuit\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT language FROM set_translations WHERE id IN ( SELECT id FROM cards WHERE name = 'Angel of Mercy' )",
        "db_id": "card_games",
        "difficulty": "moderate",
        "evidence": "Angel of Mercy' is the name of card;",
        "question": "cards are not directly linked to language but through table 'set'. you need to add set in covered table & rephrase your question\nWhat are the languages available for the set that card 'Angel of Mercy' is in?",
        "question_id": 360,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                109,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            108,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            1,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        49,
                                        false
                                    ],
                                    null
                                ],
                                "\"Angel of Mercy\"",
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DisplayName, WebsiteUrl FROM users WHERE Id = ( SELECT UserId FROM votes WHERE VoteTypeId = 8 ORDER BY BountyAmount DESC LIMIT 1 )",
        "db_id": "codebase_community",
        "difficulty": "moderate",
        "evidence": "vote type of 8 refers to VoteTypeId = 8; the highest bounty amount refers to MAX(BountyAmount);",
        "question": "Under the vote type of 8, provide the display names and websites URLs of the user who got the highest bounty amount.",
        "question_id": 657,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                55,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                57,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            52,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    7
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": 1,
                        "orderBy": [
                            "desc",
                            [
                                [
                                    0,
                                    [
                                        0,
                                        71,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        ],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            70,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        68,
                                        false
                                    ],
                                    null
                                ],
                                8.0,
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT T.bond_type FROM bond AS T WHERE T.bond_id = 'TR007_4_19'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "double bond refers to bond_type = ' = '; single bond refers to bond_type = '-'; triple bond refers to bond_type = '#';",
        "question": "What is the bond type of TR007_4_19?",
        "question_id": 301,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"TR007_4_19\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(Id) FROM tags WHERE TagName = 'careers'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "tag specified as 'careers' refers to TagName = 'careers';",
        "question": "Count the number of posts with a tag specified as 'careers'.",
        "question_id": 696,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                47,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            48,
                            false
                        ],
                        null
                    ],
                    "\"careers\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR001'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "TR001 is the molecule id",
        "question": "List the toxicology elements associated with molecule TR001.",
        "question_id": 274,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"TR001\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT name, date FROM races WHERE year = 1999 ORDER BY round DESC LIMIT 1",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "the last round refers to max(round);",
        "question": "State the name and date of the last round of race in year 1999.",
        "question_id": 885,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            28,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                31,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    1999.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT T.element FROM atom AS T WHERE T.atom_id = 'TR000_1'",
        "db_id": "toxicology",
        "difficulty": "challenging",
        "evidence": "atom with ID refers to atom_id; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium",
        "question": "What is the element of toxicology for the atom with the ID of TR000_1?",
        "question_id": 322,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    "\"TR000_1\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(*) FROM cards WHERE power = '*'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "infinite power refers to power = '*';",
        "question": "How many cards have infinite power?",
        "question_id": 356,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            55,
                            false
                        ],
                        null
                    ],
                    "\"*\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT id, language FROM set_translations WHERE id = ( SELECT id FROM cards WHERE convertedManaCost = 5 ) AND setCode = '10E'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "set 10E refers to setCode = '10E'; converted mana of 5 refers to convertedManaCost = 5;",
        "question": "What are the cards in set 10E with converted mana of 5 have translation and what are the languages?",
        "question_id": 388,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                108,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                109,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            108,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            1,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        11,
                                        false
                                    ],
                                    null
                                ],
                                5.0,
                                null
                            ]
                        ]
                    },
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            110,
                            false
                        ],
                        null
                    ],
                    "\"10E\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT superhero_name FROM superhero ORDER BY height_cm DESC LIMIT 1",
        "db_id": "superhero",
        "difficulty": "simple",
        "evidence": "who refers to superhero_name; tallest superhero refers to MAX(height_cm);",
        "question": "Who is the tallest superhero?",
        "question_id": 802,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT DisplayName, Age FROM users WHERE Views = ( SELECT MAX(Views) FROM users )",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "the highest in views refers to MAX(Views);",
        "question": "What are the display names and ages of user who got the highest in views?",
        "question_id": 643,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                55,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                64,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            60,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    6
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            60,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT full_name FROM superhero WHERE superhero_name = 'Alien'",
        "db_id": "superhero",
        "difficulty": "simple",
        "evidence": "",
        "question": "Provide the full name of the superhero named Alien.",
        "question_id": 838,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    "\"Alien\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(t1.id) FROM Player_Attributes AS t1 WHERE t1.preferred_foot = 'left' AND t1.crossing = ( SELECT MAX(crossing) FROM Player_Attributes)",
        "db_id": "european_football_2",
        "difficulty": "moderate",
        "evidence": "highest potential score for crossing refers to MAX(crossing); preferred to use their left foots while attacking refers to preferred_foot = 'left'",
        "question": "How many players had the highest potential score for crossing that preferred to use their left foots while attacking?",
        "question_id": 1136,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"left\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            10,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT edhrecRank FROM cards WHERE frameVersion = 2015",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "",
        "question": "List the edhrecRank for cards with frame version 2015.",
        "question_id": 380,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    2015.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Title FROM posts ORDER BY ViewCount DESC LIMIT 5",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "Higher view count means the post has higher popularity; the highest popularity refers to MAX(ViewCount);",
        "question": "What are the titles of the top 5 posts with the highest popularity?",
        "question_id": 658,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 5,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            31,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT T4.amount FROM card AS T1 JOIN disp AS T2 ON T1.disp_id = T2.disp_id JOIN account AS T3 on T2.account_id = T3.account_id JOIN trans AS T4 on T3.account_id = T4.account_id WHERE T1.issued = '1996-10-21' ORDER BY T4.amount DESC LIMIT 1",
        "db_id": "financial",
        "difficulty": "simple",
        "evidence": "",
        "question": "What is the biggest amount of transaction that the client whose card was opened in 1996/10/21 made?",
        "question_id": 106,
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            47,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            51,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                51,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "\"1996-10-21\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Text FROM comments WHERE CreationDate = '2010-07-19 19:16:14.0'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "detailed content of the comment refers to Text; created on 7/19/2010 7:16:14 PM refers to CreationDate = '2010-07-19 19:16:14.0'",
        "question": "State the detailed content of the comment which was created on 7/19/2010 7:25:47 PM.",
        "question_id": 608,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "\"2010-07-19 19:16:14.0\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT lat, lng FROM circuits WHERE country = 'USA'",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "location coordinates refers to (lat, lng); the US refers to country = 'USA';",
        "question": "Please list the location coordinates of the US circuits.",
        "question_id": 946,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"USA\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT id FROM cards WHERE borderColor = 'black' GROUP BY id",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "border with black color refers to borderColor = 'black'",
        "question": "How many card border with black color ? List out the card id.",
        "question_id": 435,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"black\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT layout FROM cards WHERE keywords = 'Flying'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "",
        "question": "What are the card layout of cards with keyword of flying?",
        "question_id": 376,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            36,
                            false
                        ],
                        null
                    ],
                    "\"Flying\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT type FROM sets WHERE name LIKE '%FROM the Vault: Lore%'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "set \"From the Vault refers to name which contains 'From the Vault: Lore'; expansion type refers to type",
        "question": "For the set \"From the Vault: Lore\", what is its expansion type?",
        "question_id": 492,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                107,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            102,
                            false
                        ],
                        null
                    ],
                    "\"%FROM the Vault: Lore%\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(*) FROM cards WHERE power = '*'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "infinite power refers to power = '*';",
        "question": "How many cards have infinite power?",
        "question_id": 356,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                0,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            55,
                            false
                        ],
                        null
                    ],
                    "\"*\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT name FROM sets WHERE code = 'ALL'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "",
        "question": "List out the set name of the set code \"ALL\".",
        "question_id": 439,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                102,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            91,
                            false
                        ],
                        null
                    ],
                    "\"ALL\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DisplayName FROM users WHERE Age BETWEEN 19 AND 65",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "adults refer to users where Age BETWEEN 19 and 65;",
        "question": "Please list all display names of users who are adults.",
        "question_id": 676,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                55,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            64,
                            false
                        ],
                        null
                    ],
                    19.0,
                    65.0
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(player_api_id) FROM Player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'low'",
        "db_id": "european_football_2",
        "difficulty": "moderate",
        "evidence": "preferred foot when attacking was the left refers to preferred_foot = 'left'; players who would remain in his position when the team attacked refers to attacking_work_rate = 'low';",
        "question": "Among the players whose preferred foot was the left foot when attacking, how many of them would remain in his position when the team attacked?",
        "question_id": 1080,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"left\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "\"low\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(T.molecule_id) FROM molecule AS T WHERE T.label = '+'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "label = '+' mean molecules are carcinogenic;",
        "question": "How many chemical compounds in the database are identified as carcinogenic.",
        "question_id": 291,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"+\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT keyruneCode FROM sets WHERE code = 'PKHC'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "keyrune code refers to keyruneCode",
        "question": "List the keyrune code for the set whose code is 'PKHC'.",
        "question_id": 489,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                97,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            91,
                            false
                        ],
                        null
                    ],
                    "\"PKHC\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(Id) FROM posts WHERE ViewCount > 35000 AND CommentCount = 0",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "have been viewed over 35000 times refers to ViewCount > 35000; received no comments refers to CommentCount = 0;",
        "question": "Identify the number of posts that have been viewed over 35000 times but have received no comments from other users.",
        "question_id": 688,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            31,
                            false
                        ],
                        null
                    ],
                    35000.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            38,
                            false
                        ],
                        null
                    ],
                    0.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT team_long_name FROM Team WHERE team_short_name = 'GEN'",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "long name for the team refers to team_long_name; team_short_name = 'GEN';",
        "question": "What's the long name for the team GEN?",
        "question_id": 1077,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                58,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            59,
                            false
                        ],
                        null
                    ],
                    "\"GEN\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(city) FROM zip_code WHERE county = 'Orange County' AND state = 'Virginia'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "Orange County is the county name, Virginia is the state name",
        "question": "How many cities are there in Orange County, Virginia?",
        "question_id": 1362,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"Orange County\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ],
                    "\"Virginia\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM cards WHERE originalType = 'Summon - Angel' AND subtypes != 'Angel'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "subtype other than Angel refers to subtypes is not 'Angel';",
        "question": "How many cards with original type of \"Summon - Angel\" have subtype other than \"Angel\"?",
        "question_id": 377,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            53,
                            false
                        ],
                        null
                    ],
                    "\"Summon - Angel\"",
                    null
                ],
                "and",
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            65,
                            false
                        ],
                        null
                    ],
                    "\"Angel\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR004'",
        "db_id": "toxicology",
        "difficulty": "challenging",
        "evidence": "TR004 is the molecule id;",
        "question": "List all the elements of the toxicology of the molecule \"TR004\".",
        "question_id": 240,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"TR004\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(major_name) FROM major WHERE college = 'College of Humanities and Social Sciences'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "",
        "question": "How many majors are there in \"College of Humanities and Social Sciences\"?",
        "question_id": 1345,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"College of Humanities and Social Sciences\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT sprint_speed, agility, acceleration FROM Player_Attributes WHERE player_api_id IN ( SELECT player_api_id FROM Player WHERE player_name = 'Alexis Blin' )",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "Alexis Blin's refers to player_name = 'Alexis Blin'",
        "question": "What are Alexis Blin's sprint speed, agility, and acceleration scores?",
        "question_id": 1140,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            44,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        45,
                                        false
                                    ],
                                    null
                                ],
                                "\"Alexis Blin\"",
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT AVG(LDH) FROM Laboratory WHERE LDH < 500",
        "db_id": "thrombosis_prediction",
        "difficulty": "simple",
        "evidence": "average index of the lactate dehydrogenase (LDH) refers to AVG(LDH); (LDH) within the normal range refers to LDH < 500",
        "question": "What is the average index of the lactate dehydrogenase (LDH) for all patients with lactate dehydrogenase (LDH) within the normal range.",
        "question_id": 1210,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            25,
                            false
                        ],
                        null
                    ],
                    500.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT artist FROM cards WHERE flavorName = 'Battra, Dark Destroyer'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "promotional name is \"Battra, Dark Destroyer\" refers to flavorName = 'Battra, Dark Destroyer'",
        "question": "Which artist designed the card whose promotional name is \"Battra, Dark Destroyer\"?",
        "question_id": 460,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ],
                    "\"Battra, Dark Destroyer\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT name FROM cards ORDER BY faceConvertedManaCost LIMIT 1",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "more converted mana for the face refers to Max(faceConvertedManaCost);",
        "question": "List the card names with value that cost more converted mana for the face.",
        "question_id": 342,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                49,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT T.bond_type FROM bond AS T WHERE T.bond_id = 'TR007_4_19'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "double bond refers to bond_type = ' = '; single bond refers to bond_type = '-'; triple bond refers to bond_type = '#';",
        "question": "What is the bond type of TR007_4_19?",
        "question_id": 301,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"TR007_4_19\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DisplayName, WebsiteUrl FROM users WHERE Id = ( SELECT UserId FROM votes WHERE VoteTypeId = 8 ORDER BY BountyAmount DESC LIMIT 1 )",
        "db_id": "codebase_community",
        "difficulty": "moderate",
        "evidence": "vote type of 8 refers to VoteTypeId = 8; the highest bounty amount refers to MAX(BountyAmount);",
        "question": "Under the vote type of 8, provide the display names and websites URLs of the user who got the highest bounty amount.",
        "question_id": 657,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                55,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                57,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            52,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    7
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": 1,
                        "orderBy": [
                            "desc",
                            [
                                [
                                    0,
                                    [
                                        0,
                                        71,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        ],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            70,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        68,
                                        false
                                    ],
                                    null
                                ],
                                8.0,
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Id FROM users WHERE Reputation = ( SELECT MAX(Reputation) FROM users )",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "highest reputation refers to Max(Reputation)",
        "question": "Which user ID has the highest reputation?",
        "question_id": 589,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                52,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            53,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    6
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            53,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT artist FROM cards WHERE flavorName = 'Battra, Dark Destroyer'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "promotional name is \"Battra, Dark Destroyer\" refers to flavorName = 'Battra, Dark Destroyer'",
        "question": "Which artist designed the card whose promotional name is \"Battra, Dark Destroyer\"?",
        "question_id": 460,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ],
                    "\"Battra, Dark Destroyer\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Symptoms FROM Examination WHERE Diagnosis = 'SLE' GROUP BY Symptoms ORDER BY COUNT(Symptoms) DESC LIMIT 1",
        "db_id": "thrombosis_prediction",
        "difficulty": "simple",
        "evidence": "the most common sign refers to MAX(symptoms); 'SLE' refers to diagnosis",
        "question": "What is the most common sign of patients with SLE disease?",
        "question_id": 1196,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    12,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            12,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "\"SLE\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-25' GROUP BY CustomerID ORDER BY SUM(Price) DESC LIMIT 1",
        "db_id": "debit_card_specializing",
        "difficulty": "simple",
        "evidence": "'2012/8/25' can be represented by '2012-08-25'",
        "question": "Which customer paid the most in 2012/8/25?",
        "question_id": 1512,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    13,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            4,
                            18,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"2012-08-25\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 10",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "heaviest refers to MAX(weight)",
        "question": "What are the player api id of 10 heaviest players?",
        "question_id": 1117,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 10,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            49,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                44,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT COUNT(driverId) FROM driverStandings WHERE raceId = 18",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "",
        "question": "How many driver participated in race ID number 18?",
        "question_id": 966,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                48,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            47,
                            false
                        ],
                        null
                    ],
                    18.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT LastEditDate, LastEditorUserId FROM posts WHERE Title = 'Detecting a given face in a database of facial images'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "Title = 'Detecting a given face in a database of facial images';",
        "question": "Provide the last edit date and last edit user ID for the post \"Detecting a given face in a database of facial images\".",
        "question_id": 644,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                41,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                40,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            35,
                            false
                        ],
                        null
                    ],
                    "\"Detecting a given face in a database of facial images\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(School) FROM schools WHERE DOC = 52 AND Charter = 1 AND City = 'Hickman'",
        "db_id": "california_schools",
        "difficulty": "simple",
        "evidence": "Elementary School District refers to DOC = 52; Chartered schools refer to Charter = 1 in the table schools",
        "question": "How many chartered schools located in the city of Hickman are owned by the Elementary School District?",
        "question_id": 61,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                47,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            66,
                            false
                        ],
                        null
                    ],
                    52.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            63,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            50,
                            false
                        ],
                        null
                    ],
                    "\"Hickman\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT manaCost FROM cards WHERE availability = 'mtgo,paper' AND borderColor = 'black' AND frameVersion = 2003 AND layout = 'normal'",
        "db_id": "card_games",
        "difficulty": "moderate",
        "evidence": "available in paper and mtgo refers to availability = 'mtgo,paper'; frameVersion = 2003;borderColor = 'black'",
        "question": "What is the mana cost of cards with a normal layout, a 2003 frame version, with a black border color, and available in paper and mtgo?",
        "question_id": 397,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                41,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"mtgo,paper\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"black\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    2003.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            37,
                            false
                        ],
                        null
                    ],
                    "\"normal\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Id FROM users WHERE Reputation = ( SELECT MAX(Reputation) FROM users )",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "highest reputation refers to Max(Reputation)",
        "question": "Which user ID has the highest reputation?",
        "question_id": 589,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                52,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            53,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    6
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            53,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(Id) FROM posts WHERE ViewCount > 35000 AND CommentCount = 0",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "have been viewed over 35000 times refers to ViewCount > 35000; received no comments refers to CommentCount = 0;",
        "question": "Identify the number of posts that have been viewed over 35000 times but have received no comments from other users.",
        "question_id": 688,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            31,
                            false
                        ],
                        null
                    ],
                    35000.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            38,
                            false
                        ],
                        null
                    ],
                    0.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(DISTINCT T.molecule_id) FROM bond AS T WHERE T.molecule_id BETWEEN 'TR004' AND 'TR010' AND T.bond_type = '-'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "single bond refers to bond_type = '-'; molecules between TR004 to TR010 refers molecule_id BETWEEN 'TR004' and 'TR010';",
        "question": "Among the molecules between TR004 to TR010, how many of them has single bonds?",
        "question_id": 332,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                5,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"TR004\"",
                    "\"TR010\""
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "\"-\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM users WHERE Age BETWEEN 19 AND 65",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "adult refers to user where Age BETWEEN 19 and 65;",
        "question": "How many users were adult?",
        "question_id": 627,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                52,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            64,
                            false
                        ],
                        null
                    ],
                    19.0,
                    65.0
                ]
            ]
        }
    },
    {
        "query": "SELECT MAX(spent) FROM budget",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "highest amount of budget spend refers to MAX(spent)",
        "question": "What is the highest amount of budget spend for an event?",
        "question_id": 1378,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        1,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT COUNT(T.bond_id) FROM bond AS T WHERE T.bond_type = '#'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "triple type bonds refers to bond_type = '#'",
        "question": "How many triple type bonds are there?",
        "question_id": 202,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "\"#\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(major_id) FROM major WHERE department = 'School of Applied Sciences, Technology and Education' AND college = 'College of Agriculture and Applied Sciences'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "",
        "question": "In the College of Agriculture and Applied Sciences, how many majors are under the department of School of Applied Sciences, Technology and Education?",
        "question_id": 1425,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"School of Applied Sciences, Technology and Education\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"College of Agriculture and Applied Sciences\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT duration FROM pitStops ORDER BY duration DESC LIMIT 1",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "longest time spent at pitstop refers to MAX(duration)",
        "question": "What was the longest time a driver had ever spent at a pit stop?",
        "question_id": 1005,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        9
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            64,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                64,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT Phone, Ext, School FROM schools WHERE Zip = '95203-3704'",
        "db_id": "california_schools",
        "difficulty": "simple",
        "evidence": "",
        "question": "What is the phone number and extension number for the school with the zip code 95203-3704? Indicate the school's name.",
        "question_id": 58,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                58,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                59,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                47,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            51,
                            false
                        ],
                        null
                    ],
                    "\"95203-3704\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT lat, lng FROM circuits WHERE country = 'USA'",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "location coordinates refers to (lat, lng); the US refers to country = 'USA';",
        "question": "Please list the location coordinates of the US circuits.",
        "question_id": 946,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"USA\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'",
        "db_id": "codebase_community",
        "difficulty": "moderate",
        "evidence": "\"Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer\" is the Title of post; views refers to ViewCount",
        "question": "How many views did the post titled 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer' get?",
        "question_id": 572,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                31,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            35,
                            false
                        ],
                        null
                    ],
                    "\"Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(t1.id) FROM Player_Attributes AS t1 WHERE t1.preferred_foot = 'left' AND t1.crossing = ( SELECT MAX(crossing) FROM Player_Attributes)",
        "db_id": "european_football_2",
        "difficulty": "moderate",
        "evidence": "highest potential score for crossing refers to MAX(crossing); preferred to use their left foots while attacking refers to preferred_foot = 'left'",
        "question": "How many players had the highest potential score for crossing that preferred to use their left foots while attacking?",
        "question_id": 1136,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"left\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            10,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DISTINCT artist FROM cards WHERE availability = 'arena' AND BorderColor = 'black'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "black borders refers to BorderColor = 'black'; available only in arena refers to availability = 'arena'",
        "question": "List the artists who illustrated cards with black borders which are available only in arena.",
        "question_id": 524,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"arena\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"black\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DISTINCT artist FROM cards WHERE availability = 'arena' AND BorderColor = 'black'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "black borders refers to BorderColor = 'black'; available only in arena refers to availability = 'arena'",
        "question": "List the artists who illustrated cards with black borders which are available only in arena.",
        "question_id": 524,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"arena\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"black\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT manaCost FROM cards WHERE availability = 'mtgo,paper' AND borderColor = 'black' AND frameVersion = 2003 AND layout = 'normal'",
        "db_id": "card_games",
        "difficulty": "moderate",
        "evidence": "available in paper and mtgo refers to availability = 'mtgo,paper'; frameVersion = 2003;borderColor = 'black'",
        "question": "What is the mana cost of cards with a normal layout, a 2003 frame version, with a black border color, and available in paper and mtgo?",
        "question_id": 397,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                41,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"mtgo,paper\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"black\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    2003.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            37,
                            false
                        ],
                        null
                    ],
                    "\"normal\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT player_api_id FROM Player_Attributes ORDER BY overall_rating DESC LIMIT 1",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "highest overall rating refers to MAX(overall_rating);",
        "question": "Which player has the highest overall rating? Indicate the player's api id.",
        "question_id": 1020,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT DISTINCT artist FROM cards WHERE availability = 'arena' AND BorderColor = 'black'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "black borders refers to BorderColor = 'black'; available only in arena refers to availability = 'arena'",
        "question": "List the artists who illustrated cards with black borders which are available only in arena.",
        "question_id": 524,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"arena\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"black\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT mcmId FROM sets WHERE code = 'SS2'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "magic card market id refers to mcmId",
        "question": "For the set which had 'SS2' as the code, what is its magic card market id?",
        "question_id": 490,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                98,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            91,
                            false
                        ],
                        null
                    ],
                    "\"SS2\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT id FROM sets WHERE type = 'commander' ORDER BY totalSetSize DESC LIMIT 1",
        "db_id": "card_games",
        "difficulty": "challenging",
        "evidence": "expansion type refers to type where type = 'commander'; totalSetSize: The total number of cards in the set, including promotional and related supplemental products but excluding Alchemy modifications; highest total number of cards refers to MAX(totalSetSize)",
        "question": "Among the sets whose expansion type is Commander, which set has the highest total number of cards including promotional and related supplemental products but excluding Alchemy modifications? Indicate the id of the set.",
        "question_id": 513,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            106,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                87,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            107,
                            false
                        ],
                        null
                    ],
                    "\"commander\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT lat, lng FROM circuits WHERE country = 'USA'",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "location coordinates refers to (lat, lng); the US refers to country = 'USA';",
        "question": "Please list the location coordinates of the US circuits.",
        "question_id": 946,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"USA\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT type FROM sets WHERE name LIKE '%FROM the Vault: Lore%'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "set \"From the Vault refers to name which contains 'From the Vault: Lore'; expansion type refers to type",
        "question": "For the set \"From the Vault: Lore\", what is its expansion type?",
        "question_id": 492,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                107,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            102,
                            false
                        ],
                        null
                    ],
                    "\"%FROM the Vault: Lore%\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit'",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "reference name refers to circuitRef; Marina Bay Street Circuit refers to circuits.name = 'Marina Bay Street Circuit'",
        "question": "What's the reference name of Marina Bay Street Circuit?",
        "question_id": 912,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Marina Bay Street Circuit\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(T.molecule_id) FROM molecule AS T WHERE T.label = '+'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "label = '+' mean molecules are carcinogenic;",
        "question": "How many chemical compounds in the database are identified as carcinogenic.",
        "question_id": 291,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"+\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM Player WHERE birthday > '1990' AND player_name LIKE 'Aaron%'",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "first name \"Aaron\" refers to player_name LIKE 'Aaron%'; born after the 1990s refers to birthday > '1990'",
        "question": "How many football players born after the 1990s have the first name \"Aaron\"?",
        "question_id": 1133,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                43,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            47,
                            false
                        ],
                        null
                    ],
                    "\"1990\"",
                    null
                ],
                "and",
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ],
                    "\"Aaron%\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT T.element FROM atom AS T WHERE T.atom_id = 'TR000_1'",
        "db_id": "toxicology",
        "difficulty": "challenging",
        "evidence": "atom with ID refers to atom_id; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium",
        "question": "What is the element of toxicology for the atom with the ID of TR000_1?",
        "question_id": 322,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    "\"TR000_1\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(major_id) FROM major WHERE department = 'School of Applied Sciences, Technology and Education' AND college = 'College of Agriculture and Applied Sciences'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "",
        "question": "In the College of Agriculture and Applied Sciences, how many majors are under the department of School of Applied Sciences, Technology and Education?",
        "question_id": 1425,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"School of Applied Sciences, Technology and Education\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"College of Agriculture and Applied Sciences\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(Id) FROM comments WHERE UserId = 13 AND Score < 60",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "negative comments refer to Score < 60;",
        "question": "How many negative comments were given by user ID 13?",
        "question_id": 645,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    13.0,
                    null
                ],
                "and",
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    60.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR151'",
        "db_id": "toxicology",
        "difficulty": "challenging",
        "evidence": "element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium",
        "question": "Which toxic element can be found in the molecule TR151?",
        "question_id": 290,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"TR151\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT translation FROM set_translations WHERE setCode IN ( SELECT code FROM sets WHERE name = 'Mirrodin' ) AND language = 'Chinese Simplified'",
        "db_id": "card_games",
        "difficulty": "moderate",
        "evidence": "Simplified Chinese translation refers to language = 'Chinese Simplified'; name of the set \"Mirrodin\" refers to name = 'Mirrodin'",
        "question": "Show the Simplified Chinese translation of the name of the set \"Mirrodin\"?",
        "question_id": 505,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                111,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            110,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    3
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            91,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        102,
                                        false
                                    ],
                                    null
                                ],
                                "\"Mirrodin\"",
                                null
                            ]
                        ]
                    },
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            109,
                            false
                        ],
                        null
                    ],
                    "\"Chinese Simplified\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT country FROM circuits ORDER BY alt DESC LIMIT 1",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "highest altitude refers to max(alt)",
        "question": "In which country can I find the circuit with the highest altitude?",
        "question_id": 913,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT translation FROM set_translations WHERE setCode IN ( SELECT code FROM sets WHERE name = 'Mirrodin' ) AND language = 'Chinese Simplified'",
        "db_id": "card_games",
        "difficulty": "moderate",
        "evidence": "Simplified Chinese translation refers to language = 'Chinese Simplified'; name of the set \"Mirrodin\" refers to name = 'Mirrodin'",
        "question": "Show the Simplified Chinese translation of the name of the set \"Mirrodin\"?",
        "question_id": 505,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                111,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            110,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    3
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            91,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        102,
                                        false
                                    ],
                                    null
                                ],
                                "\"Mirrodin\"",
                                null
                            ]
                        ]
                    },
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            109,
                            false
                        ],
                        null
                    ],
                    "\"Chinese Simplified\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT id FROM sets ORDER BY baseSetSize DESC LIMIT 1",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "the highest number of cards refers to MAX(baseSetSize); unique id refers to id",
        "question": "What is the unique id of the set that has the highest number of cards?",
        "question_id": 509,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            88,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                87,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT id FROM cards WHERE frameEffects = 'extendedart' GROUP BY id",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "\nframe effect as extendedart refers to frameEffects = 'extendedart'\n",
        "question": "How many cards have frame effect as extendedart? List out the id of those cards.",
        "question_id": 436,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    "\"extendedart\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT T.bond_type FROM bond AS T WHERE T.bond_id = 'TR007_4_19'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "double bond refers to bond_type = ' = '; single bond refers to bond_type = '-'; triple bond refers to bond_type = '#';",
        "question": "What is the bond type of TR007_4_19?",
        "question_id": 301,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"TR007_4_19\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DISTINCT ID FROM Laboratory WHERE Date BETWEEN '1987-07-06' AND '1996-01-31' AND GPT > 30 AND ALB < 4",
        "db_id": "thrombosis_prediction",
        "difficulty": "moderate",
        "evidence": "examined between 1987/7/6 and 1996/1/31 refers to Date BETWEEN '1987-07-06' AND '1996-01-31'; GPT level greater than 30 refers to GPT > 30; ALB level less than 4 ALB < 4",
        "question": "How many patients who were examined between 1987/7/6 and 1996/1/31 had a GPT level greater than 30 and an ALB level less than 4? List them by their ID.",
        "question_id": 1187,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    "\"1987-07-06\"",
                    "\"1996-01-31\""
                ],
                "and",
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            24,
                            false
                        ],
                        null
                    ],
                    30.0,
                    null
                ],
                "and",
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            28,
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Title FROM posts ORDER BY ViewCount DESC LIMIT 5",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "Higher view count means the post has higher popularity; the highest popularity refers to MAX(ViewCount);",
        "question": "What are the titles of the top 5 posts with the highest popularity?",
        "question_id": 658,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 5,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            31,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT translation FROM set_translations WHERE setCode IN ( SELECT code FROM sets WHERE name = 'Mirrodin' ) AND language = 'Chinese Simplified'",
        "db_id": "card_games",
        "difficulty": "moderate",
        "evidence": "Simplified Chinese translation refers to language = 'Chinese Simplified'; name of the set \"Mirrodin\" refers to name = 'Mirrodin'",
        "question": "Show the Simplified Chinese translation of the name of the set \"Mirrodin\"?",
        "question_id": 505,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                111,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            110,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    3
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            91,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        102,
                                        false
                                    ],
                                    null
                                ],
                                "\"Mirrodin\"",
                                null
                            ]
                        ]
                    },
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            109,
                            false
                        ],
                        null
                    ],
                    "\"Chinese Simplified\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(Id) FROM tags WHERE TagName = 'careers'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "tag specified as 'careers' refers to TagName = 'careers';",
        "question": "Count the number of posts with a tag specified as 'careers'.",
        "question_id": 696,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                47,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            48,
                            false
                        ],
                        null
                    ],
                    "\"careers\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT label FROM molecule AS T WHERE T.molecule_id = 'TR000'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic",
        "question": "Is molecule TR000 is carcinogenic or not?",
        "question_id": 323,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"TR000\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DISTINCT availability FROM cards WHERE artist = 'Aleksi Briclot' AND isTextless = 1",
        "db_id": "card_games",
        "difficulty": "moderate",
        "evidence": "created by Aleksi Briclot refers to artist = 'Aleksi Briclot'; doesn't have a text box refers to isTextless = 1; available printing types refers to availability",
        "question": "What are the available printing types of the cards that doesn't have a text box created by Aleksi Briclot?",
        "question_id": 508,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Aleksi Briclot\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            34,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM users WHERE Age BETWEEN 19 AND 65",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "adult refers to user where Age BETWEEN 19 and 65;",
        "question": "How many users were adult?",
        "question_id": 627,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                52,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            64,
                            false
                        ],
                        null
                    ],
                    19.0,
                    65.0
                ]
            ]
        }
    },
    {
        "query": "SELECT layout FROM cards WHERE keywords = 'Flying'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "",
        "question": "What are the card layout of cards with keyword of flying?",
        "question_id": 376,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            36,
                            false
                        ],
                        null
                    ],
                    "\"Flying\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(T.atom_id) FROM atom AS T WHERE T.element = 'c' OR T.element = 'h'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "consisting of element carbon and hydrogen refers to element in('c', 'h')",
        "question": "Calculate the total atoms consisting of the element carbon and hydrogen.",
        "question_id": 256,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"c\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"h\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT id FROM sets WHERE type = 'commander' ORDER BY totalSetSize DESC LIMIT 1",
        "db_id": "card_games",
        "difficulty": "challenging",
        "evidence": "expansion type refers to type where type = 'commander'; totalSetSize: The total number of cards in the set, including promotional and related supplemental products but excluding Alchemy modifications; highest total number of cards refers to MAX(totalSetSize)",
        "question": "Among the sets whose expansion type is Commander, which set has the highest total number of cards including promotional and related supplemental products but excluding Alchemy modifications? Indicate the id of the set.",
        "question_id": 513,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            106,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                87,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            107,
                            false
                        ],
                        null
                    ],
                    "\"commander\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM cards WHERE hAND = '-1' AND artist = 'UDON' AND Availability = 'mtgo' ",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "UDON refer to artist; availabe in mtgo refers to availability = 'mtgo'; starting maximum hand size of -1 refers to hand = -1",
        "question": "How many cards designed by UDON and available in mtgo print type has a starting maximum hand size of -1?",
        "question_id": 395,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ],
                    "\"-1\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"UDON\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"mtgo\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT LastEditDate, LastEditorUserId FROM posts WHERE Title = 'Detecting a given face in a database of facial images'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "Title = 'Detecting a given face in a database of facial images';",
        "question": "Provide the last edit date and last edit user ID for the post \"Detecting a given face in a database of facial images\".",
        "question_id": 644,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                41,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                40,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            35,
                            false
                        ],
                        null
                    ],
                    "\"Detecting a given face in a database of facial images\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Id, DisplayName FROM users WHERE Views = ( SELECT MAX(Views) FROM users )",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "users have the highest number of views refer to DisplayName where MAX(Views);",
        "question": "Which users have the highest number of views?",
        "question_id": 628,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                52,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                55,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            60,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    6
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            60,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT T2.category, SUM(T2.amount) FROM event AS T1 JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'April Speaker' GROUP BY T2.category ORDER BY SUM(T2.amount) ASC",
        "db_id": "student_club",
        "difficulty": "moderate",
        "evidence": "'April Speaker' is an event name; amount budgeted refers to SUM(amount); budget categories refers to category",
        "question": "Calculate the amount budgeted for 'April Speaker' event. List all the budgeted categories for said event in an ascending order based on their amount budgeted.",
        "question_id": 1405,
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            26,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    21,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            4,
                            24,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"April Speaker\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DisplayName FROM users WHERE Age BETWEEN 19 AND 65",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "adults refer to users where Age BETWEEN 19 and 65;",
        "question": "Please list all display names of users who are adults.",
        "question_id": 676,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                55,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            64,
                            false
                        ],
                        null
                    ],
                    19.0,
                    65.0
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "are oversized refers to isOversized = 1; reprinted refers to isReprint = 1; printed for promotions refers to isPromo = 1",
        "question": "How many cards are oversized, reprinted, and printed for promotions?",
        "question_id": 420,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            28,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            30,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            29,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT player_name FROM Player WHERE height > 180",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "height>180;",
        "question": "Please list player names which are higher than 180.",
        "question_id": 1059,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                45,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            48,
                            false
                        ],
                        null
                    ],
                    180.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT id, language FROM set_translations WHERE id = ( SELECT id FROM cards WHERE convertedManaCost = 5 ) AND setCode = '10E'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "set 10E refers to setCode = '10E'; converted mana of 5 refers to convertedManaCost = 5;",
        "question": "What are the cards in set 10E with converted mana of 5 have translation and what are the languages?",
        "question_id": 388,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                108,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                109,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            108,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            1,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        11,
                                        false
                                    ],
                                    null
                                ],
                                5.0,
                                null
                            ]
                        ]
                    },
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            110,
                            false
                        ],
                        null
                    ],
                    "\"10E\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT name FROM foreign_data WHERE uuid IN ( SELECT uuid FROM cards WHERE types = 'Creature' AND layout = 'normal' AND borderColor = 'black' AND artist = 'Matthew D. Wilson' ) AND language = 'French'",
        "db_id": "card_games",
        "difficulty": "moderate",
        "evidence": "in French refers to language = 'French'; black border color refers to borderColor = 'black'",
        "question": "What is the foreign name of the card in French of type Creature, normal layout and black border color, by artist Matthew D. Wilson?",
        "question_id": 412,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                79,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            82,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            72,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        71,
                                        false
                                    ],
                                    null
                                ],
                                "\"Creature\"",
                                null
                            ],
                            "and",
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        37,
                                        false
                                    ],
                                    null
                                ],
                                "\"normal\"",
                                null
                            ],
                            "and",
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        5,
                                        false
                                    ],
                                    null
                                ],
                                "\"black\"",
                                null
                            ],
                            "and",
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        2,
                                        false
                                    ],
                                    null
                                ],
                                "\"Matthew D. Wilson\"",
                                null
                            ]
                        ]
                    },
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            77,
                            false
                        ],
                        null
                    ],
                    "\"French\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Title FROM posts ORDER BY ViewCount DESC LIMIT 5",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "Higher view count means the post has higher popularity; the highest popularity refers to MAX(ViewCount);",
        "question": "What are the titles of the top 5 posts with the highest popularity?",
        "question_id": 658,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 5,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            31,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT COUNT(member_id) FROM member WHERE position = 'Member' AND t_shirt_size = 'X-Large'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "among the members refers to position = 'Member'; extra large t-shirt size refers to t_shirt_size = 'X-Large'",
        "question": "Among the members, how many of them have an extra large t-shirt size?",
        "question_id": 1424,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                40,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            44,
                            false
                        ],
                        null
                    ],
                    "\"Member\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ],
                    "\"X-Large\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(major_name) FROM major WHERE college = 'College of Humanities and Social Sciences'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "",
        "question": "How many majors are there in \"College of Humanities and Social Sciences\"?",
        "question_id": 1345,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"College of Humanities and Social Sciences\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM cards WHERE originalType = 'Summon - Angel' AND subtypes != 'Angel'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "subtype other than Angel refers to subtypes is not 'Angel';",
        "question": "How many cards with original type of \"Summon - Angel\" have subtype other than \"Angel\"?",
        "question_id": 377,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            53,
                            false
                        ],
                        null
                    ],
                    "\"Summon - Angel\"",
                    null
                ],
                "and",
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            65,
                            false
                        ],
                        null
                    ],
                    "\"Angel\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DisplayName FROM users WHERE Age BETWEEN 19 AND 65",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "adults refer to users where Age BETWEEN 19 and 65;",
        "question": "Please list all display names of users who are adults.",
        "question_id": 676,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                55,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            64,
                            false
                        ],
                        null
                    ],
                    19.0,
                    65.0
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(Id) FROM users WHERE Location = 'New York'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "New York refers to Location;",
        "question": "How many users were from New York?",
        "question_id": 625,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                52,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            58,
                            false
                        ],
                        null
                    ],
                    "\"New York\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(Id) FROM posts WHERE ViewCount > 35000 AND CommentCount = 0",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "have been viewed over 35000 times refers to ViewCount > 35000; received no comments refers to CommentCount = 0;",
        "question": "Identify the number of posts that have been viewed over 35000 times but have received no comments from other users.",
        "question_id": 688,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            31,
                            false
                        ],
                        null
                    ],
                    35000.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            38,
                            false
                        ],
                        null
                    ],
                    0.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Id, DisplayName FROM users WHERE Views = ( SELECT MAX(Views) FROM users )",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "users have the highest number of views refer to DisplayName where MAX(Views);",
        "question": "Which users have the highest number of views?",
        "question_id": 628,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                52,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                55,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            60,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    6
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            60,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT raceId FROM races WHERE year = 2009",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "",
        "question": "List out the Id number of races which were hold in 2009.",
        "question_id": 965,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    2009.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Text FROM comments WHERE CreationDate = '2010-07-19 19:16:14.0'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "detailed content of the comment refers to Text; created on 7/19/2010 7:16:14 PM refers to CreationDate = '2010-07-19 19:16:14.0'",
        "question": "State the detailed content of the comment which was created on 7/19/2010 7:25:47 PM.",
        "question_id": 608,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "\"2010-07-19 19:16:14.0\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR001'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "TR001 is the molecule id",
        "question": "List the toxicology elements associated with molecule TR001.",
        "question_id": 274,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"TR001\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(Id) FROM users WHERE Upvotes > 100 AND Downvotes > 1",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "more than 100 upvotes refers to Upvotes > 100; more than 1 downvotes refers to Downvotes > 1",
        "question": "Among the users who have more than 100 upvotes, how many of them have more then 1 downvotes?",
        "question_id": 535,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                52,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            61,
                            false
                        ],
                        null
                    ],
                    100.0,
                    null
                ],
                "and",
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            62,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT team_long_name FROM Team WHERE team_short_name = 'GEN'",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "long name for the team refers to team_long_name; team_short_name = 'GEN';",
        "question": "What's the long name for the team GEN?",
        "question_id": 1077,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                58,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            59,
                            false
                        ],
                        null
                    ],
                    "\"GEN\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT superhero_name FROM superhero ORDER BY height_cm DESC LIMIT 1",
        "db_id": "superhero",
        "difficulty": "simple",
        "evidence": "who refers to superhero_name; tallest superhero refers to MAX(height_cm);",
        "question": "Who is the tallest superhero?",
        "question_id": 802,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT name, date FROM races WHERE year = 1999 ORDER BY round DESC LIMIT 1",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "the last round refers to max(round);",
        "question": "State the name and date of the last round of race in year 1999.",
        "question_id": 885,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            28,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                31,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    1999.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 10",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "heaviest refers to MAX(weight)",
        "question": "What are the player api id of 10 heaviest players?",
        "question_id": 1117,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 10,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            49,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                44,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT layout FROM cards WHERE keywords = 'Flying'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "",
        "question": "What are the card layout of cards with keyword of flying?",
        "question_id": 376,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            36,
                            false
                        ],
                        null
                    ],
                    "\"Flying\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT name FROM races WHERE year = 2017 AND name NOT IN ( SELECT name FROM races WHERE year = 2000 )",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "not hosted means not in;",
        "question": "Name the races in year 2017 that are not hosted in year 2000.",
        "question_id": 887,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    2017.0,
                    null
                ],
                "and",
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            30,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    4
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            30,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        27,
                                        false
                                    ],
                                    null
                                ],
                                2000.0,
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(Id) FROM users WHERE Location = 'New York'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "New York refers to Location;",
        "question": "How many users were from New York?",
        "question_id": 625,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                52,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            58,
                            false
                        ],
                        null
                    ],
                    "\"New York\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'",
        "db_id": "codebase_community",
        "difficulty": "moderate",
        "evidence": "\"Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer\" is the Title of post; views refers to ViewCount",
        "question": "How many views did the post titled 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer' get?",
        "question_id": 572,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                31,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            35,
                            false
                        ],
                        null
                    ],
                    "\"Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Website FROM schools WHERE County = 'San Joaquin' AND Virtual = 'P' AND Charter = 1",
        "db_id": "california_schools",
        "difficulty": "simple",
        "evidence": "Virtual = 'P' means partially virtual; Charter schools refers to Charter = 1 in the table schools",
        "question": "What are the websites for all the partially virtual chartered schools located in San Joaquin?",
        "question_id": 60,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                60,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ],
                    "\"San Joaquin\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            76,
                            false
                        ],
                        null
                    ],
                    "\"P\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            63,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM Player WHERE birthday > '1990' AND player_name LIKE 'Aaron%'",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "first name \"Aaron\" refers to player_name LIKE 'Aaron%'; born after the 1990s refers to birthday > '1990'",
        "question": "How many football players born after the 1990s have the first name \"Aaron\"?",
        "question_id": 1133,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                43,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            47,
                            false
                        ],
                        null
                    ],
                    "\"1990\"",
                    null
                ],
                "and",
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ],
                    "\"Aaron%\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM posts WHERE Score = 10",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "score of 10 refers to Score = 10; post refers to Id",
        "question": "How many posts have a score of 10 on the list?",
        "question_id": 609,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            30,
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT hero_id FROM hero_attribute WHERE attribute_value = ( SELECT MIN(attribute_value) FROM hero_attribute )",
        "db_id": "superhero",
        "difficulty": "simple",
        "evidence": "lowest attribute value refers to MIN(attribute_value);",
        "question": "Give the hero ID of superhero with the lowest attribute value.",
        "question_id": 837,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    7
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            27,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT name FROM races WHERE year = 2017 AND name NOT IN ( SELECT name FROM races WHERE year = 2000 )",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "not hosted means not in;",
        "question": "Name the races in year 2017 that are not hosted in year 2000.",
        "question_id": 887,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    2017.0,
                    null
                ],
                "and",
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            30,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    4
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            30,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        27,
                                        false
                                    ],
                                    null
                                ],
                                2000.0,
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler'",
        "db_id": "superhero",
        "difficulty": "simple",
        "evidence": "name the superhero refers to superhero_name; Charles Chandler is the full name of superhero;",
        "question": "Name the superhero, otherwise known as Charles Chandler.",
        "question_id": 833,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"Charles Chandler\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT sprint_speed, agility, acceleration FROM Player_Attributes WHERE player_api_id IN ( SELECT player_api_id FROM Player WHERE player_name = 'Alexis Blin' )",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "Alexis Blin's refers to player_name = 'Alexis Blin'",
        "question": "What are Alexis Blin's sprint speed, agility, and acceleration scores?",
        "question_id": 1140,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            44,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        45,
                                        false
                                    ],
                                    null
                                ],
                                "\"Alexis Blin\"",
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DisplayName, Age FROM users WHERE Views = ( SELECT MAX(Views) FROM users )",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "the highest in views refers to MAX(Views);",
        "question": "What are the display names and ages of user who got the highest in views?",
        "question_id": 643,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                55,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                64,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            60,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    6
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            60,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT driverId FROM lapTimes WHERE lap = 1 ORDER BY time LIMIT 5",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "fastest time refers to Min(time);",
        "question": "List the driver's ID of the top five driver, by descending order, the fastest time during the first lap of the race.",
        "question_id": 976,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        8
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 5,
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            57,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                54,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            55,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT superhero_name FROM superhero ORDER BY height_cm DESC LIMIT 1",
        "db_id": "superhero",
        "difficulty": "simple",
        "evidence": "who refers to superhero_name; tallest superhero refers to MAX(height_cm);",
        "question": "Who is the tallest superhero?",
        "question_id": 802,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT circuitRef FROM circuits WHERE name = 'Marina Bay Street Circuit'",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "reference name refers to circuitRef; Marina Bay Street Circuit refers to circuits.name = 'Marina Bay Street Circuit'",
        "question": "What's the reference name of Marina Bay Street Circuit?",
        "question_id": 912,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Marina Bay Street Circuit\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT LastEditDate, LastEditorUserId FROM posts WHERE Title = 'Detecting a given face in a database of facial images'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "Title = 'Detecting a given face in a database of facial images';",
        "question": "Provide the last edit date and last edit user ID for the post \"Detecting a given face in a database of facial images\".",
        "question_id": 644,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                41,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                40,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            35,
                            false
                        ],
                        null
                    ],
                    "\"Detecting a given face in a database of facial images\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT label FROM molecule AS T WHERE T.molecule_id = 'TR000'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic",
        "question": "Is molecule TR000 is carcinogenic or not?",
        "question_id": 323,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"TR000\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "are oversized refers to isOversized = 1; reprinted refers to isReprint = 1; printed for promotions refers to isPromo = 1",
        "question": "How many cards are oversized, reprinted, and printed for promotions?",
        "question_id": 420,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            28,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            30,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            29,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'",
        "db_id": "codebase_community",
        "difficulty": "moderate",
        "evidence": "\"Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer\" is the Title of post; views refers to ViewCount",
        "question": "How many views did the post titled 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer' get?",
        "question_id": 572,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                31,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            35,
                            false
                        ],
                        null
                    ],
                    "\"Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT mcmId FROM sets WHERE code = 'SS2'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "magic card market id refers to mcmId",
        "question": "For the set which had 'SS2' as the code, what is its magic card market id?",
        "question_id": 490,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                98,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            91,
                            false
                        ],
                        null
                    ],
                    "\"SS2\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT year FROM races GROUP BY year ORDER BY COUNT(round) DESC LIMIT 1",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "the most number of races refers to max(round);",
        "question": "Which year has the most number of races?",
        "question_id": 886,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    27,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            28,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                27,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT department FROM major WHERE college = 'College of Humanities and Social Sciences'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "",
        "question": "List all of the College of Humanities and Social Sciences' departments.",
        "question_id": 1363,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"College of Humanities and Social Sciences\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler'",
        "db_id": "superhero",
        "difficulty": "simple",
        "evidence": "name the superhero refers to superhero_name; Charles Chandler is the full name of superhero;",
        "question": "Name the superhero, otherwise known as Charles Chandler.",
        "question_id": 833,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"Charles Chandler\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DisplayName, Age FROM users WHERE Views = ( SELECT MAX(Views) FROM users )",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "the highest in views refers to MAX(Views);",
        "question": "What are the display names and ages of user who got the highest in views?",
        "question_id": 643,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                55,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                64,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            60,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    6
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            60,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT PostId, UserId FROM postHistory WHERE PostId IN ( SELECT Id FROM posts WHERE Score > 60 )",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "score more than 60 refers to Score > 60",
        "question": "List out all post ID with score more than 60 and list out all the user ID that created these post.",
        "question_id": 602,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                17,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    4
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            26,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                3,
                                [
                                    0,
                                    [
                                        0,
                                        30,
                                        false
                                    ],
                                    null
                                ],
                                60.0,
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT player_name FROM player ORDER BY height ASC LIMIT 1",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "shortest height refers to MIN(height);",
        "question": "Which football player has the shortest height?",
        "question_id": 1069,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            48,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                45,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT NCESDist FROM schools WHERE SOC = 31",
        "db_id": "california_schools",
        "difficulty": "simple",
        "evidence": "State Special Schools means that SOC = 31.",
        "question": "Please provide the National Center for Educational Statistics school district identification number for all schools with a School Ownership Code that are part of the State Special Schools.",
        "question_id": 69,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                42,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            68,
                            false
                        ],
                        null
                    ],
                    31.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT manaCost FROM cards WHERE availability = 'mtgo,paper' AND borderColor = 'black' AND frameVersion = 2003 AND layout = 'normal'",
        "db_id": "card_games",
        "difficulty": "moderate",
        "evidence": "available in paper and mtgo refers to availability = 'mtgo,paper'; frameVersion = 2003;borderColor = 'black'",
        "question": "What is the mana cost of cards with a normal layout, a 2003 frame version, with a black border color, and available in paper and mtgo?",
        "question_id": 397,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                41,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"mtgo,paper\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"black\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    2003.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            37,
                            false
                        ],
                        null
                    ],
                    "\"normal\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT player_api_id FROM Player_Attributes ORDER BY overall_rating DESC LIMIT 1",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "highest overall rating refers to MAX(overall_rating);",
        "question": "Which player has the highest overall rating? Indicate the player's api id.",
        "question_id": 1020,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT COUNT(member_id) FROM member WHERE position = 'Member' AND t_shirt_size = 'X-Large'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "among the members refers to position = 'Member'; extra large t-shirt size refers to t_shirt_size = 'X-Large'",
        "question": "Among the members, how many of them have an extra large t-shirt size?",
        "question_id": 1424,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                40,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            44,
                            false
                        ],
                        null
                    ],
                    "\"Member\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ],
                    "\"X-Large\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT name, date FROM races WHERE year = 1999 ORDER BY round DESC LIMIT 1",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "the last round refers to max(round);",
        "question": "State the name and date of the last round of race in year 1999.",
        "question_id": 885,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            28,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                31,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    1999.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT T.element FROM atom AS T WHERE T.atom_id = 'TR000_1'",
        "db_id": "toxicology",
        "difficulty": "challenging",
        "evidence": "atom with ID refers to atom_id; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium",
        "question": "What is the element of toxicology for the atom with the ID of TR000_1?",
        "question_id": 322,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    "\"TR000_1\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Symptoms FROM Examination WHERE Diagnosis = 'SLE' GROUP BY Symptoms ORDER BY COUNT(Symptoms) DESC LIMIT 1",
        "db_id": "thrombosis_prediction",
        "difficulty": "simple",
        "evidence": "the most common sign refers to MAX(symptoms); 'SLE' refers to diagnosis",
        "question": "What is the most common sign of patients with SLE disease?",
        "question_id": 1196,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    12,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            12,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                12,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "\"SLE\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT name FROM sets WHERE code IN ( SELECT setCode FROM set_translations WHERE language = 'Korean' AND language NOT LIKE '%Japanese%' )",
        "db_id": "card_games",
        "difficulty": "moderate",
        "evidence": "names of sets refers to name; doesn't have Japanese translation refers to language not like '%Japanese%'; have Korean translation refers to language = 'Korean'",
        "question": "Find and list the names of sets which doesn't have Japanese translation but have Korean translation.",
        "question_id": 529,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                102,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            91,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    4
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            110,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        109,
                                        false
                                    ],
                                    null
                                ],
                                "\"Korean\"",
                                null
                            ],
                            "and",
                            [
                                true,
                                9,
                                [
                                    0,
                                    [
                                        0,
                                        109,
                                        false
                                    ],
                                    null
                                ],
                                "\"%Japanese%\"",
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(T.atom_id) FROM atom AS T WHERE T.element = 'c' OR T.element = 'h'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "consisting of element carbon and hydrogen refers to element in('c', 'h')",
        "question": "Calculate the total atoms consisting of the element carbon and hydrogen.",
        "question_id": 256,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"c\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"h\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM posts WHERE Score = 10",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "score of 10 refers to Score = 10; post refers to Id",
        "question": "How many posts have a score of 10 on the list?",
        "question_id": 609,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            30,
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR004'",
        "db_id": "toxicology",
        "difficulty": "challenging",
        "evidence": "TR004 is the molecule id;",
        "question": "List all the elements of the toxicology of the molecule \"TR004\".",
        "question_id": 240,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"TR004\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT driverRef FROM drivers WHERE forename = 'Lewis' AND surname = 'Hamilton'",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "reference name refers to driverRef",
        "question": "What's Lewis Hamilton's reference name?",
        "question_id": 918,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                16,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    "\"Lewis\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ],
                    "\"Hamilton\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT year FROM races WHERE name = 'Singapore Grand Prix' ORDER BY year ASC LIMIT 1",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "the first race refers to race happened in min(year);",
        "question": "Which year was the first Singapore Grand Prix?",
        "question_id": 882,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                27,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            30,
                            false
                        ],
                        null
                    ],
                    "\"Singapore Grand Prix\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT superhero_name FROM superhero ORDER BY height_cm DESC LIMIT 1",
        "db_id": "superhero",
        "difficulty": "simple",
        "evidence": "who refers to superhero_name; tallest superhero refers to MAX(height_cm);",
        "question": "Who is the tallest superhero?",
        "question_id": 802,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            23,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT Title FROM posts WHERE Id = ( SELECT PostId FROM comments ORDER BY Score DESC LIMIT 1 )",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "highest score comment refers to Max(comments.Score)",
        "question": "What is the title for the post which got the highest score comment?",
        "question_id": 561,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            26,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": 1,
                        "orderBy": [
                            "desc",
                            [
                                [
                                    0,
                                    [
                                        0,
                                        7,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        ],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            6,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT label FROM molecule AS T WHERE T.molecule_id = 'TR000'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic",
        "question": "Is molecule TR000 is carcinogenic or not?",
        "question_id": 323,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"TR000\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM superhero WHERE full_name LIKE 'John%'",
        "db_id": "superhero",
        "difficulty": "simple",
        "evidence": "have John as their first name refers to full_name LIKE 'John%';",
        "question": "What is the total number of superheroes that have John as their first name?",
        "question_id": 836,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"John%\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT T.molecule_id FROM molecule AS T WHERE T.label = '-'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "label = '-' means molecules are non-carcinogenic",
        "question": "List down the molecule id for non carcinogenic molecules.",
        "question_id": 265,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"-\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT T2.category, SUM(T2.amount) FROM event AS T1 JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'April Speaker' GROUP BY T2.category ORDER BY SUM(T2.amount) ASC",
        "db_id": "student_club",
        "difficulty": "moderate",
        "evidence": "'April Speaker' is an event name; amount budgeted refers to SUM(amount); budget categories refers to category",
        "question": "Calculate the amount budgeted for 'April Speaker' event. List all the budgeted categories for said event in an ascending order based on their amount budgeted.",
        "question_id": 1405,
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            26,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    21,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            4,
                            24,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"April Speaker\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM cards WHERE toughness = 99",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "",
        "question": "How many cards are there with toughness of 99?",
        "question_id": 372,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            69,
                            false
                        ],
                        null
                    ],
                    99.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR151'",
        "db_id": "toxicology",
        "difficulty": "challenging",
        "evidence": "element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium",
        "question": "Which toxic element can be found in the molecule TR151?",
        "question_id": 290,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"TR151\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek'",
        "db_id": "superhero",
        "difficulty": "simple",
        "evidence": "Star Trek is the publisher_name;",
        "question": "Give the publisher ID of Star Trek.",
        "question_id": 745,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"Star Trek\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT setCode FROM set_translations WHERE language = 'Spanish'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "Spanish refer to language; set code refers to setCode",
        "question": "Lists the set code of all cards translated into Spanish.",
        "question_id": 400,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                110,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            109,
                            false
                        ],
                        null
                    ],
                    "\"Spanish\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT driverId FROM lapTimes WHERE lap = 1 ORDER BY time LIMIT 5",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "fastest time refers to Min(time);",
        "question": "List the driver's ID of the top five driver, by descending order, the fastest time during the first lap of the race.",
        "question_id": 976,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        8
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 5,
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            57,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                54,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            55,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT NCESDist FROM schools WHERE SOC = 31",
        "db_id": "california_schools",
        "difficulty": "simple",
        "evidence": "State Special Schools means that SOC = 31.",
        "question": "Please provide the National Center for Educational Statistics school district identification number for all schools with a School Ownership Code that are part of the State Special Schools.",
        "question_id": 69,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                42,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            68,
                            false
                        ],
                        null
                    ],
                    31.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek'",
        "db_id": "superhero",
        "difficulty": "simple",
        "evidence": "Star Trek is the publisher_name;",
        "question": "Give the publisher ID of Star Trek.",
        "question_id": 745,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"Star Trek\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT raceId FROM races WHERE year = 2009",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "",
        "question": "List out the Id number of races which were hold in 2009.",
        "question_id": 965,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    2009.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT language FROM foreign_data WHERE multiverseid = 149934",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "multiverse number 149934 refers to multiverseid = 149934;",
        "question": "What is the language of the card with the multiverse number 149934?",
        "question_id": 422,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                77,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            78,
                            false
                        ],
                        null
                    ],
                    149934.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Text FROM comments WHERE PostId IN ( SELECT Id FROM posts WHERE ViewCount BETWEEN 100 AND 150 ) ORDER BY Score DESC LIMIT 1",
        "db_id": "codebase_community",
        "difficulty": "moderate",
        "evidence": "views ranging from 100 to 150 refers to ViewCount BETWEEN 100 and 150; comment with the highest score refers to Text where MAX(Score);",
        "question": "Among the posts with views ranging from 100 to 150, what is the comment with the highest score?",
        "question_id": 707,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    4
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            26,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                1,
                                [
                                    0,
                                    [
                                        0,
                                        31,
                                        false
                                    ],
                                    null
                                ],
                                100.0,
                                150.0
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DISTINCT artist FROM cards WHERE availability = 'arena' AND BorderColor = 'black'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "black borders refers to BorderColor = 'black'; available only in arena refers to availability = 'arena'",
        "question": "List the artists who illustrated cards with black borders which are available only in arena.",
        "question_id": 524,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"arena\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"black\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT id FROM Player_Attributes ORDER BY crossing DESC LIMIT 5",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "perform better in crossing actions refers to MAX(crossing)",
        "question": "Who are the top 5 players who perform better in crossing actions? Indicate their player id.",
        "question_id": 1024,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 5,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT translation FROM set_translations WHERE setCode IN ( SELECT code FROM sets WHERE name = 'Mirrodin' ) AND language = 'Chinese Simplified'",
        "db_id": "card_games",
        "difficulty": "moderate",
        "evidence": "Simplified Chinese translation refers to language = 'Chinese Simplified'; name of the set \"Mirrodin\" refers to name = 'Mirrodin'",
        "question": "Show the Simplified Chinese translation of the name of the set \"Mirrodin\"?",
        "question_id": 505,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                111,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            110,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    3
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            91,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        102,
                                        false
                                    ],
                                    null
                                ],
                                "\"Mirrodin\"",
                                null
                            ]
                        ]
                    },
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            109,
                            false
                        ],
                        null
                    ],
                    "\"Chinese Simplified\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT driverId FROM lapTimes WHERE lap = 1 ORDER BY time LIMIT 5",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "fastest time refers to Min(time);",
        "question": "List the driver's ID of the top five driver, by descending order, the fastest time during the first lap of the race.",
        "question_id": 976,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        8
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 5,
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            57,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                54,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            55,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR001'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "TR001 is the molecule id",
        "question": "List the toxicology elements associated with molecule TR001.",
        "question_id": 274,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"TR001\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT team_long_name FROM Team WHERE team_short_name = 'GEN'",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "long name for the team refers to team_long_name; team_short_name = 'GEN';",
        "question": "What's the long name for the team GEN?",
        "question_id": 1077,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                58,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            59,
                            false
                        ],
                        null
                    ],
                    "\"GEN\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(School) FROM schools WHERE DOC = 52 AND Charter = 1 AND City = 'Hickman'",
        "db_id": "california_schools",
        "difficulty": "simple",
        "evidence": "Elementary School District refers to DOC = 52; Chartered schools refer to Charter = 1 in the table schools",
        "question": "How many chartered schools located in the city of Hickman are owned by the Elementary School District?",
        "question_id": 61,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                47,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            66,
                            false
                        ],
                        null
                    ],
                    52.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            63,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            50,
                            false
                        ],
                        null
                    ],
                    "\"Hickman\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-25' GROUP BY CustomerID ORDER BY SUM(Price) DESC LIMIT 1",
        "db_id": "debit_card_specializing",
        "difficulty": "simple",
        "evidence": "'2012/8/25' can be represented by '2012-08-25'",
        "question": "Which customer paid the most in 2012/8/25?",
        "question_id": 1512,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    13,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            4,
                            18,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"2012-08-25\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR004'",
        "db_id": "toxicology",
        "difficulty": "challenging",
        "evidence": "TR004 is the molecule id;",
        "question": "List all the elements of the toxicology of the molecule \"TR004\".",
        "question_id": 240,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"TR004\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM Player WHERE weight > 170 AND player_name LIKE 'Adam%'",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "team names refers to team_long_name; speed class refers to buildUpPlaySpeedClass; buildUpPlaySpeedClass = 'Fast';",
        "question": "How many players whose first names are Adam and weigh more than 170?",
        "question_id": 1061,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                43,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            49,
                            false
                        ],
                        null
                    ],
                    170.0,
                    null
                ],
                "and",
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ],
                    "\"Adam%\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Phone, Ext, School FROM schools WHERE Zip = '95203-3704'",
        "db_id": "california_schools",
        "difficulty": "simple",
        "evidence": "",
        "question": "What is the phone number and extension number for the school with the zip code 95203-3704? Indicate the school's name.",
        "question_id": 58,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                58,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                59,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                47,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            51,
                            false
                        ],
                        null
                    ],
                    "\"95203-3704\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM cards WHERE toughness = 99",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "",
        "question": "How many cards are there with toughness of 99?",
        "question_id": 372,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            69,
                            false
                        ],
                        null
                    ],
                    99.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(Id) FROM posts WHERE ViewCount > 35000 AND CommentCount = 0",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "have been viewed over 35000 times refers to ViewCount > 35000; received no comments refers to CommentCount = 0;",
        "question": "Identify the number of posts that have been viewed over 35000 times but have received no comments from other users.",
        "question_id": 688,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            31,
                            false
                        ],
                        null
                    ],
                    35000.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            38,
                            false
                        ],
                        null
                    ],
                    0.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT T.molecule_id FROM molecule AS T WHERE T.label = '-'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "label = '-' means molecules are non-carcinogenic",
        "question": "List down the molecule id for non carcinogenic molecules.",
        "question_id": 265,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"-\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT artist FROM cards WHERE flavorName = 'Battra, Dark Destroyer'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "promotional name is \"Battra, Dark Destroyer\" refers to flavorName = 'Battra, Dark Destroyer'",
        "question": "Which artist designed the card whose promotional name is \"Battra, Dark Destroyer\"?",
        "question_id": 460,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ],
                    "\"Battra, Dark Destroyer\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT player_name FROM Player WHERE height > 180",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "height>180;",
        "question": "Please list player names which are higher than 180.",
        "question_id": 1059,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                45,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            48,
                            false
                        ],
                        null
                    ],
                    180.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT SUM(cost) FROM expense WHERE expense_date = '2019-08-20'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "total expense refers SUM(cost) where expense_date = '2019-08-20'",
        "question": "Mention the total expense used on 8/20/2019.",
        "question_id": 1409,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            29,
                            false
                        ],
                        null
                    ],
                    "\"2019-08-20\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT T4.amount FROM card AS T1 JOIN disp AS T2 ON T1.disp_id = T2.disp_id JOIN account AS T3 on T2.account_id = T3.account_id JOIN trans AS T4 on T3.account_id = T4.account_id WHERE T1.issued = '1996-10-21' ORDER BY T4.amount DESC LIMIT 1",
        "db_id": "financial",
        "difficulty": "simple",
        "evidence": "",
        "question": "What is the biggest amount of transaction that the client whose card was opened in 1996/10/21 made?",
        "question_id": 106,
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            47,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            51,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                51,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "\"1996-10-21\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT T.molecule_id FROM molecule AS T WHERE T.label = '-'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "label = '-' means molecules are non-carcinogenic",
        "question": "List down the molecule id for non carcinogenic molecules.",
        "question_id": 265,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"-\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT full_name FROM superhero WHERE superhero_name = 'Alien'",
        "db_id": "superhero",
        "difficulty": "simple",
        "evidence": "",
        "question": "Provide the full name of the superhero named Alien.",
        "question_id": 838,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ],
                    "\"Alien\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT player_name FROM Player WHERE height > 180",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "height>180;",
        "question": "Please list player names which are higher than 180.",
        "question_id": 1059,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                45,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            48,
                            false
                        ],
                        null
                    ],
                    180.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT source FROM income WHERE date_received BETWEEN '2019-09-01' and '2019-09-30' ORDER BY source DESC LIMIT 1",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "top source funds refers to MAX(source); September 2019 means date_received BETWEEN '2019-09-01' and '2019-09-30'",
        "question": "Indicate the top source of funds received in September 2019 based on their amount.",
        "question_id": 1392,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            37,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            35,
                            false
                        ],
                        null
                    ],
                    "\"2019-09-01\"",
                    "\"2019-09-30\""
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(driverId) FROM driverStandings WHERE raceId = 18",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "",
        "question": "How many driver participated in race ID number 18?",
        "question_id": 966,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                48,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            47,
                            false
                        ],
                        null
                    ],
                    18.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(city) FROM zip_code WHERE county = 'Orange County' AND state = 'Virginia'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "Orange County is the county name, Virginia is the state name",
        "question": "How many cities are there in Orange County, Virginia?",
        "question_id": 1362,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"Orange County\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ],
                    "\"Virginia\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Text FROM comments WHERE CreationDate = '2010-07-19 19:16:14.0'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "detailed content of the comment refers to Text; created on 7/19/2010 7:16:14 PM refers to CreationDate = '2010-07-19 19:16:14.0'",
        "question": "State the detailed content of the comment which was created on 7/19/2010 7:25:47 PM.",
        "question_id": 608,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "\"2010-07-19 19:16:14.0\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "are oversized refers to isOversized = 1; reprinted refers to isReprint = 1; printed for promotions refers to isPromo = 1",
        "question": "How many cards are oversized, reprinted, and printed for promotions?",
        "question_id": 420,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            28,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            30,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            29,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(major_name) FROM major WHERE college = 'College of Humanities and Social Sciences'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "",
        "question": "How many majors are there in \"College of Humanities and Social Sciences\"?",
        "question_id": 1345,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"College of Humanities and Social Sciences\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT edhrecRank FROM cards WHERE frameVersion = 2015",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "",
        "question": "List the edhrecRank for cards with frame version 2015.",
        "question_id": 380,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    2015.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(DISTINCT T.molecule_id) FROM bond AS T WHERE T.molecule_id BETWEEN 'TR004' AND 'TR010' AND T.bond_type = '-'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "single bond refers to bond_type = '-'; molecules between TR004 to TR010 refers molecule_id BETWEEN 'TR004' and 'TR010';",
        "question": "Among the molecules between TR004 to TR010, how many of them has single bonds?",
        "question_id": 332,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                5,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"TR004\"",
                    "\"TR010\""
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "\"-\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT duration FROM pitStops ORDER BY duration DESC LIMIT 1",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "longest time spent at pitstop refers to MAX(duration)",
        "question": "What was the longest time a driver had ever spent at a pit stop?",
        "question_id": 1005,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        9
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            64,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                64,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT id FROM cards WHERE frameEffects = 'extendedart' GROUP BY id",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "\nframe effect as extendedart refers to frameEffects = 'extendedart'\n",
        "question": "How many cards have frame effect as extendedart? List out the id of those cards.",
        "question_id": 436,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    "\"extendedart\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT mcmId FROM sets WHERE code = 'SS2'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "magic card market id refers to mcmId",
        "question": "For the set which had 'SS2' as the code, what is its magic card market id?",
        "question_id": 490,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                98,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            91,
                            false
                        ],
                        null
                    ],
                    "\"SS2\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(Id) FROM users WHERE Upvotes > 100 AND Downvotes > 1",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "more than 100 upvotes refers to Upvotes > 100; more than 1 downvotes refers to Downvotes > 1",
        "question": "Among the users who have more than 100 upvotes, how many of them have more then 1 downvotes?",
        "question_id": 535,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                52,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            61,
                            false
                        ],
                        null
                    ],
                    100.0,
                    null
                ],
                "and",
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            62,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT department FROM major WHERE college = 'College of Humanities and Social Sciences'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "",
        "question": "List all of the College of Humanities and Social Sciences' departments.",
        "question_id": 1363,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"College of Humanities and Social Sciences\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit'",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "location coordinates refers to (lat, lng); Silverstone Circuit refers to circuits.name = 'Silverstone Circuit'",
        "question": "What's the location coordinates of Silverstone Circuit?",
        "question_id": 910,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Silverstone Circuit\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Website FROM schools WHERE County = 'San Joaquin' AND Virtual = 'P' AND Charter = 1",
        "db_id": "california_schools",
        "difficulty": "simple",
        "evidence": "Virtual = 'P' means partially virtual; Charter schools refers to Charter = 1 in the table schools",
        "question": "What are the websites for all the partially virtual chartered schools located in San Joaquin?",
        "question_id": 60,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                60,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ],
                    "\"San Joaquin\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            76,
                            false
                        ],
                        null
                    ],
                    "\"P\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            63,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT duration FROM pitStops ORDER BY duration DESC LIMIT 1",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "longest time spent at pitstop refers to MAX(duration)",
        "question": "What was the longest time a driver had ever spent at a pit stop?",
        "question_id": 1005,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        9
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            64,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                64,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT COUNT(School) FROM schools WHERE DOC = 52 AND Charter = 1 AND City = 'Hickman'",
        "db_id": "california_schools",
        "difficulty": "simple",
        "evidence": "Elementary School District refers to DOC = 52; Chartered schools refer to Charter = 1 in the table schools",
        "question": "How many chartered schools located in the city of Hickman are owned by the Elementary School District?",
        "question_id": 61,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                47,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            66,
                            false
                        ],
                        null
                    ],
                    52.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            63,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            50,
                            false
                        ],
                        null
                    ],
                    "\"Hickman\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(DISTINCT T.molecule_id) FROM bond AS T WHERE T.bond_type = '#'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "triple bond refers to bond_type = '#';",
        "question": "How many molecules have a triple bond type?",
        "question_id": 238,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                5,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "\"#\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM posts WHERE Score = 10",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "score of 10 refers to Score = 10; post refers to Id",
        "question": "How many posts have a score of 10 on the list?",
        "question_id": 609,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            30,
                            false
                        ],
                        null
                    ],
                    10.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(T.molecule_id) FROM molecule AS T WHERE molecule_id BETWEEN 'TR000' AND 'TR099' AND T.label = '+'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "first 100 molecules in number order refers to molecule_id between 'TR000' and 'TR099'; label = '+' means molecules are carcinogenic",
        "question": "Of the first 100 molecules in number order, how many are carcinogenic?",
        "question_id": 204,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"TR000\"",
                    "\"TR099\""
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"+\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT player_name FROM Player WHERE height > 180",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "height>180;",
        "question": "Please list player names which are higher than 180.",
        "question_id": 1059,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                45,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            48,
                            false
                        ],
                        null
                    ],
                    180.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT language FROM set_translations WHERE id IN ( SELECT id FROM cards WHERE name = 'Angel of Mercy' )",
        "db_id": "card_games",
        "difficulty": "moderate",
        "evidence": "Angel of Mercy' is the name of card;",
        "question": "cards are not directly linked to language but through table 'set'. you need to add set in covered table & rephrase your question\nWhat are the languages available for the set that card 'Angel of Mercy' is in?",
        "question_id": 360,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                109,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            108,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            1,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        49,
                                        false
                                    ],
                                    null
                                ],
                                "\"Angel of Mercy\"",
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(DISTINCT T.molecule_id) FROM bond AS T WHERE T.bond_type = '#'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "triple bond refers to bond_type = '#';",
        "question": "How many molecules have a triple bond type?",
        "question_id": 238,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                5,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "\"#\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DisplayName FROM users WHERE Age BETWEEN 19 AND 65",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "adults refer to users where Age BETWEEN 19 and 65;",
        "question": "Please list all display names of users who are adults.",
        "question_id": 676,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                55,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            64,
                            false
                        ],
                        null
                    ],
                    19.0,
                    65.0
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(member_id) FROM member WHERE position = 'Member' AND t_shirt_size = 'X-Large'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "among the members refers to position = 'Member'; extra large t-shirt size refers to t_shirt_size = 'X-Large'",
        "question": "Among the members, how many of them have an extra large t-shirt size?",
        "question_id": 1424,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                40,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            44,
                            false
                        ],
                        null
                    ],
                    "\"Member\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ],
                    "\"X-Large\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM Player_Attributes WHERE overall_rating BETWEEN 60 AND 65 AND defensive_work_rate = 'low'",
        "db_id": "european_football_2",
        "difficulty": "moderate",
        "evidence": "overall_rating > = 60 AND overall_rating < 65; players whose going to be in all of your attack moves instead of defensing refers to defensive_work_rate = 'low';",
        "question": "Among the players with an overall rating between 60 to 65, how many players whose going to be in all of your attack moves instead of defensing?",
        "question_id": 1023,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    60.0,
                    65.0
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "\"low\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT player_name FROM player ORDER BY height ASC LIMIT 1",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "shortest height refers to MIN(height);",
        "question": "Which football player has the shortest height?",
        "question_id": 1069,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            48,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                45,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT COUNT(Id) FROM votes WHERE UserId = 58 AND CreationDate = '2010-07-19'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "user no. 58 refers to UserId = 58; on 2010/7/19 refers to CreationDate = '2010-07-19'",
        "question": "How many votes did the user No.58 take on 2010/7/19?",
        "question_id": 558,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                66,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            70,
                            false
                        ],
                        null
                    ],
                    58.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            69,
                            false
                        ],
                        null
                    ],
                    "\"2010-07-19\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(Id) FROM comments WHERE UserId = 13 AND Score < 60",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "negative comments refer to Score < 60;",
        "question": "How many negative comments were given by user ID 13?",
        "question_id": 645,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    13.0,
                    null
                ],
                "and",
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    60.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT id FROM cards WHERE borderColor = 'black' GROUP BY id",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "border with black color refers to borderColor = 'black'",
        "question": "How many card border with black color ? List out the card id.",
        "question_id": 435,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"black\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT edhrecRank FROM cards WHERE frameVersion = 2015",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "",
        "question": "List the edhrecRank for cards with frame version 2015.",
        "question_id": 380,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    2015.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT year FROM races WHERE name = 'Singapore Grand Prix' ORDER BY year ASC LIMIT 1",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "the first race refers to race happened in min(year);",
        "question": "Which year was the first Singapore Grand Prix?",
        "question_id": 882,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                27,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            30,
                            false
                        ],
                        null
                    ],
                    "\"Singapore Grand Prix\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Text FROM comments WHERE CreationDate = '2010-07-19 19:16:14.0'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "detailed content of the comment refers to Text; created on 7/19/2010 7:16:14 PM refers to CreationDate = '2010-07-19 19:16:14.0'",
        "question": "State the detailed content of the comment which was created on 7/19/2010 7:25:47 PM.",
        "question_id": 608,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "\"2010-07-19 19:16:14.0\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(Id) FROM votes WHERE UserId = 58 AND CreationDate = '2010-07-19'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "user no. 58 refers to UserId = 58; on 2010/7/19 refers to CreationDate = '2010-07-19'",
        "question": "How many votes did the user No.58 take on 2010/7/19?",
        "question_id": 558,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                66,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            70,
                            false
                        ],
                        null
                    ],
                    58.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            69,
                            false
                        ],
                        null
                    ],
                    "\"2010-07-19\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT id FROM sets WHERE type = 'commander' ORDER BY totalSetSize DESC LIMIT 1",
        "db_id": "card_games",
        "difficulty": "challenging",
        "evidence": "expansion type refers to type where type = 'commander'; totalSetSize: The total number of cards in the set, including promotional and related supplemental products but excluding Alchemy modifications; highest total number of cards refers to MAX(totalSetSize)",
        "question": "Among the sets whose expansion type is Commander, which set has the highest total number of cards including promotional and related supplemental products but excluding Alchemy modifications? Indicate the id of the set.",
        "question_id": 513,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            106,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                87,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            107,
                            false
                        ],
                        null
                    ],
                    "\"commander\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT year FROM races GROUP BY year ORDER BY COUNT(round) DESC LIMIT 1",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "the most number of races refers to max(round);",
        "question": "Which year has the most number of races?",
        "question_id": 886,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    27,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            28,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                27,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT Id, DisplayName FROM users WHERE Views = ( SELECT MAX(Views) FROM users )",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "users have the highest number of views refer to DisplayName where MAX(Views);",
        "question": "Which users have the highest number of views?",
        "question_id": 628,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                52,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                55,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            60,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    6
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            60,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT manaCost FROM cards WHERE availability = 'mtgo,paper' AND borderColor = 'black' AND frameVersion = 2003 AND layout = 'normal'",
        "db_id": "card_games",
        "difficulty": "moderate",
        "evidence": "available in paper and mtgo refers to availability = 'mtgo,paper'; frameVersion = 2003;borderColor = 'black'",
        "question": "What is the mana cost of cards with a normal layout, a 2003 frame version, with a black border color, and available in paper and mtgo?",
        "question_id": 397,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                41,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"mtgo,paper\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"black\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    2003.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            37,
                            false
                        ],
                        null
                    ],
                    "\"normal\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Title FROM posts WHERE Id = ( SELECT PostId FROM comments ORDER BY Score DESC LIMIT 1 )",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "highest score comment refers to Max(comments.Score)",
        "question": "What is the title for the post which got the highest score comment?",
        "question_id": 561,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            26,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": 1,
                        "orderBy": [
                            "desc",
                            [
                                [
                                    0,
                                    [
                                        0,
                                        7,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        ],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            6,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT keyruneCode FROM sets WHERE code = 'PKHC'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "keyrune code refers to keyruneCode",
        "question": "List the keyrune code for the set whose code is 'PKHC'.",
        "question_id": 489,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                97,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            91,
                            false
                        ],
                        null
                    ],
                    "\"PKHC\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 10",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "heaviest refers to MAX(weight)",
        "question": "What are the player api id of 10 heaviest players?",
        "question_id": 1117,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 10,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            49,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                44,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT source FROM income WHERE date_received BETWEEN '2019-09-01' and '2019-09-30' ORDER BY source DESC LIMIT 1",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "top source funds refers to MAX(source); September 2019 means date_received BETWEEN '2019-09-01' and '2019-09-30'",
        "question": "Indicate the top source of funds received in September 2019 based on their amount.",
        "question_id": 1392,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            37,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            35,
                            false
                        ],
                        null
                    ],
                    "\"2019-09-01\"",
                    "\"2019-09-30\""
                ]
            ]
        }
    },
    {
        "query": "SELECT Age FROM users WHERE Reputation = ( SELECT MAX(Reputation) FROM users )",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "How old describes age; the most influential refers to user where MAX(Reputation);",
        "question": "How old is the most influential user?",
        "question_id": 661,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                64,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            53,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    6
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            53,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Phone, Ext, School FROM schools WHERE Zip = '95203-3704'",
        "db_id": "california_schools",
        "difficulty": "simple",
        "evidence": "",
        "question": "What is the phone number and extension number for the school with the zip code 95203-3704? Indicate the school's name.",
        "question_id": 58,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                58,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                59,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                47,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            51,
                            false
                        ],
                        null
                    ],
                    "\"95203-3704\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Id FROM users WHERE Reputation = ( SELECT MAX(Reputation) FROM users )",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "highest reputation refers to Max(Reputation)",
        "question": "Which user ID has the highest reputation?",
        "question_id": 589,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                52,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            53,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    6
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            53,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(T.molecule_id) FROM molecule AS T WHERE T.label = '+'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "label = '+' mean molecules are carcinogenic;",
        "question": "How many chemical compounds in the database are identified as carcinogenic.",
        "question_id": 291,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"+\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT player_api_id FROM Player_Attributes ORDER BY overall_rating DESC LIMIT 1",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "highest overall rating refers to MAX(overall_rating);",
        "question": "Which player has the highest overall rating? Indicate the player's api id.",
        "question_id": 1020,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT edhrecRank FROM cards WHERE frameVersion = 2015",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "",
        "question": "List the edhrecRank for cards with frame version 2015.",
        "question_id": 380,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            19,
                            false
                        ],
                        null
                    ],
                    2015.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT T.molecule_id FROM molecule AS T WHERE T.label = '-'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "label = '-' means molecules are non-carcinogenic",
        "question": "List down the molecule id for non carcinogenic molecules.",
        "question_id": 265,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"-\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT surname FROM drivers WHERE nationality = 'Italian'",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "Italian refers to nationality = 'italian'",
        "question": "Please list the surnames of all the Italian drivers.",
        "question_id": 916,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    "\"Italian\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT type FROM sets WHERE name LIKE '%FROM the Vault: Lore%'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "set \"From the Vault refers to name which contains 'From the Vault: Lore'; expansion type refers to type",
        "question": "For the set \"From the Vault: Lore\", what is its expansion type?",
        "question_id": 492,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                107,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            102,
                            false
                        ],
                        null
                    ],
                    "\"%FROM the Vault: Lore%\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT language FROM foreign_data WHERE multiverseid = 149934",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "multiverse number 149934 refers to multiverseid = 149934;",
        "question": "What is the language of the card with the multiverse number 149934?",
        "question_id": 422,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                77,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            78,
                            false
                        ],
                        null
                    ],
                    149934.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Text FROM comments WHERE CreationDate = '2010-07-19 19:16:14.0'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "detailed content of the comment refers to Text; created on 7/19/2010 7:16:14 PM refers to CreationDate = '2010-07-19 19:16:14.0'",
        "question": "State the detailed content of the comment which was created on 7/19/2010 7:25:47 PM.",
        "question_id": 608,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "\"2010-07-19 19:16:14.0\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DISTINCT ID FROM Laboratory WHERE Date BETWEEN '1987-07-06' AND '1996-01-31' AND GPT > 30 AND ALB < 4",
        "db_id": "thrombosis_prediction",
        "difficulty": "moderate",
        "evidence": "examined between 1987/7/6 and 1996/1/31 refers to Date BETWEEN '1987-07-06' AND '1996-01-31'; GPT level greater than 30 refers to GPT > 30; ALB level less than 4 ALB < 4",
        "question": "How many patients who were examined between 1987/7/6 and 1996/1/31 had a GPT level greater than 30 and an ALB level less than 4? List them by their ID.",
        "question_id": 1187,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    "\"1987-07-06\"",
                    "\"1996-01-31\""
                ],
                "and",
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            24,
                            false
                        ],
                        null
                    ],
                    30.0,
                    null
                ],
                "and",
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            28,
                            false
                        ],
                        null
                    ],
                    4.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM cards WHERE hAND = '-1' AND artist = 'UDON' AND Availability = 'mtgo' ",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "UDON refer to artist; availabe in mtgo refers to availability = 'mtgo'; starting maximum hand size of -1 refers to hand = -1",
        "question": "How many cards designed by UDON and available in mtgo print type has a starting maximum hand size of -1?",
        "question_id": 395,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ],
                    "\"-1\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"UDON\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"mtgo\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT id FROM publisher WHERE publisher_name = 'Star Trek'",
        "db_id": "superhero",
        "difficulty": "simple",
        "evidence": "Star Trek is the publisher_name;",
        "question": "Give the publisher ID of Star Trek.",
        "question_id": 745,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                9,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"Star Trek\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT lat, lng FROM circuits WHERE country = 'USA'",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "location coordinates refers to (lat, lng); the US refers to country = 'USA';",
        "question": "Please list the location coordinates of the US circuits.",
        "question_id": 946,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"USA\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM Player_Attributes WHERE overall_rating BETWEEN 60 AND 65 AND defensive_work_rate = 'low'",
        "db_id": "european_football_2",
        "difficulty": "moderate",
        "evidence": "overall_rating > = 60 AND overall_rating < 65; players whose going to be in all of your attack moves instead of defensing refers to defensive_work_rate = 'low';",
        "question": "Among the players with an overall rating between 60 to 65, how many players whose going to be in all of your attack moves instead of defensing?",
        "question_id": 1023,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    60.0,
                    65.0
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            9,
                            false
                        ],
                        null
                    ],
                    "\"low\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Title FROM posts WHERE Id = ( SELECT PostId FROM comments ORDER BY Score DESC LIMIT 1 )",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "highest score comment refers to Max(comments.Score)",
        "question": "What is the title for the post which got the highest score comment?",
        "question_id": 561,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            26,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": 1,
                        "orderBy": [
                            "desc",
                            [
                                [
                                    0,
                                    [
                                        0,
                                        7,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        ],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            6,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(member_id) FROM member WHERE position = 'Member' AND t_shirt_size = 'X-Large'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "among the members refers to position = 'Member'; extra large t-shirt size refers to t_shirt_size = 'X-Large'",
        "question": "Among the members, how many of them have an extra large t-shirt size?",
        "question_id": 1424,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                40,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            44,
                            false
                        ],
                        null
                    ],
                    "\"Member\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ],
                    "\"X-Large\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DisplayName, WebsiteUrl FROM users WHERE Id = ( SELECT UserId FROM votes WHERE VoteTypeId = 8 ORDER BY BountyAmount DESC LIMIT 1 )",
        "db_id": "codebase_community",
        "difficulty": "moderate",
        "evidence": "vote type of 8 refers to VoteTypeId = 8; the highest bounty amount refers to MAX(BountyAmount);",
        "question": "Under the vote type of 8, provide the display names and websites URLs of the user who got the highest bounty amount.",
        "question_id": 657,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                55,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                57,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            52,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    7
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": 1,
                        "orderBy": [
                            "desc",
                            [
                                [
                                    0,
                                    [
                                        0,
                                        71,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        ],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            70,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        68,
                                        false
                                    ],
                                    null
                                ],
                                8.0,
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT hero_id FROM hero_attribute WHERE attribute_value = ( SELECT MIN(attribute_value) FROM hero_attribute )",
        "db_id": "superhero",
        "difficulty": "simple",
        "evidence": "lowest attribute value refers to MIN(attribute_value);",
        "question": "Give the hero ID of superhero with the lowest attribute value.",
        "question_id": 837,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    7
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            27,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Title FROM posts ORDER BY ViewCount DESC LIMIT 5",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "Higher view count means the post has higher popularity; the highest popularity refers to MAX(ViewCount);",
        "question": "What are the titles of the top 5 posts with the highest popularity?",
        "question_id": 658,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 5,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            31,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                35,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT T.molecule_id FROM molecule AS T WHERE T.label = '-'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "label = '-' means molecules are non-carcinogenic",
        "question": "List down the molecule id for non carcinogenic molecules.",
        "question_id": 265,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"-\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM users WHERE Age BETWEEN 19 AND 65",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "adult refers to user where Age BETWEEN 19 and 65;",
        "question": "How many users were adult?",
        "question_id": 627,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                52,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            64,
                            false
                        ],
                        null
                    ],
                    19.0,
                    65.0
                ]
            ]
        }
    },
    {
        "query": "SELECT id FROM Player_Attributes ORDER BY crossing DESC LIMIT 5",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "perform better in crossing actions refers to MAX(crossing)",
        "question": "Who are the top 5 players who perform better in crossing actions? Indicate their player id.",
        "question_id": 1024,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 5,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT hero_id FROM hero_attribute WHERE attribute_value = ( SELECT MIN(attribute_value) FROM hero_attribute )",
        "db_id": "superhero",
        "difficulty": "simple",
        "evidence": "lowest attribute value refers to MIN(attribute_value);",
        "question": "Give the hero ID of superhero with the lowest attribute value.",
        "question_id": 837,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    7
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            27,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DisplayName FROM users WHERE Age BETWEEN 19 AND 65",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "adults refer to users where Age BETWEEN 19 and 65;",
        "question": "Please list all display names of users who are adults.",
        "question_id": 676,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                55,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            64,
                            false
                        ],
                        null
                    ],
                    19.0,
                    65.0
                ]
            ]
        }
    },
    {
        "query": "SELECT sprint_speed, agility, acceleration FROM Player_Attributes WHERE player_api_id IN ( SELECT player_api_id FROM Player WHERE player_name = 'Alexis Blin' )",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "Alexis Blin's refers to player_name = 'Alexis Blin'",
        "question": "What are Alexis Blin's sprint speed, agility, and acceleration scores?",
        "question_id": 1140,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                22,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    1
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            44,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        45,
                                        false
                                    ],
                                    null
                                ],
                                "\"Alexis Blin\"",
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT source FROM income WHERE date_received BETWEEN '2019-09-01' and '2019-09-30' ORDER BY source DESC LIMIT 1",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "top source funds refers to MAX(source); September 2019 means date_received BETWEEN '2019-09-01' and '2019-09-30'",
        "question": "Indicate the top source of funds received in September 2019 based on their amount.",
        "question_id": 1392,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            37,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            35,
                            false
                        ],
                        null
                    ],
                    "\"2019-09-01\"",
                    "\"2019-09-30\""
                ]
            ]
        }
    },
    {
        "query": "SELECT cost FROM expense WHERE expense_description = 'Posters' AND expense_date = '2019-09-04'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "'Poster' is an event description; on 2019/9/14 refers to event_date = '2019-09-04'",
        "question": "What was the cost for the \"Posters\" on 2019/9/4?",
        "question_id": 1342,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            28,
                            false
                        ],
                        null
                    ],
                    "\"Posters\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            29,
                            false
                        ],
                        null
                    ],
                    "\"2019-09-04\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(T.bond_id) FROM bond AS T WHERE T.bond_type = '#'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "triple type bonds refers to bond_type = '#'",
        "question": "How many triple type bonds are there?",
        "question_id": 202,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "\"#\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT source FROM income WHERE date_received BETWEEN '2019-09-01' and '2019-09-30' ORDER BY source DESC LIMIT 1",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "top source funds refers to MAX(source); September 2019 means date_received BETWEEN '2019-09-01' and '2019-09-30'",
        "question": "Indicate the top source of funds received in September 2019 based on their amount.",
        "question_id": 1392,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            37,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            35,
                            false
                        ],
                        null
                    ],
                    "\"2019-09-01\"",
                    "\"2019-09-30\""
                ]
            ]
        }
    },
    {
        "query": "SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-25' GROUP BY CustomerID ORDER BY SUM(Price) DESC LIMIT 1",
        "db_id": "debit_card_specializing",
        "difficulty": "simple",
        "evidence": "'2012/8/25' can be represented by '2012-08-25'",
        "question": "Which customer paid the most in 2012/8/25?",
        "question_id": 1512,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    13,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            4,
                            18,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"2012-08-25\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM cards WHERE toughness = 99",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "",
        "question": "How many cards are there with toughness of 99?",
        "question_id": 372,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            69,
                            false
                        ],
                        null
                    ],
                    99.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT id FROM cards WHERE frameEffects = 'extendedart' GROUP BY id",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "\nframe effect as extendedart refers to frameEffects = 'extendedart'\n",
        "question": "How many cards have frame effect as extendedart? List out the id of those cards.",
        "question_id": 436,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    "\"extendedart\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(major_id) FROM major WHERE department = 'School of Applied Sciences, Technology and Education' AND college = 'College of Agriculture and Applied Sciences'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "",
        "question": "In the College of Agriculture and Applied Sciences, how many majors are under the department of School of Applied Sciences, Technology and Education?",
        "question_id": 1425,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"School of Applied Sciences, Technology and Education\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"College of Agriculture and Applied Sciences\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT id FROM cards WHERE frameEffects = 'extendedart' GROUP BY id",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "\nframe effect as extendedart refers to frameEffects = 'extendedart'\n",
        "question": "How many cards have frame effect as extendedart? List out the id of those cards.",
        "question_id": 436,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    1,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            18,
                            false
                        ],
                        null
                    ],
                    "\"extendedart\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM superhero WHERE full_name LIKE 'John%'",
        "db_id": "superhero",
        "difficulty": "simple",
        "evidence": "have John as their first name refers to full_name LIKE 'John%';",
        "question": "What is the total number of superheroes that have John as their first name?",
        "question_id": 836,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"John%\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT artist FROM cards WHERE flavorName = 'Battra, Dark Destroyer'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "promotional name is \"Battra, Dark Destroyer\" refers to flavorName = 'Battra, Dark Destroyer'",
        "question": "Which artist designed the card whose promotional name is \"Battra, Dark Destroyer\"?",
        "question_id": 460,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ],
                    "\"Battra, Dark Destroyer\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT id, language FROM set_translations WHERE id = ( SELECT id FROM cards WHERE convertedManaCost = 5 ) AND setCode = '10E'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "set 10E refers to setCode = '10E'; converted mana of 5 refers to convertedManaCost = 5;",
        "question": "What are the cards in set 10E with converted mana of 5 have translation and what are the languages?",
        "question_id": 388,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                108,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                109,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            108,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            1,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        11,
                                        false
                                    ],
                                    null
                                ],
                                5.0,
                                null
                            ]
                        ]
                    },
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            110,
                            false
                        ],
                        null
                    ],
                    "\"10E\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT CommentCount, AnswerCount FROM posts WHERE Title = 'Clustering 1D data'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "",
        "question": "How many comments and answers were left by the users on the post with the title 'Clustering 1D data'?",
        "question_id": 698,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                38,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            35,
                            false
                        ],
                        null
                    ],
                    "\"Clustering 1D data\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT lat, lng FROM circuits WHERE country = 'USA'",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "location coordinates refers to (lat, lng); the US refers to country = 'USA';",
        "question": "Please list the location coordinates of the US circuits.",
        "question_id": 946,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"USA\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR000' ORDER BY T.element LIMIT 3",
        "db_id": "toxicology",
        "difficulty": "challenging",
        "evidence": "TR000 is the molecule id;",
        "question": "Please list top three elements of the toxicology of the molecule TR000 in alphabetical order.",
        "question_id": 220,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 3,
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"TR000\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DISTINCT availability FROM cards WHERE artist = 'Aleksi Briclot' AND isTextless = 1",
        "db_id": "card_games",
        "difficulty": "moderate",
        "evidence": "created by Aleksi Briclot refers to artist = 'Aleksi Briclot'; doesn't have a text box refers to isTextless = 1; available printing types refers to availability",
        "question": "What are the available printing types of the cards that doesn't have a text box created by Aleksi Briclot?",
        "question_id": 508,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"Aleksi Briclot\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            34,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(T.molecule_id) FROM molecule AS T WHERE T.molecule_id BETWEEN 'TR000' AND 'TR030' AND T.label = '+'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "label = '+' mean molecules are carcinogenic",
        "question": "Calculate the total carcinogenic molecules for molecule id from TR000 to TR030.",
        "question_id": 266,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"TR000\"",
                    "\"TR030\""
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"+\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(T.molecule_id) FROM molecule AS T WHERE T.molecule_id BETWEEN 'TR000' AND 'TR030' AND T.label = '+'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "label = '+' mean molecules are carcinogenic",
        "question": "Calculate the total carcinogenic molecules for molecule id from TR000 to TR030.",
        "question_id": 266,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"TR000\"",
                    "\"TR030\""
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"+\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Phone, Ext, School FROM schools WHERE Zip = '95203-3704'",
        "db_id": "california_schools",
        "difficulty": "simple",
        "evidence": "",
        "question": "What is the phone number and extension number for the school with the zip code 95203-3704? Indicate the school's name.",
        "question_id": 58,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                58,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                59,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                47,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            51,
                            false
                        ],
                        null
                    ],
                    "\"95203-3704\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT notes FROM income WHERE source = 'Fundraising' AND date_received = '2019-09-14'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "fundraising on 2019/9/14 refers to source = 'Fundraising' where date_received = '2019-09-14'",
        "question": "What was the notes of the fundraising on 2019/9/14?",
        "question_id": 1344,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                38,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            37,
                            false
                        ],
                        null
                    ],
                    "\"Fundraising\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            35,
                            false
                        ],
                        null
                    ],
                    "\"2019-09-14\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT raceId FROM races WHERE year = 2009",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "",
        "question": "List out the Id number of races which were hold in 2009.",
        "question_id": 965,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    2009.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT AVG(LDH) FROM Laboratory WHERE LDH < 500",
        "db_id": "thrombosis_prediction",
        "difficulty": "simple",
        "evidence": "average index of the lactate dehydrogenase (LDH) refers to AVG(LDH); (LDH) within the normal range refers to LDH < 500",
        "question": "What is the average index of the lactate dehydrogenase (LDH) for all patients with lactate dehydrogenase (LDH) within the normal range.",
        "question_id": 1210,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            25,
                            false
                        ],
                        null
                    ],
                    500.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT language FROM foreign_data WHERE multiverseid = 149934",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "multiverse number 149934 refers to multiverseid = 149934;",
        "question": "What is the language of the card with the multiverse number 149934?",
        "question_id": 422,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                77,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            78,
                            false
                        ],
                        null
                    ],
                    149934.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT driverId FROM lapTimes WHERE lap = 1 ORDER BY time LIMIT 5",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "fastest time refers to Min(time);",
        "question": "List the driver's ID of the top five driver, by descending order, the fastest time during the first lap of the race.",
        "question_id": 976,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        8
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 5,
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            57,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                54,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            55,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(T.molecule_id) FROM molecule AS T WHERE molecule_id BETWEEN 'TR000' AND 'TR099' AND T.label = '+'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "first 100 molecules in number order refers to molecule_id between 'TR000' and 'TR099'; label = '+' means molecules are carcinogenic",
        "question": "Of the first 100 molecules in number order, how many are carcinogenic?",
        "question_id": 204,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"TR000\"",
                    "\"TR099\""
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"+\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT NCESDist FROM schools WHERE SOC = 31",
        "db_id": "california_schools",
        "difficulty": "simple",
        "evidence": "State Special Schools means that SOC = 31.",
        "question": "Please provide the National Center for Educational Statistics school district identification number for all schools with a School Ownership Code that are part of the State Special Schools.",
        "question_id": 69,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                42,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            68,
                            false
                        ],
                        null
                    ],
                    31.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT CreationDate FROM users WHERE DisplayName = 'IrishStat'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "DisplayName = 'IrishStat'; when create his or her account refers to CreationDate;",
        "question": "When did the user known as 'IrishStat' create his or her account?",
        "question_id": 699,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                54,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            55,
                            false
                        ],
                        null
                    ],
                    "\"IrishStat\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM cards WHERE hAND = '-1' AND artist = 'UDON' AND Availability = 'mtgo' ",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "UDON refer to artist; availabe in mtgo refers to availability = 'mtgo'; starting maximum hand size of -1 refers to hand = -1",
        "question": "How many cards designed by UDON and available in mtgo print type has a starting maximum hand size of -1?",
        "question_id": 395,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ],
                    "\"-1\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"UDON\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"mtgo\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(Id) FROM votes WHERE UserId = 58 AND CreationDate = '2010-07-19'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "user no. 58 refers to UserId = 58; on 2010/7/19 refers to CreationDate = '2010-07-19'",
        "question": "How many votes did the user No.58 take on 2010/7/19?",
        "question_id": 558,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                66,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            70,
                            false
                        ],
                        null
                    ],
                    58.0,
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            69,
                            false
                        ],
                        null
                    ],
                    "\"2010-07-19\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(T.atom_id) FROM atom AS T WHERE T.element = 'c' OR T.element = 'h'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "consisting of element carbon and hydrogen refers to element in('c', 'h')",
        "question": "Calculate the total atoms consisting of the element carbon and hydrogen.",
        "question_id": 256,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"c\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"h\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM cards WHERE hAND = '-1' AND artist = 'UDON' AND Availability = 'mtgo' ",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "UDON refer to artist; availabe in mtgo refers to availability = 'mtgo'; starting maximum hand size of -1 refers to hand = -1",
        "question": "How many cards designed by UDON and available in mtgo print type has a starting maximum hand size of -1?",
        "question_id": 395,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ],
                    "\"-1\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"UDON\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"mtgo\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(player_api_id) FROM Player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'low'",
        "db_id": "european_football_2",
        "difficulty": "moderate",
        "evidence": "preferred foot when attacking was the left refers to preferred_foot = 'left'; players who would remain in his position when the team attacked refers to attacking_work_rate = 'low';",
        "question": "Among the players whose preferred foot was the left foot when attacking, how many of them would remain in his position when the team attacked?",
        "question_id": 1080,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"left\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "\"low\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT raceId FROM races WHERE year = 2009",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "",
        "question": "List out the Id number of races which were hold in 2009.",
        "question_id": 965,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                26,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    2009.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT notes FROM income WHERE source = 'Fundraising' AND date_received = '2019-09-14'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "fundraising on 2019/9/14 refers to source = 'Fundraising' where date_received = '2019-09-14'",
        "question": "What was the notes of the fundraising on 2019/9/14?",
        "question_id": 1344,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                38,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            37,
                            false
                        ],
                        null
                    ],
                    "\"Fundraising\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            35,
                            false
                        ],
                        null
                    ],
                    "\"2019-09-14\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT T2.category, SUM(T2.amount) FROM event AS T1 JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'April Speaker' GROUP BY T2.category ORDER BY SUM(T2.amount) ASC",
        "db_id": "student_club",
        "difficulty": "moderate",
        "evidence": "'April Speaker' is an event name; amount budgeted refers to SUM(amount); budget categories refers to category",
        "question": "Calculate the amount budgeted for 'April Speaker' event. List all the budgeted categories for said event in an ascending order based on their amount budgeted.",
        "question_id": 1405,
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            26,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    21,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            4,
                            24,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"April Speaker\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT T4.amount FROM card AS T1 JOIN disp AS T2 ON T1.disp_id = T2.disp_id JOIN account AS T3 on T2.account_id = T3.account_id JOIN trans AS T4 on T3.account_id = T4.account_id WHERE T1.issued = '1996-10-21' ORDER BY T4.amount DESC LIMIT 1",
        "db_id": "financial",
        "difficulty": "simple",
        "evidence": "",
        "question": "What is the biggest amount of transaction that the client whose card was opened in 1996/10/21 made?",
        "question_id": 106,
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            13,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                15,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            1,
                            false
                        ],
                        null
                    ],
                    "and",
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            47,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ],
                    [
                        "table_unit",
                        3
                    ],
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            51,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                51,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "\"1996-10-21\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DisplayName FROM users WHERE Age BETWEEN 19 AND 65",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "adults refer to users where Age BETWEEN 19 and 65;",
        "question": "Please list all display names of users who are adults.",
        "question_id": 676,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                55,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            64,
                            false
                        ],
                        null
                    ],
                    19.0,
                    65.0
                ]
            ]
        }
    },
    {
        "query": "SELECT name FROM races WHERE year = 2017 AND name NOT IN ( SELECT name FROM races WHERE year = 2000 )",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "not hosted means not in;",
        "question": "Name the races in year 2017 that are not hosted in year 2000.",
        "question_id": 887,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    2017.0,
                    null
                ],
                "and",
                [
                    true,
                    8,
                    [
                        0,
                        [
                            0,
                            30,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    4
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            30,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        27,
                                        false
                                    ],
                                    null
                                ],
                                2000.0,
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT keyruneCode FROM sets WHERE code = 'PKHC'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "keyrune code refers to keyruneCode",
        "question": "List the keyrune code for the set whose code is 'PKHC'.",
        "question_id": 489,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                97,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            91,
                            false
                        ],
                        null
                    ],
                    "\"PKHC\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DisplayName, WebsiteUrl FROM users WHERE Id = ( SELECT UserId FROM votes WHERE VoteTypeId = 8 ORDER BY BountyAmount DESC LIMIT 1 )",
        "db_id": "codebase_community",
        "difficulty": "moderate",
        "evidence": "vote type of 8 refers to VoteTypeId = 8; the highest bounty amount refers to MAX(BountyAmount);",
        "question": "Under the vote type of 8, provide the display names and websites URLs of the user who got the highest bounty amount.",
        "question_id": 657,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                55,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                57,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            52,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    7
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": 1,
                        "orderBy": [
                            "desc",
                            [
                                [
                                    0,
                                    [
                                        0,
                                        71,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        ],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            70,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        68,
                                        false
                                    ],
                                    null
                                ],
                                8.0,
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'",
        "db_id": "codebase_community",
        "difficulty": "moderate",
        "evidence": "\"Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer\" is the Title of post; views refers to ViewCount",
        "question": "How many views did the post titled 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer' get?",
        "question_id": 572,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                31,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            35,
                            false
                        ],
                        null
                    ],
                    "\"Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR001'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "TR001 is the molecule id",
        "question": "List the toxicology elements associated with molecule TR001.",
        "question_id": 274,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"TR001\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DisplayName, Age FROM users WHERE Views = ( SELECT MAX(Views) FROM users )",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "the highest in views refers to MAX(Views);",
        "question": "What are the display names and ages of user who got the highest in views?",
        "question_id": 643,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                55,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                64,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            60,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    6
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            60,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DisplayName FROM users WHERE Age BETWEEN 19 AND 65",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "adults refer to users where Age BETWEEN 19 and 65;",
        "question": "Please list all display names of users who are adults.",
        "question_id": 676,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                55,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            64,
                            false
                        ],
                        null
                    ],
                    19.0,
                    65.0
                ]
            ]
        }
    },
    {
        "query": "SELECT type FROM sets WHERE name LIKE '%FROM the Vault: Lore%'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "set \"From the Vault refers to name which contains 'From the Vault: Lore'; expansion type refers to type",
        "question": "For the set \"From the Vault: Lore\", what is its expansion type?",
        "question_id": 492,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                107,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            102,
                            false
                        ],
                        null
                    ],
                    "\"%FROM the Vault: Lore%\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT year FROM races WHERE name = 'Singapore Grand Prix' ORDER BY year ASC LIMIT 1",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "the first race refers to race happened in min(year);",
        "question": "Which year was the first Singapore Grand Prix?",
        "question_id": 882,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                27,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            30,
                            false
                        ],
                        null
                    ],
                    "\"Singapore Grand Prix\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT language FROM foreign_data WHERE multiverseid = 149934",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "multiverse number 149934 refers to multiverseid = 149934;",
        "question": "What is the language of the card with the multiverse number 149934?",
        "question_id": 422,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                77,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            78,
                            false
                        ],
                        null
                    ],
                    149934.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(DISTINCT T.molecule_id) FROM bond AS T WHERE T.molecule_id BETWEEN 'TR004' AND 'TR010' AND T.bond_type = '-'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "single bond refers to bond_type = '-'; molecules between TR004 to TR010 refers molecule_id BETWEEN 'TR004' and 'TR010';",
        "question": "Among the molecules between TR004 to TR010, how many of them has single bonds?",
        "question_id": 332,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                5,
                                true
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"TR004\"",
                    "\"TR010\""
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "\"-\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR004'",
        "db_id": "toxicology",
        "difficulty": "challenging",
        "evidence": "TR004 is the molecule id;",
        "question": "List all the elements of the toxicology of the molecule \"TR004\".",
        "question_id": 240,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"TR004\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT name FROM sets WHERE code IN ( SELECT setCode FROM set_translations WHERE language = 'Korean' AND language NOT LIKE '%Japanese%' )",
        "db_id": "card_games",
        "difficulty": "moderate",
        "evidence": "names of sets refers to name; doesn't have Japanese translation refers to language not like '%Japanese%'; have Korean translation refers to language = 'Korean'",
        "question": "Find and list the names of sets which doesn't have Japanese translation but have Korean translation.",
        "question_id": 529,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                102,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            91,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    4
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            110,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        109,
                                        false
                                    ],
                                    null
                                ],
                                "\"Korean\"",
                                null
                            ],
                            "and",
                            [
                                true,
                                9,
                                [
                                    0,
                                    [
                                        0,
                                        109,
                                        false
                                    ],
                                    null
                                ],
                                "\"%Japanese%\"",
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT expense_description FROM expense GROUP BY expense_description HAVING AVG(cost) > 50",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "expense refers to expense_description; spend more than fifty dollars on average refers to DIVIDE( SUM(cost), COUNT(expense_id) ) > 50",
        "question": "List the expenses that spend more than fifty dollars on average.",
        "question_id": 1444,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    28,
                    false
                ]
            ],
            "having": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            5,
                            30,
                            false
                        ],
                        null
                    ],
                    50.0,
                    null
                ]
            ],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                28,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT COUNT(id) FROM superhero WHERE full_name LIKE 'John%'",
        "db_id": "superhero",
        "difficulty": "simple",
        "evidence": "have John as their first name refers to full_name LIKE 'John%';",
        "question": "What is the total number of superheroes that have John as their first name?",
        "question_id": 836,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                13,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"John%\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT player_api_id FROM Player_Attributes ORDER BY overall_rating DESC LIMIT 1",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "highest overall rating refers to MAX(overall_rating);",
        "question": "Which player has the highest overall rating? Indicate the player's api id.",
        "question_id": 1020,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT ViewCount FROM posts WHERE Title = 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer'",
        "db_id": "codebase_community",
        "difficulty": "moderate",
        "evidence": "\"Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer\" is the Title of post; views refers to ViewCount",
        "question": "How many views did the post titled 'Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer' get?",
        "question_id": 572,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                31,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            35,
                            false
                        ],
                        null
                    ],
                    "\"Integration of Weka and/or RapidMiner into Informatica PowerCenter/Developer\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT id FROM Player_Attributes WHERE preferred_foot = 'right' ORDER BY potential DESC LIMIT 5",
        "db_id": "european_football_2",
        "difficulty": "moderate",
        "evidence": "lowest potential players refers to MIN(potential); prefer to use the right foot when attacking refers to preferred_foot = 'right'",
        "question": "Please provide top five football players' IDs who are among the lowest potential players and prefer to use the right foot when attacking.",
        "question_id": 1135,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 5,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"right\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT department FROM major WHERE college = 'College of Humanities and Social Sciences'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "",
        "question": "List all of the College of Humanities and Social Sciences' departments.",
        "question_id": 1363,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"College of Humanities and Social Sciences\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT T2.category, SUM(T2.amount) FROM event AS T1 JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'April Speaker' GROUP BY T2.category ORDER BY SUM(T2.amount) ASC",
        "db_id": "student_club",
        "difficulty": "moderate",
        "evidence": "'April Speaker' is an event name; amount budgeted refers to SUM(amount); budget categories refers to category",
        "question": "Calculate the amount budgeted for 'April Speaker' event. List all the budgeted categories for said event in an ascending order based on their amount budgeted.",
        "question_id": 1405,
        "sql": {
            "except": null,
            "from": {
                "conds": [
                    [
                        false,
                        2,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ],
                        [
                            0,
                            26,
                            false
                        ],
                        null
                    ]
                ],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ],
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    21,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            4,
                            24,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                21,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        4,
                        [
                            0,
                            [
                                0,
                                24,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"April Speaker\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT language FROM set_translations WHERE id IN ( SELECT id FROM cards WHERE name = 'Angel of Mercy' )",
        "db_id": "card_games",
        "difficulty": "moderate",
        "evidence": "Angel of Mercy' is the name of card;",
        "question": "cards are not directly linked to language but through table 'set'. you need to add set in covered table & rephrase your question\nWhat are the languages available for the set that card 'Angel of Mercy' is in?",
        "question_id": 360,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                109,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            108,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            1,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        49,
                                        false
                                    ],
                                    null
                                ],
                                "\"Angel of Mercy\"",
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT id FROM Player_Attributes WHERE preferred_foot = 'right' ORDER BY potential DESC LIMIT 5",
        "db_id": "european_football_2",
        "difficulty": "moderate",
        "evidence": "lowest potential players refers to MIN(potential); prefer to use the right foot when attacking refers to preferred_foot = 'right'",
        "question": "Please provide top five football players' IDs who are among the lowest potential players and prefer to use the right foot when attacking.",
        "question_id": 1135,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 5,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"right\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DisplayName, WebsiteUrl FROM users WHERE Id = ( SELECT UserId FROM votes WHERE VoteTypeId = 8 ORDER BY BountyAmount DESC LIMIT 1 )",
        "db_id": "codebase_community",
        "difficulty": "moderate",
        "evidence": "vote type of 8 refers to VoteTypeId = 8; the highest bounty amount refers to MAX(BountyAmount);",
        "question": "Under the vote type of 8, provide the display names and websites URLs of the user who got the highest bounty amount.",
        "question_id": 657,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                55,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                57,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            52,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    7
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": 1,
                        "orderBy": [
                            "desc",
                            [
                                [
                                    0,
                                    [
                                        0,
                                        71,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        ],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            70,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        68,
                                        false
                                    ],
                                    null
                                ],
                                8.0,
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT name FROM foreign_data WHERE uuid IN ( SELECT uuid FROM cards WHERE types = 'Creature' AND layout = 'normal' AND borderColor = 'black' AND artist = 'Matthew D. Wilson' ) AND language = 'French'",
        "db_id": "card_games",
        "difficulty": "moderate",
        "evidence": "in French refers to language = 'French'; black border color refers to borderColor = 'black'",
        "question": "What is the foreign name of the card in French of type Creature, normal layout and black border color, by artist Matthew D. Wilson?",
        "question_id": 412,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                79,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            82,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            72,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        71,
                                        false
                                    ],
                                    null
                                ],
                                "\"Creature\"",
                                null
                            ],
                            "and",
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        37,
                                        false
                                    ],
                                    null
                                ],
                                "\"normal\"",
                                null
                            ],
                            "and",
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        5,
                                        false
                                    ],
                                    null
                                ],
                                "\"black\"",
                                null
                            ],
                            "and",
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        2,
                                        false
                                    ],
                                    null
                                ],
                                "\"Matthew D. Wilson\"",
                                null
                            ]
                        ]
                    },
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            77,
                            false
                        ],
                        null
                    ],
                    "\"French\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(Id) FROM users WHERE Upvotes > 100 AND Downvotes > 1",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "more than 100 upvotes refers to Upvotes > 100; more than 1 downvotes refers to Downvotes > 1",
        "question": "Among the users who have more than 100 upvotes, how many of them have more then 1 downvotes?",
        "question_id": 535,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                52,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            61,
                            false
                        ],
                        null
                    ],
                    100.0,
                    null
                ],
                "and",
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            62,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR000' ORDER BY T.element LIMIT 3",
        "db_id": "toxicology",
        "difficulty": "challenging",
        "evidence": "TR000 is the molecule id;",
        "question": "Please list top three elements of the toxicology of the molecule TR000 in alphabetical order.",
        "question_id": 220,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 3,
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"TR000\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT name, date FROM races WHERE year = 1999 ORDER BY round DESC LIMIT 1",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "the last round refers to max(round);",
        "question": "State the name and date of the last round of race in year 1999.",
        "question_id": 885,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            28,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                30,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                31,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    1999.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT T.bond_type FROM bond AS T WHERE T.bond_id = 'TR007_4_19'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "double bond refers to bond_type = ' = '; single bond refers to bond_type = '-'; triple bond refers to bond_type = '#';",
        "question": "What is the bond type of TR007_4_19?",
        "question_id": 301,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"TR007_4_19\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(T.bond_id) FROM bond AS T WHERE T.bond_type = '#'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "triple type bonds refers to bond_type = '#'",
        "question": "How many triple type bonds are there?",
        "question_id": 202,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                4,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    "\"#\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT AVG(LDH) FROM Laboratory WHERE LDH < 500",
        "db_id": "thrombosis_prediction",
        "difficulty": "simple",
        "evidence": "average index of the lactate dehydrogenase (LDH) refers to AVG(LDH); (LDH) within the normal range refers to LDH < 500",
        "question": "What is the average index of the lactate dehydrogenase (LDH) for all patients with lactate dehydrogenase (LDH) within the normal range.",
        "question_id": 1210,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        5,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            25,
                            false
                        ],
                        null
                    ],
                    500.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT player_name FROM player ORDER BY height ASC LIMIT 1",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "shortest height refers to MIN(height);",
        "question": "Which football player has the shortest height?",
        "question_id": 1069,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            48,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                45,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT COUNT(Id) FROM comments WHERE UserId = 13 AND Score < 60",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "negative comments refer to Score < 60;",
        "question": "How many negative comments were given by user ID 13?",
        "question_id": 645,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                5,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    13.0,
                    null
                ],
                "and",
                [
                    false,
                    4,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    60.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT source FROM income WHERE date_received BETWEEN '2019-09-01' and '2019-09-30' ORDER BY source DESC LIMIT 1",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "top source funds refers to MAX(source); September 2019 means date_received BETWEEN '2019-09-01' and '2019-09-30'",
        "question": "Indicate the top source of funds received in September 2019 based on their amount.",
        "question_id": 1392,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            37,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    1,
                    [
                        0,
                        [
                            0,
                            35,
                            false
                        ],
                        null
                    ],
                    "\"2019-09-01\"",
                    "\"2019-09-30\""
                ]
            ]
        }
    },
    {
        "query": "SELECT name FROM foreign_data WHERE uuid IN ( SELECT uuid FROM cards WHERE types = 'Creature' AND layout = 'normal' AND borderColor = 'black' AND artist = 'Matthew D. Wilson' ) AND language = 'French'",
        "db_id": "card_games",
        "difficulty": "moderate",
        "evidence": "in French refers to language = 'French'; black border color refers to borderColor = 'black'",
        "question": "What is the foreign name of the card in French of type Creature, normal layout and black border color, by artist Matthew D. Wilson?",
        "question_id": 412,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                79,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            82,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    0
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            72,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        71,
                                        false
                                    ],
                                    null
                                ],
                                "\"Creature\"",
                                null
                            ],
                            "and",
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        37,
                                        false
                                    ],
                                    null
                                ],
                                "\"normal\"",
                                null
                            ],
                            "and",
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        5,
                                        false
                                    ],
                                    null
                                ],
                                "\"black\"",
                                null
                            ],
                            "and",
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        2,
                                        false
                                    ],
                                    null
                                ],
                                "\"Matthew D. Wilson\"",
                                null
                            ]
                        ]
                    },
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            77,
                            false
                        ],
                        null
                    ],
                    "\"French\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT CreationDate FROM users WHERE DisplayName = 'IrishStat'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "DisplayName = 'IrishStat'; when create his or her account refers to CreationDate;",
        "question": "When did the user known as 'IrishStat' create his or her account?",
        "question_id": 699,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                54,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            55,
                            false
                        ],
                        null
                    ],
                    "\"IrishStat\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(T.molecule_id) FROM molecule AS T WHERE T.label = '+'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "label = '+' mean molecules are carcinogenic;",
        "question": "How many chemical compounds in the database are identified as carcinogenic.",
        "question_id": 291,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"+\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(player_api_id) FROM Player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'low'",
        "db_id": "european_football_2",
        "difficulty": "moderate",
        "evidence": "preferred foot when attacking was the left refers to preferred_foot = 'left'; players who would remain in his position when the team attacked refers to attacking_work_rate = 'low';",
        "question": "Among the players whose preferred foot was the left foot when attacking, how many of them would remain in his position when the team attacked?",
        "question_id": 1080,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"left\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "\"low\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT year FROM races GROUP BY year ORDER BY COUNT(round) DESC LIMIT 1",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "the most number of races refers to max(round);",
        "question": "Which year has the most number of races?",
        "question_id": 886,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        4
                    ]
                ]
            },
            "groupBy": [
                [
                    0,
                    27,
                    false
                ]
            ],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            3,
                            28,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                27,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT language FROM foreign_data WHERE multiverseid = 149934",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "multiverse number 149934 refers to multiverseid = 149934;",
        "question": "What is the language of the card with the multiverse number 149934?",
        "question_id": 422,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                77,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            78,
                            false
                        ],
                        null
                    ],
                    149934.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT superhero_name FROM superhero WHERE full_name = 'Charles Chandler'",
        "db_id": "superhero",
        "difficulty": "simple",
        "evidence": "name the superhero refers to superhero_name; Charles Chandler is the full name of superhero;",
        "question": "Name the superhero, otherwise known as Charles Chandler.",
        "question_id": 833,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"Charles Chandler\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT T.bond_type FROM bond AS T WHERE T.bond_id = 'TR007_4_19'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "double bond refers to bond_type = ' = '; single bond refers to bond_type = '-'; triple bond refers to bond_type = '#';",
        "question": "What is the bond type of TR007_4_19?",
        "question_id": 301,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"TR007_4_19\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT department FROM major WHERE college = 'College of Humanities and Social Sciences'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "",
        "question": "List all of the College of Humanities and Social Sciences' departments.",
        "question_id": 1363,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                10,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            11,
                            false
                        ],
                        null
                    ],
                    "\"College of Humanities and Social Sciences\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT driverId FROM lapTimes WHERE lap = 1 ORDER BY time LIMIT 5",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "fastest time refers to Min(time);",
        "question": "List the driver's ID of the top five driver, by descending order, the fastest time during the first lap of the race.",
        "question_id": 976,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        8
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 5,
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            57,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                54,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            55,
                            false
                        ],
                        null
                    ],
                    1.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT mcmId FROM sets WHERE code = 'SS2'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "magic card market id refers to mcmId",
        "question": "For the set which had 'SS2' as the code, what is its magic card market id?",
        "question_id": 490,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                98,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            91,
                            false
                        ],
                        null
                    ],
                    "\"SS2\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT player_api_id FROM Player_Attributes ORDER BY overall_rating DESC LIMIT 1",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "highest overall rating refers to MAX(overall_rating);",
        "question": "Which player has the highest overall rating? Indicate the player's api id.",
        "question_id": 1020,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT COUNT(id) FROM cards WHERE originalType = 'Summon - Angel' AND subtypes != 'Angel'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "subtype other than Angel refers to subtypes is not 'Angel';",
        "question": "How many cards with original type of \"Summon - Angel\" have subtype other than \"Angel\"?",
        "question_id": 377,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            53,
                            false
                        ],
                        null
                    ],
                    "\"Summon - Angel\"",
                    null
                ],
                "and",
                [
                    false,
                    7,
                    [
                        0,
                        [
                            0,
                            65,
                            false
                        ],
                        null
                    ],
                    "\"Angel\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT surname FROM drivers WHERE nationality = 'Italian'",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "Italian refers to nationality = 'italian'",
        "question": "Please list the surnames of all the Italian drivers.",
        "question_id": 916,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                20,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            22,
                            false
                        ],
                        null
                    ],
                    "\"Italian\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT id FROM Player_Attributes WHERE preferred_foot = 'right' ORDER BY potential DESC LIMIT 5",
        "db_id": "european_football_2",
        "difficulty": "moderate",
        "evidence": "lowest potential players refers to MIN(potential); prefer to use the right foot when attacking refers to preferred_foot = 'right'",
        "question": "Please provide top five football players' IDs who are among the lowest potential players and prefer to use the right foot when attacking.",
        "question_id": 1135,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 5,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"right\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT notes FROM income WHERE source = 'Fundraising' AND date_received = '2019-09-14'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "fundraising on 2019/9/14 refers to source = 'Fundraising' where date_received = '2019-09-14'",
        "question": "What was the notes of the fundraising on 2019/9/14?",
        "question_id": 1344,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                38,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            37,
                            false
                        ],
                        null
                    ],
                    "\"Fundraising\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            35,
                            false
                        ],
                        null
                    ],
                    "\"2019-09-14\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(player_api_id) FROM Player_Attributes WHERE preferred_foot = 'left' AND attacking_work_rate = 'low'",
        "db_id": "european_football_2",
        "difficulty": "moderate",
        "evidence": "preferred foot when attacking was the left refers to preferred_foot = 'left'; players who would remain in his position when the team attacked refers to attacking_work_rate = 'low';",
        "question": "Among the players whose preferred foot was the left foot when attacking, how many of them would remain in his position when the team attacked?",
        "question_id": 1080,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ],
                    "\"left\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            8,
                            false
                        ],
                        null
                    ],
                    "\"low\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT layout FROM cards WHERE keywords = 'Flying'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "",
        "question": "What are the card layout of cards with keyword of flying?",
        "question_id": 376,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            36,
                            false
                        ],
                        null
                    ],
                    "\"Flying\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT label FROM molecule AS T WHERE T.molecule_id = 'TR000'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic",
        "question": "Is molecule TR000 is carcinogenic or not?",
        "question_id": 323,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"TR000\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Text FROM comments WHERE PostId IN ( SELECT Id FROM posts WHERE ViewCount BETWEEN 100 AND 150 ) ORDER BY Score DESC LIMIT 1",
        "db_id": "codebase_community",
        "difficulty": "moderate",
        "evidence": "views ranging from 100 to 150 refers to ViewCount BETWEEN 100 and 150; comment with the highest score refers to Text where MAX(Score);",
        "question": "Among the posts with views ranging from 100 to 150, what is the comment with the highest score?",
        "question_id": 707,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            7,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                8,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            6,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    4
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            26,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                1,
                                [
                                    0,
                                    [
                                        0,
                                        31,
                                        false
                                    ],
                                    null
                                ],
                                100.0,
                                150.0
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM cards WHERE toughness = 99",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "",
        "question": "How many cards are there with toughness of 99?",
        "question_id": 372,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            69,
                            false
                        ],
                        null
                    ],
                    99.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(T.atom_id) FROM atom AS T WHERE T.element = 'c' OR T.element = 'h'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "consisting of element carbon and hydrogen refers to element in('c', 'h')",
        "question": "Calculate the total atoms consisting of the element carbon and hydrogen.",
        "question_id": 256,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"c\"",
                    null
                ],
                "or",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"h\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR004'",
        "db_id": "toxicology",
        "difficulty": "challenging",
        "evidence": "TR004 is the molecule id;",
        "question": "List all the elements of the toxicology of the molecule \"TR004\".",
        "question_id": 240,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"TR004\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DISTINCT artist FROM cards WHERE availability = 'arena' AND BorderColor = 'black'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "black borders refers to BorderColor = 'black'; available only in arena refers to availability = 'arena'",
        "question": "List the artists who illustrated cards with black borders which are available only in arena.",
        "question_id": 524,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                2,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"arena\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            5,
                            false
                        ],
                        null
                    ],
                    "\"black\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT layout FROM cards WHERE keywords = 'Flying'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "",
        "question": "What are the card layout of cards with keyword of flying?",
        "question_id": 376,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                37,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            36,
                            false
                        ],
                        null
                    ],
                    "\"Flying\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT phone FROM member WHERE first_name = 'Carlo' AND last_name = 'Jacobs'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "Carlo Jacobs is the full name; full name refers to first_name, last_name;",
        "question": "Tell the phone number of \"Carlo Jacobs\".",
        "question_id": 1346,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                46,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            41,
                            false
                        ],
                        null
                    ],
                    "\"Carlo\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            42,
                            false
                        ],
                        null
                    ],
                    "\"Jacobs\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(city) FROM zip_code WHERE county = 'Orange County' AND state = 'Virginia'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "Orange County is the county name, Virginia is the state name",
        "question": "How many cities are there in Orange County, Virginia?",
        "question_id": 1362,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        2
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                14,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            15,
                            false
                        ],
                        null
                    ],
                    "\"Orange County\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            16,
                            false
                        ],
                        null
                    ],
                    "\"Virginia\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR151'",
        "db_id": "toxicology",
        "difficulty": "challenging",
        "evidence": "element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium",
        "question": "Which toxic element can be found in the molecule TR151?",
        "question_id": 290,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"TR151\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DisplayName, WebsiteUrl FROM users WHERE Id = ( SELECT UserId FROM votes WHERE VoteTypeId = 8 ORDER BY BountyAmount DESC LIMIT 1 )",
        "db_id": "codebase_community",
        "difficulty": "moderate",
        "evidence": "vote type of 8 refers to VoteTypeId = 8; the highest bounty amount refers to MAX(BountyAmount);",
        "question": "Under the vote type of 8, provide the display names and websites URLs of the user who got the highest bounty amount.",
        "question_id": 657,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                55,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                57,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            52,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    7
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": 1,
                        "orderBy": [
                            "desc",
                            [
                                [
                                    0,
                                    [
                                        0,
                                        71,
                                        false
                                    ],
                                    null
                                ]
                            ]
                        ],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            70,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        68,
                                        false
                                    ],
                                    null
                                ],
                                8.0,
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT name FROM cards ORDER BY faceConvertedManaCost LIMIT 1",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "more converted mana for the face refers to Max(faceConvertedManaCost);",
        "question": "List the card names with value that cost more converted mana for the face.",
        "question_id": 342,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            14,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                49,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": []
        }
    },
    {
        "query": "SELECT name FROM sets WHERE code IN ( SELECT setCode FROM set_translations WHERE language = 'Korean' AND language NOT LIKE '%Japanese%' )",
        "db_id": "card_games",
        "difficulty": "moderate",
        "evidence": "names of sets refers to name; doesn't have Japanese translation refers to language not like '%Japanese%'; have Korean translation refers to language = 'Korean'",
        "question": "Find and list the names of sets which doesn't have Japanese translation but have Korean translation.",
        "question_id": 529,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                102,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    8,
                    [
                        0,
                        [
                            0,
                            91,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    4
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    0,
                                    [
                                        0,
                                        [
                                            0,
                                            110,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": [
                            [
                                false,
                                2,
                                [
                                    0,
                                    [
                                        0,
                                        109,
                                        false
                                    ],
                                    null
                                ],
                                "\"Korean\"",
                                null
                            ],
                            "and",
                            [
                                true,
                                9,
                                [
                                    0,
                                    [
                                        0,
                                        109,
                                        false
                                    ],
                                    null
                                ],
                                "\"%Japanese%\"",
                                null
                            ]
                        ]
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT lat, lng FROM circuits WHERE name = 'Silverstone Circuit'",
        "db_id": "formula_1",
        "difficulty": "simple",
        "evidence": "location coordinates refers to (lat, lng); Silverstone Circuit refers to circuits.name = 'Silverstone Circuit'",
        "question": "What's the location coordinates of Silverstone Circuit?",
        "question_id": 910,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                6,
                                false
                            ],
                            null
                        ]
                    ],
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                7,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ],
                    "\"Silverstone Circuit\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR001'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "TR001 is the molecule id",
        "question": "List the toxicology elements associated with molecule TR001.",
        "question_id": 274,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"TR001\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM cards WHERE hAND = '-1' AND artist = 'UDON' AND Availability = 'mtgo' ",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "UDON refer to artist; availabe in mtgo refers to availability = 'mtgo'; starting maximum hand size of -1 refers to hand = -1",
        "question": "How many cards designed by UDON and available in mtgo print type has a starting maximum hand size of -1?",
        "question_id": 395,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                1,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            20,
                            false
                        ],
                        null
                    ],
                    "\"-1\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"UDON\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            4,
                            false
                        ],
                        null
                    ],
                    "\"mtgo\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT notes FROM income WHERE source = 'Fundraising' AND date_received = '2019-09-14'",
        "db_id": "student_club",
        "difficulty": "simple",
        "evidence": "fundraising on 2019/9/14 refers to source = 'Fundraising' where date_received = '2019-09-14'",
        "question": "What was the notes of the fundraising on 2019/9/14?",
        "question_id": 1344,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                38,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            37,
                            false
                        ],
                        null
                    ],
                    "\"Fundraising\"",
                    null
                ],
                "and",
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            35,
                            false
                        ],
                        null
                    ],
                    "\"2019-09-14\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT Age FROM users WHERE Reputation = ( SELECT MAX(Reputation) FROM users )",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "How old describes age; the most influential refers to user where MAX(Reputation);",
        "question": "How old is the most influential user?",
        "question_id": 661,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        6
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                64,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            53,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    6
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    1,
                                    [
                                        0,
                                        [
                                            0,
                                            53,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(Id) FROM tags WHERE TagName = 'careers'",
        "db_id": "codebase_community",
        "difficulty": "simple",
        "evidence": "tag specified as 'careers' refers to TagName = 'careers';",
        "question": "Count the number of posts with a tag specified as 'careers'.",
        "question_id": 696,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        5
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                47,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            48,
                            false
                        ],
                        null
                    ],
                    "\"careers\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT mcmId FROM sets WHERE code = 'SS2'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "magic card market id refers to mcmId",
        "question": "For the set which had 'SS2' as the code, what is its magic card market id?",
        "question_id": 490,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                98,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            91,
                            false
                        ],
                        null
                    ],
                    "\"SS2\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR000' ORDER BY T.element LIMIT 3",
        "db_id": "toxicology",
        "difficulty": "challenging",
        "evidence": "TR000 is the molecule id;",
        "question": "Please list top three elements of the toxicology of the molecule TR000 in alphabetical order.",
        "question_id": 220,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        0
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 3,
            "orderBy": [
                "asc",
                [
                    [
                        0,
                        [
                            0,
                            3,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                true,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                3,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            2,
                            false
                        ],
                        null
                    ],
                    "\"TR000\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT COUNT(id) FROM Player WHERE birthday > '1990' AND player_name LIKE 'Aaron%'",
        "db_id": "european_football_2",
        "difficulty": "simple",
        "evidence": "first name \"Aaron\" refers to player_name LIKE 'Aaron%'; born after the 1990s refers to birthday > '1990'",
        "question": "How many football players born after the 1990s have the first name \"Aaron\"?",
        "question_id": 1133,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        3,
                        [
                            0,
                            [
                                0,
                                43,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    3,
                    [
                        0,
                        [
                            0,
                            47,
                            false
                        ],
                        null
                    ],
                    "\"1990\"",
                    null
                ],
                "and",
                [
                    false,
                    9,
                    [
                        0,
                        [
                            0,
                            45,
                            false
                        ],
                        null
                    ],
                    "\"Aaron%\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT label FROM molecule AS T WHERE T.molecule_id = 'TR000'",
        "db_id": "toxicology",
        "difficulty": "simple",
        "evidence": "label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic",
        "question": "Is molecule TR000 is carcinogenic or not?",
        "question_id": 323,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                11,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            10,
                            false
                        ],
                        null
                    ],
                    "\"TR000\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT language FROM foreign_data WHERE multiverseid = 149934",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "multiverse number 149934 refers to multiverseid = 149934;",
        "question": "What is the language of the card with the multiverse number 149934?",
        "question_id": 422,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        1
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                77,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            78,
                            false
                        ],
                        null
                    ],
                    149934.0,
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT hero_id FROM hero_attribute WHERE attribute_value = ( SELECT MIN(attribute_value) FROM hero_attribute )",
        "db_id": "superhero",
        "difficulty": "simple",
        "evidence": "lowest attribute value refers to MIN(attribute_value);",
        "question": "Give the hero ID of superhero with the lowest attribute value.",
        "question_id": 837,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        7
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                25,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            27,
                            false
                        ],
                        null
                    ],
                    {
                        "except": null,
                        "from": {
                            "conds": [],
                            "table_units": [
                                [
                                    "table_unit",
                                    7
                                ]
                            ]
                        },
                        "groupBy": [],
                        "having": [],
                        "intersect": null,
                        "limit": null,
                        "orderBy": [],
                        "select": [
                            false,
                            [
                                [
                                    2,
                                    [
                                        0,
                                        [
                                            0,
                                            27,
                                            false
                                        ],
                                        null
                                    ]
                                ]
                            ]
                        ],
                        "union": null,
                        "where": []
                    },
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT id FROM sets WHERE type = 'commander' ORDER BY totalSetSize DESC LIMIT 1",
        "db_id": "card_games",
        "difficulty": "challenging",
        "evidence": "expansion type refers to type where type = 'commander'; totalSetSize: The total number of cards in the set, including promotional and related supplemental products but excluding Alchemy modifications; highest total number of cards refers to MAX(totalSetSize)",
        "question": "Among the sets whose expansion type is Commander, which set has the highest total number of cards including promotional and related supplemental products but excluding Alchemy modifications? Indicate the id of the set.",
        "question_id": 513,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": 1,
            "orderBy": [
                "desc",
                [
                    [
                        0,
                        [
                            0,
                            106,
                            false
                        ],
                        null
                    ]
                ]
            ],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                87,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            107,
                            false
                        ],
                        null
                    ],
                    "\"commander\"",
                    null
                ]
            ]
        }
    },
    {
        "query": "SELECT name FROM sets WHERE code = 'ALL'",
        "db_id": "card_games",
        "difficulty": "simple",
        "evidence": "",
        "question": "List out the set name of the set code \"ALL\".",
        "question_id": 439,
        "sql": {
            "except": null,
            "from": {
                "conds": [],
                "table_units": [
                    [
                        "table_unit",
                        3
                    ]
                ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
                false,
                [
                    [
                        0,
                        [
                            0,
                            [
                                0,
                                102,
                                false
                            ],
                            null
                        ]
                    ]
                ]
            ],
            "union": null,
            "where": [
                [
                    false,
                    2,
                    [
                        0,
                        [
                            0,
                            91,
                            false
                        ],
                        null
                    ],
                    "\"ALL\"",
                    null
                ]
            ]
        }
    }
]