[
    {
        "input": "Which molecules have triple bonds and list all the elements they contain.",
        "db_id": "toxicology",
        "sql": "select molecule.molecule_id , atom.element from atom join molecule on atom.molecule_id = molecule.molecule_id join bond on molecule.molecule_id = bond.molecule_id where  bond.bond_type = \"triple\""
    },
    {
        "input": "How many patients with a normal RF don't have thrombosis?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID where  examination.diagnosis = \"Normal\" and examination.thrombosis != \"No\""
    },
    {
        "input": "What is the score and the link type ID for post ID 395?",
        "db_id": "codebase_community",
        "sql": "select posts.score , postlinks.linktypeid from postLinks join posts on postLinks.RelatedPostId = posts.Id where  posts.score = 395"
    },
    {
        "input": "What is the average number of bonds the atoms with the element iodine have?",
        "db_id": "toxicology",
        "sql": "select avg(bond.bond_type) from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  atom.element = \"iodine\""
    },
    {
        "input": "Which molecules have triple bonds and list all the elements they contain.",
        "db_id": "toxicology",
        "sql": "select molecule.molecule_id , atom.element from atom join molecule on atom.molecule_id = molecule.molecule_id join bond on molecule.molecule_id = bond.molecule_id where  bond.bond_type = \"triple\""
    },
    {
        "input": "How many atoms with iodine and with sulfur type elements are there in single bond molecules?",
        "db_id": "toxicology",
        "sql": "select count(*) from atom where  atom.atom_id in (select connected.atom_id2 from connected join bond on connected.bond_id = bond.bond_id where  bond.bond_type = \"iodine\"   intersect select connected.atom_id2 from connected join bond on connected.bond_id = bond.bond_id where  bond.bond_type = \"sulfur\"   )"
    },
    {
        "input": "Among the patients with the normal level of triglyceride, how many of them have other symptoms observed?",
        "db_id": "thrombosis_prediction",
        "sql": "select count( distinct examination.symptoms) from Examination where  examination.diagnosis = \"Normal\""
    },
    {
        "input": "Calculate the average height of all neutral superheroes.",
        "db_id": "superhero",
        "sql": "select avg(superhero.height_cm) from superhero join alignment on superhero.alignment_id = alignment.id where  alignment.alignment = \"Neutral\""
    },
    {
        "input": "Are there more in-patient or outpatient who were male? What is the deviation in percentage?",
        "db_id": "thrombosis_prediction",
        "sql": "select avg(patient.sex) from Patient where  patient.sex = \"M\""
    },
    {
        "input": "Among the cards whose version of frame style is 1997, what is the status of the card illustrated by D. Alexander Gregory in legacy play format that has sensitive content or Wizards of the Coast?",
        "db_id": "card_games",
        "sql": "select legalities.status from legalities join cards on legalities.uuid = cards.uuid where  cards.frameversion = 1997 and cards.artist = \"D. Alexander Gregory\"   union select legalities.status from legalities where  legalities.format = \"traditional\""
    },
    {
        "input": "For the customer who paid 634.8 in 2012/8/25, what was the consumption decrease rate from Year 2012 to 2013?",
        "db_id": "debit_card_specializing",
        "sql": "select yearmonth.consumption from yearmonth where  yearmonth.consumption between 2012 and 2013"
    },
    {
        "input": "Provide the hero name and race of Charles Chandler.",
        "db_id": "superhero",
        "sql": "select superhero.superhero_name , race.race from superhero join race on superhero.race_id = race.id where  superhero.full_name = \"Charles Chandler\""
    },
    {
        "input": "What was the average overall rating for Marko Arnautovic from 2007/2/22 to 2016/4/21?",
        "db_id": "european_football_2",
        "sql": "select avg(player_attributes.overall_rating) from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.player_name = \"Marko Arnautovic\" and player_attributes.date > \"2007/2/22\" and player_attributes.date < \"2016/4/21\""
    },
    {
        "input": "Indicate the name of the closed event whose cost has exceeded the budget the most.",
        "db_id": "student_club",
        "sql": "select event.event_name from expense join budget on expense.link_to_budget = budget.budget_id join event on budget.link_to_event = event.event_id where  event.status = \"Closed\"  group by event.event_name  order by sum(expense.cost) desc limit 1"
    },
    {
        "input": "How many gold-eyed superheroes did Marvel Comics publish?",
        "db_id": "superhero",
        "sql": "select count(*) from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"Marvel Comics\""
    },
    {
        "input": "Calculate the percentage of molecules containing carcinogenic compounds that element is hydrogen.",
        "db_id": "toxicology",
        "sql": "select count(*) from atom join molecule on atom.molecule_id = molecule.molecule_id where  atom.element = \"hydrogen\" and atom.element > 0"
    },
    {
        "input": "What are the elements for bond id TR001_10_11?",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_id = \"TR001_10_11\""
    },
    {
        "input": "Find the name and date of events with expenses for pizza that were more than fifty dollars but less than a hundred dollars.",
        "db_id": "student_club",
        "sql": "select event.event_name , event.event_date from expense join budget on expense.link_to_budget = budget.budget_id join event on budget.link_to_event = event.event_id where  expense.expense_description = \"Pizza\" and expense.cost > 50 and expense.expense_date < 100"
    },
    {
        "input": "Among all superheroes in Marvel Comics, identify the percentage of 'good' superheroes.",
        "db_id": "superhero",
        "sql": "select superhero.superhero_name , count(*) from superhero join alignment on superhero.alignment_id = alignment.id where  alignment.alignment = \"Good\"  group by superhero.superhero_name"
    },
    {
        "input": "Which superhero has the same eyes, hair and skin colour? Indicate the publisher of the superhero.",
        "db_id": "superhero",
        "sql": "select publisher.publisher_name from superhero join publisher on superhero.publisher_id = publisher.id"
    },
    {
        "input": "What's the French name of the set of cards with \"Tendo Ice Bridge\" is in?",
        "db_id": "card_games",
        "sql": "select sets.name from foreign_data join cards on foreign_data.uuid = cards.uuid join sets on foreign_data.type = sets.type where  cards.name = \"Tendo Ice Bridge\" and foreign_data.language = \"French\""
    },
    {
        "input": "What is the average blood albumin level for female patients with a PLT greater than 400 who have been diagnosed with SLE?",
        "db_id": "thrombosis_prediction",
        "sql": "select avg(laboratory.alb) from Laboratory join Patient on Laboratory.ID = Patient.ID where  patient.sex = \"F\" and patient.diagnosis > 400 and patient.diagnosis = \"SLE\""
    },
    {
        "input": "Which molecules have triple bonds and list all the elements they contain.",
        "db_id": "toxicology",
        "sql": "select molecule.molecule_id , atom.element from atom join molecule on atom.molecule_id = molecule.molecule_id join bond on molecule.molecule_id = bond.molecule_id where  bond.bond_type = \"triple\""
    },
    {
        "input": "What is the average fastest lap time in seconds for Lewis Hamilton in all the Formula_1 races?",
        "db_id": "formula_1",
        "sql": "select avg(laptimes.milliseconds) from lapTimes join drivers on lapTimes.driverId = drivers.driverId where  drivers.forename = \"Lewis\" and drivers.surname = \"Formula_1\""
    },
    {
        "input": "What is the highest eligible free rate for K-12 students in the schools in Alameda County?",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "What are the elements of the atoms of TR144_8_19?",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join atom on connected.atom_id2 = atom.atom_id where  connected.bond_id = \"TR144_8_19\""
    },
    {
        "input": "List all carcinogenic molecules and their elements.",
        "db_id": "toxicology",
        "sql": "select molecule.molecule_id , atom.element from atom join molecule on atom.molecule_id = molecule.molecule_id where  atom.element = \"carcinogen\""
    },
    {
        "input": "What are the elements of the atoms of TR144_8_19?",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join atom on connected.atom_id2 = atom.atom_id where  connected.bond_id = \"TR144_8_19\""
    },
    {
        "input": "What is the unique id of the set that has the highest number of cards?",
        "db_id": "card_games",
        "sql": "select sets.id from cards join sets on cards.id = sets.id  group by sets.id  order by count(*) desc limit 1"
    },
    {
        "input": "How many times was the budget in Advertisement for \"Yearly Kickoff\" meeting more than \"October Meeting\"?",
        "db_id": "student_club",
        "sql": "select count(*) from budget join event on budget.link_to_event = event.event_id where  event.event_name = \"Yearly Kickoff\" and budget.amount > \"October Meeting\""
    },
    {
        "input": "Which customers, paying in CZK, consumed the most gas in 2011?",
        "db_id": "debit_card_specializing",
        "sql": "select customers.segment from yearmonth join customers on yearmonth.CustomerID = customers.CustomerID where  customers.currency = \"CZK\"   order by yearmonth.consumption desc limit 1"
    },
    {
        "input": "For all the set of cards that has Japanese translation, what is the percentage of them are only available in non-foil?",
        "db_id": "card_games",
        "sql": "select cards.availability from cards join set_translations on cards.id = set_translations.id where  set_translations.language = \"Japanese\""
    },
    {
        "input": "What is the description about the ruling of card \"Condemn\"?",
        "db_id": "card_games",
        "sql": "select rulings.text from rulings join cards on rulings.uuid = cards.uuid where  cards.name = \"Condemn\""
    },
    {
        "input": "Was the patient a man or a women whose ALT glutamic pylvic transaminase status got 9 on 1992-6-12?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.sex from Laboratory join Patient on Laboratory.ID = Patient.ID where  patient.sex = \"M\" and laboratory.got = 9"
    },
    {
        "input": "Which user added a bounty amount of 50 to the post title mentioning variance?",
        "db_id": "codebase_community",
        "sql": "select posthistory.userdisplayname from postHistory join users on postHistory.UserId = users.Id join votes on users.Id = votes.UserId where  posthistory.comment = \"Variance\" and votes.bountyamount = 50"
    },
    {
        "input": "What is the ratio of male to female patients among all those with abnormal uric acid counts?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "What is the average index of the lactate dehydrogenase (LDH) for all patients with lactate dehydrogenase (LDH) within the normal range.",
        "db_id": "thrombosis_prediction",
        "sql": "select avg(laboratory.ldh) from Examination join Patient on Examination.ID = Patient.ID join Laboratory on Patient.ID = Laboratory.ID where  examination.diagnosis = \"Normal\""
    },
    {
        "input": "What is the average fastest lap time of the top 10 drivers in the 2006 United States Grand Prix?",
        "db_id": "formula_1",
        "sql": "select avg(results.fastestlaptime) from lapTimes join races on lapTimes.raceId = races.raceId join results on races.raceId = results.raceId where  races.year = 2006   order by laptimes.time desc limit 10"
    },
    {
        "input": "What is the percentage of players that are under 180 cm who have an overall strength of more than 70?",
        "db_id": "european_football_2",
        "sql": "select count(*) from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.height < 180 and player_attributes.strength > 70"
    },
    {
        "input": "What percentage of carcinogenic-type molecules does not contain fluorine?",
        "db_id": "toxicology",
        "sql": "select count(*) from bond join molecule on bond.molecule_id = molecule.molecule_id where  bond.bond_type != \"carcinogenic\""
    },
    {
        "input": "What is the mana cost of cards with a normal layout, a 2003 frame version, with a black border color, and available in paper and mtgo?",
        "db_id": "card_games",
        "sql": "select cards.manacost from cards where  cards.layout = \"normal\" and cards.frameversion = \"2003\" and cards.bordercolor = \"black\" and cards.availability = \"mtgo\""
    },
    {
        "input": "Of the schools that offers a magnet program serving a grade span of Kindergarten to 8th grade, how many offers Multiple Provision Types? List the number of cities that offers a Kindergarten to 8th grade span and indicate how many schools are there serving such grade span for each city.",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "What is the average fastest lap time of the top 10 drivers in the 2006 United States Grand Prix?",
        "db_id": "formula_1",
        "sql": "select avg(results.fastestlaptime) from lapTimes join races on lapTimes.raceId = races.raceId join results on races.raceId = results.raceId where  races.year = 2006   order by laptimes.time desc limit 10"
    },
    {
        "input": "What sex is the patient who in a medical examination was diagnosed with PSS and in a laboratory examination had a blood level of C-reactive protein de 2+, createnine 1 and LDH 123?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "List the skin colour of the superheroes with 100 attribute value.",
        "db_id": "superhero",
        "sql": "select superhero.skin_colour_id from hero_attribute join superhero on hero_attribute.hero_id = superhero.id where  hero_attribute.attribute_value = 100"
    },
    {
        "input": "What is the name of the social event that was attended by the vice president of the Student_Club located at 900 E. Washington St.?",
        "db_id": "student_club",
        "sql": "select event.event_name from attendance join member on attendance.link_to_member = member.member_id join event on attendance.link_to_event = event.event_id where  event.location = \"900 E. Washington St.\" and member.position = \"Vice President\""
    },
    {
        "input": "List down Ajax's superpowers.",
        "db_id": "superhero",
        "sql": "select superpower.power_name from hero_power join superpower on hero_power.power_id = superpower.id join superhero on hero_power.hero_id = superhero.id where  superhero.superhero_name = \"Ajax\""
    },
    {
        "input": "List all patients who were followed up at the outpatient clinic who underwent a laboratory test in October 1991 and had a total blood bilirubin level within the normal range.",
        "db_id": "thrombosis_prediction",
        "sql": "select distinct patient.id from Examination join Patient on Examination.ID = Patient.ID join Laboratory on Patient.ID = Laboratory.ID where  examination.diagnosis = \"Normal\" and laboratory.date = 1991"
    },
    {
        "input": "How many students of the Student_Club have attended the event \"Women's Soccer\"?",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "How many percent of female heroes were published by Marvel Comics?",
        "db_id": "superhero",
        "sql": "select count(*) from superhero join publisher on superhero.publisher_id = publisher.id join gender on superhero.gender_id = gender.id where  gender.gender = \"Female\" and publisher.publisher_name = \"Marvel Comics\""
    },
    {
        "input": "What's the French name of the set of cards with \"Tendo Ice Bridge\" is in?",
        "db_id": "card_games",
        "sql": "select sets.name from foreign_data join cards on foreign_data.uuid = cards.uuid join sets on foreign_data.type = sets.type where  cards.name = \"Tendo Ice Bridge\" and foreign_data.language = \"French\""
    },
    {
        "input": "Name the atoms' elements that form bond TR000_2_3.",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_id = \"TR000_2_3\""
    },
    {
        "input": "List down Ajax's superpowers.",
        "db_id": "superhero",
        "sql": "select superpower.power_name from hero_power join superpower on hero_power.power_id = superpower.id join superhero on hero_power.hero_id = superhero.id where  superhero.superhero_name = \"Ajax\""
    },
    {
        "input": "Calculate the average home team goal in the 2010/2011 season in the country of Poland.",
        "db_id": "european_football_2",
        "sql": "select avg(match.home_team_goal) from Country join Match on Country.id = Match.id where  country.name = \"Poland\" and match.season = \"2010/2011\""
    },
    {
        "input": "Among the patients have blood clots in veins, how many of them have a normal level of complement 4?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID join Laboratory on Patient.ID = Laboratory.ID where  examination.thrombosis = \"Normal\" and laboratory.c4 = 4"
    },
    {
        "input": "What percentage is Landon Donovan's overall rating higher than Jordan Bowery on 2013/7/12?",
        "db_id": "european_football_2",
        "sql": "select player_attributes.overall_rating from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.player_name > \"Landon Donovan\" and player_attributes.date = \"2013/7/12\""
    },
    {
        "input": "How many gold-eyed superheroes did Marvel Comics publish?",
        "db_id": "superhero",
        "sql": "select count(*) from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"Marvel Comics\""
    },
    {
        "input": "How many users are awarded with more than 5 badges?",
        "db_id": "codebase_community",
        "sql": "select count(*) from badges  group by badges.Id having  count(*) > 5"
    },
    {
        "input": "Provide ID, sex and age of patient who has blood glucose (GLU) not within normal range but with total cholesterol(T-CHO) within normal range.",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "What is the percentage of incredibly powerful cards in the set Coldsnap?",
        "db_id": "card_games",
        "sql": "select avg(cards.power) from cards join sets on cards.id = sets.id where  sets.name = \"Coldsnap\""
    },
    {
        "input": "Which country is the league Italy Serie A from?",
        "db_id": "european_football_2",
        "sql": "select league.country_id from League join Country on League.country_id = Country.id where  country.name = \"Italy\" and league.name = \"Serie A\""
    },
    {
        "input": "Based on posts posted by Community, calculate the percentage of posts that use the R language.",
        "db_id": "codebase_community",
        "sql": "select count(*) from posts join users on posts.OwnerUserId = users.Id where  users.displayname = \"Community\" and posts.posttypeid = \"R\""
    },
    {
        "input": "Which constructor scored most points from Monaco Grand Prix between 1980 and 2010? List the score, name and nationality of this team.",
        "db_id": "formula_1",
        "sql": "select constructors.name , constructors.nationality from constructorStandings join constructors on constructorStandings.constructorId = constructors.constructorId join races on constructorStandings.raceId = races.raceId where  races.year between 1980 and 2010 and constructorstandings.points = \"Monaco Grand Prix\""
    },
    {
        "input": "How many times was the budget in Advertisement for \"Yearly Kickoff\" meeting more than \"October Meeting\"?",
        "db_id": "student_club",
        "sql": "select count(*) from budget join event on budget.link_to_event = event.event_id where  event.event_name = \"Yearly Kickoff\" and budget.amount > \"October Meeting\""
    },
    {
        "input": "Which home team had lost the fewest matches in the 2016 season?",
        "db_id": "european_football_2",
        "sql": "select match.home_team_api_id from Match where  match.season = 2016  group by match.home_team_api_id  order by count(*) asc limit 1"
    },
    {
        "input": "Among the players with an overall rating between 60 to 65, how many players whose going to be in all of your attack moves instead of defensing?",
        "db_id": "european_football_2",
        "sql": "select count(*) from Player_Attributes where  player_attributes.overall_rating between 60 and 65"
    },
    {
        "input": "What is the percentage of cards whose language is French among the Story Spotlight cards?",
        "db_id": "card_games",
        "sql": "select count(*) from foreign_data join cards on foreign_data.uuid = cards.uuid where  foreign_data.language = \"French\""
    },
    {
        "input": "What is the name of the social event that was attended by the vice president of the Student_Club located at 900 E. Washington St.?",
        "db_id": "student_club",
        "sql": "select event.event_name from attendance join member on attendance.link_to_member = member.member_id join event on attendance.link_to_event = event.event_id where  event.location = \"900 E. Washington St.\" and member.position = \"Vice President\""
    },
    {
        "input": "List the eyes, hair and skin colour of all female superheroes published by Dark Horse Comics.",
        "db_id": "superhero",
        "sql": "select superhero.eye_colour_id , superhero.hair_colour_id , superhero.skin_colour_id from superhero join publisher on superhero.publisher_id = publisher.id join gender on superhero.gender_id = gender.id where  gender.gender = \"Female\" and publisher.publisher_name = \"Dark Horse Comics\""
    },
    {
        "input": "Please list top three molecules that have single bonds between two atoms and are not carcinogenic in alphabetical order.",
        "db_id": "toxicology",
        "sql": "select molecule.molecule_id from bond join molecule on bond.molecule_id = molecule.molecule_id where  bond.bond_type = \"Single\"   except select bond.molecule_id from bond where  bond.bond_type = \"carcinogenic\"   order by molecule.molecule_id asc"
    },
    {
        "input": "What is the percentage of incredibly powerful cards in the set Coldsnap?",
        "db_id": "card_games",
        "sql": "select avg(cards.power) from cards join sets on cards.id = sets.id where  sets.name = \"Coldsnap\""
    },
    {
        "input": "Of the schools that offers a magnet program serving a grade span of Kindergarten to 8th grade, how many offers Multiple Provision Types? List the number of cities that offers a Kindergarten to 8th grade span and indicate how many schools are there serving such grade span for each city.",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "For the patients whose total cholesterol is higher than normal, how many of them have a negative measure of degree of coagulation?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID where  examination.diagnosis > \"Normal\""
    },
    {
        "input": "Among the patients have blood clots in veins, how many of them have a normal level of complement 4?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID join Laboratory on Patient.ID = Laboratory.ID where  examination.thrombosis = \"Normal\" and laboratory.c4 = 4"
    },
    {
        "input": "What was the difference in the number of crimes committed in East and North Bohemia in 1996?",
        "db_id": "financial",
        "sql": "select count(*) , district.a16 from district where  district.a3 = \"East\"  group by district.a16  intersect select count(*) , district.a16 from district where  district.a3 = \"North Bohemia\" and district.a16 = 1996"
    },
    {
        "input": "Which post has the highest score? Please give its id and title's name.",
        "db_id": "codebase_community",
        "sql": "select posts.id , posts.title from posts   order by posts.score desc limit 1"
    },
    {
        "input": "Which members who were approved from 1/10/2019 to 11/19/2019? Please identify the member who attended the event and the link to their event.",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "Which customers, paying in CZK, consumed the most gas in 2011?",
        "db_id": "debit_card_specializing",
        "sql": "select customers.segment from yearmonth join customers on yearmonth.CustomerID = customers.CustomerID where  customers.currency = \"CZK\"   order by yearmonth.consumption desc limit 1"
    },
    {
        "input": "List all the elements with double bond, consisted in molecule TR024.",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.molecule_id = \"TR024\" and bond.bond_type = \"double\""
    },
    {
        "input": "For all patients who are older than 55 years old, what is the percentage of female who has abnormal prothrombin time (PT)?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.sex , count(*) from Patient where  patient.sex > 55  group by patient.sex"
    },
    {
        "input": "What is the anti Cardiolipin antibody concentration of the female patient with the highest uric acid level in the normal range?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.diagnosis from Examination join Patient on Examination.ID = Patient.ID where  patient.sex = \"F\"   order by examination.diagnosis desc limit 1"
    },
    {
        "input": "On average how many carcinogenic molecules are single bonded?",
        "db_id": "toxicology",
        "sql": "select count(*) from bond join molecule on bond.molecule_id = molecule.molecule_id where  bond.bond_type = \"Single\"  group by bond.molecule_id"
    },
    {
        "input": "What is the owner user id of the most valuable post?",
        "db_id": "codebase_community",
        "sql": "select posts.owneruserid from posts   order by posts.score desc limit 1"
    },
    {
        "input": "Are there more male patients with creatinine not within the normal range than female? True or False?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.diagnosis from Examination join Patient on Examination.ID = Patient.ID where  patient.sex = \"M\" and examination.diagnosis != \"Normal\""
    },
    {
        "input": "Mention the category of events which were held at MU 215.",
        "db_id": "student_club",
        "sql": "select budget.category from budget join event on budget.link_to_event = event.event_id where  event.location = \"MU 215\""
    },
    {
        "input": "Which district has highest active loan?",
        "db_id": "financial",
        "sql": "select district.a2 from loan join account on loan.account_id = account.account_id join district on account.district_id = district.district_id  group by account.district_id  order by sum(loan.amount) desc limit 1"
    },
    {
        "input": "Calculate the percentage whereby Hamilton was not at the 1st track of the the f1 circuit since 2010.",
        "db_id": "formula_1",
        "sql": "select count(*) from driverStandings join drivers on driverStandings.driverId = drivers.driverId join races on driverStandings.raceId = races.raceId where  drivers.surname = \"Hamilton\" and races.year = 2010"
    },
    {
        "input": "How often does account number 3 request an account statement to be released? What was the aim of debiting 3539 in total?",
        "db_id": "financial",
        "sql": ""
    },
    {
        "input": "For loans contracts which are still running where client are in debt, list the district of the and the state the percentage unemployment rate increment from year 1995 to 1996.",
        "db_id": "financial",
        "sql": "select district.a13 , avg(loan.duration) from loan join account on loan.account_id = account.account_id join district on account.district_id = district.district_id where  loan.duration >= 1995  group by district.a13"
    },
    {
        "input": "Which members who were approved from 1/10/2019 to 11/19/2019? Please identify the member who attended the event and the link to their event.",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "What is the percentage of carbon in double-bond molecules?",
        "db_id": "toxicology",
        "sql": "select molecule.molecule_id , count(*) from bond join molecule on bond.molecule_id = molecule.molecule_id where  bond.bond_type = \"double\"  group by bond.molecule_id"
    },
    {
        "input": "What is the percentage of female patient were born after 1930?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Patient where  patient.sex = \"F\" and patient.birthday > 1930"
    },
    {
        "input": "Determine the bond type that is formed in the chemical compound containing element Carbon.",
        "db_id": "toxicology",
        "sql": "select bond.bond_type from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  atom.element = \"Carbon\""
    },
    {
        "input": "For all the female patient age 50 and above, who has abnormal red blood cell count. State if they were admitted to hospital.",
        "db_id": "thrombosis_prediction",
        "sql": "select * from Patient where  patient.sex = \"F\" and patient.admission >= 50 and patient.sex = \"F\""
    },
    {
        "input": "Of the schools that offers a magnet program serving a grade span of Kindergarten to 8th grade, how many offers Multiple Provision Types? List the number of cities that offers a Kindergarten to 8th grade span and indicate how many schools are there serving such grade span for each city.",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "What is the ratio of male to female patients among all those with abnormal uric acid counts?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "Which county reported the most number of school closure in the 1980s with school wonership code belonging to Youth Authority Facilities (CEA)?",
        "db_id": "california_schools",
        "sql": "select schools.county from schools where  schools.soctype = \"Youth Authority Facilities\"  group by schools.county  order by count(*) desc limit 1"
    },
    {
        "input": "What is the percentage of players that are under 180 cm who have an overall strength of more than 70?",
        "db_id": "european_football_2",
        "sql": "select count(*) from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.height < 180 and player_attributes.strength > 70"
    },
    {
        "input": "Identify the gender of the superhero who has the ability of Phoenix Force.",
        "db_id": "superhero",
        "sql": "select gender.gender from hero_power join superpower on hero_power.power_id = superpower.id join superhero on hero_power.hero_id = superhero.id join gender on superhero.gender_id = gender.id where  superpower.power_name = \"Phoenix Force\""
    },
    {
        "input": "What is the most common illness that doctors identified among the patients whose lab work was done between 1/1/1985, and 12/31/1995?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.diagnosis from Laboratory join Patient on Laboratory.ID = Patient.ID where  laboratory.date > \"1/1/1985\" and laboratory.date < \"12/31/1995\"  group by patient.diagnosis  order by count(*) desc limit 1"
    },
    {
        "input": "What number of patients with a degree of thrombosis level 2 and ANA pattern of only S, have a level of anti-Cardiolip in antibody (IgM) 20% higher than average?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "List the name of leagues in which the average goals by the home team is higher than the away team in the 2009/2010 season.",
        "db_id": "european_football_2",
        "sql": "select league.name from League join Match on League.id = Match.id  group by league.id having  avg(match.home_team_goal) > (select match.season from Match  )"
    },
    {
        "input": "How many students of the Student_Club have attended the event \"Women's Soccer\"?",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "What percentage of patients who were born in 1980 and were diagnosed with RA are women?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.sex from Patient where  patient.birthday = 1980 and patient.diagnosis = \"RA\""
    },
    {
        "input": "What elements are in the TR004_8_9 bond atoms?",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_id = \"TR004_8_9\""
    },
    {
        "input": "What is the lap record set by Lewis Hamilton in a Formula_1 race?",
        "db_id": "formula_1",
        "sql": "select results.laps from results join drivers on results.driverId = drivers.driverId where  drivers.forename = \"Lewis\" and drivers.surname = \"Formula_1\""
    },
    {
        "input": "How many members did attend the event 'Community Theater' in 2019?",
        "db_id": "student_club",
        "sql": "select count(*) from attendance join member on attendance.link_to_member = member.member_id join event on attendance.link_to_event = event.event_id where  event.event_name = \"Community Theater\" and event.event_date = 2019"
    },
    {
        "input": "For all the female patient age 50 and above, who has abnormal red blood cell count. State if they were admitted to hospital.",
        "db_id": "thrombosis_prediction",
        "sql": "select * from Patient where  patient.sex = \"F\" and patient.admission >= 50 and patient.sex = \"F\""
    },
    {
        "input": "How many members did attend the event 'Community Theater' in 2019?",
        "db_id": "student_club",
        "sql": "select count(*) from attendance join member on attendance.link_to_member = member.member_id join event on attendance.link_to_event = event.event_id where  event.event_name = \"Community Theater\" and event.event_date = 2019"
    },
    {
        "input": "Which constructor scored most points from Monaco Grand Prix between 1980 and 2010? List the score, name and nationality of this team.",
        "db_id": "formula_1",
        "sql": "select constructors.name , constructors.nationality from constructorStandings join constructors on constructorStandings.constructorId = constructors.constructorId join races on constructorStandings.raceId = races.raceId where  races.year between 1980 and 2010 and constructorstandings.points = \"Monaco Grand Prix\""
    },
    {
        "input": "Name the atoms' elements that form bond TR000_2_3.",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_id = \"TR000_2_3\""
    },
    {
        "input": "For the client who applied the biggest loan, what was his/her first amount of transaction after opened the account?",
        "db_id": "financial",
        "sql": "select loan.amount from loan   order by loan.amount desc limit 1"
    },
    {
        "input": "How many members did attend the event 'Community Theater' in 2019?",
        "db_id": "student_club",
        "sql": "select count(*) from attendance join member on attendance.link_to_member = member.member_id join event on attendance.link_to_event = event.event_id where  event.event_name = \"Community Theater\" and event.event_date = 2019"
    },
    {
        "input": "Which publisher created more superheroes: DC or Marvel Comics? Find the difference in the number of superheroes.",
        "db_id": "superhero",
        "sql": "select count(*) from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"DC\" or publisher.publisher_name = \"Marvel Comics\""
    },
    {
        "input": "Under whose administration is the school with the highest number of students scoring 1500 or more on the SAT? Indicate their full names.",
        "db_id": "california_schools",
        "sql": "select schools.admlname1 from satscores join schools on satscores.cds = schools.CDSCode where  satscores.numge1500 >= 1500  group by schools.admlname1  order by count(*) desc limit 1"
    },
    {
        "input": "What percentage of cards with format commander and legal status do not have a content warning?",
        "db_id": "card_games",
        "sql": "select avg(cards.hascontentwarning) from legalities join cards on legalities.uuid = cards.uuid where  legalities.format = \"commander\" and legalities.status = \"Legal\""
    },
    {
        "input": "Identify the gender of the superhero who has the ability of Phoenix Force.",
        "db_id": "superhero",
        "sql": "select gender.gender from hero_power join superpower on hero_power.power_id = superpower.id join superhero on hero_power.hero_id = superhero.id join gender on superhero.gender_id = gender.id where  superpower.power_name = \"Phoenix Force\""
    },
    {
        "input": "What's the French name of the set of cards with \"Tendo Ice Bridge\" is in?",
        "db_id": "card_games",
        "sql": "select sets.name from foreign_data join cards on foreign_data.uuid = cards.uuid join sets on foreign_data.type = sets.type where  cards.name = \"Tendo Ice Bridge\" and foreign_data.language = \"French\""
    },
    {
        "input": "Determine the bond type that is formed in the chemical compound containing element Carbon.",
        "db_id": "toxicology",
        "sql": "select bond.bond_type from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  atom.element = \"Carbon\""
    },
    {
        "input": "What is the percentage of female patient were born after 1930?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Patient where  patient.sex = \"F\" and patient.birthday > 1930"
    },
    {
        "input": "Calculate the percentage whereby Hamilton was not at the 1st track of the the f1 circuit since 2010.",
        "db_id": "formula_1",
        "sql": "select count(*) from driverStandings join drivers on driverStandings.driverId = drivers.driverId join races on driverStandings.raceId = races.raceId where  drivers.surname = \"Hamilton\" and races.year = 2010"
    },
    {
        "input": "Which toxic element can be found in the molecule TR151?",
        "db_id": "toxicology",
        "sql": "select atom.element from atom where  atom.molecule_id = \"TR151\""
    },
    {
        "input": "Please list the phone numbers of the students from the Student_Club that has attended the event \"Women's Soccer\".",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "Among the patients who have a normal platelet level, how many of them have other symptoms observed?",
        "db_id": "thrombosis_prediction",
        "sql": "select count( distinct examination.symptoms) from Examination where  examination.diagnosis = \"Normal\""
    },
    {
        "input": "How was the build up play dribbling class for \"LEI\" on 2015/9/10?",
        "db_id": "european_football_2",
        "sql": "select team_attributes.buildupplaydribblingclass from Team_Attributes join Team on Team_Attributes.team_api_id = Team.team_api_id join Match on Team.team_api_id = Match.away_team_api_id where  team.team_short_name = \"LEI\" and match.date = \"2015/9/10\""
    },
    {
        "input": "For the team \"Hannover 96\", what was its defence aggression class on 2015/9/10?",
        "db_id": "european_football_2",
        "sql": "select team_attributes.defenceaggressionclass from Team_Attributes join Team on Team_Attributes.team_api_id = Team.team_api_id where  team.team_long_name = \"Hannover 96\" and team_attributes.date = \"2015/9/10\""
    },
    {
        "input": "For the client who applied the biggest loan, what was his/her first amount of transaction after opened the account?",
        "db_id": "financial",
        "sql": "select loan.amount from loan   order by loan.amount desc limit 1"
    },
    {
        "input": "Among posts by Harvey Motulsky and Noah Snyder, which one has higher popularity?",
        "db_id": "codebase_community",
        "sql": ""
    },
    {
        "input": "How many patients have a normal level of anti-ribonuclear protein and have been admitted to the hospital?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID where  examination.diagnosis = \"Normal\" and patient.admission = \"Hospital\""
    },
    {
        "input": "What is the difference of the average ball control score between Abdou Diallo and Aaron Appindangoye\n?",
        "db_id": "european_football_2",
        "sql": "select avg(player_attributes.ball_control) from Player_Attributes where  player_attributes.player_api_id in (select Player.player_api_id from Player where  player.player_name = \"Abdou Diallo\"   intersect select Player.player_api_id from Player where  player.player_name = \"Aaron Appindangoye\"   )"
    },
    {
        "input": "What is the most common illness that doctors identified among the patients whose lab work was done between 1/1/1985, and 12/31/1995?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.diagnosis from Laboratory join Patient on Laboratory.ID = Patient.ID where  laboratory.date > \"1/1/1985\" and laboratory.date < \"12/31/1995\"  group by patient.diagnosis  order by count(*) desc limit 1"
    },
    {
        "input": "Find the name and date of events with expenses for pizza that were more than fifty dollars but less than a hundred dollars.",
        "db_id": "student_club",
        "sql": "select event.event_name , event.event_date from expense join budget on expense.link_to_budget = budget.budget_id join event on budget.link_to_event = event.event_id where  expense.expense_description = \"Pizza\" and expense.cost > 50 and expense.expense_date < 100"
    },
    {
        "input": "Which of these artists have designed a card in the set Coldsnap, Jeremy Jarvis, Aaron Miller or Chippy?",
        "db_id": "card_games",
        "sql": "select cards.artist from cards join sets on cards.id = sets.id where  sets.name = \"Coldsnap\" or sets.name = \"Aaron Miller\" or sets.name = \"Chippy\""
    },
    {
        "input": "Who are the players that tend to be attacking when their mates were doing attack moves? List down their name.",
        "db_id": "european_football_2",
        "sql": "select distinct player.player_name from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id join Match on Player.player_api_id = Match.away_player_11   order by player_attributes.attacking_work_rate asc limit 1"
    },
    {
        "input": "What are the player api id of 10 heaviest players?",
        "db_id": "european_football_2",
        "sql": "select player.player_api_id from Player   order by player.weight desc limit 10"
    },
    {
        "input": "Write the full names of students who received funds on the date of 9/9/2019 and include the amount received.",
        "db_id": "student_club",
        "sql": "select member.first_name , member.last_name , income.amount from income join member on income.link_to_member = member.member_id where  income.date_received = \"9/9/2019\""
    },
    {
        "input": "How many patients with a normal RF don't have thrombosis?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID where  examination.diagnosis = \"Normal\" and examination.thrombosis != \"No\""
    },
    {
        "input": "Under whose administration is the school with the highest number of students scoring 1500 or more on the SAT? Indicate their full names.",
        "db_id": "california_schools",
        "sql": "select schools.admlname1 from satscores join schools on satscores.cds = schools.CDSCode where  satscores.numge1500 >= 1500  group by schools.admlname1  order by count(*) desc limit 1"
    },
    {
        "input": "Calculate the difference in the percentage of members in New Jersey and Vermont.",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "What is the difference of the average ball control score between Abdou Diallo and Aaron Appindangoye\n?",
        "db_id": "european_football_2",
        "sql": "select avg(player_attributes.ball_control) from Player_Attributes where  player_attributes.player_api_id in (select Player.player_api_id from Player where  player.player_name = \"Abdou Diallo\"   intersect select Player.player_api_id from Player where  player.player_name = \"Aaron Appindangoye\"   )"
    },
    {
        "input": "Is the set of cards with Adarkar Valkyrie only available outside the United States?",
        "db_id": "card_games",
        "sql": "select cards.availability from cards where  cards.name = \"Adarkar Valkyrie\" and cards.isonlineonly != \"USA\""
    },
    {
        "input": "What is the lap record set by Lewis Hamilton in a Formula_1 race?",
        "db_id": "formula_1",
        "sql": "select results.laps from results join drivers on results.driverId = drivers.driverId where  drivers.forename = \"Lewis\" and drivers.surname = \"Formula_1\""
    },
    {
        "input": "What are the valid e-mail addresses of the administrator of the school located in the San Bernardino county, City of San Bernardino City Unified that opened between 1/1/2009 to 12/31/2010 whose school types are public Intermediate/Middle Schools and Unified Schools?",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "Among the players with an overall rating between 60 to 65, how many players whose going to be in all of your attack moves instead of defensing?",
        "db_id": "european_football_2",
        "sql": "select count(*) from Player_Attributes where  player_attributes.overall_rating between 60 and 65"
    },
    {
        "input": "Among all superheroes in Marvel Comics, identify the percentage of 'good' superheroes.",
        "db_id": "superhero",
        "sql": "select superhero.superhero_name , count(*) from superhero join alignment on superhero.alignment_id = alignment.id where  alignment.alignment = \"Good\"  group by superhero.superhero_name"
    },
    {
        "input": "Among the superheroes with the super power of \"Super Strength\", how many of them have a height of over 200cm?",
        "db_id": "superhero",
        "sql": "select count(*) from hero_power join superpower on hero_power.power_id = superpower.id join superhero on hero_power.hero_id = superhero.id where  superpower.power_name = \"Super Strength\""
    },
    {
        "input": "What percentage of cards without power are in French?",
        "db_id": "card_games",
        "sql": "select avg(cards.power) from foreign_data join cards on foreign_data.uuid = cards.uuid where  foreign_data.language = \"French\""
    },
    {
        "input": "Identify the gender of the superhero who has the ability of Phoenix Force.",
        "db_id": "superhero",
        "sql": "select gender.gender from hero_power join superpower on hero_power.power_id = superpower.id join superhero on hero_power.hero_id = superhero.id join gender on superhero.gender_id = gender.id where  superpower.power_name = \"Phoenix Force\""
    },
    {
        "input": "What is the unique id of the set that has the highest number of cards?",
        "db_id": "card_games",
        "sql": "select sets.id from cards join sets on cards.id = sets.id  group by sets.id  order by count(*) desc limit 1"
    },
    {
        "input": "How much faster in percentage is the champion than the driver who finished the race last in the 2008 Australian Grand Prix?",
        "db_id": "formula_1",
        "sql": "select avg(results.fastestlapspeed) from driverStandings join drivers on driverStandings.driverId = drivers.driverId join results on drivers.driverId = results.driverId where  driverstandings.wins > (select min(driverStandings.wins) from driverStandings join races on driverStandings.raceId = races.raceId where  races.year = 2008 and races.name = \"Australian Grand Prix\"  )"
    },
    {
        "input": "Calculate the average height for each superhero.",
        "db_id": "superhero",
        "sql": "select avg(superhero.height_cm) , superhero.superhero_name from superhero  group by superhero.superhero_name"
    },
    {
        "input": "What is the average height of a non-human superhero in Dark Horse Comics?",
        "db_id": "superhero",
        "sql": "select avg(superhero.height_cm) from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name != \"Dark Horse Comics\""
    },
    {
        "input": "How many gold-eyed superheroes did Marvel Comics publish?",
        "db_id": "superhero",
        "sql": "select count(*) from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"Marvel Comics\""
    },
    {
        "input": "Which superhero has the most durability published by Dark Horse Comics?",
        "db_id": "superhero",
        "sql": "select superhero.superhero_name from hero_power join superpower on hero_power.power_id = superpower.id join superhero on hero_power.hero_id = superhero.id join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"Dark Horse Comics\"   order by superpower.power_name desc limit 1"
    },
    {
        "input": "Among the users who obtained the \"Organizer\" badges, calculate the percentage of users who are teenagers.",
        "db_id": "codebase_community",
        "sql": "select users.age , count(*) from badges join users on badges.UserId = users.Id where  badges.name = \"Organizer\"  group by users.age"
    },
    {
        "input": "What is the badge name that user 'SilentGhost' obtained?",
        "db_id": "codebase_community",
        "sql": "select badges.name from badges join users on badges.UserId = users.Id where  users.displayname = \"SilentGhost\""
    },
    {
        "input": "What is the annual average number of sets that were released between 1/1/2012 to 12/31/2015? Indicate the common langugage of the card.",
        "db_id": "card_games",
        "sql": ""
    },
    {
        "input": "How many elements are contained in bond_id TR001_3_4?",
        "db_id": "toxicology",
        "sql": "select count(*) from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_id = \"TR001_3_4\""
    },
    {
        "input": "How many users are awarded with more than 5 badges?",
        "db_id": "codebase_community",
        "sql": "select count(*) from badges  group by badges.Id having  count(*) > 5"
    },
    {
        "input": "How much higher in percentage is Ariel Borysiuk's overall rating than that of Paulin Puel?",
        "db_id": "european_football_2",
        "sql": "select avg(player_attributes.overall_rating) from Player_Attributes where  player_attributes.player_api_id in (select Player.player_api_id from Player where  player.player_name = \"Ariel Borysiuk\"   intersect select Player.player_api_id from Player where  player.player_name = \"Paulin Puel\"   )"
    },
    {
        "input": "Which element is the least numerous in non-carcinogenic molecules?",
        "db_id": "toxicology",
        "sql": "select atom.element from atom where  atom.molecule_id = \"non-carcinogenic\"  group by atom.element  order by count(*) asc limit 1"
    },
    {
        "input": "Find the name and date of events with expenses for pizza that were more than fifty dollars but less than a hundred dollars.",
        "db_id": "student_club",
        "sql": "select event.event_name , event.event_date from expense join budget on expense.link_to_budget = budget.budget_id join event on budget.link_to_event = event.event_id where  expense.expense_description = \"Pizza\" and expense.cost > 50 and expense.expense_date < 100"
    },
    {
        "input": "For the client who applied the biggest loan, what was his/her first amount of transaction after opened the account?",
        "db_id": "financial",
        "sql": "select loan.amount from loan   order by loan.amount desc limit 1"
    },
    {
        "input": "Among the sets whose expansion type is Commander, which set has the highest total number of cards including promotional and related supplemental products but excluding Alchemy modifications? Indicate the id of the set.",
        "db_id": "card_games",
        "sql": "select sets.id from sets where  sets.type = \"commander\"  group by sets.id  order by sum(sets.totalsetsize) desc limit 1"
    },
    {
        "input": "What is the percentage difference of student badges given during 2010 and 2011?",
        "db_id": "codebase_community",
        "sql": "select avg(badges.date) from badges where  badges.date between 2010 and 2011"
    },
    {
        "input": "Calculate the percentage of carcinogenic molecules with triple bonded Hidrogen atoms.",
        "db_id": "toxicology",
        "sql": ""
    },
    {
        "input": "List the eyes, hair and skin colour of all female superheroes published by Dark Horse Comics.",
        "db_id": "superhero",
        "sql": "select superhero.eye_colour_id , superhero.hair_colour_id , superhero.skin_colour_id from superhero join publisher on superhero.publisher_id = publisher.id join gender on superhero.gender_id = gender.id where  gender.gender = \"Female\" and publisher.publisher_name = \"Dark Horse Comics\""
    },
    {
        "input": "Among the comments with scores between 5 to 10, what is the percentage of the users with 0 up votes?",
        "db_id": "codebase_community",
        "sql": "select users.upvotes from comments join users on comments.UserId = users.Id where  comments.score between 5 and 10"
    },
    {
        "input": "Which members who were approved from 1/10/2019 to 11/19/2019? Please identify the member who attended the event and the link to their event.",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "Are there more in-patient or outpatient who were male? What is the deviation in percentage?",
        "db_id": "thrombosis_prediction",
        "sql": "select avg(patient.sex) from Patient where  patient.sex = \"M\""
    },
    {
        "input": "For all patients who are older than 55 years old, what is the percentage of female who has abnormal prothrombin time (PT)?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.sex , count(*) from Patient where  patient.sex > 55  group by patient.sex"
    },
    {
        "input": "List all the elements of atoms that can not bond with any other atoms.",
        "db_id": "toxicology",
        "sql": "select atom.element from atom where  atom.atom_id not in (select connected.atom_id2 from connected  )"
    },
    {
        "input": "For the client whose loan was approved first in 1993/7/5, what is the increase rate of his/her account balance from 1993/3/22 to 1998/12/27?",
        "db_id": "financial",
        "sql": ""
    },
    {
        "input": "List the elements of all the triple bonds.",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_type like \"3%\""
    },
    {
        "input": "What is the annual average number of sets that were released between 1/1/2012 to 12/31/2015? Indicate the common langugage of the card.",
        "db_id": "card_games",
        "sql": ""
    },
    {
        "input": "List all the football player with the highest potential score.",
        "db_id": "european_football_2",
        "sql": "select distinct player.player_name from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id   order by player_attributes.potential desc limit 1"
    },
    {
        "input": "For patients with abnormal platelet level, state the number of patients with lower than normal range. How is it compare to the number of patients with higher than normal range?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "Calculate the total atoms consisting of the element carbon and hydrogen.",
        "db_id": "toxicology",
        "sql": "select count(*) from atom where  atom.atom_id in (select atom.atom_id from atom where  atom.element = \"carbon\"   intersect select atom.atom_id from atom where  atom.element = \"hydrogen\"   )"
    },
    {
        "input": "Calculate the average height for each superhero.",
        "db_id": "superhero",
        "sql": "select avg(superhero.height_cm) , superhero.superhero_name from superhero  group by superhero.superhero_name"
    },
    {
        "input": "What is the percentage of blue female superheroes among all female superheroes?",
        "db_id": "superhero",
        "sql": "select colour.colour , count(*) from superhero join colour on superhero.skin_colour_id = colour.id join gender on superhero.gender_id = gender.id where  gender.gender = \"Female\"  group by colour.colour"
    },
    {
        "input": "Find the triple-bonded molecules which are carcinogenic.",
        "db_id": "toxicology",
        "sql": "select molecule.molecule_id from connected join bond on connected.bond_id = bond.bond_id join molecule on bond.molecule_id = molecule.molecule_id where  bond.bond_type = \"triple\" and connected.atom_id in (select connected.atom_id from connected join bond on connected.bond_id = bond.bond_id join molecule on bond.molecule_id = molecule.molecule_id   order by molecule.molecule_id desc limit 1 )"
    },
    {
        "input": "Among the patients who has a normal level of anti-centromere and a normal level of anti-SSB, how many of them are male?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Laboratory join Patient on Laboratory.ID = Patient.ID where  patient.sex = \"M\" and laboratory.centromea = \"Normal\" and laboratory.ssb = \"SSB\""
    },
    {
        "input": "Which of the three segments—SME, LAM and KAM—has the biggest and lowest percentage increases in consumption paid in EUR between 2012 and 2013?",
        "db_id": "debit_card_specializing",
        "sql": "select customers.segment , customers.customerid , yearmonth.consumption from yearmonth join customers on yearmonth.CustomerID = customers.CustomerID where  customers.currency between 2012 and 2013"
    },
    {
        "input": "List all the elements with double bond, consisted in molecule TR024.",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.molecule_id = \"TR024\" and bond.bond_type = \"double\""
    },
    {
        "input": "How many molecules without sulphur element is not having double bond?",
        "db_id": "toxicology",
        "sql": "select count(*) from atom join molecule on atom.molecule_id = molecule.molecule_id where  atom.element != \"sulphur\""
    },
    {
        "input": "List the names of schools with more than 30 difference in enrollements between K-12 and ages 5-17? Please also give the full street adress of the schools.",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "List the name of leagues in which the average goals by the home team is higher than the away team in the 2009/2010 season.",
        "db_id": "european_football_2",
        "sql": "select league.name from League join Match on League.id = Match.id  group by league.id having  avg(match.home_team_goal) > (select match.season from Match  )"
    },
    {
        "input": "Based on posts posted by Community, calculate the percentage of posts that use the R language.",
        "db_id": "codebase_community",
        "sql": "select count(*) from posts join users on posts.OwnerUserId = users.Id where  users.displayname = \"Community\" and posts.posttypeid = \"R\""
    },
    {
        "input": "On what year did the youngest driver had his first qualifying race? Also state the name, date and time of the race.",
        "db_id": "formula_1",
        "sql": "select races.year , races.name , races.time from driverStandings join drivers on driverStandings.driverId = drivers.driverId join races on driverStandings.raceId = races.raceId   order by drivers.dob asc limit 1"
    },
    {
        "input": "How many patients with a normal RF don't have thrombosis?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID where  examination.diagnosis = \"Normal\" and examination.thrombosis != \"No\""
    },
    {
        "input": "Which molecules have triple bonds and list all the elements they contain.",
        "db_id": "toxicology",
        "sql": "select molecule.molecule_id , atom.element from atom join molecule on atom.molecule_id = molecule.molecule_id join bond on molecule.molecule_id = bond.molecule_id where  bond.bond_type = \"triple\""
    },
    {
        "input": "On what year did the youngest driver had his first qualifying race? Also state the name, date and time of the race.",
        "db_id": "formula_1",
        "sql": "select races.year , races.name , races.time from driverStandings join drivers on driverStandings.driverId = drivers.driverId join races on driverStandings.raceId = races.raceId   order by drivers.dob asc limit 1"
    },
    {
        "input": "Calculate the total average cost that Elijah Allen spent in the events on September and October.",
        "db_id": "student_club",
        "sql": "select sum(expense.cost) from expense join member on expense.link_to_member = member.member_id join budget on expense.link_to_budget = budget.budget_id join event on budget.link_to_event = event.event_id where  member.first_name = \"Elijah\" and member.last_name = \"Allen\" and event.event_date = \"September\" and event.event_date = \"October\""
    },
    {
        "input": "List down top 3 German drivers who has the shortest average pit stop duration and were born between 1980-1985.",
        "db_id": "formula_1",
        "sql": "select drivers.surname , drivers.driverid from pitStops join drivers on pitStops.driverId = drivers.driverId where  drivers.nationality = \"German\"  group by drivers.driverid  order by avg(pitstops.duration) asc limit 3"
    },
    {
        "input": "List the name of leagues in which the average goals by the home team is higher than the away team in the 2009/2010 season.",
        "db_id": "european_football_2",
        "sql": "select league.name from League join Match on League.id = Match.id  group by league.id having  avg(match.home_team_goal) > (select match.season from Match  )"
    },
    {
        "input": "Consider the average difference between K-12 enrollment and 15-17 enrollment of schools that are locally funded, list the names and DOC type of schools which has a difference above this average.",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "List out the account numbers of female clients who are oldest and has lowest average salary, calculate the gap between this lowest average salary with the highest average salary?",
        "db_id": "financial",
        "sql": ""
    },
    {
        "input": "Are there more in-patient or outpatient who were male? What is the deviation in percentage?",
        "db_id": "thrombosis_prediction",
        "sql": "select avg(patient.sex) from Patient where  patient.sex = \"M\""
    },
    {
        "input": "Are there more male patients with creatinine not within the normal range than female? True or False?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.diagnosis from Examination join Patient on Examination.ID = Patient.ID where  patient.sex = \"M\" and examination.diagnosis != \"Normal\""
    },
    {
        "input": "Tally the toxicology element of the 4th atom of each molecule that was carcinogenic.",
        "db_id": "toxicology",
        "sql": "select atom.element , count(*) from atom where  atom.element = \"carcinogenic\"  group by atom.element"
    },
    {
        "input": "List the superheroes from Marvel Comics who have the super power of 'Super Strength'.",
        "db_id": "superhero",
        "sql": "select superhero.superhero_name from hero_power join superpower on hero_power.power_id = superpower.id join superhero on hero_power.hero_id = superhero.id join publisher on superhero.publisher_id = publisher.id where  superpower.power_name = \"Super Strength\" and publisher.publisher_name = \"Marvel Comics\""
    },
    {
        "input": "For the patients whose total cholesterol is higher than normal, how many of them have a negative measure of degree of coagulation?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID where  examination.diagnosis > \"Normal\""
    },
    {
        "input": "For the teams with normal build-up play dribbling class in 2014, List the names of the teams with less than average chance creation passing, in descending order of chance creation passing.",
        "db_id": "european_football_2",
        "sql": "select team.team_long_name from Team_Attributes join Team on Team_Attributes.team_api_id = Team.team_api_id where  team_attributes.chancecreationpassing < (select avg(Team_Attributes.chanceCreationPassing) from Team_Attributes where  team_attributes.date = 2014  )    order by team_attributes.chancecreationpassing desc"
    },
    {
        "input": "What is the percentage of incredibly powerful cards in the set Coldsnap?",
        "db_id": "card_games",
        "sql": "select avg(cards.power) from cards join sets on cards.id = sets.id where  sets.name = \"Coldsnap\""
    },
    {
        "input": "In the race a driver set the lap record for the Austrian Grand Prix Circuit, how long did he spent at the pit stop at that same race?",
        "db_id": "formula_1",
        "sql": "select pitstops.duration from pitStops join races on pitStops.raceId = races.raceId where  races.name = \"Austrian Grand Prix\"   order by pitstops.duration desc limit 1"
    },
    {
        "input": "What is the lap record set by Lewis Hamilton in a Formula_1 race?",
        "db_id": "formula_1",
        "sql": "select results.laps from results join drivers on results.driverId = drivers.driverId where  drivers.forename = \"Lewis\" and drivers.surname = \"Formula_1\""
    },
    {
        "input": "For laboratory examinations take in 1984, list all patients below 50 years old with normal platelet level.",
        "db_id": "thrombosis_prediction",
        "sql": "select * from Laboratory join Patient on Laboratory.ID = Patient.ID where  patient.birthday < 50 and laboratory.date = 1984"
    },
    {
        "input": "Among the patients have blood clots in veins, how many of them have a normal level of complement 4?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID join Laboratory on Patient.ID = Laboratory.ID where  examination.thrombosis = \"Normal\" and laboratory.c4 = 4"
    },
    {
        "input": "Which publisher created more superheroes: DC or Marvel Comics? Find the difference in the number of superheroes.",
        "db_id": "superhero",
        "sql": "select count(*) from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"DC\" or publisher.publisher_name = \"Marvel Comics\""
    },
    {
        "input": "Among all the posts posted by the most influential user, identify the percentage with a score above 50.",
        "db_id": "codebase_community",
        "sql": "select posthistory.postid , count(*) from postHistory join posts on postHistory.PostId = posts.Id where  posts.score > 50  group by posthistory.postid  order by count(*) desc limit 1"
    },
    {
        "input": "Which foot is preferred by Abdou Diallo?",
        "db_id": "european_football_2",
        "sql": "select player_attributes.preferred_foot from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.player_name = \"Abdou Diallo\""
    },
    {
        "input": "In which years did Lewis Hamilton participate in a Formula_1 race?",
        "db_id": "formula_1",
        "sql": "select races.year from driverStandings join drivers on driverStandings.driverId = drivers.driverId join races on driverStandings.raceId = races.raceId where  drivers.forename = \"Lewis\" and drivers.surname = \"Formula_1\""
    },
    {
        "input": "Which bond type accounted for the majority of the bonds found in molecule TR010 and state whether or not this molecule is carcinogenic?",
        "db_id": "toxicology",
        "sql": "select bond.bond_type from bond join molecule on bond.molecule_id = molecule.molecule_id where  molecule.molecule_id = \"TR010\"  group by bond.bond_type  order by count(*) desc limit 1"
    },
    {
        "input": "In superheroes with missing weight data, calculate the difference between the number of superheroes with blue eyes and no eye color.",
        "db_id": "superhero",
        "sql": "select count(*) from superhero where  superhero.weight_kg = \"Blue\" and superhero.eye_colour_id != \"No\""
    },
    {
        "input": "How many molecules without sulphur element is not having double bond?",
        "db_id": "toxicology",
        "sql": "select count(*) from atom join molecule on atom.molecule_id = molecule.molecule_id where  atom.element != \"sulphur\""
    },
    {
        "input": "What are the valid e-mail addresses of the administrator of the school located in the San Bernardino county, City of San Bernardino City Unified that opened between 1/1/2009 to 12/31/2010 whose school types are public Intermediate/Middle Schools and Unified Schools?",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "The oldest SJS patient's medical laboratory work was completed on what date, and what age was the patient when they initially arrived at the hospital?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "Among the members who incurred expenses in more than one event, who paid the most amount?",
        "db_id": "student_club",
        "sql": "select expense.link_to_member from expense join budget on expense.link_to_budget = budget.budget_id  group by expense.link_to_member having  count(*) > 1  order by sum(budget.amount) desc limit 1"
    },
    {
        "input": "How many patients who were examined between 1987/7/6 and 1996/1/31 had a GPT level greater than 30 and an ALB level less than 4? List them by their ID.",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "What are the elements for bond id TR001_10_11?",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_id = \"TR001_10_11\""
    },
    {
        "input": "Among the cards whose version of frame style is 1997, what is the status of the card illustrated by D. Alexander Gregory in legacy play format that has sensitive content or Wizards of the Coast?",
        "db_id": "card_games",
        "sql": "select legalities.status from legalities join cards on legalities.uuid = cards.uuid where  cards.frameversion = 1997 and cards.artist = \"D. Alexander Gregory\"   union select legalities.status from legalities where  legalities.format = \"traditional\""
    },
    {
        "input": "What percentage of cards without power are in French?",
        "db_id": "card_games",
        "sql": "select avg(cards.power) from foreign_data join cards on foreign_data.uuid = cards.uuid where  foreign_data.language = \"French\""
    },
    {
        "input": "List out the account numbers of female clients who are oldest and has lowest average salary, calculate the gap between this lowest average salary with the highest average salary?",
        "db_id": "financial",
        "sql": ""
    },
    {
        "input": "Describe the display name of the parent ID for child post with the highest score.",
        "db_id": "codebase_community",
        "sql": "select users.displayname from posts join users on posts.OwnerUserId = users.Id   order by posts.score desc limit 1"
    },
    {
        "input": "Is the set of cards with Adarkar Valkyrie only available outside the United States?",
        "db_id": "card_games",
        "sql": "select cards.availability from cards where  cards.name = \"Adarkar Valkyrie\" and cards.isonlineonly != \"USA\""
    },
    {
        "input": "What is the percentage of carbon in double-bond molecules?",
        "db_id": "toxicology",
        "sql": "select molecule.molecule_id , count(*) from bond join molecule on bond.molecule_id = molecule.molecule_id where  bond.bond_type = \"double\"  group by bond.molecule_id"
    },
    {
        "input": "At present, calculate for the player's age who have a sprint speed of no less than 97 between 2013 to 2015.",
        "db_id": "european_football_2",
        "sql": "select * from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player_attributes.sprint_speed between 2013 and 2015"
    },
    {
        "input": "Show the Simplified Chinese translation of the name of the set \"Mirrodin\"?",
        "db_id": "card_games",
        "sql": "select set_translations.translation from set_translations join sets on set_translations.setCode = sets.code where  sets.name = \"Mirrodin\" and set_translations.language = \"Chinese\""
    },
    {
        "input": "When was the first time did Kevin Constant have his highest crossing score? Give the date.",
        "db_id": "european_football_2",
        "sql": "select player_attributes.date from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.player_name = \"Kevin Constant\"   order by player_attributes.crossing desc limit 1"
    },
    {
        "input": "What are the player api id of 10 heaviest players?",
        "db_id": "european_football_2",
        "sql": "select player.player_api_id from Player   order by player.weight desc limit 10"
    },
    {
        "input": "What is the eligible free rate of the 10th and 11th schools with the highest enrolment for students in grades 1 through 12?",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "How many white bordered cards are powerful?",
        "db_id": "card_games",
        "sql": "select count(*) from cards where  cards.bordercolor = \"white\""
    },
    {
        "input": "What are the elements of the toxicology and label of molecule TR060?",
        "db_id": "toxicology",
        "sql": "select atom.element , molecule.label from atom join molecule on atom.molecule_id = molecule.molecule_id where  molecule.molecule_id = \"TR060\""
    },
    {
        "input": "Calculate the percentage of molecules containing carcinogenic compounds that element is hydrogen.",
        "db_id": "toxicology",
        "sql": "select count(*) from atom join molecule on atom.molecule_id = molecule.molecule_id where  atom.element = \"hydrogen\" and atom.element > 0"
    },
    {
        "input": "For all patients who are older than 55 years old, what is the percentage of female who has abnormal prothrombin time (PT)?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.sex , count(*) from Patient where  patient.sex > 55  group by patient.sex"
    },
    {
        "input": "How many elements are contained in bond_id TR001_3_4?",
        "db_id": "toxicology",
        "sql": "select count(*) from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_id = \"TR001_3_4\""
    },
    {
        "input": "How many gold-eyed superheroes did Marvel Comics publish?",
        "db_id": "superhero",
        "sql": "select count(*) from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"Marvel Comics\""
    },
    {
        "input": "What percentage is Landon Donovan's overall rating higher than Jordan Bowery on 2013/7/12?",
        "db_id": "european_football_2",
        "sql": "select player_attributes.overall_rating from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.player_name > \"Landon Donovan\" and player_attributes.date = \"2013/7/12\""
    },
    {
        "input": "Calculate the total average cost that Elijah Allen spent in the events on September and October.",
        "db_id": "student_club",
        "sql": "select sum(expense.cost) from expense join member on expense.link_to_member = member.member_id join budget on expense.link_to_budget = budget.budget_id join event on budget.link_to_event = event.event_id where  member.first_name = \"Elijah\" and member.last_name = \"Allen\" and event.event_date = \"September\" and event.event_date = \"October\""
    },
    {
        "input": "In comments with score between 1 to 5, list down the display names of the users with 0 down votes.",
        "db_id": "codebase_community",
        "sql": "select users.displayname from comments join users on comments.UserId = users.Id where  comments.score between 1 and 5"
    },
    {
        "input": "What is the percentage of cards whose language is French among the Story Spotlight cards?",
        "db_id": "card_games",
        "sql": "select count(*) from foreign_data join cards on foreign_data.uuid = cards.uuid where  foreign_data.language = \"French\""
    },
    {
        "input": "List all the football player with the highest potential score.",
        "db_id": "european_football_2",
        "sql": "select distinct player.player_name from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id   order by player_attributes.potential desc limit 1"
    },
    {
        "input": "What elements are in a double type bond?",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_type = \"double\""
    },
    {
        "input": "Consider the average difference between K-12 enrollment and 15-17 enrollment of schools that are locally funded, list the names and DOC type of schools which has a difference above this average.",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "For all cards illustrated by Jim Pavelec. and describe the text of the ruling of these cards. Do these cards have missing or degraded properties and values.",
        "db_id": "card_games",
        "sql": "select rulings.text from rulings join cards on rulings.uuid = cards.uuid where  cards.artist = \"Jim Pavelec\" or rulings.text = \"No\""
    },
    {
        "input": "What is the percentage of carbon in double-bond molecules?",
        "db_id": "toxicology",
        "sql": "select molecule.molecule_id , count(*) from bond join molecule on bond.molecule_id = molecule.molecule_id where  bond.bond_type = \"double\"  group by bond.molecule_id"
    },
    {
        "input": "Find the name and date of events with expenses for pizza that were more than fifty dollars but less than a hundred dollars.",
        "db_id": "student_club",
        "sql": "select event.event_name , event.event_date from expense join budget on expense.link_to_budget = budget.budget_id join event on budget.link_to_event = event.event_id where  expense.expense_description = \"Pizza\" and expense.cost > 50 and expense.expense_date < 100"
    },
    {
        "input": "List all the elements of the toxicology of the molecule \"TR004\".",
        "db_id": "toxicology",
        "sql": "select atom.element from atom join molecule on atom.molecule_id = molecule.molecule_id where  molecule.molecule_id = \"TR004\""
    },
    {
        "input": "Calculate the total average cost that Elijah Allen spent in the events on September and October.",
        "db_id": "student_club",
        "sql": "select sum(expense.cost) from expense join member on expense.link_to_member = member.member_id join budget on expense.link_to_budget = budget.budget_id join event on budget.link_to_event = event.event_id where  member.first_name = \"Elijah\" and member.last_name = \"Allen\" and event.event_date = \"September\" and event.event_date = \"October\""
    },
    {
        "input": "Among the bad superheroes, what is the percentage of female superheroes?",
        "db_id": "superhero",
        "sql": "select alignment.alignment , count(*) from superhero join gender on superhero.gender_id = gender.id join alignment on superhero.alignment_id = alignment.id where  gender.gender = \"Female\"  group by alignment.alignment"
    },
    {
        "input": "Which constructor scored most points from Monaco Grand Prix between 1980 and 2010? List the score, name and nationality of this team.",
        "db_id": "formula_1",
        "sql": "select constructors.name , constructors.nationality from constructorStandings join constructors on constructorStandings.constructorId = constructors.constructorId join races on constructorStandings.raceId = races.raceId where  races.year between 1980 and 2010 and constructorstandings.points = \"Monaco Grand Prix\""
    },
    {
        "input": "Please list the disparate time of the transactions taken place in the gas stations from chain no. 11.",
        "db_id": "debit_card_specializing",
        "sql": ""
    },
    {
        "input": "How many drivers managed to finish the race in the 2008 Australian Grand Prix?",
        "db_id": "formula_1",
        "sql": "select count( distinct results.driverid) from results join races on results.raceId = races.raceId where  races.year = 2008 and races.name = \"Australian Grand Prix\""
    },
    {
        "input": "Among the bad superheroes, what is the percentage of female superheroes?",
        "db_id": "superhero",
        "sql": "select alignment.alignment , count(*) from superhero join gender on superhero.gender_id = gender.id join alignment on superhero.alignment_id = alignment.id where  gender.gender = \"Female\"  group by alignment.alignment"
    },
    {
        "input": "Who are the players that tend to be attacking when their mates were doing attack moves? List down their name.",
        "db_id": "european_football_2",
        "sql": "select distinct player.player_name from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id join Match on Player.player_api_id = Match.away_player_11   order by player_attributes.attacking_work_rate asc limit 1"
    },
    {
        "input": "Among all superheroes created by George Lucas, identify the percentage of female superheroes.",
        "db_id": "superhero",
        "sql": "select superhero.superhero_name , count(*) from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"George Lucas\"  group by superhero.gender_id"
    },
    {
        "input": "List the top 10 players' names whose heights are above 180 in descending order of average heading accuracy.",
        "db_id": "european_football_2",
        "sql": "select player.player_name from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.height > 180  group by Player_Attributes.player_api_id  order by avg(player_attributes.heading_accuracy) desc limit 10"
    },
    {
        "input": "What is the average number of bonds the atoms with the element iodine have?",
        "db_id": "toxicology",
        "sql": "select avg(bond.bond_type) from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  atom.element = \"iodine\""
    },
    {
        "input": "How was the build up play dribbling class for \"LEI\" on 2015/9/10?",
        "db_id": "european_football_2",
        "sql": "select team_attributes.buildupplaydribblingclass from Team_Attributes join Team on Team_Attributes.team_api_id = Team.team_api_id join Match on Team.team_api_id = Match.away_team_api_id where  team.team_short_name = \"LEI\" and match.date = \"2015/9/10\""
    },
    {
        "input": "Between DC and Marvel Comics, which publisher has published more superheroes? Find the difference in the number of superheroes they have published.",
        "db_id": "superhero",
        "sql": "select publisher.publisher_name , count(*) from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"DC\"  group by superhero.publisher_id  intersect select publisher.publisher_name , count(*) from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"Marvel Comics\"   order by count(*) desc limit 1"
    },
    {
        "input": "What is the unique id of the set that has the highest number of cards?",
        "db_id": "card_games",
        "sql": "select sets.id from cards join sets on cards.id = sets.id  group by sets.id  order by count(*) desc limit 1"
    },
    {
        "input": "Among the cards whose version of frame style is 1997, what is the status of the card illustrated by D. Alexander Gregory in legacy play format that has sensitive content or Wizards of the Coast?",
        "db_id": "card_games",
        "sql": "select legalities.status from legalities join cards on legalities.uuid = cards.uuid where  cards.frameversion = 1997 and cards.artist = \"D. Alexander Gregory\"   union select legalities.status from legalities where  legalities.format = \"traditional\""
    },
    {
        "input": "Which user added a bounty amount of 50 to the post title mentioning variance?",
        "db_id": "codebase_community",
        "sql": "select posthistory.userdisplayname from postHistory join users on postHistory.UserId = users.Id join votes on users.Id = votes.UserId where  posthistory.comment = \"Variance\" and votes.bountyamount = 50"
    },
    {
        "input": "How was the build up play dribbling class for \"LEI\" on 2015/9/10?",
        "db_id": "european_football_2",
        "sql": "select team_attributes.buildupplaydribblingclass from Team_Attributes join Team on Team_Attributes.team_api_id = Team.team_api_id join Match on Team.team_api_id = Match.away_team_api_id where  team.team_short_name = \"LEI\" and match.date = \"2015/9/10\""
    },
    {
        "input": "Calculate the percentage whereby Hamilton was not at the 1st track of the the f1 circuit since 2010.",
        "db_id": "formula_1",
        "sql": "select count(*) from driverStandings join drivers on driverStandings.driverId = drivers.driverId join races on driverStandings.raceId = races.raceId where  drivers.surname = \"Hamilton\" and races.year = 2010"
    },
    {
        "input": "Give the full name and contact number of members who had to spend more than average on each expense.",
        "db_id": "student_club",
        "sql": "select member.first_name , member.last_name , member.phone from expense join member on expense.link_to_member = member.member_id where  expense.cost > (select avg(expense.cost) from expense  )"
    },
    {
        "input": "List the long name of teams with above-average build-up play passing in 2012.",
        "db_id": "european_football_2",
        "sql": "select team.team_long_name from Team_Attributes join Team on Team_Attributes.team_api_id = Team.team_api_id where  team_attributes.buildupplaypassing > (select avg(Team_Attributes.buildUpPlayPassing) from Team_Attributes where  team_attributes.date = 2012  )"
    },
    {
        "input": "Provide the heights of the heroes whose eye colours are amber.",
        "db_id": "superhero",
        "sql": "select superhero.height_cm from superhero join colour on superhero.skin_colour_id = colour.id where  colour.colour = \"Amber\""
    },
    {
        "input": "In comments with score between 1 to 5, list down the display names of the users with 0 down votes.",
        "db_id": "codebase_community",
        "sql": "select users.displayname from comments join users on comments.UserId = users.Id where  comments.score between 1 and 5"
    },
    {
        "input": "Please list the phone numbers of the students from the Student_Club that has attended the event \"Women's Soccer\".",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "Among all the posts posted by the most influential user, identify the percentage with a score above 50.",
        "db_id": "codebase_community",
        "sql": "select posthistory.postid , count(*) from postHistory join posts on postHistory.PostId = posts.Id where  posts.score > 50  group by posthistory.postid  order by count(*) desc limit 1"
    },
    {
        "input": "Among the patients who has a normal level of anti-centromere and a normal level of anti-SSB, how many of them are male?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Laboratory join Patient on Laboratory.ID = Patient.ID where  patient.sex = \"M\" and laboratory.centromea = \"Normal\" and laboratory.ssb = \"SSB\""
    },
    {
        "input": "Among the cards with converted mana cost higher than 5 in the set Coldsnap, how many of them have unknown power?",
        "db_id": "card_games",
        "sql": "select count(*) from cards join sets on cards.id = sets.id where  cards.convertedmanacost > 5 and sets.name = \"Coldsnap\""
    },
    {
        "input": "When was the first time did Kevin Constant have his highest crossing score? Give the date.",
        "db_id": "european_football_2",
        "sql": "select player_attributes.date from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.player_name = \"Kevin Constant\"   order by player_attributes.crossing desc limit 1"
    },
    {
        "input": "Among the cards with converted mana cost higher than 5 in the set Coldsnap, how many of them have unknown power?",
        "db_id": "card_games",
        "sql": "select count(*) from cards join sets on cards.id = sets.id where  cards.convertedmanacost > 5 and sets.name = \"Coldsnap\""
    },
    {
        "input": "What is the average index of the lactate dehydrogenase (LDH) for all patients with lactate dehydrogenase (LDH) within the normal range.",
        "db_id": "thrombosis_prediction",
        "sql": "select avg(laboratory.ldh) from Examination join Patient on Examination.ID = Patient.ID join Laboratory on Patient.ID = Laboratory.ID where  examination.diagnosis = \"Normal\""
    },
    {
        "input": "For the branch which located in the south Bohemia with biggest number of inhabitants, what is the percentage of the male clients?",
        "db_id": "financial",
        "sql": "select client.gender from client join district on client.district_id = district.district_id where  district.a3 = \"south Bohemia\"  group by client.gender  order by count(*) desc limit 1"
    },
    {
        "input": "What is the eligible free rate of the 10th and 11th schools with the highest enrolment for students in grades 1 through 12?",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "What is the lap record set by Lewis Hamilton in a Formula_1 race?",
        "db_id": "formula_1",
        "sql": "select results.laps from results join drivers on results.driverId = drivers.driverId where  drivers.forename = \"Lewis\" and drivers.surname = \"Formula_1\""
    },
    {
        "input": "What is the percentage of female patient were born after 1930?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Patient where  patient.sex = \"F\" and patient.birthday > 1930"
    },
    {
        "input": "Among the members who incurred expenses in more than one event, who paid the most amount?",
        "db_id": "student_club",
        "sql": "select expense.link_to_member from expense join budget on expense.link_to_budget = budget.budget_id  group by expense.link_to_member having  count(*) > 1  order by sum(budget.amount) desc limit 1"
    },
    {
        "input": "What is the average time in seconds of champion for each year, before year 1975?",
        "db_id": "formula_1",
        "sql": "select avg(laptimes.milliseconds) , races.year from lapTimes join races on lapTimes.raceId = races.raceId where  races.year < 1975  group by races.year"
    },
    {
        "input": "Which toxic element can be found in the molecule TR151?",
        "db_id": "toxicology",
        "sql": "select atom.element from atom where  atom.molecule_id = \"TR151\""
    },
    {
        "input": "What percentage of patients who were born in 1980 and were diagnosed with RA are women?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.sex from Patient where  patient.birthday = 1980 and patient.diagnosis = \"RA\""
    },
    {
        "input": "What is the football player Francois Affolter header's finishing rate on 18/09/2014?",
        "db_id": "european_football_2",
        "sql": "select player_attributes.finishing from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.player_name = \"Francois Affolter\" and player_attributes.date = \"18/09/2014\""
    },
    {
        "input": "What is the anti Cardiolipin antibody concentration of the female patient with the highest uric acid level in the normal range?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.diagnosis from Examination join Patient on Examination.ID = Patient.ID where  patient.sex = \"F\"   order by examination.diagnosis desc limit 1"
    },
    {
        "input": "How much higher in percentage is Ariel Borysiuk's overall rating than that of Paulin Puel?",
        "db_id": "european_football_2",
        "sql": "select avg(player_attributes.overall_rating) from Player_Attributes where  player_attributes.player_api_id in (select Player.player_api_id from Player where  player.player_name = \"Ariel Borysiuk\"   intersect select Player.player_api_id from Player where  player.player_name = \"Paulin Puel\"   )"
    },
    {
        "input": "What is the ratio of male to female patients among all those with abnormal uric acid counts?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "In terms of number of points acquired, how many victories did the driver who ranked 91st acquired?",
        "db_id": "formula_1",
        "sql": "select driverstandings.wins from driverStandings where  driverstandings.position = 91"
    },
    {
        "input": "What is the average fastest lap time in seconds for Lewis Hamilton in all the Formula_1 races?",
        "db_id": "formula_1",
        "sql": "select avg(laptimes.milliseconds) from lapTimes join drivers on lapTimes.driverId = drivers.driverId where  drivers.forename = \"Lewis\" and drivers.surname = \"Formula_1\""
    },
    {
        "input": "List the names of closed event as \"game\" that was closed from 3/15/2019 to 3/20/2020.",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "Among the sets whose expansion type is Commander, which set has the highest total number of cards including promotional and related supplemental products but excluding Alchemy modifications? Indicate the id of the set.",
        "db_id": "card_games",
        "sql": "select sets.id from sets where  sets.type = \"commander\"  group by sets.id  order by sum(sets.totalsetsize) desc limit 1"
    },
    {
        "input": "What is the percentage of carbon in double-bond molecules?",
        "db_id": "toxicology",
        "sql": "select molecule.molecule_id , count(*) from bond join molecule on bond.molecule_id = molecule.molecule_id where  bond.bond_type = \"double\"  group by bond.molecule_id"
    },
    {
        "input": "What are the elements for bond id TR001_10_11?",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_id = \"TR001_10_11\""
    },
    {
        "input": "Calculate the average height for each superhero.",
        "db_id": "superhero",
        "sql": "select avg(superhero.height_cm) , superhero.superhero_name from superhero  group by superhero.superhero_name"
    },
    {
        "input": "Calculate the average height of all neutral superheroes.",
        "db_id": "superhero",
        "sql": "select avg(superhero.height_cm) from superhero join alignment on superhero.alignment_id = alignment.id where  alignment.alignment = \"Neutral\""
    },
    {
        "input": "How many unknown power cards contain info about the triggered ability",
        "db_id": "card_games",
        "sql": "select count( distinct cards.power) from cards where  cards.power = \"null\""
    },
    {
        "input": "How many matches in the 2015/2016 season were held in Scotland Premier League\n?",
        "db_id": "european_football_2",
        "sql": "select count(*) from League join Match on League.id = Match.id where  match.season = \"2015/2016\" and league.name = \"Scotland Premier League\""
    },
    {
        "input": "What percentage of cards with format commander and legal status do not have a content warning?",
        "db_id": "card_games",
        "sql": "select avg(cards.hascontentwarning) from legalities join cards on legalities.uuid = cards.uuid where  legalities.format = \"commander\" and legalities.status = \"Legal\""
    },
    {
        "input": "How was the build up play dribbling class for \"LEI\" on 2015/9/10?",
        "db_id": "european_football_2",
        "sql": "select team_attributes.buildupplaydribblingclass from Team_Attributes join Team on Team_Attributes.team_api_id = Team.team_api_id join Match on Team.team_api_id = Match.away_team_api_id where  team.team_short_name = \"LEI\" and match.date = \"2015/9/10\""
    },
    {
        "input": "How much faster in percentage is the champion than the driver who finished the race last in the 2008 Australian Grand Prix?",
        "db_id": "formula_1",
        "sql": "select avg(results.fastestlapspeed) from driverStandings join drivers on driverStandings.driverId = drivers.driverId join results on drivers.driverId = results.driverId where  driverstandings.wins > (select min(driverStandings.wins) from driverStandings join races on driverStandings.raceId = races.raceId where  races.year = 2008 and races.name = \"Australian Grand Prix\"  )"
    },
    {
        "input": "List the football team that has a build up play speed of 31, build up plan dribbling of 53, and build up play passing of 32. Only indicate the short name of the team.",
        "db_id": "european_football_2",
        "sql": ""
    },
    {
        "input": "What is the comment's rating score of the post which was created on 7/19/2010 7:19:56 PM",
        "db_id": "codebase_community",
        "sql": "select comments.score from comments where  comments.creationdate = \"2010-07-19\""
    },
    {
        "input": "Calculate the average height of all neutral superheroes.",
        "db_id": "superhero",
        "sql": "select avg(superhero.height_cm) from superhero join alignment on superhero.alignment_id = alignment.id where  alignment.alignment = \"Neutral\""
    },
    {
        "input": "What is the constructor reference name of the champion in the 2009 Singapore Grand Prix? Please give its website.",
        "db_id": "formula_1",
        "sql": "select constructors.name from constructorResults join constructors on constructorResults.constructorId = constructors.constructorId join races on constructorResults.raceId = races.raceId where  races.year = 2009 and races.name = \"Singapore Grand Prix\""
    },
    {
        "input": "In 2012, who had the least consumption in LAM?",
        "db_id": "debit_card_specializing",
        "sql": "select yearmonth.customerid , yearmonth.consumption from yearmonth join customers on yearmonth.CustomerID = customers.CustomerID where  customers.segment = \"LAM\"   order by yearmonth.consumption asc limit 1"
    },
    {
        "input": "Please calculate the race completion percentage of Japanese drivers from 2007 to 2009.",
        "db_id": "formula_1",
        "sql": "select results.driverid from results join drivers on results.driverId = drivers.driverId join races on results.raceId = races.raceId where  drivers.nationality = \"Japanese\" and races.year between 2007 and 2009"
    },
    {
        "input": "Please list the phone numbers of the students from the Student_Club that has attended the event \"Women's Soccer\".",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "List the long name of teams with above-average build-up play passing in 2012.",
        "db_id": "european_football_2",
        "sql": "select team.team_long_name from Team_Attributes join Team on Team_Attributes.team_api_id = Team.team_api_id where  team_attributes.buildupplaypassing > (select avg(Team_Attributes.buildUpPlayPassing) from Team_Attributes where  team_attributes.date = 2012  )"
    },
    {
        "input": "What is the bond type of TR007_4_19?",
        "db_id": "toxicology",
        "sql": "select bond.bond_type from bond where  bond.bond_id = \"TR007_4_19\""
    },
    {
        "input": "What is the publisher for Hawkman, Karate Kid and Speedy?",
        "db_id": "superhero",
        "sql": ""
    },
    {
        "input": "Of the schools that offers a magnet program serving a grade span of Kindergarten to 8th grade, how many offers Multiple Provision Types? List the number of cities that offers a Kindergarten to 8th grade span and indicate how many schools are there serving such grade span for each city.",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "Please list the disparate time of the transactions taken place in the gas stations from chain no. 11.",
        "db_id": "debit_card_specializing",
        "sql": ""
    },
    {
        "input": "What is the difference in the annual average consumption of the customers with the least amount of consumption paid in CZK for 2013 between SME and LAM, LAM and KAM, and KAM and SME?",
        "db_id": "debit_card_specializing",
        "sql": "select avg(yearmonth.consumption) from yearmonth join customers on yearmonth.CustomerID = customers.CustomerID where  customers.currency = \"CZK\"   order by yearmonth.consumption asc limit 1"
    },
    {
        "input": "What is the description about the ruling of card \"Condemn\"?",
        "db_id": "card_games",
        "sql": "select rulings.text from rulings join cards on rulings.uuid = cards.uuid where  cards.name = \"Condemn\""
    },
    {
        "input": "What is the mana cost of cards with a normal layout, a 2003 frame version, with a black border color, and available in paper and mtgo?",
        "db_id": "card_games",
        "sql": "select cards.manacost from cards where  cards.layout = \"normal\" and cards.frameversion = \"2003\" and cards.bordercolor = \"black\" and cards.availability = \"mtgo\""
    },
    {
        "input": "Write the full names of students who received funds on the date of 9/9/2019 and include the amount received.",
        "db_id": "student_club",
        "sql": "select member.first_name , member.last_name , income.amount from income join member on income.link_to_member = member.member_id where  income.date_received = \"9/9/2019\""
    },
    {
        "input": "Which top 20 driver created the shortest lap time ever record in a Formula_1 race? Please give them full names.",
        "db_id": "formula_1",
        "sql": "select drivers.surname , drivers.forename from lapTimes join drivers on lapTimes.driverId = drivers.driverId   order by laptimes.milliseconds asc limit 20"
    },
    {
        "input": "How much higher in percentage is Ariel Borysiuk's overall rating than that of Paulin Puel?",
        "db_id": "european_football_2",
        "sql": "select avg(player_attributes.overall_rating) from Player_Attributes where  player_attributes.player_api_id in (select Player.player_api_id from Player where  player.player_name = \"Ariel Borysiuk\"   intersect select Player.player_api_id from Player where  player.player_name = \"Paulin Puel\"   )"
    },
    {
        "input": "How was the build up play dribbling class for \"LEI\" on 2015/9/10?",
        "db_id": "european_football_2",
        "sql": "select team_attributes.buildupplaydribblingclass from Team_Attributes join Team on Team_Attributes.team_api_id = Team.team_api_id join Match on Team.team_api_id = Match.away_team_api_id where  team.team_short_name = \"LEI\" and match.date = \"2015/9/10\""
    },
    {
        "input": "For all the set of cards that has Brazil Portuguese translation, what is the percentage of them are only available online?",
        "db_id": "card_games",
        "sql": "select cards.availability from set_translations join sets on set_translations.setCode = sets.code join cards on sets.isOnlineOnly = cards.isOnlineOnly where  set_translations.translation = \"Brazil\" and sets.isonlineonly = \"online\""
    },
    {
        "input": "What is the average blood albumin level for female patients with a PLT greater than 400 who have been diagnosed with SLE?",
        "db_id": "thrombosis_prediction",
        "sql": "select avg(laboratory.alb) from Laboratory join Patient on Laboratory.ID = Patient.ID where  patient.sex = \"F\" and patient.diagnosis > 400 and patient.diagnosis = \"SLE\""
    },
    {
        "input": "For the client who applied the biggest loan, what was his/her first amount of transaction after opened the account?",
        "db_id": "financial",
        "sql": "select loan.amount from loan   order by loan.amount desc limit 1"
    },
    {
        "input": "At present, calculate for the player's age who have a sprint speed of no less than 97 between 2013 to 2015.",
        "db_id": "european_football_2",
        "sql": "select * from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player_attributes.sprint_speed between 2013 and 2015"
    },
    {
        "input": "For the customer who paid 634.8 in 2012/8/25, what was the consumption decrease rate from Year 2012 to 2013?",
        "db_id": "debit_card_specializing",
        "sql": "select yearmonth.consumption from yearmonth where  yearmonth.consumption between 2012 and 2013"
    },
    {
        "input": "Which set is not available outside of the United States and has foil cards with Japanese writing on them? Please include the set ID in your response.",
        "db_id": "card_games",
        "sql": "select sets.id from sets where  sets.isonlineonly not in (select cards.isOnlineOnly from foreign_data join cards on foreign_data.uuid = cards.uuid join sets on foreign_data.type = sets.type where  foreign_data.language = \"Japanese\"   )"
    },
    {
        "input": "What is the percentage of blue female superheroes among all female superheroes?",
        "db_id": "superhero",
        "sql": "select colour.colour , count(*) from superhero join colour on superhero.skin_colour_id = colour.id join gender on superhero.gender_id = gender.id where  gender.gender = \"Female\"  group by colour.colour"
    },
    {
        "input": "List the names of closed event as \"game\" that was closed from 3/15/2019 to 3/20/2020.",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "For the year that concluded on December 31, 1998, how many male patients on average were tested in the lab each month?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) , avg(patient.sex) , laboratory.date from Laboratory join Patient on Laboratory.ID = Patient.ID where  patient.sex = \"M\"  group by laboratory.date"
    },
    {
        "input": "Among the patients have blood clots in veins, how many of them have a normal level of complement 4?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID join Laboratory on Patient.ID = Laboratory.ID where  examination.thrombosis = \"Normal\" and laboratory.c4 = 4"
    },
    {
        "input": "Which post has the highest score? Please give its id and title's name.",
        "db_id": "codebase_community",
        "sql": "select posts.id , posts.title from posts   order by posts.score desc limit 1"
    },
    {
        "input": "How much faster in percentage is the champion than the driver who finished the race last in the 2008 Australian Grand Prix?",
        "db_id": "formula_1",
        "sql": "select avg(results.fastestlapspeed) from driverStandings join drivers on driverStandings.driverId = drivers.driverId join results on drivers.driverId = results.driverId where  driverstandings.wins > (select min(driverStandings.wins) from driverStandings join races on driverStandings.raceId = races.raceId where  races.year = 2008 and races.name = \"Australian Grand Prix\"  )"
    },
    {
        "input": "What was the average overall rating for Marko Arnautovic from 2007/2/22 to 2016/4/21?",
        "db_id": "european_football_2",
        "sql": "select avg(player_attributes.overall_rating) from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.player_name = \"Marko Arnautovic\" and player_attributes.date > \"2007/2/22\" and player_attributes.date < \"2016/4/21\""
    },
    {
        "input": "Provide the heights of the heroes whose eye colours are amber.",
        "db_id": "superhero",
        "sql": "select superhero.height_cm from superhero join colour on superhero.skin_colour_id = colour.id where  colour.colour = \"Amber\""
    },
    {
        "input": "For the year that concluded on December 31, 1998, how many male patients on average were tested in the lab each month?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) , avg(patient.sex) , laboratory.date from Laboratory join Patient on Laboratory.ID = Patient.ID where  patient.sex = \"M\"  group by laboratory.date"
    },
    {
        "input": "How many cards available in paper have a positive starting maximum hand size?",
        "db_id": "card_games",
        "sql": "select count(*) from cards where  cards.availability = \"paper\"   order by cards.hand desc limit 1"
    },
    {
        "input": "What is the average number of bonds the atoms with the element iodine have?",
        "db_id": "toxicology",
        "sql": "select avg(bond.bond_type) from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  atom.element = \"iodine\""
    },
    {
        "input": "Which superhero has the most durability published by Dark Horse Comics?",
        "db_id": "superhero",
        "sql": "select superhero.superhero_name from hero_power join superpower on hero_power.power_id = superpower.id join superhero on hero_power.hero_id = superhero.id join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"Dark Horse Comics\"   order by superpower.power_name desc limit 1"
    },
    {
        "input": "List the last name of the members of the club that attended the women's soccer event.",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "What percentage of male patients who first presented to the hospital in 1981 were diagnosed with BEHCET?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "What is the annual average number of sets that were released between 1/1/2012 to 12/31/2015? Indicate the common langugage of the card.",
        "db_id": "card_games",
        "sql": ""
    },
    {
        "input": "List all the elements with double bond, consisted in molecule TR024.",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.molecule_id = \"TR024\" and bond.bond_type = \"double\""
    },
    {
        "input": "Among the players with an overall rating between 60 to 65, how many players whose going to be in all of your attack moves instead of defensing?",
        "db_id": "european_football_2",
        "sql": "select count(*) from Player_Attributes where  player_attributes.overall_rating between 60 and 65"
    },
    {
        "input": "What was the chance creation crossing class for \"Hull City\" on 2010/2/22?",
        "db_id": "european_football_2",
        "sql": "select team_attributes.chancecreationcrossingclass from Team_Attributes where  team_attributes.date = \"2010/2/22\""
    },
    {
        "input": "What is the ratio of male to female patients among all those with abnormal uric acid counts?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "What is the average height of a non-human superhero in Dark Horse Comics?",
        "db_id": "superhero",
        "sql": "select avg(superhero.height_cm) from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name != \"Dark Horse Comics\""
    },
    {
        "input": "What is the anti Cardiolipin antibody concentration of the female patient with the highest uric acid level in the normal range?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.diagnosis from Examination join Patient on Examination.ID = Patient.ID where  patient.sex = \"F\"   order by examination.diagnosis desc limit 1"
    },
    {
        "input": "How many matches in the 2015/2016 season were held in Scotland Premier League\n?",
        "db_id": "european_football_2",
        "sql": "select count(*) from League join Match on League.id = Match.id where  match.season = \"2015/2016\" and league.name = \"Scotland Premier League\""
    },
    {
        "input": "List down at least five full names of superheroes with blue eyes.",
        "db_id": "superhero",
        "sql": "select superhero.full_name from superhero join colour on superhero.skin_colour_id = colour.id where  colour.colour = \"Blue\""
    },
    {
        "input": "On average how many carcinogenic molecules are single bonded?",
        "db_id": "toxicology",
        "sql": "select count(*) from bond join molecule on bond.molecule_id = molecule.molecule_id where  bond.bond_type = \"Single\"  group by bond.molecule_id"
    },
    {
        "input": "What was the chance creation crossing class for \"Hull City\" on 2010/2/22?",
        "db_id": "european_football_2",
        "sql": "select team_attributes.chancecreationcrossingclass from Team_Attributes where  team_attributes.date = \"2010/2/22\""
    },
    {
        "input": "Mention the category of events which were held at MU 215.",
        "db_id": "student_club",
        "sql": "select budget.category from budget join event on budget.link_to_event = event.event_id where  event.location = \"MU 215\""
    },
    {
        "input": "For the year that concluded on December 31, 1998, how many male patients on average were tested in the lab each month?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) , avg(patient.sex) , laboratory.date from Laboratory join Patient on Laboratory.ID = Patient.ID where  patient.sex = \"M\"  group by laboratory.date"
    },
    {
        "input": "Among the members who incurred expenses in more than one event, who paid the most amount?",
        "db_id": "student_club",
        "sql": "select expense.link_to_member from expense join budget on expense.link_to_budget = budget.budget_id  group by expense.link_to_member having  count(*) > 1  order by sum(budget.amount) desc limit 1"
    },
    {
        "input": "Among the cards with converted mana cost higher than 5 in the set Coldsnap, how many of them have unknown power?",
        "db_id": "card_games",
        "sql": "select count(*) from cards join sets on cards.id = sets.id where  cards.convertedmanacost > 5 and sets.name = \"Coldsnap\""
    },
    {
        "input": "What is the average fastest lap time in seconds for Lewis Hamilton in all the Formula_1 races?",
        "db_id": "formula_1",
        "sql": "select avg(laptimes.milliseconds) from lapTimes join drivers on lapTimes.driverId = drivers.driverId where  drivers.forename = \"Lewis\" and drivers.surname = \"Formula_1\""
    },
    {
        "input": "Calculate the percentage of carcinogenic molecules with triple bonded Hidrogen atoms.",
        "db_id": "toxicology",
        "sql": ""
    },
    {
        "input": "What percentage of patients who were born in 1980 and were diagnosed with RA are women?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.sex from Patient where  patient.birthday = 1980 and patient.diagnosis = \"RA\""
    },
    {
        "input": "Calculate the total average cost that Elijah Allen spent in the events on September and October.",
        "db_id": "student_club",
        "sql": "select sum(expense.cost) from expense join member on expense.link_to_member = member.member_id join budget on expense.link_to_budget = budget.budget_id join event on budget.link_to_event = event.event_id where  member.first_name = \"Elijah\" and member.last_name = \"Allen\" and event.event_date = \"September\" and event.event_date = \"October\""
    },
    {
        "input": "How many times was the budget in Advertisement for \"Yearly Kickoff\" meeting more than \"October Meeting\"?",
        "db_id": "student_club",
        "sql": "select count(*) from budget join event on budget.link_to_event = event.event_id where  event.event_name = \"Yearly Kickoff\" and budget.amount > \"October Meeting\""
    },
    {
        "input": "What was the average overall rating for Marko Arnautovic from 2007/2/22 to 2016/4/21?",
        "db_id": "european_football_2",
        "sql": "select avg(player_attributes.overall_rating) from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.player_name = \"Marko Arnautovic\" and player_attributes.date > \"2007/2/22\" and player_attributes.date < \"2016/4/21\""
    },
    {
        "input": "What is the percentage of female patient were born after 1930?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Patient where  patient.sex = \"F\" and patient.birthday > 1930"
    },
    {
        "input": "List the eyes, hair and skin colour of all female superheroes published by Dark Horse Comics.",
        "db_id": "superhero",
        "sql": "select superhero.eye_colour_id , superhero.hair_colour_id , superhero.skin_colour_id from superhero join publisher on superhero.publisher_id = publisher.id join gender on superhero.gender_id = gender.id where  gender.gender = \"Female\" and publisher.publisher_name = \"Dark Horse Comics\""
    },
    {
        "input": "Who are the players that tend to be attacking when their mates were doing attack moves? List down their name.",
        "db_id": "european_football_2",
        "sql": "select distinct player.player_name from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id join Match on Player.player_api_id = Match.away_player_11   order by player_attributes.attacking_work_rate asc limit 1"
    },
    {
        "input": "How many unknown power cards contain info about the triggered ability",
        "db_id": "card_games",
        "sql": "select count( distinct cards.power) from cards where  cards.power = \"null\""
    },
    {
        "input": "Among the patients with the normal level of triglyceride, how many of them have other symptoms observed?",
        "db_id": "thrombosis_prediction",
        "sql": "select count( distinct examination.symptoms) from Examination where  examination.diagnosis = \"Normal\""
    },
    {
        "input": "What sex is the patient who in a medical examination was diagnosed with PSS and in a laboratory examination had a blood level of C-reactive protein de 2+, createnine 1 and LDH 123?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "For the patient who was diagnosed SLE on 1997/1/27, what was his/her original diagnose when he/she came to the hospital for the first time?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.diagnosis , patient.diagnosis from Patient where  patient.diagnosis = \"SLE\" and patient.admission = \"1997/1/27\""
    },
    {
        "input": "List all the elements of the toxicology of the molecule \"TR004\".",
        "db_id": "toxicology",
        "sql": "select atom.element from atom join molecule on atom.molecule_id = molecule.molecule_id where  molecule.molecule_id = \"TR004\""
    },
    {
        "input": "How much higher in percentage is Ariel Borysiuk's overall rating than that of Paulin Puel?",
        "db_id": "european_football_2",
        "sql": "select avg(player_attributes.overall_rating) from Player_Attributes where  player_attributes.player_api_id in (select Player.player_api_id from Player where  player.player_name = \"Ariel Borysiuk\"   intersect select Player.player_api_id from Player where  player.player_name = \"Paulin Puel\"   )"
    },
    {
        "input": "Calculate the percentage whereby Hamilton was not at the 1st track of the the f1 circuit since 2010.",
        "db_id": "formula_1",
        "sql": "select count(*) from driverStandings join drivers on driverStandings.driverId = drivers.driverId join races on driverStandings.raceId = races.raceId where  drivers.surname = \"Hamilton\" and races.year = 2010"
    },
    {
        "input": "Please list the disparate time of the transactions taken place in the gas stations from chain no. 11.",
        "db_id": "debit_card_specializing",
        "sql": ""
    },
    {
        "input": "List the superheroes from Marvel Comics who have the super power of 'Super Strength'.",
        "db_id": "superhero",
        "sql": "select superhero.superhero_name from hero_power join superpower on hero_power.power_id = superpower.id join superhero on hero_power.hero_id = superhero.id join publisher on superhero.publisher_id = publisher.id where  superpower.power_name = \"Super Strength\" and publisher.publisher_name = \"Marvel Comics\""
    },
    {
        "input": "How many students of the Student_Club have attended the event \"Women's Soccer\"?",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "How much higher in percentage is Ariel Borysiuk's overall rating than that of Paulin Puel?",
        "db_id": "european_football_2",
        "sql": "select avg(player_attributes.overall_rating) from Player_Attributes where  player_attributes.player_api_id in (select Player.player_api_id from Player where  player.player_name = \"Ariel Borysiuk\"   intersect select Player.player_api_id from Player where  player.player_name = \"Paulin Puel\"   )"
    },
    {
        "input": "For all the set of cards that has Brazil Portuguese translation, what is the percentage of them are only available online?",
        "db_id": "card_games",
        "sql": "select cards.availability from set_translations join sets on set_translations.setCode = sets.code join cards on sets.isOnlineOnly = cards.isOnlineOnly where  set_translations.translation = \"Brazil\" and sets.isonlineonly = \"online\""
    },
    {
        "input": "How many percent of female heroes were published by Marvel Comics?",
        "db_id": "superhero",
        "sql": "select count(*) from superhero join publisher on superhero.publisher_id = publisher.id join gender on superhero.gender_id = gender.id where  gender.gender = \"Female\" and publisher.publisher_name = \"Marvel Comics\""
    },
    {
        "input": "How many unknown power cards contain info about the triggered ability",
        "db_id": "card_games",
        "sql": "select count( distinct cards.power) from cards where  cards.power = \"null\""
    },
    {
        "input": "Which bond type accounted for the majority of the bonds found in molecule TR010 and state whether or not this molecule is carcinogenic?",
        "db_id": "toxicology",
        "sql": "select bond.bond_type from bond join molecule on bond.molecule_id = molecule.molecule_id where  molecule.molecule_id = \"TR010\"  group by bond.bond_type  order by count(*) desc limit 1"
    },
    {
        "input": "What percentage of male patients who first presented to the hospital in 1981 were diagnosed with BEHCET?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "What is the annual average number of sets that were released between 1/1/2012 to 12/31/2015? Indicate the common langugage of the card.",
        "db_id": "card_games",
        "sql": ""
    },
    {
        "input": "Which home team had lost the fewest matches in the 2016 season?",
        "db_id": "european_football_2",
        "sql": "select match.home_team_api_id from Match where  match.season = 2016  group by match.home_team_api_id  order by count(*) asc limit 1"
    },
    {
        "input": "In the race a driver set the lap record for the Austrian Grand Prix Circuit, how long did he spent at the pit stop at that same race?",
        "db_id": "formula_1",
        "sql": "select pitstops.duration from pitStops join races on pitStops.raceId = races.raceId where  races.name = \"Austrian Grand Prix\"   order by pitstops.duration desc limit 1"
    },
    {
        "input": "Write the full names of students who received funds on the date of 9/9/2019 and include the amount received.",
        "db_id": "student_club",
        "sql": "select member.first_name , member.last_name , income.amount from income join member on income.link_to_member = member.member_id where  income.date_received = \"9/9/2019\""
    },
    {
        "input": "Find the triple-bonded molecules which are carcinogenic.",
        "db_id": "toxicology",
        "sql": "select molecule.molecule_id from connected join bond on connected.bond_id = bond.bond_id join molecule on bond.molecule_id = molecule.molecule_id where  bond.bond_type = \"triple\" and connected.atom_id in (select connected.atom_id from connected join bond on connected.bond_id = bond.bond_id join molecule on bond.molecule_id = molecule.molecule_id   order by molecule.molecule_id desc limit 1 )"
    },
    {
        "input": "How many drivers managed to finish the race in the 2008 Australian Grand Prix?",
        "db_id": "formula_1",
        "sql": "select count( distinct results.driverid) from results join races on results.raceId = races.raceId where  races.year = 2008 and races.name = \"Australian Grand Prix\""
    },
    {
        "input": "Please list the lap records for the circuits in Italy.",
        "db_id": "formula_1",
        "sql": "select laptimes.lap from lapTimes join races on lapTimes.raceId = races.raceId join circuits on races.circuitId = circuits.circuitId where  circuits.country = \"Italy\""
    },
    {
        "input": "Rank superheroes from Marvel Comics by their eye color popularity, starting with the most common color.",
        "db_id": "superhero",
        "sql": "select superhero.eye_colour_id from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"Marvel Comics\"  group by superhero.eye_colour_id  order by count(*) desc limit 1"
    },
    {
        "input": "List the eyes, hair and skin colour of all female superheroes published by Dark Horse Comics.",
        "db_id": "superhero",
        "sql": "select superhero.eye_colour_id , superhero.hair_colour_id , superhero.skin_colour_id from superhero join publisher on superhero.publisher_id = publisher.id join gender on superhero.gender_id = gender.id where  gender.gender = \"Female\" and publisher.publisher_name = \"Dark Horse Comics\""
    },
    {
        "input": "Who is the top spending customer and how much is the average price per single item purchased by this customer? What currency was being used?",
        "db_id": "debit_card_specializing",
        "sql": ""
    },
    {
        "input": "Is the set of cards with Adarkar Valkyrie only available outside the United States?",
        "db_id": "card_games",
        "sql": "select cards.availability from cards where  cards.name = \"Adarkar Valkyrie\" and cards.isonlineonly != \"USA\""
    },
    {
        "input": "How often does account number 3 request an account statement to be released? What was the aim of debiting 3539 in total?",
        "db_id": "financial",
        "sql": ""
    },
    {
        "input": "List down Ajax's superpowers.",
        "db_id": "superhero",
        "sql": "select superpower.power_name from hero_power join superpower on hero_power.power_id = superpower.id join superhero on hero_power.hero_id = superhero.id where  superhero.superhero_name = \"Ajax\""
    },
    {
        "input": "How many patients with a normal Ig A level came to the hospital after 1990/1/1?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID where  examination.diagnosis = \"Normal\" and examination.diagnosis > \"1990/1/1\""
    },
    {
        "input": "List the skin colour of the superheroes with 100 attribute value.",
        "db_id": "superhero",
        "sql": "select superhero.skin_colour_id from hero_attribute join superhero on hero_attribute.hero_id = superhero.id where  hero_attribute.attribute_value = 100"
    },
    {
        "input": "What percentage of male patients who first presented to the hospital in 1981 were diagnosed with BEHCET?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "What is the average number of bonds the atoms with the element iodine have?",
        "db_id": "toxicology",
        "sql": "select avg(bond.bond_type) from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  atom.element = \"iodine\""
    },
    {
        "input": "In the race a driver set the lap record for the Austrian Grand Prix Circuit, how long did he spent at the pit stop at that same race?",
        "db_id": "formula_1",
        "sql": "select pitstops.duration from pitStops join races on pitStops.raceId = races.raceId where  races.name = \"Austrian Grand Prix\"   order by pitstops.duration desc limit 1"
    },
    {
        "input": "What was the average overall rating for Marko Arnautovic from 2007/2/22 to 2016/4/21?",
        "db_id": "european_football_2",
        "sql": "select avg(player_attributes.overall_rating) from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.player_name = \"Marko Arnautovic\" and player_attributes.date > \"2007/2/22\" and player_attributes.date < \"2016/4/21\""
    },
    {
        "input": "On average how many carcinogenic molecules are single bonded?",
        "db_id": "toxicology",
        "sql": "select count(*) from bond join molecule on bond.molecule_id = molecule.molecule_id where  bond.bond_type = \"Single\"  group by bond.molecule_id"
    },
    {
        "input": "Who is the top spending customer and how much is the average price per single item purchased by this customer? What currency was being used?",
        "db_id": "debit_card_specializing",
        "sql": ""
    },
    {
        "input": "List the skin colour of the superheroes with 100 attribute value.",
        "db_id": "superhero",
        "sql": "select superhero.skin_colour_id from hero_attribute join superhero on hero_attribute.hero_id = superhero.id where  hero_attribute.attribute_value = 100"
    },
    {
        "input": "Among the comments with scores between 5 to 10, what is the percentage of the users with 0 up votes?",
        "db_id": "codebase_community",
        "sql": "select users.upvotes from comments join users on comments.UserId = users.Id where  comments.score between 5 and 10"
    },
    {
        "input": "List out the account numbers of female clients who are oldest and has lowest average salary, calculate the gap between this lowest average salary with the highest average salary?",
        "db_id": "financial",
        "sql": ""
    },
    {
        "input": "What are the elements of the atoms of TR144_8_19?",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join atom on connected.atom_id2 = atom.atom_id where  connected.bond_id = \"TR144_8_19\""
    },
    {
        "input": "What is the publisher for Hawkman, Karate Kid and Speedy?",
        "db_id": "superhero",
        "sql": ""
    },
    {
        "input": "Paul di Resta was in the No. 853 race, what percent faster did he finish in the 853rd race than the next race for the fastest lap speed?",
        "db_id": "formula_1",
        "sql": "select results.fastestlapspeed from results join drivers on results.driverId = drivers.driverId where  drivers.forename = \"Paul\"   order by results.fastestlapspeed desc limit 1"
    },
    {
        "input": "How many times was the budget in Advertisement for \"Yearly Kickoff\" meeting more than \"October Meeting\"?",
        "db_id": "student_club",
        "sql": "select count(*) from budget join event on budget.link_to_event = event.event_id where  event.event_name = \"Yearly Kickoff\" and budget.amount > \"October Meeting\""
    },
    {
        "input": "For the customer who paid 634.8 in 2012/8/25, what was the consumption decrease rate from Year 2012 to 2013?",
        "db_id": "debit_card_specializing",
        "sql": "select yearmonth.consumption from yearmonth where  yearmonth.consumption between 2012 and 2013"
    },
    {
        "input": "Who are the players that tend to be attacking when their mates were doing attack moves? List down their name.",
        "db_id": "european_football_2",
        "sql": "select distinct player.player_name from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id join Match on Player.player_api_id = Match.away_player_11   order by player_attributes.attacking_work_rate asc limit 1"
    },
    {
        "input": "What is the badge name that user 'SilentGhost' obtained?",
        "db_id": "codebase_community",
        "sql": "select badges.name from badges join users on badges.UserId = users.Id where  users.displayname = \"SilentGhost\""
    },
    {
        "input": "What is the constructor reference name of the champion in the 2009 Singapore Grand Prix? Please give its website.",
        "db_id": "formula_1",
        "sql": "select constructors.name from constructorResults join constructors on constructorResults.constructorId = constructors.constructorId join races on constructorResults.raceId = races.raceId where  races.year = 2009 and races.name = \"Singapore Grand Prix\""
    },
    {
        "input": "Which county reported the most number of school closure in the 1980s with school wonership code belonging to Youth Authority Facilities (CEA)?",
        "db_id": "california_schools",
        "sql": "select schools.county from schools where  schools.soctype = \"Youth Authority Facilities\"  group by schools.county  order by count(*) desc limit 1"
    },
    {
        "input": "What was the fastest lap speed among all drivers in the 2009 Spanish Grand Prix?",
        "db_id": "formula_1",
        "sql": "select max(results.fastestlapspeed) from results join races on results.raceId = races.raceId where  races.year = 2009 and races.name = \"Spanish Grand Prix\""
    },
    {
        "input": "How long did it take after patient number 821298 arrived at the hospital for the first time before her evaluation began?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "Which county reported the most number of school closure in the 1980s with school wonership code belonging to Youth Authority Facilities (CEA)?",
        "db_id": "california_schools",
        "sql": "select schools.county from schools where  schools.soctype = \"Youth Authority Facilities\"  group by schools.county  order by count(*) desc limit 1"
    },
    {
        "input": "What is the publisher for Hawkman, Karate Kid and Speedy?",
        "db_id": "superhero",
        "sql": ""
    },
    {
        "input": "Which bond type accounted for the majority of the bonds found in molecule TR010 and state whether or not this molecule is carcinogenic?",
        "db_id": "toxicology",
        "sql": "select bond.bond_type from bond join molecule on bond.molecule_id = molecule.molecule_id where  molecule.molecule_id = \"TR010\"  group by bond.bond_type  order by count(*) desc limit 1"
    },
    {
        "input": "Please list the superhero names of all the superheroes that have blue eyes and blond hair.",
        "db_id": "superhero",
        "sql": "select superhero.superhero_name from superhero join colour on superhero.skin_colour_id = colour.id where  colour.colour = \"Blue\"   intersect select superhero.superhero_name from superhero join colour on superhero.skin_colour_id = colour.id where  colour.colour = \"Blend\""
    },
    {
        "input": "List all the football player with the highest potential score.",
        "db_id": "european_football_2",
        "sql": "select distinct player.player_name from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id   order by player_attributes.potential desc limit 1"
    },
    {
        "input": "How many atoms with iodine and with sulfur type elements are there in single bond molecules?",
        "db_id": "toxicology",
        "sql": "select count(*) from atom where  atom.atom_id in (select connected.atom_id2 from connected join bond on connected.bond_id = bond.bond_id where  bond.bond_type = \"iodine\"   intersect select connected.atom_id2 from connected join bond on connected.bond_id = bond.bond_id where  bond.bond_type = \"sulfur\"   )"
    },
    {
        "input": "List the last names of students under the Elementary Education major and include their phone numbers.",
        "db_id": "student_club",
        "sql": "select member.last_name , member.phone from member join major on member.link_to_major = major.major_id where  major.major_name = \"Elementary Education\""
    },
    {
        "input": "How was the build up play dribbling class for \"LEI\" on 2015/9/10?",
        "db_id": "european_football_2",
        "sql": "select team_attributes.buildupplaydribblingclass from Team_Attributes join Team on Team_Attributes.team_api_id = Team.team_api_id join Match on Team.team_api_id = Match.away_team_api_id where  team.team_short_name = \"LEI\" and match.date = \"2015/9/10\""
    },
    {
        "input": "Please calculate the race completion percentage of Japanese drivers from 2007 to 2009.",
        "db_id": "formula_1",
        "sql": "select results.driverid from results join drivers on results.driverId = drivers.driverId join races on results.raceId = races.raceId where  drivers.nationality = \"Japanese\" and races.year between 2007 and 2009"
    },
    {
        "input": "Please list the disparate time of the transactions taken place in the gas stations from chain no. 11.",
        "db_id": "debit_card_specializing",
        "sql": ""
    },
    {
        "input": "How much higher in percentage is Ariel Borysiuk's overall rating than that of Paulin Puel?",
        "db_id": "european_football_2",
        "sql": "select avg(player_attributes.overall_rating) from Player_Attributes where  player_attributes.player_api_id in (select Player.player_api_id from Player where  player.player_name = \"Ariel Borysiuk\"   intersect select Player.player_api_id from Player where  player.player_name = \"Paulin Puel\"   )"
    },
    {
        "input": "How often does account number 3 request an account statement to be released? What was the aim of debiting 3539 in total?",
        "db_id": "financial",
        "sql": ""
    },
    {
        "input": "Which members who were approved from 1/10/2019 to 11/19/2019? Please identify the member who attended the event and the link to their event.",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "Was the patient a man or a women whose ALT glutamic pylvic transaminase status got 9 on 1992-6-12?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.sex from Laboratory join Patient on Laboratory.ID = Patient.ID where  patient.sex = \"M\" and laboratory.got = 9"
    },
    {
        "input": "What is the bond type of TR007_4_19?",
        "db_id": "toxicology",
        "sql": "select bond.bond_type from bond where  bond.bond_id = \"TR007_4_19\""
    },
    {
        "input": "For all the female patient age 50 and above, who has abnormal red blood cell count. State if they were admitted to hospital.",
        "db_id": "thrombosis_prediction",
        "sql": "select * from Patient where  patient.sex = \"F\" and patient.admission >= 50 and patient.sex = \"F\""
    },
    {
        "input": "What is the average blood albumin level for female patients with a PLT greater than 400 who have been diagnosed with SLE?",
        "db_id": "thrombosis_prediction",
        "sql": "select avg(laboratory.alb) from Laboratory join Patient on Laboratory.ID = Patient.ID where  patient.sex = \"F\" and patient.diagnosis > 400 and patient.diagnosis = \"SLE\""
    },
    {
        "input": "How many patients have a normal level of anti-ribonuclear protein and have been admitted to the hospital?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID where  examination.diagnosis = \"Normal\" and patient.admission = \"Hospital\""
    },
    {
        "input": "Indicate the name of the closed event whose cost has exceeded the budget the most.",
        "db_id": "student_club",
        "sql": "select event.event_name from expense join budget on expense.link_to_budget = budget.budget_id join event on budget.link_to_event = event.event_id where  event.status = \"Closed\"  group by event.event_name  order by sum(expense.cost) desc limit 1"
    },
    {
        "input": "How many cards available in paper have a positive starting maximum hand size?",
        "db_id": "card_games",
        "sql": "select count(*) from cards where  cards.availability = \"paper\"   order by cards.hand desc limit 1"
    },
    {
        "input": "How much higher in percentage is Ariel Borysiuk's overall rating than that of Paulin Puel?",
        "db_id": "european_football_2",
        "sql": "select avg(player_attributes.overall_rating) from Player_Attributes where  player_attributes.player_api_id in (select Player.player_api_id from Player where  player.player_name = \"Ariel Borysiuk\"   intersect select Player.player_api_id from Player where  player.player_name = \"Paulin Puel\"   )"
    },
    {
        "input": "What was the final score for the match on September 24, 2008, in the Belgian Jupiler League between the home team and the away team?",
        "db_id": "european_football_2",
        "sql": "select match.home_team_goal from Match where  match.date = \"2008-09-24\" and match.away_team_goal = \"home\""
    },
    {
        "input": "List down at least five full names of superheroes with blue eyes.",
        "db_id": "superhero",
        "sql": "select superhero.full_name from superhero join colour on superhero.skin_colour_id = colour.id where  colour.colour = \"Blue\""
    },
    {
        "input": "What is the average height of a non-human superhero in Dark Horse Comics?",
        "db_id": "superhero",
        "sql": "select avg(superhero.height_cm) from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name != \"Dark Horse Comics\""
    },
    {
        "input": "On what year did the youngest driver had his first qualifying race? Also state the name, date and time of the race.",
        "db_id": "formula_1",
        "sql": "select races.year , races.name , races.time from driverStandings join drivers on driverStandings.driverId = drivers.driverId join races on driverStandings.raceId = races.raceId   order by drivers.dob asc limit 1"
    },
    {
        "input": "Please list the superhero names of all the superheroes that have blue eyes and blond hair.",
        "db_id": "superhero",
        "sql": "select superhero.superhero_name from superhero join colour on superhero.skin_colour_id = colour.id where  colour.colour = \"Blue\"   intersect select superhero.superhero_name from superhero join colour on superhero.skin_colour_id = colour.id where  colour.colour = \"Blend\""
    },
    {
        "input": "What is reference name of Robert Kubica?",
        "db_id": "formula_1",
        "sql": "select drivers.driverref from drivers where  drivers.surname = \"Robert\"   intersect select drivers.driverref from drivers where  drivers.surname = \"Kubica\""
    },
    {
        "input": "Which of these artists have designed a card in the set Coldsnap, Jeremy Jarvis, Aaron Miller or Chippy?",
        "db_id": "card_games",
        "sql": "select cards.artist from cards join sets on cards.id = sets.id where  sets.name = \"Coldsnap\" or sets.name = \"Aaron Miller\" or sets.name = \"Chippy\""
    },
    {
        "input": "From 2000 to 2005, what percentage of drivers who were born before 1985 and the lap numbers were over 50?",
        "db_id": "formula_1",
        "sql": "select drivers.number from drivers where  drivers.dob < 1985 and drivers.number > 50"
    },
    {
        "input": "Which of the three segments—SME, LAM and KAM—has the biggest and lowest percentage increases in consumption paid in EUR between 2012 and 2013?",
        "db_id": "debit_card_specializing",
        "sql": "select customers.segment , customers.customerid , yearmonth.consumption from yearmonth join customers on yearmonth.CustomerID = customers.CustomerID where  customers.currency between 2012 and 2013"
    },
    {
        "input": "Which members who were approved from 1/10/2019 to 11/19/2019? Please identify the member who attended the event and the link to their event.",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "For the year that concluded on December 31, 1998, how many male patients on average were tested in the lab each month?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) , avg(patient.sex) , laboratory.date from Laboratory join Patient on Laboratory.ID = Patient.ID where  patient.sex = \"M\"  group by laboratory.date"
    },
    {
        "input": "Among all the posts posted by the most influential user, identify the percentage with a score above 50.",
        "db_id": "codebase_community",
        "sql": "select posthistory.postid , count(*) from postHistory join posts on postHistory.PostId = posts.Id where  posts.score > 50  group by posthistory.postid  order by count(*) desc limit 1"
    },
    {
        "input": "List the names of closed event as \"game\" that was closed from 3/15/2019 to 3/20/2020.",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "What is the highest eligible free rate for K-12 students in the schools in Alameda County?",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "List the football team that has a build up play speed of 31, build up plan dribbling of 53, and build up play passing of 32. Only indicate the short name of the team.",
        "db_id": "european_football_2",
        "sql": ""
    },
    {
        "input": "Which publisher created more superheroes: DC or Marvel Comics? Find the difference in the number of superheroes.",
        "db_id": "superhero",
        "sql": "select count(*) from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"DC\" or publisher.publisher_name = \"Marvel Comics\""
    },
    {
        "input": "For the client who applied the biggest loan, what was his/her first amount of transaction after opened the account?",
        "db_id": "financial",
        "sql": "select loan.amount from loan   order by loan.amount desc limit 1"
    },
    {
        "input": "Provide the heights of the heroes whose eye colours are amber.",
        "db_id": "superhero",
        "sql": "select superhero.height_cm from superhero join colour on superhero.skin_colour_id = colour.id where  colour.colour = \"Amber\""
    },
    {
        "input": "What percentage of cards without power are in French?",
        "db_id": "card_games",
        "sql": "select avg(cards.power) from foreign_data join cards on foreign_data.uuid = cards.uuid where  foreign_data.language = \"French\""
    },
    {
        "input": "List the names of closed event as \"game\" that was closed from 3/15/2019 to 3/20/2020.",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "Calculate the total atoms consisting of the element carbon and hydrogen.",
        "db_id": "toxicology",
        "sql": "select count(*) from atom where  atom.atom_id in (select atom.atom_id from atom where  atom.element = \"carbon\"   intersect select atom.atom_id from atom where  atom.element = \"hydrogen\"   )"
    },
    {
        "input": "The oldest SJS patient's medical laboratory work was completed on what date, and what age was the patient when they initially arrived at the hospital?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "For loans contracts which are still running where client are in debt, list the district of the and the state the percentage unemployment rate increment from year 1995 to 1996.",
        "db_id": "financial",
        "sql": "select district.a13 , avg(loan.duration) from loan join account on loan.account_id = account.account_id join district on account.district_id = district.district_id where  loan.duration >= 1995  group by district.a13"
    },
    {
        "input": "How many cards available in paper have a positive starting maximum hand size?",
        "db_id": "card_games",
        "sql": "select count(*) from cards where  cards.availability = \"paper\"   order by cards.hand desc limit 1"
    },
    {
        "input": "From 2000 to 2005, what percentage of drivers who were born before 1985 and the lap numbers were over 50?",
        "db_id": "formula_1",
        "sql": "select drivers.number from drivers where  drivers.dob < 1985 and drivers.number > 50"
    },
    {
        "input": "Among the cards with converted mana cost higher than 5 in the set Coldsnap, how many of them have unknown power?",
        "db_id": "card_games",
        "sql": "select count(*) from cards join sets on cards.id = sets.id where  cards.convertedmanacost > 5 and sets.name = \"Coldsnap\""
    },
    {
        "input": "What is the average height of a non-human superhero in Dark Horse Comics?",
        "db_id": "superhero",
        "sql": "select avg(superhero.height_cm) from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name != \"Dark Horse Comics\""
    },
    {
        "input": "For the client who applied the biggest loan, what was his/her first amount of transaction after opened the account?",
        "db_id": "financial",
        "sql": "select loan.amount from loan   order by loan.amount desc limit 1"
    },
    {
        "input": "List the names of schools with more than 30 difference in enrollements between K-12 and ages 5-17? Please also give the full street adress of the schools.",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "What is the difference in the annual average consumption of the customers with the least amount of consumption paid in CZK for 2013 between SME and LAM, LAM and KAM, and KAM and SME?",
        "db_id": "debit_card_specializing",
        "sql": "select avg(yearmonth.consumption) from yearmonth join customers on yearmonth.CustomerID = customers.CustomerID where  customers.currency = \"CZK\"   order by yearmonth.consumption asc limit 1"
    },
    {
        "input": "What is the unique id of the set that has the highest number of cards?",
        "db_id": "card_games",
        "sql": "select sets.id from cards join sets on cards.id = sets.id  group by sets.id  order by count(*) desc limit 1"
    },
    {
        "input": "For the players who had a 77 points overall rating on 2016/6/23, who was the oldest? Give the name of the player.",
        "db_id": "european_football_2",
        "sql": "select player.player_name from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player_attributes.overall_rating = 77   order by player.birthday desc limit 1"
    },
    {
        "input": "What is the bond type of TR007_4_19?",
        "db_id": "toxicology",
        "sql": "select bond.bond_type from bond where  bond.bond_id = \"TR007_4_19\""
    },
    {
        "input": "How many atoms with iodine and with sulfur type elements are there in single bond molecules?",
        "db_id": "toxicology",
        "sql": "select count(*) from atom where  atom.atom_id in (select connected.atom_id2 from connected join bond on connected.bond_id = bond.bond_id where  bond.bond_type = \"iodine\"   intersect select connected.atom_id2 from connected join bond on connected.bond_id = bond.bond_id where  bond.bond_type = \"sulfur\"   )"
    },
    {
        "input": "Show the Simplified Chinese translation of the name of the set \"Mirrodin\"?",
        "db_id": "card_games",
        "sql": "select set_translations.translation from set_translations join sets on set_translations.setCode = sets.code where  sets.name = \"Mirrodin\" and set_translations.language = \"Chinese\""
    },
    {
        "input": "Among the patients who have a normal platelet level, how many of them have other symptoms observed?",
        "db_id": "thrombosis_prediction",
        "sql": "select count( distinct examination.symptoms) from Examination where  examination.diagnosis = \"Normal\""
    },
    {
        "input": "Among the users who obtained the \"Organizer\" badges, calculate the percentage of users who are teenagers.",
        "db_id": "codebase_community",
        "sql": "select users.age , count(*) from badges join users on badges.UserId = users.Id where  badges.name = \"Organizer\"  group by users.age"
    },
    {
        "input": "Are there more male patients with creatinine not within the normal range than female? True or False?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.diagnosis from Examination join Patient on Examination.ID = Patient.ID where  patient.sex = \"M\" and examination.diagnosis != \"Normal\""
    },
    {
        "input": "List the last names of students under the Elementary Education major and include their phone numbers.",
        "db_id": "student_club",
        "sql": "select member.last_name , member.phone from member join major on member.link_to_major = major.major_id where  major.major_name = \"Elementary Education\""
    },
    {
        "input": "What is the average fastest lap time of the top 10 drivers in the 2006 United States Grand Prix?",
        "db_id": "formula_1",
        "sql": "select avg(results.fastestlaptime) from lapTimes join races on lapTimes.raceId = races.raceId join results on races.raceId = results.raceId where  races.year = 2006   order by laptimes.time desc limit 10"
    },
    {
        "input": "Give the name of the league had the most goals in the 2016 season?",
        "db_id": "european_football_2",
        "sql": "select league.name from League join Match on League.id = Match.id where  match.season = 2016  group by match.league_id  order by count(*) desc limit 1"
    },
    {
        "input": "Are there more male patients with creatinine not within the normal range than female? True or False?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.diagnosis from Examination join Patient on Examination.ID = Patient.ID where  patient.sex = \"M\" and examination.diagnosis != \"Normal\""
    },
    {
        "input": "Among the comments with scores between 5 to 10, what is the percentage of the users with 0 up votes?",
        "db_id": "codebase_community",
        "sql": "select users.upvotes from comments join users on comments.UserId = users.Id where  comments.score between 5 and 10"
    },
    {
        "input": "What is the comment's rating score of the post which was created on 7/19/2010 7:19:56 PM",
        "db_id": "codebase_community",
        "sql": "select comments.score from comments where  comments.creationdate = \"2010-07-19\""
    },
    {
        "input": "Please list the superhero names of all the superheroes that have blue eyes and blond hair.",
        "db_id": "superhero",
        "sql": "select superhero.superhero_name from superhero join colour on superhero.skin_colour_id = colour.id where  colour.colour = \"Blue\"   intersect select superhero.superhero_name from superhero join colour on superhero.skin_colour_id = colour.id where  colour.colour = \"Blend\""
    },
    {
        "input": "List all carcinogenic molecules and their elements.",
        "db_id": "toxicology",
        "sql": "select molecule.molecule_id , atom.element from atom join molecule on atom.molecule_id = molecule.molecule_id where  atom.element = \"carcinogen\""
    },
    {
        "input": "How many unknown power cards contain info about the triggered ability",
        "db_id": "card_games",
        "sql": "select count( distinct cards.power) from cards where  cards.power = \"null\""
    },
    {
        "input": "How many students of the Student_Club have attended the event \"Women's Soccer\"?",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "Which publisher created more superheroes: DC or Marvel Comics? Find the difference in the number of superheroes.",
        "db_id": "superhero",
        "sql": "select count(*) from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"DC\" or publisher.publisher_name = \"Marvel Comics\""
    },
    {
        "input": "In 2012, who had the least consumption in LAM?",
        "db_id": "debit_card_specializing",
        "sql": "select yearmonth.customerid , yearmonth.consumption from yearmonth join customers on yearmonth.CustomerID = customers.CustomerID where  customers.segment = \"LAM\"   order by yearmonth.consumption asc limit 1"
    },
    {
        "input": "Which post has the highest score? Please give its id and title's name.",
        "db_id": "codebase_community",
        "sql": "select posts.id , posts.title from posts   order by posts.score desc limit 1"
    },
    {
        "input": "For all the female patient age 50 and above, who has abnormal red blood cell count. State if they were admitted to hospital.",
        "db_id": "thrombosis_prediction",
        "sql": "select * from Patient where  patient.sex = \"F\" and patient.admission >= 50 and patient.sex = \"F\""
    },
    {
        "input": "Among the superheroes with the super power of \"Super Strength\", how many of them have a height of over 200cm?",
        "db_id": "superhero",
        "sql": "select count(*) from hero_power join superpower on hero_power.power_id = superpower.id join superhero on hero_power.hero_id = superhero.id where  superpower.power_name = \"Super Strength\""
    },
    {
        "input": "What is the percentage difference of student badges given during 2010 and 2011?",
        "db_id": "codebase_community",
        "sql": "select avg(badges.date) from badges where  badges.date between 2010 and 2011"
    },
    {
        "input": "Among all superheroes in Marvel Comics, identify the percentage of 'good' superheroes.",
        "db_id": "superhero",
        "sql": "select superhero.superhero_name , count(*) from superhero join alignment on superhero.alignment_id = alignment.id where  alignment.alignment = \"Good\"  group by superhero.superhero_name"
    },
    {
        "input": "How many bonds which involved atom 12 does molecule TR009 have?",
        "db_id": "toxicology",
        "sql": "select count(*) from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  atom.molecule_id = \"TR009\""
    },
    {
        "input": "Among the players with an overall rating between 60 to 65, how many players whose going to be in all of your attack moves instead of defensing?",
        "db_id": "european_football_2",
        "sql": "select count(*) from Player_Attributes where  player_attributes.overall_rating between 60 and 65"
    },
    {
        "input": "What was the difference in the number of crimes committed in East and North Bohemia in 1996?",
        "db_id": "financial",
        "sql": "select count(*) , district.a16 from district where  district.a3 = \"East\"  group by district.a16  intersect select count(*) , district.a16 from district where  district.a3 = \"North Bohemia\" and district.a16 = 1996"
    },
    {
        "input": "What is the anti Cardiolipin antibody concentration of the female patient with the highest uric acid level in the normal range?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.diagnosis from Examination join Patient on Examination.ID = Patient.ID where  patient.sex = \"F\"   order by examination.diagnosis desc limit 1"
    },
    {
        "input": "In comments with score between 1 to 5, list down the display names of the users with 0 down votes.",
        "db_id": "codebase_community",
        "sql": "select users.displayname from comments join users on comments.UserId = users.Id where  comments.score between 1 and 5"
    },
    {
        "input": "Which customers, paying in CZK, consumed the most gas in 2011?",
        "db_id": "debit_card_specializing",
        "sql": "select customers.segment from yearmonth join customers on yearmonth.CustomerID = customers.CustomerID where  customers.currency = \"CZK\"   order by yearmonth.consumption desc limit 1"
    },
    {
        "input": "Which customers, paying in CZK, consumed the most gas in 2011?",
        "db_id": "debit_card_specializing",
        "sql": "select customers.segment from yearmonth join customers on yearmonth.CustomerID = customers.CustomerID where  customers.currency = \"CZK\"   order by yearmonth.consumption desc limit 1"
    },
    {
        "input": "In the race a driver set the lap record for the Austrian Grand Prix Circuit, how long did he spent at the pit stop at that same race?",
        "db_id": "formula_1",
        "sql": "select pitstops.duration from pitStops join races on pitStops.raceId = races.raceId where  races.name = \"Austrian Grand Prix\"   order by pitstops.duration desc limit 1"
    },
    {
        "input": "What is the average time in seconds of champion for each year, before year 1975?",
        "db_id": "formula_1",
        "sql": "select avg(laptimes.milliseconds) , races.year from lapTimes join races on lapTimes.raceId = races.raceId where  races.year < 1975  group by races.year"
    },
    {
        "input": "What is the percentage of female patient were born after 1930?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Patient where  patient.sex = \"F\" and patient.birthday > 1930"
    },
    {
        "input": "What are the elements of the toxicology and label of molecule TR060?",
        "db_id": "toxicology",
        "sql": "select atom.element , molecule.label from atom join molecule on atom.molecule_id = molecule.molecule_id where  molecule.molecule_id = \"TR060\""
    },
    {
        "input": "What percentage of cards without power are in French?",
        "db_id": "card_games",
        "sql": "select avg(cards.power) from foreign_data join cards on foreign_data.uuid = cards.uuid where  foreign_data.language = \"French\""
    },
    {
        "input": "Find the triple-bonded molecules which are carcinogenic.",
        "db_id": "toxicology",
        "sql": "select molecule.molecule_id from connected join bond on connected.bond_id = bond.bond_id join molecule on bond.molecule_id = molecule.molecule_id where  bond.bond_type = \"triple\" and connected.atom_id in (select connected.atom_id from connected join bond on connected.bond_id = bond.bond_id join molecule on bond.molecule_id = molecule.molecule_id   order by molecule.molecule_id desc limit 1 )"
    },
    {
        "input": "Among the sets whose expansion type is Commander, which set has the highest total number of cards including promotional and related supplemental products but excluding Alchemy modifications? Indicate the id of the set.",
        "db_id": "card_games",
        "sql": "select sets.id from sets where  sets.type = \"commander\"  group by sets.id  order by sum(sets.totalsetsize) desc limit 1"
    },
    {
        "input": "Write the full name of the member who spent money for water, veggie tray and supplies and include the cost of it.",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "What is the percentage of cards whose language is French among the Story Spotlight cards?",
        "db_id": "card_games",
        "sql": "select count(*) from foreign_data join cards on foreign_data.uuid = cards.uuid where  foreign_data.language = \"French\""
    },
    {
        "input": "Which of these artists have designed a card in the set Coldsnap, Jeremy Jarvis, Aaron Miller or Chippy?",
        "db_id": "card_games",
        "sql": "select cards.artist from cards join sets on cards.id = sets.id where  sets.name = \"Coldsnap\" or sets.name = \"Aaron Miller\" or sets.name = \"Chippy\""
    },
    {
        "input": "For all the set of cards that has Brazil Portuguese translation, what is the percentage of them are only available online?",
        "db_id": "card_games",
        "sql": "select cards.availability from set_translations join sets on set_translations.setCode = sets.code join cards on sets.isOnlineOnly = cards.isOnlineOnly where  set_translations.translation = \"Brazil\" and sets.isonlineonly = \"online\""
    },
    {
        "input": "How many patients with a normal Ig A level came to the hospital after 1990/1/1?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID where  examination.diagnosis = \"Normal\" and examination.diagnosis > \"1990/1/1\""
    },
    {
        "input": "Rank superheroes from Marvel Comics by their eye color popularity, starting with the most common color.",
        "db_id": "superhero",
        "sql": "select superhero.eye_colour_id from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"Marvel Comics\"  group by superhero.eye_colour_id  order by count(*) desc limit 1"
    },
    {
        "input": "What are the elements for bond id TR001_10_11?",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_id = \"TR001_10_11\""
    },
    {
        "input": "Which top 20 driver created the shortest lap time ever record in a Formula_1 race? Please give them full names.",
        "db_id": "formula_1",
        "sql": "select drivers.surname , drivers.forename from lapTimes join drivers on lapTimes.driverId = drivers.driverId   order by laptimes.milliseconds asc limit 20"
    },
    {
        "input": "How many patients with a normal Rhuematoid Factor has a positive measure of degree of coagulation?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID where  examination.diagnosis = \"Normal\" and patient.admission >= 1"
    },
    {
        "input": "Was the patient a man or a women whose ALT glutamic pylvic transaminase status got 9 on 1992-6-12?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.sex from Laboratory join Patient on Laboratory.ID = Patient.ID where  patient.sex = \"M\" and laboratory.got = 9"
    },
    {
        "input": "For the patient who was born on 1959/2/18, what is the decrease rate for his/her total cholesterol from November to December in 1981?",
        "db_id": "thrombosis_prediction",
        "sql": "select avg(patient.birthday) from Patient where  patient.birthday between 1959 and 1981"
    },
    {
        "input": "What is the most common illness that doctors identified among the patients whose lab work was done between 1/1/1985, and 12/31/1995?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.diagnosis from Laboratory join Patient on Laboratory.ID = Patient.ID where  laboratory.date > \"1/1/1985\" and laboratory.date < \"12/31/1995\"  group by patient.diagnosis  order by count(*) desc limit 1"
    },
    {
        "input": "Calculate the percentage whereby Hamilton was not at the 1st track of the the f1 circuit since 2010.",
        "db_id": "formula_1",
        "sql": "select count(*) from driverStandings join drivers on driverStandings.driverId = drivers.driverId join races on driverStandings.raceId = races.raceId where  drivers.surname = \"Hamilton\" and races.year = 2010"
    },
    {
        "input": "What is reference name of Robert Kubica?",
        "db_id": "formula_1",
        "sql": "select drivers.driverref from drivers where  drivers.surname = \"Robert\"   intersect select drivers.driverref from drivers where  drivers.surname = \"Kubica\""
    },
    {
        "input": "What percentage of patients who were born in 1980 and were diagnosed with RA are women?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.sex from Patient where  patient.birthday = 1980 and patient.diagnosis = \"RA\""
    },
    {
        "input": "Among all superheroes created by George Lucas, identify the percentage of female superheroes.",
        "db_id": "superhero",
        "sql": "select superhero.superhero_name , count(*) from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"George Lucas\"  group by superhero.gender_id"
    },
    {
        "input": "What is the percentage of cards whose language is French among the Story Spotlight cards?",
        "db_id": "card_games",
        "sql": "select count(*) from foreign_data join cards on foreign_data.uuid = cards.uuid where  foreign_data.language = \"French\""
    },
    {
        "input": "What are the elements of the toxicology and label of molecule TR060?",
        "db_id": "toxicology",
        "sql": "select atom.element , molecule.label from atom join molecule on atom.molecule_id = molecule.molecule_id where  molecule.molecule_id = \"TR060\""
    },
    {
        "input": "Identify the gender of the superhero who has the ability of Phoenix Force.",
        "db_id": "superhero",
        "sql": "select gender.gender from hero_power join superpower on hero_power.power_id = superpower.id join superhero on hero_power.hero_id = superhero.id join gender on superhero.gender_id = gender.id where  superpower.power_name = \"Phoenix Force\""
    },
    {
        "input": "List all carcinogenic molecules and their elements.",
        "db_id": "toxicology",
        "sql": "select molecule.molecule_id , atom.element from atom join molecule on atom.molecule_id = molecule.molecule_id where  atom.element = \"carcinogen\""
    },
    {
        "input": "What is the complete address of the school with the lowest excellence rate? Indicate the Street, City, Zip and State.",
        "db_id": "california_schools",
        "sql": "select schools.streetabr , schools.city , schools.zip , schools.state from satscores join schools on satscores.cds = schools.CDSCode   order by satscores.enroll12 asc limit 1"
    },
    {
        "input": "How many percent of female heroes were published by Marvel Comics?",
        "db_id": "superhero",
        "sql": "select count(*) from superhero join publisher on superhero.publisher_id = publisher.id join gender on superhero.gender_id = gender.id where  gender.gender = \"Female\" and publisher.publisher_name = \"Marvel Comics\""
    },
    {
        "input": "How many molecules without sulphur element is not having double bond?",
        "db_id": "toxicology",
        "sql": "select count(*) from atom join molecule on atom.molecule_id = molecule.molecule_id where  atom.element != \"sulphur\""
    },
    {
        "input": "For all cards illustrated by Jim Pavelec. and describe the text of the ruling of these cards. Do these cards have missing or degraded properties and values.",
        "db_id": "card_games",
        "sql": "select rulings.text from rulings join cards on rulings.uuid = cards.uuid where  cards.artist = \"Jim Pavelec\" or rulings.text = \"No\""
    },
    {
        "input": "What elements are in the TR004_8_9 bond atoms?",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_id = \"TR004_8_9\""
    },
    {
        "input": "Name chemical elements that form a bond TR001_10_11.",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_id = \"TR001_10_11\""
    },
    {
        "input": "What is the bond type of TR007_4_19?",
        "db_id": "toxicology",
        "sql": "select bond.bond_type from bond where  bond.bond_id = \"TR007_4_19\""
    },
    {
        "input": "Name the elements that comprise the atoms of bond TR001_2_4.",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_id = \"TR001_2_4\""
    },
    {
        "input": "What kind of currency did the customer paid at 16:25:00 in 2012/8/24?",
        "db_id": "debit_card_specializing",
        "sql": ""
    },
    {
        "input": "What is the name of the social event that was attended by the vice president of the Student_Club located at 900 E. Washington St.?",
        "db_id": "student_club",
        "sql": "select event.event_name from attendance join member on attendance.link_to_member = member.member_id join event on attendance.link_to_event = event.event_id where  event.location = \"900 E. Washington St.\" and member.position = \"Vice President\""
    },
    {
        "input": "Which of the three segments—SME, LAM and KAM—has the biggest and lowest percentage increases in consumption paid in EUR between 2012 and 2013?",
        "db_id": "debit_card_specializing",
        "sql": "select customers.segment , customers.customerid , yearmonth.consumption from yearmonth join customers on yearmonth.CustomerID = customers.CustomerID where  customers.currency between 2012 and 2013"
    },
    {
        "input": "List out the account numbers of female clients who are oldest and has lowest average salary, calculate the gap between this lowest average salary with the highest average salary?",
        "db_id": "financial",
        "sql": ""
    },
    {
        "input": "Calculate the percentage of molecules containing carcinogenic compounds that element is hydrogen.",
        "db_id": "toxicology",
        "sql": "select count(*) from atom join molecule on atom.molecule_id = molecule.molecule_id where  atom.element = \"hydrogen\" and atom.element > 0"
    },
    {
        "input": "What is the publisher's name of Blue Beetle II?",
        "db_id": "superhero",
        "sql": "select publisher.publisher_name from superhero join publisher on superhero.publisher_id = publisher.id where  superhero.superhero_name = \"Blue Beetle\""
    },
    {
        "input": "List the football team that has a build up play speed of 31, build up plan dribbling of 53, and build up play passing of 32. Only indicate the short name of the team.",
        "db_id": "european_football_2",
        "sql": ""
    },
    {
        "input": "Please list the ID of the patient whose RF is normal and who is older than 60.",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.id from Examination join Patient on Examination.ID = Patient.ID where  examination.diagnosis = \"Normal\" and patient.birthday > 60"
    },
    {
        "input": "What is the ratio of Hydrogen elements in molecule ID TR006? List the ratio with its label.",
        "db_id": "toxicology",
        "sql": "select atom.element , molecule.label from atom join molecule on atom.molecule_id = molecule.molecule_id where  molecule.molecule_id = \"TR006\""
    },
    {
        "input": "Please list the ID of the patient whose RF is normal and who is older than 60.",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.id from Examination join Patient on Examination.ID = Patient.ID where  examination.diagnosis = \"Normal\" and patient.birthday > 60"
    },
    {
        "input": "What is the ratio of Hydrogen elements in molecule ID TR006? List the ratio with its label.",
        "db_id": "toxicology",
        "sql": "select atom.element , molecule.label from atom join molecule on atom.molecule_id = molecule.molecule_id where  molecule.molecule_id = \"TR006\""
    },
    {
        "input": "Indicate the cost of posters for 'September Speaker' event.",
        "db_id": "student_club",
        "sql": "select expense.cost from expense join budget on expense.link_to_budget = budget.budget_id join event on budget.link_to_event = event.event_id where  event.event_name = \"September Speaker\""
    },
    {
        "input": "Among posts by Harvey Motulsky and Noah Snyder, which one has higher popularity?",
        "db_id": "codebase_community",
        "sql": ""
    },
    {
        "input": "How many elements are contained in bond_id TR001_3_4?",
        "db_id": "toxicology",
        "sql": "select count(*) from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_id = \"TR001_3_4\""
    },
    {
        "input": "What is the average time in seconds of champion for each year, before year 1975?",
        "db_id": "formula_1",
        "sql": "select avg(laptimes.milliseconds) , races.year from lapTimes join races on lapTimes.raceId = races.raceId where  races.year < 1975  group by races.year"
    },
    {
        "input": "Among the sets whose expansion type is Commander, which set has the highest total number of cards including promotional and related supplemental products but excluding Alchemy modifications? Indicate the id of the set.",
        "db_id": "card_games",
        "sql": "select sets.id from sets where  sets.type = \"commander\"  group by sets.id  order by sum(sets.totalsetsize) desc limit 1"
    },
    {
        "input": "For the players who had a 77 points overall rating on 2016/6/23, who was the oldest? Give the name of the player.",
        "db_id": "european_football_2",
        "sql": "select player.player_name from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player_attributes.overall_rating = 77   order by player.birthday desc limit 1"
    },
    {
        "input": "Which countries have zip codes with post office boxes?",
        "db_id": "student_club",
        "sql": "select zip_code.county from zip_code where  zip_code.city = \"Post\""
    },
    {
        "input": "Rank superheroes from Marvel Comics by their eye color popularity, starting with the most common color.",
        "db_id": "superhero",
        "sql": "select superhero.eye_colour_id from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"Marvel Comics\"  group by superhero.eye_colour_id  order by count(*) desc limit 1"
    },
    {
        "input": "What is the percentage of players that are under 180 cm who have an overall strength of more than 70?",
        "db_id": "european_football_2",
        "sql": "select count(*) from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.height < 180 and player_attributes.strength > 70"
    },
    {
        "input": "For the team \"Hannover 96\", what was its defence aggression class on 2015/9/10?",
        "db_id": "european_football_2",
        "sql": "select team_attributes.defenceaggressionclass from Team_Attributes join Team on Team_Attributes.team_api_id = Team.team_api_id where  team.team_long_name = \"Hannover 96\" and team_attributes.date = \"2015/9/10\""
    },
    {
        "input": "For the players who had a 77 points overall rating on 2016/6/23, who was the oldest? Give the name of the player.",
        "db_id": "european_football_2",
        "sql": "select player.player_name from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player_attributes.overall_rating = 77   order by player.birthday desc limit 1"
    },
    {
        "input": "List down Ajax's superpowers.",
        "db_id": "superhero",
        "sql": "select superpower.power_name from hero_power join superpower on hero_power.power_id = superpower.id join superhero on hero_power.hero_id = superhero.id where  superhero.superhero_name = \"Ajax\""
    },
    {
        "input": "Consider the average difference between K-12 enrollment and 15-17 enrollment of schools that are locally funded, list the names and DOC type of schools which has a difference above this average.",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "What is the element with the atom ID of TR004_7 in molecule that is not carcinogenic?",
        "db_id": "toxicology",
        "sql": "select atom.element from atom join molecule on atom.molecule_id = molecule.molecule_id where  atom.atom_id = \"TR004_7\" and molecule.molecule_id != \"carcinogenic\""
    },
    {
        "input": "What is the average blood albumin level for female patients with a PLT greater than 400 who have been diagnosed with SLE?",
        "db_id": "thrombosis_prediction",
        "sql": "select avg(laboratory.alb) from Laboratory join Patient on Laboratory.ID = Patient.ID where  patient.sex = \"F\" and patient.diagnosis > 400 and patient.diagnosis = \"SLE\""
    },
    {
        "input": "What is the average number of bonds the atoms with the element iodine have?",
        "db_id": "toxicology",
        "sql": "select avg(bond.bond_type) from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  atom.element = \"iodine\""
    },
    {
        "input": "Among the users who obtained the \"Organizer\" badges, calculate the percentage of users who are teenagers.",
        "db_id": "codebase_community",
        "sql": "select users.age , count(*) from badges join users on badges.UserId = users.Id where  badges.name = \"Organizer\"  group by users.age"
    },
    {
        "input": "Calculate the percentage of carcinogenic molecules with triple bonded Hidrogen atoms.",
        "db_id": "toxicology",
        "sql": ""
    },
    {
        "input": "Please list the superhero names of all the superheroes that have blue eyes and blond hair.",
        "db_id": "superhero",
        "sql": "select superhero.superhero_name from superhero join colour on superhero.skin_colour_id = colour.id where  colour.colour = \"Blue\"   intersect select superhero.superhero_name from superhero join colour on superhero.skin_colour_id = colour.id where  colour.colour = \"Blend\""
    },
    {
        "input": "Which superhero has the same eyes, hair and skin colour? Indicate the publisher of the superhero.",
        "db_id": "superhero",
        "sql": "select publisher.publisher_name from superhero join publisher on superhero.publisher_id = publisher.id"
    },
    {
        "input": "How many bonds which involved atom 12 does molecule TR009 have?",
        "db_id": "toxicology",
        "sql": "select count(*) from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  atom.molecule_id = \"TR009\""
    },
    {
        "input": "What is the eligible free rate of the 10th and 11th schools with the highest enrolment for students in grades 1 through 12?",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "What is the percentage of cards whose language is French among the Story Spotlight cards?",
        "db_id": "card_games",
        "sql": "select count(*) from foreign_data join cards on foreign_data.uuid = cards.uuid where  foreign_data.language = \"French\""
    },
    {
        "input": "Describe the display name of the parent ID for child post with the highest score.",
        "db_id": "codebase_community",
        "sql": "select users.displayname from posts join users on posts.OwnerUserId = users.Id   order by posts.score desc limit 1"
    },
    {
        "input": "Calculate the difference in the percentage of members in New Jersey and Vermont.",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "Which publisher created more superheroes: DC or Marvel Comics? Find the difference in the number of superheroes.",
        "db_id": "superhero",
        "sql": "select count(*) from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"DC\" or publisher.publisher_name = \"Marvel Comics\""
    },
    {
        "input": "What was the fastest lap speed among all drivers in the 2009 Spanish Grand Prix?",
        "db_id": "formula_1",
        "sql": "select max(results.fastestlapspeed) from results join races on results.raceId = races.raceId where  races.year = 2009 and races.name = \"Spanish Grand Prix\""
    },
    {
        "input": "List the last names of students under the Elementary Education major and include their phone numbers.",
        "db_id": "student_club",
        "sql": "select member.last_name , member.phone from member join major on member.link_to_major = major.major_id where  major.major_name = \"Elementary Education\""
    },
    {
        "input": "What is the average time in seconds of champion for each year, before year 1975?",
        "db_id": "formula_1",
        "sql": "select avg(laptimes.milliseconds) , races.year from lapTimes join races on lapTimes.raceId = races.raceId where  races.year < 1975  group by races.year"
    },
    {
        "input": "What is the district Id of the account that placed the order with the id 33333?",
        "db_id": "financial",
        "sql": ""
    },
    {
        "input": "Please list top three elements of the toxicology of the molecule TR000 in alphabetical order.",
        "db_id": "toxicology",
        "sql": "select atom.element from atom where  atom.molecule_id = \"TR000\"   order by atom.element desc limit 3"
    },
    {
        "input": "List the elements of all the triple bonds.",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_type like \"3%\""
    },
    {
        "input": "Of the schools that offers a magnet program serving a grade span of Kindergarten to 8th grade, how many offers Multiple Provision Types? List the number of cities that offers a Kindergarten to 8th grade span and indicate how many schools are there serving such grade span for each city.",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "Among all superheroes created by George Lucas, identify the percentage of female superheroes.",
        "db_id": "superhero",
        "sql": "select superhero.superhero_name , count(*) from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"George Lucas\"  group by superhero.gender_id"
    },
    {
        "input": "Among the male patients who have a normal level of white blood cells, how many of them have an abnormal fibrinogen level?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID where  patient.sex = \"M\" and examination.diagnosis = \"Normal\""
    },
    {
        "input": "What is the percentage of blue female superheroes among all female superheroes?",
        "db_id": "superhero",
        "sql": "select colour.colour , count(*) from superhero join colour on superhero.skin_colour_id = colour.id join gender on superhero.gender_id = gender.id where  gender.gender = \"Female\"  group by colour.colour"
    },
    {
        "input": "List all carcinogenic molecules and their elements.",
        "db_id": "toxicology",
        "sql": "select molecule.molecule_id , atom.element from atom join molecule on atom.molecule_id = molecule.molecule_id where  atom.element = \"carcinogen\""
    },
    {
        "input": "Give the name of the league had the most goals in the 2016 season?",
        "db_id": "european_football_2",
        "sql": "select league.name from League join Match on League.id = Match.id where  match.season = 2016  group by match.league_id  order by count(*) desc limit 1"
    },
    {
        "input": "Among the patients have blood clots in veins, how many of them have a normal level of complement 4?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID join Laboratory on Patient.ID = Laboratory.ID where  examination.thrombosis = \"Normal\" and laboratory.c4 = 4"
    },
    {
        "input": "How many white bordered cards are powerful?",
        "db_id": "card_games",
        "sql": "select count(*) from cards where  cards.bordercolor = \"white\""
    },
    {
        "input": "How many bonds which involved atom 12 does molecule TR009 have?",
        "db_id": "toxicology",
        "sql": "select count(*) from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  atom.molecule_id = \"TR009\""
    },
    {
        "input": "What is the difference in the annual average consumption of the customers with the least amount of consumption paid in CZK for 2013 between SME and LAM, LAM and KAM, and KAM and SME?",
        "db_id": "debit_card_specializing",
        "sql": "select avg(yearmonth.consumption) from yearmonth join customers on yearmonth.CustomerID = customers.CustomerID where  customers.currency = \"CZK\"   order by yearmonth.consumption asc limit 1"
    },
    {
        "input": "How many patients with a normal RF don't have thrombosis?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID where  examination.diagnosis = \"Normal\" and examination.thrombosis != \"No\""
    },
    {
        "input": "Among the patients with the normal level of triglyceride, how many of them have other symptoms observed?",
        "db_id": "thrombosis_prediction",
        "sql": "select count( distinct examination.symptoms) from Examination where  examination.diagnosis = \"Normal\""
    },
    {
        "input": "What was the fastest lap speed among all drivers in the 2009 Spanish Grand Prix?",
        "db_id": "formula_1",
        "sql": "select max(results.fastestlapspeed) from results join races on results.raceId = races.raceId where  races.year = 2009 and races.name = \"Spanish Grand Prix\""
    },
    {
        "input": "Mention the category of events which were held at MU 215.",
        "db_id": "student_club",
        "sql": "select budget.category from budget join event on budget.link_to_event = event.event_id where  event.location = \"MU 215\""
    },
    {
        "input": "On what year did the youngest driver had his first qualifying race? Also state the name, date and time of the race.",
        "db_id": "formula_1",
        "sql": "select races.year , races.name , races.time from driverStandings join drivers on driverStandings.driverId = drivers.driverId join races on driverStandings.raceId = races.raceId   order by drivers.dob asc limit 1"
    },
    {
        "input": "How many patients have a normal level of anti-ribonuclear protein and have been admitted to the hospital?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID where  examination.diagnosis = \"Normal\" and patient.admission = \"Hospital\""
    },
    {
        "input": "What percentage of patients who were born in 1980 and were diagnosed with RA are women?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.sex from Patient where  patient.birthday = 1980 and patient.diagnosis = \"RA\""
    },
    {
        "input": "Please list the account types that are not eligible for loans, and the average income of residents in the district where the account is located exceeds $8000 but is no more than $9000.",
        "db_id": "financial",
        "sql": "select disp.type from disp join account on disp.account_id = account.account_id join loan on account.account_id = loan.account_id  group by disp.type having  avg(loan.amount) > 8000  intersect select disp.type from disp join account on disp.account_id = account.account_id join loan on account.account_id = loan.account_id  group by disp.type having  avg(loan.amount) < 9000"
    },
    {
        "input": "Among the cards with converted mana cost higher than 5 in the set Coldsnap, how many of them have unknown power?",
        "db_id": "card_games",
        "sql": "select count(*) from cards join sets on cards.id = sets.id where  cards.convertedmanacost > 5 and sets.name = \"Coldsnap\""
    },
    {
        "input": "What is the total number of non-chartered schools in the county of Los Angeles with a percent (%) of eligible free meals for grades 1 through 12 that is less than 0.18%?",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "Which superhero has the most durability published by Dark Horse Comics?",
        "db_id": "superhero",
        "sql": "select superhero.superhero_name from hero_power join superpower on hero_power.power_id = superpower.id join superhero on hero_power.hero_id = superhero.id join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"Dark Horse Comics\"   order by superpower.power_name desc limit 1"
    },
    {
        "input": "What is the district Id of the account that placed the order with the id 33333?",
        "db_id": "financial",
        "sql": ""
    },
    {
        "input": "What is the comment's rating score of the post which was created on 7/19/2010 7:19:56 PM",
        "db_id": "codebase_community",
        "sql": "select comments.score from comments where  comments.creationdate = \"2010-07-19\""
    },
    {
        "input": "Among the patients whose creatinine level is abnormal, how many of them aren't 70 yet?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Laboratory join Patient on Laboratory.ID = Patient.ID where  laboratory.sc170 >= 70"
    },
    {
        "input": "Consider the average difference between K-12 enrollment and 15-17 enrollment of schools that are locally funded, list the names and DOC type of schools which has a difference above this average.",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "Among all superheroes created by George Lucas, identify the percentage of female superheroes.",
        "db_id": "superhero",
        "sql": "select superhero.superhero_name , count(*) from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"George Lucas\"  group by superhero.gender_id"
    },
    {
        "input": "Calculate the percentage of carcinogenic molecules with triple bonded Hidrogen atoms.",
        "db_id": "toxicology",
        "sql": ""
    },
    {
        "input": "What is the publisher's name of Blue Beetle II?",
        "db_id": "superhero",
        "sql": "select publisher.publisher_name from superhero join publisher on superhero.publisher_id = publisher.id where  superhero.superhero_name = \"Blue Beetle\""
    },
    {
        "input": "What is the average fastest lap time in seconds for Lewis Hamilton in all the Formula_1 races?",
        "db_id": "formula_1",
        "sql": "select avg(laptimes.milliseconds) from lapTimes join drivers on lapTimes.driverId = drivers.driverId where  drivers.forename = \"Lewis\" and drivers.surname = \"Formula_1\""
    },
    {
        "input": "What elements are in the TR004_8_9 bond atoms?",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_id = \"TR004_8_9\""
    },
    {
        "input": "What is the difference of the average ball control score between Abdou Diallo and Aaron Appindangoye\n?",
        "db_id": "european_football_2",
        "sql": "select avg(player_attributes.ball_control) from Player_Attributes where  player_attributes.player_api_id in (select Player.player_api_id from Player where  player.player_name = \"Abdou Diallo\"   intersect select Player.player_api_id from Player where  player.player_name = \"Aaron Appindangoye\"   )"
    },
    {
        "input": "How many white bordered cards are powerful?",
        "db_id": "card_games",
        "sql": "select count(*) from cards where  cards.bordercolor = \"white\""
    },
    {
        "input": "List all patients who were followed up at the outpatient clinic who underwent a laboratory test in October 1991 and had a total blood bilirubin level within the normal range.",
        "db_id": "thrombosis_prediction",
        "sql": "select distinct patient.id from Examination join Patient on Examination.ID = Patient.ID join Laboratory on Patient.ID = Laboratory.ID where  examination.diagnosis = \"Normal\" and laboratory.date = 1991"
    },
    {
        "input": "Please list top three molecules that have single bonds between two atoms and are not carcinogenic in alphabetical order.",
        "db_id": "toxicology",
        "sql": "select molecule.molecule_id from bond join molecule on bond.molecule_id = molecule.molecule_id where  bond.bond_type = \"Single\"   except select bond.molecule_id from bond where  bond.bond_type = \"carcinogenic\"   order by molecule.molecule_id asc"
    },
    {
        "input": "How many patients with a normal Rhuematoid Factor has a positive measure of degree of coagulation?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID where  examination.diagnosis = \"Normal\" and patient.admission >= 1"
    },
    {
        "input": "What is the ratio of male to female patients among all those with abnormal uric acid counts?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "What is the percentage of superheroes who act in their own self-interest or make decisions based on their own moral code? Indicate how many of the said superheroes were published by Marvel Comics.",
        "db_id": "superhero",
        "sql": "select count(*) from hero_attribute join superhero on hero_attribute.hero_id = superhero.id join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"Marvel Comics\" or hero_attribute.attribute_value = \"self-interest\""
    },
    {
        "input": "Which members who were approved from 1/10/2019 to 11/19/2019? Please identify the member who attended the event and the link to their event.",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "List down top 3 German drivers who has the shortest average pit stop duration and were born between 1980-1985.",
        "db_id": "formula_1",
        "sql": "select drivers.surname , drivers.driverid from pitStops join drivers on pitStops.driverId = drivers.driverId where  drivers.nationality = \"German\"  group by drivers.driverid  order by avg(pitstops.duration) asc limit 3"
    },
    {
        "input": "Which user added a bounty amount of 50 to the post title mentioning variance?",
        "db_id": "codebase_community",
        "sql": "select posthistory.userdisplayname from postHistory join users on postHistory.UserId = users.Id join votes on users.Id = votes.UserId where  posthistory.comment = \"Variance\" and votes.bountyamount = 50"
    },
    {
        "input": "Name chemical elements that form a bond TR001_10_11.",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_id = \"TR001_10_11\""
    },
    {
        "input": "Please list the disparate time of the transactions taken place in the gas stations from chain no. 11.",
        "db_id": "debit_card_specializing",
        "sql": ""
    },
    {
        "input": "Write the full names of students who received funds on the date of 9/9/2019 and include the amount received.",
        "db_id": "student_club",
        "sql": "select member.first_name , member.last_name , income.amount from income join member on income.link_to_member = member.member_id where  income.date_received = \"9/9/2019\""
    },
    {
        "input": "For the patient who was diagnosed SLE on 1997/1/27, what was his/her original diagnose when he/she came to the hospital for the first time?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.diagnosis , patient.diagnosis from Patient where  patient.diagnosis = \"SLE\" and patient.admission = \"1997/1/27\""
    },
    {
        "input": "When was the first time did Kevin Constant have his highest crossing score? Give the date.",
        "db_id": "european_football_2",
        "sql": "select player_attributes.date from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.player_name = \"Kevin Constant\"   order by player_attributes.crossing desc limit 1"
    },
    {
        "input": "Find the name and date of events with expenses for pizza that were more than fifty dollars but less than a hundred dollars.",
        "db_id": "student_club",
        "sql": "select event.event_name , event.event_date from expense join budget on expense.link_to_budget = budget.budget_id join event on budget.link_to_event = event.event_id where  expense.expense_description = \"Pizza\" and expense.cost > 50 and expense.expense_date < 100"
    },
    {
        "input": "What kind of currency did the customer paid at 16:25:00 in 2012/8/24?",
        "db_id": "debit_card_specializing",
        "sql": ""
    },
    {
        "input": "For the players who had a 77 points overall rating on 2016/6/23, who was the oldest? Give the name of the player.",
        "db_id": "european_football_2",
        "sql": "select player.player_name from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player_attributes.overall_rating = 77   order by player.birthday desc limit 1"
    },
    {
        "input": "Calculate the average height of all neutral superheroes.",
        "db_id": "superhero",
        "sql": "select avg(superhero.height_cm) from superhero join alignment on superhero.alignment_id = alignment.id where  alignment.alignment = \"Neutral\""
    },
    {
        "input": "Calculate the average height of all neutral superheroes.",
        "db_id": "superhero",
        "sql": "select avg(superhero.height_cm) from superhero join alignment on superhero.alignment_id = alignment.id where  alignment.alignment = \"Neutral\""
    },
    {
        "input": "List the top 10 players' names whose heights are above 180 in descending order of average heading accuracy.",
        "db_id": "european_football_2",
        "sql": "select player.player_name from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.height > 180  group by Player_Attributes.player_api_id  order by avg(player_attributes.heading_accuracy) desc limit 10"
    },
    {
        "input": "What's the French name of the set of cards with \"Tendo Ice Bridge\" is in?",
        "db_id": "card_games",
        "sql": "select sets.name from foreign_data join cards on foreign_data.uuid = cards.uuid join sets on foreign_data.type = sets.type where  cards.name = \"Tendo Ice Bridge\" and foreign_data.language = \"French\""
    },
    {
        "input": "In comments with score between 1 to 5, list down the display names of the users with 0 down votes.",
        "db_id": "codebase_community",
        "sql": "select users.displayname from comments join users on comments.UserId = users.Id where  comments.score between 1 and 5"
    },
    {
        "input": "Among the comments with scores between 5 to 10, what is the percentage of the users with 0 up votes?",
        "db_id": "codebase_community",
        "sql": "select users.upvotes from comments join users on comments.UserId = users.Id where  comments.score between 5 and 10"
    },
    {
        "input": "Provide the heights of the heroes whose eye colours are amber.",
        "db_id": "superhero",
        "sql": "select superhero.height_cm from superhero join colour on superhero.skin_colour_id = colour.id where  colour.colour = \"Amber\""
    },
    {
        "input": "Between DC and Marvel Comics, which publisher has published more superheroes? Find the difference in the number of superheroes they have published.",
        "db_id": "superhero",
        "sql": "select publisher.publisher_name , count(*) from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"DC\"  group by superhero.publisher_id  intersect select publisher.publisher_name , count(*) from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"Marvel Comics\"   order by count(*) desc limit 1"
    },
    {
        "input": "What is the percentage difference of student badges given during 2010 and 2011?",
        "db_id": "codebase_community",
        "sql": "select avg(badges.date) from badges where  badges.date between 2010 and 2011"
    },
    {
        "input": "How many elements are contained in bond_id TR001_3_4?",
        "db_id": "toxicology",
        "sql": "select count(*) from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_id = \"TR001_3_4\""
    },
    {
        "input": "What percentage of cards with format commander and legal status do not have a content warning?",
        "db_id": "card_games",
        "sql": "select avg(cards.hascontentwarning) from legalities join cards on legalities.uuid = cards.uuid where  legalities.format = \"commander\" and legalities.status = \"Legal\""
    },
    {
        "input": "Please list the account types that are not eligible for loans, and the average income of residents in the district where the account is located exceeds $8000 but is no more than $9000.",
        "db_id": "financial",
        "sql": "select disp.type from disp join account on disp.account_id = account.account_id join loan on account.account_id = loan.account_id  group by disp.type having  avg(loan.amount) > 8000  intersect select disp.type from disp join account on disp.account_id = account.account_id join loan on account.account_id = loan.account_id  group by disp.type having  avg(loan.amount) < 9000"
    },
    {
        "input": "What percentage of patients who were born in 1980 and were diagnosed with RA are women?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.sex from Patient where  patient.birthday = 1980 and patient.diagnosis = \"RA\""
    },
    {
        "input": "Rank superheroes from Marvel Comics by their eye color popularity, starting with the most common color.",
        "db_id": "superhero",
        "sql": "select superhero.eye_colour_id from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"Marvel Comics\"  group by superhero.eye_colour_id  order by count(*) desc limit 1"
    },
    {
        "input": "Among the bad superheroes, what is the percentage of female superheroes?",
        "db_id": "superhero",
        "sql": "select alignment.alignment , count(*) from superhero join gender on superhero.gender_id = gender.id join alignment on superhero.alignment_id = alignment.id where  gender.gender = \"Female\"  group by alignment.alignment"
    },
    {
        "input": "Calculate the average home team goal in the 2010/2011 season in the country of Poland.",
        "db_id": "european_football_2",
        "sql": "select avg(match.home_team_goal) from Country join Match on Country.id = Match.id where  country.name = \"Poland\" and match.season = \"2010/2011\""
    },
    {
        "input": "List the top 10 players' names whose heights are above 180 in descending order of average heading accuracy.",
        "db_id": "european_football_2",
        "sql": "select player.player_name from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.height > 180  group by Player_Attributes.player_api_id  order by avg(player_attributes.heading_accuracy) desc limit 10"
    },
    {
        "input": "List all patients who were followed up at the outpatient clinic who underwent a laboratory test in October 1991 and had a total blood bilirubin level within the normal range.",
        "db_id": "thrombosis_prediction",
        "sql": "select distinct patient.id from Examination join Patient on Examination.ID = Patient.ID join Laboratory on Patient.ID = Laboratory.ID where  examination.diagnosis = \"Normal\" and laboratory.date = 1991"
    },
    {
        "input": "What is the average fastest lap time of the top 10 drivers in the 2006 United States Grand Prix?",
        "db_id": "formula_1",
        "sql": "select avg(results.fastestlaptime) from lapTimes join races on lapTimes.raceId = races.raceId join results on races.raceId = results.raceId where  races.year = 2006   order by laptimes.time desc limit 10"
    },
    {
        "input": "Which superhero has the same eyes, hair and skin colour? Indicate the publisher of the superhero.",
        "db_id": "superhero",
        "sql": "select publisher.publisher_name from superhero join publisher on superhero.publisher_id = publisher.id"
    },
    {
        "input": "What sex is the patient who in a medical examination was diagnosed with PSS and in a laboratory examination had a blood level of C-reactive protein de 2+, createnine 1 and LDH 123?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "Who is the top spending customer and how much is the average price per single item purchased by this customer? What currency was being used?",
        "db_id": "debit_card_specializing",
        "sql": ""
    },
    {
        "input": "Among the players with an overall rating between 60 to 65, how many players whose going to be in all of your attack moves instead of defensing?",
        "db_id": "european_football_2",
        "sql": "select count(*) from Player_Attributes where  player_attributes.overall_rating between 60 and 65"
    },
    {
        "input": "Who is the top spending customer and how much is the average price per single item purchased by this customer? What currency was being used?",
        "db_id": "debit_card_specializing",
        "sql": ""
    },
    {
        "input": "What percentage of cards without power are in French?",
        "db_id": "card_games",
        "sql": "select avg(cards.power) from foreign_data join cards on foreign_data.uuid = cards.uuid where  foreign_data.language = \"French\""
    },
    {
        "input": "How many patients with a normal Rhuematoid Factor has a positive measure of degree of coagulation?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID where  examination.diagnosis = \"Normal\" and patient.admission >= 1"
    },
    {
        "input": "What is the badge name that user 'SilentGhost' obtained?",
        "db_id": "codebase_community",
        "sql": "select badges.name from badges join users on badges.UserId = users.Id where  users.displayname = \"SilentGhost\""
    },
    {
        "input": "Which superhero has the most durability published by Dark Horse Comics?",
        "db_id": "superhero",
        "sql": "select superhero.superhero_name from hero_power join superpower on hero_power.power_id = superpower.id join superhero on hero_power.hero_id = superhero.id join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"Dark Horse Comics\"   order by superpower.power_name desc limit 1"
    },
    {
        "input": "Write the full names of students who received funds on the date of 9/9/2019 and include the amount received.",
        "db_id": "student_club",
        "sql": "select member.first_name , member.last_name , income.amount from income join member on income.link_to_member = member.member_id where  income.date_received = \"9/9/2019\""
    },
    {
        "input": "Which home team had lost the fewest matches in the 2016 season?",
        "db_id": "european_football_2",
        "sql": "select match.home_team_api_id from Match where  match.season = 2016  group by match.home_team_api_id  order by count(*) asc limit 1"
    },
    {
        "input": "How many molecules have a double bond type and among these molecule, how many are labeled as carcinogenic compound?",
        "db_id": "toxicology",
        "sql": "select count(*) , molecule.label from bond join molecule on bond.molecule_id = molecule.molecule_id where  bond.bond_type = \"double\"  group by molecule.label"
    },
    {
        "input": "Among the cards whose version of frame style is 1997, what is the status of the card illustrated by D. Alexander Gregory in legacy play format that has sensitive content or Wizards of the Coast?",
        "db_id": "card_games",
        "sql": "select legalities.status from legalities join cards on legalities.uuid = cards.uuid where  cards.frameversion = 1997 and cards.artist = \"D. Alexander Gregory\"   union select legalities.status from legalities where  legalities.format = \"traditional\""
    },
    {
        "input": "What is the constructor reference name of the champion in the 2009 Singapore Grand Prix? Please give its website.",
        "db_id": "formula_1",
        "sql": "select constructors.name from constructorResults join constructors on constructorResults.constructorId = constructors.constructorId join races on constructorResults.raceId = races.raceId where  races.year = 2009 and races.name = \"Singapore Grand Prix\""
    },
    {
        "input": "Calculate the percentage of molecules containing carcinogenic compounds that element is hydrogen.",
        "db_id": "toxicology",
        "sql": "select count(*) from atom join molecule on atom.molecule_id = molecule.molecule_id where  atom.element = \"hydrogen\" and atom.element > 0"
    },
    {
        "input": "How many patients who were examined between 1987/7/6 and 1996/1/31 had a GPT level greater than 30 and an ALB level less than 4? List them by their ID.",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "How many molecules have a double bond type and among these molecule, how many are labeled as carcinogenic compound?",
        "db_id": "toxicology",
        "sql": "select count(*) , molecule.label from bond join molecule on bond.molecule_id = molecule.molecule_id where  bond.bond_type = \"double\"  group by molecule.label"
    },
    {
        "input": "In 2012, who had the least consumption in LAM?",
        "db_id": "debit_card_specializing",
        "sql": "select yearmonth.customerid , yearmonth.consumption from yearmonth join customers on yearmonth.CustomerID = customers.CustomerID where  customers.segment = \"LAM\"   order by yearmonth.consumption asc limit 1"
    },
    {
        "input": "Among the bad superheroes, what is the percentage of female superheroes?",
        "db_id": "superhero",
        "sql": "select alignment.alignment , count(*) from superhero join gender on superhero.gender_id = gender.id join alignment on superhero.alignment_id = alignment.id where  gender.gender = \"Female\"  group by alignment.alignment"
    },
    {
        "input": "In which years did Lewis Hamilton participate in a Formula_1 race?",
        "db_id": "formula_1",
        "sql": "select races.year from driverStandings join drivers on driverStandings.driverId = drivers.driverId join races on driverStandings.raceId = races.raceId where  drivers.forename = \"Lewis\" and drivers.surname = \"Formula_1\""
    },
    {
        "input": "Which county reported the most number of school closure in the 1980s with school wonership code belonging to Youth Authority Facilities (CEA)?",
        "db_id": "california_schools",
        "sql": "select schools.county from schools where  schools.soctype = \"Youth Authority Facilities\"  group by schools.county  order by count(*) desc limit 1"
    },
    {
        "input": "For the patients whose total cholesterol is higher than normal, how many of them have a negative measure of degree of coagulation?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID where  examination.diagnosis > \"Normal\""
    },
    {
        "input": "For laboratory examinations take in 1984, list all patients below 50 years old with normal platelet level.",
        "db_id": "thrombosis_prediction",
        "sql": "select * from Laboratory join Patient on Laboratory.ID = Patient.ID where  patient.birthday < 50 and laboratory.date = 1984"
    },
    {
        "input": "Which constructor scored most points from Monaco Grand Prix between 1980 and 2010? List the score, name and nationality of this team.",
        "db_id": "formula_1",
        "sql": "select constructors.name , constructors.nationality from constructorStandings join constructors on constructorStandings.constructorId = constructors.constructorId join races on constructorStandings.raceId = races.raceId where  races.year between 1980 and 2010 and constructorstandings.points = \"Monaco Grand Prix\""
    },
    {
        "input": "What was the chance creation crossing class for \"Hull City\" on 2010/2/22?",
        "db_id": "european_football_2",
        "sql": "select team_attributes.chancecreationcrossingclass from Team_Attributes where  team_attributes.date = \"2010/2/22\""
    },
    {
        "input": "Determine the bond type that is formed in the chemical compound containing element Carbon.",
        "db_id": "toxicology",
        "sql": "select bond.bond_type from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  atom.element = \"Carbon\""
    },
    {
        "input": "What is the difference in the annual average consumption of the customers with the least amount of consumption paid in CZK for 2013 between SME and LAM, LAM and KAM, and KAM and SME?",
        "db_id": "debit_card_specializing",
        "sql": "select avg(yearmonth.consumption) from yearmonth join customers on yearmonth.CustomerID = customers.CustomerID where  customers.currency = \"CZK\"   order by yearmonth.consumption asc limit 1"
    },
    {
        "input": "Among the members who incurred expenses in more than one event, who paid the most amount?",
        "db_id": "student_club",
        "sql": "select expense.link_to_member from expense join budget on expense.link_to_budget = budget.budget_id  group by expense.link_to_member having  count(*) > 1  order by sum(budget.amount) desc limit 1"
    },
    {
        "input": "For the branch which located in the south Bohemia with biggest number of inhabitants, what is the percentage of the male clients?",
        "db_id": "financial",
        "sql": "select client.gender from client join district on client.district_id = district.district_id where  district.a3 = \"south Bohemia\"  group by client.gender  order by count(*) desc limit 1"
    },
    {
        "input": "List the last name of the members of the club that attended the women's soccer event.",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "Calculate the average home team goal in the 2010/2011 season in the country of Poland.",
        "db_id": "european_football_2",
        "sql": "select avg(match.home_team_goal) from Country join Match on Country.id = Match.id where  country.name = \"Poland\" and match.season = \"2010/2011\""
    },
    {
        "input": "Please calculate the race completion percentage of Japanese drivers from 2007 to 2009.",
        "db_id": "formula_1",
        "sql": "select results.driverid from results join drivers on results.driverId = drivers.driverId join races on results.raceId = races.raceId where  drivers.nationality = \"Japanese\" and races.year between 2007 and 2009"
    },
    {
        "input": "How many unknown power cards contain info about the triggered ability",
        "db_id": "card_games",
        "sql": "select count( distinct cards.power) from cards where  cards.power = \"null\""
    },
    {
        "input": "State the chance creation passing class for \"PEC Zwolle\" on 2013/9/20.",
        "db_id": "european_football_2",
        "sql": "select team_attributes.chancecreationpassingclass from Team_Attributes join Team on Team_Attributes.team_api_id = Team.team_api_id where  team.team_long_name = \"PEC Zwolle\" and team_attributes.date = \"2013/9/20\""
    },
    {
        "input": "How many atoms with iodine and with sulfur type elements are there in single bond molecules?",
        "db_id": "toxicology",
        "sql": "select count(*) from atom where  atom.atom_id in (select connected.atom_id2 from connected join bond on connected.bond_id = bond.bond_id where  bond.bond_type = \"iodine\"   intersect select connected.atom_id2 from connected join bond on connected.bond_id = bond.bond_id where  bond.bond_type = \"sulfur\"   )"
    },
    {
        "input": "How many superheroes with blonde hair are there?",
        "db_id": "superhero",
        "sql": "select count(*) from superhero join colour on superhero.skin_colour_id = colour.id where  colour.colour = \"Blume\""
    },
    {
        "input": "What was the final score for the match on September 24, 2008, in the Belgian Jupiler League between the home team and the away team?",
        "db_id": "european_football_2",
        "sql": "select match.home_team_goal from Match where  match.date = \"2008-09-24\" and match.away_team_goal = \"home\""
    },
    {
        "input": "What is the average time in seconds of champion for each year, before year 1975?",
        "db_id": "formula_1",
        "sql": "select avg(laptimes.milliseconds) , races.year from lapTimes join races on lapTimes.raceId = races.raceId where  races.year < 1975  group by races.year"
    },
    {
        "input": "Please list the account types that are not eligible for loans, and the average income of residents in the district where the account is located exceeds $8000 but is no more than $9000.",
        "db_id": "financial",
        "sql": "select disp.type from disp join account on disp.account_id = account.account_id join loan on account.account_id = loan.account_id  group by disp.type having  avg(loan.amount) > 8000  intersect select disp.type from disp join account on disp.account_id = account.account_id join loan on account.account_id = loan.account_id  group by disp.type having  avg(loan.amount) < 9000"
    },
    {
        "input": "Provide the hero name and race of Charles Chandler.",
        "db_id": "superhero",
        "sql": "select superhero.superhero_name , race.race from superhero join race on superhero.race_id = race.id where  superhero.full_name = \"Charles Chandler\""
    },
    {
        "input": "Among the members who incurred expenses in more than one event, who paid the most amount?",
        "db_id": "student_club",
        "sql": "select expense.link_to_member from expense join budget on expense.link_to_budget = budget.budget_id  group by expense.link_to_member having  count(*) > 1  order by sum(budget.amount) desc limit 1"
    },
    {
        "input": "What is the average time in seconds of champion for each year, before year 1975?",
        "db_id": "formula_1",
        "sql": "select avg(laptimes.milliseconds) , races.year from lapTimes join races on lapTimes.raceId = races.raceId where  races.year < 1975  group by races.year"
    },
    {
        "input": "What is the percentage of female patient were born after 1930?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Patient where  patient.sex = \"F\" and patient.birthday > 1930"
    },
    {
        "input": "Calculate the percentage of carcinogenic molecules with triple bonded Hidrogen atoms.",
        "db_id": "toxicology",
        "sql": ""
    },
    {
        "input": "What are the player api id of 10 heaviest players?",
        "db_id": "european_football_2",
        "sql": "select player.player_api_id from Player   order by player.weight desc limit 10"
    },
    {
        "input": "Which customers, paying in CZK, consumed the most gas in 2011?",
        "db_id": "debit_card_specializing",
        "sql": "select customers.segment from yearmonth join customers on yearmonth.CustomerID = customers.CustomerID where  customers.currency = \"CZK\"   order by yearmonth.consumption desc limit 1"
    },
    {
        "input": "Are there more in-patient or outpatient who were male? What is the deviation in percentage?",
        "db_id": "thrombosis_prediction",
        "sql": "select avg(patient.sex) from Patient where  patient.sex = \"M\""
    },
    {
        "input": "What are the player api id of 10 heaviest players?",
        "db_id": "european_football_2",
        "sql": "select player.player_api_id from Player   order by player.weight desc limit 10"
    },
    {
        "input": "List the top 10 players' names whose heights are above 180 in descending order of average heading accuracy.",
        "db_id": "european_football_2",
        "sql": "select player.player_name from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.height > 180  group by Player_Attributes.player_api_id  order by avg(player_attributes.heading_accuracy) desc limit 10"
    },
    {
        "input": "Calculate the total atoms consisting of the element carbon and hydrogen.",
        "db_id": "toxicology",
        "sql": "select count(*) from atom where  atom.atom_id in (select atom.atom_id from atom where  atom.element = \"carbon\"   intersect select atom.atom_id from atom where  atom.element = \"hydrogen\"   )"
    },
    {
        "input": "What is the highest eligible free rate for K-12 students in the schools in Alameda County?",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "Please calculate the race completion percentage of Japanese drivers from 2007 to 2009.",
        "db_id": "formula_1",
        "sql": "select results.driverid from results join drivers on results.driverId = drivers.driverId join races on results.raceId = races.raceId where  drivers.nationality = \"Japanese\" and races.year between 2007 and 2009"
    },
    {
        "input": "List the element and bond type included in the molecule with molecule ID of TR002.",
        "db_id": "toxicology",
        "sql": "select atom.element , bond.bond_type from atom join molecule on atom.molecule_id = molecule.molecule_id join bond on molecule.molecule_id = bond.molecule_id where  molecule.molecule_id = \"TR002\""
    },
    {
        "input": "What is the difference in the annual average consumption of the customers with the least amount of consumption paid in CZK for 2013 between SME and LAM, LAM and KAM, and KAM and SME?",
        "db_id": "debit_card_specializing",
        "sql": "select avg(yearmonth.consumption) from yearmonth join customers on yearmonth.CustomerID = customers.CustomerID where  customers.currency = \"CZK\"   order by yearmonth.consumption asc limit 1"
    },
    {
        "input": "Which driver has the fastest lap time? Please give their forenames and surnames.",
        "db_id": "formula_1",
        "sql": "select drivers.forename , drivers.surname from results join drivers on results.driverId = drivers.driverId   order by results.fastestlaptime desc limit 1"
    },
    {
        "input": "List down Ajax's superpowers.",
        "db_id": "superhero",
        "sql": "select superpower.power_name from hero_power join superpower on hero_power.power_id = superpower.id join superhero on hero_power.hero_id = superhero.id where  superhero.superhero_name = \"Ajax\""
    },
    {
        "input": "How many atoms with iodine and with sulfur type elements are there in single bond molecules?",
        "db_id": "toxicology",
        "sql": "select count(*) from atom where  atom.atom_id in (select connected.atom_id2 from connected join bond on connected.bond_id = bond.bond_id where  bond.bond_type = \"iodine\"   intersect select connected.atom_id2 from connected join bond on connected.bond_id = bond.bond_id where  bond.bond_type = \"sulfur\"   )"
    },
    {
        "input": "Provide ID, sex and age of patient who has blood glucose (GLU) not within normal range but with total cholesterol(T-CHO) within normal range.",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "Give the full name and contact number of members who had to spend more than average on each expense.",
        "db_id": "student_club",
        "sql": "select member.first_name , member.last_name , member.phone from expense join member on expense.link_to_member = member.member_id where  expense.cost > (select avg(expense.cost) from expense  )"
    },
    {
        "input": "What proportion of single bonds are carcinogenic? Please provide your answer as a percentage with five decimal places.",
        "db_id": "toxicology",
        "sql": "select bond.bond_type from bond where  bond.bond_type = \"carcinogenic\"   order by bond.bond_type desc limit 5"
    },
    {
        "input": "What is the total number of non-chartered schools in the county of Los Angeles with a percent (%) of eligible free meals for grades 1 through 12 that is less than 0.18%?",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "For the team \"Hannover 96\", what was its defence aggression class on 2015/9/10?",
        "db_id": "european_football_2",
        "sql": "select team_attributes.defenceaggressionclass from Team_Attributes join Team on Team_Attributes.team_api_id = Team.team_api_id where  team.team_long_name = \"Hannover 96\" and team_attributes.date = \"2015/9/10\""
    },
    {
        "input": "Calculate the average home team goal in the 2010/2011 season in the country of Poland.",
        "db_id": "european_football_2",
        "sql": "select avg(match.home_team_goal) from Country join Match on Country.id = Match.id where  country.name = \"Poland\" and match.season = \"2010/2011\""
    },
    {
        "input": "Which set is not available outside of the United States and has foil cards with Japanese writing on them? Please include the set ID in your response.",
        "db_id": "card_games",
        "sql": "select sets.id from sets where  sets.isonlineonly not in (select cards.isOnlineOnly from foreign_data join cards on foreign_data.uuid = cards.uuid join sets on foreign_data.type = sets.type where  foreign_data.language = \"Japanese\"   )"
    },
    {
        "input": "What is the percentage of players that are under 180 cm who have an overall strength of more than 70?",
        "db_id": "european_football_2",
        "sql": "select count(*) from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.height < 180 and player_attributes.strength > 70"
    },
    {
        "input": "Among the patients have blood clots in veins, how many of them have a normal level of complement 4?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID join Laboratory on Patient.ID = Laboratory.ID where  examination.thrombosis = \"Normal\" and laboratory.c4 = 4"
    },
    {
        "input": "What is the score and the link type ID for post ID 395?",
        "db_id": "codebase_community",
        "sql": "select posts.score , postlinks.linktypeid from postLinks join posts on postLinks.RelatedPostId = posts.Id where  posts.score = 395"
    },
    {
        "input": "How many patients with a normal RF don't have thrombosis?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID where  examination.diagnosis = \"Normal\" and examination.thrombosis != \"No\""
    },
    {
        "input": "How many bonds which involved atom 12 does molecule TR009 have?",
        "db_id": "toxicology",
        "sql": "select count(*) from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  atom.molecule_id = \"TR009\""
    },
    {
        "input": "Please list top three molecules that have single bonds between two atoms and are not carcinogenic in alphabetical order.",
        "db_id": "toxicology",
        "sql": "select molecule.molecule_id from bond join molecule on bond.molecule_id = molecule.molecule_id where  bond.bond_type = \"Single\"   except select bond.molecule_id from bond where  bond.bond_type = \"carcinogenic\"   order by molecule.molecule_id asc"
    },
    {
        "input": "How many molecules have a double bond type and among these molecule, how many are labeled as carcinogenic compound?",
        "db_id": "toxicology",
        "sql": "select count(*) , molecule.label from bond join molecule on bond.molecule_id = molecule.molecule_id where  bond.bond_type = \"double\"  group by molecule.label"
    },
    {
        "input": "List down top 3 German drivers who has the shortest average pit stop duration and were born between 1980-1985.",
        "db_id": "formula_1",
        "sql": "select drivers.surname , drivers.driverid from pitStops join drivers on pitStops.driverId = drivers.driverId where  drivers.nationality = \"German\"  group by drivers.driverid  order by avg(pitstops.duration) asc limit 3"
    },
    {
        "input": "List all the elements of atoms that can not bond with any other atoms.",
        "db_id": "toxicology",
        "sql": "select atom.element from atom where  atom.atom_id not in (select connected.atom_id2 from connected  )"
    },
    {
        "input": "What are the elements for bond id TR001_10_11?",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_id = \"TR001_10_11\""
    },
    {
        "input": "Between DC and Marvel Comics, which publisher has published more superheroes? Find the difference in the number of superheroes they have published.",
        "db_id": "superhero",
        "sql": "select publisher.publisher_name , count(*) from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"DC\"  group by superhero.publisher_id  intersect select publisher.publisher_name , count(*) from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"Marvel Comics\"   order by count(*) desc limit 1"
    },
    {
        "input": "List out the account numbers of female clients who are oldest and has lowest average salary, calculate the gap between this lowest average salary with the highest average salary?",
        "db_id": "financial",
        "sql": ""
    },
    {
        "input": "Tally the toxicology element of the 4th atom of each molecule that was carcinogenic.",
        "db_id": "toxicology",
        "sql": "select atom.element , count(*) from atom where  atom.element = \"carcinogenic\"  group by atom.element"
    },
    {
        "input": "Among the patients who have a normal platelet level, how many of them have other symptoms observed?",
        "db_id": "thrombosis_prediction",
        "sql": "select count( distinct examination.symptoms) from Examination where  examination.diagnosis = \"Normal\""
    },
    {
        "input": "What was the fastest lap speed among all drivers in the 2009 Spanish Grand Prix?",
        "db_id": "formula_1",
        "sql": "select max(results.fastestlapspeed) from results join races on results.raceId = races.raceId where  races.year = 2009 and races.name = \"Spanish Grand Prix\""
    },
    {
        "input": "What is the comment's rating score of the post which was created on 7/19/2010 7:19:56 PM",
        "db_id": "codebase_community",
        "sql": "select comments.score from comments where  comments.creationdate = \"2010-07-19\""
    },
    {
        "input": "What is the percentage of incredibly powerful cards in the set Coldsnap?",
        "db_id": "card_games",
        "sql": "select avg(cards.power) from cards join sets on cards.id = sets.id where  sets.name = \"Coldsnap\""
    },
    {
        "input": "Which foot is preferred by Abdou Diallo?",
        "db_id": "european_football_2",
        "sql": "select player_attributes.preferred_foot from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.player_name = \"Abdou Diallo\""
    },
    {
        "input": "What is the percentage difference of student badges given during 2010 and 2011?",
        "db_id": "codebase_community",
        "sql": "select avg(badges.date) from badges where  badges.date between 2010 and 2011"
    },
    {
        "input": "Describe the display name of the parent ID for child post with the highest score.",
        "db_id": "codebase_community",
        "sql": "select users.displayname from posts join users on posts.OwnerUserId = users.Id   order by posts.score desc limit 1"
    },
    {
        "input": "List out the account numbers of female clients who are oldest and has lowest average salary, calculate the gap between this lowest average salary with the highest average salary?",
        "db_id": "financial",
        "sql": ""
    },
    {
        "input": "What is the name of the social event that was attended by the vice president of the Student_Club located at 900 E. Washington St.?",
        "db_id": "student_club",
        "sql": "select event.event_name from attendance join member on attendance.link_to_member = member.member_id join event on attendance.link_to_event = event.event_id where  event.location = \"900 E. Washington St.\" and member.position = \"Vice President\""
    },
    {
        "input": "What is the most common illness that doctors identified among the patients whose lab work was done between 1/1/1985, and 12/31/1995?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.diagnosis from Laboratory join Patient on Laboratory.ID = Patient.ID where  laboratory.date > \"1/1/1985\" and laboratory.date < \"12/31/1995\"  group by patient.diagnosis  order by count(*) desc limit 1"
    },
    {
        "input": "What elements are in a double type bond?",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_type = \"double\""
    },
    {
        "input": "What was the growth rate of the total amount of loans across all accounts for a male client between 1996 and 1997?",
        "db_id": "financial",
        "sql": "select sum(loan.amount) from loan join account on loan.account_id = account.account_id join district on account.district_id = district.district_id join client on district.district_id = client.district_id where  client.gender >= \"M\" and loan.date between 1996 and 1997"
    },
    {
        "input": "Among the bad superheroes, what is the percentage of female superheroes?",
        "db_id": "superhero",
        "sql": "select alignment.alignment , count(*) from superhero join gender on superhero.gender_id = gender.id join alignment on superhero.alignment_id = alignment.id where  gender.gender = \"Female\"  group by alignment.alignment"
    },
    {
        "input": "Write the full name of the member who spent money for water, veggie tray and supplies and include the cost of it.",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "What is the composition of element chlorine in percentage among the single bond molecules?",
        "db_id": "toxicology",
        "sql": "select atom.element , atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id  group by atom.element  order by count(*) desc limit 1"
    },
    {
        "input": "Paul di Resta was in the No. 853 race, what percent faster did he finish in the 853rd race than the next race for the fastest lap speed?",
        "db_id": "formula_1",
        "sql": "select results.fastestlapspeed from results join drivers on results.driverId = drivers.driverId where  drivers.forename = \"Paul\"   order by results.fastestlapspeed desc limit 1"
    },
    {
        "input": "List the elements of all the triple bonds.",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_type like \"3%\""
    },
    {
        "input": "What is the lap record set by Lewis Hamilton in a Formula_1 race?",
        "db_id": "formula_1",
        "sql": "select results.laps from results join drivers on results.driverId = drivers.driverId where  drivers.forename = \"Lewis\" and drivers.surname = \"Formula_1\""
    },
    {
        "input": "Calculate the average home team goal in the 2010/2011 season in the country of Poland.",
        "db_id": "european_football_2",
        "sql": "select avg(match.home_team_goal) from Country join Match on Country.id = Match.id where  country.name = \"Poland\" and match.season = \"2010/2011\""
    },
    {
        "input": "What is the bond type of TR007_4_19?",
        "db_id": "toxicology",
        "sql": "select bond.bond_type from bond where  bond.bond_id = \"TR007_4_19\""
    },
    {
        "input": "Please list top three molecules that have single bonds between two atoms and are not carcinogenic in alphabetical order.",
        "db_id": "toxicology",
        "sql": "select molecule.molecule_id from bond join molecule on bond.molecule_id = molecule.molecule_id where  bond.bond_type = \"Single\"   except select bond.molecule_id from bond where  bond.bond_type = \"carcinogenic\"   order by molecule.molecule_id asc"
    },
    {
        "input": "Please list the lap records for the circuits in Italy.",
        "db_id": "formula_1",
        "sql": "select laptimes.lap from lapTimes join races on lapTimes.raceId = races.raceId join circuits on races.circuitId = circuits.circuitId where  circuits.country = \"Italy\""
    },
    {
        "input": "Who is the editor of the post titled 'Open source tools for visualizing multi-dimensional data?'",
        "db_id": "codebase_community",
        "sql": "select distinct users.displayname from posts join users on posts.OwnerUserId = users.Id where  posts.title = \"Open source tools for visualizing multi-dimensional data\""
    },
    {
        "input": "Which user added a bounty amount of 50 to the post title mentioning variance?",
        "db_id": "codebase_community",
        "sql": "select posthistory.userdisplayname from postHistory join users on postHistory.UserId = users.Id join votes on users.Id = votes.UserId where  posthistory.comment = \"Variance\" and votes.bountyamount = 50"
    },
    {
        "input": "For all patients who are older than 55 years old, what is the percentage of female who has abnormal prothrombin time (PT)?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.sex , count(*) from Patient where  patient.sex > 55  group by patient.sex"
    },
    {
        "input": "List the skin colour of the superheroes with 100 attribute value.",
        "db_id": "superhero",
        "sql": "select superhero.skin_colour_id from hero_attribute join superhero on hero_attribute.hero_id = superhero.id where  hero_attribute.attribute_value = 100"
    },
    {
        "input": "Who are the players that tend to be attacking when their mates were doing attack moves? List down their name.",
        "db_id": "european_football_2",
        "sql": "select distinct player.player_name from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id join Match on Player.player_api_id = Match.away_player_11   order by player_attributes.attacking_work_rate asc limit 1"
    },
    {
        "input": "What is the average blood albumin level for female patients with a PLT greater than 400 who have been diagnosed with SLE?",
        "db_id": "thrombosis_prediction",
        "sql": "select avg(laboratory.alb) from Laboratory join Patient on Laboratory.ID = Patient.ID where  patient.sex = \"F\" and patient.diagnosis > 400 and patient.diagnosis = \"SLE\""
    },
    {
        "input": "Calculate the difference in the percentage of members in New Jersey and Vermont.",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "What proportion of single bonds are carcinogenic? Please provide your answer as a percentage with five decimal places.",
        "db_id": "toxicology",
        "sql": "select bond.bond_type from bond where  bond.bond_type = \"carcinogenic\"   order by bond.bond_type desc limit 5"
    },
    {
        "input": "What is the composition of element chlorine in percentage among the single bond molecules?",
        "db_id": "toxicology",
        "sql": "select atom.element , atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id  group by atom.element  order by count(*) desc limit 1"
    },
    {
        "input": "What is the percentage of the cards with a converted mana cost of 7 in the set Coldsnap?",
        "db_id": "card_games",
        "sql": "select count(*) from cards join sets on cards.id = sets.id where  cards.convertedmanacost = 7 and sets.name = \"Coldsnap\""
    },
    {
        "input": "In superheroes with missing weight data, calculate the difference between the number of superheroes with blue eyes and no eye color.",
        "db_id": "superhero",
        "sql": "select count(*) from superhero where  superhero.weight_kg = \"Blue\" and superhero.eye_colour_id != \"No\""
    },
    {
        "input": "What was the difference in the number of crimes committed in East and North Bohemia in 1996?",
        "db_id": "financial",
        "sql": "select count(*) , district.a16 from district where  district.a3 = \"East\"  group by district.a16  intersect select count(*) , district.a16 from district where  district.a3 = \"North Bohemia\" and district.a16 = 1996"
    },
    {
        "input": "What is the most common illness that doctors identified among the patients whose lab work was done between 1/1/1985, and 12/31/1995?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.diagnosis from Laboratory join Patient on Laboratory.ID = Patient.ID where  laboratory.date > \"1/1/1985\" and laboratory.date < \"12/31/1995\"  group by patient.diagnosis  order by count(*) desc limit 1"
    },
    {
        "input": "Under whose administration is the school with the highest number of students scoring 1500 or more on the SAT? Indicate their full names.",
        "db_id": "california_schools",
        "sql": "select schools.admlname1 from satscores join schools on satscores.cds = schools.CDSCode where  satscores.numge1500 >= 1500  group by schools.admlname1  order by count(*) desc limit 1"
    },
    {
        "input": "Among all superheroes in Marvel Comics, identify the percentage of 'good' superheroes.",
        "db_id": "superhero",
        "sql": "select superhero.superhero_name , count(*) from superhero join alignment on superhero.alignment_id = alignment.id where  alignment.alignment = \"Good\"  group by superhero.superhero_name"
    },
    {
        "input": "Name chemical elements that form a bond TR001_10_11.",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_id = \"TR001_10_11\""
    },
    {
        "input": "Name the elements that comprise the atoms of bond TR001_2_4.",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_id = \"TR001_2_4\""
    },
    {
        "input": "How many bonds which involved atom 12 does molecule TR009 have?",
        "db_id": "toxicology",
        "sql": "select count(*) from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  atom.molecule_id = \"TR009\""
    },
    {
        "input": "What percentage is Landon Donovan's overall rating higher than Jordan Bowery on 2013/7/12?",
        "db_id": "european_football_2",
        "sql": "select player_attributes.overall_rating from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.player_name > \"Landon Donovan\" and player_attributes.date = \"2013/7/12\""
    },
    {
        "input": "What is the average index of the lactate dehydrogenase (LDH) for all patients with lactate dehydrogenase (LDH) within the normal range.",
        "db_id": "thrombosis_prediction",
        "sql": "select avg(laboratory.ldh) from Examination join Patient on Examination.ID = Patient.ID join Laboratory on Patient.ID = Laboratory.ID where  examination.diagnosis = \"Normal\""
    },
    {
        "input": "For the year that concluded on December 31, 1998, how many male patients on average were tested in the lab each month?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) , avg(patient.sex) , laboratory.date from Laboratory join Patient on Laboratory.ID = Patient.ID where  patient.sex = \"M\"  group by laboratory.date"
    },
    {
        "input": "What is the percentage of players that are under 180 cm who have an overall strength of more than 70?",
        "db_id": "european_football_2",
        "sql": "select count(*) from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.height < 180 and player_attributes.strength > 70"
    },
    {
        "input": "Among the patients who has a normal level of anti-centromere and a normal level of anti-SSB, how many of them are male?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Laboratory join Patient on Laboratory.ID = Patient.ID where  patient.sex = \"M\" and laboratory.centromea = \"Normal\" and laboratory.ssb = \"SSB\""
    },
    {
        "input": "What is the mana cost of cards with a normal layout, a 2003 frame version, with a black border color, and available in paper and mtgo?",
        "db_id": "card_games",
        "sql": "select cards.manacost from cards where  cards.layout = \"normal\" and cards.frameversion = \"2003\" and cards.bordercolor = \"black\" and cards.availability = \"mtgo\""
    },
    {
        "input": "How many patients who were examined between 1987/7/6 and 1996/1/31 had a GPT level greater than 30 and an ALB level less than 4? List them by their ID.",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "State the chance creation passing class for \"PEC Zwolle\" on 2013/9/20.",
        "db_id": "european_football_2",
        "sql": "select team_attributes.chancecreationpassingclass from Team_Attributes join Team on Team_Attributes.team_api_id = Team.team_api_id where  team.team_long_name = \"PEC Zwolle\" and team_attributes.date = \"2013/9/20\""
    },
    {
        "input": "Which publisher created more superheroes: DC or Marvel Comics? Find the difference in the number of superheroes.",
        "db_id": "superhero",
        "sql": "select count(*) from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"DC\" or publisher.publisher_name = \"Marvel Comics\""
    },
    {
        "input": "List the element and bond type included in the molecule with molecule ID of TR002.",
        "db_id": "toxicology",
        "sql": "select atom.element , bond.bond_type from atom join molecule on atom.molecule_id = molecule.molecule_id join bond on molecule.molecule_id = bond.molecule_id where  molecule.molecule_id = \"TR002\""
    },
    {
        "input": "For all the set of cards that has Japanese translation, what is the percentage of them are only available in non-foil?",
        "db_id": "card_games",
        "sql": "select cards.availability from cards join set_translations on cards.id = set_translations.id where  set_translations.language = \"Japanese\""
    },
    {
        "input": "Provide the heights of the heroes whose eye colours are amber.",
        "db_id": "superhero",
        "sql": "select superhero.height_cm from superhero join colour on superhero.skin_colour_id = colour.id where  colour.colour = \"Amber\""
    },
    {
        "input": "Which countries have zip codes with post office boxes?",
        "db_id": "student_club",
        "sql": "select zip_code.county from zip_code where  zip_code.city = \"Post\""
    },
    {
        "input": "Among the male patients who have a normal level of white blood cells, how many of them have an abnormal fibrinogen level?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID where  patient.sex = \"M\" and examination.diagnosis = \"Normal\""
    },
    {
        "input": "List the top 10 players' names whose heights are above 180 in descending order of average heading accuracy.",
        "db_id": "european_football_2",
        "sql": "select player.player_name from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.height > 180  group by Player_Attributes.player_api_id  order by avg(player_attributes.heading_accuracy) desc limit 10"
    },
    {
        "input": "In the race a driver set the lap record for the Austrian Grand Prix Circuit, how long did he spent at the pit stop at that same race?",
        "db_id": "formula_1",
        "sql": "select pitstops.duration from pitStops join races on pitStops.raceId = races.raceId where  races.name = \"Austrian Grand Prix\"   order by pitstops.duration desc limit 1"
    },
    {
        "input": "How many times was the budget in Advertisement for \"Yearly Kickoff\" meeting more than \"October Meeting\"?",
        "db_id": "student_club",
        "sql": "select count(*) from budget join event on budget.link_to_event = event.event_id where  event.event_name = \"Yearly Kickoff\" and budget.amount > \"October Meeting\""
    },
    {
        "input": "Among the patients who has a normal level of anti-centromere and a normal level of anti-SSB, how many of them are male?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Laboratory join Patient on Laboratory.ID = Patient.ID where  patient.sex = \"M\" and laboratory.centromea = \"Normal\" and laboratory.ssb = \"SSB\""
    },
    {
        "input": "For the teams with normal build-up play dribbling class in 2014, List the names of the teams with less than average chance creation passing, in descending order of chance creation passing.",
        "db_id": "european_football_2",
        "sql": "select team.team_long_name from Team_Attributes join Team on Team_Attributes.team_api_id = Team.team_api_id where  team_attributes.chancecreationpassing < (select avg(Team_Attributes.chanceCreationPassing) from Team_Attributes where  team_attributes.date = 2014  )    order by team_attributes.chancecreationpassing desc"
    },
    {
        "input": "What is the percentage of players that are under 180 cm who have an overall strength of more than 70?",
        "db_id": "european_football_2",
        "sql": "select count(*) from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.height < 180 and player_attributes.strength > 70"
    },
    {
        "input": "Which foot is preferred by Abdou Diallo?",
        "db_id": "european_football_2",
        "sql": "select player_attributes.preferred_foot from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.player_name = \"Abdou Diallo\""
    },
    {
        "input": "What is the complete address of the school with the lowest excellence rate? Indicate the Street, City, Zip and State.",
        "db_id": "california_schools",
        "sql": "select schools.streetabr , schools.city , schools.zip , schools.state from satscores join schools on satscores.cds = schools.CDSCode   order by satscores.enroll12 asc limit 1"
    },
    {
        "input": "Among the patients who have a normal platelet level, how many of them have other symptoms observed?",
        "db_id": "thrombosis_prediction",
        "sql": "select count( distinct examination.symptoms) from Examination where  examination.diagnosis = \"Normal\""
    },
    {
        "input": "What is the average fastest lap time in seconds for Lewis Hamilton in all the Formula_1 races?",
        "db_id": "formula_1",
        "sql": "select avg(laptimes.milliseconds) from lapTimes join drivers on lapTimes.driverId = drivers.driverId where  drivers.forename = \"Lewis\" and drivers.surname = \"Formula_1\""
    },
    {
        "input": "What is the difference of the average ball control score between Abdou Diallo and Aaron Appindangoye\n?",
        "db_id": "european_football_2",
        "sql": "select avg(player_attributes.ball_control) from Player_Attributes where  player_attributes.player_api_id in (select Player.player_api_id from Player where  player.player_name = \"Abdou Diallo\"   intersect select Player.player_api_id from Player where  player.player_name = \"Aaron Appindangoye\"   )"
    },
    {
        "input": "List out the account numbers of female clients who are oldest and has lowest average salary, calculate the gap between this lowest average salary with the highest average salary?",
        "db_id": "financial",
        "sql": ""
    },
    {
        "input": "Write the full name of the member who spent money for water, veggie tray and supplies and include the cost of it.",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "Paul di Resta was in the No. 853 race, what percent faster did he finish in the 853rd race than the next race for the fastest lap speed?",
        "db_id": "formula_1",
        "sql": "select results.fastestlapspeed from results join drivers on results.driverId = drivers.driverId where  drivers.forename = \"Paul\"   order by results.fastestlapspeed desc limit 1"
    },
    {
        "input": "The oldest SJS patient's medical laboratory work was completed on what date, and what age was the patient when they initially arrived at the hospital?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "How many unknown power cards contain info about the triggered ability",
        "db_id": "card_games",
        "sql": "select count( distinct cards.power) from cards where  cards.power = \"null\""
    },
    {
        "input": "List the element and bond type included in the molecule with molecule ID of TR002.",
        "db_id": "toxicology",
        "sql": "select atom.element , bond.bond_type from atom join molecule on atom.molecule_id = molecule.molecule_id join bond on molecule.molecule_id = bond.molecule_id where  molecule.molecule_id = \"TR002\""
    },
    {
        "input": "List the eyes, hair and skin colour of all female superheroes published by Dark Horse Comics.",
        "db_id": "superhero",
        "sql": "select superhero.eye_colour_id , superhero.hair_colour_id , superhero.skin_colour_id from superhero join publisher on superhero.publisher_id = publisher.id join gender on superhero.gender_id = gender.id where  gender.gender = \"Female\" and publisher.publisher_name = \"Dark Horse Comics\""
    },
    {
        "input": "How much faster in percentage is the champion than the driver who finished the race last in the 2008 Australian Grand Prix?",
        "db_id": "formula_1",
        "sql": "select avg(results.fastestlapspeed) from driverStandings join drivers on driverStandings.driverId = drivers.driverId join results on drivers.driverId = results.driverId where  driverstandings.wins > (select min(driverStandings.wins) from driverStandings join races on driverStandings.raceId = races.raceId where  races.year = 2008 and races.name = \"Australian Grand Prix\"  )"
    },
    {
        "input": "What is the badge name that user 'SilentGhost' obtained?",
        "db_id": "codebase_community",
        "sql": "select badges.name from badges join users on badges.UserId = users.Id where  users.displayname = \"SilentGhost\""
    },
    {
        "input": "For the team \"Hannover 96\", what was its defence aggression class on 2015/9/10?",
        "db_id": "european_football_2",
        "sql": "select team_attributes.defenceaggressionclass from Team_Attributes join Team on Team_Attributes.team_api_id = Team.team_api_id where  team.team_long_name = \"Hannover 96\" and team_attributes.date = \"2015/9/10\""
    },
    {
        "input": "How many bonds which involved atom 12 does molecule TR009 have?",
        "db_id": "toxicology",
        "sql": "select count(*) from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  atom.molecule_id = \"TR009\""
    },
    {
        "input": "What is the comment's rating score of the post which was created on 7/19/2010 7:19:56 PM",
        "db_id": "codebase_community",
        "sql": "select comments.score from comments where  comments.creationdate = \"2010-07-19\""
    },
    {
        "input": "Please list the ID of the patient whose RF is normal and who is older than 60.",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.id from Examination join Patient on Examination.ID = Patient.ID where  examination.diagnosis = \"Normal\" and patient.birthday > 60"
    },
    {
        "input": "What is the description about the ruling of card \"Condemn\"?",
        "db_id": "card_games",
        "sql": "select rulings.text from rulings join cards on rulings.uuid = cards.uuid where  cards.name = \"Condemn\""
    },
    {
        "input": "What sex is the patient who in a medical examination was diagnosed with PSS and in a laboratory examination had a blood level of C-reactive protein de 2+, createnine 1 and LDH 123?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "Among the patients whose creatinine level is abnormal, how many of them aren't 70 yet?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Laboratory join Patient on Laboratory.ID = Patient.ID where  laboratory.sc170 >= 70"
    },
    {
        "input": "List all the elements with double bond, consisted in molecule TR024.",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.molecule_id = \"TR024\" and bond.bond_type = \"double\""
    },
    {
        "input": "List the names of schools with more than 30 difference in enrollements between K-12 and ages 5-17? Please also give the full street adress of the schools.",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "How many users are awarded with more than 5 badges?",
        "db_id": "codebase_community",
        "sql": "select count(*) from badges  group by badges.Id having  count(*) > 5"
    },
    {
        "input": "Calculate the average height for each superhero.",
        "db_id": "superhero",
        "sql": "select avg(superhero.height_cm) , superhero.superhero_name from superhero  group by superhero.superhero_name"
    },
    {
        "input": "What is the element with the atom ID of TR004_7 in molecule that is not carcinogenic?",
        "db_id": "toxicology",
        "sql": "select atom.element from atom join molecule on atom.molecule_id = molecule.molecule_id where  atom.atom_id = \"TR004_7\" and molecule.molecule_id != \"carcinogenic\""
    },
    {
        "input": "Name the elements that comprise the atoms of bond TR001_2_4.",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_id = \"TR001_2_4\""
    },
    {
        "input": "What is the average height of a non-human superhero in Dark Horse Comics?",
        "db_id": "superhero",
        "sql": "select avg(superhero.height_cm) from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name != \"Dark Horse Comics\""
    },
    {
        "input": "What percentage of carcinogenic-type molecules does not contain fluorine?",
        "db_id": "toxicology",
        "sql": "select count(*) from bond join molecule on bond.molecule_id = molecule.molecule_id where  bond.bond_type != \"carcinogenic\""
    },
    {
        "input": "What is the name of the social event that was attended by the vice president of the Student_Club located at 900 E. Washington St.?",
        "db_id": "student_club",
        "sql": "select event.event_name from attendance join member on attendance.link_to_member = member.member_id join event on attendance.link_to_event = event.event_id where  event.location = \"900 E. Washington St.\" and member.position = \"Vice President\""
    },
    {
        "input": "Which element is the least numerous in non-carcinogenic molecules?",
        "db_id": "toxicology",
        "sql": "select atom.element from atom where  atom.molecule_id = \"non-carcinogenic\"  group by atom.element  order by count(*) asc limit 1"
    },
    {
        "input": "Which country is the league Italy Serie A from?",
        "db_id": "european_football_2",
        "sql": "select league.country_id from League join Country on League.country_id = Country.id where  country.name = \"Italy\" and league.name = \"Serie A\""
    },
    {
        "input": "Provide the hero name and race of Charles Chandler.",
        "db_id": "superhero",
        "sql": "select superhero.superhero_name , race.race from superhero join race on superhero.race_id = race.id where  superhero.full_name = \"Charles Chandler\""
    },
    {
        "input": "Among the superheroes with the super power of \"Super Strength\", how many of them have a height of over 200cm?",
        "db_id": "superhero",
        "sql": "select count(*) from hero_power join superpower on hero_power.power_id = superpower.id join superhero on hero_power.hero_id = superhero.id where  superpower.power_name = \"Super Strength\""
    },
    {
        "input": "What is the percentage of cards whose language is French among the Story Spotlight cards?",
        "db_id": "card_games",
        "sql": "select count(*) from foreign_data join cards on foreign_data.uuid = cards.uuid where  foreign_data.language = \"French\""
    },
    {
        "input": "What was the chance creation crossing class for \"Hull City\" on 2010/2/22?",
        "db_id": "european_football_2",
        "sql": "select team_attributes.chancecreationcrossingclass from Team_Attributes where  team_attributes.date = \"2010/2/22\""
    },
    {
        "input": "Please list top three elements of the toxicology of the molecule TR000 in alphabetical order.",
        "db_id": "toxicology",
        "sql": "select atom.element from atom where  atom.molecule_id = \"TR000\"   order by atom.element desc limit 3"
    },
    {
        "input": "Which post has the highest score? Please give its id and title's name.",
        "db_id": "codebase_community",
        "sql": "select posts.id , posts.title from posts   order by posts.score desc limit 1"
    },
    {
        "input": "Provide the hero name and race of Charles Chandler.",
        "db_id": "superhero",
        "sql": "select superhero.superhero_name , race.race from superhero join race on superhero.race_id = race.id where  superhero.full_name = \"Charles Chandler\""
    },
    {
        "input": "Calculate the percentage of molecules containing carcinogenic compounds that element is hydrogen.",
        "db_id": "toxicology",
        "sql": "select count(*) from atom join molecule on atom.molecule_id = molecule.molecule_id where  atom.element = \"hydrogen\" and atom.element > 0"
    },
    {
        "input": "Indicate the cost of posters for 'September Speaker' event.",
        "db_id": "student_club",
        "sql": "select expense.cost from expense join budget on expense.link_to_budget = budget.budget_id join event on budget.link_to_event = event.event_id where  event.event_name = \"September Speaker\""
    },
    {
        "input": "Among the patients have blood clots in veins, how many of them have a normal level of complement 4?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID join Laboratory on Patient.ID = Laboratory.ID where  examination.thrombosis = \"Normal\" and laboratory.c4 = 4"
    },
    {
        "input": "Which of the three segments—SME, LAM and KAM—has the biggest and lowest percentage increases in consumption paid in EUR between 2012 and 2013?",
        "db_id": "debit_card_specializing",
        "sql": "select customers.segment , customers.customerid , yearmonth.consumption from yearmonth join customers on yearmonth.CustomerID = customers.CustomerID where  customers.currency between 2012 and 2013"
    },
    {
        "input": "In which years did Lewis Hamilton participate in a Formula_1 race?",
        "db_id": "formula_1",
        "sql": "select races.year from driverStandings join drivers on driverStandings.driverId = drivers.driverId join races on driverStandings.raceId = races.raceId where  drivers.forename = \"Lewis\" and drivers.surname = \"Formula_1\""
    },
    {
        "input": "For loans contracts which are still running where client are in debt, list the district of the and the state the percentage unemployment rate increment from year 1995 to 1996.",
        "db_id": "financial",
        "sql": "select district.a13 , avg(loan.duration) from loan join account on loan.account_id = account.account_id join district on account.district_id = district.district_id where  loan.duration >= 1995  group by district.a13"
    },
    {
        "input": "For the client whose loan was approved first in 1993/7/5, what is the increase rate of his/her account balance from 1993/3/22 to 1998/12/27?",
        "db_id": "financial",
        "sql": ""
    },
    {
        "input": "Which driver ranked the first in the Canadian Grand Prix in 2007? Please give his reference name.",
        "db_id": "formula_1",
        "sql": "select drivers.driverref from results join drivers on results.driverId = drivers.driverId join races on results.raceId = races.raceId where  races.year = 2007   order by results.rank desc limit 1"
    },
    {
        "input": "List all the elements of the toxicology of the molecule \"TR004\".",
        "db_id": "toxicology",
        "sql": "select atom.element from atom join molecule on atom.molecule_id = molecule.molecule_id where  molecule.molecule_id = \"TR004\""
    },
    {
        "input": "List the football team that has a build up play speed of 31, build up plan dribbling of 53, and build up play passing of 32. Only indicate the short name of the team.",
        "db_id": "european_football_2",
        "sql": ""
    },
    {
        "input": "From 2000 to 2005, what percentage of drivers who were born before 1985 and the lap numbers were over 50?",
        "db_id": "formula_1",
        "sql": "select drivers.number from drivers where  drivers.dob < 1985 and drivers.number > 50"
    },
    {
        "input": "What is the publisher for Hawkman, Karate Kid and Speedy?",
        "db_id": "superhero",
        "sql": ""
    },
    {
        "input": "What is the average height of a non-human superhero in Dark Horse Comics?",
        "db_id": "superhero",
        "sql": "select avg(superhero.height_cm) from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name != \"Dark Horse Comics\""
    },
    {
        "input": "List all the elements of atoms that can not bond with any other atoms.",
        "db_id": "toxicology",
        "sql": "select atom.element from atom where  atom.atom_id not in (select connected.atom_id2 from connected  )"
    },
    {
        "input": "Which set is not available outside of the United States and has foil cards with Japanese writing on them? Please include the set ID in your response.",
        "db_id": "card_games",
        "sql": "select sets.id from sets where  sets.isonlineonly not in (select cards.isOnlineOnly from foreign_data join cards on foreign_data.uuid = cards.uuid join sets on foreign_data.type = sets.type where  foreign_data.language = \"Japanese\"   )"
    },
    {
        "input": "Consider the average difference between K-12 enrollment and 15-17 enrollment of schools that are locally funded, list the names and DOC type of schools which has a difference above this average.",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "In terms of number of points acquired, how many victories did the driver who ranked 91st acquired?",
        "db_id": "formula_1",
        "sql": "select driverstandings.wins from driverStandings where  driverstandings.position = 91"
    },
    {
        "input": "At present, calculate for the player's age who have a sprint speed of no less than 97 between 2013 to 2015.",
        "db_id": "european_football_2",
        "sql": "select * from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player_attributes.sprint_speed between 2013 and 2015"
    },
    {
        "input": "Mention the category of events which were held at MU 215.",
        "db_id": "student_club",
        "sql": "select budget.category from budget join event on budget.link_to_event = event.event_id where  event.location = \"MU 215\""
    },
    {
        "input": "What is the publisher for Hawkman, Karate Kid and Speedy?",
        "db_id": "superhero",
        "sql": ""
    },
    {
        "input": "Calculate the total average cost that Elijah Allen spent in the events on September and October.",
        "db_id": "student_club",
        "sql": "select sum(expense.cost) from expense join member on expense.link_to_member = member.member_id join budget on expense.link_to_budget = budget.budget_id join event on budget.link_to_event = event.event_id where  member.first_name = \"Elijah\" and member.last_name = \"Allen\" and event.event_date = \"September\" and event.event_date = \"October\""
    },
    {
        "input": "What percentage is Landon Donovan's overall rating higher than Jordan Bowery on 2013/7/12?",
        "db_id": "european_football_2",
        "sql": "select player_attributes.overall_rating from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.player_name > \"Landon Donovan\" and player_attributes.date = \"2013/7/12\""
    },
    {
        "input": "In terms of number of points acquired, how many victories did the driver who ranked 91st acquired?",
        "db_id": "formula_1",
        "sql": "select driverstandings.wins from driverStandings where  driverstandings.position = 91"
    },
    {
        "input": "List the name of leagues in which the average goals by the home team is higher than the away team in the 2009/2010 season.",
        "db_id": "european_football_2",
        "sql": "select league.name from League join Match on League.id = Match.id  group by league.id having  avg(match.home_team_goal) > (select match.season from Match  )"
    },
    {
        "input": "What is the most common illness that doctors identified among the patients whose lab work was done between 1/1/1985, and 12/31/1995?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.diagnosis from Laboratory join Patient on Laboratory.ID = Patient.ID where  laboratory.date > \"1/1/1985\" and laboratory.date < \"12/31/1995\"  group by patient.diagnosis  order by count(*) desc limit 1"
    },
    {
        "input": "What was the fastest lap speed among all drivers in the 2009 Spanish Grand Prix?",
        "db_id": "formula_1",
        "sql": "select max(results.fastestlapspeed) from results join races on results.raceId = races.raceId where  races.year = 2009 and races.name = \"Spanish Grand Prix\""
    },
    {
        "input": "For loans contracts which are still running where client are in debt, list the district of the and the state the percentage unemployment rate increment from year 1995 to 1996.",
        "db_id": "financial",
        "sql": "select district.a13 , avg(loan.duration) from loan join account on loan.account_id = account.account_id join district on account.district_id = district.district_id where  loan.duration >= 1995  group by district.a13"
    },
    {
        "input": "What is the percentage of the cards with a converted mana cost of 7 in the set Coldsnap?",
        "db_id": "card_games",
        "sql": "select count(*) from cards join sets on cards.id = sets.id where  cards.convertedmanacost = 7 and sets.name = \"Coldsnap\""
    },
    {
        "input": "State the chance creation passing class for \"PEC Zwolle\" on 2013/9/20.",
        "db_id": "european_football_2",
        "sql": "select team_attributes.chancecreationpassingclass from Team_Attributes join Team on Team_Attributes.team_api_id = Team.team_api_id where  team.team_long_name = \"PEC Zwolle\" and team_attributes.date = \"2013/9/20\""
    },
    {
        "input": "What is reference name of Robert Kubica?",
        "db_id": "formula_1",
        "sql": "select drivers.driverref from drivers where  drivers.surname = \"Robert\"   intersect select drivers.driverref from drivers where  drivers.surname = \"Kubica\""
    },
    {
        "input": "What is the eligible free rate of the 10th and 11th schools with the highest enrolment for students in grades 1 through 12?",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "What is the owner user id of the most valuable post?",
        "db_id": "codebase_community",
        "sql": "select posts.owneruserid from posts   order by posts.score desc limit 1"
    },
    {
        "input": "Please list top three elements of the toxicology of the molecule TR000 in alphabetical order.",
        "db_id": "toxicology",
        "sql": "select atom.element from atom where  atom.molecule_id = \"TR000\"   order by atom.element desc limit 3"
    },
    {
        "input": "What is the eligible free rate of the 10th and 11th schools with the highest enrolment for students in grades 1 through 12?",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "Among the users who obtained the \"Organizer\" badges, calculate the percentage of users who are teenagers.",
        "db_id": "codebase_community",
        "sql": "select users.age , count(*) from badges join users on badges.UserId = users.Id where  badges.name = \"Organizer\"  group by users.age"
    },
    {
        "input": "In superheroes with missing weight data, calculate the difference between the number of superheroes with blue eyes and no eye color.",
        "db_id": "superhero",
        "sql": "select count(*) from superhero where  superhero.weight_kg = \"Blue\" and superhero.eye_colour_id != \"No\""
    },
    {
        "input": "Calculate the average height for each superhero.",
        "db_id": "superhero",
        "sql": "select avg(superhero.height_cm) , superhero.superhero_name from superhero  group by superhero.superhero_name"
    },
    {
        "input": "For all patients who are older than 55 years old, what is the percentage of female who has abnormal prothrombin time (PT)?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.sex , count(*) from Patient where  patient.sex > 55  group by patient.sex"
    },
    {
        "input": "List the eyes, hair and skin colour of all female superheroes published by Dark Horse Comics.",
        "db_id": "superhero",
        "sql": "select superhero.eye_colour_id , superhero.hair_colour_id , superhero.skin_colour_id from superhero join publisher on superhero.publisher_id = publisher.id join gender on superhero.gender_id = gender.id where  gender.gender = \"Female\" and publisher.publisher_name = \"Dark Horse Comics\""
    },
    {
        "input": "What is the name of the social event that was attended by the vice president of the Student_Club located at 900 E. Washington St.?",
        "db_id": "student_club",
        "sql": "select event.event_name from attendance join member on attendance.link_to_member = member.member_id join event on attendance.link_to_event = event.event_id where  event.location = \"900 E. Washington St.\" and member.position = \"Vice President\""
    },
    {
        "input": "Among posts by Harvey Motulsky and Noah Snyder, which one has higher popularity?",
        "db_id": "codebase_community",
        "sql": ""
    },
    {
        "input": "Among posts by Harvey Motulsky and Noah Snyder, which one has higher popularity?",
        "db_id": "codebase_community",
        "sql": ""
    },
    {
        "input": "What is the description about the ruling of card \"Condemn\"?",
        "db_id": "card_games",
        "sql": "select rulings.text from rulings join cards on rulings.uuid = cards.uuid where  cards.name = \"Condemn\""
    },
    {
        "input": "List the last name of the members of the club that attended the women's soccer event.",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "Among all superheroes in Marvel Comics, identify the percentage of 'good' superheroes.",
        "db_id": "superhero",
        "sql": "select superhero.superhero_name , count(*) from superhero join alignment on superhero.alignment_id = alignment.id where  alignment.alignment = \"Good\"  group by superhero.superhero_name"
    },
    {
        "input": "Which driver has the fastest lap time? Please give their forenames and surnames.",
        "db_id": "formula_1",
        "sql": "select drivers.forename , drivers.surname from results join drivers on results.driverId = drivers.driverId   order by results.fastestlaptime desc limit 1"
    },
    {
        "input": "Are there more in-patient or outpatient who were male? What is the deviation in percentage?",
        "db_id": "thrombosis_prediction",
        "sql": "select avg(patient.sex) from Patient where  patient.sex = \"M\""
    },
    {
        "input": "Which user added a bounty amount of 50 to the post title mentioning variance?",
        "db_id": "codebase_community",
        "sql": "select posthistory.userdisplayname from postHistory join users on postHistory.UserId = users.Id join votes on users.Id = votes.UserId where  posthistory.comment = \"Variance\" and votes.bountyamount = 50"
    },
    {
        "input": "What is the lap record set by Lewis Hamilton in a Formula_1 race?",
        "db_id": "formula_1",
        "sql": "select results.laps from results join drivers on results.driverId = drivers.driverId where  drivers.forename = \"Lewis\" and drivers.surname = \"Formula_1\""
    },
    {
        "input": "For all cards illustrated by Jim Pavelec. and describe the text of the ruling of these cards. Do these cards have missing or degraded properties and values.",
        "db_id": "card_games",
        "sql": "select rulings.text from rulings join cards on rulings.uuid = cards.uuid where  cards.artist = \"Jim Pavelec\" or rulings.text = \"No\""
    },
    {
        "input": "What is the mana cost of cards with a normal layout, a 2003 frame version, with a black border color, and available in paper and mtgo?",
        "db_id": "card_games",
        "sql": "select cards.manacost from cards where  cards.layout = \"normal\" and cards.frameversion = \"2003\" and cards.bordercolor = \"black\" and cards.availability = \"mtgo\""
    },
    {
        "input": "In comments with score between 1 to 5, list down the display names of the users with 0 down votes.",
        "db_id": "codebase_community",
        "sql": "select users.displayname from comments join users on comments.UserId = users.Id where  comments.score between 1 and 5"
    },
    {
        "input": "Which bond type accounted for the majority of the bonds found in molecule TR010 and state whether or not this molecule is carcinogenic?",
        "db_id": "toxicology",
        "sql": "select bond.bond_type from bond join molecule on bond.molecule_id = molecule.molecule_id where  molecule.molecule_id = \"TR010\"  group by bond.bond_type  order by count(*) desc limit 1"
    },
    {
        "input": "Among all the lap records set on various circuits, what is the time for the fastest one?",
        "db_id": "formula_1",
        "sql": "select results.time from lapTimes join drivers on lapTimes.driverId = drivers.driverId join results on drivers.driverId = results.driverId   order by laptimes.time desc limit 1"
    },
    {
        "input": "What is the percentage of incredibly powerful cards in the set Coldsnap?",
        "db_id": "card_games",
        "sql": "select avg(cards.power) from cards join sets on cards.id = sets.id where  sets.name = \"Coldsnap\""
    },
    {
        "input": "Among the patients who has a normal level of anti-centromere and a normal level of anti-SSB, how many of them are male?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Laboratory join Patient on Laboratory.ID = Patient.ID where  patient.sex = \"M\" and laboratory.centromea = \"Normal\" and laboratory.ssb = \"SSB\""
    },
    {
        "input": "What is the complete address of the school with the lowest excellence rate? Indicate the Street, City, Zip and State.",
        "db_id": "california_schools",
        "sql": "select schools.streetabr , schools.city , schools.zip , schools.state from satscores join schools on satscores.cds = schools.CDSCode   order by satscores.enroll12 asc limit 1"
    },
    {
        "input": "Which superhero has the most durability published by Dark Horse Comics?",
        "db_id": "superhero",
        "sql": "select superhero.superhero_name from hero_power join superpower on hero_power.power_id = superpower.id join superhero on hero_power.hero_id = superhero.id join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"Dark Horse Comics\"   order by superpower.power_name desc limit 1"
    },
    {
        "input": "List the top 10 players' names whose heights are above 180 in descending order of average heading accuracy.",
        "db_id": "european_football_2",
        "sql": "select player.player_name from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.height > 180  group by Player_Attributes.player_api_id  order by avg(player_attributes.heading_accuracy) desc limit 10"
    },
    {
        "input": "Find the name and date of events with expenses for pizza that were more than fifty dollars but less than a hundred dollars.",
        "db_id": "student_club",
        "sql": "select event.event_name , event.event_date from expense join budget on expense.link_to_budget = budget.budget_id join event on budget.link_to_event = event.event_id where  expense.expense_description = \"Pizza\" and expense.cost > 50 and expense.expense_date < 100"
    },
    {
        "input": "List the football team that has a build up play speed of 31, build up plan dribbling of 53, and build up play passing of 32. Only indicate the short name of the team.",
        "db_id": "european_football_2",
        "sql": ""
    },
    {
        "input": "For the patient who was diagnosed SLE on 1997/1/27, what was his/her original diagnose when he/she came to the hospital for the first time?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.diagnosis , patient.diagnosis from Patient where  patient.diagnosis = \"SLE\" and patient.admission = \"1997/1/27\""
    },
    {
        "input": "On what year did the youngest driver had his first qualifying race? Also state the name, date and time of the race.",
        "db_id": "formula_1",
        "sql": "select races.year , races.name , races.time from driverStandings join drivers on driverStandings.driverId = drivers.driverId join races on driverStandings.raceId = races.raceId   order by drivers.dob asc limit 1"
    },
    {
        "input": "Please list the ID of the patient whose RF is normal and who is older than 60.",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.id from Examination join Patient on Examination.ID = Patient.ID where  examination.diagnosis = \"Normal\" and patient.birthday > 60"
    },
    {
        "input": "For the players who had a 77 points overall rating on 2016/6/23, who was the oldest? Give the name of the player.",
        "db_id": "european_football_2",
        "sql": "select player.player_name from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player_attributes.overall_rating = 77   order by player.birthday desc limit 1"
    },
    {
        "input": "Calculate the average home team goal in the 2010/2011 season in the country of Poland.",
        "db_id": "european_football_2",
        "sql": "select avg(match.home_team_goal) from Country join Match on Country.id = Match.id where  country.name = \"Poland\" and match.season = \"2010/2011\""
    },
    {
        "input": "What is the badge name that user 'SilentGhost' obtained?",
        "db_id": "codebase_community",
        "sql": "select badges.name from badges join users on badges.UserId = users.Id where  users.displayname = \"SilentGhost\""
    },
    {
        "input": "What is the average fastest lap time in seconds for Lewis Hamilton in all the Formula_1 races?",
        "db_id": "formula_1",
        "sql": "select avg(laptimes.milliseconds) from lapTimes join drivers on lapTimes.driverId = drivers.driverId where  drivers.forename = \"Lewis\" and drivers.surname = \"Formula_1\""
    },
    {
        "input": "Who is the top spending customer and how much is the average price per single item purchased by this customer? What currency was being used?",
        "db_id": "debit_card_specializing",
        "sql": ""
    },
    {
        "input": "List all carcinogenic molecules and their elements.",
        "db_id": "toxicology",
        "sql": "select molecule.molecule_id , atom.element from atom join molecule on atom.molecule_id = molecule.molecule_id where  atom.element = \"carcinogen\""
    },
    {
        "input": "From 2000 to 2005, what percentage of drivers who were born before 1985 and the lap numbers were over 50?",
        "db_id": "formula_1",
        "sql": "select drivers.number from drivers where  drivers.dob < 1985 and drivers.number > 50"
    },
    {
        "input": "What proportion of single bonds are carcinogenic? Please provide your answer as a percentage with five decimal places.",
        "db_id": "toxicology",
        "sql": "select bond.bond_type from bond where  bond.bond_type = \"carcinogenic\"   order by bond.bond_type desc limit 5"
    },
    {
        "input": "For all the female patient age 50 and above, who has abnormal red blood cell count. State if they were admitted to hospital.",
        "db_id": "thrombosis_prediction",
        "sql": "select * from Patient where  patient.sex = \"F\" and patient.admission >= 50 and patient.sex = \"F\""
    },
    {
        "input": "For the branch which located in the south Bohemia with biggest number of inhabitants, what is the percentage of the male clients?",
        "db_id": "financial",
        "sql": "select client.gender from client join district on client.district_id = district.district_id where  district.a3 = \"south Bohemia\"  group by client.gender  order by count(*) desc limit 1"
    },
    {
        "input": "Which superhero has the same eyes, hair and skin colour? Indicate the publisher of the superhero.",
        "db_id": "superhero",
        "sql": "select publisher.publisher_name from superhero join publisher on superhero.publisher_id = publisher.id"
    },
    {
        "input": "How many matches in the 2015/2016 season were held in Scotland Premier League\n?",
        "db_id": "european_football_2",
        "sql": "select count(*) from League join Match on League.id = Match.id where  match.season = \"2015/2016\" and league.name = \"Scotland Premier League\""
    },
    {
        "input": "List all the football player with the highest potential score.",
        "db_id": "european_football_2",
        "sql": "select distinct player.player_name from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id   order by player_attributes.potential desc limit 1"
    },
    {
        "input": "Which set is not available outside of the United States and has foil cards with Japanese writing on them? Please include the set ID in your response.",
        "db_id": "card_games",
        "sql": "select sets.id from sets where  sets.isonlineonly not in (select cards.isOnlineOnly from foreign_data join cards on foreign_data.uuid = cards.uuid join sets on foreign_data.type = sets.type where  foreign_data.language = \"Japanese\"   )"
    },
    {
        "input": "For the branch which located in the south Bohemia with biggest number of inhabitants, what is the percentage of the male clients?",
        "db_id": "financial",
        "sql": "select client.gender from client join district on client.district_id = district.district_id where  district.a3 = \"south Bohemia\"  group by client.gender  order by count(*) desc limit 1"
    },
    {
        "input": "Who is the top spending customer and how much is the average price per single item purchased by this customer? What currency was being used?",
        "db_id": "debit_card_specializing",
        "sql": ""
    },
    {
        "input": "What is reference name of Robert Kubica?",
        "db_id": "formula_1",
        "sql": "select drivers.driverref from drivers where  drivers.surname = \"Robert\"   intersect select drivers.driverref from drivers where  drivers.surname = \"Kubica\""
    },
    {
        "input": "Give the full name and contact number of members who had to spend more than average on each expense.",
        "db_id": "student_club",
        "sql": "select member.first_name , member.last_name , member.phone from expense join member on expense.link_to_member = member.member_id where  expense.cost > (select avg(expense.cost) from expense  )"
    },
    {
        "input": "What was the final score for the match on September 24, 2008, in the Belgian Jupiler League between the home team and the away team?",
        "db_id": "european_football_2",
        "sql": "select match.home_team_goal from Match where  match.date = \"2008-09-24\" and match.away_team_goal = \"home\""
    },
    {
        "input": "What is the total number of non-chartered schools in the county of Los Angeles with a percent (%) of eligible free meals for grades 1 through 12 that is less than 0.18%?",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "Give the full name and contact number of members who had to spend more than average on each expense.",
        "db_id": "student_club",
        "sql": "select member.first_name , member.last_name , member.phone from expense join member on expense.link_to_member = member.member_id where  expense.cost > (select avg(expense.cost) from expense  )"
    },
    {
        "input": "Which countries have zip codes with post office boxes?",
        "db_id": "student_club",
        "sql": "select zip_code.county from zip_code where  zip_code.city = \"Post\""
    },
    {
        "input": "Among the sets whose expansion type is Commander, which set has the highest total number of cards including promotional and related supplemental products but excluding Alchemy modifications? Indicate the id of the set.",
        "db_id": "card_games",
        "sql": "select sets.id from sets where  sets.type = \"commander\"  group by sets.id  order by sum(sets.totalsetsize) desc limit 1"
    },
    {
        "input": "Indicate the cost of posters for 'September Speaker' event.",
        "db_id": "student_club",
        "sql": "select expense.cost from expense join budget on expense.link_to_budget = budget.budget_id join event on budget.link_to_event = event.event_id where  event.event_name = \"September Speaker\""
    },
    {
        "input": "List down Ajax's superpowers.",
        "db_id": "superhero",
        "sql": "select superpower.power_name from hero_power join superpower on hero_power.power_id = superpower.id join superhero on hero_power.hero_id = superhero.id where  superhero.superhero_name = \"Ajax\""
    },
    {
        "input": "What kind of currency did the customer paid at 16:25:00 in 2012/8/24?",
        "db_id": "debit_card_specializing",
        "sql": ""
    },
    {
        "input": "Which customers, paying in CZK, consumed the most gas in 2011?",
        "db_id": "debit_card_specializing",
        "sql": "select customers.segment from yearmonth join customers on yearmonth.CustomerID = customers.CustomerID where  customers.currency = \"CZK\"   order by yearmonth.consumption desc limit 1"
    },
    {
        "input": "List the top 10 players' names whose heights are above 180 in descending order of average heading accuracy.",
        "db_id": "european_football_2",
        "sql": "select player.player_name from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.height > 180  group by Player_Attributes.player_api_id  order by avg(player_attributes.heading_accuracy) desc limit 10"
    },
    {
        "input": "Which superhero has the same eyes, hair and skin colour? Indicate the publisher of the superhero.",
        "db_id": "superhero",
        "sql": "select publisher.publisher_name from superhero join publisher on superhero.publisher_id = publisher.id"
    },
    {
        "input": "On average how many carcinogenic molecules are single bonded?",
        "db_id": "toxicology",
        "sql": "select count(*) from bond join molecule on bond.molecule_id = molecule.molecule_id where  bond.bond_type = \"Single\"  group by bond.molecule_id"
    },
    {
        "input": "What is the football player Francois Affolter header's finishing rate on 18/09/2014?",
        "db_id": "european_football_2",
        "sql": "select player_attributes.finishing from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.player_name = \"Francois Affolter\" and player_attributes.date = \"18/09/2014\""
    },
    {
        "input": "Among all the posts posted by the most influential user, identify the percentage with a score above 50.",
        "db_id": "codebase_community",
        "sql": "select posthistory.postid , count(*) from postHistory join posts on postHistory.PostId = posts.Id where  posts.score > 50  group by posthistory.postid  order by count(*) desc limit 1"
    },
    {
        "input": "Calculate the percentage of molecules containing carcinogenic compounds that element is hydrogen.",
        "db_id": "toxicology",
        "sql": "select count(*) from atom join molecule on atom.molecule_id = molecule.molecule_id where  atom.element = \"hydrogen\" and atom.element > 0"
    },
    {
        "input": "For all the set of cards that has Brazil Portuguese translation, what is the percentage of them are only available online?",
        "db_id": "card_games",
        "sql": "select cards.availability from set_translations join sets on set_translations.setCode = sets.code join cards on sets.isOnlineOnly = cards.isOnlineOnly where  set_translations.translation = \"Brazil\" and sets.isonlineonly = \"online\""
    },
    {
        "input": "List the elements of all the triple bonds.",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_type like \"3%\""
    },
    {
        "input": "What is the percentage of carbon in double-bond molecules?",
        "db_id": "toxicology",
        "sql": "select molecule.molecule_id , count(*) from bond join molecule on bond.molecule_id = molecule.molecule_id where  bond.bond_type = \"double\"  group by bond.molecule_id"
    },
    {
        "input": "Which of these artists have designed a card in the set Coldsnap, Jeremy Jarvis, Aaron Miller or Chippy?",
        "db_id": "card_games",
        "sql": "select cards.artist from cards join sets on cards.id = sets.id where  sets.name = \"Coldsnap\" or sets.name = \"Aaron Miller\" or sets.name = \"Chippy\""
    },
    {
        "input": "What is the percentage of superheroes who act in their own self-interest or make decisions based on their own moral code? Indicate how many of the said superheroes were published by Marvel Comics.",
        "db_id": "superhero",
        "sql": "select count(*) from hero_attribute join superhero on hero_attribute.hero_id = superhero.id join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"Marvel Comics\" or hero_attribute.attribute_value = \"self-interest\""
    },
    {
        "input": "What was the growth rate of the total amount of loans across all accounts for a male client between 1996 and 1997?",
        "db_id": "financial",
        "sql": "select sum(loan.amount) from loan join account on loan.account_id = account.account_id join district on account.district_id = district.district_id join client on district.district_id = client.district_id where  client.gender >= \"M\" and loan.date between 1996 and 1997"
    },
    {
        "input": "Among all superheroes created by George Lucas, identify the percentage of female superheroes.",
        "db_id": "superhero",
        "sql": "select superhero.superhero_name , count(*) from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"George Lucas\"  group by superhero.gender_id"
    },
    {
        "input": "Please list the account types that are not eligible for loans, and the average income of residents in the district where the account is located exceeds $8000 but is no more than $9000.",
        "db_id": "financial",
        "sql": "select disp.type from disp join account on disp.account_id = account.account_id join loan on account.account_id = loan.account_id  group by disp.type having  avg(loan.amount) > 8000  intersect select disp.type from disp join account on disp.account_id = account.account_id join loan on account.account_id = loan.account_id  group by disp.type having  avg(loan.amount) < 9000"
    },
    {
        "input": "How many patients with a normal Rhuematoid Factor has a positive measure of degree of coagulation?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID where  examination.diagnosis = \"Normal\" and patient.admission >= 1"
    },
    {
        "input": "Which element is the least numerous in non-carcinogenic molecules?",
        "db_id": "toxicology",
        "sql": "select atom.element from atom where  atom.molecule_id = \"non-carcinogenic\"  group by atom.element  order by count(*) asc limit 1"
    },
    {
        "input": "What is the average fastest lap time of the top 10 drivers in the 2006 United States Grand Prix?",
        "db_id": "formula_1",
        "sql": "select avg(results.fastestlaptime) from lapTimes join races on lapTimes.raceId = races.raceId join results on races.raceId = results.raceId where  races.year = 2006   order by laptimes.time desc limit 10"
    },
    {
        "input": "List the skin colour of the superheroes with 100 attribute value.",
        "db_id": "superhero",
        "sql": "select superhero.skin_colour_id from hero_attribute join superhero on hero_attribute.hero_id = superhero.id where  hero_attribute.attribute_value = 100"
    },
    {
        "input": "What is the total number of non-chartered schools in the county of Los Angeles with a percent (%) of eligible free meals for grades 1 through 12 that is less than 0.18%?",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "List all the elements of the toxicology of the molecule \"TR004\".",
        "db_id": "toxicology",
        "sql": "select atom.element from atom join molecule on atom.molecule_id = molecule.molecule_id where  molecule.molecule_id = \"TR004\""
    },
    {
        "input": "How many percent of female heroes were published by Marvel Comics?",
        "db_id": "superhero",
        "sql": "select count(*) from superhero join publisher on superhero.publisher_id = publisher.id join gender on superhero.gender_id = gender.id where  gender.gender = \"Female\" and publisher.publisher_name = \"Marvel Comics\""
    },
    {
        "input": "What is the percentage of superheroes who act in their own self-interest or make decisions based on their own moral code? Indicate how many of the said superheroes were published by Marvel Comics.",
        "db_id": "superhero",
        "sql": "select count(*) from hero_attribute join superhero on hero_attribute.hero_id = superhero.id join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"Marvel Comics\" or hero_attribute.attribute_value = \"self-interest\""
    },
    {
        "input": "What is the element with the atom ID of TR004_7 in molecule that is not carcinogenic?",
        "db_id": "toxicology",
        "sql": "select atom.element from atom join molecule on atom.molecule_id = molecule.molecule_id where  atom.atom_id = \"TR004_7\" and molecule.molecule_id != \"carcinogenic\""
    },
    {
        "input": "What are the valid e-mail addresses of the administrator of the school located in the San Bernardino county, City of San Bernardino City Unified that opened between 1/1/2009 to 12/31/2010 whose school types are public Intermediate/Middle Schools and Unified Schools?",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "What is the highest eligible free rate for K-12 students in the schools in Alameda County?",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "List the name of leagues in which the average goals by the home team is higher than the away team in the 2009/2010 season.",
        "db_id": "european_football_2",
        "sql": "select league.name from League join Match on League.id = Match.id  group by league.id having  avg(match.home_team_goal) > (select match.season from Match  )"
    },
    {
        "input": "Give the name of the league had the most goals in the 2016 season?",
        "db_id": "european_football_2",
        "sql": "select league.name from League join Match on League.id = Match.id where  match.season = 2016  group by match.league_id  order by count(*) desc limit 1"
    },
    {
        "input": "How many patients who were examined between 1987/7/6 and 1996/1/31 had a GPT level greater than 30 and an ALB level less than 4? List them by their ID.",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "State the chance creation passing class for \"PEC Zwolle\" on 2013/9/20.",
        "db_id": "european_football_2",
        "sql": "select team_attributes.chancecreationpassingclass from Team_Attributes join Team on Team_Attributes.team_api_id = Team.team_api_id where  team.team_long_name = \"PEC Zwolle\" and team_attributes.date = \"2013/9/20\""
    },
    {
        "input": "For all the set of cards that has Brazil Portuguese translation, what is the percentage of them are only available online?",
        "db_id": "card_games",
        "sql": "select cards.availability from set_translations join sets on set_translations.setCode = sets.code join cards on sets.isOnlineOnly = cards.isOnlineOnly where  set_translations.translation = \"Brazil\" and sets.isonlineonly = \"online\""
    },
    {
        "input": "Among the users who obtained the \"Organizer\" badges, calculate the percentage of users who are teenagers.",
        "db_id": "codebase_community",
        "sql": "select users.age , count(*) from badges join users on badges.UserId = users.Id where  badges.name = \"Organizer\"  group by users.age"
    },
    {
        "input": "Calculate the total average cost that Elijah Allen spent in the events on September and October.",
        "db_id": "student_club",
        "sql": "select sum(expense.cost) from expense join member on expense.link_to_member = member.member_id join budget on expense.link_to_budget = budget.budget_id join event on budget.link_to_event = event.event_id where  member.first_name = \"Elijah\" and member.last_name = \"Allen\" and event.event_date = \"September\" and event.event_date = \"October\""
    },
    {
        "input": "What is the owner user id of the most valuable post?",
        "db_id": "codebase_community",
        "sql": "select posts.owneruserid from posts   order by posts.score desc limit 1"
    },
    {
        "input": "Which driver ranked the first in the Canadian Grand Prix in 2007? Please give his reference name.",
        "db_id": "formula_1",
        "sql": "select drivers.driverref from results join drivers on results.driverId = drivers.driverId join races on results.raceId = races.raceId where  races.year = 2007   order by results.rank desc limit 1"
    },
    {
        "input": "What are the elements for bond id TR001_10_11?",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_id = \"TR001_10_11\""
    },
    {
        "input": "Find the name and date of events with expenses for pizza that were more than fifty dollars but less than a hundred dollars.",
        "db_id": "student_club",
        "sql": "select event.event_name , event.event_date from expense join budget on expense.link_to_budget = budget.budget_id join event on budget.link_to_event = event.event_id where  expense.expense_description = \"Pizza\" and expense.cost > 50 and expense.expense_date < 100"
    },
    {
        "input": "List down top 3 German drivers who has the shortest average pit stop duration and were born between 1980-1985.",
        "db_id": "formula_1",
        "sql": "select drivers.surname , drivers.driverid from pitStops join drivers on pitStops.driverId = drivers.driverId where  drivers.nationality = \"German\"  group by drivers.driverid  order by avg(pitstops.duration) asc limit 3"
    },
    {
        "input": "Which foot is preferred by Abdou Diallo?",
        "db_id": "european_football_2",
        "sql": "select player_attributes.preferred_foot from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.player_name = \"Abdou Diallo\""
    },
    {
        "input": "Which driver has the fastest lap time? Please give their forenames and surnames.",
        "db_id": "formula_1",
        "sql": "select drivers.forename , drivers.surname from results join drivers on results.driverId = drivers.driverId   order by results.fastestlaptime desc limit 1"
    },
    {
        "input": "What is the highest eligible free rate for K-12 students in the schools in Alameda County?",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "List the superheroes from Marvel Comics who have the super power of 'Super Strength'.",
        "db_id": "superhero",
        "sql": "select superhero.superhero_name from hero_power join superpower on hero_power.power_id = superpower.id join superhero on hero_power.hero_id = superhero.id join publisher on superhero.publisher_id = publisher.id where  superpower.power_name = \"Super Strength\" and publisher.publisher_name = \"Marvel Comics\""
    },
    {
        "input": "How many drivers managed to finish the race in the 2008 Australian Grand Prix?",
        "db_id": "formula_1",
        "sql": "select count( distinct results.driverid) from results join races on results.raceId = races.raceId where  races.year = 2008 and races.name = \"Australian Grand Prix\""
    },
    {
        "input": "What proportion of single bonds are carcinogenic? Please provide your answer as a percentage with five decimal places.",
        "db_id": "toxicology",
        "sql": "select bond.bond_type from bond where  bond.bond_type = \"carcinogenic\"   order by bond.bond_type desc limit 5"
    },
    {
        "input": "What percentage of male patients who first presented to the hospital in 1981 were diagnosed with BEHCET?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "Which customers, paying in CZK, consumed the most gas in 2011?",
        "db_id": "debit_card_specializing",
        "sql": "select customers.segment from yearmonth join customers on yearmonth.CustomerID = customers.CustomerID where  customers.currency = \"CZK\"   order by yearmonth.consumption desc limit 1"
    },
    {
        "input": "What percentage is Landon Donovan's overall rating higher than Jordan Bowery on 2013/7/12?",
        "db_id": "european_football_2",
        "sql": "select player_attributes.overall_rating from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.player_name > \"Landon Donovan\" and player_attributes.date = \"2013/7/12\""
    },
    {
        "input": "Please list the account types that are not eligible for loans, and the average income of residents in the district where the account is located exceeds $8000 but is no more than $9000.",
        "db_id": "financial",
        "sql": "select disp.type from disp join account on disp.account_id = account.account_id join loan on account.account_id = loan.account_id  group by disp.type having  avg(loan.amount) > 8000  intersect select disp.type from disp join account on disp.account_id = account.account_id join loan on account.account_id = loan.account_id  group by disp.type having  avg(loan.amount) < 9000"
    },
    {
        "input": "How many molecules have a double bond type and among these molecule, how many are labeled as carcinogenic compound?",
        "db_id": "toxicology",
        "sql": "select count(*) , molecule.label from bond join molecule on bond.molecule_id = molecule.molecule_id where  bond.bond_type = \"double\"  group by molecule.label"
    },
    {
        "input": "Among the sets whose expansion type is Commander, which set has the highest total number of cards including promotional and related supplemental products but excluding Alchemy modifications? Indicate the id of the set.",
        "db_id": "card_games",
        "sql": "select sets.id from sets where  sets.type = \"commander\"  group by sets.id  order by sum(sets.totalsetsize) desc limit 1"
    },
    {
        "input": "Which toxic element can be found in the molecule TR151?",
        "db_id": "toxicology",
        "sql": "select atom.element from atom where  atom.molecule_id = \"TR151\""
    },
    {
        "input": "What is the percentage of female patient were born after 1930?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Patient where  patient.sex = \"F\" and patient.birthday > 1930"
    },
    {
        "input": "Calculate the average height for each superhero.",
        "db_id": "superhero",
        "sql": "select avg(superhero.height_cm) , superhero.superhero_name from superhero  group by superhero.superhero_name"
    },
    {
        "input": "How long did it take after patient number 821298 arrived at the hospital for the first time before her evaluation began?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "Paul di Resta was in the No. 853 race, what percent faster did he finish in the 853rd race than the next race for the fastest lap speed?",
        "db_id": "formula_1",
        "sql": "select results.fastestlapspeed from results join drivers on results.driverId = drivers.driverId where  drivers.forename = \"Paul\"   order by results.fastestlapspeed desc limit 1"
    },
    {
        "input": "Among the male patients who have a normal level of white blood cells, how many of them have an abnormal fibrinogen level?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID where  patient.sex = \"M\" and examination.diagnosis = \"Normal\""
    },
    {
        "input": "How many patients with a normal RF don't have thrombosis?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID where  examination.diagnosis = \"Normal\" and examination.thrombosis != \"No\""
    },
    {
        "input": "Which of these artists have designed a card in the set Coldsnap, Jeremy Jarvis, Aaron Miller or Chippy?",
        "db_id": "card_games",
        "sql": "select cards.artist from cards join sets on cards.id = sets.id where  sets.name = \"Coldsnap\" or sets.name = \"Aaron Miller\" or sets.name = \"Chippy\""
    },
    {
        "input": "What is the element with the atom ID of TR004_7 in molecule that is not carcinogenic?",
        "db_id": "toxicology",
        "sql": "select atom.element from atom join molecule on atom.molecule_id = molecule.molecule_id where  atom.atom_id = \"TR004_7\" and molecule.molecule_id != \"carcinogenic\""
    },
    {
        "input": "Under whose administration is the school with the highest number of students scoring 1500 or more on the SAT? Indicate their full names.",
        "db_id": "california_schools",
        "sql": "select schools.admlname1 from satscores join schools on satscores.cds = schools.CDSCode where  satscores.numge1500 >= 1500  group by schools.admlname1  order by count(*) desc limit 1"
    },
    {
        "input": "Indicate the name of the closed event whose cost has exceeded the budget the most.",
        "db_id": "student_club",
        "sql": "select event.event_name from expense join budget on expense.link_to_budget = budget.budget_id join event on budget.link_to_event = event.event_id where  event.status = \"Closed\"  group by event.event_name  order by sum(expense.cost) desc limit 1"
    },
    {
        "input": "Please list the phone numbers of the students from the Student_Club that has attended the event \"Women's Soccer\".",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "In the race a driver set the lap record for the Austrian Grand Prix Circuit, how long did he spent at the pit stop at that same race?",
        "db_id": "formula_1",
        "sql": "select pitstops.duration from pitStops join races on pitStops.raceId = races.raceId where  races.name = \"Austrian Grand Prix\"   order by pitstops.duration desc limit 1"
    },
    {
        "input": "For the teams with normal build-up play dribbling class in 2014, List the names of the teams with less than average chance creation passing, in descending order of chance creation passing.",
        "db_id": "european_football_2",
        "sql": "select team.team_long_name from Team_Attributes join Team on Team_Attributes.team_api_id = Team.team_api_id where  team_attributes.chancecreationpassing < (select avg(Team_Attributes.chanceCreationPassing) from Team_Attributes where  team_attributes.date = 2014  )    order by team_attributes.chancecreationpassing desc"
    },
    {
        "input": "What is the element with the atom ID of TR004_7 in molecule that is not carcinogenic?",
        "db_id": "toxicology",
        "sql": "select atom.element from atom join molecule on atom.molecule_id = molecule.molecule_id where  atom.atom_id = \"TR004_7\" and molecule.molecule_id != \"carcinogenic\""
    },
    {
        "input": "How many patients with a normal Rhuematoid Factor has a positive measure of degree of coagulation?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID where  examination.diagnosis = \"Normal\" and patient.admission >= 1"
    },
    {
        "input": "Identify the gender of the superhero who has the ability of Phoenix Force.",
        "db_id": "superhero",
        "sql": "select gender.gender from hero_power join superpower on hero_power.power_id = superpower.id join superhero on hero_power.hero_id = superhero.id join gender on superhero.gender_id = gender.id where  superpower.power_name = \"Phoenix Force\""
    },
    {
        "input": "Which driver has the fastest lap time? Please give their forenames and surnames.",
        "db_id": "formula_1",
        "sql": "select drivers.forename , drivers.surname from results join drivers on results.driverId = drivers.driverId   order by results.fastestlaptime desc limit 1"
    },
    {
        "input": "Describe the display name of the parent ID for child post with the highest score.",
        "db_id": "codebase_community",
        "sql": "select users.displayname from posts join users on posts.OwnerUserId = users.Id   order by posts.score desc limit 1"
    },
    {
        "input": "What proportion of single bonds are carcinogenic? Please provide your answer as a percentage with five decimal places.",
        "db_id": "toxicology",
        "sql": "select bond.bond_type from bond where  bond.bond_type = \"carcinogenic\"   order by bond.bond_type desc limit 5"
    },
    {
        "input": "For the patient who was born on 1959/2/18, what is the decrease rate for his/her total cholesterol from November to December in 1981?",
        "db_id": "thrombosis_prediction",
        "sql": "select avg(patient.birthday) from Patient where  patient.birthday between 1959 and 1981"
    },
    {
        "input": "What is the percentage of incredibly powerful cards in the set Coldsnap?",
        "db_id": "card_games",
        "sql": "select avg(cards.power) from cards join sets on cards.id = sets.id where  sets.name = \"Coldsnap\""
    },
    {
        "input": "From 2000 to 2005, what percentage of drivers who were born before 1985 and the lap numbers were over 50?",
        "db_id": "formula_1",
        "sql": "select drivers.number from drivers where  drivers.dob < 1985 and drivers.number > 50"
    },
    {
        "input": "Which county reported the most number of school closure in the 1980s with school wonership code belonging to Youth Authority Facilities (CEA)?",
        "db_id": "california_schools",
        "sql": "select schools.county from schools where  schools.soctype = \"Youth Authority Facilities\"  group by schools.county  order by count(*) desc limit 1"
    },
    {
        "input": "Which of these artists have designed a card in the set Coldsnap, Jeremy Jarvis, Aaron Miller or Chippy?",
        "db_id": "card_games",
        "sql": "select cards.artist from cards join sets on cards.id = sets.id where  sets.name = \"Coldsnap\" or sets.name = \"Aaron Miller\" or sets.name = \"Chippy\""
    },
    {
        "input": "Calculate the difference in the percentage of members in New Jersey and Vermont.",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "For the patient who was born on 1959/2/18, what is the decrease rate for his/her total cholesterol from November to December in 1981?",
        "db_id": "thrombosis_prediction",
        "sql": "select avg(patient.birthday) from Patient where  patient.birthday between 1959 and 1981"
    },
    {
        "input": "List the names of closed event as \"game\" that was closed from 3/15/2019 to 3/20/2020.",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "What is the comment's rating score of the post which was created on 7/19/2010 7:19:56 PM",
        "db_id": "codebase_community",
        "sql": "select comments.score from comments where  comments.creationdate = \"2010-07-19\""
    },
    {
        "input": "How many matches in the 2015/2016 season were held in Scotland Premier League\n?",
        "db_id": "european_football_2",
        "sql": "select count(*) from League join Match on League.id = Match.id where  match.season = \"2015/2016\" and league.name = \"Scotland Premier League\""
    },
    {
        "input": "At present, calculate for the player's age who have a sprint speed of no less than 97 between 2013 to 2015.",
        "db_id": "european_football_2",
        "sql": "select * from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player_attributes.sprint_speed between 2013 and 2015"
    },
    {
        "input": "What is the district Id of the account that placed the order with the id 33333?",
        "db_id": "financial",
        "sql": ""
    },
    {
        "input": "Tally the toxicology element of the 4th atom of each molecule that was carcinogenic.",
        "db_id": "toxicology",
        "sql": "select atom.element , count(*) from atom where  atom.element = \"carcinogenic\"  group by atom.element"
    },
    {
        "input": "Are there more male patients with creatinine not within the normal range than female? True or False?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.diagnosis from Examination join Patient on Examination.ID = Patient.ID where  patient.sex = \"M\" and examination.diagnosis != \"Normal\""
    },
    {
        "input": "Identify the gender of the superhero who has the ability of Phoenix Force.",
        "db_id": "superhero",
        "sql": "select gender.gender from hero_power join superpower on hero_power.power_id = superpower.id join superhero on hero_power.hero_id = superhero.id join gender on superhero.gender_id = gender.id where  superpower.power_name = \"Phoenix Force\""
    },
    {
        "input": "Mention the category of events which were held at MU 215.",
        "db_id": "student_club",
        "sql": "select budget.category from budget join event on budget.link_to_event = event.event_id where  event.location = \"MU 215\""
    },
    {
        "input": "Which superhero has the most durability published by Dark Horse Comics?",
        "db_id": "superhero",
        "sql": "select superhero.superhero_name from hero_power join superpower on hero_power.power_id = superpower.id join superhero on hero_power.hero_id = superhero.id join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"Dark Horse Comics\"   order by superpower.power_name desc limit 1"
    },
    {
        "input": "What is the complete address of the school with the lowest excellence rate? Indicate the Street, City, Zip and State.",
        "db_id": "california_schools",
        "sql": "select schools.streetabr , schools.city , schools.zip , schools.state from satscores join schools on satscores.cds = schools.CDSCode   order by satscores.enroll12 asc limit 1"
    },
    {
        "input": "How many members did attend the event 'Community Theater' in 2019?",
        "db_id": "student_club",
        "sql": "select count(*) from attendance join member on attendance.link_to_member = member.member_id join event on attendance.link_to_event = event.event_id where  event.event_name = \"Community Theater\" and event.event_date = 2019"
    },
    {
        "input": "What is the percentage of the cards with a converted mana cost of 7 in the set Coldsnap?",
        "db_id": "card_games",
        "sql": "select count(*) from cards join sets on cards.id = sets.id where  cards.convertedmanacost = 7 and sets.name = \"Coldsnap\""
    },
    {
        "input": "Which molecules have triple bonds and list all the elements they contain.",
        "db_id": "toxicology",
        "sql": "select molecule.molecule_id , atom.element from atom join molecule on atom.molecule_id = molecule.molecule_id join bond on molecule.molecule_id = bond.molecule_id where  bond.bond_type = \"triple\""
    },
    {
        "input": "List the superheroes from Marvel Comics who have the super power of 'Super Strength'.",
        "db_id": "superhero",
        "sql": "select superhero.superhero_name from hero_power join superpower on hero_power.power_id = superpower.id join superhero on hero_power.hero_id = superhero.id join publisher on superhero.publisher_id = publisher.id where  superpower.power_name = \"Super Strength\" and publisher.publisher_name = \"Marvel Comics\""
    },
    {
        "input": "What is reference name of Robert Kubica?",
        "db_id": "formula_1",
        "sql": "select drivers.driverref from drivers where  drivers.surname = \"Robert\"   intersect select drivers.driverref from drivers where  drivers.surname = \"Kubica\""
    },
    {
        "input": "How long did it take after patient number 821298 arrived at the hospital for the first time before her evaluation began?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "How many members did attend the event 'Community Theater' in 2019?",
        "db_id": "student_club",
        "sql": "select count(*) from attendance join member on attendance.link_to_member = member.member_id join event on attendance.link_to_event = event.event_id where  event.event_name = \"Community Theater\" and event.event_date = 2019"
    },
    {
        "input": "Among the cards whose version of frame style is 1997, what is the status of the card illustrated by D. Alexander Gregory in legacy play format that has sensitive content or Wizards of the Coast?",
        "db_id": "card_games",
        "sql": "select legalities.status from legalities join cards on legalities.uuid = cards.uuid where  cards.frameversion = 1997 and cards.artist = \"D. Alexander Gregory\"   union select legalities.status from legalities where  legalities.format = \"traditional\""
    },
    {
        "input": "In superheroes with missing weight data, calculate the difference between the number of superheroes with blue eyes and no eye color.",
        "db_id": "superhero",
        "sql": "select count(*) from superhero where  superhero.weight_kg = \"Blue\" and superhero.eye_colour_id != \"No\""
    },
    {
        "input": "Please list the product description of the products consumed in September, 2013.",
        "db_id": "debit_card_specializing",
        "sql": ""
    },
    {
        "input": "What is the difference of the average ball control score between Abdou Diallo and Aaron Appindangoye\n?",
        "db_id": "european_football_2",
        "sql": "select avg(player_attributes.ball_control) from Player_Attributes where  player_attributes.player_api_id in (select Player.player_api_id from Player where  player.player_name = \"Abdou Diallo\"   intersect select Player.player_api_id from Player where  player.player_name = \"Aaron Appindangoye\"   )"
    },
    {
        "input": "Name the atoms' elements that form bond TR000_2_3.",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_id = \"TR000_2_3\""
    },
    {
        "input": "How many molecules have a double bond type and among these molecule, how many are labeled as carcinogenic compound?",
        "db_id": "toxicology",
        "sql": "select count(*) , molecule.label from bond join molecule on bond.molecule_id = molecule.molecule_id where  bond.bond_type = \"double\"  group by molecule.label"
    },
    {
        "input": "In which years did Lewis Hamilton participate in a Formula_1 race?",
        "db_id": "formula_1",
        "sql": "select races.year from driverStandings join drivers on driverStandings.driverId = drivers.driverId join races on driverStandings.raceId = races.raceId where  drivers.forename = \"Lewis\" and drivers.surname = \"Formula_1\""
    },
    {
        "input": "What is the composition of element chlorine in percentage among the single bond molecules?",
        "db_id": "toxicology",
        "sql": "select atom.element , atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id  group by atom.element  order by count(*) desc limit 1"
    },
    {
        "input": "Among all superheroes in Marvel Comics, identify the percentage of 'good' superheroes.",
        "db_id": "superhero",
        "sql": "select superhero.superhero_name , count(*) from superhero join alignment on superhero.alignment_id = alignment.id where  alignment.alignment = \"Good\"  group by superhero.superhero_name"
    },
    {
        "input": "Among the patients whose total bilirubin is over the normal range, how many of them have a peripheral pattern observed in the sheet of ANA examination?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "Calculate the total average cost that Elijah Allen spent in the events on September and October.",
        "db_id": "student_club",
        "sql": "select sum(expense.cost) from expense join member on expense.link_to_member = member.member_id join budget on expense.link_to_budget = budget.budget_id join event on budget.link_to_event = event.event_id where  member.first_name = \"Elijah\" and member.last_name = \"Allen\" and event.event_date = \"September\" and event.event_date = \"October\""
    },
    {
        "input": "The oldest SJS patient's medical laboratory work was completed on what date, and what age was the patient when they initially arrived at the hospital?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "Which driver has the fastest lap time? Please give their forenames and surnames.",
        "db_id": "formula_1",
        "sql": "select drivers.forename , drivers.surname from results join drivers on results.driverId = drivers.driverId   order by results.fastestlaptime desc limit 1"
    },
    {
        "input": "What is the element with the atom ID of TR004_7 in molecule that is not carcinogenic?",
        "db_id": "toxicology",
        "sql": "select atom.element from atom join molecule on atom.molecule_id = molecule.molecule_id where  atom.atom_id = \"TR004_7\" and molecule.molecule_id != \"carcinogenic\""
    },
    {
        "input": "In comments with score between 1 to 5, list down the display names of the users with 0 down votes.",
        "db_id": "codebase_community",
        "sql": "select users.displayname from comments join users on comments.UserId = users.Id where  comments.score between 1 and 5"
    },
    {
        "input": "List all carcinogenic molecules and their elements.",
        "db_id": "toxicology",
        "sql": "select molecule.molecule_id , atom.element from atom join molecule on atom.molecule_id = molecule.molecule_id where  atom.element = \"carcinogen\""
    },
    {
        "input": "Are there more male patients with creatinine not within the normal range than female? True or False?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.diagnosis from Examination join Patient on Examination.ID = Patient.ID where  patient.sex = \"M\" and examination.diagnosis != \"Normal\""
    },
    {
        "input": "Please list the disparate time of the transactions taken place in the gas stations from chain no. 11.",
        "db_id": "debit_card_specializing",
        "sql": ""
    },
    {
        "input": "Calculate the average height of all neutral superheroes.",
        "db_id": "superhero",
        "sql": "select avg(superhero.height_cm) from superhero join alignment on superhero.alignment_id = alignment.id where  alignment.alignment = \"Neutral\""
    },
    {
        "input": "On average how many carcinogenic molecules are single bonded?",
        "db_id": "toxicology",
        "sql": "select count(*) from bond join molecule on bond.molecule_id = molecule.molecule_id where  bond.bond_type = \"Single\"  group by bond.molecule_id"
    },
    {
        "input": "Which foot is preferred by Abdou Diallo?",
        "db_id": "european_football_2",
        "sql": "select player_attributes.preferred_foot from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.player_name = \"Abdou Diallo\""
    },
    {
        "input": "Write the full names of students who received funds on the date of 9/9/2019 and include the amount received.",
        "db_id": "student_club",
        "sql": "select member.first_name , member.last_name , income.amount from income join member on income.link_to_member = member.member_id where  income.date_received = \"9/9/2019\""
    },
    {
        "input": "Provide the hero name and race of Charles Chandler.",
        "db_id": "superhero",
        "sql": "select superhero.superhero_name , race.race from superhero join race on superhero.race_id = race.id where  superhero.full_name = \"Charles Chandler\""
    },
    {
        "input": "Which driver has the fastest lap time? Please give their forenames and surnames.",
        "db_id": "formula_1",
        "sql": "select drivers.forename , drivers.surname from results join drivers on results.driverId = drivers.driverId   order by results.fastestlaptime desc limit 1"
    },
    {
        "input": "What number of patients with a degree of thrombosis level 2 and ANA pattern of only S, have a level of anti-Cardiolip in antibody (IgM) 20% higher than average?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "Please list the account types that are not eligible for loans, and the average income of residents in the district where the account is located exceeds $8000 but is no more than $9000.",
        "db_id": "financial",
        "sql": "select disp.type from disp join account on disp.account_id = account.account_id join loan on account.account_id = loan.account_id  group by disp.type having  avg(loan.amount) > 8000  intersect select disp.type from disp join account on disp.account_id = account.account_id join loan on account.account_id = loan.account_id  group by disp.type having  avg(loan.amount) < 9000"
    },
    {
        "input": "What is the percentage of players that are under 180 cm who have an overall strength of more than 70?",
        "db_id": "european_football_2",
        "sql": "select count(*) from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.height < 180 and player_attributes.strength > 70"
    },
    {
        "input": "Which top 20 driver created the shortest lap time ever record in a Formula_1 race? Please give them full names.",
        "db_id": "formula_1",
        "sql": "select drivers.surname , drivers.forename from lapTimes join drivers on lapTimes.driverId = drivers.driverId   order by laptimes.milliseconds asc limit 20"
    },
    {
        "input": "Which home team had lost the fewest matches in the 2016 season?",
        "db_id": "european_football_2",
        "sql": "select match.home_team_api_id from Match where  match.season = 2016  group by match.home_team_api_id  order by count(*) asc limit 1"
    },
    {
        "input": "Which country is the league Italy Serie A from?",
        "db_id": "european_football_2",
        "sql": "select league.country_id from League join Country on League.country_id = Country.id where  country.name = \"Italy\" and league.name = \"Serie A\""
    },
    {
        "input": "For the customer who paid 634.8 in 2012/8/25, what was the consumption decrease rate from Year 2012 to 2013?",
        "db_id": "debit_card_specializing",
        "sql": "select yearmonth.consumption from yearmonth where  yearmonth.consumption between 2012 and 2013"
    },
    {
        "input": "Which bond type accounted for the majority of the bonds found in molecule TR010 and state whether or not this molecule is carcinogenic?",
        "db_id": "toxicology",
        "sql": "select bond.bond_type from bond join molecule on bond.molecule_id = molecule.molecule_id where  molecule.molecule_id = \"TR010\"  group by bond.bond_type  order by count(*) desc limit 1"
    },
    {
        "input": "What proportion of single bonds are carcinogenic? Please provide your answer as a percentage with five decimal places.",
        "db_id": "toxicology",
        "sql": "select bond.bond_type from bond where  bond.bond_type = \"carcinogenic\"   order by bond.bond_type desc limit 5"
    },
    {
        "input": "Provide ID, sex and age of patient who has blood glucose (GLU) not within normal range but with total cholesterol(T-CHO) within normal range.",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "What is the composition of element chlorine in percentage among the single bond molecules?",
        "db_id": "toxicology",
        "sql": "select atom.element , atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id  group by atom.element  order by count(*) desc limit 1"
    },
    {
        "input": "List the long name of teams with above-average build-up play passing in 2012.",
        "db_id": "european_football_2",
        "sql": "select team.team_long_name from Team_Attributes join Team on Team_Attributes.team_api_id = Team.team_api_id where  team_attributes.buildupplaypassing > (select avg(Team_Attributes.buildUpPlayPassing) from Team_Attributes where  team_attributes.date = 2012  )"
    },
    {
        "input": "How many drivers managed to finish the race in the 2008 Australian Grand Prix?",
        "db_id": "formula_1",
        "sql": "select count( distinct results.driverid) from results join races on results.raceId = races.raceId where  races.year = 2008 and races.name = \"Australian Grand Prix\""
    },
    {
        "input": "Which superhero has the same eyes, hair and skin colour? Indicate the publisher of the superhero.",
        "db_id": "superhero",
        "sql": "select publisher.publisher_name from superhero join publisher on superhero.publisher_id = publisher.id"
    },
    {
        "input": "Are there more in-patient or outpatient who were male? What is the deviation in percentage?",
        "db_id": "thrombosis_prediction",
        "sql": "select avg(patient.sex) from Patient where  patient.sex = \"M\""
    },
    {
        "input": "What is the ratio of male to female patients among all those with abnormal uric acid counts?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "What is the composition of element chlorine in percentage among the single bond molecules?",
        "db_id": "toxicology",
        "sql": "select atom.element , atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id  group by atom.element  order by count(*) desc limit 1"
    },
    {
        "input": "What was the final score for the match on September 24, 2008, in the Belgian Jupiler League between the home team and the away team?",
        "db_id": "european_football_2",
        "sql": "select match.home_team_goal from Match where  match.date = \"2008-09-24\" and match.away_team_goal = \"home\""
    },
    {
        "input": "In superheroes with missing weight data, calculate the difference between the number of superheroes with blue eyes and no eye color.",
        "db_id": "superhero",
        "sql": "select count(*) from superhero where  superhero.weight_kg = \"Blue\" and superhero.eye_colour_id != \"No\""
    },
    {
        "input": "What is the publisher for Hawkman, Karate Kid and Speedy?",
        "db_id": "superhero",
        "sql": ""
    },
    {
        "input": "Which district has highest active loan?",
        "db_id": "financial",
        "sql": "select district.a2 from loan join account on loan.account_id = account.account_id join district on account.district_id = district.district_id  group by account.district_id  order by sum(loan.amount) desc limit 1"
    },
    {
        "input": "What was the growth rate of the total amount of loans across all accounts for a male client between 1996 and 1997?",
        "db_id": "financial",
        "sql": "select sum(loan.amount) from loan join account on loan.account_id = account.account_id join district on account.district_id = district.district_id join client on district.district_id = client.district_id where  client.gender >= \"M\" and loan.date between 1996 and 1997"
    },
    {
        "input": "How many molecules have a double bond type and among these molecule, how many are labeled as carcinogenic compound?",
        "db_id": "toxicology",
        "sql": "select count(*) , molecule.label from bond join molecule on bond.molecule_id = molecule.molecule_id where  bond.bond_type = \"double\"  group by molecule.label"
    },
    {
        "input": "Among the sets whose expansion type is Commander, which set has the highest total number of cards including promotional and related supplemental products but excluding Alchemy modifications? Indicate the id of the set.",
        "db_id": "card_games",
        "sql": "select sets.id from sets where  sets.type = \"commander\"  group by sets.id  order by sum(sets.totalsetsize) desc limit 1"
    },
    {
        "input": "List the long name of teams with above-average build-up play passing in 2012.",
        "db_id": "european_football_2",
        "sql": "select team.team_long_name from Team_Attributes join Team on Team_Attributes.team_api_id = Team.team_api_id where  team_attributes.buildupplaypassing > (select avg(Team_Attributes.buildUpPlayPassing) from Team_Attributes where  team_attributes.date = 2012  )"
    },
    {
        "input": "Provide ID, sex and age of patient who has blood glucose (GLU) not within normal range but with total cholesterol(T-CHO) within normal range.",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "Please list the product description of the products consumed in September, 2013.",
        "db_id": "debit_card_specializing",
        "sql": ""
    },
    {
        "input": "Provide the ID and age of patient with lactate dehydrogenase (LDH) between 100-300 index above the normal range.",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.id , patient.birthday from Examination join Patient on Examination.ID = Patient.ID join Laboratory on Patient.ID = Laboratory.ID where  laboratory.ldh between 100 and 300 and examination.diagnosis > \"Normal\""
    },
    {
        "input": "What elements are in the TR004_8_9 bond atoms?",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_id = \"TR004_8_9\""
    },
    {
        "input": "Find the triple-bonded molecules which are carcinogenic.",
        "db_id": "toxicology",
        "sql": "select molecule.molecule_id from connected join bond on connected.bond_id = bond.bond_id join molecule on bond.molecule_id = molecule.molecule_id where  bond.bond_type = \"triple\" and connected.atom_id in (select connected.atom_id from connected join bond on connected.bond_id = bond.bond_id join molecule on bond.molecule_id = molecule.molecule_id   order by molecule.molecule_id desc limit 1 )"
    },
    {
        "input": "Give the name of the league had the most goals in the 2016 season?",
        "db_id": "european_football_2",
        "sql": "select league.name from League join Match on League.id = Match.id where  match.season = 2016  group by match.league_id  order by count(*) desc limit 1"
    },
    {
        "input": "What is the anti Cardiolipin antibody concentration of the female patient with the highest uric acid level in the normal range?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.diagnosis from Examination join Patient on Examination.ID = Patient.ID where  patient.sex = \"F\"   order by examination.diagnosis desc limit 1"
    },
    {
        "input": "Of the schools that offers a magnet program serving a grade span of Kindergarten to 8th grade, how many offers Multiple Provision Types? List the number of cities that offers a Kindergarten to 8th grade span and indicate how many schools are there serving such grade span for each city.",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "How many atoms with iodine and with sulfur type elements are there in single bond molecules?",
        "db_id": "toxicology",
        "sql": "select count(*) from atom where  atom.atom_id in (select connected.atom_id2 from connected join bond on connected.bond_id = bond.bond_id where  bond.bond_type = \"iodine\"   intersect select connected.atom_id2 from connected join bond on connected.bond_id = bond.bond_id where  bond.bond_type = \"sulfur\"   )"
    },
    {
        "input": "Which home team had lost the fewest matches in the 2016 season?",
        "db_id": "european_football_2",
        "sql": "select match.home_team_api_id from Match where  match.season = 2016  group by match.home_team_api_id  order by count(*) asc limit 1"
    },
    {
        "input": "What is the ratio of male to female patients among all those with abnormal uric acid counts?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "Please list top three molecules that have single bonds between two atoms and are not carcinogenic in alphabetical order.",
        "db_id": "toxicology",
        "sql": "select molecule.molecule_id from bond join molecule on bond.molecule_id = molecule.molecule_id where  bond.bond_type = \"Single\"   except select bond.molecule_id from bond where  bond.bond_type = \"carcinogenic\"   order by molecule.molecule_id asc"
    },
    {
        "input": "What is the percentage of blue female superheroes among all female superheroes?",
        "db_id": "superhero",
        "sql": "select colour.colour , count(*) from superhero join colour on superhero.skin_colour_id = colour.id join gender on superhero.gender_id = gender.id where  gender.gender = \"Female\"  group by colour.colour"
    },
    {
        "input": "Tally the toxicology element of the 4th atom of each molecule that was carcinogenic.",
        "db_id": "toxicology",
        "sql": "select atom.element , count(*) from atom where  atom.element = \"carcinogenic\"  group by atom.element"
    },
    {
        "input": "What kind of currency did the customer paid at 16:25:00 in 2012/8/24?",
        "db_id": "debit_card_specializing",
        "sql": ""
    },
    {
        "input": "List all the football player with the highest potential score.",
        "db_id": "european_football_2",
        "sql": "select distinct player.player_name from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id   order by player_attributes.potential desc limit 1"
    },
    {
        "input": "Which toxic element can be found in the molecule TR151?",
        "db_id": "toxicology",
        "sql": "select atom.element from atom where  atom.molecule_id = \"TR151\""
    },
    {
        "input": "Please list the lap records for the circuits in Italy.",
        "db_id": "formula_1",
        "sql": "select laptimes.lap from lapTimes join races on lapTimes.raceId = races.raceId join circuits on races.circuitId = circuits.circuitId where  circuits.country = \"Italy\""
    },
    {
        "input": "Which molecules have triple bonds and list all the elements they contain.",
        "db_id": "toxicology",
        "sql": "select molecule.molecule_id , atom.element from atom join molecule on atom.molecule_id = molecule.molecule_id join bond on molecule.molecule_id = bond.molecule_id where  bond.bond_type = \"triple\""
    },
    {
        "input": "List down at least five full names of superheroes with blue eyes.",
        "db_id": "superhero",
        "sql": "select superhero.full_name from superhero join colour on superhero.skin_colour_id = colour.id where  colour.colour = \"Blue\""
    },
    {
        "input": "Give the full name and contact number of members who had to spend more than average on each expense.",
        "db_id": "student_club",
        "sql": "select member.first_name , member.last_name , member.phone from expense join member on expense.link_to_member = member.member_id where  expense.cost > (select avg(expense.cost) from expense  )"
    },
    {
        "input": "Which members who were approved from 1/10/2019 to 11/19/2019? Please identify the member who attended the event and the link to their event.",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "List the long name of teams with above-average build-up play passing in 2012.",
        "db_id": "european_football_2",
        "sql": "select team.team_long_name from Team_Attributes join Team on Team_Attributes.team_api_id = Team.team_api_id where  team_attributes.buildupplaypassing > (select avg(Team_Attributes.buildUpPlayPassing) from Team_Attributes where  team_attributes.date = 2012  )"
    },
    {
        "input": "Which top 20 driver created the shortest lap time ever record in a Formula_1 race? Please give them full names.",
        "db_id": "formula_1",
        "sql": "select drivers.surname , drivers.forename from lapTimes join drivers on lapTimes.driverId = drivers.driverId   order by laptimes.milliseconds asc limit 20"
    },
    {
        "input": "How many members did attend the event 'Community Theater' in 2019?",
        "db_id": "student_club",
        "sql": "select count(*) from attendance join member on attendance.link_to_member = member.member_id join event on attendance.link_to_event = event.event_id where  event.event_name = \"Community Theater\" and event.event_date = 2019"
    },
    {
        "input": "Please list top three elements of the toxicology of the molecule TR000 in alphabetical order.",
        "db_id": "toxicology",
        "sql": "select atom.element from atom where  atom.molecule_id = \"TR000\"   order by atom.element desc limit 3"
    },
    {
        "input": "List the element and bond type included in the molecule with molecule ID of TR002.",
        "db_id": "toxicology",
        "sql": "select atom.element , bond.bond_type from atom join molecule on atom.molecule_id = molecule.molecule_id join bond on molecule.molecule_id = bond.molecule_id where  molecule.molecule_id = \"TR002\""
    },
    {
        "input": "What is reference name of Robert Kubica?",
        "db_id": "formula_1",
        "sql": "select drivers.driverref from drivers where  drivers.surname = \"Robert\"   intersect select drivers.driverref from drivers where  drivers.surname = \"Kubica\""
    },
    {
        "input": "Which top 20 driver created the shortest lap time ever record in a Formula_1 race? Please give them full names.",
        "db_id": "formula_1",
        "sql": "select drivers.surname , drivers.forename from lapTimes join drivers on lapTimes.driverId = drivers.driverId   order by laptimes.milliseconds asc limit 20"
    },
    {
        "input": "Which district has highest active loan?",
        "db_id": "financial",
        "sql": "select district.a2 from loan join account on loan.account_id = account.account_id join district on account.district_id = district.district_id  group by account.district_id  order by sum(loan.amount) desc limit 1"
    },
    {
        "input": "For loans contracts which are still running where client are in debt, list the district of the and the state the percentage unemployment rate increment from year 1995 to 1996.",
        "db_id": "financial",
        "sql": "select district.a13 , avg(loan.duration) from loan join account on loan.account_id = account.account_id join district on account.district_id = district.district_id where  loan.duration >= 1995  group by district.a13"
    },
    {
        "input": "List all patients who were followed up at the outpatient clinic who underwent a laboratory test in October 1991 and had a total blood bilirubin level within the normal range.",
        "db_id": "thrombosis_prediction",
        "sql": "select distinct patient.id from Examination join Patient on Examination.ID = Patient.ID join Laboratory on Patient.ID = Laboratory.ID where  examination.diagnosis = \"Normal\" and laboratory.date = 1991"
    },
    {
        "input": "Calculate the percentage whereby Hamilton was not at the 1st track of the the f1 circuit since 2010.",
        "db_id": "formula_1",
        "sql": "select count(*) from driverStandings join drivers on driverStandings.driverId = drivers.driverId join races on driverStandings.raceId = races.raceId where  drivers.surname = \"Hamilton\" and races.year = 2010"
    },
    {
        "input": "For the branch which located in the south Bohemia with biggest number of inhabitants, what is the percentage of the male clients?",
        "db_id": "financial",
        "sql": "select client.gender from client join district on client.district_id = district.district_id where  district.a3 = \"south Bohemia\"  group by client.gender  order by count(*) desc limit 1"
    },
    {
        "input": "List the long name of teams with above-average build-up play passing in 2012.",
        "db_id": "european_football_2",
        "sql": "select team.team_long_name from Team_Attributes join Team on Team_Attributes.team_api_id = Team.team_api_id where  team_attributes.buildupplaypassing > (select avg(Team_Attributes.buildUpPlayPassing) from Team_Attributes where  team_attributes.date = 2012  )"
    },
    {
        "input": "Which toxic element can be found in the molecule TR151?",
        "db_id": "toxicology",
        "sql": "select atom.element from atom where  atom.molecule_id = \"TR151\""
    },
    {
        "input": "Show the Simplified Chinese translation of the name of the set \"Mirrodin\"?",
        "db_id": "card_games",
        "sql": "select set_translations.translation from set_translations join sets on set_translations.setCode = sets.code where  sets.name = \"Mirrodin\" and set_translations.language = \"Chinese\""
    },
    {
        "input": "What is the average index of the lactate dehydrogenase (LDH) for all patients with lactate dehydrogenase (LDH) within the normal range.",
        "db_id": "thrombosis_prediction",
        "sql": "select avg(laboratory.ldh) from Examination join Patient on Examination.ID = Patient.ID join Laboratory on Patient.ID = Laboratory.ID where  examination.diagnosis = \"Normal\""
    },
    {
        "input": "How many white bordered cards are powerful?",
        "db_id": "card_games",
        "sql": "select count(*) from cards where  cards.bordercolor = \"white\""
    },
    {
        "input": "Which set is not available outside of the United States and has foil cards with Japanese writing on them? Please include the set ID in your response.",
        "db_id": "card_games",
        "sql": "select sets.id from sets where  sets.isonlineonly not in (select cards.isOnlineOnly from foreign_data join cards on foreign_data.uuid = cards.uuid join sets on foreign_data.type = sets.type where  foreign_data.language = \"Japanese\"   )"
    },
    {
        "input": "What was the average overall rating for Marko Arnautovic from 2007/2/22 to 2016/4/21?",
        "db_id": "european_football_2",
        "sql": "select avg(player_attributes.overall_rating) from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.player_name = \"Marko Arnautovic\" and player_attributes.date > \"2007/2/22\" and player_attributes.date < \"2016/4/21\""
    },
    {
        "input": "Among all the lap records set on various circuits, what is the time for the fastest one?",
        "db_id": "formula_1",
        "sql": "select results.time from lapTimes join drivers on lapTimes.driverId = drivers.driverId join results on drivers.driverId = results.driverId   order by laptimes.time desc limit 1"
    },
    {
        "input": "Indicate the cost of posters for 'September Speaker' event.",
        "db_id": "student_club",
        "sql": "select expense.cost from expense join budget on expense.link_to_budget = budget.budget_id join event on budget.link_to_event = event.event_id where  event.event_name = \"September Speaker\""
    },
    {
        "input": "How many white bordered cards are powerful?",
        "db_id": "card_games",
        "sql": "select count(*) from cards where  cards.bordercolor = \"white\""
    },
    {
        "input": "Which bond type accounted for the majority of the bonds found in molecule TR010 and state whether or not this molecule is carcinogenic?",
        "db_id": "toxicology",
        "sql": "select bond.bond_type from bond join molecule on bond.molecule_id = molecule.molecule_id where  molecule.molecule_id = \"TR010\"  group by bond.bond_type  order by count(*) desc limit 1"
    },
    {
        "input": "Which foot is preferred by Abdou Diallo?",
        "db_id": "european_football_2",
        "sql": "select player_attributes.preferred_foot from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.player_name = \"Abdou Diallo\""
    },
    {
        "input": "How many patients who were examined between 1987/7/6 and 1996/1/31 had a GPT level greater than 30 and an ALB level less than 4? List them by their ID.",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "Among all superheroes in Marvel Comics, identify the percentage of 'good' superheroes.",
        "db_id": "superhero",
        "sql": "select superhero.superhero_name , count(*) from superhero join alignment on superhero.alignment_id = alignment.id where  alignment.alignment = \"Good\"  group by superhero.superhero_name"
    },
    {
        "input": "For the branch which located in the south Bohemia with biggest number of inhabitants, what is the percentage of the male clients?",
        "db_id": "financial",
        "sql": "select client.gender from client join district on client.district_id = district.district_id where  district.a3 = \"south Bohemia\"  group by client.gender  order by count(*) desc limit 1"
    },
    {
        "input": "What is the publisher for Hawkman, Karate Kid and Speedy?",
        "db_id": "superhero",
        "sql": ""
    },
    {
        "input": "Name the elements that comprise the atoms of bond TR001_2_4.",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_id = \"TR001_2_4\""
    },
    {
        "input": "What is the element with the atom ID of TR004_7 in molecule that is not carcinogenic?",
        "db_id": "toxicology",
        "sql": "select atom.element from atom join molecule on atom.molecule_id = molecule.molecule_id where  atom.atom_id = \"TR004_7\" and molecule.molecule_id != \"carcinogenic\""
    },
    {
        "input": "What percentage is Landon Donovan's overall rating higher than Jordan Bowery on 2013/7/12?",
        "db_id": "european_football_2",
        "sql": "select player_attributes.overall_rating from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.player_name > \"Landon Donovan\" and player_attributes.date = \"2013/7/12\""
    },
    {
        "input": "Find the triple-bonded molecules which are carcinogenic.",
        "db_id": "toxicology",
        "sql": "select molecule.molecule_id from connected join bond on connected.bond_id = bond.bond_id join molecule on bond.molecule_id = molecule.molecule_id where  bond.bond_type = \"triple\" and connected.atom_id in (select connected.atom_id from connected join bond on connected.bond_id = bond.bond_id join molecule on bond.molecule_id = molecule.molecule_id   order by molecule.molecule_id desc limit 1 )"
    },
    {
        "input": "What is the percentage of superheroes who act in their own self-interest or make decisions based on their own moral code? Indicate how many of the said superheroes were published by Marvel Comics.",
        "db_id": "superhero",
        "sql": "select count(*) from hero_attribute join superhero on hero_attribute.hero_id = superhero.id join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"Marvel Comics\" or hero_attribute.attribute_value = \"self-interest\""
    },
    {
        "input": "Calculate the total atoms consisting of the element carbon and hydrogen.",
        "db_id": "toxicology",
        "sql": "select count(*) from atom where  atom.atom_id in (select atom.atom_id from atom where  atom.element = \"carbon\"   intersect select atom.atom_id from atom where  atom.element = \"hydrogen\"   )"
    },
    {
        "input": "List down at least five full names of superheroes with blue eyes.",
        "db_id": "superhero",
        "sql": "select superhero.full_name from superhero join colour on superhero.skin_colour_id = colour.id where  colour.colour = \"Blue\""
    },
    {
        "input": "Determine the bond type that is formed in the chemical compound containing element Carbon.",
        "db_id": "toxicology",
        "sql": "select bond.bond_type from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  atom.element = \"Carbon\""
    },
    {
        "input": "Among all the lap records set on various circuits, what is the time for the fastest one?",
        "db_id": "formula_1",
        "sql": "select results.time from lapTimes join drivers on lapTimes.driverId = drivers.driverId join results on drivers.driverId = results.driverId   order by laptimes.time desc limit 1"
    },
    {
        "input": "What is the highest eligible free rate for K-12 students in the schools in Alameda County?",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "How many molecules without sulphur element is not having double bond?",
        "db_id": "toxicology",
        "sql": "select count(*) from atom join molecule on atom.molecule_id = molecule.molecule_id where  atom.element != \"sulphur\""
    },
    {
        "input": "List the element and bond type included in the molecule with molecule ID of TR002.",
        "db_id": "toxicology",
        "sql": "select atom.element , bond.bond_type from atom join molecule on atom.molecule_id = molecule.molecule_id join bond on molecule.molecule_id = bond.molecule_id where  molecule.molecule_id = \"TR002\""
    },
    {
        "input": "How many cards available in paper have a positive starting maximum hand size?",
        "db_id": "card_games",
        "sql": "select count(*) from cards where  cards.availability = \"paper\"   order by cards.hand desc limit 1"
    },
    {
        "input": "List all the elements of atoms that can not bond with any other atoms.",
        "db_id": "toxicology",
        "sql": "select atom.element from atom where  atom.atom_id not in (select connected.atom_id2 from connected  )"
    },
    {
        "input": "Among the members who incurred expenses in more than one event, who paid the most amount?",
        "db_id": "student_club",
        "sql": "select expense.link_to_member from expense join budget on expense.link_to_budget = budget.budget_id  group by expense.link_to_member having  count(*) > 1  order by sum(budget.amount) desc limit 1"
    },
    {
        "input": "What percentage of male patients who first presented to the hospital in 1981 were diagnosed with BEHCET?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "For patients with abnormal platelet level, state the number of patients with lower than normal range. How is it compare to the number of patients with higher than normal range?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "How many patients have a normal level of anti-ribonuclear protein and have been admitted to the hospital?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID where  examination.diagnosis = \"Normal\" and patient.admission = \"Hospital\""
    },
    {
        "input": "Which countries have zip codes with post office boxes?",
        "db_id": "student_club",
        "sql": "select zip_code.county from zip_code where  zip_code.city = \"Post\""
    },
    {
        "input": "What are the valid e-mail addresses of the administrator of the school located in the San Bernardino county, City of San Bernardino City Unified that opened between 1/1/2009 to 12/31/2010 whose school types are public Intermediate/Middle Schools and Unified Schools?",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "List down at least five full names of superheroes with blue eyes.",
        "db_id": "superhero",
        "sql": "select superhero.full_name from superhero join colour on superhero.skin_colour_id = colour.id where  colour.colour = \"Blue\""
    },
    {
        "input": "Calculate the total atoms consisting of the element carbon and hydrogen.",
        "db_id": "toxicology",
        "sql": "select count(*) from atom where  atom.atom_id in (select atom.atom_id from atom where  atom.element = \"carbon\"   intersect select atom.atom_id from atom where  atom.element = \"hydrogen\"   )"
    },
    {
        "input": "What was the average overall rating for Marko Arnautovic from 2007/2/22 to 2016/4/21?",
        "db_id": "european_football_2",
        "sql": "select avg(player_attributes.overall_rating) from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.player_name = \"Marko Arnautovic\" and player_attributes.date > \"2007/2/22\" and player_attributes.date < \"2016/4/21\""
    },
    {
        "input": "How many percent of female heroes were published by Marvel Comics?",
        "db_id": "superhero",
        "sql": "select count(*) from superhero join publisher on superhero.publisher_id = publisher.id join gender on superhero.gender_id = gender.id where  gender.gender = \"Female\" and publisher.publisher_name = \"Marvel Comics\""
    },
    {
        "input": "Are there more in-patient or outpatient who were male? What is the deviation in percentage?",
        "db_id": "thrombosis_prediction",
        "sql": "select avg(patient.sex) from Patient where  patient.sex = \"M\""
    },
    {
        "input": "List all the elements of atoms that can not bond with any other atoms.",
        "db_id": "toxicology",
        "sql": "select atom.element from atom where  atom.atom_id not in (select connected.atom_id2 from connected  )"
    },
    {
        "input": "For all cards illustrated by Jim Pavelec. and describe the text of the ruling of these cards. Do these cards have missing or degraded properties and values.",
        "db_id": "card_games",
        "sql": "select rulings.text from rulings join cards on rulings.uuid = cards.uuid where  cards.artist = \"Jim Pavelec\" or rulings.text = \"No\""
    },
    {
        "input": "Among the superheroes with the super power of \"Super Strength\", how many of them have a height of over 200cm?",
        "db_id": "superhero",
        "sql": "select count(*) from hero_power join superpower on hero_power.power_id = superpower.id join superhero on hero_power.hero_id = superhero.id where  superpower.power_name = \"Super Strength\""
    },
    {
        "input": "In which years did Lewis Hamilton participate in a Formula_1 race?",
        "db_id": "formula_1",
        "sql": "select races.year from driverStandings join drivers on driverStandings.driverId = drivers.driverId join races on driverStandings.raceId = races.raceId where  drivers.forename = \"Lewis\" and drivers.surname = \"Formula_1\""
    },
    {
        "input": "Indicate the name of the closed event whose cost has exceeded the budget the most.",
        "db_id": "student_club",
        "sql": "select event.event_name from expense join budget on expense.link_to_budget = budget.budget_id join event on budget.link_to_event = event.event_id where  event.status = \"Closed\"  group by event.event_name  order by sum(expense.cost) desc limit 1"
    },
    {
        "input": "What sex is the patient who in a medical examination was diagnosed with PSS and in a laboratory examination had a blood level of C-reactive protein de 2+, createnine 1 and LDH 123?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "How many patients with a normal Rhuematoid Factor has a positive measure of degree of coagulation?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID where  examination.diagnosis = \"Normal\" and patient.admission >= 1"
    },
    {
        "input": "What is the score and the link type ID for post ID 395?",
        "db_id": "codebase_community",
        "sql": "select posts.score , postlinks.linktypeid from postLinks join posts on postLinks.RelatedPostId = posts.Id where  posts.score = 395"
    },
    {
        "input": "Calculate the average home team goal in the 2010/2011 season in the country of Poland.",
        "db_id": "european_football_2",
        "sql": "select avg(match.home_team_goal) from Country join Match on Country.id = Match.id where  country.name = \"Poland\" and match.season = \"2010/2011\""
    },
    {
        "input": "In 2012, who had the least consumption in LAM?",
        "db_id": "debit_card_specializing",
        "sql": "select yearmonth.customerid , yearmonth.consumption from yearmonth join customers on yearmonth.CustomerID = customers.CustomerID where  customers.segment = \"LAM\"   order by yearmonth.consumption asc limit 1"
    },
    {
        "input": "When was the first time did Kevin Constant have his highest crossing score? Give the date.",
        "db_id": "european_football_2",
        "sql": "select player_attributes.date from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.player_name = \"Kevin Constant\"   order by player_attributes.crossing desc limit 1"
    },
    {
        "input": "What percentage of cards with format commander and legal status do not have a content warning?",
        "db_id": "card_games",
        "sql": "select avg(cards.hascontentwarning) from legalities join cards on legalities.uuid = cards.uuid where  legalities.format = \"commander\" and legalities.status = \"Legal\""
    },
    {
        "input": "For the customer who paid 634.8 in 2012/8/25, what was the consumption decrease rate from Year 2012 to 2013?",
        "db_id": "debit_card_specializing",
        "sql": "select yearmonth.consumption from yearmonth where  yearmonth.consumption between 2012 and 2013"
    },
    {
        "input": "How many superheroes with blonde hair are there?",
        "db_id": "superhero",
        "sql": "select count(*) from superhero join colour on superhero.skin_colour_id = colour.id where  colour.colour = \"Blume\""
    },
    {
        "input": "List the element and bond type included in the molecule with molecule ID of TR002.",
        "db_id": "toxicology",
        "sql": "select atom.element , bond.bond_type from atom join molecule on atom.molecule_id = molecule.molecule_id join bond on molecule.molecule_id = bond.molecule_id where  molecule.molecule_id = \"TR002\""
    },
    {
        "input": "Show the Simplified Chinese translation of the name of the set \"Mirrodin\"?",
        "db_id": "card_games",
        "sql": "select set_translations.translation from set_translations join sets on set_translations.setCode = sets.code where  sets.name = \"Mirrodin\" and set_translations.language = \"Chinese\""
    },
    {
        "input": "Who is the editor of the post titled 'Open source tools for visualizing multi-dimensional data?'",
        "db_id": "codebase_community",
        "sql": "select distinct users.displayname from posts join users on posts.OwnerUserId = users.Id where  posts.title = \"Open source tools for visualizing multi-dimensional data\""
    },
    {
        "input": "Among the patients whose creatinine level is abnormal, how many of them aren't 70 yet?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Laboratory join Patient on Laboratory.ID = Patient.ID where  laboratory.sc170 >= 70"
    },
    {
        "input": "How often does account number 3 request an account statement to be released? What was the aim of debiting 3539 in total?",
        "db_id": "financial",
        "sql": ""
    },
    {
        "input": "What is the owner user id of the most valuable post?",
        "db_id": "codebase_community",
        "sql": "select posts.owneruserid from posts   order by posts.score desc limit 1"
    },
    {
        "input": "For all patients who are older than 55 years old, what is the percentage of female who has abnormal prothrombin time (PT)?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.sex , count(*) from Patient where  patient.sex > 55  group by patient.sex"
    },
    {
        "input": "Please list the ID of the patient whose RF is normal and who is older than 60.",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.id from Examination join Patient on Examination.ID = Patient.ID where  examination.diagnosis = \"Normal\" and patient.birthday > 60"
    },
    {
        "input": "What is the percentage of incredibly powerful cards in the set Coldsnap?",
        "db_id": "card_games",
        "sql": "select avg(cards.power) from cards join sets on cards.id = sets.id where  sets.name = \"Coldsnap\""
    },
    {
        "input": "Among the comments with scores between 5 to 10, what is the percentage of the users with 0 up votes?",
        "db_id": "codebase_community",
        "sql": "select users.upvotes from comments join users on comments.UserId = users.Id where  comments.score between 5 and 10"
    },
    {
        "input": "Calculate the total atoms consisting of the element carbon and hydrogen.",
        "db_id": "toxicology",
        "sql": "select count(*) from atom where  atom.atom_id in (select atom.atom_id from atom where  atom.element = \"carbon\"   intersect select atom.atom_id from atom where  atom.element = \"hydrogen\"   )"
    },
    {
        "input": "How many students of the Student_Club have attended the event \"Women's Soccer\"?",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "In 2012, who had the least consumption in LAM?",
        "db_id": "debit_card_specializing",
        "sql": "select yearmonth.customerid , yearmonth.consumption from yearmonth join customers on yearmonth.CustomerID = customers.CustomerID where  customers.segment = \"LAM\"   order by yearmonth.consumption asc limit 1"
    },
    {
        "input": "Please list the phone numbers of the students from the Student_Club that has attended the event \"Women's Soccer\".",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "What proportion of single bonds are carcinogenic? Please provide your answer as a percentage with five decimal places.",
        "db_id": "toxicology",
        "sql": "select bond.bond_type from bond where  bond.bond_type = \"carcinogenic\"   order by bond.bond_type desc limit 5"
    },
    {
        "input": "How long did it take after patient number 821298 arrived at the hospital for the first time before her evaluation began?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "Between DC and Marvel Comics, which publisher has published more superheroes? Find the difference in the number of superheroes they have published.",
        "db_id": "superhero",
        "sql": "select publisher.publisher_name , count(*) from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"DC\"  group by superhero.publisher_id  intersect select publisher.publisher_name , count(*) from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"Marvel Comics\"   order by count(*) desc limit 1"
    },
    {
        "input": "Between DC and Marvel Comics, which publisher has published more superheroes? Find the difference in the number of superheroes they have published.",
        "db_id": "superhero",
        "sql": "select publisher.publisher_name , count(*) from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"DC\"  group by superhero.publisher_id  intersect select publisher.publisher_name , count(*) from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"Marvel Comics\"   order by count(*) desc limit 1"
    },
    {
        "input": "What is the difference of the average ball control score between Abdou Diallo and Aaron Appindangoye\n?",
        "db_id": "european_football_2",
        "sql": "select avg(player_attributes.ball_control) from Player_Attributes where  player_attributes.player_api_id in (select Player.player_api_id from Player where  player.player_name = \"Abdou Diallo\"   intersect select Player.player_api_id from Player where  player.player_name = \"Aaron Appindangoye\"   )"
    },
    {
        "input": "Give the name of the league had the most goals in the 2016 season?",
        "db_id": "european_football_2",
        "sql": "select league.name from League join Match on League.id = Match.id where  match.season = 2016  group by match.league_id  order by count(*) desc limit 1"
    },
    {
        "input": "Which set is not available outside of the United States and has foil cards with Japanese writing on them? Please include the set ID in your response.",
        "db_id": "card_games",
        "sql": "select sets.id from sets where  sets.isonlineonly not in (select cards.isOnlineOnly from foreign_data join cards on foreign_data.uuid = cards.uuid join sets on foreign_data.type = sets.type where  foreign_data.language = \"Japanese\"   )"
    },
    {
        "input": "Give the name of the league had the most goals in the 2016 season?",
        "db_id": "european_football_2",
        "sql": "select league.name from League join Match on League.id = Match.id where  match.season = 2016  group by match.league_id  order by count(*) desc limit 1"
    },
    {
        "input": "For the teams with normal build-up play dribbling class in 2014, List the names of the teams with less than average chance creation passing, in descending order of chance creation passing.",
        "db_id": "european_football_2",
        "sql": "select team.team_long_name from Team_Attributes join Team on Team_Attributes.team_api_id = Team.team_api_id where  team_attributes.chancecreationpassing < (select avg(Team_Attributes.chanceCreationPassing) from Team_Attributes where  team_attributes.date = 2014  )    order by team_attributes.chancecreationpassing desc"
    },
    {
        "input": "Please list the lap records for the circuits in Italy.",
        "db_id": "formula_1",
        "sql": "select laptimes.lap from lapTimes join races on lapTimes.raceId = races.raceId join circuits on races.circuitId = circuits.circuitId where  circuits.country = \"Italy\""
    },
    {
        "input": "Please list the product description of the products consumed in September, 2013.",
        "db_id": "debit_card_specializing",
        "sql": ""
    },
    {
        "input": "For laboratory examinations take in 1984, list all patients below 50 years old with normal platelet level.",
        "db_id": "thrombosis_prediction",
        "sql": "select * from Laboratory join Patient on Laboratory.ID = Patient.ID where  patient.birthday < 50 and laboratory.date = 1984"
    },
    {
        "input": "What is the publisher's name of Blue Beetle II?",
        "db_id": "superhero",
        "sql": "select publisher.publisher_name from superhero join publisher on superhero.publisher_id = publisher.id where  superhero.superhero_name = \"Blue Beetle\""
    },
    {
        "input": "What are the player api id of 10 heaviest players?",
        "db_id": "european_football_2",
        "sql": "select player.player_api_id from Player   order by player.weight desc limit 10"
    },
    {
        "input": "Among the patients who has a normal level of anti-centromere and a normal level of anti-SSB, how many of them are male?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Laboratory join Patient on Laboratory.ID = Patient.ID where  patient.sex = \"M\" and laboratory.centromea = \"Normal\" and laboratory.ssb = \"SSB\""
    },
    {
        "input": "For the patient who was born on 1959/2/18, what is the decrease rate for his/her total cholesterol from November to December in 1981?",
        "db_id": "thrombosis_prediction",
        "sql": "select avg(patient.birthday) from Patient where  patient.birthday between 1959 and 1981"
    },
    {
        "input": "Among the superheroes with the super power of \"Super Strength\", how many of them have a height of over 200cm?",
        "db_id": "superhero",
        "sql": "select count(*) from hero_power join superpower on hero_power.power_id = superpower.id join superhero on hero_power.hero_id = superhero.id where  superpower.power_name = \"Super Strength\""
    },
    {
        "input": "How many atoms with iodine and with sulfur type elements are there in single bond molecules?",
        "db_id": "toxicology",
        "sql": "select count(*) from atom where  atom.atom_id in (select connected.atom_id2 from connected join bond on connected.bond_id = bond.bond_id where  bond.bond_type = \"iodine\"   intersect select connected.atom_id2 from connected join bond on connected.bond_id = bond.bond_id where  bond.bond_type = \"sulfur\"   )"
    },
    {
        "input": "Which countries have zip codes with post office boxes?",
        "db_id": "student_club",
        "sql": "select zip_code.county from zip_code where  zip_code.city = \"Post\""
    },
    {
        "input": "Which foot is preferred by Abdou Diallo?",
        "db_id": "european_football_2",
        "sql": "select player_attributes.preferred_foot from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.player_name = \"Abdou Diallo\""
    },
    {
        "input": "What is the complete address of the school with the lowest excellence rate? Indicate the Street, City, Zip and State.",
        "db_id": "california_schools",
        "sql": "select schools.streetabr , schools.city , schools.zip , schools.state from satscores join schools on satscores.cds = schools.CDSCode   order by satscores.enroll12 asc limit 1"
    },
    {
        "input": "Which post has the highest score? Please give its id and title's name.",
        "db_id": "codebase_community",
        "sql": "select posts.id , posts.title from posts   order by posts.score desc limit 1"
    },
    {
        "input": "For the patient who was born on 1959/2/18, what is the decrease rate for his/her total cholesterol from November to December in 1981?",
        "db_id": "thrombosis_prediction",
        "sql": "select avg(patient.birthday) from Patient where  patient.birthday between 1959 and 1981"
    },
    {
        "input": "Under whose administration is the school with the highest number of students scoring 1500 or more on the SAT? Indicate their full names.",
        "db_id": "california_schools",
        "sql": "select schools.admlname1 from satscores join schools on satscores.cds = schools.CDSCode where  satscores.numge1500 >= 1500  group by schools.admlname1  order by count(*) desc limit 1"
    },
    {
        "input": "How many patients have a normal level of anti-ribonuclear protein and have been admitted to the hospital?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID where  examination.diagnosis = \"Normal\" and patient.admission = \"Hospital\""
    },
    {
        "input": "What's the French name of the set of cards with \"Tendo Ice Bridge\" is in?",
        "db_id": "card_games",
        "sql": "select sets.name from foreign_data join cards on foreign_data.uuid = cards.uuid join sets on foreign_data.type = sets.type where  cards.name = \"Tendo Ice Bridge\" and foreign_data.language = \"French\""
    },
    {
        "input": "What percentage of cards without power are in French?",
        "db_id": "card_games",
        "sql": "select avg(cards.power) from foreign_data join cards on foreign_data.uuid = cards.uuid where  foreign_data.language = \"French\""
    },
    {
        "input": "Which post has the highest score? Please give its id and title's name.",
        "db_id": "codebase_community",
        "sql": "select posts.id , posts.title from posts   order by posts.score desc limit 1"
    },
    {
        "input": "In superheroes with missing weight data, calculate the difference between the number of superheroes with blue eyes and no eye color.",
        "db_id": "superhero",
        "sql": "select count(*) from superhero where  superhero.weight_kg = \"Blue\" and superhero.eye_colour_id != \"No\""
    },
    {
        "input": "What is the mana cost of cards with a normal layout, a 2003 frame version, with a black border color, and available in paper and mtgo?",
        "db_id": "card_games",
        "sql": "select cards.manacost from cards where  cards.layout = \"normal\" and cards.frameversion = \"2003\" and cards.bordercolor = \"black\" and cards.availability = \"mtgo\""
    },
    {
        "input": "Which countries have zip codes with post office boxes?",
        "db_id": "student_club",
        "sql": "select zip_code.county from zip_code where  zip_code.city = \"Post\""
    },
    {
        "input": "How many gold-eyed superheroes did Marvel Comics publish?",
        "db_id": "superhero",
        "sql": "select count(*) from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"Marvel Comics\""
    },
    {
        "input": "Calculate the percentage of carcinogenic molecules with triple bonded Hidrogen atoms.",
        "db_id": "toxicology",
        "sql": ""
    },
    {
        "input": "Among the patients whose total bilirubin is over the normal range, how many of them have a peripheral pattern observed in the sheet of ANA examination?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "How many elements are contained in bond_id TR001_3_4?",
        "db_id": "toxicology",
        "sql": "select count(*) from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_id = \"TR001_3_4\""
    },
    {
        "input": "Calculate the percentage of molecules containing carcinogenic compounds that element is hydrogen.",
        "db_id": "toxicology",
        "sql": "select count(*) from atom join molecule on atom.molecule_id = molecule.molecule_id where  atom.element = \"hydrogen\" and atom.element > 0"
    },
    {
        "input": "Among the patients whose total bilirubin is over the normal range, how many of them have a peripheral pattern observed in the sheet of ANA examination?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "Please list the superhero names of all the superheroes that have blue eyes and blond hair.",
        "db_id": "superhero",
        "sql": "select superhero.superhero_name from superhero join colour on superhero.skin_colour_id = colour.id where  colour.colour = \"Blue\"   intersect select superhero.superhero_name from superhero join colour on superhero.skin_colour_id = colour.id where  colour.colour = \"Blend\""
    },
    {
        "input": "List the elements of all the triple bonds.",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_type like \"3%\""
    },
    {
        "input": "List all carcinogenic molecules and their elements.",
        "db_id": "toxicology",
        "sql": "select molecule.molecule_id , atom.element from atom join molecule on atom.molecule_id = molecule.molecule_id where  atom.element = \"carcinogen\""
    },
    {
        "input": "What is the publisher's name of Blue Beetle II?",
        "db_id": "superhero",
        "sql": "select publisher.publisher_name from superhero join publisher on superhero.publisher_id = publisher.id where  superhero.superhero_name = \"Blue Beetle\""
    },
    {
        "input": "What number of patients with a degree of thrombosis level 2 and ANA pattern of only S, have a level of anti-Cardiolip in antibody (IgM) 20% higher than average?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "For the client whose loan was approved first in 1993/7/5, what is the increase rate of his/her account balance from 1993/3/22 to 1998/12/27?",
        "db_id": "financial",
        "sql": ""
    },
    {
        "input": "Provide the ID and age of patient with lactate dehydrogenase (LDH) between 100-300 index above the normal range.",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.id , patient.birthday from Examination join Patient on Examination.ID = Patient.ID join Laboratory on Patient.ID = Laboratory.ID where  laboratory.ldh between 100 and 300 and examination.diagnosis > \"Normal\""
    },
    {
        "input": "Are there more male patients with creatinine not within the normal range than female? True or False?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.diagnosis from Examination join Patient on Examination.ID = Patient.ID where  patient.sex = \"M\" and examination.diagnosis != \"Normal\""
    },
    {
        "input": "Write the full names of students who received funds on the date of 9/9/2019 and include the amount received.",
        "db_id": "student_club",
        "sql": "select member.first_name , member.last_name , income.amount from income join member on income.link_to_member = member.member_id where  income.date_received = \"9/9/2019\""
    },
    {
        "input": "Name chemical elements that form a bond TR001_10_11.",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_id = \"TR001_10_11\""
    },
    {
        "input": "How many molecules without sulphur element is not having double bond?",
        "db_id": "toxicology",
        "sql": "select count(*) from atom join molecule on atom.molecule_id = molecule.molecule_id where  atom.element != \"sulphur\""
    },
    {
        "input": "List the names of schools with more than 30 difference in enrollements between K-12 and ages 5-17? Please also give the full street adress of the schools.",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "How many patients with a normal Ig A level came to the hospital after 1990/1/1?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID where  examination.diagnosis = \"Normal\" and examination.diagnosis > \"1990/1/1\""
    },
    {
        "input": "Who is the editor of the post titled 'Open source tools for visualizing multi-dimensional data?'",
        "db_id": "codebase_community",
        "sql": "select distinct users.displayname from posts join users on posts.OwnerUserId = users.Id where  posts.title = \"Open source tools for visualizing multi-dimensional data\""
    },
    {
        "input": "Calculate the average height of all neutral superheroes.",
        "db_id": "superhero",
        "sql": "select avg(superhero.height_cm) from superhero join alignment on superhero.alignment_id = alignment.id where  alignment.alignment = \"Neutral\""
    },
    {
        "input": "Among the superheroes with the super power of \"Super Strength\", how many of them have a height of over 200cm?",
        "db_id": "superhero",
        "sql": "select count(*) from hero_power join superpower on hero_power.power_id = superpower.id join superhero on hero_power.hero_id = superhero.id where  superpower.power_name = \"Super Strength\""
    },
    {
        "input": "List the football team that has a build up play speed of 31, build up plan dribbling of 53, and build up play passing of 32. Only indicate the short name of the team.",
        "db_id": "european_football_2",
        "sql": ""
    },
    {
        "input": "What's the French name of the set of cards with \"Tendo Ice Bridge\" is in?",
        "db_id": "card_games",
        "sql": "select sets.name from foreign_data join cards on foreign_data.uuid = cards.uuid join sets on foreign_data.type = sets.type where  cards.name = \"Tendo Ice Bridge\" and foreign_data.language = \"French\""
    },
    {
        "input": "What percentage of cards with format commander and legal status do not have a content warning?",
        "db_id": "card_games",
        "sql": "select avg(cards.hascontentwarning) from legalities join cards on legalities.uuid = cards.uuid where  legalities.format = \"commander\" and legalities.status = \"Legal\""
    },
    {
        "input": "In terms of number of points acquired, how many victories did the driver who ranked 91st acquired?",
        "db_id": "formula_1",
        "sql": "select driverstandings.wins from driverStandings where  driverstandings.position = 91"
    },
    {
        "input": "What percentage of cards without power are in French?",
        "db_id": "card_games",
        "sql": "select avg(cards.power) from foreign_data join cards on foreign_data.uuid = cards.uuid where  foreign_data.language = \"French\""
    },
    {
        "input": "What is the badge name that user 'SilentGhost' obtained?",
        "db_id": "codebase_community",
        "sql": "select badges.name from badges join users on badges.UserId = users.Id where  users.displayname = \"SilentGhost\""
    },
    {
        "input": "How many patients with a normal Rhuematoid Factor has a positive measure of degree of coagulation?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID where  examination.diagnosis = \"Normal\" and patient.admission >= 1"
    },
    {
        "input": "The oldest SJS patient's medical laboratory work was completed on what date, and what age was the patient when they initially arrived at the hospital?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "State the chance creation passing class for \"PEC Zwolle\" on 2013/9/20.",
        "db_id": "european_football_2",
        "sql": "select team_attributes.chancecreationpassingclass from Team_Attributes join Team on Team_Attributes.team_api_id = Team.team_api_id where  team.team_long_name = \"PEC Zwolle\" and team_attributes.date = \"2013/9/20\""
    },
    {
        "input": "Is the set of cards with Adarkar Valkyrie only available outside the United States?",
        "db_id": "card_games",
        "sql": "select cards.availability from cards where  cards.name = \"Adarkar Valkyrie\" and cards.isonlineonly != \"USA\""
    },
    {
        "input": "Was the patient a man or a women whose ALT glutamic pylvic transaminase status got 9 on 1992-6-12?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.sex from Laboratory join Patient on Laboratory.ID = Patient.ID where  patient.sex = \"M\" and laboratory.got = 9"
    },
    {
        "input": "Which user added a bounty amount of 50 to the post title mentioning variance?",
        "db_id": "codebase_community",
        "sql": "select posthistory.userdisplayname from postHistory join users on postHistory.UserId = users.Id join votes on users.Id = votes.UserId where  posthistory.comment = \"Variance\" and votes.bountyamount = 50"
    },
    {
        "input": "Among posts by Harvey Motulsky and Noah Snyder, which one has higher popularity?",
        "db_id": "codebase_community",
        "sql": ""
    },
    {
        "input": "What is the anti Cardiolipin antibody concentration of the female patient with the highest uric acid level in the normal range?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.diagnosis from Examination join Patient on Examination.ID = Patient.ID where  patient.sex = \"F\"   order by examination.diagnosis desc limit 1"
    },
    {
        "input": "What are the elements of the toxicology and label of molecule TR060?",
        "db_id": "toxicology",
        "sql": "select atom.element , molecule.label from atom join molecule on atom.molecule_id = molecule.molecule_id where  molecule.molecule_id = \"TR060\""
    },
    {
        "input": "What is the complete address of the school with the lowest excellence rate? Indicate the Street, City, Zip and State.",
        "db_id": "california_schools",
        "sql": "select schools.streetabr , schools.city , schools.zip , schools.state from satscores join schools on satscores.cds = schools.CDSCode   order by satscores.enroll12 asc limit 1"
    },
    {
        "input": "What is the score and the link type ID for post ID 395?",
        "db_id": "codebase_community",
        "sql": "select posts.score , postlinks.linktypeid from postLinks join posts on postLinks.RelatedPostId = posts.Id where  posts.score = 395"
    },
    {
        "input": "Please list the product description of the products consumed in September, 2013.",
        "db_id": "debit_card_specializing",
        "sql": ""
    },
    {
        "input": "Please list top three molecules that have single bonds between two atoms and are not carcinogenic in alphabetical order.",
        "db_id": "toxicology",
        "sql": "select molecule.molecule_id from bond join molecule on bond.molecule_id = molecule.molecule_id where  bond.bond_type = \"Single\"   except select bond.molecule_id from bond where  bond.bond_type = \"carcinogenic\"   order by molecule.molecule_id asc"
    },
    {
        "input": "What is the owner user id of the most valuable post?",
        "db_id": "codebase_community",
        "sql": "select posts.owneruserid from posts   order by posts.score desc limit 1"
    },
    {
        "input": "What is the owner user id of the most valuable post?",
        "db_id": "codebase_community",
        "sql": "select posts.owneruserid from posts   order by posts.score desc limit 1"
    },
    {
        "input": "Provide the hero name and race of Charles Chandler.",
        "db_id": "superhero",
        "sql": "select superhero.superhero_name , race.race from superhero join race on superhero.race_id = race.id where  superhero.full_name = \"Charles Chandler\""
    },
    {
        "input": "List the football team that has a build up play speed of 31, build up plan dribbling of 53, and build up play passing of 32. Only indicate the short name of the team.",
        "db_id": "european_football_2",
        "sql": ""
    },
    {
        "input": "What is the ratio of Hydrogen elements in molecule ID TR006? List the ratio with its label.",
        "db_id": "toxicology",
        "sql": "select atom.element , molecule.label from atom join molecule on atom.molecule_id = molecule.molecule_id where  molecule.molecule_id = \"TR006\""
    },
    {
        "input": "For all the set of cards that has Japanese translation, what is the percentage of them are only available in non-foil?",
        "db_id": "card_games",
        "sql": "select cards.availability from cards join set_translations on cards.id = set_translations.id where  set_translations.language = \"Japanese\""
    },
    {
        "input": "Which constructor scored most points from Monaco Grand Prix between 1980 and 2010? List the score, name and nationality of this team.",
        "db_id": "formula_1",
        "sql": "select constructors.name , constructors.nationality from constructorStandings join constructors on constructorStandings.constructorId = constructors.constructorId join races on constructorStandings.raceId = races.raceId where  races.year between 1980 and 2010 and constructorstandings.points = \"Monaco Grand Prix\""
    },
    {
        "input": "Please list the product description of the products consumed in September, 2013.",
        "db_id": "debit_card_specializing",
        "sql": ""
    },
    {
        "input": "Which home team had lost the fewest matches in the 2016 season?",
        "db_id": "european_football_2",
        "sql": "select match.home_team_api_id from Match where  match.season = 2016  group by match.home_team_api_id  order by count(*) asc limit 1"
    },
    {
        "input": "The oldest SJS patient's medical laboratory work was completed on what date, and what age was the patient when they initially arrived at the hospital?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "Is the set of cards with Adarkar Valkyrie only available outside the United States?",
        "db_id": "card_games",
        "sql": "select cards.availability from cards where  cards.name = \"Adarkar Valkyrie\" and cards.isonlineonly != \"USA\""
    },
    {
        "input": "For the players who had a 77 points overall rating on 2016/6/23, who was the oldest? Give the name of the player.",
        "db_id": "european_football_2",
        "sql": "select player.player_name from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player_attributes.overall_rating = 77   order by player.birthday desc limit 1"
    },
    {
        "input": "How many superheroes with blonde hair are there?",
        "db_id": "superhero",
        "sql": "select count(*) from superhero join colour on superhero.skin_colour_id = colour.id where  colour.colour = \"Blume\""
    },
    {
        "input": "Provide the ID and age of patient with lactate dehydrogenase (LDH) between 100-300 index above the normal range.",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.id , patient.birthday from Examination join Patient on Examination.ID = Patient.ID join Laboratory on Patient.ID = Laboratory.ID where  laboratory.ldh between 100 and 300 and examination.diagnosis > \"Normal\""
    },
    {
        "input": "In 2012, who had the least consumption in LAM?",
        "db_id": "debit_card_specializing",
        "sql": "select yearmonth.customerid , yearmonth.consumption from yearmonth join customers on yearmonth.CustomerID = customers.CustomerID where  customers.segment = \"LAM\"   order by yearmonth.consumption asc limit 1"
    },
    {
        "input": "Under whose administration is the school with the highest number of students scoring 1500 or more on the SAT? Indicate their full names.",
        "db_id": "california_schools",
        "sql": "select schools.admlname1 from satscores join schools on satscores.cds = schools.CDSCode where  satscores.numge1500 >= 1500  group by schools.admlname1  order by count(*) desc limit 1"
    },
    {
        "input": "What kind of currency did the customer paid at 16:25:00 in 2012/8/24?",
        "db_id": "debit_card_specializing",
        "sql": ""
    },
    {
        "input": "Which constructor scored most points from Monaco Grand Prix between 1980 and 2010? List the score, name and nationality of this team.",
        "db_id": "formula_1",
        "sql": "select constructors.name , constructors.nationality from constructorStandings join constructors on constructorStandings.constructorId = constructors.constructorId join races on constructorStandings.raceId = races.raceId where  races.year between 1980 and 2010 and constructorstandings.points = \"Monaco Grand Prix\""
    },
    {
        "input": "Write the full name of the member who spent money for water, veggie tray and supplies and include the cost of it.",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "What is the composition of element chlorine in percentage among the single bond molecules?",
        "db_id": "toxicology",
        "sql": "select atom.element , atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id  group by atom.element  order by count(*) desc limit 1"
    },
    {
        "input": "What is the average blood albumin level for female patients with a PLT greater than 400 who have been diagnosed with SLE?",
        "db_id": "thrombosis_prediction",
        "sql": "select avg(laboratory.alb) from Laboratory join Patient on Laboratory.ID = Patient.ID where  patient.sex = \"F\" and patient.diagnosis > 400 and patient.diagnosis = \"SLE\""
    },
    {
        "input": "Which country is the league Italy Serie A from?",
        "db_id": "european_football_2",
        "sql": "select league.country_id from League join Country on League.country_id = Country.id where  country.name = \"Italy\" and league.name = \"Serie A\""
    },
    {
        "input": "How many gold-eyed superheroes did Marvel Comics publish?",
        "db_id": "superhero",
        "sql": "select count(*) from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"Marvel Comics\""
    },
    {
        "input": "List the last name of the members of the club that attended the women's soccer event.",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "Between DC and Marvel Comics, which publisher has published more superheroes? Find the difference in the number of superheroes they have published.",
        "db_id": "superhero",
        "sql": "select publisher.publisher_name , count(*) from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"DC\"  group by superhero.publisher_id  intersect select publisher.publisher_name , count(*) from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"Marvel Comics\"   order by count(*) desc limit 1"
    },
    {
        "input": "Which set is not available outside of the United States and has foil cards with Japanese writing on them? Please include the set ID in your response.",
        "db_id": "card_games",
        "sql": "select sets.id from sets where  sets.isonlineonly not in (select cards.isOnlineOnly from foreign_data join cards on foreign_data.uuid = cards.uuid join sets on foreign_data.type = sets.type where  foreign_data.language = \"Japanese\"   )"
    },
    {
        "input": "For laboratory examinations take in 1984, list all patients below 50 years old with normal platelet level.",
        "db_id": "thrombosis_prediction",
        "sql": "select * from Laboratory join Patient on Laboratory.ID = Patient.ID where  patient.birthday < 50 and laboratory.date = 1984"
    },
    {
        "input": "Provide the ID and age of patient with lactate dehydrogenase (LDH) between 100-300 index above the normal range.",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.id , patient.birthday from Examination join Patient on Examination.ID = Patient.ID join Laboratory on Patient.ID = Laboratory.ID where  laboratory.ldh between 100 and 300 and examination.diagnosis > \"Normal\""
    },
    {
        "input": "How many percent of female heroes were published by Marvel Comics?",
        "db_id": "superhero",
        "sql": "select count(*) from superhero join publisher on superhero.publisher_id = publisher.id join gender on superhero.gender_id = gender.id where  gender.gender = \"Female\" and publisher.publisher_name = \"Marvel Comics\""
    },
    {
        "input": "What is the percentage of carbon in double-bond molecules?",
        "db_id": "toxicology",
        "sql": "select molecule.molecule_id , count(*) from bond join molecule on bond.molecule_id = molecule.molecule_id where  bond.bond_type = \"double\"  group by bond.molecule_id"
    },
    {
        "input": "What percentage of carcinogenic-type molecules does not contain fluorine?",
        "db_id": "toxicology",
        "sql": "select count(*) from bond join molecule on bond.molecule_id = molecule.molecule_id where  bond.bond_type != \"carcinogenic\""
    },
    {
        "input": "How much faster in percentage is the champion than the driver who finished the race last in the 2008 Australian Grand Prix?",
        "db_id": "formula_1",
        "sql": "select avg(results.fastestlapspeed) from driverStandings join drivers on driverStandings.driverId = drivers.driverId join results on drivers.driverId = results.driverId where  driverstandings.wins > (select min(driverStandings.wins) from driverStandings join races on driverStandings.raceId = races.raceId where  races.year = 2008 and races.name = \"Australian Grand Prix\"  )"
    },
    {
        "input": "List the element and bond type included in the molecule with molecule ID of TR002.",
        "db_id": "toxicology",
        "sql": "select atom.element , bond.bond_type from atom join molecule on atom.molecule_id = molecule.molecule_id join bond on molecule.molecule_id = bond.molecule_id where  molecule.molecule_id = \"TR002\""
    },
    {
        "input": "How many times was the budget in Advertisement for \"Yearly Kickoff\" meeting more than \"October Meeting\"?",
        "db_id": "student_club",
        "sql": "select count(*) from budget join event on budget.link_to_event = event.event_id where  event.event_name = \"Yearly Kickoff\" and budget.amount > \"October Meeting\""
    },
    {
        "input": "For the client who applied the biggest loan, what was his/her first amount of transaction after opened the account?",
        "db_id": "financial",
        "sql": "select loan.amount from loan   order by loan.amount desc limit 1"
    },
    {
        "input": "Which bond type accounted for the majority of the bonds found in molecule TR010 and state whether or not this molecule is carcinogenic?",
        "db_id": "toxicology",
        "sql": "select bond.bond_type from bond join molecule on bond.molecule_id = molecule.molecule_id where  molecule.molecule_id = \"TR010\"  group by bond.bond_type  order by count(*) desc limit 1"
    },
    {
        "input": "How many white bordered cards are powerful?",
        "db_id": "card_games",
        "sql": "select count(*) from cards where  cards.bordercolor = \"white\""
    },
    {
        "input": "For all the set of cards that has Japanese translation, what is the percentage of them are only available in non-foil?",
        "db_id": "card_games",
        "sql": "select cards.availability from cards join set_translations on cards.id = set_translations.id where  set_translations.language = \"Japanese\""
    },
    {
        "input": "Name the elements that comprise the atoms of bond TR001_2_4.",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_id = \"TR001_2_4\""
    },
    {
        "input": "Who is the top spending customer and how much is the average price per single item purchased by this customer? What currency was being used?",
        "db_id": "debit_card_specializing",
        "sql": ""
    },
    {
        "input": "What are the elements of the atoms of TR144_8_19?",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join atom on connected.atom_id2 = atom.atom_id where  connected.bond_id = \"TR144_8_19\""
    },
    {
        "input": "For all the set of cards that has Japanese translation, what is the percentage of them are only available in non-foil?",
        "db_id": "card_games",
        "sql": "select cards.availability from cards join set_translations on cards.id = set_translations.id where  set_translations.language = \"Japanese\""
    },
    {
        "input": "List the long name of teams with above-average build-up play passing in 2012.",
        "db_id": "european_football_2",
        "sql": "select team.team_long_name from Team_Attributes join Team on Team_Attributes.team_api_id = Team.team_api_id where  team_attributes.buildupplaypassing > (select avg(Team_Attributes.buildUpPlayPassing) from Team_Attributes where  team_attributes.date = 2012  )"
    },
    {
        "input": "Among the players with an overall rating between 60 to 65, how many players whose going to be in all of your attack moves instead of defensing?",
        "db_id": "european_football_2",
        "sql": "select count(*) from Player_Attributes where  player_attributes.overall_rating between 60 and 65"
    },
    {
        "input": "What was the growth rate of the total amount of loans across all accounts for a male client between 1996 and 1997?",
        "db_id": "financial",
        "sql": "select sum(loan.amount) from loan join account on loan.account_id = account.account_id join district on account.district_id = district.district_id join client on district.district_id = client.district_id where  client.gender >= \"M\" and loan.date between 1996 and 1997"
    },
    {
        "input": "What is the difference in the annual average consumption of the customers with the least amount of consumption paid in CZK for 2013 between SME and LAM, LAM and KAM, and KAM and SME?",
        "db_id": "debit_card_specializing",
        "sql": "select avg(yearmonth.consumption) from yearmonth join customers on yearmonth.CustomerID = customers.CustomerID where  customers.currency = \"CZK\"   order by yearmonth.consumption asc limit 1"
    },
    {
        "input": "What is the district Id of the account that placed the order with the id 33333?",
        "db_id": "financial",
        "sql": ""
    },
    {
        "input": "Tally the toxicology element of the 4th atom of each molecule that was carcinogenic.",
        "db_id": "toxicology",
        "sql": "select atom.element , count(*) from atom where  atom.element = \"carcinogenic\"  group by atom.element"
    },
    {
        "input": "What are the elements of the toxicology and label of molecule TR060?",
        "db_id": "toxicology",
        "sql": "select atom.element , molecule.label from atom join molecule on atom.molecule_id = molecule.molecule_id where  molecule.molecule_id = \"TR060\""
    },
    {
        "input": "What elements are in the TR004_8_9 bond atoms?",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_id = \"TR004_8_9\""
    },
    {
        "input": "What are the player api id of 10 heaviest players?",
        "db_id": "european_football_2",
        "sql": "select player.player_api_id from Player   order by player.weight desc limit 10"
    },
    {
        "input": "Among the patients whose total bilirubin is over the normal range, how many of them have a peripheral pattern observed in the sheet of ANA examination?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "What is the district Id of the account that placed the order with the id 33333?",
        "db_id": "financial",
        "sql": ""
    },
    {
        "input": "Was the patient a man or a women whose ALT glutamic pylvic transaminase status got 9 on 1992-6-12?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.sex from Laboratory join Patient on Laboratory.ID = Patient.ID where  patient.sex = \"M\" and laboratory.got = 9"
    },
    {
        "input": "Among all the lap records set on various circuits, what is the time for the fastest one?",
        "db_id": "formula_1",
        "sql": "select results.time from lapTimes join drivers on lapTimes.driverId = drivers.driverId join results on drivers.driverId = results.driverId   order by laptimes.time desc limit 1"
    },
    {
        "input": "Under whose administration is the school with the highest number of students scoring 1500 or more on the SAT? Indicate their full names.",
        "db_id": "california_schools",
        "sql": "select schools.admlname1 from satscores join schools on satscores.cds = schools.CDSCode where  satscores.numge1500 >= 1500  group by schools.admlname1  order by count(*) desc limit 1"
    },
    {
        "input": "What's the French name of the set of cards with \"Tendo Ice Bridge\" is in?",
        "db_id": "card_games",
        "sql": "select sets.name from foreign_data join cards on foreign_data.uuid = cards.uuid join sets on foreign_data.type = sets.type where  cards.name = \"Tendo Ice Bridge\" and foreign_data.language = \"French\""
    },
    {
        "input": "Tally the toxicology element of the 4th atom of each molecule that was carcinogenic.",
        "db_id": "toxicology",
        "sql": "select atom.element , count(*) from atom where  atom.element = \"carcinogenic\"  group by atom.element"
    },
    {
        "input": "What is the eligible free rate of the 10th and 11th schools with the highest enrolment for students in grades 1 through 12?",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "Who is the editor of the post titled 'Open source tools for visualizing multi-dimensional data?'",
        "db_id": "codebase_community",
        "sql": "select distinct users.displayname from posts join users on posts.OwnerUserId = users.Id where  posts.title = \"Open source tools for visualizing multi-dimensional data\""
    },
    {
        "input": "What elements are in a double type bond?",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_type = \"double\""
    },
    {
        "input": "Indicate the cost of posters for 'September Speaker' event.",
        "db_id": "student_club",
        "sql": "select expense.cost from expense join budget on expense.link_to_budget = budget.budget_id join event on budget.link_to_event = event.event_id where  event.event_name = \"September Speaker\""
    },
    {
        "input": "What is the anti Cardiolipin antibody concentration of the female patient with the highest uric acid level in the normal range?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.diagnosis from Examination join Patient on Examination.ID = Patient.ID where  patient.sex = \"F\"   order by examination.diagnosis desc limit 1"
    },
    {
        "input": "What is the most common illness that doctors identified among the patients whose lab work was done between 1/1/1985, and 12/31/1995?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.diagnosis from Laboratory join Patient on Laboratory.ID = Patient.ID where  laboratory.date > \"1/1/1985\" and laboratory.date < \"12/31/1995\"  group by patient.diagnosis  order by count(*) desc limit 1"
    },
    {
        "input": "What number of patients with a degree of thrombosis level 2 and ANA pattern of only S, have a level of anti-Cardiolip in antibody (IgM) 20% higher than average?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "How many cards available in paper have a positive starting maximum hand size?",
        "db_id": "card_games",
        "sql": "select count(*) from cards where  cards.availability = \"paper\"   order by cards.hand desc limit 1"
    },
    {
        "input": "Based on posts posted by Community, calculate the percentage of posts that use the R language.",
        "db_id": "codebase_community",
        "sql": "select count(*) from posts join users on posts.OwnerUserId = users.Id where  users.displayname = \"Community\" and posts.posttypeid = \"R\""
    },
    {
        "input": "List all the elements with double bond, consisted in molecule TR024.",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.molecule_id = \"TR024\" and bond.bond_type = \"double\""
    },
    {
        "input": "Which driver has the fastest lap time? Please give their forenames and surnames.",
        "db_id": "formula_1",
        "sql": "select drivers.forename , drivers.surname from results join drivers on results.driverId = drivers.driverId   order by results.fastestlaptime desc limit 1"
    },
    {
        "input": "What percentage of patients who were born in 1980 and were diagnosed with RA are women?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.sex from Patient where  patient.birthday = 1980 and patient.diagnosis = \"RA\""
    },
    {
        "input": "Which of the three segments—SME, LAM and KAM—has the biggest and lowest percentage increases in consumption paid in EUR between 2012 and 2013?",
        "db_id": "debit_card_specializing",
        "sql": "select customers.segment , customers.customerid , yearmonth.consumption from yearmonth join customers on yearmonth.CustomerID = customers.CustomerID where  customers.currency between 2012 and 2013"
    },
    {
        "input": "Give the name of the league had the most goals in the 2016 season?",
        "db_id": "european_football_2",
        "sql": "select league.name from League join Match on League.id = Match.id where  match.season = 2016  group by match.league_id  order by count(*) desc limit 1"
    },
    {
        "input": "Rank superheroes from Marvel Comics by their eye color popularity, starting with the most common color.",
        "db_id": "superhero",
        "sql": "select superhero.eye_colour_id from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"Marvel Comics\"  group by superhero.eye_colour_id  order by count(*) desc limit 1"
    },
    {
        "input": "For loans contracts which are still running where client are in debt, list the district of the and the state the percentage unemployment rate increment from year 1995 to 1996.",
        "db_id": "financial",
        "sql": "select district.a13 , avg(loan.duration) from loan join account on loan.account_id = account.account_id join district on account.district_id = district.district_id where  loan.duration >= 1995  group by district.a13"
    },
    {
        "input": "What is the annual average number of sets that were released between 1/1/2012 to 12/31/2015? Indicate the common langugage of the card.",
        "db_id": "card_games",
        "sql": ""
    },
    {
        "input": "Indicate the name of the closed event whose cost has exceeded the budget the most.",
        "db_id": "student_club",
        "sql": "select event.event_name from expense join budget on expense.link_to_budget = budget.budget_id join event on budget.link_to_event = event.event_id where  event.status = \"Closed\"  group by event.event_name  order by sum(expense.cost) desc limit 1"
    },
    {
        "input": "List all the elements of the toxicology of the molecule \"TR004\".",
        "db_id": "toxicology",
        "sql": "select atom.element from atom join molecule on atom.molecule_id = molecule.molecule_id where  molecule.molecule_id = \"TR004\""
    },
    {
        "input": "On average how many carcinogenic molecules are single bonded?",
        "db_id": "toxicology",
        "sql": "select count(*) from bond join molecule on bond.molecule_id = molecule.molecule_id where  bond.bond_type = \"Single\"  group by bond.molecule_id"
    },
    {
        "input": "Which toxic element can be found in the molecule TR151?",
        "db_id": "toxicology",
        "sql": "select atom.element from atom where  atom.molecule_id = \"TR151\""
    },
    {
        "input": "How many users are awarded with more than 5 badges?",
        "db_id": "codebase_community",
        "sql": "select count(*) from badges  group by badges.Id having  count(*) > 5"
    },
    {
        "input": "What sex is the patient who in a medical examination was diagnosed with PSS and in a laboratory examination had a blood level of C-reactive protein de 2+, createnine 1 and LDH 123?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "What is the unique id of the set that has the highest number of cards?",
        "db_id": "card_games",
        "sql": "select sets.id from cards join sets on cards.id = sets.id  group by sets.id  order by count(*) desc limit 1"
    },
    {
        "input": "List the last names of students under the Elementary Education major and include their phone numbers.",
        "db_id": "student_club",
        "sql": "select member.last_name , member.phone from member join major on member.link_to_major = major.major_id where  major.major_name = \"Elementary Education\""
    },
    {
        "input": "What is the ratio of Hydrogen elements in molecule ID TR006? List the ratio with its label.",
        "db_id": "toxicology",
        "sql": "select atom.element , molecule.label from atom join molecule on atom.molecule_id = molecule.molecule_id where  molecule.molecule_id = \"TR006\""
    },
    {
        "input": "For laboratory examinations take in 1984, list all patients below 50 years old with normal platelet level.",
        "db_id": "thrombosis_prediction",
        "sql": "select * from Laboratory join Patient on Laboratory.ID = Patient.ID where  patient.birthday < 50 and laboratory.date = 1984"
    },
    {
        "input": "Among the comments with scores between 5 to 10, what is the percentage of the users with 0 up votes?",
        "db_id": "codebase_community",
        "sql": "select users.upvotes from comments join users on comments.UserId = users.Id where  comments.score between 5 and 10"
    },
    {
        "input": "For the patient who was born on 1959/2/18, what is the decrease rate for his/her total cholesterol from November to December in 1981?",
        "db_id": "thrombosis_prediction",
        "sql": "select avg(patient.birthday) from Patient where  patient.birthday between 1959 and 1981"
    },
    {
        "input": "What is the eligible free rate of the 10th and 11th schools with the highest enrolment for students in grades 1 through 12?",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "For the patient who was diagnosed SLE on 1997/1/27, what was his/her original diagnose when he/she came to the hospital for the first time?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.diagnosis , patient.diagnosis from Patient where  patient.diagnosis = \"SLE\" and patient.admission = \"1997/1/27\""
    },
    {
        "input": "What was the difference in the number of crimes committed in East and North Bohemia in 1996?",
        "db_id": "financial",
        "sql": "select count(*) , district.a16 from district where  district.a3 = \"East\"  group by district.a16  intersect select count(*) , district.a16 from district where  district.a3 = \"North Bohemia\" and district.a16 = 1996"
    },
    {
        "input": "For the patients whose total cholesterol is higher than normal, how many of them have a negative measure of degree of coagulation?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID where  examination.diagnosis > \"Normal\""
    },
    {
        "input": "What is the unique id of the set that has the highest number of cards?",
        "db_id": "card_games",
        "sql": "select sets.id from cards join sets on cards.id = sets.id  group by sets.id  order by count(*) desc limit 1"
    },
    {
        "input": "What elements are in the TR004_8_9 bond atoms?",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_id = \"TR004_8_9\""
    },
    {
        "input": "Was the patient a man or a women whose ALT glutamic pylvic transaminase status got 9 on 1992-6-12?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.sex from Laboratory join Patient on Laboratory.ID = Patient.ID where  patient.sex = \"M\" and laboratory.got = 9"
    },
    {
        "input": "Among all the posts posted by the most influential user, identify the percentage with a score above 50.",
        "db_id": "codebase_community",
        "sql": "select posthistory.postid , count(*) from postHistory join posts on postHistory.PostId = posts.Id where  posts.score > 50  group by posthistory.postid  order by count(*) desc limit 1"
    },
    {
        "input": "How many superheroes with blonde hair are there?",
        "db_id": "superhero",
        "sql": "select count(*) from superhero join colour on superhero.skin_colour_id = colour.id where  colour.colour = \"Blume\""
    },
    {
        "input": "Name chemical elements that form a bond TR001_10_11.",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_id = \"TR001_10_11\""
    },
    {
        "input": "Among the patients whose total bilirubin is over the normal range, how many of them have a peripheral pattern observed in the sheet of ANA examination?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "List the superheroes from Marvel Comics who have the super power of 'Super Strength'.",
        "db_id": "superhero",
        "sql": "select superhero.superhero_name from hero_power join superpower on hero_power.power_id = superpower.id join superhero on hero_power.hero_id = superhero.id join publisher on superhero.publisher_id = publisher.id where  superpower.power_name = \"Super Strength\" and publisher.publisher_name = \"Marvel Comics\""
    },
    {
        "input": "Which top 20 driver created the shortest lap time ever record in a Formula_1 race? Please give them full names.",
        "db_id": "formula_1",
        "sql": "select drivers.surname , drivers.forename from lapTimes join drivers on lapTimes.driverId = drivers.driverId   order by laptimes.milliseconds asc limit 20"
    },
    {
        "input": "Mention the category of events which were held at MU 215.",
        "db_id": "student_club",
        "sql": "select budget.category from budget join event on budget.link_to_event = event.event_id where  event.location = \"MU 215\""
    },
    {
        "input": "What is the percentage of the cards with a converted mana cost of 7 in the set Coldsnap?",
        "db_id": "card_games",
        "sql": "select count(*) from cards join sets on cards.id = sets.id where  cards.convertedmanacost = 7 and sets.name = \"Coldsnap\""
    },
    {
        "input": "Describe the display name of the parent ID for child post with the highest score.",
        "db_id": "codebase_community",
        "sql": "select users.displayname from posts join users on posts.OwnerUserId = users.Id   order by posts.score desc limit 1"
    },
    {
        "input": "List all the elements of atoms that can not bond with any other atoms.",
        "db_id": "toxicology",
        "sql": "select atom.element from atom where  atom.atom_id not in (select connected.atom_id2 from connected  )"
    },
    {
        "input": "What is the score and the link type ID for post ID 395?",
        "db_id": "codebase_community",
        "sql": "select posts.score , postlinks.linktypeid from postLinks join posts on postLinks.RelatedPostId = posts.Id where  posts.score = 395"
    },
    {
        "input": "What is the average fastest lap time of the top 10 drivers in the 2006 United States Grand Prix?",
        "db_id": "formula_1",
        "sql": "select avg(results.fastestlaptime) from lapTimes join races on lapTimes.raceId = races.raceId join results on races.raceId = results.raceId where  races.year = 2006   order by laptimes.time desc limit 10"
    },
    {
        "input": "On what year did the youngest driver had his first qualifying race? Also state the name, date and time of the race.",
        "db_id": "formula_1",
        "sql": "select races.year , races.name , races.time from driverStandings join drivers on driverStandings.driverId = drivers.driverId join races on driverStandings.raceId = races.raceId   order by drivers.dob asc limit 1"
    },
    {
        "input": "How many patients have a normal level of anti-ribonuclear protein and have been admitted to the hospital?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID where  examination.diagnosis = \"Normal\" and patient.admission = \"Hospital\""
    },
    {
        "input": "What is the bond type of TR007_4_19?",
        "db_id": "toxicology",
        "sql": "select bond.bond_type from bond where  bond.bond_id = \"TR007_4_19\""
    },
    {
        "input": "What is the average fastest lap time in seconds for Lewis Hamilton in all the Formula_1 races?",
        "db_id": "formula_1",
        "sql": "select avg(laptimes.milliseconds) from lapTimes join drivers on lapTimes.driverId = drivers.driverId where  drivers.forename = \"Lewis\" and drivers.surname = \"Formula_1\""
    },
    {
        "input": "Rank superheroes from Marvel Comics by their eye color popularity, starting with the most common color.",
        "db_id": "superhero",
        "sql": "select superhero.eye_colour_id from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"Marvel Comics\"  group by superhero.eye_colour_id  order by count(*) desc limit 1"
    },
    {
        "input": "List the elements of all the triple bonds.",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_type like \"3%\""
    },
    {
        "input": "What is the percentage of cards whose language is French among the Story Spotlight cards?",
        "db_id": "card_games",
        "sql": "select count(*) from foreign_data join cards on foreign_data.uuid = cards.uuid where  foreign_data.language = \"French\""
    },
    {
        "input": "What is the comment's rating score of the post which was created on 7/19/2010 7:19:56 PM",
        "db_id": "codebase_community",
        "sql": "select comments.score from comments where  comments.creationdate = \"2010-07-19\""
    },
    {
        "input": "What are the elements of the toxicology and label of molecule TR060?",
        "db_id": "toxicology",
        "sql": "select atom.element , molecule.label from atom join molecule on atom.molecule_id = molecule.molecule_id where  molecule.molecule_id = \"TR060\""
    },
    {
        "input": "Which superhero has the same eyes, hair and skin colour? Indicate the publisher of the superhero.",
        "db_id": "superhero",
        "sql": "select publisher.publisher_name from superhero join publisher on superhero.publisher_id = publisher.id"
    },
    {
        "input": "Among the bad superheroes, what is the percentage of female superheroes?",
        "db_id": "superhero",
        "sql": "select alignment.alignment , count(*) from superhero join gender on superhero.gender_id = gender.id join alignment on superhero.alignment_id = alignment.id where  gender.gender = \"Female\"  group by alignment.alignment"
    },
    {
        "input": "For the patient who was diagnosed SLE on 1997/1/27, what was his/her original diagnose when he/she came to the hospital for the first time?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.diagnosis , patient.diagnosis from Patient where  patient.diagnosis = \"SLE\" and patient.admission = \"1997/1/27\""
    },
    {
        "input": "In superheroes with missing weight data, calculate the difference between the number of superheroes with blue eyes and no eye color.",
        "db_id": "superhero",
        "sql": "select count(*) from superhero where  superhero.weight_kg = \"Blue\" and superhero.eye_colour_id != \"No\""
    },
    {
        "input": "What is the unique id of the set that has the highest number of cards?",
        "db_id": "card_games",
        "sql": "select sets.id from cards join sets on cards.id = sets.id  group by sets.id  order by count(*) desc limit 1"
    },
    {
        "input": "Calculate the difference in the percentage of members in New Jersey and Vermont.",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "What is the percentage of the cards with a converted mana cost of 7 in the set Coldsnap?",
        "db_id": "card_games",
        "sql": "select count(*) from cards join sets on cards.id = sets.id where  cards.convertedmanacost = 7 and sets.name = \"Coldsnap\""
    },
    {
        "input": "How many gold-eyed superheroes did Marvel Comics publish?",
        "db_id": "superhero",
        "sql": "select count(*) from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"Marvel Comics\""
    },
    {
        "input": "At present, calculate for the player's age who have a sprint speed of no less than 97 between 2013 to 2015.",
        "db_id": "european_football_2",
        "sql": "select * from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player_attributes.sprint_speed between 2013 and 2015"
    },
    {
        "input": "Which country is the league Italy Serie A from?",
        "db_id": "european_football_2",
        "sql": "select league.country_id from League join Country on League.country_id = Country.id where  country.name = \"Italy\" and league.name = \"Serie A\""
    },
    {
        "input": "Please list the ID of the patient whose RF is normal and who is older than 60.",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.id from Examination join Patient on Examination.ID = Patient.ID where  examination.diagnosis = \"Normal\" and patient.birthday > 60"
    },
    {
        "input": "Among the patients with the normal level of triglyceride, how many of them have other symptoms observed?",
        "db_id": "thrombosis_prediction",
        "sql": "select count( distinct examination.symptoms) from Examination where  examination.diagnosis = \"Normal\""
    },
    {
        "input": "What is the percentage of superheroes who act in their own self-interest or make decisions based on their own moral code? Indicate how many of the said superheroes were published by Marvel Comics.",
        "db_id": "superhero",
        "sql": "select count(*) from hero_attribute join superhero on hero_attribute.hero_id = superhero.id join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"Marvel Comics\" or hero_attribute.attribute_value = \"self-interest\""
    },
    {
        "input": "Paul di Resta was in the No. 853 race, what percent faster did he finish in the 853rd race than the next race for the fastest lap speed?",
        "db_id": "formula_1",
        "sql": "select results.fastestlapspeed from results join drivers on results.driverId = drivers.driverId where  drivers.forename = \"Paul\"   order by results.fastestlapspeed desc limit 1"
    },
    {
        "input": "For the year that concluded on December 31, 1998, how many male patients on average were tested in the lab each month?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) , avg(patient.sex) , laboratory.date from Laboratory join Patient on Laboratory.ID = Patient.ID where  patient.sex = \"M\"  group by laboratory.date"
    },
    {
        "input": "What is the description about the ruling of card \"Condemn\"?",
        "db_id": "card_games",
        "sql": "select rulings.text from rulings join cards on rulings.uuid = cards.uuid where  cards.name = \"Condemn\""
    },
    {
        "input": "What is the highest eligible free rate for K-12 students in the schools in Alameda County?",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "What is the football player Francois Affolter header's finishing rate on 18/09/2014?",
        "db_id": "european_football_2",
        "sql": "select player_attributes.finishing from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.player_name = \"Francois Affolter\" and player_attributes.date = \"18/09/2014\""
    },
    {
        "input": "Please calculate the race completion percentage of Japanese drivers from 2007 to 2009.",
        "db_id": "formula_1",
        "sql": "select results.driverid from results join drivers on results.driverId = drivers.driverId join races on results.raceId = races.raceId where  drivers.nationality = \"Japanese\" and races.year between 2007 and 2009"
    },
    {
        "input": "Which post has the highest score? Please give its id and title's name.",
        "db_id": "codebase_community",
        "sql": "select posts.id , posts.title from posts   order by posts.score desc limit 1"
    },
    {
        "input": "What is the percentage of blue female superheroes among all female superheroes?",
        "db_id": "superhero",
        "sql": "select colour.colour , count(*) from superhero join colour on superhero.skin_colour_id = colour.id join gender on superhero.gender_id = gender.id where  gender.gender = \"Female\"  group by colour.colour"
    },
    {
        "input": "What is the percentage difference of student badges given during 2010 and 2011?",
        "db_id": "codebase_community",
        "sql": "select avg(badges.date) from badges where  badges.date between 2010 and 2011"
    },
    {
        "input": "Which superhero has the most durability published by Dark Horse Comics?",
        "db_id": "superhero",
        "sql": "select superhero.superhero_name from hero_power join superpower on hero_power.power_id = superpower.id join superhero on hero_power.hero_id = superhero.id join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"Dark Horse Comics\"   order by superpower.power_name desc limit 1"
    },
    {
        "input": "What was the difference in the number of crimes committed in East and North Bohemia in 1996?",
        "db_id": "financial",
        "sql": "select count(*) , district.a16 from district where  district.a3 = \"East\"  group by district.a16  intersect select count(*) , district.a16 from district where  district.a3 = \"North Bohemia\" and district.a16 = 1996"
    },
    {
        "input": "Among the patients who has a normal level of anti-centromere and a normal level of anti-SSB, how many of them are male?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Laboratory join Patient on Laboratory.ID = Patient.ID where  patient.sex = \"M\" and laboratory.centromea = \"Normal\" and laboratory.ssb = \"SSB\""
    },
    {
        "input": "Which user added a bounty amount of 50 to the post title mentioning variance?",
        "db_id": "codebase_community",
        "sql": "select posthistory.userdisplayname from postHistory join users on postHistory.UserId = users.Id join votes on users.Id = votes.UserId where  posthistory.comment = \"Variance\" and votes.bountyamount = 50"
    },
    {
        "input": "Show the Simplified Chinese translation of the name of the set \"Mirrodin\"?",
        "db_id": "card_games",
        "sql": "select set_translations.translation from set_translations join sets on set_translations.setCode = sets.code where  sets.name = \"Mirrodin\" and set_translations.language = \"Chinese\""
    },
    {
        "input": "For the teams with normal build-up play dribbling class in 2014, List the names of the teams with less than average chance creation passing, in descending order of chance creation passing.",
        "db_id": "european_football_2",
        "sql": "select team.team_long_name from Team_Attributes join Team on Team_Attributes.team_api_id = Team.team_api_id where  team_attributes.chancecreationpassing < (select avg(Team_Attributes.chanceCreationPassing) from Team_Attributes where  team_attributes.date = 2014  )    order by team_attributes.chancecreationpassing desc"
    },
    {
        "input": "List the names of schools with more than 30 difference in enrollements between K-12 and ages 5-17? Please also give the full street adress of the schools.",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "How many drivers managed to finish the race in the 2008 Australian Grand Prix?",
        "db_id": "formula_1",
        "sql": "select count( distinct results.driverid) from results join races on results.raceId = races.raceId where  races.year = 2008 and races.name = \"Australian Grand Prix\""
    },
    {
        "input": "What is the average time in seconds of champion for each year, before year 1975?",
        "db_id": "formula_1",
        "sql": "select avg(laptimes.milliseconds) , races.year from lapTimes join races on lapTimes.raceId = races.raceId where  races.year < 1975  group by races.year"
    },
    {
        "input": "What elements are in a double type bond?",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_type = \"double\""
    },
    {
        "input": "For the client whose loan was approved first in 1993/7/5, what is the increase rate of his/her account balance from 1993/3/22 to 1998/12/27?",
        "db_id": "financial",
        "sql": ""
    },
    {
        "input": "Among the patients whose creatinine level is abnormal, how many of them aren't 70 yet?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Laboratory join Patient on Laboratory.ID = Patient.ID where  laboratory.sc170 >= 70"
    },
    {
        "input": "Which driver ranked the first in the Canadian Grand Prix in 2007? Please give his reference name.",
        "db_id": "formula_1",
        "sql": "select drivers.driverref from results join drivers on results.driverId = drivers.driverId join races on results.raceId = races.raceId where  races.year = 2007   order by results.rank desc limit 1"
    },
    {
        "input": "What elements are in the TR004_8_9 bond atoms?",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_id = \"TR004_8_9\""
    },
    {
        "input": "What was the fastest lap speed among all drivers in the 2009 Spanish Grand Prix?",
        "db_id": "formula_1",
        "sql": "select max(results.fastestlapspeed) from results join races on results.raceId = races.raceId where  races.year = 2009 and races.name = \"Spanish Grand Prix\""
    },
    {
        "input": "How many patients with a normal Ig A level came to the hospital after 1990/1/1?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID where  examination.diagnosis = \"Normal\" and examination.diagnosis > \"1990/1/1\""
    },
    {
        "input": "What percentage of carcinogenic-type molecules does not contain fluorine?",
        "db_id": "toxicology",
        "sql": "select count(*) from bond join molecule on bond.molecule_id = molecule.molecule_id where  bond.bond_type != \"carcinogenic\""
    },
    {
        "input": "What was the chance creation crossing class for \"Hull City\" on 2010/2/22?",
        "db_id": "european_football_2",
        "sql": "select team_attributes.chancecreationcrossingclass from Team_Attributes where  team_attributes.date = \"2010/2/22\""
    },
    {
        "input": "What number of patients with a degree of thrombosis level 2 and ANA pattern of only S, have a level of anti-Cardiolip in antibody (IgM) 20% higher than average?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "What are the valid e-mail addresses of the administrator of the school located in the San Bernardino county, City of San Bernardino City Unified that opened between 1/1/2009 to 12/31/2010 whose school types are public Intermediate/Middle Schools and Unified Schools?",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "How many elements are contained in bond_id TR001_3_4?",
        "db_id": "toxicology",
        "sql": "select count(*) from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_id = \"TR001_3_4\""
    },
    {
        "input": "What is the average fastest lap time of the top 10 drivers in the 2006 United States Grand Prix?",
        "db_id": "formula_1",
        "sql": "select avg(results.fastestlaptime) from lapTimes join races on lapTimes.raceId = races.raceId join results on races.raceId = results.raceId where  races.year = 2006   order by laptimes.time desc limit 10"
    },
    {
        "input": "What was the chance creation crossing class for \"Hull City\" on 2010/2/22?",
        "db_id": "european_football_2",
        "sql": "select team_attributes.chancecreationcrossingclass from Team_Attributes where  team_attributes.date = \"2010/2/22\""
    },
    {
        "input": "What is the district Id of the account that placed the order with the id 33333?",
        "db_id": "financial",
        "sql": ""
    },
    {
        "input": "Based on posts posted by Community, calculate the percentage of posts that use the R language.",
        "db_id": "codebase_community",
        "sql": "select count(*) from posts join users on posts.OwnerUserId = users.Id where  users.displayname = \"Community\" and posts.posttypeid = \"R\""
    },
    {
        "input": "Which top 20 driver created the shortest lap time ever record in a Formula_1 race? Please give them full names.",
        "db_id": "formula_1",
        "sql": "select drivers.surname , drivers.forename from lapTimes join drivers on lapTimes.driverId = drivers.driverId   order by laptimes.milliseconds asc limit 20"
    },
    {
        "input": "How many superheroes with blonde hair are there?",
        "db_id": "superhero",
        "sql": "select count(*) from superhero join colour on superhero.skin_colour_id = colour.id where  colour.colour = \"Blume\""
    },
    {
        "input": "Among the patients with the normal level of triglyceride, how many of them have other symptoms observed?",
        "db_id": "thrombosis_prediction",
        "sql": "select count( distinct examination.symptoms) from Examination where  examination.diagnosis = \"Normal\""
    },
    {
        "input": "List the skin colour of the superheroes with 100 attribute value.",
        "db_id": "superhero",
        "sql": "select superhero.skin_colour_id from hero_attribute join superhero on hero_attribute.hero_id = superhero.id where  hero_attribute.attribute_value = 100"
    },
    {
        "input": "How was the build up play dribbling class for \"LEI\" on 2015/9/10?",
        "db_id": "european_football_2",
        "sql": "select team_attributes.buildupplaydribblingclass from Team_Attributes join Team on Team_Attributes.team_api_id = Team.team_api_id join Match on Team.team_api_id = Match.away_team_api_id where  team.team_short_name = \"LEI\" and match.date = \"2015/9/10\""
    },
    {
        "input": "How many molecules without sulphur element is not having double bond?",
        "db_id": "toxicology",
        "sql": "select count(*) from atom join molecule on atom.molecule_id = molecule.molecule_id where  atom.element != \"sulphur\""
    },
    {
        "input": "For laboratory examinations take in 1984, list all patients below 50 years old with normal platelet level.",
        "db_id": "thrombosis_prediction",
        "sql": "select * from Laboratory join Patient on Laboratory.ID = Patient.ID where  patient.birthday < 50 and laboratory.date = 1984"
    },
    {
        "input": "How many patients with a normal Ig A level came to the hospital after 1990/1/1?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID where  examination.diagnosis = \"Normal\" and examination.diagnosis > \"1990/1/1\""
    },
    {
        "input": "What is the percentage of blue female superheroes among all female superheroes?",
        "db_id": "superhero",
        "sql": "select colour.colour , count(*) from superhero join colour on superhero.skin_colour_id = colour.id join gender on superhero.gender_id = gender.id where  gender.gender = \"Female\"  group by colour.colour"
    },
    {
        "input": "List all the football player with the highest potential score.",
        "db_id": "european_football_2",
        "sql": "select distinct player.player_name from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id   order by player_attributes.potential desc limit 1"
    },
    {
        "input": "For the client whose loan was approved first in 1993/7/5, what is the increase rate of his/her account balance from 1993/3/22 to 1998/12/27?",
        "db_id": "financial",
        "sql": ""
    },
    {
        "input": "What is the score and the link type ID for post ID 395?",
        "db_id": "codebase_community",
        "sql": "select posts.score , postlinks.linktypeid from postLinks join posts on postLinks.RelatedPostId = posts.Id where  posts.score = 395"
    },
    {
        "input": "Among all the lap records set on various circuits, what is the time for the fastest one?",
        "db_id": "formula_1",
        "sql": "select results.time from lapTimes join drivers on lapTimes.driverId = drivers.driverId join results on drivers.driverId = results.driverId   order by laptimes.time desc limit 1"
    },
    {
        "input": "Which of the three segments—SME, LAM and KAM—has the biggest and lowest percentage increases in consumption paid in EUR between 2012 and 2013?",
        "db_id": "debit_card_specializing",
        "sql": "select customers.segment , customers.customerid , yearmonth.consumption from yearmonth join customers on yearmonth.CustomerID = customers.CustomerID where  customers.currency between 2012 and 2013"
    },
    {
        "input": "How many patients who were examined between 1987/7/6 and 1996/1/31 had a GPT level greater than 30 and an ALB level less than 4? List them by their ID.",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "List all the elements with double bond, consisted in molecule TR024.",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.molecule_id = \"TR024\" and bond.bond_type = \"double\""
    },
    {
        "input": "Is the set of cards with Adarkar Valkyrie only available outside the United States?",
        "db_id": "card_games",
        "sql": "select cards.availability from cards where  cards.name = \"Adarkar Valkyrie\" and cards.isonlineonly != \"USA\""
    },
    {
        "input": "From 2000 to 2005, what percentage of drivers who were born before 1985 and the lap numbers were over 50?",
        "db_id": "formula_1",
        "sql": "select drivers.number from drivers where  drivers.dob < 1985 and drivers.number > 50"
    },
    {
        "input": "What are the elements of the atoms of TR144_8_19?",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join atom on connected.atom_id2 = atom.atom_id where  connected.bond_id = \"TR144_8_19\""
    },
    {
        "input": "Which district has highest active loan?",
        "db_id": "financial",
        "sql": "select district.a2 from loan join account on loan.account_id = account.account_id join district on account.district_id = district.district_id  group by account.district_id  order by sum(loan.amount) desc limit 1"
    },
    {
        "input": "Among the bad superheroes, what is the percentage of female superheroes?",
        "db_id": "superhero",
        "sql": "select alignment.alignment , count(*) from superhero join gender on superhero.gender_id = gender.id join alignment on superhero.alignment_id = alignment.id where  gender.gender = \"Female\"  group by alignment.alignment"
    },
    {
        "input": "How many bonds which involved atom 12 does molecule TR009 have?",
        "db_id": "toxicology",
        "sql": "select count(*) from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  atom.molecule_id = \"TR009\""
    },
    {
        "input": "Please calculate the race completion percentage of Japanese drivers from 2007 to 2009.",
        "db_id": "formula_1",
        "sql": "select results.driverid from results join drivers on results.driverId = drivers.driverId join races on results.raceId = races.raceId where  drivers.nationality = \"Japanese\" and races.year between 2007 and 2009"
    },
    {
        "input": "For all cards illustrated by Jim Pavelec. and describe the text of the ruling of these cards. Do these cards have missing or degraded properties and values.",
        "db_id": "card_games",
        "sql": "select rulings.text from rulings join cards on rulings.uuid = cards.uuid where  cards.artist = \"Jim Pavelec\" or rulings.text = \"No\""
    },
    {
        "input": "At present, calculate for the player's age who have a sprint speed of no less than 97 between 2013 to 2015.",
        "db_id": "european_football_2",
        "sql": "select * from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player_attributes.sprint_speed between 2013 and 2015"
    },
    {
        "input": "List all the football player with the highest potential score.",
        "db_id": "european_football_2",
        "sql": "select distinct player.player_name from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id   order by player_attributes.potential desc limit 1"
    },
    {
        "input": "Provide the heights of the heroes whose eye colours are amber.",
        "db_id": "superhero",
        "sql": "select superhero.height_cm from superhero join colour on superhero.skin_colour_id = colour.id where  colour.colour = \"Amber\""
    },
    {
        "input": "List all patients who were followed up at the outpatient clinic who underwent a laboratory test in October 1991 and had a total blood bilirubin level within the normal range.",
        "db_id": "thrombosis_prediction",
        "sql": "select distinct patient.id from Examination join Patient on Examination.ID = Patient.ID join Laboratory on Patient.ID = Laboratory.ID where  examination.diagnosis = \"Normal\" and laboratory.date = 1991"
    },
    {
        "input": "Consider the average difference between K-12 enrollment and 15-17 enrollment of schools that are locally funded, list the names and DOC type of schools which has a difference above this average.",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "How often does account number 3 request an account statement to be released? What was the aim of debiting 3539 in total?",
        "db_id": "financial",
        "sql": ""
    },
    {
        "input": "What elements are in a double type bond?",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_type = \"double\""
    },
    {
        "input": "Rank superheroes from Marvel Comics by their eye color popularity, starting with the most common color.",
        "db_id": "superhero",
        "sql": "select superhero.eye_colour_id from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"Marvel Comics\"  group by superhero.eye_colour_id  order by count(*) desc limit 1"
    },
    {
        "input": "How many molecules without sulphur element is not having double bond?",
        "db_id": "toxicology",
        "sql": "select count(*) from atom join molecule on atom.molecule_id = molecule.molecule_id where  atom.element != \"sulphur\""
    },
    {
        "input": "What is the annual average number of sets that were released between 1/1/2012 to 12/31/2015? Indicate the common langugage of the card.",
        "db_id": "card_games",
        "sql": ""
    },
    {
        "input": "List the last name of the members of the club that attended the women's soccer event.",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "What sex is the patient who in a medical examination was diagnosed with PSS and in a laboratory examination had a blood level of C-reactive protein de 2+, createnine 1 and LDH 123?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "For the client whose loan was approved first in 1993/7/5, what is the increase rate of his/her account balance from 1993/3/22 to 1998/12/27?",
        "db_id": "financial",
        "sql": ""
    },
    {
        "input": "What is the ratio of Hydrogen elements in molecule ID TR006? List the ratio with its label.",
        "db_id": "toxicology",
        "sql": "select atom.element , molecule.label from atom join molecule on atom.molecule_id = molecule.molecule_id where  molecule.molecule_id = \"TR006\""
    },
    {
        "input": "Which element is the least numerous in non-carcinogenic molecules?",
        "db_id": "toxicology",
        "sql": "select atom.element from atom where  atom.molecule_id = \"non-carcinogenic\"  group by atom.element  order by count(*) asc limit 1"
    },
    {
        "input": "How often does account number 3 request an account statement to be released? What was the aim of debiting 3539 in total?",
        "db_id": "financial",
        "sql": ""
    },
    {
        "input": "How many white bordered cards are powerful?",
        "db_id": "card_games",
        "sql": "select count(*) from cards where  cards.bordercolor = \"white\""
    },
    {
        "input": "List the superheroes from Marvel Comics who have the super power of 'Super Strength'.",
        "db_id": "superhero",
        "sql": "select superhero.superhero_name from hero_power join superpower on hero_power.power_id = superpower.id join superhero on hero_power.hero_id = superhero.id join publisher on superhero.publisher_id = publisher.id where  superpower.power_name = \"Super Strength\" and publisher.publisher_name = \"Marvel Comics\""
    },
    {
        "input": "How many elements are contained in bond_id TR001_3_4?",
        "db_id": "toxicology",
        "sql": "select count(*) from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_id = \"TR001_3_4\""
    },
    {
        "input": "Which district has highest active loan?",
        "db_id": "financial",
        "sql": "select district.a2 from loan join account on loan.account_id = account.account_id join district on account.district_id = district.district_id  group by account.district_id  order by sum(loan.amount) desc limit 1"
    },
    {
        "input": "What is the average number of bonds the atoms with the element iodine have?",
        "db_id": "toxicology",
        "sql": "select avg(bond.bond_type) from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  atom.element = \"iodine\""
    },
    {
        "input": "Which of the three segments—SME, LAM and KAM—has the biggest and lowest percentage increases in consumption paid in EUR between 2012 and 2013?",
        "db_id": "debit_card_specializing",
        "sql": "select customers.segment , customers.customerid , yearmonth.consumption from yearmonth join customers on yearmonth.CustomerID = customers.CustomerID where  customers.currency between 2012 and 2013"
    },
    {
        "input": "Name the atoms' elements that form bond TR000_2_3.",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_id = \"TR000_2_3\""
    },
    {
        "input": "What was the growth rate of the total amount of loans across all accounts for a male client between 1996 and 1997?",
        "db_id": "financial",
        "sql": "select sum(loan.amount) from loan join account on loan.account_id = account.account_id join district on account.district_id = district.district_id join client on district.district_id = client.district_id where  client.gender >= \"M\" and loan.date between 1996 and 1997"
    },
    {
        "input": "How many superheroes with blonde hair are there?",
        "db_id": "superhero",
        "sql": "select count(*) from superhero join colour on superhero.skin_colour_id = colour.id where  colour.colour = \"Blume\""
    },
    {
        "input": "How long did it take after patient number 821298 arrived at the hospital for the first time before her evaluation began?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "List the skin colour of the superheroes with 100 attribute value.",
        "db_id": "superhero",
        "sql": "select superhero.skin_colour_id from hero_attribute join superhero on hero_attribute.hero_id = superhero.id where  hero_attribute.attribute_value = 100"
    },
    {
        "input": "Which driver ranked the first in the Canadian Grand Prix in 2007? Please give his reference name.",
        "db_id": "formula_1",
        "sql": "select drivers.driverref from results join drivers on results.driverId = drivers.driverId join races on results.raceId = races.raceId where  races.year = 2007   order by results.rank desc limit 1"
    },
    {
        "input": "Who are the players that tend to be attacking when their mates were doing attack moves? List down their name.",
        "db_id": "european_football_2",
        "sql": "select distinct player.player_name from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id join Match on Player.player_api_id = Match.away_player_11   order by player_attributes.attacking_work_rate asc limit 1"
    },
    {
        "input": "Find the triple-bonded molecules which are carcinogenic.",
        "db_id": "toxicology",
        "sql": "select molecule.molecule_id from connected join bond on connected.bond_id = bond.bond_id join molecule on bond.molecule_id = molecule.molecule_id where  bond.bond_type = \"triple\" and connected.atom_id in (select connected.atom_id from connected join bond on connected.bond_id = bond.bond_id join molecule on bond.molecule_id = molecule.molecule_id   order by molecule.molecule_id desc limit 1 )"
    },
    {
        "input": "For laboratory examinations take in 1984, list all patients below 50 years old with normal platelet level.",
        "db_id": "thrombosis_prediction",
        "sql": "select * from Laboratory join Patient on Laboratory.ID = Patient.ID where  patient.birthday < 50 and laboratory.date = 1984"
    },
    {
        "input": "For patients with abnormal platelet level, state the number of patients with lower than normal range. How is it compare to the number of patients with higher than normal range?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "What was the growth rate of the total amount of loans across all accounts for a male client between 1996 and 1997?",
        "db_id": "financial",
        "sql": "select sum(loan.amount) from loan join account on loan.account_id = account.account_id join district on account.district_id = district.district_id join client on district.district_id = client.district_id where  client.gender >= \"M\" and loan.date between 1996 and 1997"
    },
    {
        "input": "What is the publisher's name of Blue Beetle II?",
        "db_id": "superhero",
        "sql": "select publisher.publisher_name from superhero join publisher on superhero.publisher_id = publisher.id where  superhero.superhero_name = \"Blue Beetle\""
    },
    {
        "input": "For the year that concluded on December 31, 1998, how many male patients on average were tested in the lab each month?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) , avg(patient.sex) , laboratory.date from Laboratory join Patient on Laboratory.ID = Patient.ID where  patient.sex = \"M\"  group by laboratory.date"
    },
    {
        "input": "What is the percentage of superheroes who act in their own self-interest or make decisions based on their own moral code? Indicate how many of the said superheroes were published by Marvel Comics.",
        "db_id": "superhero",
        "sql": "select count(*) from hero_attribute join superhero on hero_attribute.hero_id = superhero.id join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"Marvel Comics\" or hero_attribute.attribute_value = \"self-interest\""
    },
    {
        "input": "For the customer who paid 634.8 in 2012/8/25, what was the consumption decrease rate from Year 2012 to 2013?",
        "db_id": "debit_card_specializing",
        "sql": "select yearmonth.consumption from yearmonth where  yearmonth.consumption between 2012 and 2013"
    },
    {
        "input": "For the patients whose total cholesterol is higher than normal, how many of them have a negative measure of degree of coagulation?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID where  examination.diagnosis > \"Normal\""
    },
    {
        "input": "What is the badge name that user 'SilentGhost' obtained?",
        "db_id": "codebase_community",
        "sql": "select badges.name from badges join users on badges.UserId = users.Id where  users.displayname = \"SilentGhost\""
    },
    {
        "input": "In terms of number of points acquired, how many victories did the driver who ranked 91st acquired?",
        "db_id": "formula_1",
        "sql": "select driverstandings.wins from driverStandings where  driverstandings.position = 91"
    },
    {
        "input": "Describe the display name of the parent ID for child post with the highest score.",
        "db_id": "codebase_community",
        "sql": "select users.displayname from posts join users on posts.OwnerUserId = users.Id   order by posts.score desc limit 1"
    },
    {
        "input": "List all the elements with double bond, consisted in molecule TR024.",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.molecule_id = \"TR024\" and bond.bond_type = \"double\""
    },
    {
        "input": "How many patients have a normal level of anti-ribonuclear protein and have been admitted to the hospital?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID where  examination.diagnosis = \"Normal\" and patient.admission = \"Hospital\""
    },
    {
        "input": "Which of these artists have designed a card in the set Coldsnap, Jeremy Jarvis, Aaron Miller or Chippy?",
        "db_id": "card_games",
        "sql": "select cards.artist from cards join sets on cards.id = sets.id where  sets.name = \"Coldsnap\" or sets.name = \"Aaron Miller\" or sets.name = \"Chippy\""
    },
    {
        "input": "For the teams with normal build-up play dribbling class in 2014, List the names of the teams with less than average chance creation passing, in descending order of chance creation passing.",
        "db_id": "european_football_2",
        "sql": "select team.team_long_name from Team_Attributes join Team on Team_Attributes.team_api_id = Team.team_api_id where  team_attributes.chancecreationpassing < (select avg(Team_Attributes.chanceCreationPassing) from Team_Attributes where  team_attributes.date = 2014  )    order by team_attributes.chancecreationpassing desc"
    },
    {
        "input": "For all patients who are older than 55 years old, what is the percentage of female who has abnormal prothrombin time (PT)?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.sex , count(*) from Patient where  patient.sex > 55  group by patient.sex"
    },
    {
        "input": "Among posts by Harvey Motulsky and Noah Snyder, which one has higher popularity?",
        "db_id": "codebase_community",
        "sql": ""
    },
    {
        "input": "Name chemical elements that form a bond TR001_10_11.",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_id = \"TR001_10_11\""
    },
    {
        "input": "How much faster in percentage is the champion than the driver who finished the race last in the 2008 Australian Grand Prix?",
        "db_id": "formula_1",
        "sql": "select avg(results.fastestlapspeed) from driverStandings join drivers on driverStandings.driverId = drivers.driverId join results on drivers.driverId = results.driverId where  driverstandings.wins > (select min(driverStandings.wins) from driverStandings join races on driverStandings.raceId = races.raceId where  races.year = 2008 and races.name = \"Australian Grand Prix\"  )"
    },
    {
        "input": "List down at least five full names of superheroes with blue eyes.",
        "db_id": "superhero",
        "sql": "select superhero.full_name from superhero join colour on superhero.skin_colour_id = colour.id where  colour.colour = \"Blue\""
    },
    {
        "input": "Who is the editor of the post titled 'Open source tools for visualizing multi-dimensional data?'",
        "db_id": "codebase_community",
        "sql": "select distinct users.displayname from posts join users on posts.OwnerUserId = users.Id where  posts.title = \"Open source tools for visualizing multi-dimensional data\""
    },
    {
        "input": "Which district has highest active loan?",
        "db_id": "financial",
        "sql": "select district.a2 from loan join account on loan.account_id = account.account_id join district on account.district_id = district.district_id  group by account.district_id  order by sum(loan.amount) desc limit 1"
    },
    {
        "input": "Which driver ranked the first in the Canadian Grand Prix in 2007? Please give his reference name.",
        "db_id": "formula_1",
        "sql": "select drivers.driverref from results join drivers on results.driverId = drivers.driverId join races on results.raceId = races.raceId where  races.year = 2007   order by results.rank desc limit 1"
    },
    {
        "input": "List down top 3 German drivers who has the shortest average pit stop duration and were born between 1980-1985.",
        "db_id": "formula_1",
        "sql": "select drivers.surname , drivers.driverid from pitStops join drivers on pitStops.driverId = drivers.driverId where  drivers.nationality = \"German\"  group by drivers.driverid  order by avg(pitstops.duration) asc limit 3"
    },
    {
        "input": "Which driver ranked the first in the Canadian Grand Prix in 2007? Please give his reference name.",
        "db_id": "formula_1",
        "sql": "select drivers.driverref from results join drivers on results.driverId = drivers.driverId join races on results.raceId = races.raceId where  races.year = 2007   order by results.rank desc limit 1"
    },
    {
        "input": "List down top 3 German drivers who has the shortest average pit stop duration and were born between 1980-1985.",
        "db_id": "formula_1",
        "sql": "select drivers.surname , drivers.driverid from pitStops join drivers on pitStops.driverId = drivers.driverId where  drivers.nationality = \"German\"  group by drivers.driverid  order by avg(pitstops.duration) asc limit 3"
    },
    {
        "input": "What percentage of male patients who first presented to the hospital in 1981 were diagnosed with BEHCET?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "What kind of currency did the customer paid at 16:25:00 in 2012/8/24?",
        "db_id": "debit_card_specializing",
        "sql": ""
    },
    {
        "input": "Write the full name of the member who spent money for water, veggie tray and supplies and include the cost of it.",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "What is the percentage of the cards with a converted mana cost of 7 in the set Coldsnap?",
        "db_id": "card_games",
        "sql": "select count(*) from cards join sets on cards.id = sets.id where  cards.convertedmanacost = 7 and sets.name = \"Coldsnap\""
    },
    {
        "input": "For the teams with normal build-up play dribbling class in 2014, List the names of the teams with less than average chance creation passing, in descending order of chance creation passing.",
        "db_id": "european_football_2",
        "sql": "select team.team_long_name from Team_Attributes join Team on Team_Attributes.team_api_id = Team.team_api_id where  team_attributes.chancecreationpassing < (select avg(Team_Attributes.chanceCreationPassing) from Team_Attributes where  team_attributes.date = 2014  )    order by team_attributes.chancecreationpassing desc"
    },
    {
        "input": "How many users are awarded with more than 5 badges?",
        "db_id": "codebase_community",
        "sql": "select count(*) from badges  group by badges.Id having  count(*) > 5"
    },
    {
        "input": "How many students of the Student_Club have attended the event \"Women's Soccer\"?",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "Which constructor scored most points from Monaco Grand Prix between 1980 and 2010? List the score, name and nationality of this team.",
        "db_id": "formula_1",
        "sql": "select constructors.name , constructors.nationality from constructorStandings join constructors on constructorStandings.constructorId = constructors.constructorId join races on constructorStandings.raceId = races.raceId where  races.year between 1980 and 2010 and constructorstandings.points = \"Monaco Grand Prix\""
    },
    {
        "input": "Name the elements that comprise the atoms of bond TR001_2_4.",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_id = \"TR001_2_4\""
    },
    {
        "input": "How many drivers managed to finish the race in the 2008 Australian Grand Prix?",
        "db_id": "formula_1",
        "sql": "select count( distinct results.driverid) from results join races on results.raceId = races.raceId where  races.year = 2008 and races.name = \"Australian Grand Prix\""
    },
    {
        "input": "What are the elements for bond id TR001_10_11?",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_id = \"TR001_10_11\""
    },
    {
        "input": "List all the elements of atoms that can not bond with any other atoms.",
        "db_id": "toxicology",
        "sql": "select atom.element from atom where  atom.atom_id not in (select connected.atom_id2 from connected  )"
    },
    {
        "input": "Indicate the cost of posters for 'September Speaker' event.",
        "db_id": "student_club",
        "sql": "select expense.cost from expense join budget on expense.link_to_budget = budget.budget_id join event on budget.link_to_event = event.event_id where  event.event_name = \"September Speaker\""
    },
    {
        "input": "What is the average index of the lactate dehydrogenase (LDH) for all patients with lactate dehydrogenase (LDH) within the normal range.",
        "db_id": "thrombosis_prediction",
        "sql": "select avg(laboratory.ldh) from Examination join Patient on Examination.ID = Patient.ID join Laboratory on Patient.ID = Laboratory.ID where  examination.diagnosis = \"Normal\""
    },
    {
        "input": "For loans contracts which are still running where client are in debt, list the district of the and the state the percentage unemployment rate increment from year 1995 to 1996.",
        "db_id": "financial",
        "sql": "select district.a13 , avg(loan.duration) from loan join account on loan.account_id = account.account_id join district on account.district_id = district.district_id where  loan.duration >= 1995  group by district.a13"
    },
    {
        "input": "Give the full name and contact number of members who had to spend more than average on each expense.",
        "db_id": "student_club",
        "sql": "select member.first_name , member.last_name , member.phone from expense join member on expense.link_to_member = member.member_id where  expense.cost > (select avg(expense.cost) from expense  )"
    },
    {
        "input": "List the names of schools with more than 30 difference in enrollements between K-12 and ages 5-17? Please also give the full street adress of the schools.",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "On average how many carcinogenic molecules are single bonded?",
        "db_id": "toxicology",
        "sql": "select count(*) from bond join molecule on bond.molecule_id = molecule.molecule_id where  bond.bond_type = \"Single\"  group by bond.molecule_id"
    },
    {
        "input": "What is the average height of a non-human superhero in Dark Horse Comics?",
        "db_id": "superhero",
        "sql": "select avg(superhero.height_cm) from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name != \"Dark Horse Comics\""
    },
    {
        "input": "List all patients who were followed up at the outpatient clinic who underwent a laboratory test in October 1991 and had a total blood bilirubin level within the normal range.",
        "db_id": "thrombosis_prediction",
        "sql": "select distinct patient.id from Examination join Patient on Examination.ID = Patient.ID join Laboratory on Patient.ID = Laboratory.ID where  examination.diagnosis = \"Normal\" and laboratory.date = 1991"
    },
    {
        "input": "Which country is the league Italy Serie A from?",
        "db_id": "european_football_2",
        "sql": "select league.country_id from League join Country on League.country_id = Country.id where  country.name = \"Italy\" and league.name = \"Serie A\""
    },
    {
        "input": "List the last names of students under the Elementary Education major and include their phone numbers.",
        "db_id": "student_club",
        "sql": "select member.last_name , member.phone from member join major on member.link_to_major = major.major_id where  major.major_name = \"Elementary Education\""
    },
    {
        "input": "What was the difference in the number of crimes committed in East and North Bohemia in 1996?",
        "db_id": "financial",
        "sql": "select count(*) , district.a16 from district where  district.a3 = \"East\"  group by district.a16  intersect select count(*) , district.a16 from district where  district.a3 = \"North Bohemia\" and district.a16 = 1996"
    },
    {
        "input": "Please list top three elements of the toxicology of the molecule TR000 in alphabetical order.",
        "db_id": "toxicology",
        "sql": "select atom.element from atom where  atom.molecule_id = \"TR000\"   order by atom.element desc limit 3"
    },
    {
        "input": "Name the atoms' elements that form bond TR000_2_3.",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_id = \"TR000_2_3\""
    },
    {
        "input": "What is the average index of the lactate dehydrogenase (LDH) for all patients with lactate dehydrogenase (LDH) within the normal range.",
        "db_id": "thrombosis_prediction",
        "sql": "select avg(laboratory.ldh) from Examination join Patient on Examination.ID = Patient.ID join Laboratory on Patient.ID = Laboratory.ID where  examination.diagnosis = \"Normal\""
    },
    {
        "input": "Based on posts posted by Community, calculate the percentage of posts that use the R language.",
        "db_id": "codebase_community",
        "sql": "select count(*) from posts join users on posts.OwnerUserId = users.Id where  users.displayname = \"Community\" and posts.posttypeid = \"R\""
    },
    {
        "input": "List all the elements of the toxicology of the molecule \"TR004\".",
        "db_id": "toxicology",
        "sql": "select atom.element from atom join molecule on atom.molecule_id = molecule.molecule_id where  molecule.molecule_id = \"TR004\""
    },
    {
        "input": "What percentage of carcinogenic-type molecules does not contain fluorine?",
        "db_id": "toxicology",
        "sql": "select count(*) from bond join molecule on bond.molecule_id = molecule.molecule_id where  bond.bond_type != \"carcinogenic\""
    },
    {
        "input": "Among the cards whose version of frame style is 1997, what is the status of the card illustrated by D. Alexander Gregory in legacy play format that has sensitive content or Wizards of the Coast?",
        "db_id": "card_games",
        "sql": "select legalities.status from legalities join cards on legalities.uuid = cards.uuid where  cards.frameversion = 1997 and cards.artist = \"D. Alexander Gregory\"   union select legalities.status from legalities where  legalities.format = \"traditional\""
    },
    {
        "input": "Describe the display name of the parent ID for child post with the highest score.",
        "db_id": "codebase_community",
        "sql": "select users.displayname from posts join users on posts.OwnerUserId = users.Id   order by posts.score desc limit 1"
    },
    {
        "input": "Name chemical elements that form a bond TR001_10_11.",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_id = \"TR001_10_11\""
    },
    {
        "input": "What are the elements of the atoms of TR144_8_19?",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join atom on connected.atom_id2 = atom.atom_id where  connected.bond_id = \"TR144_8_19\""
    },
    {
        "input": "What was the growth rate of the total amount of loans across all accounts for a male client between 1996 and 1997?",
        "db_id": "financial",
        "sql": "select sum(loan.amount) from loan join account on loan.account_id = account.account_id join district on account.district_id = district.district_id join client on district.district_id = client.district_id where  client.gender >= \"M\" and loan.date between 1996 and 1997"
    },
    {
        "input": "State the chance creation passing class for \"PEC Zwolle\" on 2013/9/20.",
        "db_id": "european_football_2",
        "sql": "select team_attributes.chancecreationpassingclass from Team_Attributes join Team on Team_Attributes.team_api_id = Team.team_api_id where  team.team_long_name = \"PEC Zwolle\" and team_attributes.date = \"2013/9/20\""
    },
    {
        "input": "What is the difference of the average ball control score between Abdou Diallo and Aaron Appindangoye\n?",
        "db_id": "european_football_2",
        "sql": "select avg(player_attributes.ball_control) from Player_Attributes where  player_attributes.player_api_id in (select Player.player_api_id from Player where  player.player_name = \"Abdou Diallo\"   intersect select Player.player_api_id from Player where  player.player_name = \"Aaron Appindangoye\"   )"
    },
    {
        "input": "What is the mana cost of cards with a normal layout, a 2003 frame version, with a black border color, and available in paper and mtgo?",
        "db_id": "card_games",
        "sql": "select cards.manacost from cards where  cards.layout = \"normal\" and cards.frameversion = \"2003\" and cards.bordercolor = \"black\" and cards.availability = \"mtgo\""
    },
    {
        "input": "How many times was the budget in Advertisement for \"Yearly Kickoff\" meeting more than \"October Meeting\"?",
        "db_id": "student_club",
        "sql": "select count(*) from budget join event on budget.link_to_event = event.event_id where  event.event_name = \"Yearly Kickoff\" and budget.amount > \"October Meeting\""
    },
    {
        "input": "Find the triple-bonded molecules which are carcinogenic.",
        "db_id": "toxicology",
        "sql": "select molecule.molecule_id from connected join bond on connected.bond_id = bond.bond_id join molecule on bond.molecule_id = molecule.molecule_id where  bond.bond_type = \"triple\" and connected.atom_id in (select connected.atom_id from connected join bond on connected.bond_id = bond.bond_id join molecule on bond.molecule_id = molecule.molecule_id   order by molecule.molecule_id desc limit 1 )"
    },
    {
        "input": "Among all superheroes created by George Lucas, identify the percentage of female superheroes.",
        "db_id": "superhero",
        "sql": "select superhero.superhero_name , count(*) from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"George Lucas\"  group by superhero.gender_id"
    },
    {
        "input": "How many percent of female heroes were published by Marvel Comics?",
        "db_id": "superhero",
        "sql": "select count(*) from superhero join publisher on superhero.publisher_id = publisher.id join gender on superhero.gender_id = gender.id where  gender.gender = \"Female\" and publisher.publisher_name = \"Marvel Comics\""
    },
    {
        "input": "What percentage of male patients who first presented to the hospital in 1981 were diagnosed with BEHCET?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "Show the Simplified Chinese translation of the name of the set \"Mirrodin\"?",
        "db_id": "card_games",
        "sql": "select set_translations.translation from set_translations join sets on set_translations.setCode = sets.code where  sets.name = \"Mirrodin\" and set_translations.language = \"Chinese\""
    },
    {
        "input": "What is the publisher's name of Blue Beetle II?",
        "db_id": "superhero",
        "sql": "select publisher.publisher_name from superhero join publisher on superhero.publisher_id = publisher.id where  superhero.superhero_name = \"Blue Beetle\""
    },
    {
        "input": "Provide the hero name and race of Charles Chandler.",
        "db_id": "superhero",
        "sql": "select superhero.superhero_name , race.race from superhero join race on superhero.race_id = race.id where  superhero.full_name = \"Charles Chandler\""
    },
    {
        "input": "What is the constructor reference name of the champion in the 2009 Singapore Grand Prix? Please give its website.",
        "db_id": "formula_1",
        "sql": "select constructors.name from constructorResults join constructors on constructorResults.constructorId = constructors.constructorId join races on constructorResults.raceId = races.raceId where  races.year = 2009 and races.name = \"Singapore Grand Prix\""
    },
    {
        "input": "Among the patients who have a normal platelet level, how many of them have other symptoms observed?",
        "db_id": "thrombosis_prediction",
        "sql": "select count( distinct examination.symptoms) from Examination where  examination.diagnosis = \"Normal\""
    },
    {
        "input": "List the last names of students under the Elementary Education major and include their phone numbers.",
        "db_id": "student_club",
        "sql": "select member.last_name , member.phone from member join major on member.link_to_major = major.major_id where  major.major_name = \"Elementary Education\""
    },
    {
        "input": "For the client whose loan was approved first in 1993/7/5, what is the increase rate of his/her account balance from 1993/3/22 to 1998/12/27?",
        "db_id": "financial",
        "sql": ""
    },
    {
        "input": "In the race a driver set the lap record for the Austrian Grand Prix Circuit, how long did he spent at the pit stop at that same race?",
        "db_id": "formula_1",
        "sql": "select pitstops.duration from pitStops join races on pitStops.raceId = races.raceId where  races.name = \"Austrian Grand Prix\"   order by pitstops.duration desc limit 1"
    },
    {
        "input": "What is the percentage of the cards with a converted mana cost of 7 in the set Coldsnap?",
        "db_id": "card_games",
        "sql": "select count(*) from cards join sets on cards.id = sets.id where  cards.convertedmanacost = 7 and sets.name = \"Coldsnap\""
    },
    {
        "input": "How often does account number 3 request an account statement to be released? What was the aim of debiting 3539 in total?",
        "db_id": "financial",
        "sql": ""
    },
    {
        "input": "For patients with abnormal platelet level, state the number of patients with lower than normal range. How is it compare to the number of patients with higher than normal range?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "Who is the editor of the post titled 'Open source tools for visualizing multi-dimensional data?'",
        "db_id": "codebase_community",
        "sql": "select distinct users.displayname from posts join users on posts.OwnerUserId = users.Id where  posts.title = \"Open source tools for visualizing multi-dimensional data\""
    },
    {
        "input": "Among the patients whose total bilirubin is over the normal range, how many of them have a peripheral pattern observed in the sheet of ANA examination?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "What was the final score for the match on September 24, 2008, in the Belgian Jupiler League between the home team and the away team?",
        "db_id": "european_football_2",
        "sql": "select match.home_team_goal from Match where  match.date = \"2008-09-24\" and match.away_team_goal = \"home\""
    },
    {
        "input": "How many patients with a normal Ig A level came to the hospital after 1990/1/1?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID where  examination.diagnosis = \"Normal\" and examination.diagnosis > \"1990/1/1\""
    },
    {
        "input": "Among all the lap records set on various circuits, what is the time for the fastest one?",
        "db_id": "formula_1",
        "sql": "select results.time from lapTimes join drivers on lapTimes.driverId = drivers.driverId join results on drivers.driverId = results.driverId   order by laptimes.time desc limit 1"
    },
    {
        "input": "In terms of number of points acquired, how many victories did the driver who ranked 91st acquired?",
        "db_id": "formula_1",
        "sql": "select driverstandings.wins from driverStandings where  driverstandings.position = 91"
    },
    {
        "input": "Among the players with an overall rating between 60 to 65, how many players whose going to be in all of your attack moves instead of defensing?",
        "db_id": "european_football_2",
        "sql": "select count(*) from Player_Attributes where  player_attributes.overall_rating between 60 and 65"
    },
    {
        "input": "Among the superheroes with the super power of \"Super Strength\", how many of them have a height of over 200cm?",
        "db_id": "superhero",
        "sql": "select count(*) from hero_power join superpower on hero_power.power_id = superpower.id join superhero on hero_power.hero_id = superhero.id where  superpower.power_name = \"Super Strength\""
    },
    {
        "input": "Which publisher created more superheroes: DC or Marvel Comics? Find the difference in the number of superheroes.",
        "db_id": "superhero",
        "sql": "select count(*) from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"DC\" or publisher.publisher_name = \"Marvel Comics\""
    },
    {
        "input": "How many users are awarded with more than 5 badges?",
        "db_id": "codebase_community",
        "sql": "select count(*) from badges  group by badges.Id having  count(*) > 5"
    },
    {
        "input": "For the patients whose total cholesterol is higher than normal, how many of them have a negative measure of degree of coagulation?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID where  examination.diagnosis > \"Normal\""
    },
    {
        "input": "Provide the heights of the heroes whose eye colours are amber.",
        "db_id": "superhero",
        "sql": "select superhero.height_cm from superhero join colour on superhero.skin_colour_id = colour.id where  colour.colour = \"Amber\""
    },
    {
        "input": "What is the percentage difference of student badges given during 2010 and 2011?",
        "db_id": "codebase_community",
        "sql": "select avg(badges.date) from badges where  badges.date between 2010 and 2011"
    },
    {
        "input": "What percentage of cards with format commander and legal status do not have a content warning?",
        "db_id": "card_games",
        "sql": "select avg(cards.hascontentwarning) from legalities join cards on legalities.uuid = cards.uuid where  legalities.format = \"commander\" and legalities.status = \"Legal\""
    },
    {
        "input": "When was the first time did Kevin Constant have his highest crossing score? Give the date.",
        "db_id": "european_football_2",
        "sql": "select player_attributes.date from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.player_name = \"Kevin Constant\"   order by player_attributes.crossing desc limit 1"
    },
    {
        "input": "Provide the ID and age of patient with lactate dehydrogenase (LDH) between 100-300 index above the normal range.",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.id , patient.birthday from Examination join Patient on Examination.ID = Patient.ID join Laboratory on Patient.ID = Laboratory.ID where  laboratory.ldh between 100 and 300 and examination.diagnosis > \"Normal\""
    },
    {
        "input": "What number of patients with a degree of thrombosis level 2 and ANA pattern of only S, have a level of anti-Cardiolip in antibody (IgM) 20% higher than average?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "Calculate the difference in the percentage of members in New Jersey and Vermont.",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "Which molecules have triple bonds and list all the elements they contain.",
        "db_id": "toxicology",
        "sql": "select molecule.molecule_id , atom.element from atom join molecule on atom.molecule_id = molecule.molecule_id join bond on molecule.molecule_id = bond.molecule_id where  bond.bond_type = \"triple\""
    },
    {
        "input": "Who are the players that tend to be attacking when their mates were doing attack moves? List down their name.",
        "db_id": "european_football_2",
        "sql": "select distinct player.player_name from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id join Match on Player.player_api_id = Match.away_player_11   order by player_attributes.attacking_work_rate asc limit 1"
    },
    {
        "input": "For all the female patient age 50 and above, who has abnormal red blood cell count. State if they were admitted to hospital.",
        "db_id": "thrombosis_prediction",
        "sql": "select * from Patient where  patient.sex = \"F\" and patient.admission >= 50 and patient.sex = \"F\""
    },
    {
        "input": "For patients with abnormal platelet level, state the number of patients with lower than normal range. How is it compare to the number of patients with higher than normal range?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "Based on posts posted by Community, calculate the percentage of posts that use the R language.",
        "db_id": "codebase_community",
        "sql": "select count(*) from posts join users on posts.OwnerUserId = users.Id where  users.displayname = \"Community\" and posts.posttypeid = \"R\""
    },
    {
        "input": "Among the patients whose creatinine level is abnormal, how many of them aren't 70 yet?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Laboratory join Patient on Laboratory.ID = Patient.ID where  laboratory.sc170 >= 70"
    },
    {
        "input": "How much faster in percentage is the champion than the driver who finished the race last in the 2008 Australian Grand Prix?",
        "db_id": "formula_1",
        "sql": "select avg(results.fastestlapspeed) from driverStandings join drivers on driverStandings.driverId = drivers.driverId join results on drivers.driverId = results.driverId where  driverstandings.wins > (select min(driverStandings.wins) from driverStandings join races on driverStandings.raceId = races.raceId where  races.year = 2008 and races.name = \"Australian Grand Prix\"  )"
    },
    {
        "input": "What are the player api id of 10 heaviest players?",
        "db_id": "european_football_2",
        "sql": "select player.player_api_id from Player   order by player.weight desc limit 10"
    },
    {
        "input": "What percentage of carcinogenic-type molecules does not contain fluorine?",
        "db_id": "toxicology",
        "sql": "select count(*) from bond join molecule on bond.molecule_id = molecule.molecule_id where  bond.bond_type != \"carcinogenic\""
    },
    {
        "input": "What is the description about the ruling of card \"Condemn\"?",
        "db_id": "card_games",
        "sql": "select rulings.text from rulings join cards on rulings.uuid = cards.uuid where  cards.name = \"Condemn\""
    },
    {
        "input": "How many matches in the 2015/2016 season were held in Scotland Premier League\n?",
        "db_id": "european_football_2",
        "sql": "select count(*) from League join Match on League.id = Match.id where  match.season = \"2015/2016\" and league.name = \"Scotland Premier League\""
    },
    {
        "input": "State the chance creation passing class for \"PEC Zwolle\" on 2013/9/20.",
        "db_id": "european_football_2",
        "sql": "select team_attributes.chancecreationpassingclass from Team_Attributes join Team on Team_Attributes.team_api_id = Team.team_api_id where  team.team_long_name = \"PEC Zwolle\" and team_attributes.date = \"2013/9/20\""
    },
    {
        "input": "Name the atoms' elements that form bond TR000_2_3.",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_id = \"TR000_2_3\""
    },
    {
        "input": "What is the percentage difference of student badges given during 2010 and 2011?",
        "db_id": "codebase_community",
        "sql": "select avg(badges.date) from badges where  badges.date between 2010 and 2011"
    },
    {
        "input": "What is the average blood albumin level for female patients with a PLT greater than 400 who have been diagnosed with SLE?",
        "db_id": "thrombosis_prediction",
        "sql": "select avg(laboratory.alb) from Laboratory join Patient on Laboratory.ID = Patient.ID where  patient.sex = \"F\" and patient.diagnosis > 400 and patient.diagnosis = \"SLE\""
    },
    {
        "input": "Among all the posts posted by the most influential user, identify the percentage with a score above 50.",
        "db_id": "codebase_community",
        "sql": "select posthistory.postid , count(*) from postHistory join posts on postHistory.PostId = posts.Id where  posts.score > 50  group by posthistory.postid  order by count(*) desc limit 1"
    },
    {
        "input": "In which years did Lewis Hamilton participate in a Formula_1 race?",
        "db_id": "formula_1",
        "sql": "select races.year from driverStandings join drivers on driverStandings.driverId = drivers.driverId join races on driverStandings.raceId = races.raceId where  drivers.forename = \"Lewis\" and drivers.surname = \"Formula_1\""
    },
    {
        "input": "Which element is the least numerous in non-carcinogenic molecules?",
        "db_id": "toxicology",
        "sql": "select atom.element from atom where  atom.molecule_id = \"non-carcinogenic\"  group by atom.element  order by count(*) asc limit 1"
    },
    {
        "input": "What elements are in a double type bond?",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_type = \"double\""
    },
    {
        "input": "Who is the editor of the post titled 'Open source tools for visualizing multi-dimensional data?'",
        "db_id": "codebase_community",
        "sql": "select distinct users.displayname from posts join users on posts.OwnerUserId = users.Id where  posts.title = \"Open source tools for visualizing multi-dimensional data\""
    },
    {
        "input": "For the patient who was diagnosed SLE on 1997/1/27, what was his/her original diagnose when he/she came to the hospital for the first time?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.diagnosis , patient.diagnosis from Patient where  patient.diagnosis = \"SLE\" and patient.admission = \"1997/1/27\""
    },
    {
        "input": "Indicate the cost of posters for 'September Speaker' event.",
        "db_id": "student_club",
        "sql": "select expense.cost from expense join budget on expense.link_to_budget = budget.budget_id join event on budget.link_to_event = event.event_id where  event.event_name = \"September Speaker\""
    },
    {
        "input": "The oldest SJS patient's medical laboratory work was completed on what date, and what age was the patient when they initially arrived at the hospital?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "What is the mana cost of cards with a normal layout, a 2003 frame version, with a black border color, and available in paper and mtgo?",
        "db_id": "card_games",
        "sql": "select cards.manacost from cards where  cards.layout = \"normal\" and cards.frameversion = \"2003\" and cards.bordercolor = \"black\" and cards.availability = \"mtgo\""
    },
    {
        "input": "Determine the bond type that is formed in the chemical compound containing element Carbon.",
        "db_id": "toxicology",
        "sql": "select bond.bond_type from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  atom.element = \"Carbon\""
    },
    {
        "input": "Tally the toxicology element of the 4th atom of each molecule that was carcinogenic.",
        "db_id": "toxicology",
        "sql": "select atom.element , count(*) from atom where  atom.element = \"carcinogenic\"  group by atom.element"
    },
    {
        "input": "What is the constructor reference name of the champion in the 2009 Singapore Grand Prix? Please give its website.",
        "db_id": "formula_1",
        "sql": "select constructors.name from constructorResults join constructors on constructorResults.constructorId = constructors.constructorId join races on constructorResults.raceId = races.raceId where  races.year = 2009 and races.name = \"Singapore Grand Prix\""
    },
    {
        "input": "Indicate the name of the closed event whose cost has exceeded the budget the most.",
        "db_id": "student_club",
        "sql": "select event.event_name from expense join budget on expense.link_to_budget = budget.budget_id join event on budget.link_to_event = event.event_id where  event.status = \"Closed\"  group by event.event_name  order by sum(expense.cost) desc limit 1"
    },
    {
        "input": "What is the difference in the annual average consumption of the customers with the least amount of consumption paid in CZK for 2013 between SME and LAM, LAM and KAM, and KAM and SME?",
        "db_id": "debit_card_specializing",
        "sql": "select avg(yearmonth.consumption) from yearmonth join customers on yearmonth.CustomerID = customers.CustomerID where  customers.currency = \"CZK\"   order by yearmonth.consumption asc limit 1"
    },
    {
        "input": "What was the chance creation crossing class for \"Hull City\" on 2010/2/22?",
        "db_id": "european_football_2",
        "sql": "select team_attributes.chancecreationcrossingclass from Team_Attributes where  team_attributes.date = \"2010/2/22\""
    },
    {
        "input": "Among the male patients who have a normal level of white blood cells, how many of them have an abnormal fibrinogen level?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID where  patient.sex = \"M\" and examination.diagnosis = \"Normal\""
    },
    {
        "input": "What was the average overall rating for Marko Arnautovic from 2007/2/22 to 2016/4/21?",
        "db_id": "european_football_2",
        "sql": "select avg(player_attributes.overall_rating) from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.player_name = \"Marko Arnautovic\" and player_attributes.date > \"2007/2/22\" and player_attributes.date < \"2016/4/21\""
    },
    {
        "input": "Please list the superhero names of all the superheroes that have blue eyes and blond hair.",
        "db_id": "superhero",
        "sql": "select superhero.superhero_name from superhero join colour on superhero.skin_colour_id = colour.id where  colour.colour = \"Blue\"   intersect select superhero.superhero_name from superhero join colour on superhero.skin_colour_id = colour.id where  colour.colour = \"Blend\""
    },
    {
        "input": "Among the male patients who have a normal level of white blood cells, how many of them have an abnormal fibrinogen level?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID where  patient.sex = \"M\" and examination.diagnosis = \"Normal\""
    },
    {
        "input": "Please list the lap records for the circuits in Italy.",
        "db_id": "formula_1",
        "sql": "select laptimes.lap from lapTimes join races on lapTimes.raceId = races.raceId join circuits on races.circuitId = circuits.circuitId where  circuits.country = \"Italy\""
    },
    {
        "input": "What is the annual average number of sets that were released between 1/1/2012 to 12/31/2015? Indicate the common langugage of the card.",
        "db_id": "card_games",
        "sql": ""
    },
    {
        "input": "Which county reported the most number of school closure in the 1980s with school wonership code belonging to Youth Authority Facilities (CEA)?",
        "db_id": "california_schools",
        "sql": "select schools.county from schools where  schools.soctype = \"Youth Authority Facilities\"  group by schools.county  order by count(*) desc limit 1"
    },
    {
        "input": "For all the set of cards that has Brazil Portuguese translation, what is the percentage of them are only available online?",
        "db_id": "card_games",
        "sql": "select cards.availability from set_translations join sets on set_translations.setCode = sets.code join cards on sets.isOnlineOnly = cards.isOnlineOnly where  set_translations.translation = \"Brazil\" and sets.isonlineonly = \"online\""
    },
    {
        "input": "Determine the bond type that is formed in the chemical compound containing element Carbon.",
        "db_id": "toxicology",
        "sql": "select bond.bond_type from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  atom.element = \"Carbon\""
    },
    {
        "input": "When was the first time did Kevin Constant have his highest crossing score? Give the date.",
        "db_id": "european_football_2",
        "sql": "select player_attributes.date from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.player_name = \"Kevin Constant\"   order by player_attributes.crossing desc limit 1"
    },
    {
        "input": "Provide the ID and age of patient with lactate dehydrogenase (LDH) between 100-300 index above the normal range.",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.id , patient.birthday from Examination join Patient on Examination.ID = Patient.ID join Laboratory on Patient.ID = Laboratory.ID where  laboratory.ldh between 100 and 300 and examination.diagnosis > \"Normal\""
    },
    {
        "input": "List the names of schools with more than 30 difference in enrollements between K-12 and ages 5-17? Please also give the full street adress of the schools.",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "What was the difference in the number of crimes committed in East and North Bohemia in 1996?",
        "db_id": "financial",
        "sql": "select count(*) , district.a16 from district where  district.a3 = \"East\"  group by district.a16  intersect select count(*) , district.a16 from district where  district.a3 = \"North Bohemia\" and district.a16 = 1996"
    },
    {
        "input": "List all the elements of the toxicology of the molecule \"TR004\".",
        "db_id": "toxicology",
        "sql": "select atom.element from atom join molecule on atom.molecule_id = molecule.molecule_id where  molecule.molecule_id = \"TR004\""
    },
    {
        "input": "Provide the ID and age of patient with lactate dehydrogenase (LDH) between 100-300 index above the normal range.",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.id , patient.birthday from Examination join Patient on Examination.ID = Patient.ID join Laboratory on Patient.ID = Laboratory.ID where  laboratory.ldh between 100 and 300 and examination.diagnosis > \"Normal\""
    },
    {
        "input": "Among the cards with converted mana cost higher than 5 in the set Coldsnap, how many of them have unknown power?",
        "db_id": "card_games",
        "sql": "select count(*) from cards join sets on cards.id = sets.id where  cards.convertedmanacost > 5 and sets.name = \"Coldsnap\""
    },
    {
        "input": "What is the average number of bonds the atoms with the element iodine have?",
        "db_id": "toxicology",
        "sql": "select avg(bond.bond_type) from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  atom.element = \"iodine\""
    },
    {
        "input": "How long did it take after patient number 821298 arrived at the hospital for the first time before her evaluation began?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "What was the final score for the match on September 24, 2008, in the Belgian Jupiler League between the home team and the away team?",
        "db_id": "european_football_2",
        "sql": "select match.home_team_goal from Match where  match.date = \"2008-09-24\" and match.away_team_goal = \"home\""
    },
    {
        "input": "List the last names of students under the Elementary Education major and include their phone numbers.",
        "db_id": "student_club",
        "sql": "select member.last_name , member.phone from member join major on member.link_to_major = major.major_id where  major.major_name = \"Elementary Education\""
    },
    {
        "input": "For all the set of cards that has Brazil Portuguese translation, what is the percentage of them are only available online?",
        "db_id": "card_games",
        "sql": "select cards.availability from set_translations join sets on set_translations.setCode = sets.code join cards on sets.isOnlineOnly = cards.isOnlineOnly where  set_translations.translation = \"Brazil\" and sets.isonlineonly = \"online\""
    },
    {
        "input": "What is the ratio of Hydrogen elements in molecule ID TR006? List the ratio with its label.",
        "db_id": "toxicology",
        "sql": "select atom.element , molecule.label from atom join molecule on atom.molecule_id = molecule.molecule_id where  molecule.molecule_id = \"TR006\""
    },
    {
        "input": "How many drivers managed to finish the race in the 2008 Australian Grand Prix?",
        "db_id": "formula_1",
        "sql": "select count( distinct results.driverid) from results join races on results.raceId = races.raceId where  races.year = 2008 and races.name = \"Australian Grand Prix\""
    },
    {
        "input": "Among the patients whose total bilirubin is over the normal range, how many of them have a peripheral pattern observed in the sheet of ANA examination?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "Indicate the name of the closed event whose cost has exceeded the budget the most.",
        "db_id": "student_club",
        "sql": "select event.event_name from expense join budget on expense.link_to_budget = budget.budget_id join event on budget.link_to_event = event.event_id where  event.status = \"Closed\"  group by event.event_name  order by sum(expense.cost) desc limit 1"
    },
    {
        "input": "What is the score and the link type ID for post ID 395?",
        "db_id": "codebase_community",
        "sql": "select posts.score , postlinks.linktypeid from postLinks join posts on postLinks.RelatedPostId = posts.Id where  posts.score = 395"
    },
    {
        "input": "List the name of leagues in which the average goals by the home team is higher than the away team in the 2009/2010 season.",
        "db_id": "european_football_2",
        "sql": "select league.name from League join Match on League.id = Match.id  group by league.id having  avg(match.home_team_goal) > (select match.season from Match  )"
    },
    {
        "input": "For the branch which located in the south Bohemia with biggest number of inhabitants, what is the percentage of the male clients?",
        "db_id": "financial",
        "sql": "select client.gender from client join district on client.district_id = district.district_id where  district.a3 = \"south Bohemia\"  group by client.gender  order by count(*) desc limit 1"
    },
    {
        "input": "What is the football player Francois Affolter header's finishing rate on 18/09/2014?",
        "db_id": "european_football_2",
        "sql": "select player_attributes.finishing from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.player_name = \"Francois Affolter\" and player_attributes.date = \"18/09/2014\""
    },
    {
        "input": "How many matches in the 2015/2016 season were held in Scotland Premier League\n?",
        "db_id": "european_football_2",
        "sql": "select count(*) from League join Match on League.id = Match.id where  match.season = \"2015/2016\" and league.name = \"Scotland Premier League\""
    },
    {
        "input": "How many students of the Student_Club have attended the event \"Women's Soccer\"?",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "For patients with abnormal platelet level, state the number of patients with lower than normal range. How is it compare to the number of patients with higher than normal range?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "What is the football player Francois Affolter header's finishing rate on 18/09/2014?",
        "db_id": "european_football_2",
        "sql": "select player_attributes.finishing from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.player_name = \"Francois Affolter\" and player_attributes.date = \"18/09/2014\""
    },
    {
        "input": "For the patient who was born on 1959/2/18, what is the decrease rate for his/her total cholesterol from November to December in 1981?",
        "db_id": "thrombosis_prediction",
        "sql": "select avg(patient.birthday) from Patient where  patient.birthday between 1959 and 1981"
    },
    {
        "input": "For the patient who was diagnosed SLE on 1997/1/27, what was his/her original diagnose when he/she came to the hospital for the first time?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.diagnosis , patient.diagnosis from Patient where  patient.diagnosis = \"SLE\" and patient.admission = \"1997/1/27\""
    },
    {
        "input": "How many molecules have a double bond type and among these molecule, how many are labeled as carcinogenic compound?",
        "db_id": "toxicology",
        "sql": "select count(*) , molecule.label from bond join molecule on bond.molecule_id = molecule.molecule_id where  bond.bond_type = \"double\"  group by molecule.label"
    },
    {
        "input": "What is the percentage of superheroes who act in their own self-interest or make decisions based on their own moral code? Indicate how many of the said superheroes were published by Marvel Comics.",
        "db_id": "superhero",
        "sql": "select count(*) from hero_attribute join superhero on hero_attribute.hero_id = superhero.id join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"Marvel Comics\" or hero_attribute.attribute_value = \"self-interest\""
    },
    {
        "input": "In 2012, who had the least consumption in LAM?",
        "db_id": "debit_card_specializing",
        "sql": "select yearmonth.customerid , yearmonth.consumption from yearmonth join customers on yearmonth.CustomerID = customers.CustomerID where  customers.segment = \"LAM\"   order by yearmonth.consumption asc limit 1"
    },
    {
        "input": "What is the complete address of the school with the lowest excellence rate? Indicate the Street, City, Zip and State.",
        "db_id": "california_schools",
        "sql": "select schools.streetabr , schools.city , schools.zip , schools.state from satscores join schools on satscores.cds = schools.CDSCode   order by satscores.enroll12 asc limit 1"
    },
    {
        "input": "List down at least five full names of superheroes with blue eyes.",
        "db_id": "superhero",
        "sql": "select superhero.full_name from superhero join colour on superhero.skin_colour_id = colour.id where  colour.colour = \"Blue\""
    },
    {
        "input": "Please list the lap records for the circuits in Italy.",
        "db_id": "formula_1",
        "sql": "select laptimes.lap from lapTimes join races on lapTimes.raceId = races.raceId join circuits on races.circuitId = circuits.circuitId where  circuits.country = \"Italy\""
    },
    {
        "input": "Calculate the percentage whereby Hamilton was not at the 1st track of the the f1 circuit since 2010.",
        "db_id": "formula_1",
        "sql": "select count(*) from driverStandings join drivers on driverStandings.driverId = drivers.driverId join races on driverStandings.raceId = races.raceId where  drivers.surname = \"Hamilton\" and races.year = 2010"
    },
    {
        "input": "Please list the product description of the products consumed in September, 2013.",
        "db_id": "debit_card_specializing",
        "sql": ""
    },
    {
        "input": "What elements are in a double type bond?",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_type = \"double\""
    },
    {
        "input": "Determine the bond type that is formed in the chemical compound containing element Carbon.",
        "db_id": "toxicology",
        "sql": "select bond.bond_type from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  atom.element = \"Carbon\""
    },
    {
        "input": "Paul di Resta was in the No. 853 race, what percent faster did he finish in the 853rd race than the next race for the fastest lap speed?",
        "db_id": "formula_1",
        "sql": "select results.fastestlapspeed from results join drivers on results.driverId = drivers.driverId where  drivers.forename = \"Paul\"   order by results.fastestlapspeed desc limit 1"
    },
    {
        "input": "Among the comments with scores between 5 to 10, what is the percentage of the users with 0 up votes?",
        "db_id": "codebase_community",
        "sql": "select users.upvotes from comments join users on comments.UserId = users.Id where  comments.score between 5 and 10"
    },
    {
        "input": "Please list the disparate time of the transactions taken place in the gas stations from chain no. 11.",
        "db_id": "debit_card_specializing",
        "sql": ""
    },
    {
        "input": "How many users are awarded with more than 5 badges?",
        "db_id": "codebase_community",
        "sql": "select count(*) from badges  group by badges.Id having  count(*) > 5"
    },
    {
        "input": "What is reference name of Robert Kubica?",
        "db_id": "formula_1",
        "sql": "select drivers.driverref from drivers where  drivers.surname = \"Robert\"   intersect select drivers.driverref from drivers where  drivers.surname = \"Kubica\""
    },
    {
        "input": "Which countries have zip codes with post office boxes?",
        "db_id": "student_club",
        "sql": "select zip_code.county from zip_code where  zip_code.city = \"Post\""
    },
    {
        "input": "For all the female patient age 50 and above, who has abnormal red blood cell count. State if they were admitted to hospital.",
        "db_id": "thrombosis_prediction",
        "sql": "select * from Patient where  patient.sex = \"F\" and patient.admission >= 50 and patient.sex = \"F\""
    },
    {
        "input": "Please list the superhero names of all the superheroes that have blue eyes and blond hair.",
        "db_id": "superhero",
        "sql": "select superhero.superhero_name from superhero join colour on superhero.skin_colour_id = colour.id where  colour.colour = \"Blue\"   intersect select superhero.superhero_name from superhero join colour on superhero.skin_colour_id = colour.id where  colour.colour = \"Blend\""
    },
    {
        "input": "What was the fastest lap speed among all drivers in the 2009 Spanish Grand Prix?",
        "db_id": "formula_1",
        "sql": "select max(results.fastestlapspeed) from results join races on results.raceId = races.raceId where  races.year = 2009 and races.name = \"Spanish Grand Prix\""
    },
    {
        "input": "In terms of number of points acquired, how many victories did the driver who ranked 91st acquired?",
        "db_id": "formula_1",
        "sql": "select driverstandings.wins from driverStandings where  driverstandings.position = 91"
    },
    {
        "input": "What is the district Id of the account that placed the order with the id 33333?",
        "db_id": "financial",
        "sql": ""
    },
    {
        "input": "List the last name of the members of the club that attended the women's soccer event.",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "Please list the phone numbers of the students from the Student_Club that has attended the event \"Women's Soccer\".",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "Between DC and Marvel Comics, which publisher has published more superheroes? Find the difference in the number of superheroes they have published.",
        "db_id": "superhero",
        "sql": "select publisher.publisher_name , count(*) from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"DC\"  group by superhero.publisher_id  intersect select publisher.publisher_name , count(*) from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"Marvel Comics\"   order by count(*) desc limit 1"
    },
    {
        "input": "What percentage of carcinogenic-type molecules does not contain fluorine?",
        "db_id": "toxicology",
        "sql": "select count(*) from bond join molecule on bond.molecule_id = molecule.molecule_id where  bond.bond_type != \"carcinogenic\""
    },
    {
        "input": "Please list the phone numbers of the students from the Student_Club that has attended the event \"Women's Soccer\".",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "For all cards illustrated by Jim Pavelec. and describe the text of the ruling of these cards. Do these cards have missing or degraded properties and values.",
        "db_id": "card_games",
        "sql": "select rulings.text from rulings join cards on rulings.uuid = cards.uuid where  cards.artist = \"Jim Pavelec\" or rulings.text = \"No\""
    },
    {
        "input": "Which toxic element can be found in the molecule TR151?",
        "db_id": "toxicology",
        "sql": "select atom.element from atom where  atom.molecule_id = \"TR151\""
    },
    {
        "input": "Name the elements that comprise the atoms of bond TR001_2_4.",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_id = \"TR001_2_4\""
    },
    {
        "input": "Among the members who incurred expenses in more than one event, who paid the most amount?",
        "db_id": "student_club",
        "sql": "select expense.link_to_member from expense join budget on expense.link_to_budget = budget.budget_id  group by expense.link_to_member having  count(*) > 1  order by sum(budget.amount) desc limit 1"
    },
    {
        "input": "What is the ratio of Hydrogen elements in molecule ID TR006? List the ratio with its label.",
        "db_id": "toxicology",
        "sql": "select atom.element , molecule.label from atom join molecule on atom.molecule_id = molecule.molecule_id where  molecule.molecule_id = \"TR006\""
    },
    {
        "input": "List the eyes, hair and skin colour of all female superheroes published by Dark Horse Comics.",
        "db_id": "superhero",
        "sql": "select superhero.eye_colour_id , superhero.hair_colour_id , superhero.skin_colour_id from superhero join publisher on superhero.publisher_id = publisher.id join gender on superhero.gender_id = gender.id where  gender.gender = \"Female\" and publisher.publisher_name = \"Dark Horse Comics\""
    },
    {
        "input": "Please list the product description of the products consumed in September, 2013.",
        "db_id": "debit_card_specializing",
        "sql": ""
    },
    {
        "input": "Among the patients whose creatinine level is abnormal, how many of them aren't 70 yet?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Laboratory join Patient on Laboratory.ID = Patient.ID where  laboratory.sc170 >= 70"
    },
    {
        "input": "What is the constructor reference name of the champion in the 2009 Singapore Grand Prix? Please give its website.",
        "db_id": "formula_1",
        "sql": "select constructors.name from constructorResults join constructors on constructorResults.constructorId = constructors.constructorId join races on constructorResults.raceId = races.raceId where  races.year = 2009 and races.name = \"Singapore Grand Prix\""
    },
    {
        "input": "What is the composition of element chlorine in percentage among the single bond molecules?",
        "db_id": "toxicology",
        "sql": "select atom.element , atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id  group by atom.element  order by count(*) desc limit 1"
    },
    {
        "input": "For the team \"Hannover 96\", what was its defence aggression class on 2015/9/10?",
        "db_id": "european_football_2",
        "sql": "select team_attributes.defenceaggressionclass from Team_Attributes join Team on Team_Attributes.team_api_id = Team.team_api_id where  team.team_long_name = \"Hannover 96\" and team_attributes.date = \"2015/9/10\""
    },
    {
        "input": "What are the valid e-mail addresses of the administrator of the school located in the San Bernardino county, City of San Bernardino City Unified that opened between 1/1/2009 to 12/31/2010 whose school types are public Intermediate/Middle Schools and Unified Schools?",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "What is the name of the social event that was attended by the vice president of the Student_Club located at 900 E. Washington St.?",
        "db_id": "student_club",
        "sql": "select event.event_name from attendance join member on attendance.link_to_member = member.member_id join event on attendance.link_to_event = event.event_id where  event.location = \"900 E. Washington St.\" and member.position = \"Vice President\""
    },
    {
        "input": "How many patients with a normal Ig A level came to the hospital after 1990/1/1?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID where  examination.diagnosis = \"Normal\" and examination.diagnosis > \"1990/1/1\""
    },
    {
        "input": "What is the percentage of blue female superheroes among all female superheroes?",
        "db_id": "superhero",
        "sql": "select colour.colour , count(*) from superhero join colour on superhero.skin_colour_id = colour.id join gender on superhero.gender_id = gender.id where  gender.gender = \"Female\"  group by colour.colour"
    },
    {
        "input": "What is the football player Francois Affolter header's finishing rate on 18/09/2014?",
        "db_id": "european_football_2",
        "sql": "select player_attributes.finishing from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.player_name = \"Francois Affolter\" and player_attributes.date = \"18/09/2014\""
    },
    {
        "input": "For all the set of cards that has Japanese translation, what is the percentage of them are only available in non-foil?",
        "db_id": "card_games",
        "sql": "select cards.availability from cards join set_translations on cards.id = set_translations.id where  set_translations.language = \"Japanese\""
    },
    {
        "input": "For the customer who paid 634.8 in 2012/8/25, what was the consumption decrease rate from Year 2012 to 2013?",
        "db_id": "debit_card_specializing",
        "sql": "select yearmonth.consumption from yearmonth where  yearmonth.consumption between 2012 and 2013"
    },
    {
        "input": "Calculate the total atoms consisting of the element carbon and hydrogen.",
        "db_id": "toxicology",
        "sql": "select count(*) from atom where  atom.atom_id in (select atom.atom_id from atom where  atom.element = \"carbon\"   intersect select atom.atom_id from atom where  atom.element = \"hydrogen\"   )"
    },
    {
        "input": "Among all superheroes created by George Lucas, identify the percentage of female superheroes.",
        "db_id": "superhero",
        "sql": "select superhero.superhero_name , count(*) from superhero join publisher on superhero.publisher_id = publisher.id where  publisher.publisher_name = \"George Lucas\"  group by superhero.gender_id"
    },
    {
        "input": "How many patients who were examined between 1987/7/6 and 1996/1/31 had a GPT level greater than 30 and an ALB level less than 4? List them by their ID.",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "How many cards available in paper have a positive starting maximum hand size?",
        "db_id": "card_games",
        "sql": "select count(*) from cards where  cards.availability = \"paper\"   order by cards.hand desc limit 1"
    },
    {
        "input": "Please list top three elements of the toxicology of the molecule TR000 in alphabetical order.",
        "db_id": "toxicology",
        "sql": "select atom.element from atom where  atom.molecule_id = \"TR000\"   order by atom.element desc limit 3"
    },
    {
        "input": "Give the full name and contact number of members who had to spend more than average on each expense.",
        "db_id": "student_club",
        "sql": "select member.first_name , member.last_name , member.phone from expense join member on expense.link_to_member = member.member_id where  expense.cost > (select avg(expense.cost) from expense  )"
    },
    {
        "input": "What is the owner user id of the most valuable post?",
        "db_id": "codebase_community",
        "sql": "select posts.owneruserid from posts   order by posts.score desc limit 1"
    },
    {
        "input": "What is the football player Francois Affolter header's finishing rate on 18/09/2014?",
        "db_id": "european_football_2",
        "sql": "select player_attributes.finishing from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.player_name = \"Francois Affolter\" and player_attributes.date = \"18/09/2014\""
    },
    {
        "input": "Which district has highest active loan?",
        "db_id": "financial",
        "sql": "select district.a2 from loan join account on loan.account_id = account.account_id join district on account.district_id = district.district_id  group by account.district_id  order by sum(loan.amount) desc limit 1"
    },
    {
        "input": "How long did it take after patient number 821298 arrived at the hospital for the first time before her evaluation began?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "Among posts by Harvey Motulsky and Noah Snyder, which one has higher popularity?",
        "db_id": "codebase_community",
        "sql": ""
    },
    {
        "input": "What are the valid e-mail addresses of the administrator of the school located in the San Bernardino county, City of San Bernardino City Unified that opened between 1/1/2009 to 12/31/2010 whose school types are public Intermediate/Middle Schools and Unified Schools?",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "Provide ID, sex and age of patient who has blood glucose (GLU) not within normal range but with total cholesterol(T-CHO) within normal range.",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "Among the male patients who have a normal level of white blood cells, how many of them have an abnormal fibrinogen level?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID where  patient.sex = \"M\" and examination.diagnosis = \"Normal\""
    },
    {
        "input": "Among all the posts posted by the most influential user, identify the percentage with a score above 50.",
        "db_id": "codebase_community",
        "sql": "select posthistory.postid , count(*) from postHistory join posts on postHistory.PostId = posts.Id where  posts.score > 50  group by posthistory.postid  order by count(*) desc limit 1"
    },
    {
        "input": "List down Ajax's superpowers.",
        "db_id": "superhero",
        "sql": "select superpower.power_name from hero_power join superpower on hero_power.power_id = superpower.id join superhero on hero_power.hero_id = superhero.id where  superhero.superhero_name = \"Ajax\""
    },
    {
        "input": "Which home team had lost the fewest matches in the 2016 season?",
        "db_id": "european_football_2",
        "sql": "select match.home_team_api_id from Match where  match.season = 2016  group by match.home_team_api_id  order by count(*) asc limit 1"
    },
    {
        "input": "List the last name of the members of the club that attended the women's soccer event.",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "How many cards available in paper have a positive starting maximum hand size?",
        "db_id": "card_games",
        "sql": "select count(*) from cards where  cards.availability = \"paper\"   order by cards.hand desc limit 1"
    },
    {
        "input": "For the players who had a 77 points overall rating on 2016/6/23, who was the oldest? Give the name of the player.",
        "db_id": "european_football_2",
        "sql": "select player.player_name from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player_attributes.overall_rating = 77   order by player.birthday desc limit 1"
    },
    {
        "input": "Write the full name of the member who spent money for water, veggie tray and supplies and include the cost of it.",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "What number of patients with a degree of thrombosis level 2 and ANA pattern of only S, have a level of anti-Cardiolip in antibody (IgM) 20% higher than average?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "Among the male patients who have a normal level of white blood cells, how many of them have an abnormal fibrinogen level?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID where  patient.sex = \"M\" and examination.diagnosis = \"Normal\""
    },
    {
        "input": "List the names of closed event as \"game\" that was closed from 3/15/2019 to 3/20/2020.",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "What is the total number of non-chartered schools in the county of Los Angeles with a percent (%) of eligible free meals for grades 1 through 12 that is less than 0.18%?",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "What percentage of cards with format commander and legal status do not have a content warning?",
        "db_id": "card_games",
        "sql": "select avg(cards.hascontentwarning) from legalities join cards on legalities.uuid = cards.uuid where  legalities.format = \"commander\" and legalities.status = \"Legal\""
    },
    {
        "input": "Among the users who obtained the \"Organizer\" badges, calculate the percentage of users who are teenagers.",
        "db_id": "codebase_community",
        "sql": "select users.age , count(*) from badges join users on badges.UserId = users.Id where  badges.name = \"Organizer\"  group by users.age"
    },
    {
        "input": "Among the cards whose version of frame style is 1997, what is the status of the card illustrated by D. Alexander Gregory in legacy play format that has sensitive content or Wizards of the Coast?",
        "db_id": "card_games",
        "sql": "select legalities.status from legalities join cards on legalities.uuid = cards.uuid where  cards.frameversion = 1997 and cards.artist = \"D. Alexander Gregory\"   union select legalities.status from legalities where  legalities.format = \"traditional\""
    },
    {
        "input": "Calculate the average height for each superhero.",
        "db_id": "superhero",
        "sql": "select avg(superhero.height_cm) , superhero.superhero_name from superhero  group by superhero.superhero_name"
    },
    {
        "input": "What are the elements of the atoms of TR144_8_19?",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join atom on connected.atom_id2 = atom.atom_id where  connected.bond_id = \"TR144_8_19\""
    },
    {
        "input": "Among the patients who have a normal platelet level, how many of them have other symptoms observed?",
        "db_id": "thrombosis_prediction",
        "sql": "select count( distinct examination.symptoms) from Examination where  examination.diagnosis = \"Normal\""
    },
    {
        "input": "Paul di Resta was in the No. 853 race, what percent faster did he finish in the 853rd race than the next race for the fastest lap speed?",
        "db_id": "formula_1",
        "sql": "select results.fastestlapspeed from results join drivers on results.driverId = drivers.driverId where  drivers.forename = \"Paul\"   order by results.fastestlapspeed desc limit 1"
    },
    {
        "input": "What is the publisher's name of Blue Beetle II?",
        "db_id": "superhero",
        "sql": "select publisher.publisher_name from superhero join publisher on superhero.publisher_id = publisher.id where  superhero.superhero_name = \"Blue Beetle\""
    },
    {
        "input": "Based on posts posted by Community, calculate the percentage of posts that use the R language.",
        "db_id": "codebase_community",
        "sql": "select count(*) from posts join users on posts.OwnerUserId = users.Id where  users.displayname = \"Community\" and posts.posttypeid = \"R\""
    },
    {
        "input": "Show the Simplified Chinese translation of the name of the set \"Mirrodin\"?",
        "db_id": "card_games",
        "sql": "select set_translations.translation from set_translations join sets on set_translations.setCode = sets.code where  sets.name = \"Mirrodin\" and set_translations.language = \"Chinese\""
    },
    {
        "input": "From 2000 to 2005, what percentage of drivers who were born before 1985 and the lap numbers were over 50?",
        "db_id": "formula_1",
        "sql": "select drivers.number from drivers where  drivers.dob < 1985 and drivers.number > 50"
    },
    {
        "input": "Please list the ID of the patient whose RF is normal and who is older than 60.",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.id from Examination join Patient on Examination.ID = Patient.ID where  examination.diagnosis = \"Normal\" and patient.birthday > 60"
    },
    {
        "input": "What is the constructor reference name of the champion in the 2009 Singapore Grand Prix? Please give its website.",
        "db_id": "formula_1",
        "sql": "select constructors.name from constructorResults join constructors on constructorResults.constructorId = constructors.constructorId join races on constructorResults.raceId = races.raceId where  races.year = 2009 and races.name = \"Singapore Grand Prix\""
    },
    {
        "input": "Please calculate the race completion percentage of Japanese drivers from 2007 to 2009.",
        "db_id": "formula_1",
        "sql": "select results.driverid from results join drivers on results.driverId = drivers.driverId join races on results.raceId = races.raceId where  drivers.nationality = \"Japanese\" and races.year between 2007 and 2009"
    },
    {
        "input": "How many members did attend the event 'Community Theater' in 2019?",
        "db_id": "student_club",
        "sql": "select count(*) from attendance join member on attendance.link_to_member = member.member_id join event on attendance.link_to_event = event.event_id where  event.event_name = \"Community Theater\" and event.event_date = 2019"
    },
    {
        "input": "Which county reported the most number of school closure in the 1980s with school wonership code belonging to Youth Authority Facilities (CEA)?",
        "db_id": "california_schools",
        "sql": "select schools.county from schools where  schools.soctype = \"Youth Authority Facilities\"  group by schools.county  order by count(*) desc limit 1"
    },
    {
        "input": "For the team \"Hannover 96\", what was its defence aggression class on 2015/9/10?",
        "db_id": "european_football_2",
        "sql": "select team_attributes.defenceaggressionclass from Team_Attributes join Team on Team_Attributes.team_api_id = Team.team_api_id where  team.team_long_name = \"Hannover 96\" and team_attributes.date = \"2015/9/10\""
    },
    {
        "input": "List all patients who were followed up at the outpatient clinic who underwent a laboratory test in October 1991 and had a total blood bilirubin level within the normal range.",
        "db_id": "thrombosis_prediction",
        "sql": "select distinct patient.id from Examination join Patient on Examination.ID = Patient.ID join Laboratory on Patient.ID = Laboratory.ID where  examination.diagnosis = \"Normal\" and laboratory.date = 1991"
    },
    {
        "input": "How many matches in the 2015/2016 season were held in Scotland Premier League\n?",
        "db_id": "european_football_2",
        "sql": "select count(*) from League join Match on League.id = Match.id where  match.season = \"2015/2016\" and league.name = \"Scotland Premier League\""
    },
    {
        "input": "Of the schools that offers a magnet program serving a grade span of Kindergarten to 8th grade, how many offers Multiple Provision Types? List the number of cities that offers a Kindergarten to 8th grade span and indicate how many schools are there serving such grade span for each city.",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "How many patients with a normal RF don't have thrombosis?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID where  examination.diagnosis = \"Normal\" and examination.thrombosis != \"No\""
    },
    {
        "input": "What percentage is Landon Donovan's overall rating higher than Jordan Bowery on 2013/7/12?",
        "db_id": "european_football_2",
        "sql": "select player_attributes.overall_rating from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.player_name > \"Landon Donovan\" and player_attributes.date = \"2013/7/12\""
    },
    {
        "input": "For the team \"Hannover 96\", what was its defence aggression class on 2015/9/10?",
        "db_id": "european_football_2",
        "sql": "select team_attributes.defenceaggressionclass from Team_Attributes join Team on Team_Attributes.team_api_id = Team.team_api_id where  team.team_long_name = \"Hannover 96\" and team_attributes.date = \"2015/9/10\""
    },
    {
        "input": "How many unknown power cards contain info about the triggered ability",
        "db_id": "card_games",
        "sql": "select count( distinct cards.power) from cards where  cards.power = \"null\""
    },
    {
        "input": "Calculate the difference in the percentage of members in New Jersey and Vermont.",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "What are the elements of the toxicology and label of molecule TR060?",
        "db_id": "toxicology",
        "sql": "select atom.element , molecule.label from atom join molecule on atom.molecule_id = molecule.molecule_id where  molecule.molecule_id = \"TR060\""
    },
    {
        "input": "Provide ID, sex and age of patient who has blood glucose (GLU) not within normal range but with total cholesterol(T-CHO) within normal range.",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "Among the patients whose creatinine level is abnormal, how many of them aren't 70 yet?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Laboratory join Patient on Laboratory.ID = Patient.ID where  laboratory.sc170 >= 70"
    },
    {
        "input": "Is the set of cards with Adarkar Valkyrie only available outside the United States?",
        "db_id": "card_games",
        "sql": "select cards.availability from cards where  cards.name = \"Adarkar Valkyrie\" and cards.isonlineonly != \"USA\""
    },
    {
        "input": "What is the total number of non-chartered schools in the county of Los Angeles with a percent (%) of eligible free meals for grades 1 through 12 that is less than 0.18%?",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "Please list top three elements of the toxicology of the molecule TR000 in alphabetical order.",
        "db_id": "toxicology",
        "sql": "select atom.element from atom where  atom.molecule_id = \"TR000\"   order by atom.element desc limit 3"
    },
    {
        "input": "List the elements of all the triple bonds.",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_type like \"3%\""
    },
    {
        "input": "What is the bond type of TR007_4_19?",
        "db_id": "toxicology",
        "sql": "select bond.bond_type from bond where  bond.bond_id = \"TR007_4_19\""
    },
    {
        "input": "List the name of leagues in which the average goals by the home team is higher than the away team in the 2009/2010 season.",
        "db_id": "european_football_2",
        "sql": "select league.name from League join Match on League.id = Match.id  group by league.id having  avg(match.home_team_goal) > (select match.season from Match  )"
    },
    {
        "input": "Which element is the least numerous in non-carcinogenic molecules?",
        "db_id": "toxicology",
        "sql": "select atom.element from atom where  atom.molecule_id = \"non-carcinogenic\"  group by atom.element  order by count(*) asc limit 1"
    },
    {
        "input": "In which years did Lewis Hamilton participate in a Formula_1 race?",
        "db_id": "formula_1",
        "sql": "select races.year from driverStandings join drivers on driverStandings.driverId = drivers.driverId join races on driverStandings.raceId = races.raceId where  drivers.forename = \"Lewis\" and drivers.surname = \"Formula_1\""
    },
    {
        "input": "List down top 3 German drivers who has the shortest average pit stop duration and were born between 1980-1985.",
        "db_id": "formula_1",
        "sql": "select drivers.surname , drivers.driverid from pitStops join drivers on pitStops.driverId = drivers.driverId where  drivers.nationality = \"German\"  group by drivers.driverid  order by avg(pitstops.duration) asc limit 3"
    },
    {
        "input": "Please list the account types that are not eligible for loans, and the average income of residents in the district where the account is located exceeds $8000 but is no more than $9000.",
        "db_id": "financial",
        "sql": "select disp.type from disp join account on disp.account_id = account.account_id join loan on account.account_id = loan.account_id  group by disp.type having  avg(loan.amount) > 8000  intersect select disp.type from disp join account on disp.account_id = account.account_id join loan on account.account_id = loan.account_id  group by disp.type having  avg(loan.amount) < 9000"
    },
    {
        "input": "How many superheroes with blonde hair are there?",
        "db_id": "superhero",
        "sql": "select count(*) from superhero join colour on superhero.skin_colour_id = colour.id where  colour.colour = \"Blume\""
    },
    {
        "input": "Which element is the least numerous in non-carcinogenic molecules?",
        "db_id": "toxicology",
        "sql": "select atom.element from atom where  atom.molecule_id = \"non-carcinogenic\"  group by atom.element  order by count(*) asc limit 1"
    },
    {
        "input": "Which driver ranked the first in the Canadian Grand Prix in 2007? Please give his reference name.",
        "db_id": "formula_1",
        "sql": "select drivers.driverref from results join drivers on results.driverId = drivers.driverId join races on results.raceId = races.raceId where  races.year = 2007   order by results.rank desc limit 1"
    },
    {
        "input": "List the names of closed event as \"game\" that was closed from 3/15/2019 to 3/20/2020.",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "Mention the category of events which were held at MU 215.",
        "db_id": "student_club",
        "sql": "select budget.category from budget join event on budget.link_to_event = event.event_id where  event.location = \"MU 215\""
    },
    {
        "input": "Was the patient a man or a women whose ALT glutamic pylvic transaminase status got 9 on 1992-6-12?",
        "db_id": "thrombosis_prediction",
        "sql": "select patient.sex from Laboratory join Patient on Laboratory.ID = Patient.ID where  patient.sex = \"M\" and laboratory.got = 9"
    },
    {
        "input": "For the patients whose total cholesterol is higher than normal, how many of them have a negative measure of degree of coagulation?",
        "db_id": "thrombosis_prediction",
        "sql": "select count(*) from Examination join Patient on Examination.ID = Patient.ID where  examination.diagnosis > \"Normal\""
    },
    {
        "input": "What is the average index of the lactate dehydrogenase (LDH) for all patients with lactate dehydrogenase (LDH) within the normal range.",
        "db_id": "thrombosis_prediction",
        "sql": "select avg(laboratory.ldh) from Examination join Patient on Examination.ID = Patient.ID join Laboratory on Patient.ID = Laboratory.ID where  examination.diagnosis = \"Normal\""
    },
    {
        "input": "Write the full name of the member who spent money for water, veggie tray and supplies and include the cost of it.",
        "db_id": "student_club",
        "sql": ""
    },
    {
        "input": "Among the users who obtained the \"Organizer\" badges, calculate the percentage of users who are teenagers.",
        "db_id": "codebase_community",
        "sql": "select users.age , count(*) from badges join users on badges.UserId = users.Id where  badges.name = \"Organizer\"  group by users.age"
    },
    {
        "input": "What was the final score for the match on September 24, 2008, in the Belgian Jupiler League between the home team and the away team?",
        "db_id": "european_football_2",
        "sql": "select match.home_team_goal from Match where  match.date = \"2008-09-24\" and match.away_team_goal = \"home\""
    },
    {
        "input": "Among the patients with the normal level of triglyceride, how many of them have other symptoms observed?",
        "db_id": "thrombosis_prediction",
        "sql": "select count( distinct examination.symptoms) from Examination where  examination.diagnosis = \"Normal\""
    },
    {
        "input": "Identify the gender of the superhero who has the ability of Phoenix Force.",
        "db_id": "superhero",
        "sql": "select gender.gender from hero_power join superpower on hero_power.power_id = superpower.id join superhero on hero_power.hero_id = superhero.id join gender on superhero.gender_id = gender.id where  superpower.power_name = \"Phoenix Force\""
    },
    {
        "input": "Calculate the percentage of carcinogenic molecules with triple bonded Hidrogen atoms.",
        "db_id": "toxicology",
        "sql": ""
    },
    {
        "input": "Please list top three molecules that have single bonds between two atoms and are not carcinogenic in alphabetical order.",
        "db_id": "toxicology",
        "sql": "select molecule.molecule_id from bond join molecule on bond.molecule_id = molecule.molecule_id where  bond.bond_type = \"Single\"   except select bond.molecule_id from bond where  bond.bond_type = \"carcinogenic\"   order by molecule.molecule_id asc"
    },
    {
        "input": "Among all the lap records set on various circuits, what is the time for the fastest one?",
        "db_id": "formula_1",
        "sql": "select results.time from lapTimes join drivers on lapTimes.driverId = drivers.driverId join results on drivers.driverId = results.driverId   order by laptimes.time desc limit 1"
    },
    {
        "input": "List the superheroes from Marvel Comics who have the super power of 'Super Strength'.",
        "db_id": "superhero",
        "sql": "select superhero.superhero_name from hero_power join superpower on hero_power.power_id = superpower.id join superhero on hero_power.hero_id = superhero.id join publisher on superhero.publisher_id = publisher.id where  superpower.power_name = \"Super Strength\" and publisher.publisher_name = \"Marvel Comics\""
    },
    {
        "input": "Provide ID, sex and age of patient who has blood glucose (GLU) not within normal range but with total cholesterol(T-CHO) within normal range.",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "What is the total number of non-chartered schools in the county of Los Angeles with a percent (%) of eligible free meals for grades 1 through 12 that is less than 0.18%?",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "When was the first time did Kevin Constant have his highest crossing score? Give the date.",
        "db_id": "european_football_2",
        "sql": "select player_attributes.date from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player.player_name = \"Kevin Constant\"   order by player_attributes.crossing desc limit 1"
    },
    {
        "input": "For all cards illustrated by Jim Pavelec. and describe the text of the ruling of these cards. Do these cards have missing or degraded properties and values.",
        "db_id": "card_games",
        "sql": "select rulings.text from rulings join cards on rulings.uuid = cards.uuid where  cards.artist = \"Jim Pavelec\" or rulings.text = \"No\""
    },
    {
        "input": "Please list the lap records for the circuits in Italy.",
        "db_id": "formula_1",
        "sql": "select laptimes.lap from lapTimes join races on lapTimes.raceId = races.raceId join circuits on races.circuitId = circuits.circuitId where  circuits.country = \"Italy\""
    },
    {
        "input": "Among the patients who have a normal platelet level, how many of them have other symptoms observed?",
        "db_id": "thrombosis_prediction",
        "sql": "select count( distinct examination.symptoms) from Examination where  examination.diagnosis = \"Normal\""
    },
    {
        "input": "What is the description about the ruling of card \"Condemn\"?",
        "db_id": "card_games",
        "sql": "select rulings.text from rulings join cards on rulings.uuid = cards.uuid where  cards.name = \"Condemn\""
    },
    {
        "input": "On what year did the youngest driver had his first qualifying race? Also state the name, date and time of the race.",
        "db_id": "formula_1",
        "sql": "select races.year , races.name , races.time from driverStandings join drivers on driverStandings.driverId = drivers.driverId join races on driverStandings.raceId = races.raceId   order by drivers.dob asc limit 1"
    },
    {
        "input": "What is the percentage of carbon in double-bond molecules?",
        "db_id": "toxicology",
        "sql": "select molecule.molecule_id , count(*) from bond join molecule on bond.molecule_id = molecule.molecule_id where  bond.bond_type = \"double\"  group by bond.molecule_id"
    },
    {
        "input": "Among the patients with the normal level of triglyceride, how many of them have other symptoms observed?",
        "db_id": "thrombosis_prediction",
        "sql": "select count( distinct examination.symptoms) from Examination where  examination.diagnosis = \"Normal\""
    },
    {
        "input": "For all the set of cards that has Japanese translation, what is the percentage of them are only available in non-foil?",
        "db_id": "card_games",
        "sql": "select cards.availability from cards join set_translations on cards.id = set_translations.id where  set_translations.language = \"Japanese\""
    },
    {
        "input": "What kind of currency did the customer paid at 16:25:00 in 2012/8/24?",
        "db_id": "debit_card_specializing",
        "sql": ""
    },
    {
        "input": "Which country is the league Italy Serie A from?",
        "db_id": "european_football_2",
        "sql": "select league.country_id from League join Country on League.country_id = Country.id where  country.name = \"Italy\" and league.name = \"Serie A\""
    },
    {
        "input": "For patients with abnormal platelet level, state the number of patients with lower than normal range. How is it compare to the number of patients with higher than normal range?",
        "db_id": "thrombosis_prediction",
        "sql": ""
    },
    {
        "input": "Consider the average difference between K-12 enrollment and 15-17 enrollment of schools that are locally funded, list the names and DOC type of schools which has a difference above this average.",
        "db_id": "california_schools",
        "sql": ""
    },
    {
        "input": "In comments with score between 1 to 5, list down the display names of the users with 0 down votes.",
        "db_id": "codebase_community",
        "sql": "select users.displayname from comments join users on comments.UserId = users.Id where  comments.score between 1 and 5"
    },
    {
        "input": "What is the lap record set by Lewis Hamilton in a Formula_1 race?",
        "db_id": "formula_1",
        "sql": "select results.laps from results join drivers on results.driverId = drivers.driverId where  drivers.forename = \"Lewis\" and drivers.surname = \"Formula_1\""
    },
    {
        "input": "Among the cards with converted mana cost higher than 5 in the set Coldsnap, how many of them have unknown power?",
        "db_id": "card_games",
        "sql": "select count(*) from cards join sets on cards.id = sets.id where  cards.convertedmanacost > 5 and sets.name = \"Coldsnap\""
    },
    {
        "input": "Name the atoms' elements that form bond TR000_2_3.",
        "db_id": "toxicology",
        "sql": "select atom.element from connected join bond on connected.bond_id = bond.bond_id join atom on connected.atom_id2 = atom.atom_id where  bond.bond_id = \"TR000_2_3\""
    },
    {
        "input": "At present, calculate for the player's age who have a sprint speed of no less than 97 between 2013 to 2015.",
        "db_id": "european_football_2",
        "sql": "select * from Player_Attributes join Player on Player_Attributes.player_api_id = Player.player_api_id where  player_attributes.sprint_speed between 2013 and 2015"
    }
]