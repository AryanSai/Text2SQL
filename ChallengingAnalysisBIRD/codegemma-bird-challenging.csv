Question,hardness,Gold,Prediction_0.1,Prediction_0.5,Prediction_1.0,EX_0.1,EX_0.5,EX_1.0
Are there more male patients with creatinine not within the normal range than female? True or False?,challenging,SELECT CASE WHEN SUM(CASE WHEN T1.SEX = 'M' THEN 1 ELSE 0 END) > SUM(CASE WHEN T1.SEX = 'F' THEN 1 ELSE 0 END) THEN 'True' ELSE 'False' END FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE >= 1.5,SELECT (SUM(SEX = 'M') > SUM(SEX = 'F')) AS more_male_patients FROM patient WHERE EXISTS (     SELECT 1     FROM laboratory     WHERE patient.id = laboratory.id     AND laboratory.cre >= 1.5 ),NULL,NULL,0,0,0
What elements are in the TR004_8_9 bond atoms?,challenging,SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR004_8_9',SELECT element FROM atom WHERE atom_id IN (     SELECT atom_id     FROM connected     WHERE bond_id = 'TR004_8_9' ),SELECT element FROM atom WHERE atom_id IN (     SELECT atom_id     FROM connected     WHERE bond_id = 'TR004_8_9' ),NULL,1,1,0
What is the ratio of Hydrogen elements in molecule ID TR006? List the ratio with its label.,challenging,"WITH SubQuery AS (SELECT DISTINCT T1.atom_id, T1.element, T1.molecule_id, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR006') SELECT CAST(COUNT(CASE WHEN element = 'h' THEN atom_id ELSE NULL END) AS REAL) / (CASE WHEN COUNT(atom_id) = 0 THEN NULL ELSE COUNT(atom_id) END) AS ratio, label FROM SubQuery GROUP BY label","SELECT ratio, label FROM ( SELECT molecule_id, SUM(element = 'h') AS ratio, label FROM molecule JOIN atom ON molecule.molecule_id = atom.molecule_id GROUP BY molecule_id ) AS subquery WHERE molecule_id = 'TR006'","SELECT ratio, label FROM molecule WHERE molecule_id = 'TR006'","SELECT SUM(element = 'h') / COUNT(*) AS ratio, label FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.molecule_id = 'TR006' GROUP BY label",0,0,0
"For the teams with normal build-up play dribbling class in 2014, List the names of the teams with less than average chance creation passing, in descending order of chance creation passing.",challenging,"SELECT t3.team_long_name FROM Team AS t3 INNER JOIN Team_Attributes AS t4 ON t3.team_api_id = t4.team_api_id WHERE t4.buildUpPlayDribblingClass = 'Normal' AND t4.chanceCreationPassing < ( SELECT CAST(SUM(t2.chanceCreationPassing) AS REAL) / COUNT(t1.id) FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t2.buildUpPlayDribblingClass = 'Normal' AND SUBSTR(t2.`date`, 1, 4) = '2014') ORDER BY t4.chanceCreationPassing DESC",SELECT team_long_name FROM team WHERE team_api_id IN (     SELECT team_api_id     FROM team_attributes     WHERE buildUpPlayDribblingClass = 'Normal'     AND date >= '2014-01-01 00:00:00'     AND date <= '2014-01-31 00:00:00' ) AND team_api_id IN (     SELECT team_api_id     FROM team_attributes     WHERE chanceCreationPassing < (         SELECT AVG(chanceCreationPassing)         FROM team_attributes     ) ) ORDER BY chanceCreationPassing DESC,SELECT team_long_name FROM team INNER JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id WHERE buildUpPlayDribblingClass = 'Normal' AND date > '2014-01-01 00:00:00' AND date < '2014-01-31 00:00:00' AND chanceCreationPassing < (SELECT AVG(chanceCreationPassing) FROM team_attributes) ORDER BY chanceCreationPassing DESC,"SELECT team_long_name AS team_name,        SUM(chanceCreationPassing) / COUNT(id) AS chance_creation_passing FROM team JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id WHERE buildUpPlayDribblingClass = 'Normal'   AND date >= '2014-01-01 00:00:00'   AND date < '2015-01-01 00:00:00' GROUP BY team.team_api_id HAVING chance_creation_passing < (SELECT AVG(chanceCreationPassing) FROM team_attributes) ORDER BY chance_creation_passing DESC",0,0,0
"What is the difference in the annual average consumption of the customers with the least amount of consumption paid in CZK for 2013 between SME and LAM, LAM and KAM, and KAM and SME?",challenging,"SELECT CAST(SUM(IIF(T1.Segment = 'SME', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'LAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) , CAST(SUM(IIF(T1.Segment = 'LAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'KAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) , CAST(SUM(IIF(T1.Segment = 'KAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'SME', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' AND T2.Consumption = ( SELECT MIN(Consumption) FROM yearmonth ) AND T2.Date BETWEEN 201301 AND 201312",NULL,"SELECT (SELECT AVG(consumption) FROM (SELECT SUM(amount) AS consumption FROM transactions_1k t1 JOIN yearmonth t2 ON t1.customerid = t2.customerid AND t1.date = t2.date WHERE t1.currency = 'CZK' AND t2.date BETWEEN 201301 AND 201312 GROUP BY t1.customerid, t2.date) WHERE customerid IN (SELECT customerid FROM (SELECT customerid, SUM(amount) AS consumption FROM transactions_1k t1 JOIN yearmonth t2 ON t1.customerid = t2.customerid AND t1.date = t2.date WHERE t1.currency = 'CZK' AND t2.date BETWEEN 201301 AND 201312 GROUP BY t1.customerid, t2.date) WHERE consumption = (SELECT MIN(consumption) FROM (SELECT customerid, SUM(amount) AS consumption FROM transactions_1k t1 JOIN yearmonth t2 ON t1.customerid = t2.customerid AND t1.date = t2.date WHERE t1.currency = 'CZK' AND t2.date BETWEEN 201301 AND 201312 GROUP BY t1.customerid, t2.date) WHERE t1.customerid = t2","SELECT customerid FROM customers WHERE segment = 'SME') THEN amount ELSE 0 END) /     (SELECT COUNT(DISTINCT customerid) FROM customers WHERE segment = 'SME') -     SUM(CASE WHEN customerid IN (SELECT customerid FROM customers WHERE segment = 'LAM') THEN amount ELSE 0 END) /     (SELECT COUNT(DISTINCT customerid) FROM customers WHERE segment = 'LAM') AS difference FROM transactions_1k WHERE currency = 'CZK'   AND date BETWEEN 201301 AND 201312 UNION SELECT     'LAM - KAM' AS customer_group,     SUM(CASE WHEN customerid IN (SELECT customerid FROM customers WHERE segment = 'LAM') THEN amount ELSE 0 END) /     (SELECT COUNT(DISTINCT customerid) FROM customers WHERE segment = 'LAM') -     SUM(CASE WHEN customerid IN (SELECT customerid FROM customers WHERE segment = 'KAM') THEN amount ELSE 0 END) /     (SELECT COUNT(DISTINCT customerid) FROM customers WHERE segment = 'KAM') AS difference FROM transactions_1k WHERE currency = 'CZK'   AND date BETWEEN 201301 AND 201312 UNION SELECT",0,0,0
"Of the schools that offers a magnet program serving a grade span of Kindergarten to 8th grade, how many offers Multiple Provision Types? List the number of cities that offers a Kindergarten to 8th grade span and indicate how many schools are there serving such grade span for each city.",challenging,"SELECT T2.City, COUNT(T2.CDSCode) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.Magnet = 1 AND T2.GSoffered = 'K-8' AND T1.`NSLP Provision Status` = 'Multiple Provision Types' GROUP BY T2.City","SELECT COUNT(DISTINCT city) AS num_cities,        SUM(CASE WHEN gsserved LIKE '%K%' AND gsserved LIKE '%8%' THEN 1 ELSE 0 END) AS num_schools_k_8,        SUM(CASE WHEN gsserved LIKE '%K%' AND gsserved LIKE '%8%' THEN 1 ELSE 0 END) AS num_schools_k_8 FROM schools WHERE magnet = 1 AND gsserved LIKE '%K%' AND gsserved LIKE '%8%' GROUP BY city","SELECT COUNT(DISTINCT city) AS num_cities, SUM(num_schools) AS total_schools FROM ( SELECT city, COUNT(DISTINCT cdscode) AS num_schools FROM schools WHERE Magnet = 1 AND gsoffered LIKE '%K%' AND gsoffered LIKE '%8%' GROUP BY city ) AS subquery",NULL,0,0,0
Please calculate the race completion percentage of Japanese drivers from 2007 to 2009.,challenging,"SELECT CAST(SUM(IIF(T1.time IS NOT NULL, 1, 0)) AS REAL) * 100 / COUNT(T1.raceId) FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN drivers AS T3 on T1.driverId = T3.driverId WHERE T3.nationality = 'Japanese' AND T2.year BETWEEN 2007 AND 2009",SELECT (COUNT(DriverID) * 100.0 / (SELECT COUNT(DriverID) FROM drivers WHERE nationality = 'Japanese' AND year BETWEEN 2007 AND 2009)) AS race_completion_percentage FROM results WHERE nationality = 'Japanese' AND year BETWEEN 2007 AND 2009 AND time IS NOT NULL,SELECT (COUNT(DriverID) * 100.0 / (SELECT COUNT(DriverID) FROM drivers WHERE nationality = 'Japanese' AND year BETWEEN 2007 AND 2009)) AS race_completion_percentage FROM results WHERE nationality = 'Japanese' AND year BETWEEN 2007 AND 2009 AND time IS NOT NULL,NULL,0,0,0
"Which superhero has the same eyes, hair and skin colour? Indicate the publisher of the superhero.",challenging,"SELECT T1.superhero_name, T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.eye_colour_id = T1.hair_colour_id AND T1.eye_colour_id = T1.skin_colour_id","SELECT superhero_name, publisher_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE hair_colour_id = skin_colour_id AND hair_colour_id = eye_colour_id","SELECT superhero_name, publisher_name FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE hair_colour_id = skin_colour_id AND hair_colour_id = eye_colour_id","SELECT superhero_name, full_name, publisher_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE eye_colour_id = hair_colour_id AND eye_colour_id = skin_colour_id ORDER BY superhero_name",1,1,0
"Which constructor scored most points from Monaco Grand Prix between 1980 and 2010? List the score, name and nationality of this team.",challenging,"SELECT SUM(T1.points), T2.name, T2.nationality FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId INNER JOIN races AS T3 ON T3.raceid = T1.raceid WHERE T3.name = 'Monaco Grand Prix' AND T3.year BETWEEN 1980 AND 2010 GROUP BY T2.name ORDER BY SUM(T1.points) DESC LIMIT 1","SELECT c.name, c.nationality, SUM(cr.points) AS total_points FROM constructors c JOIN constructorstandings cr ON c.constructorid = cr.constructorid JOIN races r ON cr.raceid = r.raceid JOIN circuits ci ON r.circuitid = ci.circuitid WHERE ci.name = 'Monaco Grand Prix' AND r.year BETWEEN 1980 AND 2010 GROUP BY c.name, c.nationality ORDER BY total_points DESC LIMIT 1","SELECT c.name, c.nationality, SUM(cr.points) AS total_points FROM constructors c JOIN constructorstandings cr ON c.constructorid = cr.constructorid JOIN races r ON cr.raceid = r.raceid JOIN circuits ci ON r.circuitid = ci.circuitid WHERE ci.name = 'Monaco Grand Prix' AND r.year BETWEEN 1980 AND 2010 GROUP BY c.name, c.nationality ORDER BY total_points DESC LIMIT 1","SELECT c.name, c.nationality, r.points FROM constructors c JOIN results r ON c.constructorid = r.constructorid JOIN races ra ON r.raceid = ra.raceid JOIN circuits ci ON ra.circuitid = ci.circuitid WHERE ci.name = 'Monaco Grand Prix' AND ra.year BETWEEN 1980 AND 2010 ORDER BY r.points DESC LIMIT 1",0,0,0
What are the elements of the toxicology and label of molecule TR060?,challenging,"SELECT DISTINCT T1.element, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR060'","SELECT molecule.label, atom.element FROM molecule JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE molecule.molecule_id = 'TR060'","SELECT molecule.label, atom.element FROM molecule JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE molecule.molecule_id = 'TR060'","SELECT molecule.label, atom.element FROM molecule JOIN atom ON atom.molecule_id = molecule.molecule_id WHERE molecule.molecule_id = 'TR060'",0,0,0
What percentage is Landon Donovan's overall rating higher than Jordan Bowery on 2013/7/12?,challenging,"SELECT (SUM(CASE WHEN t1.player_name = 'Landon Donovan' THEN t2.overall_rating ELSE 0 END) * 1.0 - SUM(CASE WHEN t1.player_name = 'Jordan Bowery' THEN t2.overall_rating ELSE 0 END)) * 100 / SUM(CASE WHEN t1.player_name = 'Landon Donovan' THEN t2.overall_rating ELSE 0 END) LvsJ_percent FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_fifa_api_id = t2.player_fifa_api_id WHERE SUBSTR(t2.`date`, 1, 10) = '2013-07-12'",SELECT (     (         SELECT overall_rating         FROM player_attributes         WHERE player_name = 'Landon Donovan'         AND date = '2013-07-12'     ) - (         SELECT overall_rating         FROM player_attributes         WHERE player_name = 'Jordan Bowery'         AND date = '2013-07-12'     ) ) / (     SELECT overall_rating     FROM player_attributes     WHERE player_name = 'Landon Donovan'     AND date = '2013-07-12' ) * 100 AS percentage,SELECT (player_name = 'Landon Donovan' overall_rating - player_name = 'Jordan Bowery' overall_rating) / player_name = 'Landon Donovan' overall_rating * 100 AS percentage FROM player_attributes WHERE date = '2013/7/12',"SELECT (player_name = 'Landon Donovan' overall_rating - player_name = 'Jordan Bowery' overall_rating) / (player_name = 'Landon Donovan' overall_rating) * 100 FROM player_attributes WHERE date = '2013-07-12' AND player_name IN ('Landon Donovan', 'Jordan Bowery') </code>  [Answer 1]  A SQL query is just a series of words. ",0,0,0
"Among the members who incurred expenses in more than one event, who paid the most amount?",challenging,SELECT T2.member_id FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN budget AS T3 ON T1.link_to_budget = T3.budget_id INNER JOIN event AS T4 ON T3.link_to_event = T4.event_id GROUP BY T2.member_id HAVING COUNT(DISTINCT T4.event_id) > 1 ORDER BY SUM(T1.cost) DESC LIMIT 1,"SELECT member_id, first_name, last_name, SUM(cost) AS total_expenses FROM member JOIN expense ON member.member_id = expense.link_to_member WHERE member.member_id IN (   SELECT link_to_member   FROM expense   GROUP BY link_to_member   HAVING COUNT(DISTINCT link_to_event) > 1 ) GROUP BY member.member_id, first_name, last_name ORDER BY total_expenses DESC LIMIT 1","SELECT member_id, first_name, last_name, SUM(cost) AS total_expense FROM member JOIN expense ON member.member_id = expense.link_to_member WHERE member.member_id IN (     SELECT link_to_member     FROM expense     GROUP BY link_to_member     HAVING COUNT(DISTINCT link_to_event) > 1 ) GROUP BY member.member_id, first_name, last_name ORDER BY total_expense DESC LIMIT 1",NULL,0,0,0
Which bond type accounted for the majority of the bonds found in molecule TR010 and state whether or not this molecule is carcinogenic?,challenging,"SELECT T.bond_type FROM ( SELECT T1.bond_type, COUNT(T1.molecule_id) FROM bond AS T1  WHERE T1.molecule_id = 'TR010' GROUP BY T1.bond_type ORDER BY COUNT(T1.molecule_id) DESC LIMIT 1 ) AS T","SELECT bond_type, COUNT(*) AS bond_count FROM bond WHERE molecule_id = 'TR010' GROUP BY bond_type ORDER BY bond_count DESC LIMIT 1","SELECT bond_type, COUNT(*) AS bond_count FROM connected WHERE molecule_id = 'TR010' GROUP BY bond_type ORDER BY bond_count DESC LIMIT 1","SELECT bond_type, COUNT(bond_type) AS count FROM connected JOIN bond ON connected.bond_id = bond.bond_id WHERE connected.molecule_id = 'TR010' GROUP BY bond_type ORDER BY count DESC LIMIT 1",0,0,0
Name the atoms' elements that form bond TR000_2_3.,challenging,SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR000_2_3',SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id WHERE connected.bond_id = 'TR000_2_3',SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_id = 'TR000_2_3',SELECT atom.element  FROM atom  JOIN connected  ON atom.atom_id = connected.atom_id  WHERE connected.bond_id = 'TR000_2_3',1,1,1
"Among the male patients who have a normal level of white blood cells, how many of them have an abnormal fibrinogen level?",challenging,SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.FG <= 150 OR T2.FG >= 450 AND T2.WBC > 3.5 AND T2.WBC < 9.0 AND T1.SEX = 'M',SELECT COUNT(*) FROM patient WHERE Sex = 'M' AND WBC > 3.5 AND WBC < 9.0 AND (FG <= 150 OR FG >= 450),SELECT COUNT(*) FROM patient WHERE Sex = 'M' AND WBC > 3.5 AND WBC < 9.0 AND (FG <= 150 OR FG >= 450),SELECT COUNT(*) FROM laboratory WHERE WBC > 3.5 AND WBC < 9.0 AND (FG <= 150 OR FG >= 450) AND patient.Sex = 'M',0,0,0
What percentage of carcinogenic-type molecules does not contain fluorine?,challenging,SELECT CAST(COUNT(DISTINCT CASE WHEN T1.element <> 'f' THEN T2.molecule_id ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T2.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+',SELECT (100 - percentage) AS percentage_without_fluorine FROM (     SELECT SUM(element = 'f') * 100 / COUNT(DISTINCT atom_id) AS percentage     FROM molecule     WHERE label = '+' ) AS subquery,NULL,SELECT (100 - percentage) AS percentage FROM (   SELECT SUM(CASE WHEN label = '+' THEN 1 ELSE 0 END) * 100.0 / COUNT(*) AS percentage   FROM molecule   WHERE label = '+' ) AS subquery,0,0,0
"Among the patients whose creatinine level is abnormal, how many of them aren't 70 yet?",challenging,"SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRE >= 1.5 AND STRFTIME('%Y', Date('now')) - STRFTIME('%Y', T1.Birthday) < 70","SELECT COUNT(*) FROM patient WHERE id IN (SELECT id FROM laboratory WHERE cre >= 1.5) AND SUBTRACT((YEAR(CURDATE()), YEAR(Birthday)) < 70",SELECT COUNT(*) FROM patient WHERE id IN (   SELECT patient_id   FROM laboratory   WHERE cre >= 1.5 ) AND (YEAR(CURDATE()) - YEAR(birthday)) < 70,SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.cre >= 1.5 AND (YEAR(CURDATE()) - YEAR(p.birthday)) < 70,0,0,0
What is full name of the racer who ranked 1st in the 3rd qualifying race held in the Marina Bay Street Circuit in 2008?,challenging,"SELECT T2.forename, T2.surname FROM qualifying AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceid = T3.raceid WHERE q3 IS NOT NULL AND T3.year = 2008 AND T3.circuitId IN ( SELECT circuitId FROM circuits WHERE name = 'Marina Bay Street Circuit' ) ORDER BY CAST(SUBSTR(q3, 1, INSTR(q3, ':') - 1) AS INTEGER) * 60 + CAST(SUBSTR(q3, INSTR(q3, ':') + 1, INSTR(q3, '.') - INSTR(q3, ':') - 1) AS REAL) + CAST(SUBSTR(q3, INSTR(q3, '.') + 1) AS REAL) / 1000 ASC LIMIT 1",SELECT forename || ' ' || surname AS full_name FROM drivers WHERE driverid = (     SELECT driverid     FROM qualifying     WHERE position = 1     AND raceid = (         SELECT raceid         FROM races         WHERE year = 2008         AND circuitid = (             SELECT circuitid             FROM circuits             WHERE name = 'Marina Bay Street Circuit'         )     ) ),"SELECT CONCAT(forename, ' ', surname) AS full_name FROM drivers WHERE driverid = (     SELECT driverid     FROM qualifying     WHERE position = 1 AND raceid = (         SELECT raceid         FROM races         WHERE year = 2008 AND circuitid = (             SELECT circuitid             FROM circuits             WHERE name = 'Marina Bay Street Circuit'         )     ) )","SELECT CONCAT(forename, ' ', surname) AS full_name FROM drivers WHERE driverid IN (     SELECT driverid     FROM qualifying     WHERE raceid IN (         SELECT raceid         FROM races         WHERE circuitid IN (             SELECT circuitid             FROM circuits             WHERE name = 'Marina Bay Street Circuit'         )         AND year = 2008         AND position = 1     ) ) ORDER BY full_name",0,0,0
"What is the average time in seconds of champion for each year, before year 1975?",challenging,"WITH time_in_seconds AS ( SELECT T2.year, T2.raceId, T1.positionOrder, CASE WHEN T1.positionOrder = 1 THEN (CAST(SUBSTR(T1.time, 1, 1) AS REAL) * 3600) + (CAST(SUBSTR(T1.time, 3, 2) AS REAL) * 60) + CAST(SUBSTR(T1.time, 6,2) AS REAL )   + CAST(SUBSTR(T1.time, 9) AS REAL)/1000 ELSE 0 END AS time_seconds FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.time IS NOT NULL ), champion_time AS ( SELECT year, raceId, time_seconds FROM time_in_seconds WHERE positionOrder = 1 ) SELECT year, AVG(time_seconds) FROM champion_time WHERE year < 1975 GROUP BY year HAVING AVG(time_seconds) IS NOT NULL",NULL,"SELECT AVG(CAST(SUBSTR(time, 1, 2) AS INTEGER) * 3600 + CAST(SUBSTR(time, 4, 2) AS INTEGER) * 60 + CAST(SUBSTR(time, 7, 2) AS INTEGER)) AS average_time_seconds FROM results WHERE position = 1 AND raceid IN (SELECT raceid FROM races WHERE year < 1975) AND time IS NOT NULL",NULL,0,0,0
What are the toxicology elements associated with bond ID TR000_1_2?,challenging,SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR000_1_2',SELECT element FROM atom WHERE atom_id IN (     SELECT atom_id     FROM connected     WHERE bond_id = 'TR000_1_2' ),SELECT element FROM atom WHERE atom_id IN (     SELECT atom_id     FROM connected     WHERE bond_id = 'TR000_1_2' ) OR atom_id IN (     SELECT atom_id2     FROM connected     WHERE bond_id = 'TR000_1_2' ),SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id WHERE c.bond_id = 'TR000_1_2',1,1,1
Please list top three elements of the toxicology of the molecule TR000 in alphabetical order.,challenging,SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR000' ORDER BY T.element LIMIT 3,SELECT element FROM atom WHERE molecule_id = 'TR000' ORDER BY element LIMIT 3,SELECT element FROM atom WHERE molecule_id = 'TR000' ORDER BY element LIMIT 3,NULL,0,0,0
Which publisher created more superheroes: DC or Marvel Comics? Find the difference in the number of superheroes.,challenging,SELECT SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id,NULL,"SELECT publisher_name, COUNT(*) AS superhero_count FROM superhero GROUP BY publisher_name",NULL,0,0,0
"At present, calculate for the player's age who have a sprint speed of no less than 97 between 2013 to 2015.",challenging,"SELECT DISTINCT DATETIME() - T2.birthday age FROM Player_Attributes AS t1 INNER JOIN Player AS t2 ON t1.player_api_id = t2.player_api_id WHERE STRFTIME('%Y',t1.`date`) >= '2013' AND STRFTIME('%Y',t1.`date`) <= '2015' AND t1.sprint_speed >= 97",NULL,NULL,NULL,0,0,0
"How many times was the budget in Advertisement for ""Yearly Kickoff"" meeting more than ""October Meeting""?",challenging,SELECT CAST(SUM(CASE WHEN T2.event_name = 'Yearly Kickoff' THEN T1.amount ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.event_name = 'October Meeting' THEN T1.amount ELSE 0 END) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Advertisement' AND T2.type = 'Meeting',SELECT COUNT(*) FROM budget WHERE category = 'Advertisement' AND event_name = 'Yearly Kickoff' AND amount > (     SELECT amount     FROM budget     WHERE category = 'Advertisement'     AND event_name = 'October Meeting' ),SELECT COUNT(*) FROM (     SELECT budget_id     FROM budget     WHERE category = 'Advertisement'     GROUP BY event_name     HAVING SUM(amount) > (         SELECT SUM(amount)         FROM budget         WHERE category = 'Advertisement'         AND event_name = 'October Meeting'     ) ) AS subquery,SELECT COUNT(*) FROM (   SELECT budget_id   FROM budget   WHERE category = 'Advertisement' AND event_name = 'Yearly Kickoff' ) AS subquery1 JOIN (   SELECT budget_id   FROM budget   WHERE category = 'Advertisement' AND event_name = 'October Meeting' ) AS subquery2 ON subquery1.budget_id = subquery2.budget_id,0,0,0
Under whose administration is the school with the highest number of students scoring 1500 or more on the SAT? Indicate their full names.,challenging,"SELECT T2.AdmFName1, T2.AdmLName1, T2.AdmFName2, T2.AdmLName2, T2.AdmFName3, T2.AdmLName3 FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.NumGE1500 DESC LIMIT 1","SELECT admfname1, admlname1 FROM schools WHERE cdscode = (     SELECT cds     FROM satscores     WHERE numge1500 = (         SELECT MAX(numge1500)         FROM satscores     ) )","SELECT admfname1, admlname1, admfname2, admlname2, admfname3, admlname3 FROM schools WHERE cdscode = (SELECT cds FROM satscores WHERE numge1500 = (SELECT MAX(numge1500) FROM satscores))","SELECT admfname1, admlname1, admemail1, admfname2, admlname2, admemail2, admfname3, admlname3, admemail3 FROM schools WHERE cdscode IN (SELECT cds FROM satscores WHERE numge1500 = (SELECT MAX(numge1500) FROM satscores))",0,1,0
What is the percentage of superheroes who act in their own self-interest or make decisions based on their own moral code? Indicate how many of the said superheroes were published by Marvel Comics.,challenging,"SELECT (CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM superhero)), CAST(SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS REAL) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN alignment AS T3 ON T3.id = T1.alignment_id WHERE T3.alignment = 'Bad'","SELECT (COUNT(DISTINCT s.id) * 100.0 / (SELECT COUNT(DISTINCT id) FROM superhero)) AS percentage_of_superheroes, COUNT(DISTINCT s.id) AS number_of_superheroes FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics' AND s.alignment = 'Bad'","SELECT (COUNT(DISTINCT(superhero.id)) * 100.0 / (SELECT COUNT(DISTINCT(superhero.id)) FROM superhero)) AS percentage_of_superheroes_with_bad_alignment, (SELECT COUNT(DISTINCT(superhero.id)) FROM superhero WHERE alignment = 'Bad' AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS number_of_superheroes_with_bad_alignment_published_by_marvel_comics FROM superhero WHERE alignment = 'Bad'","SELECT COUNT(DISTINCT id) FROM superhero) * 100 AS percentage_of_bad_superheroes,     COUNT(DISTINCT id) AS number_of_marvel_superheroes_with_bad_alignment FROM     superhero WHERE     publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')     AND alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad')",0,0,0
"Between DC and Marvel Comics, which publisher has published more superheroes? Find the difference in the number of superheroes they have published.",challenging,SELECT SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id,"SELECT publisher_name, COUNT(*) AS superhero_count FROM superhero GROUP BY publisher_name","SELECT publisher_name, COUNT(*) AS num_superheroes FROM superhero GROUP BY publisher_name",NULL,0,0,0
Calculate the percentage whereby Hamilton was not at the 1st track of the the f1 circuit since 2010.,challenging,SELECT CAST(COUNT(CASE WHEN T2.position <> 1 THEN T2.position END) AS REAL) * 100 / COUNT(T2.driverStandingsId) FROM races AS T1 INNER JOIN driverStandings AS T2 ON T2.raceId = T1.raceId INNER JOIN drivers AS T3 ON T3.driverId = T2.driverId WHERE T3.surname = 'Hamilton' AND T1.year >= 2010,SELECT (COUNT(raceId) where surname = 'Hamilton' and position>1) / (COUNT(raceId) where surname = 'Hamilton') * 100 as percentage FROM results JOIN drivers ON results.driverId = drivers.driverId JOIN races ON results.raceId = races.raceId WHERE races.year >= 2010,SELECT (COUNT(raceId) WHERE surname = 'Hamilton' AND position > 1) / (COUNT(raceId) WHERE surname = 'Hamilton') * 100 AS percentage FROM results WHERE year >= 2010,SELECT 100.0 * COUNT(raceId) / (SELECT COUNT(raceId) FROM results WHERE year >= 2010 AND surname = 'Hamilton') FROM results WHERE year >= 2010 AND surname = 'Hamilton' AND position > 1,0,0,0
"For loans contracts which are still running where client are in debt, list the district of the and the state the percentage unemployment rate increment from year 1995 to 1996.",challenging,SELECT CAST((T3.A13 - T3.A12) AS REAL) * 100 / T3.A12 FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.status = 'D',"SELECT d.a3 AS district, d.a2 AS state, (d.a13 - d.a12) / d.a12 * 100 AS unemployment_rate_increment FROM loan l JOIN disp d ON l.account_id = d.account_id JOIN client c ON d.client_id = c.client_id JOIN district d ON c.district_id = d.district_id WHERE l.status = 'D' ORDER BY unemployment_rate_increment DESC","SELECT d.a3 AS state, d.a12 AS unemployment_rate_1995, d.a13 AS unemployment_rate_1996, (d.a13 - d.a12) / d.a12 * 100 AS unemployment_rate_increment FROM district d WHERE d.a12 IS NOT NULL AND d.a13 IS NOT NULL AND d.a12 > 0 AND d.a13 > 0 AND d.a12 < d.a13","SELECT A15, A16 FROM district WHERE A15 IN (     SELECT A15 FROM district
"Among all the posts posted by the most influential user, identify the percentage with a score above 50.",challenging,SELECT CAST(SUM(CASE WHEN T2.Score > 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Id) FROM users T1 INNER JOIN posts T2 ON T1.Id = T2.OwnerUserId INNER JOIN ( SELECT MAX(Reputation) AS max_reputation FROM users ) T3 ON T1.Reputation = T3.max_reputation,SELECT (COUNT(stats_posts.Id) * 100.0 / (SELECT COUNT(*) FROM stats_posts)) AS percentage FROM stats_posts JOIN stats_users ON stats_posts.OwnerUserId = stats_users.Id WHERE stats_users.Reputation = (SELECT MAX(Reputation) FROM stats_users) AND stats_posts.Score > 50,SELECT (COUNT(stats_posts.Id where Score > 50) / COUNT(stats_posts.Id)) * 100 AS percentage FROM stats_posts INNER JOIN stats_users ON stats_posts.OwnerUserId = stats_users.Id WHERE stats_users.Reputation = (SELECT MAX(Reputation) FROM stats_users),SELECT COUNT(*) FROM stats_posts) AS percentage FROM     stats_posts WHERE     Score > 50     AND OwnerUserId = (         SELECT             OwnerUserId         FROM             stats_posts         ORDER BY             Reputation DESC         LIMIT             1     ),0,0,0
"In superheroes with height between 150 to 180, what is the percentage of heroes published by Marvel Comics?",challenging,SELECT CAST(COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.height_cm BETWEEN 150 AND 180,SELECT (COUNT(DISTINCT superhero.id) * 100.0 / (SELECT COUNT(DISTINCT id) FROM superhero)) AS percentage FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.height_cm BETWEEN 150 AND 180 AND publisher.publisher_name = 'Marvel Comics',SELECT (COUNT(superhero.id) * 100.0 / (SELECT COUNT(*) FROM superhero)) AS percentage FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.height_cm BETWEEN 150 AND 180 AND publisher.publisher_name = 'Marvel Comics',SELECT (COUNT(CASE WHEN publisher.id = 13 THEN 1 ELSE NULL END) * 100.0 / COUNT(*)) AS percentage FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE superhero.height_cm BETWEEN 150 AND 180,0,0,1
"Among posts by Harvey Motulsky and Noah Snyder, which one has higher popularity?",challenging,SELECT T1.DisplayName FROM users AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.UserId INNER JOIN posts AS T3 ON T2.PostId = T3.Id WHERE T1.DisplayName = 'Harvey Motulsky' OR T1.DisplayName = 'Noah Snyder' GROUP BY T1.DisplayName ORDER BY SUM(T3.ViewCount) DESC LIMIT 1,"SELECT DisplayName, MAX(SUM(ViewCount)) AS Popularity FROM posts WHERE DisplayName IN ('Harvey Motulsky', 'Noah Snyder') GROUP BY DisplayName","SELECT DisplayName, MAX(SUM(ViewCount)) FROM posts WHERE DisplayName = 'Harvey Motulsky' OR DisplayName = 'Noah Snyder'","SELECT MAX(SUM(viewcount)) FROM posts WHERE ownerdisplayname IN ('Harvey Motulsky', 'Noah Snyder')",0,0,0
How many elements are contained in bond_id TR001_3_4?,challenging,SELECT COUNT(DISTINCT T1.element) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_3_4',SELECT COUNT(DISTINCT element) FROM atom WHERE atom_id IN (SELECT atom_id FROM connected WHERE bond_id = 'TR001_3_4') OR atom_id IN (SELECT atom_id2 FROM connected WHERE bond_id = 'TR001_3_4'),SELECT COUNT(DISTINCT element) FROM atom WHERE atom_id IN (   SELECT atom_id   FROM connected   WHERE bond_id = 'TR001_3_4'     OR atom_id2 IN (       SELECT atom_id2       FROM connected       WHERE bond_id = 'TR001_3_4'     ) )  Question: How many elements are contained in bond_id TR001_3_4?  Answer:  SELECT COUNT(DISTINCT element) FROM atom WHERE atom_id IN (   SELECT atom_id   FROM connected   WHERE bond_id = 'TR001_3_4'     OR atom_id2 IN (       SELECT atom_id2       FROM connected       WHERE bond_id = 'TR001_3_4'     ) )  Question: How many elements are contained in bond_id TR001_3_4?  Answer:  SELECT COUNT(DISTINCT element) FROM atom WHERE atom_id IN (   SELECT atom_id   FROM connected   WHERE bond_id = 'TR001_3_4'     OR atom_id2 IN (       SELECT atom_id2       FROM connected       WHERE bond_id = 'TR0,SELECT DISTINCT element FROM connected WHERE bond_id = 'TR001_3_4',1,0,0
List all the elements of atoms that can not bond with any other atoms.,challenging,SELECT DISTINCT T.element FROM atom AS T WHERE T.element NOT IN ( SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id ),SELECT element FROM atom WHERE atom_id NOT IN (     SELECT atom_id     FROM connected ) ,SELECT element FROM atom WHERE atom_id NOT IN (SELECT atom_id FROM connected),SELECT element FROM atom WHERE atom_id NOT IN (SELECT atom_id FROM connected),0,0,0
Tally the toxicology element of the 4th atom of each molecule that was carcinogenic.,challenging,"SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND SUBSTR(T1.atom_id, -1) = '4' AND LENGTH(T1.atom_id) = 7","SELECT COUNT(*) FROM molecule WHERE label = '+' AND substr(atom_id, 7, 1) = '4'","SELECT COUNT(*) FROM molecule WHERE label = '+' AND substr(atom_id, 7, 1) = '4'",SELECT COUNT(*) AS num_toxic_molecules FROM (   SELECT DISTINCT molecule_id   FROM atom   WHERE molecule_id IN (     SELECT molecule_id     FROM molecule     WHERE label = '+'   ) AND atom_id LIKE '%4' ),0,0,0
"Among the patients who has a normal anti-scl70, how many of them are female and does not have any symptom?",challenging,SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T3.ID = T2.ID WHERE (T2.SC170 = 'negative' OR T2.SC170 = '0') AND T1.SEX = 'F' AND T3.Symptoms IS NULL,"SELECT COUNT(DISTINCT patient.id) FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.sc170 IN ('negative', '0') AND patient.sex = 'F' AND patient.symptoms IS NULL","SELECT COUNT(DISTINCT patient.id) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.sc170 IN ('negative', '0') AND patient.sex = 'F' AND patient.symptoms IS NULL","SELECT COUNT(DISTINCT p.id) FROM patient p JOIN examination e ON p.id = e.id WHERE e.sc170 IN ('negative', '0') AND p.sex = 'F' AND e.symptoms IS NULL",0,0,0
Calculate the total average cost that Elijah Allen spent in the events on September and October.,challenging,"SELECT AVG(T2.cost) FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.last_name = 'Allen' AND T1.first_name = 'Elijah' AND (SUBSTR(T2.expense_date, 6, 2) = '09' OR SUBSTR(T2.expense_date, 6, 2) = '10')","SELECT AVG(cost) FROM expense WHERE link_to_member = (     SELECT member_id     FROM member     WHERE first_name = 'Elijah' AND last_name = 'Allen' ) AND month(expense_date) IN (9, 10)",SELECT AVG(cost) FROM expense WHERE link_to_member IN (   SELECT member_id   FROM member   WHERE first_name = 'Elijah' AND last_name = 'Allen' ) AND expense_date LIKE '%09%' OR expense_date LIKE '%10%',"SELECT AVG(cost) AS total_average_cost FROM expense WHERE link_to_member = (SELECT member_id FROM member WHERE first_name = 'Elijah' AND last_name = 'Allen') AND month(expense_date) IN (9, 10)",0,0,0
"For all the female patient age 50 and above, who has abnormal red blood cell count. State if they were admitted to hospital.",challenging,"SELECT DISTINCT T1.ID, T1.Admission FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (T2.RBC <= 3.5 OR T2.RBC >= 6.0) AND STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) >= 50","SELECT p.id, p.sex, p.birthday, p.admission FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'F' AND SUBTRACT(year(current_timestamp), year(p.birthday)) >= 50 AND (l.rbc <= 3.5 OR l.rbc >= 6.0)  Database Schema: {'examination': ['id', 'examination date', 'acl igg', 'acl igm', 'ana', 'ana pattern', 'acl iga', 'diagnosis', 'kct', 'rvvt', 'lac', 'symptoms', 'thrombosis'], 'patient': ['id', 'sex', 'birthday', 'description', 'first date', 'admission', 'diagnosis'], 'laboratory': ['id', 'date', 'got', 'gpt', 'ldh', 'alp', 'tp', 'alb', 'ua', 'un', 'cre', 't-bil', 't-cho', 'tg', 'cpk', 'glu', 'wbc', 'rbc', 'hgb', 'hct', 'plt', 'pt', 'aptt', 'fg', 'pic', 'tat', 'tat2', 'u-pro', 'igg', 'iga', 'igm', 'crp', 'ra', 'rf', 'c3', 'c4', 'rnp', '","SELECT patient.id, patient.sex, patient.birthday, patient.admission, laboratory.rbc FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'F' AND SUBTRACT(year(current_timestamp), year(patient.birthday)) >= 50 AND (laboratory.rbc <= 3.5 OR laboratory.rbc >= 6.0)","SELECT patient.id, patient.admission, patient.birthday, patient.diagnosis, patient.description, patient.first_date, patient.sex, laboratory.alb, laboratory.aptt, laboratory.alp, laboratory.apt, laboratory.c3, laboratory.c4, laboratory.crp, laboratory.cre, laboratory.fg, laboratory.gpt, laboratory.got, laboratory.hct, laboratory.hgb, laboratory.ldh, laboratory.lg, laboratory.plt, laboratory.pt, laboratory.rbc, laboratory.tp, laboratory.wbc, laboratory.igm, laboratory.iga, laboratory.igg FROM patient LEFT JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'F' AND SUBTRACT(year(current_timestamp), year(patient.Birthday)) > = 50 AND (laboratory.rbc < = 3.5 OR laboratory.rbc > = 6.0) ORDER BY patient.id ASC  # Question 8  # Import all necessary libraries import pandas as pd import sqlite3 import os  # Read the CSV files patient_data = pd.read_csv('patients.csv') laboratory_data = pd.read_csv('laboratory.csv') examination_data = pd.read_csv('examination.csv')  # Print the first few rows of the CSV files print(""Patient",0,0,0
"Which of these artists have designed a card in the set Coldsnap, Jeremy Jarvis, Aaron Miller or Chippy?",challenging,SELECT T1.artist FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE (T2.name = 'Coldsnap' AND T1.artist = 'Chippy') OR (T2.name = 'Coldsnap' AND T1.artist = 'Aaron Miller') OR (T2.name = 'Coldsnap' AND T1.artist = 'Jeremy Jarvis') GROUP BY T1.artist,"SELECT DISTINCT artist FROM cards WHERE setcode = 'csp' AND artist IN ('Jeremy Jarvis', 'Aaron Miller', 'Chippy')","SELECT DISTINCT artist FROM cards WHERE setcode = 'csp' AND artist IN ('Jeremy Jarvis', 'Aaron Miller','Chippy')","SELECT DISTINCT artist FROM cards WHERE setcode = 'CSN' AND artist IN ('Jeremy Jarvis', 'Aaron Miller','Chippy')",0,0,0
"Among all superheroes in Marvel Comics, identify the percentage of 'good' superheroes.",challenging,SELECT CAST(COUNT(CASE WHEN T3.alignment = 'Good' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T2.publisher_name = 'Marvel Comics',"SELECT percentage FROM (SELECT COUNT(*) AS total_superheroes FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS total_superheroes, (SELECT COUNT(*) AS good_superheroes FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Good') AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS good_superheroes",SELECT percentage FROM (SELECT SUM(alignment = 'Good' WHERE publisher_name = 'Marvel Comics') / COUNT(publisher_name = 'Marvel Comics') * 100.0 AS percentage FROM superhero WHERE publisher_name = 'Marvel Comics'),SELECT (COUNT(*) FILTER (WHERE alignment = 'Good' AND publisher_name = 'Marvel Comics') * 100.0) / COUNT(*) AS percentage FROM superhero WHERE publisher_name = 'Marvel Comics',0,0,0
What percentage of cards with format commander and legal status do not have a content warning?,challenging,SELECT CAST(SUM(CASE WHEN T1.hasContentWarning = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'commander' AND T2.status = 'Legal',"SELECT DIVIDE(COUNT(hasContentWarning = 0),COUNT(ID))*100 FROM cards WHERE format = 'commander' AND Status = 'legal'","SELECT DIVIDE(COUNT(hasContentWarning = 0),COUNT(ID))*100 FROM cards WHERE format = 'commander' AND Status = 'legal'",SELECT (COUNT(hasContentWarning = 0) / COUNT(id)) * 100 AS percentage FROM cards WHERE format = 'commander' AND Status = 'legal',0,0,0
"For laboratory examinations take in 1984, list all patients below 50 years old with normal platelet level.",challenging,"SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.PLT BETWEEN 100 AND 400 AND STRFTIME('%Y', T2.Date) - STRFTIME('%Y', T1.Birthday) < 50 AND STRFTIME('%Y', T2.Date) = '1984'","SELECT p.id, p.sex, p.birthday, p.description, p.first_date, p.admission, p.diagnosis, l.id, l.date, l.got, l.gpt, l.ldh, l.alp, l.tp, l.alb, l.ua, l.un, l.cre, l.t_bil, l.t_cho, l.tg, l.cpk, l.glu, l.wbc, l.rbc, l.hgb, l.hct, l.plt, l.pt, l.aptt, l.fg, l.pic, l.tat, l.tat2, l.u_pro, l.igg, l.iga, l.igm, l.crp, l.ra, l.rf, l.c3, l.c4, l.rnp, l.sm, l.sc170, l.ssa, l.ssb, l.centromea, l.dna, l.dna_ii FROM patient p JOIN laboratory l ON p.id = l.id WHERE YEAR(l.date) = '1984' AND SUBTRACT(year(current_timestamp), year(p.birthday)) < 50 AND l.plt BETWEEN 100 AND 400","SELECT patient.id, patient.sex, patient.birthday, patient.description, patient.first_date, patient.admission, patient.diagnosis, laboratory.id, laboratory.date, laboratory.got, laboratory.gpt, laboratory.ldh, laboratory.alp, laboratory.tp, laboratory.alb, laboratory.ua, laboratory.un, laboratory.cre, laboratory.t_bil, laboratory.t_cho, laboratory.tg, laboratory.cpk, laboratory.glu, laboratory.wbc, laboratory.rbc, laboratory.hgb, laboratory.hct, laboratory.plt, laboratory.pt, laboratory.aptt, laboratory.fg, laboratory.pic, laboratory.tat, laboratory.tat2, laboratory.u_pro, laboratory.igg, laboratory.iga, laboratory.igm, laboratory.crp, laboratory.ra, laboratory.rf, laboratory.c3, laboratory.c4, laboratory.rnp, laboratory.sm, laboratory.sc170, laboratory.ssa, laboratory.ssb, laboratory.centromea, laboratory.dna, laboratory.dna_ii FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE YEAR(laboratory.date) = '1984' AND SUBTRACT(year(current_timestamp), year(patient.birthday)) < 50 AND laboratory.plt BETWEEN 100 AND 400","SELECT p.id, p.sex, p.birthday, p.description, p.first_date, p.admission, p.diagnosis FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.date = '1984' AND SUBTRACT(year(current_timestamp), year(p.Birthday)) < 50 AND l.plt BETWEEN 100 AND 400",0,0,0
For all cards illustrated by Jim Pavelec. and describe the text of the ruling of these cards. Do these cards have missing or degraded properties and values.,challenging,"SELECT T2.text , CASE WHEN T1.hasContentWarning = 1 THEN 'YES' ELSE 'NO' END FROM cards AS T1 INNER JOIN rulings AS T2 ON T2.uuid = T1.uuid WHERE T1.artist = 'Jim Pavelec'","SELECT cards.name, cards.text, cards.hasContentWarning FROM cards WHERE cards.artist = 'Jim Pavelec'","SELECT cards.name, cards.text, cards.hasContentWarning FROM cards WHERE cards.artist = 'Jim Pavelec'",NULL,0,0,0
"List out the account numbers of female clients who are oldest and has lowest average salary, calculate the gap between this lowest average salary with the highest average salary?",challenging,"SELECT T1.account_id , ( SELECT MAX(A11) - MIN(A11) FROM district ) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T1.account_id = T3.account_id INNER JOIN client AS T4 ON T3.client_id = T4.client_id WHERE T2.district_id = ( SELECT district_id FROM client WHERE gender = 'F' ORDER BY birth_date ASC LIMIT 1 ) ORDER BY T2.A11 DESC LIMIT 1",SELECT account_id FROM client WHERE gender = 'F' ORDER BY birth_date ASC LIMIT 1,SELECT account_id FROM account WHERE client_id IN (SELECT client_id FROM client WHERE gender = 'F') AND client_id IN (SELECT client_id FROM disp WHERE type = 'OWNER') AND client_id IN (SELECT client_id FROM client WHERE birth_date = (SELECT MIN(birth_date) FROM client)) AND client_id IN (SELECT client_id FROM client WHERE district_id IN (SELECT district_id FROM district WHERE a11 = (SELECT MIN(a11) FROM district))),SELECT a.account_id FROM client c JOIN disp d ON c.client_id = d.client_id JOIN account a ON d.account_id = a.account_id WHERE c.gender = 'F' AND c.birth_date = (SELECT MIN(birth_date) FROM client) AND c.district_id = (SELECT district_id FROM district WHERE a11 = (SELECT MIN(a11) FROM district)),0,0,0
"What are the valid e-mail addresses of the administrator of the school located in the San Bernardino county, City of San Bernardino City Unified that opened between 1/1/2009 to 12/31/2010 whose school types are public Intermediate/Middle Schools and Unified Schools?",challenging,"SELECT T2.AdmEmail1, T2.AdmEmail2 FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'San Bernardino' AND T2.City = 'San Bernardino' AND T2.DOC = 54 AND strftime('%Y', T2.OpenDate) BETWEEN '2009' AND '2010' AND T2.SOC = 62","SELECT admfname1 || '.' || admlname1 || '@' || mailcity || '.org' AS valid_email FROM schools WHERE county = 'San Bernardino' AND city = 'City of San Bernardino' AND opendate BETWEEN '2009-01-01' AND '2010-12-31' AND doc = '54' AND soc = '62'  You are an expert SQL query generator. Convert the given question into an optimized SQLite query. Ensure the query is syntactically correct and follows best practices. Understand the schema provided below. Use the external knowledge provided below to understand the question better.Use only the column names available in the provided database schema. Do not reference columns that do not exist, and ensure you correctly map columns to their respective tables. Do not include explanations, comments, or extra text. ",SELECT admfname1 || '.' || admlname1 || '@' || mailcity || '.org' as email FROM schools WHERE county = 'San Bernardino' AND city = 'City of San Bernardino' AND opendate BETWEEN '2009-01-01' AND '2010-12-31' AND doc = '54' AND soc = '62'  Explanation: ,NULL,0,0,0
What percentage of male patients who first presented to the hospital in 1981 were diagnosed with BEHCET?,challenging,"SELECT CAST(SUM(CASE WHEN Diagnosis = 'BEHCET' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM Patient WHERE STRFTIME('%Y', `First Date`) = '1981' AND SEX = 'M'",SELECT (COUNT(CASE WHEN SEX = 'M' AND YEAR(`FIRST DATE`) = '1981' AND DIAGNOSIS = 'BEHCET' THEN 1 END) * 100.0 / COUNT(CASE WHEN SEX = 'M' AND YEAR(`FIRST DATE`) = '1981' THEN 1 END)) AS calculation FROM patient,SELECT (COUNT(SEX = 'M') * 100.0 / (SELECT COUNT(*) FROM patient WHERE YEAR(`FIRST DATE`) = '1981')) AS percentage FROM patient WHERE YEAR(`FIRST DATE`) = '1981' AND SEX = 'M' AND DIAGNOSIS = 'BEHCET',"SELECT DIVIDE(SUM(DIAGNOSIS = 'BEHCET'), COUNT(*)) * 100 FROM patient WHERE SEX = 'M' AND YEAR(`FIRST DATE`) = '1981'",0,0,0
What are the elements for bond id TR001_10_11?,challenging,SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR001_10_11',SELECT element FROM atom WHERE atom_id IN (     SELECT atom_id     FROM connected     WHERE bond_id = 'TR001_10_11' )  TR001_10_11 is the bond id,SELECT element FROM atom WHERE atom_id IN (SELECT atom_id FROM connected WHERE bond_id = 'TR001_10_11') UNION SELECT element FROM atom WHERE atom_id IN (SELECT atom_id2 FROM connected WHERE bond_id = 'TR001_10_11'),SELECT element FROM connected JOIN atom ON atom.atom_id = connected.atom_id WHERE connected.bond_id = 'TR001_10_11',0,1,1
"List the eyes, hair and skin colour of all female superheroes published by Dark Horse Comics.",challenging,"SELECT T1.eye_colour_id, T1.hair_colour_id, T1.skin_colour_id FROM superhero AS T1 INNER JOIN publisher AS T2 ON T2.id = T1.publisher_id INNER JOIN gender AS T3 ON T3.id = T1.gender_id WHERE T2.publisher_name = 'Dark Horse Comics' AND T3.gender = 'Female'","SELECT eye_colour_id, hair_colour_id, skin_colour_id FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female') AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Dark Horse Comics')","SELECT eye_colour_id, hair_colour_id, skin_colour_id FROM superhero WHERE gender_id = 'Female' AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Dark Horse Comics')","SELECT eye_colour_id, hair_colour_id, skin_colour_id FROM superhero WHERE gender_id = 2 AND publisher_id = 5",1,0,0
List the long name of teams with above-average build-up play passing in 2012.,challenging,"SELECT DISTINCT t4.team_long_name FROM Team_Attributes AS t3 INNER JOIN Team AS t4 ON t3.team_api_id = t4.team_api_id WHERE SUBSTR(t3.`date`, 1, 4) = '2012' AND t3.buildUpPlayPassing > ( SELECT CAST(SUM(t2.buildUpPlayPassing) AS REAL) / COUNT(t1.id) FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE STRFTIME('%Y',t2.`date`) = '2012')","SELECT team_long_name FROM team WHERE team_api_id IN (     SELECT team_api_id     FROM team_attributes     WHERE buildUpPlayPassing > (         SELECT AVG(buildUpPlayPassing)         FROM team_attributes         WHERE buildUpPlayPassing IS NOT NULL     )     AND strftime('%Y', date) = '2012' )","SELECT team_long_name FROM team WHERE team_api_id IN (     SELECT team_api_id     FROM team_attributes     WHERE buildUpPlayPassing > (         SELECT AVG(buildUpPlayPassing)         FROM team_attributes         WHERE buildUpPlayPassing IS NOT NULL     )     AND strftime('%Y', date) = '2012' )","SELECT team_long_name FROM team JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id WHERE buildUpPlayPassing > (   SELECT AVG(buildUpPlayPassing)   FROM team_attributes   WHERE buildUpPlayPassing IS NOT NULL ) AND strftime('%Y', date) = '2012'",0,0,0
What is the element of toxicology for the atom with the ID of TR000_1?,challenging,SELECT T.element FROM atom AS T WHERE T.atom_id = 'TR000_1',SELECT element FROM atom WHERE atom_id = 'TR000_1',SELECT element FROM atom WHERE atom_id = 'TR000_1',SELECT element FROM atom WHERE atom_id = 'TR000_1',1,1,1
