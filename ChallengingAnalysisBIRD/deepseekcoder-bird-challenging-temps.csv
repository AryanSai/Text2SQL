Question,hardness,Gold,Prediction_0.1,Prediction_0.5,Prediction_1.0,EX_0.1,EX_0.5,EX_1.0
List the names of all the cards in the set Hour of Devastation and find the formats in which these cards are legal.,challenging,"SELECT DISTINCT T2.name , CASE WHEN T1.status = 'Legal' THEN T1.format ELSE NULL END FROM legalities AS T1 INNER JOIN cards AS T2 ON T2.uuid = T1.uuid WHERE T2.setCode IN ( SELECT code FROM sets WHERE name = 'Hour of Devastation' )","SELECT c.name, l.format FROM cards c JOIN legalities l ON c.id = l.id WHERE c.setcode = 'HOU'","SELECT c.name, l.format FROM cards c JOIN legalities l ON c.id = l.id WHERE c.setcode = 'HOU'","SELECT c.name, l.format FROM cards c JOIN legalities l ON c.id = l.id JOIN sets s ON c.setcode = s.code WHERE s.name = 'Hour of Devastation'",0,0,0
"For the patient who was diagnosed SLE on 1997/1/27, what was his/her original diagnose when he/she came to the hospital for the first time?",challenging,SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.ID = ( SELECT ID FROM Examination WHERE `Examination Date` = '1997-01-27' AND Diagnosis = 'SLE' ) AND T2.`Examination Date` = T1.`First Date`,SELECT p.diagnosis FROM patient p WHERE p.diagnosis = 'SLE' AND p.first_date = '1997/1/27',SELECT p.diagnosis FROM patient p WHERE p.first_date = (     SELECT MIN(first_date)     FROM patient     WHERE diagnosis = 'SLE' ) AND p.diagnosis = 'SLE',SELECT p.diagnosis AS original_diagnosis FROM patient p JOIN examination e ON p.id = e.id WHERE e.diagnosis = 'SLE' AND e.examination_date = '1997/1/27',0,0,0
List the elements of all the triple bonds.,challenging,SELECT DISTINCT T3.element FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T1.bond_type = '#',SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON atom.molecule_id = bond.molecule_id WHERE bond.bond_type = 'triple',SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON atom.molecule_id = bond.molecule_id WHERE bond.bond_type = 'triple',SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'triple',0,0,0
"What is the average time in seconds of champion for each year, before year 1975?",challenging,"WITH time_in_seconds AS ( SELECT T2.year, T2.raceId, T1.positionOrder, CASE WHEN T1.positionOrder = 1 THEN (CAST(SUBSTR(T1.time, 1, 1) AS REAL) * 3600) + (CAST(SUBSTR(T1.time, 3, 2) AS REAL) * 60) + CAST(SUBSTR(T1.time, 6,2) AS REAL )   + CAST(SUBSTR(T1.time, 9) AS REAL)/1000 ELSE 0 END AS time_seconds FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.time IS NOT NULL ), champion_time AS ( SELECT year, raceId, time_seconds FROM time_in_seconds WHERE positionOrder = 1 ) SELECT year, AVG(time_seconds) FROM champion_time WHERE year < 1975 GROUP BY year HAVING AVG(time_seconds) IS NOT NULL","SELECT      r.year,      AVG(CAST(SUBSTR(r.time, 1, 2) AS INTEGER) * 60 + CAST(SUBSTR(r.time, 4, 2) AS INTEGER) + CAST(SUBSTR(r.time, 7, 2) / 1000 AS INTEGER)) AS avg_time_seconds FROM      races r JOIN      results res ON r.raceid = res.raceid WHERE      r.year < 1975 AND res.position = 1 GROUP BY      r.year","SELECT year, AVG(time_seconds) AS average_time FROM (     SELECT r.year, r.name AS race_name, res.time,            CASE                 WHEN res.time LIKE '%:%' THEN                     CAST(SUBSTR(res.time, 1, 2) * 60 + SUBSTR(res.time, 4, 5) AS FLOAT)                ELSE                     CAST(res.time AS FLOAT)            END AS time_seconds     FROM results res     JOIN races r ON res.raceid = r.raceid     WHERE res.position = 1 AND r.year < 1975 ) subquery GROUP BY year ORDER BY year","SELECT year, AVG(time_seconds) AS avg_time_seconds FROM (     SELECT r.year, r.name AS race_name, res.time,            CAST(SUBSTR(res.time, 1, 2) * 60 + SUBSTR(res.time, 4, 2) + SUBSTR(res.time, 7, 2) / 60.0 AS FLOAT) AS time_seconds     FROM races r     JOIN results res ON r.raceid = res.raceid     WHERE res.position = 1 AND r.year < 1975 ) AS champion_times GROUP BY year ORDER BY year",0,0,0
How many underage patients were examined during the course of the three-year period from 1990 to 1993?,challenging,"SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T2.`Examination Date`) BETWEEN '1990' AND '1993' AND STRFTIME('%Y', T2.`Examination Date`) - STRFTIME('%Y', T1.Birthday) < 18","SELECT COUNT(*) FROM examination e JOIN patient p ON e.id = p.id WHERE p.birthday >= '1990-01-01' AND p.birthday <= '1993-12-31' AND p.birthday > DATE('now', '-18 years')",SELECT COUNT(*) AS underage_patients FROM examination e JOIN patient p ON e.id = p.id WHERE (YEAR(e.examination_date) BETWEEN 1990 AND 1993) AND (YEAR(p.birthday) > YEAR(DATE('now')) - 18),SELECT COUNT(*) AS underage_patients FROM examination e JOIN patient p ON e.id = p.id WHERE DATE(p.birthday) BETWEEN '1990-01-01' AND '1993-12-31' AND YEAR(p.birthday) > YEAR(DATE(p.first_date)) OR (YEAR(p.birthday) = YEAR(DATE(p.first_date)) AND MONTH(p.birthday) > MONTH(DATE(p.first_date))) OR (YEAR(p.birthday) = YEAR(DATE(p.first_date)) AND MONTH(p.birthday) = MONTH(DATE(p.first_date)) AND DAY(p.birthday) >= DAY(DATE(p.first_date))),0,0,0
"What sex is the patient who in a medical examination was diagnosed with PSS and in a laboratory examination had a blood level of C-reactive protein de 2+, createnine 1 and LDH 123?",challenging,SELECT T1.SEX FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T3.ID = T2.ID WHERE T2.Diagnosis = 'PSS' AND T3.CRP = '2+' AND T3.CRE = 1.0 AND T3.LDH = 123,SELECT sex FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE examination.diagnosis = 'PSS' AND laboratory.crp = '2+' AND laboratory.cre = '1' AND laboratory.ldh = '123',SELECT sex FROM patient WHERE id IN (SELECT patient_id FROM examination WHERE diagnosis = 'PSS' AND id IN (SELECT examination_id FROM laboratory WHERE crp = '2+' AND createnine = 1 AND LDH = 123)),SELECT patient.sex FROM patient JOIN examination ON patient.id = examination.id JOIN laboratory ON patient.id = laboratory.id WHERE examination.diagnosis = 'PSS' AND laboratory.crp = '2+' AND laboratory.cre = '1' AND laboratory.ldh = '123',1,0,1
What is the percentage of carcinogenic molecules in triple type bonds?,challenging,SELECT CAST(COUNT(DISTINCT CASE WHEN T2.label = '+' THEN T2.molecule_id ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T2.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type = '#',SELECT (COUNT(DISTINCT m.molecule_id) / (SELECT COUNT(DISTINCT molecule_id) FROM molecule)) * 100 AS percentage_carcinogenic FROM molecule m JOIN molecule_atom ma ON m.molecule_id = ma.molecule_id JOIN atom a ON ma.atom_id = a.atom_id JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON ma.atom_id = c.atom_id OR ma.atom_id2 = c.atom_id WHERE b.bond_type = 'triple' AND a.element = 'C' GROUP BY m.molecule_id,SELECT (COUNT(DISTINCT m.molecule_id) / (SELECT COUNT(DISTINCT molecule_id) FROM molecule)) * 100 AS percentage_carcinogenic FROM molecule m JOIN molecule_molecule mm ON m.molecule_id = mm.molecule_id JOIN bond b ON mm.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id WHERE b.bond_type = 'triple' AND EXISTS (     SELECT 1     FROM atom a1     JOIN atom a2 ON c.atom_id = a1.atom_id     WHERE a1.element = 'C' AND a2.element = 'C' ),SELECT (COUNT(DISTINCT m.molecule_id) * 100.0 / (SELECT COUNT(DISTINCT molecule_id) FROM molecule)) AS percentage_carcinogenic FROM molecule m JOIN molecule_has_bond mb ON m.molecule_id = mb.molecule_id JOIN bond b ON mb.bond_id = b.bond_id WHERE b.bond_type = 'triple',0,0,0
"Among the male patients who have a normal level of white blood cells, how many of them have an abnormal fibrinogen level?",challenging,SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.FG <= 150 OR T2.FG >= 450 AND T2.WBC > 3.5 AND T2.WBC < 9.0 AND T1.SEX = 'M',SELECT COUNT(*) FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'male' AND laboratory.fg IS NULL,SELECT COUNT(*) AS abnormal_fibrinogen_count FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'male' AND l.wbc = 'normal' AND l.fg <> 'normal',SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'male' AND l.fg IS NULL,0,0,0
List the superheroes from Marvel Comics who have the super power of 'Super Strength'.,challenging,SELECT superhero_name FROM superhero AS T1 WHERE EXISTS (SELECT 1 FROM hero_power AS T2 INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Super Strength' AND T1.id = T2.hero_id)AND EXISTS (SELECT 1 FROM publisher AS T4 WHERE T4.publisher_name = 'Marvel Comics' AND T1.publisher_id = T4.id),SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE s.publisher_id IN (     SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics' ) AND sp.power_name = 'Super Strength',SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE s.publisher_id IN (     SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics' ) AND sp.power_name = 'Super Strength',SELECT s.superhero_name FROM superhero s JOIN hero_power hp ON s.id = hp.hero_id JOIN superpower sp ON hp.power_id = sp.id WHERE s.publisher_id IN (     SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics' ) AND sp.power_name = 'Super Strength',1,1,1
"Between DC and Marvel Comics, which publisher has published more superheroes? Find the difference in the number of superheroes they have published.",challenging,SELECT SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id,"SELECT      publisher_name,      COUNT(superhero_name) AS superhero_count FROM      superhero JOIN      publisher ON superhero.publisher_id = publisher.id WHERE      publisher.publisher_name IN ('DC', 'Marvel Comics') GROUP BY      publisher_name ORDER BY      superhero_count DESC LIMIT 2","SELECT      publisher_name,      COUNT(superhero_name) AS number_of_superheroes FROM      superhero JOIN      publisher ON superhero.publisher_id = publisher.id WHERE      publisher.publisher_name IN ('DC', 'Marvel Comics') GROUP BY      publisher_name ORDER BY      number_of_superheroes DESC LIMIT 2","SELECT      publisher_name,      COUNT(superhero_name) AS num_superheroes FROM      superhero JOIN      publisher ON superhero.publisher_id = publisher.id WHERE      publisher.publisher_name IN ('DC', 'Marvel Comics') GROUP BY      publisher_name ORDER BY      num_superheroes DESC LIMIT 1",0,0,0
List the name of leagues in which the average goals by the home team is higher than the away team in the 2009/2010 season.,challenging,SELECT t1.name FROM League AS t1 INNER JOIN Match AS t2 ON t1.id = t2.league_id WHERE t2.season = '2009/2010' GROUP BY t1.name HAVING (CAST(SUM(t2.home_team_goal) AS REAL) / COUNT(DISTINCT t2.id)) - (CAST(SUM(t2.away_team_goal) AS REAL) / COUNT(DISTINCT t2.id)) > 0,SELECT l.name FROM league l JOIN match m ON l.id = m.league_id WHERE m.season = '2009/2010' GROUP BY l.name HAVING AVG(m.home_team_goal) > AVG(m.away_team_goal),SELECT l.name FROM league l JOIN match m ON l.id = m.league_id WHERE m.season = '2009/2010' GROUP BY l.name HAVING AVG(m.home_team_goal) > AVG(m.away_team_goal),SELECT l.name FROM league l JOIN match m ON l.id = m.league_id WHERE m.season = '2009/2010' GROUP BY l.name HAVING AVG(m.home_team_goal) > AVG(m.away_team_goal),1,1,1
What is the ratio of male to female patients among all those with abnormal uric acid counts?,challenging,SELECT CAST(SUM(CASE WHEN T2.UA <= 8.0 AND T1.SEX = 'M' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.UA <= 6.5 AND T1.SEX = 'F' THEN 1 ELSE 0 END) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID,SELECT      (SELECT COUNT(*) FROM patient WHERE sex = 'male' AND ua != 'normal') /      (SELECT COUNT(*) FROM patient WHERE ua != 'normal') AS male_to_female_ratio FROM patient,"SELECT      (SELECT COUNT(*) FROM patient WHERE sex = 'male' AND glu < 6.8) AS male_count,     (SELECT COUNT(*) FROM patient WHERE sex = 'female' AND glu < 6.8) AS female_count,     (SELECT COUNT(*) FROM patient WHERE glu < 6.8) AS total_abnormal_count,     (SELECT COUNT(*) FROM patient WHERE sex = 'male') AS total_male_count,     (SELECT COUNT(*) FROM patient WHERE sex = 'female') AS total_female_count,     ((SELECT COUNT(*) FROM patient WHERE sex = 'male' AND glu < 6.8) / (SELECT COUNT(*) FROM patient WHERE sex = 'male')) / ((SELECT COUNT(*) FROM patient WHERE glu < 6.8) / (SELECT COUNT(*) FROM patient)) AS male_ratio,     ((SELECT COUNT(*) FROM patient WHERE sex = 'female' AND glu < 6.8) / (SELECT COUNT(*) FROM patient WHERE sex = 'female')) / ((SELECT COUNT(*) FROM patient WHERE glu < 6.8) / (SELECT COUNT(*) FROM patient)) AS female_ratio FROM patient LIMIT 1",SELECT      SUM(CASE WHEN p.sex = 'male' THEN 1 ELSE 0 END) / SUM(CASE WHEN p.sex = 'female' THEN 1 ELSE 0 END) AS male_to_female_ratio FROM      patient p JOIN      laboratory l ON p.id = l.id WHERE      l.ua > 0,0,0,0
"List the eyes, hair and skin colour of all female superheroes published by Dark Horse Comics.",challenging,"SELECT T1.eye_colour_id, T1.hair_colour_id, T1.skin_colour_id FROM superhero AS T1 INNER JOIN publisher AS T2 ON T2.id = T1.publisher_id INNER JOIN gender AS T3 ON T3.id = T1.gender_id WHERE T2.publisher_name = 'Dark Horse Comics' AND T3.gender = 'Female'","SELECT s.eye_colour_id, s.hair_colour_id, s.skin_colour_id FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE s.gender_id = (SELECT id FROM gender WHERE gender = 'Female') AND p.publisher_name = 'Dark Horse Comics'","SELECT s.eye_colour_id, s.hair_colour_id, s.skin_colour_id FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE s.gender_id = (SELECT id FROM gender WHERE gender = 'Female') AND p.publisher_name = 'Dark Horse Comics'","SELECT s.eye_colour_id, s.hair_colour_id, s.skin_colour_id FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE s.gender_id = (SELECT id FROM gender WHERE gender = 'Female') AND p.publisher_name = 'Dark Horse Comics'",1,1,1
How many percent of female heroes were published by Marvel Comics?,challenging,SELECT CAST(COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T3.gender = 'Female',SELECT      (SELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female') AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) * 1.0 /      (SELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female')) * 100 AS percentage FROM superhero LIMIT 1,SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female'))) AS percentage_female_heroes_published_by_marvel FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female') AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics'),SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female'))) AS percentage_female_heroes_published_by_marvel FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female') AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics'),0,0,0
What are the elements of the toxicology and label of molecule TR060?,challenging,"SELECT DISTINCT T1.element, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR060'","SELECT atom.element, molecule.label FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR060'","SELECT atom.element, molecule.label FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR060'","SELECT atom.element, molecule.label FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR060'",0,0,0
How much faster in percentage is the champion than the driver who finished the race last in the 2008 Australian Grand Prix?,challenging,"WITH time_in_seconds AS ( SELECT T1.positionOrder, CASE WHEN T1.positionOrder = 1 THEN (CAST(SUBSTR(T1.time, 1, 1) AS REAL) * 3600) + (CAST(SUBSTR(T1.time, 3, 2) AS REAL) * 60) + CAST(SUBSTR(T1.time, 6) AS REAL) ELSE CAST(SUBSTR(T1.time, 2) AS REAL) END AS time_seconds FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Australian Grand Prix' AND T1.time IS NOT NULL AND T2.year = 2008 ), champion_time AS ( SELECT time_seconds FROM time_in_seconds WHERE positionOrder = 1), last_driver_incremental AS ( SELECT time_seconds FROM time_in_seconds WHERE positionOrder = (SELECT MAX(positionOrder) FROM time_in_seconds) ) SELECT (CAST((SELECT time_seconds FROM last_driver_incremental) AS REAL) * 100) / (SELECT time_seconds + (SELECT time_seconds FROM last_driver_incremental) FROM champion_time)","SELECT      ROUND((         (SELECT MIN(r.time) FROM results r JOIN races ra ON r.raceid = ra.raceid WHERE ra.name = 'Australian Grand Prix' AND r.year = 2008) -         (SELECT r.time FROM results r JOIN races ra ON r.raceid = ra.raceid WHERE ra.name = 'Australian Grand Prix' AND r.year = 2008 ORDER BY r.time DESC LIMIT 1)     ) /      (SELECT MIN(r.time) FROM results r JOIN races ra ON r.raceid = ra.raceid WHERE ra.name = 'Australian Grand Prix' AND r.year = 2008) * 100, 2) AS speed_difference_percentage","SELECT      ROUND((         (SELECT MIN(r.time) FROM results r WHERE r.raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix')) -         (SELECT r2.time FROM results r2 WHERE r2.raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND r2.position = 1)     ) * 100.0 / (         SELECT r3.time FROM results r3 WHERE r3.raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix') AND r3.position = (             SELECT MAX(r4.position) FROM results r4 WHERE r4.raceid = (SELECT raceid FROM races WHERE year = 2008 AND name = 'Australian Grand Prix')         )     ), 2) AS speed_difference_percentage FROM results LIMIT 1",SELECT ((SELECT MIN(r.time) FROM results r JOIN races ra ON r.raceid = ra.raceid WHERE ra.name = 'Australian Grand Prix' AND r.year = 2008) - (SELECT r.time FROM results r JOIN races ra ON r.raceid = ra.raceid WHERE ra.name = 'Australian Grand Prix' AND r.year = 2008 AND r.position = 1)) * 100.0 / (SELECT MIN(r.time) FROM results r JOIN races ra ON r.raceid = ra.raceid WHERE ra.name = 'Australian Grand Prix' AND r.year = 2008) AS speed_difference_percentage FROM dual,0,0,0
What is the anti Cardiolipin antibody concentration of the female patient with the highest uric acid level in the normal range?,challenging,"SELECT T3.`aCL IgG`, T3.`aCL IgM`, T3.`aCL IgA` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T3.ID = T2.ID WHERE T1.SEX = 'F' AND T2.UA > 6.5 ORDER BY T2.UA DESC LIMIT 1","SELECT p.id, l.igg FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'female' AND l.ua BETWEEN 0.36 AND 7.0 ORDER BY l.ua DESC LIMIT 1","SELECT p.id, l.ua FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'female' AND l.ua BETWEEN 3.5 AND 7.0 ORDER BY l.ua DESC LIMIT 1","SELECT p.id, l.ua FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'female' AND l.ua BETWEEN 3.36 AND 7.76 ORDER BY l.ua DESC LIMIT 1",0,0,0
List all the elements of atoms that can not bond with any other atoms.,challenging,SELECT DISTINCT T.element FROM atom AS T WHERE T.element NOT IN ( SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id ),SELECT DISTINCT a.element FROM atom a LEFT JOIN connected c ON a.atom_id = c.atom_id WHERE c.atom_id IS NULL,SELECT a.element FROM atom a LEFT JOIN connected c ON a.atom_id = c.atom_id WHERE c.atom_id IS NULL GROUP BY a.element,SELECT DISTINCT a.element FROM atom a LEFT JOIN connected c ON a.atom_id = c.atom_id WHERE c.atom_id IS NULL,0,0,0
What is the percentage of incredibly powerful cards in the set Coldsnap?,challenging,SELECT CAST(SUM(CASE WHEN T1.cardKingdomFoilId IS NOT NULL AND T1.cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE T2.name = 'Coldsnap',SELECT      (SELECT COUNT(*) FROM cards WHERE setcode = 'CNS' AND power >= 10) * 1.0 / COUNT(*) * 100 AS percentage FROM      cards WHERE      setcode = 'CNS',SELECT (SELECT COUNT(*) FROM cards WHERE cards.setcode = 'CNS' AND cards.power >= 10) * 100.0 / COUNT(*) AS percentage_powerful_cards FROM cards WHERE cards.setcode = 'CNS',SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode = 'CNS')) AS percentage_powerful FROM cards WHERE setcode = 'CNS' AND edhrecrank > 9,0,0,0
"What number of patients with a degree of thrombosis level 2 and ANA pattern of only S, have a level of anti-Cardiolip in antibody (IgM) 20% higher than average?",challenging,SELECT COUNT(*) FROM Examination WHERE Thrombosis = 2 AND `ANA Pattern` = 'S' AND `aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination WHERE Thrombosis = 2 AND `ANA Pattern` = 'S'),SELECT COUNT(*) AS number_of_patients FROM patient p JOIN examination e ON p.id = e.id WHERE e.thrombosis = 2 AND e.ana_pattern = 'S' AND e.acl_igm > (SELECT AVG(acl_igm) + 0.2 * AVG(acl_igm) FROM examination) ,SELECT COUNT(*) AS number_of_patients FROM patient p JOIN examination e ON p.id = e.id WHERE e.thrombosis = 2 AND e.ana_pattern = 'S' AND e.acl_igm >= (SELECT AVG(acl_igm) * 1.2 FROM examination),SELECT COUNT(*) AS number_of_patients FROM patient p JOIN examination e ON p.id = e.id WHERE e.thrombosis = 2 AND e.ana_pattern = 'S' AND e.acl_igm >= (     SELECT AVG(acl_igm) * 1.2     FROM examination ),0,0,0
What is the name of the social event that was attended by the vice president of the Student_Club located at 900 E. Washington St.?,challenging,SELECT T2.event_name FROM attendance AS T1 INNER JOIN event AS T2 ON T2.event_id = T1.link_to_event INNER JOIN member AS T3 ON T1.link_to_member = T3.member_id WHERE T3.position = 'Vice President' AND T2.location = '900 E. Washington St.' AND T2.type = 'Social',SELECT e.event_name FROM event e JOIN attendance a ON e.event_id = a.link_to_event JOIN member m ON a.link_to_member = m.member_id JOIN major mj ON m.link_to_major = mj.major_id WHERE m.first_name = 'Vice President' AND m.last_name = 'Student_Club' AND m.zip = '900 E. Washington St.',SELECT e.event_name FROM event e JOIN attendance a ON e.event_id = a.link_to_event JOIN member m ON a.link_to_member = m.member_id JOIN major mj ON m.link_to_major = mj.major_id WHERE m.first_name = 'Vice President' AND m.last_name = 'Student_Club' AND m.zip = '900 E. Washington St.',SELECT e.event_name FROM event e JOIN attendance a ON e.event_id = a.link_to_event JOIN member m ON a.link_to_member = m.member_id JOIN major mj ON m.link_to_major = mj.major_id WHERE m.first_name = 'Vice President' AND m.last_name = 'Student_Club' AND m.zip = '900 E. Washington St.',0,0,0
What is the percentage of cards whose language is French among the Story Spotlight cards?,challenging,SELECT CAST(SUM(CASE WHEN T2.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.isStorySpotlight = 1,SELECT      (COUNT(DISTINCT cs.id) * 100.0 / COUNT(DISTINCT c.id)) AS percentage FROM      cards c JOIN      sets s ON c.setcode = s.code WHERE      s.type = 'expansion' AND c.isstoryspotlight = 1 AND c.language = 'French',SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE isstoryspotlight = 1)) AS percentage FROM cards JOIN foreign_data ON cards.id = foreign_data.id WHERE cards.isstoryspotlight = 1 AND foreign_data.language = 'French',SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE isstoryspotlight = 1)) AS percentage FROM cards JOIN foreign_data ON cards.id = foreign_data.id WHERE cards.isstoryspotlight = 1 AND foreign_data.language = 'French',0,0,0
How many atoms with iodine and with sulfur type elements are there in single bond molecules?,challenging,"SELECT COUNT(DISTINCT CASE WHEN T1.element = 'i' THEN T1.atom_id ELSE NULL END) AS iodine_nums , COUNT(DISTINCT CASE WHEN T1.element = 's' THEN T1.atom_id ELSE NULL END) AS sulfur_nums FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '-'","SELECT COUNT(*) FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id OR a.atom_id = c.atom_id2 WHERE a.element IN ('I', 'S') AND b.bond_type = 'single'","SELECT COUNT(*)  FROM atom a  JOIN molecule m ON a.molecule_id = m.molecule_id  JOIN bond b ON m.molecule_id = b.molecule_id  JOIN connected c ON a.atom_id = c.atom_id  WHERE a.element IN ('I', 'S')  AND b.bond_type = 'single'","SELECT COUNT(*) AS count FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN connected c ON a.atom_id = c.atom_id WHERE a.element IN ('I', 'S') AND b.bond_type = 'single'",0,0,0
List the element and bond type included in the molecule with molecule ID of TR002.,challenging,"SELECT DISTINCT T1.element, T2.bond_type FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR002'","SELECT atom.element, bond.bond_type FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.molecule_id = 'TR002'","SELECT atom.element, bond.bond_type FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE molecule.molecule_id = 'TR002' AND molecule.molecule_id = atom.molecule_id AND molecule.molecule_id = bond.molecule_id","SELECT atom.element, bond.bond_type FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE molecule.molecule_id = 'TR002' AND molecule.molecule_id = atom.molecule_id AND molecule.molecule_id = bond.molecule_id",0,0,0
"How many times was the budget in Advertisement for ""Yearly Kickoff"" meeting more than ""October Meeting""?",challenging,SELECT CAST(SUM(CASE WHEN T2.event_name = 'Yearly Kickoff' THEN T1.amount ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.event_name = 'October Meeting' THEN T1.amount ELSE 0 END) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Advertisement' AND T2.type = 'Meeting',SELECT COUNT(*)  FROM budget  WHERE category = 'Advertisement'  AND event_name = 'Yearly Kickoff'  AND amount > (     SELECT amount      FROM budget      WHERE category = 'Advertisement'      AND event_name = 'October Meeting' ),SELECT      COUNT(*)  FROM      budget  WHERE      category = 'Advertisement'      AND event_name = 'Yearly Kickoff'      AND amount > (         SELECT              amount          FROM              budget          WHERE              category = 'Advertisement'              AND event_name = 'October Meeting'     ),SELECT      COUNT(*)  FROM      budget  WHERE      category = 'Advertisement'      AND event_name = 'Yearly Kickoff'      AND amount > (         SELECT              amount          FROM              budget          WHERE              category = 'Advertisement'              AND event_name = 'October Meeting'     ),0,0,0
"Among all superheroes created by George Lucas, identify the percentage of female superheroes.",challenging,SELECT CAST(COUNT(CASE WHEN T3.gender = 'Female' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.publisher_name = 'George Lucas',SELECT      (COUNT(DISTINCT s.id) FILTER (WHERE s.gender_id = (SELECT id FROM gender WHERE gender = 'Female'))) * 100.0 / COUNT(DISTINCT s.id) AS percentage_female FROM      superhero s JOIN      publisher p ON s.publisher_id = p.id WHERE      p.publisher_name = 'George Lucas',SELECT      (COUNT(DISTINCT s.id) FILTER (WHERE s.gender_id = (SELECT id FROM gender WHERE gender = 'Female'))) * 100.0 / COUNT(DISTINCT s.id) AS percentage_female FROM      superhero s JOIN      publisher p ON s.publisher_id = p.id WHERE      p.publisher_name = 'George Lucas',SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'George Lucas'))) AS percentage_female_superheroes FROM superhero WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female') AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'George Lucas'),1,1,1
Write the full names of students who received funds on the date of 9/9/2019 and include the amount received.,challenging,"SELECT DISTINCT T3.first_name, T3.last_name, T4.amount FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T3.member_id = T2.link_to_member INNER JOIN income AS T4 ON T4.link_to_member = T3.member_id WHERE T4.date_received = '2019-09-09'","SELECT first_name || ' ' || last_name AS full_name, amount FROM member JOIN income ON member.member_id = income.link_to_member WHERE income.date_received = '2019-09-09'","SELECT first_name || ' ' || last_name AS full_name, amount FROM member JOIN income ON member.member_id = income.link_to_member WHERE income.date_received = '2019-09-09'","SELECT first_name || ' ' || last_name AS full_name, amount FROM member JOIN income ON member.member_id = income.link_to_member WHERE income.date_received = '2019-09-09'",0,0,0
What percentage is Landon Donovan's overall rating higher than Jordan Bowery on 2013/7/12?,challenging,"SELECT (SUM(CASE WHEN t1.player_name = 'Landon Donovan' THEN t2.overall_rating ELSE 0 END) * 1.0 - SUM(CASE WHEN t1.player_name = 'Jordan Bowery' THEN t2.overall_rating ELSE 0 END)) * 100 / SUM(CASE WHEN t1.player_name = 'Landon Donovan' THEN t2.overall_rating ELSE 0 END) LvsJ_percent FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_fifa_api_id = t2.player_fifa_api_id WHERE SUBSTR(t2.`date`, 1, 10) = '2013-07-12'",SELECT      ((MAX(pa1.overall_rating) - MAX(pa2.overall_rating)) / MAX(pa2.overall_rating)) * 100 AS rating_difference_percentage FROM      player_attributes pa1 JOIN      player p1 ON pa1.player_api_id = p1.player_api_id JOIN      player_attributes pa2 ON pa2.player_api_id = (         SELECT player_api_id          FROM player          WHERE player_name = 'Jordan Bowery'     ) WHERE      p1.player_name = 'Landon Donovan'      AND pa1.date = '2013/7/12'      AND pa2.date = '2013/7/12',SELECT ((SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT id FROM player WHERE player_name = 'Landon Donovan') AND date = '2013/7/12') - (SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT id FROM player WHERE player_name = 'Jordan Bowery') AND date = '2013/7/12')) * 100.0 / (SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT id FROM player WHERE player_name = 'Jordan Bowery') AND date = '2013/7/12') AS rating_difference_percentage FROM player_attributes LIMIT 1,SELECT ((SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT id FROM player WHERE player_name = 'Landon Donovan') AND date = '2013/7/12') - (SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT id FROM player WHERE player_name = 'Jordan Bowery') AND date = '2013/7/12')) * 100.0 / (SELECT overall_rating FROM player_attributes WHERE player_api_id = (SELECT id FROM player WHERE player_name = 'Jordan Bowery') AND date = '2013/7/12') AS rating_difference_percentage FROM player_attributes WHERE player_api_id = (SELECT id FROM player WHERE player_name = 'Landon Donovan') AND date = '2013/7/12',0,0,0
What percentage of cards without power are in French?,challenging,SELECT CAST(SUM(CASE WHEN T2.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.power IS NULL OR T1.power = '*',SELECT      (COUNT(DISTINCT CASE WHEN cards.language = 'French' THEN cards.id END) * 1.0 / COUNT(DISTINCT cards.id)) * 100 AS percentage_french_no_power FROM      cards WHERE      cards.power IS NULL,SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE power IS NULL)) AS percentage FROM cards WHERE power IS NULL AND setcode IN (SELECT code FROM sets WHERE mtgocode IN (SELECT mtgocode FROM set_translations WHERE language = 'French')),SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE power IS NULL)) AS percentage FROM cards WHERE power IS NULL AND setcode IN (SELECT code FROM sets JOIN set_translations ON sets.code = set_translations.setcode WHERE language = 'French'),0,0,0
"Provide ID, sex and age of patient who has blood glucose (GLU) not within normal range but with total cholesterol(T-CHO) within normal range.",challenging,"SELECT DISTINCT T1.ID, T1.SEX , STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GLU >= 180 AND T2.`T-CHO` < 250","SELECT p.id, p.sex, (julianday('now') - julianday(p.birthday)) / 365.25 AS age FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.glu < 100 OR l.glu > 140 AND l.t_cho >= 200 AND l.t_cho <= 240","SELECT p.id, p.sex, (julianday('now') - julianday(p.birthday))/365.25 AS age FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.glu < 60 OR l.glu > 110 AND l.t_cho >= 200 AND l.t_cho <= 240","SELECT p.id, p.sex, (julianday('now') - julianday(p.birthday)) / 365.25 AS age FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.glu < 60 OR l.glu > 110 AND l.t_cho >= 180 AND l.t_cho <= 250",0,0,0
"For the teams with normal build-up play dribbling class in 2014, List the names of the teams with less than average chance creation passing, in descending order of chance creation passing.",challenging,"SELECT t3.team_long_name FROM Team AS t3 INNER JOIN Team_Attributes AS t4 ON t3.team_api_id = t4.team_api_id WHERE t4.buildUpPlayDribblingClass = 'Normal' AND t4.chanceCreationPassing < ( SELECT CAST(SUM(t2.chanceCreationPassing) AS REAL) / COUNT(t1.id) FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t2.buildUpPlayDribblingClass = 'Normal' AND SUBSTR(t2.`date`, 1, 4) = '2014') ORDER BY t4.chanceCreationPassing DESC",SELECT t.team_long_name FROM team t JOIN team_attributes ta ON t.team_api_id = ta.team_api_id WHERE ta.buildupplaydribblingclass = 'Normal' AND ta.date LIKE '2014%' AND ta.chancecreationpassing < (SELECT AVG(chancecreationpassing) FROM team_attributes WHERE date LIKE '2014%') ORDER BY ta.chancecreationpassing DESC,SELECT t.team_long_name FROM team t JOIN team_attributes ta ON t.team_api_id = ta.team_api_id WHERE ta.buildupplaydribblingclass = 'Normal' AND ta.date LIKE '2014%' AND ta.chancecreationpassing < (SELECT AVG(chancecreationpassing) FROM team_attributes WHERE date LIKE '2014%') ORDER BY ta.chancecreationpassing DESC,SELECT t.team_long_name FROM team_attributes ta JOIN team t ON ta.team_api_id = t.team_api_id WHERE ta.date LIKE '2014%' AND ta.buildupplaydribblingclass = 'Normal' AND ta.team_api_id IN (     SELECT team_api_id     FROM team_attributes     WHERE date LIKE '2014%'     GROUP BY team_api_id     HAVING AVG(chancecreationpassing) < (         SELECT AVG(chancecreationpassing)         FROM team_attributes         WHERE date LIKE '2014%'     ) ) ORDER BY ta.chancecreationpassing DESC,0,0,0
"Consider the average difference between K-12 enrollment and 15-17 enrollment of schools that are locally funded, list the names and DOC type of schools which has a difference above this average.",challenging,"SELECT T2.School, T2.DOC FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.FundingType = 'Locally funded' AND (T1.`Enrollment (K-12)` - T1.`Enrollment (Ages 5-17)`) > (SELECT AVG(T3.`Enrollment (K-12)` - T3.`Enrollment (Ages 5-17)`) FROM frpm AS T3 INNER JOIN schools AS T4 ON T3.CDSCode = T4.CDSCode WHERE T4.FundingType = 'Locally funded')","SELECT s.school, s.doc FROM schools s WHERE s.statustype = 'Locally Funded' AND (SELECT AVG(s2.enrollment_k_12 - s2.enrollment_ages_5_17)      FROM schools s2      WHERE s2.statustype = 'Locally Funded') < (s.enrollment_k_12 - s.enrollment_ages_5_17) ","SELECT s.school, s.doc FROM schools s WHERE s.statustype = 'Locally Funded' AND ABS(s.enroll12 - (SELECT AVG(enrollment_ages_5_17) FROM frpm WHERE frpm.educational_option_type = 'K-12')) > (     SELECT AVG(ABS(enrollment_ages_5_17 - enrollment_k_12))     FROM (         SELECT f1.enrollment_ages_5_17, f2.enrollment_k_12         FROM frpm f1         JOIN frpm f2 ON f1.school_code = f2.school_code         WHERE f1.educational_option_type = 'K-12' AND f2.educational_option_type = 'K-12'     ) subquery )","SELECT s.school, s.doc FROM schools s WHERE s.statustype = 'Locally Funded' AND ABS((SELECT AVG(enrollment_k12 - enrollment_ages_5_17)          FROM schools          WHERE statustype = 'Locally Funded') - (s.enrollment_k12 - s.enrollment_ages_5_17)) > 0",0,0,0
"Based on posts posted by Community, calculate the percentage of posts that use the R language.",challenging,"SELECT CAST(SUM(IIF(T3.TagName = 'r', 1, 0)) AS REAL) * 100 / COUNT(T1.Id) FROM users AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.UserId INNER JOIN tags AS T3 ON T3.ExcerptPostId = T2.PostId WHERE T1.DisplayName = 'Community'",SELECT (SELECT COUNT(*) FROM posts WHERE tags LIKE '%R%') * 100.0 / COUNT(*) AS percentage_of_r_posts FROM posts WHERE owneruserid IN (SELECT id FROM users WHERE displayname = 'Community'),SELECT (SELECT COUNT(*) FROM posts WHERE tags LIKE '%R%') * 100.0 / COUNT(*) AS percentage_R_posts FROM posts WHERE owneruserid IN (SELECT id FROM users WHERE displayname = 'Community'),SELECT (SELECT COUNT(*) FROM posts WHERE tags LIKE '%R%') * 100.0 / COUNT(*) AS R_language_percentage FROM posts WHERE owneruserid IN (SELECT id FROM users WHERE displayname = 'Community'),0,0,0
"For patient born between 1936-1956, how many male patients have creatinine phosphokinase beyond the normal range?",challenging,"SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.Birthday) BETWEEN '1936' AND '1956' AND T1.SEX = 'M' AND T2.CPK >= 250",SELECT COUNT(*) AS male_patients_with_high_cpk FROM patient WHERE sex = 'male' AND birthday BETWEEN 1936 AND 1956 AND id IN (     SELECT patient_id     FROM laboratory     WHERE cpk > 200 ),SELECT COUNT(*) AS male_patients_with_high_cpk FROM patient WHERE sex = 'male' AND birthday BETWEEN 1936 AND 1956 AND id IN (     SELECT patient_id     FROM laboratory     WHERE cpk > 200 ),SELECT COUNT(*) AS male_patients_with_high_cpk FROM patient WHERE sex = 'male' AND id IN (     SELECT patient_id     FROM laboratory     WHERE cre > 200 ) AND YEAR(birthday) BETWEEN 1936 AND 1956,0,0,0
What was the difference in gas consumption between CZK-paying customers and EUR-paying customers in 2012?,challenging,"SELECT SUM(IIF(T1.Currency = 'CZK', T2.Consumption, 0)) - SUM(IIF(T1.Currency = 'EUR', T2.Consumption, 0)) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE SUBSTR(T2.Date, 1, 4) = '2012'",SELECT      SUM(CASE WHEN c.currency = 'CZK' THEN y.consumption ELSE 0 END) -      SUM(CASE WHEN c.currency = 'EUR' THEN y.consumption ELSE 0 END) AS consumption_difference FROM      yearmonth y JOIN      customers c ON y.customerid = c.customerid WHERE      YEAR(y.date) = 2012,"SELECT      SUM(CASE WHEN c.currency = 'CZK' THEN y.consumption ELSE 0 END) -      SUM(CASE WHEN c.currency = 'EUR' THEN y.consumption ELSE 0 END) AS consumption_difference FROM      yearmonth y JOIN      customers c ON y.customerid = c.customerid WHERE      strftime('%Y', y.date) = '2012'","SELECT      SUM(CASE WHEN c.currency = 'CZK' THEN y.consumption ELSE 0 END) -      SUM(CASE WHEN c.currency = 'EUR' THEN y.consumption ELSE 0 END) AS consumption_difference FROM      yearmonth y JOIN      customers c ON y.customerid = c.customerid WHERE      strftime('%Y', y.date) = '2012'",0,0,0
"List out the account numbers of female clients who are oldest and has lowest average salary, calculate the gap between this lowest average salary with the highest average salary?",challenging,"SELECT T1.account_id , ( SELECT MAX(A11) - MIN(A11) FROM district ) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T1.account_id = T3.account_id INNER JOIN client AS T4 ON T3.client_id = T4.client_id WHERE T2.district_id = ( SELECT district_id FROM client WHERE gender = 'F' ORDER BY birth_date ASC LIMIT 1 ) ORDER BY T2.A11 DESC LIMIT 1","SELECT      a.account_id FROM      account a JOIN      disp d ON a.account_id = d.account_id JOIN      client c ON d.client_id = c.client_id WHERE      c.gender = 'F' GROUP BY      a.account_id ORDER BY      MIN(a.date) ASC,      AVG(a.amount) ASC LIMIT 1",SELECT a.account_id FROM account a JOIN disp d ON a.account_id = d.account_id JOIN client c ON d.client_id = c.client_id WHERE c.gender = 'F' AND c.birth_date = (SELECT MIN(birth_date) FROM client WHERE gender = 'F') AND a.district_id = (SELECT district_id FROM district WHERE a2 = (SELECT MIN(a2) FROM district)) AND a.frequency = (SELECT MIN(frequency) FROM account) ORDER BY a.frequency ASC LIMIT 1,SELECT a.account_id FROM account a JOIN disp d ON a.account_id = d.account_id JOIN client c ON d.client_id = c.client_id JOIN district di ON c.district_id = di.district_id WHERE c.gender = 'F' ORDER BY di.a11 ASC LIMIT 1 ,0,0,0
Name chemical elements that form a bond TR001_10_11.,challenging,SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR001_10_11',SELECT DISTINCT e.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.molecule_id = 'TR001_10_11' ORDER BY e.element,SELECT DISTINCT e.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.molecule_id = 'TR001_10_11' ORDER BY e.element,SELECT DISTINCT e.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.molecule_id = 'TR001_10_11' AND b.bond_type = 'TR001',0,0,0
How many elements are contained in bond_id TR001_3_4?,challenging,SELECT COUNT(DISTINCT T1.element) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_3_4',SELECT COUNT(DISTINCT atom_id) FROM connected WHERE bond_id = 'TR001_3_4',SELECT COUNT(DISTINCT atom_id) FROM connected WHERE bond_id = 'TR001_3_4',SELECT COUNT(DISTINCT atom_id) FROM connected WHERE bond_id = 'TR001_3_4',0,0,0
"Please list the account types that are not eligible for loans, and the average income of residents in the district where the account is located exceeds $8000 but is no more than $9000.",challenging,SELECT T3.type FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T2.account_id = T3.account_id WHERE T3.type != 'OWNER' AND T1.A11 BETWEEN 8000 AND 9000,SELECT a.type FROM disp d JOIN account a ON d.account_id = a.account_id JOIN client c ON d.client_id = c.client_id JOIN district di ON c.district_id = di.district_id WHERE di.a11 > 8000 AND di.a11 <= 9000 AND d.type = 'OWNER' AND NOT EXISTS (     SELECT 1     FROM loan l     WHERE l.account_id = d.account_id ) ,SELECT a.type FROM disp d JOIN account a ON d.account_id = a.account_id JOIN client c ON d.client_id = c.client_id JOIN district di ON c.district_id = di.district_id WHERE di.a11 > 8000 AND di.a11 <= 9000 AND d.type = 'OWNER' AND NOT EXISTS (     SELECT 1     FROM loan l     WHERE l.account_id = d.account_id ) ,SELECT a.type FROM disp d JOIN account a ON d.account_id = a.account_id JOIN client c ON d.client_id = c.client_id JOIN district di ON c.district_id = di.district_id WHERE di.a11 BETWEEN 8000 AND 9000 AND d.type = 'OWNER' AND NOT EXISTS (     SELECT 1     FROM loan l     WHERE l.account_id = d.account_id ) ,0,0,0
"What is the difference of the average ball control score between Abdou Diallo and Aaron Appindangoye
?",challenging,SELECT CAST(SUM(CASE WHEN t1.player_name = 'Abdou Diallo' THEN t2.ball_control ELSE 0 END) AS REAL) / COUNT(CASE WHEN t1.player_name = 'Abdou Diallo' THEN t2.id ELSE NULL END) - CAST(SUM(CASE WHEN t1.player_name = 'Aaron Appindangoye' THEN t2.ball_control ELSE 0 END) AS REAL) / COUNT(CASE WHEN t1.player_name = 'Aaron Appindangoye' THEN t2.id ELSE NULL END) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id,SELECT ABS(AVG(pa.ball_control) - AVG(pa2.ball_control)) AS difference FROM player_attributes pa JOIN player p ON pa.player_api_id = p.player_api_id JOIN player_attributes pa2 ON pa2.player_api_id = (     SELECT player_api_id     FROM player     WHERE player_name = 'Aaron Appindangoye' ) WHERE p.player_name = 'Abdou Diallo',SELECT ABS(AVG(pa.ball_control) - AVG(pa2.ball_control)) AS difference FROM player_attributes pa JOIN player p ON pa.player_api_id = p.player_api_id JOIN player_attributes pa2 ON pa2.player_api_id = (     SELECT player_api_id     FROM player     WHERE player_name = 'Aaron Appindangoye' ) WHERE p.player_name = 'Abdou Diallo',"SELECT ABS(AVG(pa.ball_control) - AVG(pa2.ball_control)) AS difference FROM player_attributes pa JOIN player p ON pa.player_api_id = p.player_api_id JOIN player_attributes pa2 ON p.player_api_id = pa2.player_api_id WHERE p.player_name IN ('Abdou Diallo', 'Aaron Appindangoye')",1,1,0
What is full name of the racer who ranked 1st in the 3rd qualifying race held in the Marina Bay Street Circuit in 2008?,challenging,"SELECT T2.forename, T2.surname FROM qualifying AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceid = T3.raceid WHERE q3 IS NOT NULL AND T3.year = 2008 AND T3.circuitId IN ( SELECT circuitId FROM circuits WHERE name = 'Marina Bay Street Circuit' ) ORDER BY CAST(SUBSTR(q3, 1, INSTR(q3, ':') - 1) AS INTEGER) * 60 + CAST(SUBSTR(q3, INSTR(q3, ':') + 1, INSTR(q3, '.') - INSTR(q3, ':') - 1) AS REAL) + CAST(SUBSTR(q3, INSTR(q3, '.') + 1) AS REAL) / 1000 ASC LIMIT 1","SELECT drivers.forename, drivers.surname FROM drivers JOIN qualifying ON drivers.driverid = qualifying.driverid JOIN races ON qualifying.raceid = races.raceid WHERE races.circuitid = (     SELECT circuitid     FROM circuits     WHERE name = 'Marina Bay Street Circuit' ) AND races.year = 2008 AND qualifying.position = 1 AND races.round = 3","SELECT forename, surname FROM drivers JOIN qualifying ON drivers.driverid = qualifying.driverid JOIN races ON qualifying.raceid = races.raceid WHERE races.circuitid = (SELECT circuitid FROM circuits WHERE name = 'Marina Bay Street Circuit') AND races.year = 2008 AND qualifying.position = 1 AND races.round = 3","SELECT forename, surname FROM drivers WHERE driverid IN (SELECT driverid FROM qualifying WHERE raceid IN (SELECT raceid FROM races WHERE circuitid IN (SELECT circuitid FROM circuits WHERE name = 'Marina Bay Street Circuit') AND year = 2008 AND round = 3) AND position = 1)",0,0,0
"For the patients with a normal range of creatinine phosphokinase, how many of them have a positive measure of degree of coagulation?",challenging,SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.CPK < 250 AND (T3.KCT = '+' OR T3.RVVT = '+' OR T3.LAC = '+'),SELECT COUNT(*)  FROM patient  JOIN laboratory ON patient.id = laboratory.id  WHERE laboratory.cre >= 20 AND laboratory.cre <= 150 AND laboratory.pt > laboratory.aptt,SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.cpk BETWEEN 50 AND 150 AND l.pt IS NOT NULL,SELECT COUNT(*) FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.cpk BETWEEN 50 AND 150 AND l.pt IS NOT NULL,0,0,0
"Among posts by Harvey Motulsky and Noah Snyder, which one has higher popularity?",challenging,SELECT T1.DisplayName FROM users AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.UserId INNER JOIN posts AS T3 ON T2.PostId = T3.Id WHERE T1.DisplayName = 'Harvey Motulsky' OR T1.DisplayName = 'Noah Snyder' GROUP BY T1.DisplayName ORDER BY SUM(T3.ViewCount) DESC LIMIT 1,"SELECT displayname, SUM(score) AS total_score, COUNT(*) AS post_count FROM posts JOIN users ON posts.owneruserid = users.id WHERE displayname IN ('Harvey Motulsky', 'Noah Snyder') GROUP BY displayname ORDER BY total_score DESC, post_count DESC LIMIT 1","SELECT displayname, SUM(score) AS total_score, COUNT(*) AS post_count FROM posts JOIN users ON posts.owneruserid = users.id WHERE displayname IN ('Harvey Motulsky', 'Noah Snyder') GROUP BY displayname ORDER BY total_score DESC, post_count DESC LIMIT 1","SELECT displayname, SUM(score) AS total_score FROM posts WHERE owneruserid IN (SELECT id FROM users WHERE displayname IN ('Harvey Motulsky', 'Noah Snyder')) GROUP BY displayname ORDER BY total_score DESC LIMIT 1",0,0,0
Tally the toxicology element of the 4th atom of each molecule that was carcinogenic.,challenging,"SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND SUBSTR(T1.atom_id, -1) = '4' AND LENGTH(T1.atom_id) = 7","SELECT COUNT(*) AS carcinogenic_count FROM atom WHERE element = 'carcinogenic' AND atom_id = (     SELECT atom_id     FROM molecule     JOIN atom ON molecule.molecule_id = atom.molecule_id     ORDER BY molecule.molecule_id, atom.atom_id     LIMIT 1 OFFSET 3 )",SELECT COUNT(*) AS carcinogenic_count FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE a.element = 'carcinogenic' AND a.atom_id = (     SELECT atom_id     FROM atom     WHERE molecule_id = m.molecule_id     ORDER BY atom_id     LIMIT 1 OFFSET 3 ),"SELECT COUNT(*) AS carcinogenic_atoms FROM atom WHERE element = 'carcinogenic' AND atom_id IN (     SELECT atom_id     FROM (         SELECT atom_id, ROW_NUMBER() OVER (PARTITION BY molecule_id ORDER BY atom_id) AS row_num         FROM atom         WHERE element = 'toxicology'     ) AS subquery     WHERE row_num = 4 )",0,0,0
What is the total number of non-chartered schools in the county of Los Angeles with a percent (%) of eligible free meals for grades 1 through 12 that is less than 0.18%?,challenging,SELECT COUNT(T2.School) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'Los Angeles' AND T2.Charter = 0 AND CAST(T1.`Free Meal Count (K-12)` AS REAL) * 100 / T1.`Enrollment (K-12)` < 0.18,"SELECT COUNT(*) FROM schools WHERE county = 'Los Angeles' AND charter = 'N' AND ""percent (%) eligible free (k-12)"" < 0.18","SELECT COUNT(*) AS total_non_chartered_schools FROM schools WHERE county = 'Los Angeles' AND charter = 'N' AND ""percent (%) eligible free (k-12)"" < 0.18","SELECT COUNT(*) AS total_non_chartered_schools FROM schools WHERE county = 'Los Angeles' AND charter = 'N' AND ""percent (%) eligible free (k-12)"" < 0.18",0,0,0
What elements are in a double type bond?,challenging,SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id WHERE T2.bond_type = '=',SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = 'double',SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'double',SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'double',0,0,0
"For all the set of cards that has Brazil Portuguese translation, what is the percentage of them are only available online?",challenging,SELECT CAST(SUM(CASE WHEN isOnlineOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) FROM sets WHERE code IN ( SELECT setCode FROM set_translations WHERE language = 'Portuguese (Brazil)' ),SELECT      (SELECT COUNT(*) FROM cards c JOIN set_translations st ON c.setcode = st.setcode WHERE st.language = 'pt' AND c.isonlineonly = 1) * 1.0 /      (SELECT COUNT(*) FROM cards c JOIN set_translations st ON c.setcode = st.setcode WHERE st.language = 'pt') * 100 AS percentage_online_only FROM      cards c JOIN set_translations st ON c.setcode = st.setcode WHERE      st.language = 'pt' LIMIT 1,SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode IN (SELECT setcode FROM set_translations WHERE language = 'pt'))) AS percentage_online_only FROM cards WHERE setcode IN (SELECT setcode FROM set_translations WHERE language = 'pt') AND isonlineonly = 1,SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM cards WHERE setcode IN (SELECT setcode FROM set_translations WHERE language = 'pt'))) AS percentage_online_only FROM cards WHERE setcode IN (SELECT setcode FROM set_translations WHERE language = 'pt') AND isonlineonly = 1,0,0,0
"Write the full name of the member who spent money for water, veggie tray and supplies and include the cost of it.",challenging,"SELECT T2.first_name, T2.last_name, T1.cost FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id WHERE T1.expense_description = 'Water, Veggie tray, supplies'","SELECT m.first_name, m.last_name, e.event_name, SUM(ex.cost) AS total_cost FROM member m JOIN expense ex ON m.member_id = ex.link_to_member JOIN event e ON ex.link_to_event = e.event_id WHERE ex.expense_description IN ('water', 'veggie tray', 'supplies') GROUP BY m.member_id, e.event_id HAVING SUM(ex.cost) > 0","SELECT m.first_name, m.last_name, e.event_name, SUM(ex.cost) AS total_cost FROM member m JOIN expense ex ON m.member_id = ex.link_to_member JOIN event e ON ex.link_to_event = e.event_id WHERE ex.expense_description IN ('water', 'veggie tray', 'supplies') GROUP BY m.member_id, e.event_id HAVING SUM(ex.cost) > 0","SELECT m.first_name, m.last_name, e.event_name, SUM(ex.cost) AS total_cost FROM member m JOIN expense ex ON m.member_id = ex.link_to_member JOIN event e ON ex.link_to_event = e.event_id WHERE ex.expense_description IN ('water', 'veggie tray', 'supplies') GROUP BY m.member_id, e.event_id HAVING SUM(ex.cost) > 0",0,0,0
Find the name and date of events with expenses for pizza that were more than fifty dollars but less than a hundred dollars.,challenging,"SELECT T1.event_name, T1.event_date FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T3.expense_description = 'Pizza' AND T3.cost > 50 AND T3.cost < 100","SELECT e.event_name, e.event_date FROM event e JOIN budget b ON e.event_id = b.link_to_event JOIN expense ex ON b.budget_id = ex.link_to_budget WHERE ex.expense_description = 'pizza' AND ex.cost > 50 AND ex.cost < 100","SELECT e.event_name, e.event_date FROM event e JOIN budget b ON e.event_id = b.link_to_event JOIN expense ex ON b.budget_id = ex.link_to_budget WHERE ex.expense_description = 'pizza' AND ex.cost > 50 AND ex.cost < 100","SELECT e.event_name, e.event_date FROM event e JOIN budget b ON e.event_id = b.link_to_event JOIN expense ex ON b.budget_id = ex.link_to_budget WHERE ex.expense_description = 'pizza' AND ex.cost > 50 AND ex.cost < 100",0,0,0
Please list the patient's ID if he or she has an abnormal level of red blood cell and is followed at the outpatient clinic.,challenging,SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE (T2.RBC <= 3.5 OR T2.RBC >= 6) AND T1.Admission = '-',SELECT patient.id FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.rbc < 3.5 OR laboratory.rbc > 5.5 AND patient.first_date IS NOT NULL,SELECT p.id FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.rbc < 3.5 OR l.rbc > 5.2 AND p.first_date IS NOT NULL,SELECT p.id FROM patient p JOIN examination e ON p.id = e.id WHERE e.rbc < 3.5 OR e.rbc > 5.5 AND p.first_date IS NOT NULL,0,0,0
