Question,hardness,Gold,Prediction_0.1,Prediction_0.5,Prediction_1.0,EX_0.1,EX_0.5,EX_1.0
What is the total number of non-chartered schools in the county of Los Angeles with a percent (%) of eligible free meals for grades 1 through 12 that is less than 0.18%?,challenging,SELECT COUNT(T2.School) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'Los Angeles' AND T2.Charter = 0 AND CAST(T1.`Free Meal Count (K-12)` AS REAL) * 100 / T1.`Enrollment (K-12)` < 0.18,SELECT COUNT(*)  FROM frpm  JOIN schools ON frpm.cdscode = schools.cdscode  WHERE schools.charter = 0  AND county = 'Los Angeles'  AND `Percent (%) eligible free (k-12)` < 0.18,SELECT COUNT(*)  FROM frpm  JOIN schools ON frpm.cdscode = schools.cdscode  WHERE schools.charter = 0  AND county = 'Los Angeles'  AND (frpm.`Free Meal Count (K-12)` * 100 / frpm.`Enrollment (K-12)`) < 0.18,SELECT COUNT(*)  FROM frpm  JOIN schools ON frpm.cdscode = schools.cdscode  WHERE schools.charter = 0  AND frpm.county_name = 'Los Angeles'  AND (frpm.`free meal count (k-12)` * 100 / frpm.`enrollment (k-12)`) < 0.18,0,1,0
What are the toxicology elements associated with bond ID TR000_1_2?,challenging,SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR000_1_2',SELECT a.element  FROM atom a  JOIN connected c ON a.atom_id = c.atom_id  JOIN bond b ON c.bond_id = b.bond_id  WHERE b.bond_id = 'TR000_1_2',SELECT a.element  FROM atom a  JOIN connected c ON a.atom_id = c.atom_id  JOIN bond b ON c.bond_id = b.bond_id  WHERE b.bond_id = 'TR000_1_2',"SELECT a.element FROM atom a, connected c, bond b WHERE a.atom_id = c.atom_id AND b.bond_id = c.bond_id AND b.bond_id = 'TR000_1_2'",1,1,1
Which user added a bounty amount of 50 to the post title mentioning variance?,challenging,"SELECT T3.DisplayName, T1.Title FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId INNER JOIN users AS T3 ON T3.Id = T2.UserId WHERE T2.BountyAmount = 50 AND T1.Title LIKE '%variance%'",SELECT users.displayname  FROM users  JOIN votes ON users.id = votes.userid  JOIN posts ON votes.postid = posts.id  WHERE votes.bountyamount = 50 AND posts.title LIKE '%variance%',SELECT users.displayname  FROM users  JOIN votes ON users.id = votes.userid  JOIN posts ON votes.postid = posts.id  WHERE votes.bountyamount = 50 AND posts.title LIKE '%variance%',"SELECT users.displayname FROM users JOIN posts ON users.id = posts.owneruserid JOIN votes ON posts.id = votes.postid WHERE votes.bountyamount = 50 AND posts.title LIKE ""%variance%""",0,0,0
What is the percentage difference of student badges given during 2010 and 2011?,challenging,"SELECT CAST(SUM(IIF(STRFTIME('%Y', Date) = '2010', 1, 0)) AS REAL) * 100 / COUNT(Id) - CAST(SUM(IIF(STRFTIME('%Y', Date) = '2011', 1, 0)) AS REAL) * 100 / COUNT(Id) FROM badges WHERE Name = 'Student'","SELECT (     (         SELECT COUNT(*) FROM badges WHERE name = 'Student' AND strftime('%Y', date) = '2010'     ) -      (         SELECT COUNT(*) FROM badges WHERE name = 'Student' AND strftime('%Y', date) = '2011'     ) ) / (     SELECT COUNT(*) FROM badges WHERE name = 'Student' ) * 100 AS 'Percentage Difference'","SELECT (     (         (             SELECT COUNT(*) FROM badges WHERE name = 'Student' AND strftime('%Y', date) = '2010'         ) * 1.0 / (SELECT COUNT(*) FROM badges)     ) -      (         (             SELECT COUNT(*) FROM badges WHERE name = 'Student' AND strftime('%Y', date) = '2011'         ) * 1.0 / (SELECT COUNT(*) FROM badges)     ) ) * 100 AS PercentageDifference","SELECT (     (         SELECT COUNT(*) FROM badges WHERE name='Student' AND strftime('%Y', date) = '2010'     )      -      (         SELECT COUNT(*) FROM badges WHERE name='Student' AND strftime('%Y', date) = '2011'     ) ) * 100.0 /  (     SELECT COUNT(*) FROM badges WHERE name='Student' ) AS 'Percentage Difference'",0,0,0
List the name of leagues in which the average goals by the home team is higher than the away team in the 2009/2010 season.,challenging,SELECT t1.name FROM League AS t1 INNER JOIN Match AS t2 ON t1.id = t2.league_id WHERE t2.season = '2009/2010' GROUP BY t1.name HAVING (CAST(SUM(t2.home_team_goal) AS REAL) / COUNT(DISTINCT t2.id)) - (CAST(SUM(t2.away_team_goal) AS REAL) / COUNT(DISTINCT t2.id)) > 0,SELECT League.name  FROM Match  JOIN League ON Match.league_id = League.id  WHERE Match.season = '2009/2010'  GROUP BY League.name  HAVING AVG(Match.home_team_goal) > AVG(Match.away_team_goal),SELECT League.name  FROM Match  JOIN League ON Match.league_id = League.id  WHERE Match.season = '2009/2010'  GROUP BY League.name  HAVING AVG(Match.home_team_goal) > AVG(Match.away_team_goal),SELECT DISTINCT League.name  FROM Match  JOIN League ON Match.league_id = League.id  WHERE Match.season = '2009/2010' GROUP BY League.name HAVING AVG(Match.home_team_goal) > AVG(Match.away_team_goal),1,1,1
Tally the toxicology element of the 4th atom of each molecule that was carcinogenic.,challenging,"SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND SUBSTR(T1.atom_id, -1) = '4' AND LENGTH(T1.atom_id) = 7","SELECT element, COUNT(*)  FROM atom  INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE substr(atom.atom_id, 7, 1) = '4' AND molecule.label = '+'  GROUP BY element","SELECT element, COUNT(*)  FROM atom  INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE molecule.label = '+' AND substr(atom.atom_id, 7, 1) = '4'  GROUP BY element","SELECT element, COUNT(*)  FROM atom  INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE substr(atom.atom_id, 7, 1) = '4' AND molecule.label = '+'  GROUP BY atom.element",0,0,0
"For laboratory examinations take in 1984, list all patients below 50 years old with normal platelet level.",challenging,"SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.PLT BETWEEN 100 AND 400 AND STRFTIME('%Y', T2.Date) - STRFTIME('%Y', T1.Birthday) < 50 AND STRFTIME('%Y', T2.Date) = '1984'","SELECT patient.id, patient.birthday, patient.sex, laboratory.plt  FROM patient  JOIN examination ON patient.id = examination.id  JOIN laboratory ON patient.id = laboratory.id  WHERE YEAR(laboratory.date) = '1984'  AND (SUBTRACT(year(current_timestamp), year(patient.birthday)) < 50)  AND (laboratory.plt BETWEEN 100 AND 400)","SELECT patient.id, patient.birthday, patient.sex, laboratory.date, laboratory.plt  FROM patient  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE YEAR(laboratory.date) = '1984'  AND (SUBTRACT(year(current_timestamp), year(patient.birthday)) < 50)  AND (laboratory.plt BETWEEN 100 AND 400)","SELECT patient.id, patient.birthday, patient.sex, laboratory.date, laboratory.plt FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE (SUBTRACT(year(current_timestamp), year(patient.Birthday)) < 50) AND (YEAR(laboratory.Date) = '1984') AND (laboratory.plt BETWEEN 100 AND 400)",0,0,0
Which toxic element can be found in the molecule TR151?,challenging,SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR151',"SELECT element  FROM atom  INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE molecule.label = 'TR151' AND atom.element IN ('br', 'f', 'i', 'sn', 'pb', 'te')","SELECT element  FROM atom  JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE molecule.label = 'TR151' AND atom.element IN ('br', 'f', 'i', 'sn', 'pb', 'te')","SELECT element  FROM atom  JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE molecule.label = 'TR151' AND atom.element IN ('f', 'br', 'i', 's')",0,0,0
"Among the patients whose total bilirubin is over the normal range, how many of them have a peripheral pattern observed in the sheet of ANA examination?",challenging,SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.`T-BIL` >= 2 AND T3.`ANA Pattern` LIKE '%P%',SELECT COUNT(*)  FROM patient  INNER JOIN examination ON patient.id = examination.id  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE T-BIL >= 2.0 AND ANA_Pattern LIKE '%P%',SELECT COUNT(*)  FROM patient  INNER JOIN examination ON patient.id = examination.id  WHERE examination.`T-BIL` >= 2.0 AND examination.`ANA Pattern` LIKE '%P%',SELECT COUNT(*)  FROM patient  INNER JOIN examination ON patient.id = examination.id  WHERE examination.`T-BIL` >= 2.0 AND examination.`ANA Pattern` LIKE '%P%',0,0,0
"Which constructor scored most points from Monaco Grand Prix between 1980 and 2010? List the score, name and nationality of this team.",challenging,"SELECT SUM(T1.points), T2.name, T2.nationality FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId INNER JOIN races AS T3 ON T3.raceid = T1.raceid WHERE T3.name = 'Monaco Grand Prix' AND T3.year BETWEEN 1980 AND 2010 GROUP BY T2.name ORDER BY SUM(T1.points) DESC LIMIT 1","SELECT MAX(c.points), con.name, con.nationality  FROM constructorresults AS c  JOIN constructors AS con ON c.constructorid = con.constructorid  JOIN races AS r ON c.raceid = r.raceid  WHERE r.name LIKE '%Monaco Grand Prix%' AND r.year BETWEEN 1980 AND 2010","SELECT c.name, c.nationality, SUM(cr.points) as total_points FROM constructors as c JOIN constructorresults as cr ON c.constructorid = cr.constructorid JOIN races as r ON r.raceid = cr.raceid WHERE r.name LIKE '%Monaco Grand Prix%' AND r.year BETWEEN 1980 AND 2010 GROUP BY c.constructorid ORDER BY total_points DESC LIMIT 1","SELECT c.name, c.nationality, SUM(cr.points) as TotalPoints FROM constructors as c  JOIN constructorresults as cr ON c.constructorid = cr.constructorid JOIN races as r ON r.raceid = cr.raceid WHERE r.name LIKE ""%Monaco Grand Prix%"" AND r.year BETWEEN 1980 AND 2010 GROUP BY c.constructorid ORDER BY TotalPoints DESC LIMIT 1",0,0,0
"Among the bad superheroes, what is the percentage of female superheroes?",challenging,SELECT CAST(COUNT(CASE WHEN T3.gender = 'Female' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.alignment = 'Bad',"SELECT ROUND(DIVIDE(COUNT(superhero.gender_id = 2 AND superhero.alignment_id = 2), COUNT(superhero.alignment_id = 2)) * 100.0, 2) AS percentage_of_female_bad_superheroes FROM superhero WHERE superhero.alignment_id = 2 AND superhero.gender_id = 2",SELECT      (SELECT          COUNT(*)       FROM          superhero       WHERE          gender_id = 2 AND alignment_id = 2) * 100.0 /      (SELECT          COUNT(*)       FROM          superhero       WHERE          alignment_id = 2) AS percentage,"SELECT ROUND(DIVIDE(COUNT(gender_id = 2), COUNT(alignment_id = 2)) * 100, 2) as percentage FROM superhero WHERE alignment_id = 2 AND gender_id = 2",0,1,0
"List the football team that has a build up play speed of 31, build up plan dribbling of 53, and build up play passing of 32. Only indicate the short name of the team.",challenging,SELECT DISTINCT t1.team_short_name FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t2.buildUpPlaySpeed = 31 AND t2.buildUpPlayDribbling = 53 AND t2.buildUpPlayPassing = 32,SELECT team_short_name  FROM team_attributes  JOIN team ON team_attributes.team_api_id = team.team_api_id  WHERE buildUpPlaySpeed = 31 AND buildUpPlayDribbling = 53 AND buildUpPlayPassing = 32,SELECT team.team_short_name  FROM team  JOIN team_attributes  ON team.team_api_id = team_attributes.team_api_id  WHERE team_attributes.buildUpPlaySpeed = 31  AND team_attributes.buildUpPlayDribbling = 53  AND team_attributes.buildUpPlayPassing = 32,SELECT team_short_name FROM team_attributes JOIN team ON team_attributes.team_api_id = team.team_api_id WHERE buildUpPlaySpeed = 31 AND buildUpPlayDribbling = 53 AND buildUpPlayPassing = 32,1,1,1
Which publisher created more superheroes: DC or Marvel Comics? Find the difference in the number of superheroes.,challenging,SELECT SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id,SELECT      (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics') ) -      (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') ) AS difference,SELECT      (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics')) -      (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS difference,"SELECT      SUM(CASE WHEN publisher_name = 'DC Comics' THEN 1 ELSE 0 END) AS DC,     SUM(CASE WHEN publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS Marvel,     SUM(CASE WHEN publisher_name = 'DC Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS Difference FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id",1,1,0
"Among the patients who has a normal anti-scl70, how many of them are female and does not have any symptom?",challenging,SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T3.ID = T2.ID WHERE (T2.SC170 = 'negative' OR T2.SC170 = '0') AND T1.SEX = 'F' AND T3.Symptoms IS NULL,"SELECT COUNT(DISTINCT patient.id)  FROM patient  JOIN examination ON patient.id = examination.id  WHERE patient.sex = 'F' AND examination.symptoms IS NULL AND examination.sc170 IN ('negative', '0')","SELECT COUNT(DISTINCT patient.id)  FROM patient  JOIN examination ON patient.id = examination.id  WHERE patient.sex = 'F' AND examination.symptoms IS NULL AND examination.sc170 IN ('negative', '0')","SELECT COUNT(DISTINCT patient.id) FROM patient INNER JOIN examination ON patient.id = examination.id WHERE patient.sex = 'F' AND examination.symptoms IS NULL AND examination.sc170 IN ('negative', '0')",0,0,0
How much faster in percentage is the champion than the driver who finished the race last in the 2008 Australian Grand Prix?,challenging,"WITH time_in_seconds AS ( SELECT T1.positionOrder, CASE WHEN T1.positionOrder = 1 THEN (CAST(SUBSTR(T1.time, 1, 1) AS REAL) * 3600) + (CAST(SUBSTR(T1.time, 3, 2) AS REAL) * 60) + CAST(SUBSTR(T1.time, 6) AS REAL) ELSE CAST(SUBSTR(T1.time, 2) AS REAL) END AS time_seconds FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.name = 'Australian Grand Prix' AND T1.time IS NOT NULL AND T2.year = 2008 ), champion_time AS ( SELECT time_seconds FROM time_in_seconds WHERE positionOrder = 1), last_driver_incremental AS ( SELECT time_seconds FROM time_in_seconds WHERE positionOrder = (SELECT MAX(positionOrder) FROM time_in_seconds) ) SELECT (CAST((SELECT time_seconds FROM last_driver_incremental) AS REAL) * 100) / (SELECT time_seconds + (SELECT time_seconds FROM last_driver_incremental) FROM champion_time)","SELECT      (         (             (                 strftime('%s', '00:' || r.time)                  -                  strftime('%s', (SELECT r2.time FROM results r2 WHERE r2.position = 1 AND r2.raceid = r.raceid))             )              /              strftime('%s', '00:' || r.time)         )          *          100     ) AS speed_difference_percentage FROM      results r WHERE      r.position = (SELECT MAX(r2.position) FROM results r2 WHERE r2.raceid = r.raceid)      AND      r.raceid = (SELECT r2.raceid FROM races r2 WHERE r2.year = 2008 AND r2.circuitid = (SELECT c.circuitid FROM circuits c WHERE c.name LIKE '%Australian%'))","SELECT      ROUND(((TIME(results.time) - TIME(last_driver.time)) / TIME(last_driver.time)) * 100, 2) AS speed_difference_percentage FROM      (SELECT          results.time     FROM          results     INNER JOIN          races ON results.raceid = races.raceid     WHERE          races.year = 2008 AND races.circuitid = (SELECT circuits.circuitid FROM circuits WHERE circuits.name = 'Australian Grand Prix') AND results.position = 1) AS champion,      (SELECT          results.time     FROM          results     INNER JOIN          races ON results.raceid = races.raceid     WHERE          races.year = 2008 AND races.circuitid = (SELECT circuits.circuitid FROM circuits WHERE circuits.name = 'Australian Grand Prix') AND results.time IS NOT NULL ORDER BY results.time DESC LIMIT 1) AS last_driver","SELECT ((strftime('%s', '00:' || substr(results.time, 4)) - strftime('%s', '00:' || substr(results.time, 4, 8))) / strftime('%s', '00:' || substr(results.time, 4, 8)) * 100) AS percentage_difference FROM results INNER JOIN (SELECT driverid, MIN(results.time) as last_time FROM results WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND name LIKE '%Australia%')) as last_driver_info ON results.driverid = last_driver_info.driverid WHERE results.time IS NOT NULL ORDER BY results.position ASC LIMIT 1",0,0,0
"Among posts by Harvey Motulsky and Noah Snyder, which one has higher popularity?",challenging,SELECT T1.DisplayName FROM users AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.UserId INNER JOIN posts AS T3 ON T2.PostId = T3.Id WHERE T1.DisplayName = 'Harvey Motulsky' OR T1.DisplayName = 'Noah Snyder' GROUP BY T1.DisplayName ORDER BY SUM(T3.ViewCount) DESC LIMIT 1,"SELECT Posts.Title, Posts.ViewCount  FROM Posts  WHERE Posts.OwnerDisplayName = 'Harvey Motulsky' OR Posts.OwnerDisplayName = 'Noah Snyder'  GROUP BY Posts.OwnerDisplayName  ORDER BY SUM(Posts.ViewCount) DESC  LIMIT 1","SELECT      posts.title,      posts.viewcount  FROM      posts  WHERE      posts.ownerdisplayname IN ('Harvey Motulsky', 'Noah Snyder')  ORDER BY      posts.viewcount DESC  LIMIT 1","SELECT      DisplayName,      MAX(SUM(ViewCount)) as HighestPopularity  FROM      posts  WHERE      DisplayName = 'Harvey Motulsky' OR DisplayName = 'Noah Snyder'  GROUP BY      DisplayName",0,0,0
How many percent of female heroes were published by Marvel Comics?,challenging,SELECT CAST(COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T3.gender = 'Female',SELECT (     SELECT CAST(COUNT(*) AS FLOAT) / (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) * 100     FROM superhero     WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female') AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') ) AS percent,SELECT (     SELECT CAST(COUNT(*) AS FLOAT) / (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) * 100     FROM superhero     WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female') AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') ) AS percent,"SELECT ROUND(                       (                        SELECT COUNT(*)                         FROM superhero                         WHERE gender_id = (SELECT id FROM gender WHERE gender = 'Female')                         AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')                       )                       /                       (                        SELECT COUNT(*)                         FROM superhero                         WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')                       )                      *100, 2) AS percentage",0,0,0
Which members who were approved from 1/10/2019 to 11/19/2019? Please identify the member who attended the event and the link to their event.,challenging,"SELECT DISTINCT T1.link_to_member, T3.link_to_event FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN attendance AS T3 ON T2.member_id = T3.link_to_member WHERE date(SUBSTR(T1.expense_date, 1, 10)) BETWEEN '2019-01-10' AND '2019-11-19' AND T1.approved = 'true'","SELECT member.member_id, member.first_name, member.last_name, expense.link_to_event  FROM member  JOIN expense ON member.member_id = expense.link_to_member  JOIN attendance ON attendance.link_to_member = member.member_id  WHERE expense.approved = 'true' AND expense.expense_date BETWEEN '2019-01-10' and '2019-11-19'","SELECT member.member_id, member.first_name, member.last_name, member.email, attendance.link_to_event  FROM member  JOIN attendance ON member.member_id = attendance.link_to_member  JOIN expense ON member.member_id = expense.link_to_member  WHERE expense.approved = 'true' AND expense.expense_date BETWEEN '2019-01-10' and '2019-11-19'","SELECT member.member_id, member.first_name, member.last_name, member.email, attendance.link_to_event  FROM member  JOIN attendance ON member.member_id = attendance.link_to_member JOIN expense ON member.member_id = expense.link_to_member WHERE expense.approved = 'true' AND expense.expense_date BETWEEN '2019-01-10' and '2019-11-19'",0,0,0
What is the element of toxicology for the atom with the ID of TR000_1?,challenging,SELECT T.element FROM atom AS T WHERE T.atom_id = 'TR000_1',SELECT atom.element FROM atom WHERE atom.atom_id = 'TR000_1',SELECT atom.element  FROM atom  WHERE atom.atom_id = 'TR000_1',SELECT element FROM atom WHERE atom_id = 'TR000_1',1,1,1
"What was the final score for the match on September 24, 2008, in the Belgian Jupiler League between the home team and the away team?",challenging,"SELECT t2.home_team_goal, t2.away_team_goal FROM League AS t1 INNER JOIN Match AS t2 ON t1.id = t2.league_id WHERE t1.name = 'Belgium Jupiler League' AND t2.`date` LIKE '2008-09-24%'","SELECT home_team_goal, away_team_goal  FROM match  JOIN league ON match.league_id = league.id  WHERE match.date LIKE '2008-09-24%' AND league.name = 'Belgium Jupiler League'","SELECT home_team_goal, away_team_goal  FROM match  JOIN league ON match.league_id = league.id  WHERE match.date LIKE '2008-09-24%' AND league.name = 'Belgium Jupiler League'","SELECT home_team_goal, away_team_goal FROM match INNER JOIN league ON match.league_id = league.id WHERE date LIKE '2008-09-24%' AND league.name = 'Belgium Jupiler League'",1,1,1
Name chemical elements that form a bond TR001_10_11.,challenging,SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_id = 'TR001_10_11',"SELECT DISTINCT a1.element AS Element1, a2.element AS Element2 FROM connected c JOIN atom a1 ON c.atom_id = a1.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_id = 'TR001_10_11' AND a1.molecule_id = SUBSTR(b.bond_id, 1, 5) AND a2.molecule_id = SUBSTR(b.bond_id, 1, 5)","SELECT DISTINCT a1.element, a2.element  FROM connected  JOIN atom a1 ON a1.atom_id = connected.atom_id  JOIN atom a2 ON a2.atom_id = connected.atom_id2  JOIN bond ON bond.bond_id = connected.bond_id  WHERE bond.bond_id = 'TR001_10_11'","SELECT DISTINCT a1.element, a2.element  FROM connected  JOIN atom a1 ON a1.atom_id = connected.atom_id  JOIN atom a2 ON a2.atom_id = connected.atom_id2  JOIN bond ON bond.bond_id = connected.bond_id  WHERE bond.bond_id = 'TR001_10_11'",0,0,0
"List all the elements with double bond, consisted in molecule TR024.",challenging,SELECT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR024' AND T2.bond_type = '=',SELECT a.element  FROM atom a  JOIN connected c ON a.atom_id = c.atom_id  JOIN bond b ON c.bond_id = b.bond_id  JOIN molecule m ON a.molecule_id = m.molecule_id  WHERE b.bond_type = '=' AND m.label = 'TR024',SELECT a.element  FROM atom a  JOIN connected c ON a.atom_id = c.atom_id  JOIN bond b ON c.bond_id = b.bond_id  JOIN molecule m ON a.molecule_id = m.molecule_id  WHERE b.bond_type = '=' AND m.label = 'TR024',SELECT a.element  FROM atom AS a  JOIN connected AS c ON a.atom_id = c.atom_id  JOIN bond AS b ON c.bond_id = b.bond_id  JOIN molecule AS m ON a.molecule_id = m.molecule_id  WHERE b.bond_type = '=' AND m.label = 'TR024',0,0,0
"In superheroes with missing weight data, calculate the difference between the number of superheroes with blue eyes and no eye color.",challenging,SELECT SUM(CASE WHEN T2.id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.id = 1 THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg = 0 OR T1.weight_kg is NULL,SELECT (     SELECT COUNT(*)      FROM superhero AS T1      INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id      WHERE T1.weight_kg = 0 OR T1.weight_kg IS NULL AND T2.id = 7 ) - (     SELECT COUNT(*)      FROM superhero AS T1      INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id      WHERE T1.weight_kg = 0 OR T1.weight_kg IS NULL AND T2.id = 1 ) AS difference,SELECT      (SELECT COUNT(*) FROM superhero AS T1 WHERE T1.weight_kg = 0 OR T1.weight_kg IS NULL AND T1.eye_colour_id = (SELECT id FROM colour WHERE colour = 'blue')) -      (SELECT COUNT(*) FROM superhero AS T2 WHERE T2.weight_kg = 0 OR T2.weight_kg IS NULL AND T2.eye_colour_id = (SELECT id FROM colour WHERE colour = 'no eye color')) AS difference,SELECT      (SELECT COUNT(*) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg = 0 OR T1.weight_kg IS NULL AND T2.id = 7) -      (SELECT COUNT(*) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg = 0 OR T1.weight_kg IS NULL AND T2.id = 1) AS difference,0,0,0
Give the full name and contact number of members who had to spend more than average on each expense.,challenging,"SELECT DISTINCT T3.first_name, T3.last_name, T3.phone FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN member AS T3 ON T3.member_id = T1.link_to_member WHERE T1.cost > ( SELECT AVG(T1.cost) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN member AS T3 ON T3.member_id = T1.link_to_member )","SELECT member.first_name || ' ' || member.last_name AS full_name, member.phone FROM member JOIN expense ON member.member_id = expense.link_to_member WHERE expense.cost > (SELECT AVG(expense.cost) FROM expense)","SELECT member.first_name || ' ' || member.last_name AS full_name, member.phone  FROM member  JOIN expense ON member.member_id = expense.link_to_member  WHERE expense.cost > (SELECT AVG(expense.cost) FROM expense)","SELECT member.first_name || ' ' || member.last_name AS full_name, member.phone FROM member INNER JOIN expense ON member.member_id = expense.link_to_member GROUP BY member.member_id HAVING AVG(expense.cost) > (SELECT AVG(cost) FROM expense)",0,0,0
What is the annual average number of sets that were released between 1/1/2012 to 12/31/2015? Indicate the common langugage of the card.,challenging,"SELECT (CAST(SUM(T1.id) AS REAL) / COUNT(T1.id)) / 4, T2.language FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.id = T2.id WHERE T1.releaseDate BETWEEN '2012-01-01' AND '2015-12-31' GROUP BY T1.releaseDate ORDER BY COUNT(T2.language) DESC LIMIT 1","SELECT AVG(COUNT(sets.id)) AS annual_average, MAX(COUNT(foreign_data.language)) AS common_language FROM sets JOIN foreign_data ON sets.id = foreign_data.multiverseid WHERE sets.releasedate BETWEEN '2012-01-01' AND '2015-12-31' GROUP BY strftime('%Y', sets.releasedate)","SELECT AVG(COUNT(sets.id)) AS Annual_Average_Sets,         MAX(COUNT(foreign_data.language)) AS Common_Language FROM sets JOIN foreign_data ON sets.id = foreign_data.multiverseid WHERE sets.releasedate BETWEEN '2012-01-01' AND '2015-12-31' GROUP BY strftime('%Y', sets.releasedate)","SELECT AVG(yearly_sets), language FROM (     SELECT COUNT(id) AS yearly_sets, strftime('%Y', releasedate) AS year, language     FROM sets     JOIN set_translations ON sets.id = set_translations.setcode     WHERE strftime('%Y', releasedate) BETWEEN '2012' AND '2015'     GROUP BY year, language ) subquery ORDER BY yearly_sets DESC LIMIT 1",0,0,0
"Among all the lap records set on various circuits, what is the time for the fastest one?",challenging,"SELECT time FROM lapTimes ORDER BY (CASE WHEN INSTR(time, ':') <> INSTR(SUBSTR(time, INSTR(time, ':') + 1), ':') + INSTR(time, ':') THEN CAST(SUBSTR(time, 1, INSTR(time, ':') - 1) AS REAL) * 3600 ELSE 0 END) + (CAST(SUBSTR(time, INSTR(time, ':') - 2 * (INSTR(time, ':') = INSTR(SUBSTR(time, INSTR(time, ':') + 1), ':') + INSTR(time, ':')), INSTR(time, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(time, INSTR(time, ':') + 1, INSTR(time, '.') - INSTR(time, ':') - 1) AS REAL)) + (CAST(SUBSTR(time, INSTR(time, '.') + 1) AS REAL) / 1000) ASC LIMIT 1",NULL,SELECT MIN(time)  FROM laptimes,SELECT MIN(time)  FROM laptimes,0,0,0
"For in-patient age 50 and above, what is their average anti-cardiolipin antibody (IgG) concentration?",challenging,"SELECT AVG(T2.`aCL IgG`) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) >= 50 AND T1.Admission = '+'","SELECT AVG(laboratory.`acl igg`) as average_acl_igg  FROM patient  INNER JOIN examination ON patient.id = examination.id  INNER JOIN laboratory ON patient.id = laboratory.id  WHERE patient.`admission` = '+' AND (SUBTRACT(year(current_timestamp), year(patient.`birthday`)) >= 50)","SELECT AVG(examination.`acl igg`) as average_acl_igg  FROM examination  JOIN patient ON examination.id = patient.id  WHERE patient.admission = '+' AND (SUBTRACT(year(current_timestamp), year(patient.birthday))) >= 50","SELECT AVG(""acl igg"") FROM patient INNER JOIN examination ON patient.id = examination.id WHERE ""admission"" = '+' AND (strftime('%Y', 'now') - strftime('%Y', ""birthday"")) >= 50",0,0,1
Name the elements that comprise the atoms of bond TR001_2_4.,challenging,SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_2_4',SELECT a.element FROM atom a INNER JOIN connected c ON a.atom_id = c.atom_id INNER JOIN bond b ON c.bond_id = b.bond_id WHERE b.molecule_id = 'TR001_2_4',SELECT element  FROM atom  WHERE atom_id IN (SELECT atom_id                    FROM connected                    WHERE bond_id = (SELECT bond_id                                     FROM bond                                     WHERE molecule_id = 'TR001'                                     AND bond_type = '2-4')),SELECT element  FROM atom  INNER JOIN connected ON atom.atom_id = connected.atom_id  INNER JOIN bond ON connected.bond_id = bond.bond_id  WHERE bond.bond_id = 'TR001_2_4',0,0,1
What is full name of the racer who ranked 1st in the 3rd qualifying race held in the Marina Bay Street Circuit in 2008?,challenging,"SELECT T2.forename, T2.surname FROM qualifying AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceid = T3.raceid WHERE q3 IS NOT NULL AND T3.year = 2008 AND T3.circuitId IN ( SELECT circuitId FROM circuits WHERE name = 'Marina Bay Street Circuit' ) ORDER BY CAST(SUBSTR(q3, 1, INSTR(q3, ':') - 1) AS INTEGER) * 60 + CAST(SUBSTR(q3, INSTR(q3, ':') + 1, INSTR(q3, '.') - INSTR(q3, ':') - 1) AS REAL) + CAST(SUBSTR(q3, INSTR(q3, '.') + 1) AS REAL) / 1000 ASC LIMIT 1","SELECT forename, surname  FROM drivers  INNER JOIN qualifying ON drivers.driverid = qualifying.driverid  INNER JOIN races ON qualifying.raceid = races.raceid  INNER JOIN circuits ON races.circuitid = circuits.circuitid  WHERE races.year = 2008 AND circuits.name = 'Marina Bay Street Circuit' AND qualifying.q3 = (SELECT MIN(q3) FROM qualifying WHERE raceid IN (SELECT raceid FROM races WHERE year = 2008 AND circuitid IN (SELECT circuitid FROM circuits WHERE name = 'Marina Bay Street Circuit')))","SELECT forename, surname FROM drivers INNER JOIN qualifying ON drivers.driverid = qualifying.driverid INNER JOIN races ON qualifying.raceid = races.raceid INNER JOIN circuits ON races.circuitid = circuits.circuitid WHERE MIN(qualifying.q3) AND races.year = 2008 AND circuits.name = ""Marina Bay Street Circuit""","SELECT forename, surname FROM drivers INNER JOIN qualifying ON drivers.driverid = qualifying.driverid INNER JOIN races ON qualifying.raceid = races.raceid INNER JOIN circuits ON races.circuitid = circuits.circuitid WHERE MIN(qualifying.q3) AND races.year = 2008 AND circuits.name = ""Marina Bay Street Circuit""",1,0,0
What was the growth rate of the total amount of loans across all accounts for a male client between 1996 and 1997?,challenging,"SELECT CAST((SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1997' THEN T1.amount ELSE 0 END) - SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1996' THEN T1.amount ELSE 0 END)) AS REAL) * 100 / SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1996' THEN T1.amount ELSE 0 END) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN disp AS T3 ON T3.account_id = T2.account_id INNER JOIN client AS T4 ON T4.client_id = T3.client_id WHERE T4.gender = 'M' AND T3.type = 'OWNER'","SELECT      (         (             SELECT                  SUM(loan.amount)              FROM                  loan              INNER JOIN                  account ON loan.account_id = account.account_id              INNER JOIN                  disp ON account.account_id = disp.account_id              INNER JOIN                  client ON disp.client_id = client.client_id              WHERE                  client.gender = 'M'                  AND strftime('%Y', loan.date) = '1997'         )          -          (             SELECT                  SUM(loan.amount)              FROM                  loan              INNER JOIN                  account ON loan.account_id = account.account_id              INNER JOIN                  disp ON account.account_id = disp.account_id              INNER JOIN                  client ON disp.client_id = client.client_id              WHERE                  client.gender = 'M'                  AND strftime('%Y', loan.date) = '1996'         )     )      /      (         SELECT              SUM(lo","SELECT      (         (             SELECT                  SUM(amount)              FROM                  loan              WHERE                  strftime('%Y', date) = '1997'                  AND account_id IN (                     SELECT                          account_id                      FROM                          disp                      WHERE                          client_id IN (                             SELECT                                  client_id                              FROM                                  client                              WHERE                                  gender = 'M'                         )                 )         ) -          (             SELECT                  SUM(amount)              FROM                  loan              WHERE                  strftime('%Y', date) = '1996'                  AND account_id IN (                     SELECT                          account_id                      FROM                          disp                      WHERE                          client_id IN (                             SELECT                                  client_id                              FROM                                  client                              WHERE                                  gender = 'M'                         )                 )         )     ) /      (         SELECT              SUM(amount)  ","SELECT      (     SELECT          SUM(loan.amount) AS total_amount_1997      FROM          loan      INNER JOIN          account ON loan.account_id = account.account_id      INNER JOIN          disp ON account.account_id = disp.account_id      INNER JOIN          client ON disp.client_id = client.client_id      WHERE          client.gender = 'M'          AND strftime('%Y', loan.date) = '1997'     )      -      (     SELECT          SUM(loan.amount) AS total_amount_1996      FROM          loan      INNER JOIN          account ON loan.account_id = account.account_id      INNER JOIN          disp ON account.account_id = disp.account_id      INNER JOIN          client ON disp.client_id = client.client_id      WHERE          client.gender = 'M'          AND strftime('%Y', loan.date) = '1996'     )      /      ",0,0,0
What is the percentage of carcinogenic molecules in triple type bonds?,challenging,SELECT CAST(COUNT(DISTINCT CASE WHEN T2.label = '+' THEN T2.molecule_id ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T2.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type = '#',"SELECT DIVIDE(SUM(CASE WHEN bond_type = '#' THEN 1 ELSE 0 END) * 100, COUNT(molecule_id)) as percent  FROM molecule  INNER JOIN bond ON molecule.molecule_id = bond.molecule_id  WHERE label = '+'","SELECT DIVIDE(SUM(CASE WHEN bond_type = '#' THEN 1 ELSE 0 END) * 100, COUNT(molecule_id)) as percent  FROM molecule  INNER JOIN bond ON molecule.molecule_id = bond.molecule_id  WHERE label = '+'","SELECT DIVIDE(SUM(CASE WHEN bond_type = '#' THEN 1 ELSE 0 END) * 100, COUNT(DISTINCT molecule_id)) as percent FROM atom INNER JOIN connected ON atom.atom_id = connected.atom_id INNER JOIN bond ON connected.bond_id = bond.bond_id INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '+'",0,0,0
List the names of all the cards in the set Hour of Devastation and find the formats in which these cards are legal.,challenging,"SELECT DISTINCT T2.name , CASE WHEN T1.status = 'Legal' THEN T1.format ELSE NULL END FROM legalities AS T1 INNER JOIN cards AS T2 ON T2.uuid = T1.uuid WHERE T2.setCode IN ( SELECT code FROM sets WHERE name = 'Hour of Devastation' )","SELECT cards.name, legalities.format  FROM cards  JOIN legalities ON cards.uuid = legalities.uuid  JOIN sets ON cards.setcode = sets.code  WHERE sets.name = 'Hour of Devastation' AND legalities.status = 'Legal'","SELECT cards.name, legalities.format  FROM cards  INNER JOIN legalities ON cards.uuid = legalities.uuid  INNER JOIN sets ON cards.setcode = sets.code  WHERE sets.name = 'Hour of Devastation' AND legalities.status = 'Legal'","SELECT cards.name, legalities.format  FROM cards  JOIN legalities ON cards.uuid = legalities.uuid JOIN sets ON cards.setcode = sets.code WHERE sets.name = 'Hour of Devastation' AND legalities.status = 'Legal'",1,1,1
"For the customer who paid 634.8 in 2012/8/25, what was the consumption decrease rate from Year 2012 to 2013?",challenging,"SELECT CAST(SUM(IIF(SUBSTR(Date, 1, 4) = '2012', Consumption, 0)) - SUM(IIF(SUBSTR(Date, 1, 4) = '2013', Consumption, 0)) AS FLOAT) / SUM(IIF(SUBSTR(Date, 1, 4) = '2012', Consumption, 0)) FROM yearmonth WHERE CustomerID = ( SELECT T1.CustomerID FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-25' AND T1.Price = 634.8 )","SELECT      (SELECT SUM(amount)       FROM transactions_1k       WHERE customerid = (SELECT customerid FROM transactions_1k WHERE date = '2012-08-25' AND amount = 634.8)       AND strftime('%Y', date) = '2012')      -      (SELECT SUM(amount)       FROM transactions_1k       WHERE customerid = (SELECT customerid FROM transactions_1k WHERE date = '2012-08-25' AND amount = 634.8)       AND strftime('%Y', date) = '2013')      /      (SELECT SUM(amount)       FROM transactions_1k       WHERE customerid = (SELECT customerid FROM transactions_1k WHERE date = '2012-08-25' AND amount = 634.8)       AND strftime('%Y', date) = '2012') AS consumption_decrease_rate",SELECT      (SELECT SUM(amount) * price as consumption_2012      FROM transactions_1k      WHERE date = '2012-08-25'      AND customerid IN (SELECT customerid FROM transactions_1k WHERE price = 634.8 AND date = '2012-08-25')     ) -     (SELECT SUM(amount) * price as consumption_2013      FROM transactions_1k      WHERE date = '2013-08-25'      AND customerid IN (SELECT customerid FROM transactions_1k WHERE price = 634.8 AND date = '2012-08-25')     ) /     (SELECT SUM(amount) * price as consumption_2012      FROM transactions_1k      WHERE date = '2012-08-25'      AND customerid IN (SELECT customerid FROM transactions_1k WHERE price = 634.8 AND date = '2012-08-25')     ) as decrease_rate,"SELECT      (SELECT SUM(amount) FROM transactions_1k WHERE customerid = t.customerid AND strftime('%Y', date) = '2012') -      (SELECT SUM(amount) FROM transactions_1k WHERE customerid = t.customerid AND strftime('%Y', date) = '2013')  /      (SELECT SUM(amount) FROM transactions_1k WHERE customerid = t.customerid AND strftime('%Y', date) = '2012') AS decrease_rate FROM      transactions_1k t WHERE      date = '2012-08-25' AND      t.amount = (SELECT amount FROM transactions_1k WHERE date = '2012-08-25' AND amount = 634.8)",0,0,0
Which molecules have triple bonds and list all the elements they contain.,challenging,"SELECT DISTINCT T1.molecule_id, T2.element FROM bond AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#'","SELECT m.molecule_id, a.element  FROM molecule m  JOIN bond b ON m.molecule_id = b.molecule_id  JOIN connected c ON b.bond_id = c.bond_id  JOIN atom a ON (c.atom_id = a.atom_id OR c.atom_id2 = a.atom_id)  WHERE b.bond_type = '#'","SELECT m.molecule_id, a.element FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON (c.atom_id = a.atom_id OR c.atom_id2 = a.atom_id) WHERE b.bond_type = '#'","SELECT m.molecule_id, a.element FROM molecule m INNER JOIN bond b ON m.molecule_id = b.molecule_id INNER JOIN connected c ON b.bond_id = c.bond_id INNER JOIN atom a ON (c.atom_id = a.atom_id OR c.atom_id2 = a.atom_id) WHERE b.bond_type = '#'",0,0,0
"List the eyes, hair and skin colour of all female superheroes published by Dark Horse Comics.",challenging,"SELECT T1.eye_colour_id, T1.hair_colour_id, T1.skin_colour_id FROM superhero AS T1 INNER JOIN publisher AS T2 ON T2.id = T1.publisher_id INNER JOIN gender AS T3 ON T3.id = T1.gender_id WHERE T2.publisher_name = 'Dark Horse Comics' AND T3.gender = 'Female'","SELECT s.eye_colour_id, s.hair_colour_id, s.skin_colour_id  FROM superhero AS s  JOIN gender AS g ON s.gender_id = g.id  JOIN publisher AS p ON s.publisher_id = p.id  WHERE g.gender = 'Female' AND p.publisher_name = 'Dark Horse Comics'","SELECT s.eye_colour_id, s.hair_colour_id, s.skin_colour_id  FROM superhero AS s  JOIN gender AS g ON s.gender_id = g.id  JOIN publisher AS p ON s.publisher_id = p.id  WHERE g.gender = 'Female' AND p.publisher_name = 'Dark Horse Comics'","SELECT s.eye_colour_id, s.hair_colour_id, s.skin_colour_id FROM superhero AS s INNER JOIN gender AS g ON s.gender_id = g.id INNER JOIN publisher AS p ON s.publisher_id = p.id WHERE g.gender = 'Female' AND p.publisher_name = 'Dark Horse Comics'",1,1,1
What is the percentage of cards whose language is French among the Story Spotlight cards?,challenging,SELECT CAST(SUM(CASE WHEN T2.language = 'French' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.isStorySpotlight = 1,SELECT (     SELECT COUNT(*)      FROM cards      WHERE language = 'French' AND isStorySpotlight = 1 ) / (     SELECT COUNT(*)      FROM cards      WHERE isStorySpotlight = 1 ) * 100 AS Percentage,SELECT (SELECT COUNT(*) FROM cards WHERE language = 'French' AND isStorySpotlight = 1) / (SELECT COUNT(*) FROM cards WHERE isStorySpotlight = 1) * 100,SELECT (SELECT COUNT(*) FROM cards WHERE language = 'French' AND isStorySpotlight = 1) / (SELECT COUNT(*) FROM cards WHERE isStorySpotlight = 1) * 100,0,0,0
"For all the female patient age 50 and above, who has abnormal red blood cell count. State if they were admitted to hospital.",challenging,"SELECT DISTINCT T1.ID, T1.Admission FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (T2.RBC <= 3.5 OR T2.RBC >= 6.0) AND STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) >= 50","SELECT patient.id, patient.sex, SUBTRACT(year(current_timestamp), year(patient.birthday)) AS age, laboratory.rbc, patient.admission FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'F' AND SUBTRACT(year(current_timestamp), year(patient.birthday)) >= 50 AND (laboratory.rbc <= 3.5 OR laboratory.rbc >= 6.0)","SELECT      patient.id,      patient.sex,      SUBTRACT(year(current_timestamp), year(patient.birthday)) AS age,      laboratory.rbc,      patient.admission  FROM      patient  JOIN      laboratory ON patient.id = laboratory.id  WHERE      patient.sex = 'F'      AND SUBTRACT(year(current_timestamp), year(patient.birthday)) >= 50      AND (laboratory.rbc <= 3.5 OR laboratory.rbc >= 6.0)","SELECT Patient.id, Patient.sex, Patient.birthday, Patient.first_date, Laboratory.rbc, Patient.admission FROM Patient JOIN Laboratory ON Patient.id = Laboratory.id WHERE Patient.sex = 'F'  AND (year(current_timestamp) - year(Patient.birthday)) >= 50  AND (Laboratory.rbc <= 3.5 OR Laboratory.rbc >= 6.0)",0,0,0
"Which superhero has the same eyes, hair and skin colour? Indicate the publisher of the superhero.",challenging,"SELECT T1.superhero_name, T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.eye_colour_id = T1.hair_colour_id AND T1.eye_colour_id = T1.skin_colour_id","SELECT s.superhero_name, p.publisher_name  FROM superhero s  JOIN colour c1 ON s.eye_colour_id = c1.id  JOIN colour c2 ON s.hair_colour_id = c2.id  JOIN colour c3 ON s.skin_colour_id = c3.id  JOIN publisher p ON s.publisher_id = p.id  WHERE c1.colour = c2.colour AND c2.colour = c3.colour","SELECT s.superhero_name, p.publisher_name  FROM superhero AS s  JOIN publisher AS p ON s.publisher_id = p.id  WHERE s.eye_colour_id = s.hair_colour_id AND s.hair_colour_id = s.skin_colour_id","SELECT s.superhero_name, p.publisher_name  FROM superhero AS s  JOIN publisher AS p ON s.publisher_id = p.id  WHERE s.eye_colour_id = s.hair_colour_id AND s.hair_colour_id = s.skin_colour_id",1,1,1
Please calculate the race completion percentage of Japanese drivers from 2007 to 2009.,challenging,"SELECT CAST(SUM(IIF(T1.time IS NOT NULL, 1, 0)) AS REAL) * 100 / COUNT(T1.raceId) FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN drivers AS T3 on T1.driverId = T3.driverId WHERE T3.nationality = 'Japanese' AND T2.year BETWEEN 2007 AND 2009",SELECT      (         (             SELECT                  COUNT(drivers.driverid)              FROM                  results              INNER JOIN                  drivers ON results.driverid = drivers.driverid              INNER JOIN                  races ON results.raceid = races.raceid              WHERE                  drivers.nationality = 'Japanese'                  AND races.year BETWEEN 2007 AND 2009                  AND results.time IS NOT NULL         ) /          (             SELECT                  COUNT(drivers.driverid)              FROM                  results              INNER JOIN                  drivers ON results.driverid = drivers.driverid              INNER JOIN                  races ON results.raceid = races.raceid              WHERE                  drivers.nationality = 'Japanese'                  AND races.year BETWEEN 2007 AND 2009         ) * 100     ) AS RaceCompletionPercentage,SELECT      (CAST(COUNT(results.driverid) AS FLOAT) / (SELECT COUNT(*) FROM results WHERE results.year BETWEEN 2007 AND 2009) * 100) AS RaceCompletionPercentage FROM      results INNER JOIN      drivers ON results.driverid = drivers.driverid WHERE      drivers.nationality = 'Japanese' AND results.time IS NOT NULL AND results.year BETWEEN 2007 AND 2009,SELECT (CAST(COUNT(r.driverid) AS FLOAT) / (SELECT COUNT(*) FROM results r INNER JOIN drivers d ON r.driverid = d.driverid WHERE d.nationality = 'Japanese' AND r.time IS NOT NULL AND r.raceid IN (SELECT raceid FROM races WHERE year BETWEEN 2007 AND 2009)) * 100) AS RaceCompletionPercentage FROM results r INNER JOIN drivers d ON r.driverid = d.driverid WHERE d.nationality = 'Japanese' AND r.time IS NOT NULL AND r.raceid IN (SELECT raceid FROM races WHERE year BETWEEN 2007 AND 2009),0,0,0
What is the element with the atom ID of TR004_7 in molecule that is not carcinogenic?,challenging,SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR004_7' AND T2.label = '-',SELECT element  FROM atom  INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE atom_id = 'TR004_7' AND label = '-',SELECT element  FROM atom  INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id  WHERE atom_id = 'TR004_7' AND label = '-',SELECT element FROM atom INNER JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom_id = 'TR004_7' AND label = '-',1,1,1
"What is the difference in the annual average consumption of the customers with the least amount of consumption paid in CZK for 2013 between SME and LAM, LAM and KAM, and KAM and SME?",challenging,"SELECT CAST(SUM(IIF(T1.Segment = 'SME', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'LAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) , CAST(SUM(IIF(T1.Segment = 'LAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'KAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) , CAST(SUM(IIF(T1.Segment = 'KAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'SME', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' AND T2.Consumption = ( SELECT MIN(Consumption) FROM yearmonth ) AND T2.Date BETWEEN 201301 AND 201312","SELECT      (SELECT AVG(consumption)       FROM yearmonth       WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'SME' AND currency = 'CZK' AND date BETWEEN '201301' AND '201312')      ) -      (SELECT AVG(consumption)       FROM yearmonth       WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'LAM' AND currency = 'CZK' AND date BETWEEN '201301' AND '201312')      ) AS 'SME_LAM',          (SELECT AVG(consumption)       FROM yearmonth       WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'LAM' AND currency = 'CZK' AND date BETWEEN '201301' AND '201312')      ) -      (SELECT AVG(consumption)       FROM yearmonth       WHERE customerid IN (SELECT customerid FROM customers WHERE segment = 'KAM' AND currency = 'CZK' AND date BETWEEN '201301' AND '201312')      ) AS","SELECT          SUM(t.amount) / COUNT(DISTINCT t.customerid) AS avg_consumption     FROM          transactions_1k AS t     JOIN          customers AS c ON t.customerid = c.customerid     WHERE          c.segment = 'SME'          AND SUBSTR(t.date, 1, 4) = '2013'         AND c.currency = 'CZK' ),   least_lam AS (     SELECT          SUM(t.amount) / COUNT(DISTINCT t.customerid) AS avg_consumption     FROM          transactions_1k AS t     JOIN          customers AS c ON t.customerid = c.customerid     WHERE          c.segment = 'LAM'          AND SUBSTR(t.date, 1, 4) = '2013'         AND c.currency = 'CZK' ),   least_kam AS (     SELECT          SUM(t.amount) / COUNT(DISTINCT t.customerid) AS avg_consumption","SELECT AVG(consumption) AS avg_sme     FROM (         SELECT c.segment, SUM(t.amount * t.price) AS consumption         FROM transactions_1k AS t         JOIN customers AS c ON t.customerid = c.customerid         WHERE c.segment = 'SME' AND t.date BETWEEN '201301' AND '201312'         GROUP BY c.customerid     ) AS least_sme     WHERE least_sme.consumption = (         SELECT MIN(consumption)          FROM (             SELECT c.customerid, SUM(t.amount * t.price) AS consumption             FROM transactions_1k AS t             JOIN customers AS c ON t.customerid = c.customerid             WHERE c.segment = 'SME' AND t.date BETWEEN '201301' AND '201312'             GROUP BY c.customerid         ) AS min_sme     ) ),  annual_avg_lam AS (     SELECT AVG(consumption) AS avg_lam     FROM (         SELECT c.segment, SUM",0,0,0
What are the elements for bond id TR001_10_11?,challenging,SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR001_10_11',"SELECT a1.element, a2.element  FROM connected  JOIN atom a1 ON connected.atom_id = a1.atom_id  JOIN atom a2 ON connected.atom_id2 = a2.atom_id  WHERE connected.bond_id = 'TR001_10_11'","SELECT a1.element, a2.element  FROM connected  JOIN atom a1 ON a1.atom_id = connected.atom_id  JOIN atom a2 ON a2.atom_id = connected.atom_id2  JOIN bond ON bond.bond_id = connected.bond_id  WHERE bond.bond_id = 'TR001_10_11'","SELECT a1.element, a2.element FROM atom AS a1, atom AS a2, connected AS c, bond AS b WHERE b.bond_id = c.bond_id AND c.atom_id = a1.atom_id AND c.atom_id2 = a2.atom_id AND b.bond_id = 'TR001_10_11'",0,0,0
What are the elements of the atoms of TR144_8_19?,challenging,SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR144_8_19',SELECT a.element  FROM atom a  JOIN connected c ON a.atom_id = c.atom_id  JOIN bond b ON c.bond_id = b.bond_id  WHERE b.bond_id = 'TR144_8_19',SELECT a.element  FROM atom a  JOIN connected c ON a.atom_id = c.atom_id  JOIN bond b ON c.bond_id = b.bond_id  WHERE b.bond_id = 'TR144_8_19',"SELECT a.element FROM atom a, connected c, bond b WHERE a.atom_id = c.atom_id AND b.bond_id = c.bond_id AND b.bond_id = 'TR144_8_19'",1,1,1
List all patients who were followed up at the outpatient clinic who underwent a laboratory test in October 1991 and had a total blood bilirubin level within the normal range.,challenging,SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.`T-BIL` < 2.0 AND T2.Date LIKE '1991-10-%',"SELECT patient.id, patient.sex, patient.birthday, patient.description, patient.first_date, patient.admission, patient.diagnosis  FROM patient  JOIN examination ON patient.id = examination.id  JOIN laboratory ON patient.id = laboratory.id  WHERE patient.admission = '-'  AND examination.date LIKE '1991-10%'  AND laboratory.t_bil <= 2.0","SELECT patient.id, patient.sex, patient.birthday, patient.description, patient.first_date, patient.admission, patient.diagnosis  FROM patient  JOIN examination ON patient.id = examination.id  JOIN laboratory ON patient.id = laboratory.id  WHERE patient.admission = '-'  AND examination.date LIKE '1991-10%'  AND laboratory.t_bil <= 2.0","SELECT patient.id, patient.sex, patient.birthday, patient.description, patient.first_date, patient.admission, patient.diagnosis  FROM patient  JOIN examination ON patient.id = examination.id  JOIN laboratory ON patient.id = laboratory.id  WHERE patient.admission = '-'  AND examination.date LIKE '1991-10%'  AND laboratory.t_bil < 2.0",0,0,0
What is the percentage of superheroes who act in their own self-interest or make decisions based on their own moral code? Indicate how many of the said superheroes were published by Marvel Comics.,challenging,"SELECT (CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM superhero)), CAST(SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS REAL) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN alignment AS T3 ON T3.id = T1.alignment_id WHERE T3.alignment = 'Bad'","SELECT      (SELECT          (COUNT(superhero.id) * 100.0) / (SELECT COUNT(superhero.id) FROM superhero)      FROM          superhero      WHERE          alignment_id IN (SELECT id FROM alignment WHERE alignment = 'Bad')     ) AS percentage,     (SELECT          COUNT(superhero.id)      FROM          superhero      WHERE          alignment_id IN (SELECT id FROM alignment WHERE alignment = 'Bad') AND publisher_id IN (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')     ) AS marvel_count","SELECT      COUNT(*) * 100 / (SELECT COUNT(*) FROM superhero) AS percentage,     (SELECT COUNT(*) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad') AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS marvel_bad_alignment FROM      superhero WHERE      alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad')","SELECT      COUNT(*) * 100 /      (SELECT COUNT(*) FROM superhero) AS percentage,     SUM(CASE WHEN publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') THEN 1 ELSE 0 END) AS marvel_comics_count FROM      superhero WHERE      alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad')",1,0,0
How many underage patients were examined during the course of the three-year period from 1990 to 1993?,challenging,"SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T2.`Examination Date`) BETWEEN '1990' AND '1993' AND STRFTIME('%Y', T2.`Examination Date`) - STRFTIME('%Y', T1.Birthday) < 18",SELECT COUNT(*)  FROM patient  JOIN examination ON patient.id = examination.id  WHERE year(birthday) < 18 AND year(examination date) BETWEEN '1990' AND '1993',SELECT COUNT(*)  FROM patient  JOIN examination ON patient.id = examination.id  WHERE year(birthday) < 18 AND year(examination date) BETWEEN '1990' AND '1993',SELECT COUNT(*)  FROM patient  JOIN examination ON patient.id = examination.id  WHERE year(patient.birthday) < 18 AND year(examination.`examination date`) BETWEEN '1990' AND '1993',0,0,0
"What is the average time in seconds of champion for each year, before year 1975?",challenging,"WITH time_in_seconds AS ( SELECT T2.year, T2.raceId, T1.positionOrder, CASE WHEN T1.positionOrder = 1 THEN (CAST(SUBSTR(T1.time, 1, 1) AS REAL) * 3600) + (CAST(SUBSTR(T1.time, 3, 2) AS REAL) * 60) + CAST(SUBSTR(T1.time, 6,2) AS REAL )   + CAST(SUBSTR(T1.time, 9) AS REAL)/1000 ELSE 0 END AS time_seconds FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.time IS NOT NULL ), champion_time AS ( SELECT year, raceId, time_seconds FROM time_in_seconds WHERE positionOrder = 1 ) SELECT year, AVG(time_seconds) FROM champion_time WHERE year < 1975 GROUP BY year HAVING AVG(time_seconds) IS NOT NULL","SELECT AVG(strftime('%s', time) + substr(time, -3) / 1000) as avg_time_seconds FROM results JOIN races ON results.raceid = races.raceid WHERE position = 1 AND time IS NOT NULL AND year < 1975","SELECT AVG(strftime('%s', time)) as avg_time_sec FROM results JOIN races ON results.raceid = races.raceid WHERE time IS NOT NULL AND position = 1 AND year < 1975","SELECT AVG(strftime('%s', time) + substr(time, -3) / 1000) AS avg_time_sec FROM results JOIN races ON results.raceid = races.raceid WHERE position = 1 AND time IS NOT NULL AND year < 1975",0,0,0
What percentage of male patients who first presented to the hospital in 1981 were diagnosed with BEHCET?,challenging,"SELECT CAST(SUM(CASE WHEN Diagnosis = 'BEHCET' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM Patient WHERE STRFTIME('%Y', `First Date`) = '1981' AND SEX = 'M'","SELECT (     SELECT CAST(COUNT(*) AS FLOAT) / (         SELECT COUNT(*) FROM patient WHERE sex = 'M' AND strftime('%Y', first_date) = '1981'     ) * 100 FROM patient WHERE sex = 'M' AND strftime('%Y', first_date) = '1981' AND diagnosis = 'BEHCET'",SELECT      (SELECT          (COUNT(patient.id) * 1.0 / (SELECT COUNT(patient.id) FROM patient WHERE YEAR(patient.`first date`) = '1981' AND patient.sex = 'M')) * 100     FROM          patient     WHERE          patient.diagnosis = 'BEHCET' AND YEAR(patient.`first date`) = '1981' AND patient.sex = 'M') AS `percentage`,"SELECT ROUND(                      (SELECT COUNT(*)                        FROM `patient`                        WHERE `sex` = 'M'                        AND `diagnosis` = 'BEHCET'                       AND strftime('%Y', `first date`) = '1981')                      /                      (SELECT COUNT(*)                        FROM `patient`                        WHERE `sex` = 'M'                        AND strftime('%Y', `first date`) = '1981')                      * 100) AS `Percentage`",0,0,0
What percentage of carcinogenic-type molecules does not contain fluorine?,challenging,SELECT CAST(COUNT(DISTINCT CASE WHEN T1.element <> 'f' THEN T2.molecule_id ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T2.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+',SELECT (     (         SELECT COUNT(DISTINCT molecule_id)          FROM molecule          WHERE label = '+'     ) -      (         SELECT COUNT(DISTINCT molecule_id)          FROM atom          WHERE element = 'F' AND molecule_id IN (SELECT molecule_id FROM molecule WHERE label = '+')     ) ) * 100.0 /  (     SELECT COUNT(DISTINCT molecule_id)      FROM molecule      WHERE label = '+' ) AS percentage,SELECT (   (SELECT COUNT(DISTINCT molecule_id)    FROM atom    WHERE element != 'F' AND molecule_id IN (     SELECT molecule_id      FROM molecule      WHERE label = '+')   ) * 100.0 /    (SELECT COUNT(DISTINCT molecule_id)    FROM molecule    WHERE label = '+') ) AS percentage,SELECT DISTINCT   (     (       SELECT         COUNT(DISTINCT molecule_id) * 100.0       FROM         atom         JOIN connected ON atom.atom_id = connected.atom_id         JOIN bond ON connected.bond_id = bond.bond_id         JOIN molecule ON molecule.molecule_id = atom.molecule_id       WHERE         element != 'F'         AND molecule.molecule_id IN (           SELECT             DISTINCT molecule_id           FROM             molecule           WHERE             label = '+'         )     ) / (       SELECT         COUNT(DISTINCT molecule_id)       FROM         molecule       WHERE         label = '+'     )   ) AS 'Percentage' ,1,1,0
"How many times was the budget in Advertisement for ""Yearly Kickoff"" meeting more than ""October Meeting""?",challenging,SELECT CAST(SUM(CASE WHEN T2.event_name = 'Yearly Kickoff' THEN T1.amount ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.event_name = 'October Meeting' THEN T1.amount ELSE 0 END) FROM budget AS T1 INNER JOIN event AS T2 ON T1.link_to_event = T2.event_id WHERE T1.category = 'Advertisement' AND T2.type = 'Meeting',SELECT COUNT(*)  FROM (     SELECT          CASE              WHEN (                 SELECT                      SUM(b.amount)                  FROM                      budget b                      JOIN event e ON b.link_to_event = e.event_id                  WHERE                      e.event_name = 'Yearly Kickoff' AND                      b.category = 'Advertisement'             ) > (                 SELECT                      SUM(b.amount)                  FROM                      budget b                      JOIN event e ON b.link_to_event = e.event_id                  WHERE                      e.event_name = 'October Meeting' AND                      b.category = 'Advertisement'             ) THEN 1             ELSE 0         END as is_advertisement_budget_higher     FROM          budget b     GROUP BY          b.budget_id ) as subquery WHERE      is_advertisement_budget_higher = 1,SELECT COUNT(*)  FROM (     SELECT          CASE              WHEN (                 SELECT SUM(b.amount)                  FROM budget b                  JOIN event e ON b.link_to_event = e.event_id                 WHERE e.event_name = 'Yearly Kickoff' AND b.category = 'Advertisement'             ) > (                 SELECT SUM(b.amount)                  FROM budget b                  JOIN event e ON b.link_to_event = e.event_id                 WHERE e.event_name = 'October Meeting' AND b.category = 'Advertisement'             )              THEN 1             ELSE 0         END AS is_advertisement_budget_higher     FROM budget ) WHERE is_advertisement_budget_higher = 1,SELECT COUNT(*)  FROM  (     SELECT      CASE      WHEN      (         SELECT SUM(amount)          FROM budget          WHERE category = 'Advertisement'          AND link_to_event IN          (             SELECT event_id              FROM event              WHERE event_name = 'Yearly Kickoff'         )     ) >      (         SELECT SUM(amount)          FROM budget          WHERE category = 'Advertisement'          AND link_to_event IN          (             SELECT event_id              FROM event              WHERE event_name = 'October Meeting'         )     ) THEN 1     ELSE 0     END as result ) as subquery WHERE result = 1,0,0,0
