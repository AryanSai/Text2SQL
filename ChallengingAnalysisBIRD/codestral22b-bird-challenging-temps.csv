Question,hardness,Gold,Prediction_0.1,Prediction_0.5,Prediction_1.0,EX_0.1,EX_0.5,EX_1.0
"Among the patients whose total bilirubin is over the normal range, how many of them have a peripheral pattern observed in the sheet of ANA examination?",challenging,SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.`T-BIL` >= 2 AND T3.`ANA Pattern` LIKE '%P%',SELECT COUNT(*) FROM examination e JOIN laboratory l ON e.id = l.id WHERE l.t_bil > NORMAL_RANGE AND e.ana_pattern = 'peripheral',SELECT COUNT(*) FROM examination JOIN patient ON examination.id = patient.id JOIN laboratory ON examination.id = laboratory.id WHERE t_bil > normal_range AND ana_pattern = 'peripheral',SELECT COUNT(*) FROM examination JOIN laboratory ON examination.id = laboratory.id JOIN patient ON patient.id = examination.id WHERE laboratory.t-bil > normal_range AND examination.ana_pattern = 'peripheral',0,0,0
"What sex is the patient who in a medical examination was diagnosed with PSS and in a laboratory examination had a blood level of C-reactive protein de 2+, createnine 1 and LDH 123?",challenging,SELECT T1.SEX FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T3.ID = T2.ID WHERE T2.Diagnosis = 'PSS' AND T3.CRP = '2+' AND T3.CRE = 1.0 AND T3.LDH = 123,SELECT p.sex FROM patient p JOIN examination e ON p.id = e.id JOIN laboratory l ON p.id = l.id WHERE e.diagnosis = 'PSS' AND l.crp = 2 AND l.cre = 1 AND l.ldh = 123,SELECT p.sex FROM patient p JOIN examination e ON p.id = e.id JOIN laboratory l ON p.id = l.id WHERE e.diagnosis = 'PSS' AND l.crp = 2 AND l.cre = 1 AND l.ldh = 123,SELECT p.sex FROM patient p JOIN examination e ON p.id = e.id JOIN laboratory l ON p.id = l.id WHERE e.diagnosis = 'PSS' AND l.crp = 2 AND l.cre = 1 AND l.ldh = 123,0,0,0
"For the patients with a normal range of creatinine phosphokinase, how many of them have a positive measure of degree of coagulation?",challenging,SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.CPK < 250 AND (T3.KCT = '+' OR T3.RVVT = '+' OR T3.LAC = '+'),SELECT COUNT(*) FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.cpk BETWEEN 30 AND 170 AND (laboratory.pt IS NOT NULL OR laboratory.aptt IS NOT NULL OR laboratory.fg IS NOT NULL OR laboratory.pic IS NOT NULL OR laboratory.tat IS NOT NULL OR laboratory.tat2 IS NOT NULL),SELECT COUNT(*) FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.cpk BETWEEN 50 AND 170 AND (laboratory.pt IS NOT NULL OR laboratory.aptt IS NOT NULL OR laboratory.fg IS NOT NULL OR laboratory.pic IS NOT NULL OR laboratory.tat IS NOT NULL OR laboratory.tat2 IS NOT NULL),SELECT COUNT(*) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.cpk BETWEEN 40 AND 200 AND (laboratory.pt IS NOT NULL OR laboratory.aptt IS NOT NULL OR laboratory.fg IS NOT NULL OR laboratory.pic IS NOT NULL OR laboratory.tat IS NOT NULL OR laboratory.tat2 IS NOT NULL),0,0,0
What percentage of cards with format commander and legal status do not have a content warning?,challenging,SELECT CAST(SUM(CASE WHEN T1.hasContentWarning = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'commander' AND T2.status = 'Legal',SELECT (COUNT(c.id) * 100.0 / (SELECT COUNT(id) FROM cards WHERE id IN (SELECT card_id FROM legalities WHERE format = 'commander' AND status = 'legal'))) AS percentage_no_content_warning FROM cards c LEFT JOIN legalities l ON c.id = l.card_id WHERE l.format = 'commander' AND l.status = 'legal' AND c.hascontentwarning = 0,SELECT (COUNT(c.id) * 100.0 / (SELECT COUNT(id) FROM cards WHERE id IN (SELECT cardid FROM legalities WHERE format = 'commander' AND status = 'legal'))) AS percentage_no_content_warning FROM cards c WHERE c.id IN (SELECT cardid FROM legalities WHERE format = 'commander' AND status = 'legal') AND c.hascontentwarning = 0,SELECT (COUNT(c.id) * 100.0 / (SELECT COUNT(id) FROM cards WHERE id IN (SELECT id FROM legalities WHERE format = 'commander' AND status = 'legal'))) AS percentage_no_content_warning FROM cards c LEFT JOIN legalities l ON c.id = l.id WHERE l.format = 'commander' AND l.status = 'legal' AND c.hascontentwarning = 0,0,0,0
Which publisher created more superheroes: DC or Marvel Comics? Find the difference in the number of superheroes.,challenging,SELECT SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id,"SELECT publisher_name, COUNT(superhero.id) AS hero_count FROM publisher JOIN superhero ON publisher.id = superhero.publisher_id WHERE publisher_name IN ('DC', 'Marvel Comics') GROUP BY publisher_name ORDER BY hero_count DESC","SELECT publisher_name, COUNT(superhero.id) as hero_count FROM publisher JOIN superhero ON publisher.id = superhero.publisher_id WHERE publisher_name IN ('DC', 'Marvel Comics') GROUP BY publisher_name ORDER BY hero_count DESC","SELECT publisher_name, COUNT(id) AS hero_count FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher_name IN ('DC', 'Marvel Comics') GROUP BY publisher_name ORDER BY hero_count DESC",0,0,0
"For all the female patient age 50 and above, who has abnormal red blood cell count. State if they were admitted to hospital.",challenging,"SELECT DISTINCT T1.ID, T1.Admission FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (T2.RBC <= 3.5 OR T2.RBC >= 6.0) AND STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) >= 50","SELECT p.id, p.admission FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'female' AND p.birthday <= DATE('now', '-50 years') AND (l.rbc < 'normal_lower_limit' OR l.rbc > 'normal_upper_limit')","SELECT p.id, p.admission FROM patient p JOIN laboratory l ON p.id = l.id WHERE p.sex = 'female' AND p.birthday <= DATE('now', '-50 years') AND (l.rbc < 'normal_lower_limit' OR l.rbc > 'normal_upper_limit')","SELECT p.id, p.admission         FROM patient p         JOIN laboratory l ON p.id = l.id         WHERE p.sex = 'female'         AND ABS(julianday('now') - julianday(p.birthday)) / 365.25 >= 50         AND (l.rbc < 'normal_lower_limit' OR l.rbc > 'normal_upper_limit')",0,0,0
"Between DC and Marvel Comics, which publisher has published more superheroes? Find the difference in the number of superheroes they have published.",challenging,SELECT SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id,"SELECT publisher_name, COUNT(id) AS num_superheroes FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id GROUP BY publisher_name ORDER BY num_superheroes DESC LIMIT 2","SELECT publisher_name, COUNT(id) AS num_superheroes FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id GROUP BY publisher_name ORDER BY num_superheroes DESC LIMIT 2","SELECT publisher_name, COUNT(id) AS hero_count FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id GROUP BY publisher_name ORDER BY hero_count DESC LIMIT 2",0,0,0
How many elements are contained in bond_id TR001_3_4?,challenging,SELECT COUNT(DISTINCT T1.element) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_3_4',SELECT COUNT(DISTINCT element) FROM atom JOIN connected ON atom.atom_id = connected.atom_id WHERE connected.bond_id = 'TR001_3_4',SELECT COUNT(DISTINCT element) FROM atom JOIN connected ON atom.atom_id = connected.atom_id WHERE connected.bond_id = 'TR001_3_4',SELECT COUNT(DISTINCT element) FROM atom JOIN connected ON atom.atom_id = connected.atom_id WHERE connected.bond_id = 'TR001_3_4',1,1,1
Who has the highest average finishing rate between the highest and shortest football player?,challenging,"SELECT A FROM ( SELECT AVG(finishing) result, 'Max' A FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height = ( SELECT MAX(height) FROM Player ) UNION SELECT AVG(finishing) result, 'Min' A FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height = ( SELECT MIN(height) FROM Player ) ) ORDER BY result DESC LIMIT 1","SELECT player.player_name, AVG(player_attributes.finishing) as average_finishing FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.height = (SELECT MAX(height) FROM player) OR player.height = (SELECT MIN(height) FROM player) GROUP BY player.player_name ORDER BY average_finishing DESC LIMIT 1","SELECT player.player_name, AVG(player_attributes.finishing) as average_finishing FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.height = (SELECT MIN(height) FROM player) OR player.height = (SELECT MAX(height) FROM player) GROUP BY player.player_name ORDER BY average_finishing DESC LIMIT 1","SELECT player.player_name, AVG(player_attributes.finishing) as average_finishing FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.height = (SELECT MAX(height) FROM player) OR player.height = (SELECT MIN(height) FROM player) GROUP BY player.player_name ORDER BY average_finishing DESC LIMIT 1",0,0,0
What is the percentage of carcinogenic molecules in triple type bonds?,challenging,SELECT CAST(COUNT(DISTINCT CASE WHEN T2.label = '+' THEN T2.molecule_id ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T2.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type = '#',"SELECT (COUNT(DISTINCT m.molecule_id) * 100.0 / (SELECT COUNT(DISTINCT molecule_id) FROM molecule)) AS carcinogenic_percentage FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id WHERE m.label = 'carcinogenic' AND b.bond_type = 'triple' GROUP BY m.label, b.bond_type","SELECT (COUNT(DISTINCT m.molecule_id) * 100.0 / (SELECT COUNT(DISTINCT molecule_id) FROM molecule)) AS carcinogenic_percentage FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id WHERE m.label = 'carcinogenic' AND b.bond_type = 'triple' GROUP BY m.label, b.bond_type","SELECT molecule_id     FROM molecule     WHERE label = 'carcinogenic' ), triple_bond_molecules AS (     SELECT molecule_id     FROM bond     WHERE bond_type = 'triple' ), SELECT (COUNT(carcinogenic_molecules.molecule_id) * 100.0 / COUNT(triple_bond_molecules.molecule_id)) AS percentage FROM carcinogenic_molecules JOIN triple_bond_molecules ON carcinogenic_molecules.molecule_id = triple_bond_molecules.molecule_id",0,0,0
"Calculate the percentage of players who prefer left foot, who were born between 1987 and 1992.",challenging,"SELECT CAST(COUNT(CASE WHEN t2.preferred_foot = 'left' THEN t1.id ELSE NULL END) AS REAL) * 100 / COUNT(t1.id) percent FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE SUBSTR(t1.birthday, 1, 4) BETWEEN '1987' AND '1992'","SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM player WHERE strftime('%Y', birthday) BETWEEN '1987' AND '1992')) AS left_foot_percentage FROM player WHERE preferred_foot = 'left' AND strftime('%Y', birthday) BETWEEN '1987' AND '1992'","SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM player WHERE strftime('%Y', birthday) BETWEEN '1987' AND '1992')) AS left_foot_percentage FROM player WHERE preferred_foot = 'left' AND strftime('%Y', birthday) BETWEEN '1987' AND '1992'","SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM player WHERE strftime('%Y', birthday) BETWEEN '1987' AND '1992')) AS left_foot_percentage FROM player WHERE preferred_foot = 'left' AND strftime('%Y', birthday) BETWEEN '1987' AND '1992'",0,0,0
What is the constructor reference name of the champion in the 2009 Singapore Grand Prix? Please give its website.,challenging,"SELECT T3.constructorRef, T3.url FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN constructors AS T3 on T1.constructorId = T3.constructorId WHERE T2.name = 'Singapore Grand Prix' AND T2.year = 2009 AND T1.time LIKE '_:%:__.___'","SELECT c.constructorref, c.url FROM constructorresults cr JOIN constructors c ON cr.constructorid = c.constructorid JOIN races r ON cr.raceid = r.raceid WHERE r.year = 2009 AND r.name = 'Singapore Grand Prix' ORDER BY cr.points DESC LIMIT 1","SELECT c.constructorref, c.url FROM constructorresults cr JOIN constructors c ON cr.constructorid = c.constructorid JOIN races r ON cr.raceid = r.raceid WHERE r.year = 2009 AND r.name = 'Singapore Grand Prix' ORDER BY cr.points DESC LIMIT 1","SELECT c.constructorref, c.url FROM constructorresults cr JOIN constructors c ON cr.constructorid = c.constructorid JOIN races r ON cr.raceid = r.raceid WHERE r.name = 'Singapore Grand Prix' AND r.year = 2009 ORDER BY cr.points DESC LIMIT 1",1,1,1
Which user added a bounty amount of 50 to the post title mentioning variance?,challenging,"SELECT T3.DisplayName, T1.Title FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId INNER JOIN users AS T3 ON T3.Id = T2.UserId WHERE T2.BountyAmount = 50 AND T1.Title LIKE '%variance%'",SELECT users.displayname FROM users JOIN votes ON users.id = votes.userid JOIN posts ON votes.postid = posts.id WHERE votes.bountyamount = 50 AND posts.title LIKE '%variance%',SELECT users.displayname FROM users JOIN votes ON users.id = votes.userid JOIN posts ON votes.postid = posts.id WHERE votes.bountyamount = 50 AND posts.title LIKE '%variance%',SELECT users.displayname FROM votes JOIN posts ON votes.postid = posts.id JOIN users ON votes.userid = users.id WHERE votes.bountyamount = 50 AND posts.title LIKE '%variance%',0,0,0
List down top 3 German drivers who has the shortest average pit stop duration and were born between 1980-1985.,challenging,"SELECT T2.forename, T2.surname FROM pitStops AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId WHERE T2.nationality = 'German' AND STRFTIME('%Y', T2.dob) BETWEEN '1980' AND '1985' GROUP BY T2.forename, T2.surname ORDER BY AVG(T1.duration) LIMIT 3","SELECT d.forename, d.surname, AVG(p.duration) AS avg_pit_duration FROM drivers d JOIN pitstops p ON d.driverid = p.driverid WHERE d.nationality = 'German' AND d.dob BETWEEN '1980-01-01' AND '1980-12-31' GROUP BY d.driverid ORDER BY avg_pit_duration LIMIT 3","SELECT d.forename, d.surname, AVG(p.duration) AS avg_pit_duration FROM drivers d JOIN pitstops p ON d.driverid = p.driverid WHERE d.nationality = 'German' AND d.dob BETWEEN '1980-01-01' AND '1980-12-31' GROUP BY d.driverid ORDER BY avg_pit_duration LIMIT 3","SELECT d.forename, d.surname, AVG(p.duration) AS avg_duration FROM drivers d JOIN pitstops p ON d.driverid = p.driverid WHERE d.nationality = 'German' AND d.dob BETWEEN '1980-01-01' AND '1980-12-31' OR d.dob BETWEEN '1981-01-01' AND '1981-12-31' OR d.dob BETWEEN '1982-01-01' AND '1982-12-31' OR d.dob BETWEEN '1983-01-01' AND '1983-12-31' OR d.dob BETWEEN '1984-01-01' AND '1984-12-31' OR d.dob BETWEEN '1985-01-01' AND '1985-12-31' GROUP BY d.driverid ORDER BY avg_duration ASC LIMIT 3",0,0,0
"Among all superheroes created by George Lucas, identify the percentage of female superheroes.",challenging,SELECT CAST(COUNT(CASE WHEN T3.gender = 'Female' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.publisher_name = 'George Lucas',SELECT (COUNT(CASE WHEN s.gender_id = (SELECT id FROM gender WHERE gender = 'Female') THEN 1 END) * 100.0 / COUNT(*)) AS female_percentage FROM superhero s WHERE s.publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'George Lucas'),SELECT (COUNT(CASE WHEN s.gender_id = (SELECT id FROM gender WHERE gender = 'Female') THEN 1 END) * 100.0 / COUNT(*)) AS female_percentage FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'George Lucas',NULL,1,1,0
What percentage of male patients who first presented to the hospital in 1981 were diagnosed with BEHCET?,challenging,"SELECT CAST(SUM(CASE WHEN Diagnosis = 'BEHCET' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM Patient WHERE STRFTIME('%Y', `First Date`) = '1981' AND SEX = 'M'","SELECT (COUNT(DISTINCT p.id) * 100.0 / (SELECT COUNT(DISTINCT p.id) FROM patient p WHERE p.sex = 'male' AND strftime('%Y', p.first_date) = '1981')) AS percentage FROM patient p WHERE p.sex = 'male' AND strftime('%Y', p.first_date) = '1981' AND p.diagnosis = 'BEHCET'","SELECT (COUNT(DISTINCT p.id) * 100.0 / (SELECT COUNT(DISTINCT p.id) FROM patient p WHERE p.sex = 'male' AND strftime('%Y', p.first_date) = '1981')) AS percentage FROM patient p WHERE p.sex = 'male' AND strftime('%Y', p.first_date) = '1981' AND p.diagnosis = 'BEHCET'","SELECT (COUNT(DISTINCT p.id) * 100.0 / (SELECT COUNT(DISTINCT p.id) FROM patient p WHERE strftime('%Y', p.first_date) = '1981' AND p.sex = 'male')) AS percentage FROM patient p WHERE strftime('%Y', p.first_date) = '1981' AND p.sex = 'male' AND p.diagnosis = 'BEHCET'",0,0,0
Calculate the percentage of carcinogenic molecules with triple bonded Hidrogen atoms.,challenging,SELECT CAST(SUM(CASE WHEN T1.label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T1.molecule_id = T3.molecule_id WHERE T3.bond_type = '#' AND T2.element = 'h',SELECT (COUNT(DISTINCT m.molecule_id) * 100.0 / (SELECT COUNT(*) FROM molecule)) AS percentage FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON c.atom_id = a.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id WHERE m.label = 'carcinogenic' AND b.bond_type = 'triple' AND a.element = 'H' AND a2.element = 'H',"SELECT molecule_id   FROM molecule   WHERE label = 'carcinogenic' ), hydrogen_atoms AS (   SELECT atom_id   FROM atom   WHERE element = 'H' ), triple_bonded_hydrogen AS (   SELECT a.atom_id   FROM atom a   JOIN connected c ON a.atom_id = c.atom_id   JOIN bond b ON c.bond_id = b.bond_id   WHERE b.bond_type = 'triple' AND a.atom_id IN (SELECT atom_id FROM hydrogen_atoms) ), carcinogenic_triple_bonded_hydrogen AS (   SELECT COUNT(DISTINCT m.molecule_id) AS count   FROM molecule m   JOIN atom a ON m.molecule_id = a.molecule_id   WHERE m.molecule_id IN (SELECT molecule_id FROM carcinogenic_molecules)   AND a.atom_id IN (SELECT atom_id FROM triple_bonded_hydrogen) ) SELECT (CAST(carcinogen",SELECT COUNT(*) FROM molecule WHERE label = 'carcinogenic')) AS 'Percentage of Carcinogenic Molecules with Triple Bonded Hydrogen Atoms' FROM     molecule m JOIN     bond b ON m.molecule_id = b.molecule_id JOIN     connected c ON b.bond_id = c.bond_id JOIN     atom a ON c.atom_id = a.atom_id WHERE     m.label = 'carcinogenic'     AND b.bond_type = 'triple'     AND a.element = 'H',0,0,0
"For in-patient age 50 and above, what is their average anti-cardiolipin antibody (IgG) concentration?",challenging,"SELECT AVG(T2.`aCL IgG`) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) >= 50 AND T1.Admission = '+'",SELECT AVG(l.acl_igg) FROM patient p JOIN examination e ON p.id = e.id JOIN laboratory l ON e.id = l.id WHERE p.admission = 'in-patient' AND (julianday('now') - julianday(p.birthday))/365.25 >= 50,SELECT AVG(l.acl_igg) FROM patient p JOIN examination e ON p.id = e.id JOIN laboratory l ON p.id = l.id WHERE p.admission = 'in-patient' AND (julianday('now') - julianday(p.birthday))/365.25 >= 50,"SELECT AVG(l.acl_igg)         FROM patient p         JOIN examination e ON p.id = e.id         JOIN laboratory l ON p.id = l.id         WHERE p.admission = 'in-patient'         AND p.birthday <= date('now', '-50 years')",0,0,0
What is the composition of element chlorine in percentage among the single bond molecules?,challenging,"SELECT CAST(COUNT(CASE WHEN T.element = 'cl' THEN T.atom_id ELSE NULL END) AS REAL) * 100 / COUNT(T.atom_id) FROM ( SELECT T1.atom_id, T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type = '-' ) AS T",SELECT COUNT(a.atom_id) * 100.0 / (SELECT COUNT(*) FROM atom WHERE molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = 'single')) AS chlorine_percentage FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id WHERE a.element = 'chlorine' AND b.bond_type = 'single',SELECT COUNT(a.atom_id) * 100.0 / (SELECT COUNT(*) FROM atom WHERE molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = 'single')) AS chlorine_percentage FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id WHERE a.element = 'chlorine' AND b.bond_type = 'single',SELECT COUNT(atom_id) AS total_atoms FROM atom WHERE molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = 'single')) t WHERE     a.element = 'chlorine' AND b.bond_type = 'single',0,0,0
"List out the account numbers of female clients who are oldest and has lowest average salary, calculate the gap between this lowest average salary with the highest average salary?",challenging,"SELECT T1.account_id , ( SELECT MAX(A11) - MIN(A11) FROM district ) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T1.account_id = T3.account_id INNER JOIN client AS T4 ON T3.client_id = T4.client_id WHERE T2.district_id = ( SELECT district_id FROM client WHERE gender = 'F' ORDER BY birth_date ASC LIMIT 1 ) ORDER BY T2.A11 DESC LIMIT 1","SELECT client_id     FROM client     WHERE gender = 'female' ), oldest_female AS (     SELECT client_id     FROM female_clients     ORDER BY birth_date ASC     LIMIT 1 ), salaries AS (     SELECT account_id, AVG(amount) AS avg_salary     FROM trans     WHERE operation = 'salary'     GROUP BY account_id ), lowest_avg_salary AS (     SELECT account_id, avg_salary     FROM salaries     WHERE account_id IN (SELECT account_id FROM disp WHERE client_id IN (SELECT client_id FROM oldest_female))     ORDER BY avg_salary ASC     LIMIT 1 ), highest_avg_salary AS (     SELECT account_id, avg_salary     FROM salaries     ORDER BY avg_salary DESC     LIMIT 1 ) SELECT     (SELECT avg_salary FROM highest_avg_salary) - (SELECT avg_salary FROM lowest_avg_salary) AS salary_gap,     (SELECT account_id FROM lowest_avg_salary) AS account","SELECT client_id     FROM client     WHERE gender = 'female' ), oldest_female_client AS (     SELECT client_id     FROM client     WHERE client_id IN (SELECT client_id FROM female_clients)     ORDER BY birth_date ASC     LIMIT 1 ), account_salaries AS (     SELECT account_id, AVG(amount) AS avg_salary     FROM trans     WHERE operation = 'salary'     GROUP BY account_id ), account_info AS (     SELECT a.account_id, avg_salary     FROM account a     JOIN disp d ON a.account_id = d.account_id     JOIN oldest_female_client o ON d.client_id = o.client_id     LEFT JOIN account_salaries s ON a.account_id = s.account_id ) SELECT account_id,        (SELECT MAX(avg_salary) FROM account_info) - MIN(avg_salary) AS salary_gap FROM account_info ORDER BY avg_salary ASC LIMIT 1","SELECT a.account_id, (MAX(a.average_salary) - MIN(a.average_salary)) AS salary_gap FROM (   SELECT c.district_id, d.a2, d.a3, d.a4, d.a5, d.a6, d.a7, d.a8, d.a9, d.a10, d.a11, d.a12, d.a13, d.a14, d.a15, d.a16, ac.account_id, AVG(t.amount) AS average_salary   FROM client c   JOIN disp d ON c.district_id = d.district_id   JOIN account ac ON d.account_id = ac.account_id   JOIN trans t ON ac.account_id = t.account_id   WHERE c.gender = 'female'   GROUP BY c.district_id, ac.account_id   ORDER BY c.birth_date ASC, average_salary ASC   LIMIT 1 ) AS a GROUP BY a.account_id",0,0,0
"Among the bad superheroes, what is the percentage of female superheroes?",challenging,SELECT CAST(COUNT(CASE WHEN T3.gender = 'Female' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.alignment = 'Bad',SELECT (COUNT(s.id) * 100.0 / (SELECT COUNT(id) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'bad'))) AS percentage_female_bad_heroes FROM superhero s JOIN gender g ON s.gender_id = g.id WHERE s.alignment_id = (SELECT id FROM alignment WHERE alignment = 'bad') AND g.gender = 'female',SELECT (COUNT(s.id) * 100.0 / (SELECT COUNT(id) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'bad'))) AS female_percentage FROM superhero s JOIN gender g ON s.gender_id = g.id WHERE s.alignment_id = (SELECT id FROM alignment WHERE alignment = 'bad') AND g.gender = 'female',SELECT (COUNT(DISTINCT superhero.id) * 100.0 / (SELECT COUNT(DISTINCT superhero.id) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'bad'))) AS female_percentage FROM superhero JOIN gender ON superhero.gender_id = gender.id WHERE superhero.alignment_id = (SELECT id FROM alignment WHERE alignment = 'bad') AND gender.gender = 'female',0,0,0
"Among the cards whose version of frame style is 1997, what is the status of the card illustrated by D. Alexander Gregory in legacy play format that has sensitive content or Wizards of the Coast?",challenging,SELECT DISTINCT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T2.uuid = T1.uuid WHERE T1.frameVersion = 1997 AND T1.hasContentWarning = 1 AND T1.artist = 'D. Alexander Gregory' AND T2.format = 'legacy',SELECT l.status FROM cards c JOIN legalities l ON c.id = l.id WHERE c.frameversion = '1997' AND c.artist = 'D. Alexander Gregory' AND (c.hascontentwarning = 1 OR c.artist = 'Wizards of the Coast') AND l.format = 'legacy',SELECT legalities.status FROM cards JOIN legalities ON cards.uuid = legalities.uuid WHERE cards.frameversion = '1997' AND cards.artist = 'D. Alexander Gregory' AND (cards.hascontentwarning = 1 OR cards.artist = 'Wizards of the Coast') AND legalities.format = 'legacy',SELECT legalities.status FROM cards JOIN legalities ON cards.id = legalities.id WHERE cards.frameversion = '1997' AND cards.artist = 'D. Alexander Gregory' AND (cards.hascontentwarning = 1 OR cards.artist = 'Wizards of the Coast') AND legalities.format = 'legacy',0,1,0
Give the full name and contact number of members who had to spend more than average on each expense.,challenging,"SELECT DISTINCT T3.first_name, T3.last_name, T3.phone FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN member AS T3 ON T3.member_id = T1.link_to_member WHERE T1.cost > ( SELECT AVG(T1.cost) FROM expense AS T1 INNER JOIN budget AS T2 ON T1.link_to_budget = T2.budget_id INNER JOIN member AS T3 ON T3.member_id = T1.link_to_member )","SELECT m.first_name, m.last_name, m.phone FROM member m JOIN expense e ON m.member_id = e.link_to_member GROUP BY m.member_id HAVING AVG(e.cost) > (SELECT AVG(cost) FROM expense)","SELECT m.first_name, m.last_name, m.phone FROM member m JOIN expense e ON m.member_id = e.link_to_member GROUP BY m.member_id HAVING AVG(e.cost) > (SELECT AVG(cost) FROM expense)","SELECT m.first_name, m.last_name, m.phone FROM member m JOIN expense e ON m.member_id = e.link_to_member GROUP BY m.member_id HAVING AVG(e.cost) > (SELECT AVG(cost) FROM expense)",0,0,0
"In superheroes with height between 150 to 180, what is the percentage of heroes published by Marvel Comics?",challenging,SELECT CAST(COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.height_cm BETWEEN 150 AND 180,SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE height_cm BETWEEN 150 AND 180)) AS percentage_marvel_heroes FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics' AND superhero.height_cm BETWEEN 150 AND 180,SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE height_cm BETWEEN 150 AND 180)) AS percentage_marvel_heroes FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics' AND superhero.height_cm BETWEEN 150 AND 180,SELECT (COUNT(s.id) * 100.0 /         (SELECT COUNT(id) FROM superhero WHERE height_cm BETWEEN 150 AND 180)) AS percentage FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE p.publisher_name = 'Marvel Comics' AND s.height_cm BETWEEN 150 AND 180,1,1,1
List the elements of all the triple bonds.,challenging,SELECT DISTINCT T3.element FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T1.bond_type = '#',SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'triple',SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'triple',SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'triple',0,0,0
Which molecules have triple bonds and list all the elements they contain.,challenging,"SELECT DISTINCT T1.molecule_id, T2.element FROM bond AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '#'","SELECT m.molecule_id, m.label, a.element FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON c.atom_id = a.atom_id OR c.atom_id2 = a.atom_id WHERE b.bond_type = 'triple' GROUP BY m.molecule_id, a.element","SELECT m.molecule_id, m.label, a.element FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON c.atom_id = a.atom_id OR c.atom_id2 = a.atom_id WHERE b.bond_type = 'triple' GROUP BY m.molecule_id, m.label, a.element","SELECT m.molecule_id, m.label, a.element FROM molecule m JOIN bond b ON m.molecule_id = b.molecule_id JOIN connected c ON b.bond_id = c.bond_id JOIN atom a ON c.atom_id = a.atom_id OR c.atom_id2 = a.atom_id WHERE b.bond_type = 'triple'",0,0,0
What is the name of the social event that was attended by the vice president of the Student_Club located at 900 E. Washington St.?,challenging,SELECT T2.event_name FROM attendance AS T1 INNER JOIN event AS T2 ON T2.event_id = T1.link_to_event INNER JOIN member AS T3 ON T1.link_to_member = T3.member_id WHERE T3.position = 'Vice President' AND T2.location = '900 E. Washington St.' AND T2.type = 'Social',SELECT e.event_name FROM event e JOIN attendance a ON e.event_id = a.link_to_event JOIN member m ON a.link_to_member = m.member_id JOIN zip_code z ON m.zip = z.zip_code WHERE m.position = 'vice president' AND z.city = 'E. Washington St.' AND e.type = 'social',SELECT e.event_name FROM event e JOIN attendance a ON e.event_id = a.link_to_event JOIN member m ON a.link_to_member = m.member_id JOIN major maj ON m.link_to_major = maj.major_id JOIN zip_code z ON m.zip = z.zip_code WHERE m.position = 'vice president' AND maj.major_name = 'Student_Club' AND z.city = 'E. Washington St.' AND e.type = 'social',SELECT e.event_name FROM event e JOIN attendance a ON e.event_id = a.link_to_event JOIN member m ON a.link_to_member = m.member_id WHERE m.position = 'vice president' AND m.zip = '900 E. Washington St.',0,0,0
What is the percentage of superheroes who act in their own self-interest or make decisions based on their own moral code? Indicate how many of the said superheroes were published by Marvel Comics.,challenging,"SELECT (CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM superhero)), CAST(SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS REAL) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN alignment AS T3 ON T3.id = T1.alignment_id WHERE T3.alignment = 'Bad'","SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero) AS percentage,        COUNT(*) AS num_heroes,        (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') AND alignment_id = (SELECT id FROM alignment WHERE alignment = 'good')) AS marvel_good_heroes FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'good')","SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero) AS percentage,        COUNT(*) AS good_heroes,        (SELECT COUNT(*) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'good') AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS marvel_good_heroes FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'good')","SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero) AS percentage,        COUNT(*) AS total_self_interest_heroes,        SUM(CASE WHEN publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') THEN 1 ELSE 0 END) AS marvel_heroes FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'good')",0,0,0
"List all the elements with double bond, consisted in molecule TR024.",challenging,SELECT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR024' AND T2.bond_type = '=',SELECT a.element FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id AND a.atom_id = connected.atom_id JOIN connected ON b.bond_id = connected.bond_id WHERE b.bond_type = 'double' AND a.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR024'),SELECT a.element FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id AND a.atom_id = c.atom_id JOIN connected c ON b.bond_id = c.bond_id WHERE b.bond_type = 'double' AND a.molecule_id = (SELECT molecule_id FROM molecule WHERE label = 'TR024'),SELECT a.element FROM atom a JOIN bond b ON a.molecule_id = b.molecule_id JOIN molecule m ON m.molecule_id = a.molecule_id WHERE m.label = 'TR024' AND b.bond_type = 'double',0,0,0
"For the patient who was diagnosed SLE on 1997/1/27, what was his/her original diagnose when he/she came to the hospital for the first time?",challenging,SELECT T1.Diagnosis FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.ID = ( SELECT ID FROM Examination WHERE `Examination Date` = '1997-01-27' AND Diagnosis = 'SLE' ) AND T2.`Examination Date` = T1.`First Date`,SELECT p.diagnosis FROM patient p JOIN examination e ON p.id = e.id WHERE p.diagnosis = 'SLE' AND e.examination_date = '1997/1/27',SELECT p.diagnosis FROM patient p JOIN examination e ON p.id = e.id WHERE p.diagnosis = 'SLE' AND e.examination_date = '1997/1/27',SELECT p.diagnosis FROM patient p JOIN examination e ON p.id = e.id WHERE p.diagnosis = 'SLE' AND e.examination_date = '1997/1/27',0,0,0
"At present, calculate for the player's age who have a sprint speed of no less than 97 between 2013 to 2015.",challenging,"SELECT DISTINCT DATETIME() - T2.birthday age FROM Player_Attributes AS t1 INNER JOIN Player AS t2 ON t1.player_api_id = t2.player_api_id WHERE STRFTIME('%Y',t1.`date`) >= '2013' AND STRFTIME('%Y',t1.`date`) <= '2015' AND t1.sprint_speed >= 97","SELECT player.player_name, player.birthday, (2015 - strftime('%Y', player.birthday)) AS age FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.sprint_speed >= 97 AND strftime('%Y', player_attributes.date) BETWEEN '2013' AND '2015'","SELECT player.player_name, player.birthday, (2015 - strftime('%Y', player.birthday)) AS age FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.sprint_speed >= 97 AND strftime('%Y', player_attributes.date) BETWEEN '2013' AND '2015'","SELECT player.player_name,        (JULIANDAY('now') - JULIANDAY(player.birthday)) / 365 AS age FROM player JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player_attributes.sprint_speed >= 97 AND player_attributes.date BETWEEN '2013-01-01' AND '2015-12-31'",0,0,0
How many atoms with iodine and with sulfur type elements are there in single bond molecules?,challenging,"SELECT COUNT(DISTINCT CASE WHEN T1.element = 'i' THEN T1.atom_id ELSE NULL END) AS iodine_nums , COUNT(DISTINCT CASE WHEN T1.element = 's' THEN T1.atom_id ELSE NULL END) AS sulfur_nums FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '-'","SELECT COUNT(*) FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id WHERE atom.element IN ('iodine', 'sulfur') AND bond.bond_type = 'single'","SELECT COUNT(*) FROM atom JOIN bond ON atom.molecule_id = bond.molecule_id WHERE atom.element IN ('iodine', 'sulfur') AND bond.bond_type = 'single'","SELECT COUNT(*) FROM atom WHERE element IN ('iodine', 'sulfur') AND molecule_id IN (SELECT molecule_id FROM bond WHERE bond_type = 'single')",0,0,0
What percentage of patients with a proteinuria level within the normal range have a uric acid level below the normal range?,challenging,SELECT CAST(SUM(CASE WHEN UA <= 6.5 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM Laboratory WHERE `U-PRO` > 0 AND `U-PRO` < 30,SELECT (COUNT(p.id) * 100.0 / (SELECT COUNT(p.id) FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.un BETWEEN 15 AND 30)) AS percentage FROM patient p JOIN laboratory l ON p.id = l.id WHERE l.un BETWEEN 15 AND 30 AND l.u_pro < 6,SELECT (COUNT(patient.id) * 100.0 / (SELECT COUNT(*) FROM laboratory WHERE un >= 15 AND un <= 30)) AS percentage FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE ua < 3.4,SELECT (COUNT(patient.id) * 100.0 / (SELECT COUNT(*) FROM laboratory WHERE un >= 10 AND un <= 20)) AS percentage_of_patients FROM patient JOIN laboratory ON patient.id = laboratory.id WHERE ua < 6.0,0,0,0
Calculate the total average cost that Elijah Allen spent in the events on September and October.,challenging,"SELECT AVG(T2.cost) FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.last_name = 'Allen' AND T1.first_name = 'Elijah' AND (SUBSTR(T2.expense_date, 6, 2) = '09' OR SUBSTR(T2.expense_date, 6, 2) = '10')",SELECT AVG(cost) AS average_cost FROM expense JOIN member ON expense.link_to_member = member.member_id JOIN budget ON expense.link_to_budget = budget.budget_id JOIN attendance ON budget.link_to_event = attendance.link_to_event JOIN event ON attendance.link_to_event = event.event_id WHERE (member.first_name = 'Elijah' AND member.last_name = 'Allen') AND (event.event_date LIKE '2022-09%' OR event.event_date LIKE '2022-10%'),"SELECT AVG(cost) AS average_cost FROM expense JOIN member ON expense.link_to_member = member.member_id JOIN budget ON expense.link_to_budget = budget.budget_id JOIN attendance ON budget.link_to_event = attendance.link_to_event JOIN ""event"" ON attendance.link_to_event = ""event"".event_id WHERE (first_name = 'Elijah' AND last_name = 'Allen') AND (strftime('%m', ""event"".event_date) IN ('09', '10'))",SELECT AVG(cost) AS average_cost         FROM expense         JOIN member ON expense.link_to_member = member.member_id         JOIN budget ON expense.link_to_budget = budget.budget_id         JOIN event ON budget.link_to_event = event.event_id         WHERE (member.first_name = 'Elijah' AND member.last_name = 'Allen')         AND (event.event_date LIKE '2022-09%' OR event.event_date LIKE '2022-10%'),0,0,0
"What is the difference in the annual average consumption of the customers with the least amount of consumption paid in CZK for 2013 between SME and LAM, LAM and KAM, and KAM and SME?",challenging,"SELECT CAST(SUM(IIF(T1.Segment = 'SME', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'LAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) , CAST(SUM(IIF(T1.Segment = 'LAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'KAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) , CAST(SUM(IIF(T1.Segment = 'KAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'SME', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' AND T2.Consumption = ( SELECT MIN(Consumption) FROM yearmonth ) AND T2.Date BETWEEN 201301 AND 201312",NULL,"SELECT MIN(amount) FROM transactions_1k WHERE currency = 'CZK' AND strftime('%Y', date) = '2013') GROUP BY     c.segment ORDER BY     avg_consumption",SELECT min_amount FROM min_segments WHERE segment = 'SME'))     OR (segment = 'LAM' AND total_amount = (SELECT min_amount FROM min_segments WHERE segment = 'LAM'))     OR,0,0,0
"Consider the average difference between K-12 enrollment and 15-17 enrollment of schools that are locally funded, list the names and DOC type of schools which has a difference above this average.",challenging,"SELECT T2.School, T2.DOC FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.FundingType = 'Locally funded' AND (T1.`Enrollment (K-12)` - T1.`Enrollment (Ages 5-17)`) > (SELECT AVG(T3.`Enrollment (K-12)` - T3.`Enrollment (Ages 5-17)`) FROM frpm AS T3 INNER JOIN schools AS T4 ON T3.CDSCode = T4.CDSCode WHERE T4.FundingType = 'Locally funded')","SELECT s.school, s.doctype FROM schools s JOIN frpm f ON s.cdscode = f.cdscode WHERE s.fundingtype = 'locally funded' GROUP BY s.cdscode HAVING ABS(f.enrollment_k_12 - f.enrollment_ages_5_17) > (     SELECT AVG(ABS(f1.enrollment_k_12 - f1.enrollment_ages_5_17))     FROM frpm f1     JOIN schools s1 ON f1.cdscode = s1.cdscode     WHERE s1.fundingtype = 'locally funded' )","SELECT s.school, s.doctype FROM schools s JOIN frpm f ON s.cdscode = f.cdscode WHERE s.fundingtype = 'locally funded' GROUP BY s.cdscode HAVING ABS(AVG(f.enrollment_k_12) - AVG(f.enrollment_ages_5_17)) > (SELECT AVG(ABS(f1.enrollment_k_12 - f1.enrollment_ages_5_17)) FROM frpm f1 JOIN schools s1 ON f1.cdscode = s1.cdscode WHERE s1.fundingtype = 'locally funded')","SELECT s.school, s.doctype FROM schools s JOIN satscores ss ON s.cdscode = ss.cds WHERE s.fundingtype = 'locally funded' GROUP BY s.cdscode HAVING ABS(AVG(ss.enroll12) - AVG(ss.numtsttakr)) > (     SELECT AVG(ABS(ss1.enroll12 - ss1.numtsttakr))     FROM satscores ss1     JOIN schools s1 ON ss1.cds = s1.cdscode     WHERE s1.fundingtype = 'locally funded' )",0,0,0
How often does account number 3 request an account statement to be released? What was the aim of debiting 3539 in total?,challenging,"SELECT T1.frequency, T2.k_symbol FROM account AS T1 INNER JOIN (SELECT account_id, k_symbol, SUM(amount) AS total_amount FROM `order` GROUP BY account_id, k_symbol) AS T2 ON T1.account_id = T2.account_id WHERE T1.account_id = 3 AND T2.total_amount = 3539","SELECT COUNT(*) AS statement_requests, SUM(amount) AS total_debit FROM trans WHERE account_id = 3 AND operation = 'release_statement' OR (account_id = 3 AND amount < 0 AND trans_id = 3539)","SELECT COUNT(*) AS statement_requests, SUM(amount) AS total_debit FROM trans WHERE account_id = 3 AND type = 'account_statement' AND operation = 'debit' AND amount = 3539","SELECT COUNT(*) AS statement_requests, SUM(amount) AS total_debit_amount FROM trans WHERE account_id = 3 AND type = 'account_statement' AND operation = 'debit'",0,0,0
"Among the sets whose expansion type is Commander, which set has the highest total number of cards including promotional and related supplemental products but excluding Alchemy modifications? Indicate the id of the set.",challenging,SELECT id FROM sets WHERE type = 'commander' ORDER BY totalSetSize DESC LIMIT 1,SELECT id FROM sets WHERE type = 'Commander' AND totalsetsize = (     SELECT MAX(totalsetsize)     FROM sets     WHERE type = 'Commander'     AND isalchemy = 0     AND (isfoilonly = 0 OR isnonfoilonly = 0) ),SELECT id FROM sets WHERE type = 'Commander' AND totalsetsize = (     SELECT MAX(totalsetsize)     FROM sets     WHERE type = 'Commander'     AND isalchemy = 0     AND (isfoilonly = 0 OR isnonfoilonly = 0) ),SELECT id FROM sets WHERE type = 'commander' AND basesetsize = (SELECT MAX(basesetsize) FROM sets WHERE type = 'commander' AND isalchemy = 0),0,0,0
"In superheroes with missing weight data, calculate the difference between the number of superheroes with blue eyes and no eye color.",challenging,SELECT SUM(CASE WHEN T2.id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.id = 1 THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg = 0 OR T1.weight_kg is NULL,SELECT COUNT(*) FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'blue') AND weight_kg IS NULL)     -     (SELECT COUNT(*) FROM superhero WHERE eye_colour_id IS NULL AND weight_kg IS NULL),SELECT COUNT(*) FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'blue') AND weight_kg IS NULL)     -     (SELECT COUNT(*) FROM superhero WHERE eye_colour_id IS NULL AND weight_kg IS NULL),SELECT (SELECT COUNT(*) FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'blue') AND weight_kg IS NULL) - (SELECT COUNT(*) FROM superhero WHERE eye_colour_id IS NULL AND weight_kg IS NULL),0,0,0
"Which of the three segments—SME, LAM and KAM—has the biggest and lowest percentage increases in consumption paid in EUR between 2012 and 2013?",challenging,"SELECT CAST((SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2013%', T2.Consumption, 0)) - SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2012%', T2.Consumption, 0))) AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'SME' AND T2.Date LIKE '2012%', T2.Consumption, 0)), CAST(SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2013%', T2.Consumption, 0)) - SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'LAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) , CAST(SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2013%', T2.Consumption, 0)) - SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) AS FLOAT) * 100 / SUM(IIF(T1.Segment = 'KAM' AND T2.Date LIKE '2012%', T2.Consumption, 0)) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID",NULL,"SELECT segment,        ((SUM(CASE WHEN date BETWEEN '2013-01-01' AND '2013-12-31' THEN amount ELSE 0 END) -          SUM(CASE WHEN date BETWEEN '2012-01-01' AND '2012-12-31' THEN amount ELSE 0 END)) /         SUM(CASE WHEN date BETWEEN '2012-01-01' AND '2012-12-31' THEN amount ELSE 0 END)) * 100 AS percentage_change FROM transactions_1k JOIN customers ON transactions_1k.customerid = customers.customerid WHERE currency = 'EUR' GROUP BY segment ORDER BY percentage_change DESC, percentage_change ASC",NULL,0,0,0
What was the difference in gas consumption between CZK-paying customers and EUR-paying customers in 2012?,challenging,"SELECT SUM(IIF(T1.Currency = 'CZK', T2.Consumption, 0)) - SUM(IIF(T1.Currency = 'EUR', T2.Consumption, 0)) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE SUBSTR(T2.Date, 1, 4) = '2012'",NULL,NULL,"SELECT SUM(CASE WHEN c.currency = 'CZK' THEN t.amount ELSE 0 END) - SUM(CASE WHEN c.currency = 'EUR' THEN t.amount ELSE 0 END) AS consumption_difference FROM transactions_1k AS t JOIN customers AS c ON t.customerid = c.customerid WHERE strftime('%Y', t.date) = '2012'",0,0,0
List all carcinogenic molecules and their elements.,challenging,"SELECT DISTINCT T2.molecule_id, T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'","SELECT m.label, a.element FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = 'carcinogenic'","SELECT m.label, a.element FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = 'carcinogenic'","SELECT m.label, a.element FROM molecule m JOIN atom a ON m.molecule_id = a.molecule_id WHERE m.label = 'carcinogenic'",0,0,0
Which set is not available outside of the United States and has foil cards with Japanese writing on them? Please include the set ID in your response.,challenging,"SELECT T1.name, T1.id FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Japanese' AND T1.isFoilOnly = 1 AND T1.isForeignOnly = 0",SELECT s.id FROM sets s JOIN foreign_data fd ON s.id = fd.id WHERE s.isonlineonly = 1 AND fd.language = 'Japanese' AND s.isfoilonly = 1,SELECT id FROM sets WHERE isonlineonly = 1 AND id IN (     SELECT DISTINCT sets.id     FROM sets     JOIN cards ON sets.code = cards.setcode     JOIN foreign_data ON cards.id = foreign_data.uuid     WHERE hasfoil = 1 AND language = 'Japanese' ),SELECT id FROM sets WHERE isforeignonly = 1 AND id IN (     SELECT setcode FROM foreign_data     WHERE language = 'Japanese'     AND id IN (         SELECT setcode FROM cards         WHERE hasfoil = 1     ) ),0,0,0
"For the customer who paid 634.8 in 2012/8/25, what was the consumption decrease rate from Year 2012 to 2013?",challenging,"SELECT CAST(SUM(IIF(SUBSTR(Date, 1, 4) = '2012', Consumption, 0)) - SUM(IIF(SUBSTR(Date, 1, 4) = '2013', Consumption, 0)) AS FLOAT) / SUM(IIF(SUBSTR(Date, 1, 4) = '2012', Consumption, 0)) FROM yearmonth WHERE CustomerID = ( SELECT T1.CustomerID FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-25' AND T1.Price = 634.8 )","SELECT customerid, SUM(amount) AS consumption_2012   FROM transactions_1k   WHERE strftime('%Y', date) = '2012' AND customerid = (SELECT customerid FROM transactions_1k WHERE date = '2012/8/25' AND amount = 634.8)   GROUP BY customerid ), customer_2013 AS (   SELECT customerid, SUM(amount) AS consumption_2013   FROM transactions_1k   WHERE strftime('%Y', date) = '2013' AND customerid = (SELECT customerid FROM customer_2012)   GROUP BY customerid ) SELECT ((consumption_2012 - consumption_2013) / consumption_2012) AS decrease_rate FROM customer_2012 JOIN customer_2013 USING (customerid)","SELECT customerid   FROM transactions_1k   WHERE date = '2012/8/25' AND amount = 634.8 ), consumption_2012 AS (   SELECT customerid, SUM(consumption) AS total_consumption   FROM yearmonth   WHERE strftime('%Y', date) = '2012' AND customerid IN (SELECT customerid FROM customer_2012)   GROUP BY customerid ), consumption_2013 AS (   SELECT customerid, SUM(consumption) AS total_consumption   FROM yearmonth   WHERE strftime('%Y', date) = '2013' AND customerid IN (SELECT customerid FROM customer_2012)   GROUP BY customerid ) SELECT ((consumption_2012.total_consumption - consumption_2013.total_consumption) / consumption_2012.total_consumption) * 100 AS decrease_rate FROM consumption_2012 JOIN consumption_2013 ON consumption_2012.customerid = consumption_2013.customerid",NULL,0,0,0
"Which superhero has the same eyes, hair and skin colour? Indicate the publisher of the superhero.",challenging,"SELECT T1.superhero_name, T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.eye_colour_id = T1.hair_colour_id AND T1.eye_colour_id = T1.skin_colour_id","SELECT s.superhero_name, p.publisher_name FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE EXISTS (     SELECT 1     FROM superhero s2     WHERE s2.eye_colour_id = s.eye_colour_id     AND s2.hair_colour_id = s.hair_colour_id     AND s2.skin_colour_id = s.skin_colour_id     AND s2.id <> s.id )","SELECT s.superhero_name, p.publisher_name FROM superhero s JOIN publisher p ON s.publisher_id = p.id WHERE EXISTS (     SELECT 1     FROM superhero s2     WHERE s2.eye_colour_id = s.eye_colour_id     AND s2.hair_colour_id = s.hair_colour_id     AND s2.skin_colour_id = s.skin_colour_id     AND s2.id <> s.id )","SELECT superhero.superhero_name, publisher.publisher_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE EXISTS (     SELECT 1     FROM superhero AS s2     WHERE s2.eye_colour_id = superhero.eye_colour_id     AND s2.hair_colour_id = superhero.hair_colour_id     AND s2.skin_colour_id = superhero.skin_colour_id     AND s2.id != superhero.id )",0,0,0
"Which constructor scored most points from Monaco Grand Prix between 1980 and 2010? List the score, name and nationality of this team.",challenging,"SELECT SUM(T1.points), T2.name, T2.nationality FROM constructorResults AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId INNER JOIN races AS T3 ON T3.raceid = T1.raceid WHERE T3.name = 'Monaco Grand Prix' AND T3.year BETWEEN 1980 AND 2010 GROUP BY T2.name ORDER BY SUM(T1.points) DESC LIMIT 1","SELECT c.name, c.nationality, SUM(cr.points) AS total_points FROM constructorresults cr JOIN constructors c ON cr.constructorid = c.constructorid JOIN races r ON cr.raceid = r.raceid WHERE r.name = 'Monaco Grand Prix' AND r.year BETWEEN 1980 AND 2010 GROUP BY cr.constructorid ORDER BY total_points DESC LIMIT 1","SELECT c.name, c.nationality, SUM(cr.points) AS total_points FROM constructorresults cr JOIN races r ON cr.raceid = r.raceid JOIN constructors c ON cr.constructorid = c.constructorid WHERE r.name = 'Monaco Grand Prix' AND r.year BETWEEN 1980 AND 2010 GROUP BY cr.constructorid ORDER BY total_points DESC LIMIT 1","SELECT constructorresults.points, constructors.name, constructors.nationality FROM constructorresults JOIN races ON constructorresults.raceid = races.raceid JOIN constructors ON constructorresults.constructorid = constructors.constructorid WHERE races.name = 'Monaco Grand Prix' AND races.year BETWEEN 1980 AND 2010 ORDER BY constructorresults.points DESC LIMIT 1",0,0,0
What elements are in a double type bond?,challenging,SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id WHERE T2.bond_type = '=',SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'double',SELECT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'double',SELECT DISTINCT a.element FROM atom a JOIN connected c ON a.atom_id = c.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = 'double',0,0,0
"Please list the account types that are not eligible for loans, and the average income of residents in the district where the account is located exceeds $8000 but is no more than $9000.",challenging,SELECT T3.type FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T2.account_id = T3.account_id WHERE T3.type != 'OWNER' AND T1.A11 BETWEEN 8000 AND 9000,SELECT DISTINCT d.type FROM disp d JOIN client c ON d.client_id = c.client_id JOIN district di ON c.district_id = di.district_id WHERE d.account_id NOT IN (SELECT account_id FROM loan) AND (SELECT AVG(di.a2 + di.a3 + di.a4 + di.a5 + di.a6 + di.a7 + di.a8 + di.a9 + di.a10 + di.a11 + di.a12 + di.a13 + di.a14 + di.a15 + di.a16) FROM district WHERE district_id = di.district_id) BETWEEN 8000 AND 9000,SELECT DISTINCT d.type FROM disp d JOIN account a ON d.account_id = a.account_id JOIN client c ON d.client_id = c.client_id JOIN district dist ON c.district_id = dist.district_id WHERE a.account_id NOT IN (SELECT account_id FROM loan) AND (SELECT AVG(income) FROM client WHERE district_id = dist.district_id) BETWEEN 8000 AND 9000,SELECT DISTINCT d.type FROM disp d JOIN client c ON d.client_id = c.client_id JOIN district di ON c.district_id = di.district_id WHERE d.account_id NOT IN (SELECT account_id FROM loan) AND di.average_income > 8000 AND di.average_income <= 9000,0,0,0
"What is the average time in seconds of champion for each year, before year 1975?",challenging,"WITH time_in_seconds AS ( SELECT T2.year, T2.raceId, T1.positionOrder, CASE WHEN T1.positionOrder = 1 THEN (CAST(SUBSTR(T1.time, 1, 1) AS REAL) * 3600) + (CAST(SUBSTR(T1.time, 3, 2) AS REAL) * 60) + CAST(SUBSTR(T1.time, 6,2) AS REAL )   + CAST(SUBSTR(T1.time, 9) AS REAL)/1000 ELSE 0 END AS time_seconds FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.time IS NOT NULL ), champion_time AS ( SELECT year, raceId, time_seconds FROM time_in_seconds WHERE positionOrder = 1 ) SELECT year, AVG(time_seconds) FROM champion_time WHERE year < 1975 GROUP BY year HAVING AVG(time_seconds) IS NOT NULL",SELECT AVG(milliseconds) / 1000 AS average_time_in_seconds FROM results JOIN seasons ON results.year = seasons.year JOIN driverstandings ON results.driverid = driverstandings.driverid AND results.raceid = driverstandings.raceid WHERE seasons.year < 1975 AND driverstandings.position = 1,SELECT AVG(milliseconds) / 1000 AS average_time_in_seconds FROM results JOIN driverstandings ON results.resultid = driverstandings.driverstandingsid JOIN races ON results.raceid = races.raceid WHERE position = 1 AND races.year < 1975,"SELECT year, AVG(milliseconds) / 1000 AS avg_time_seconds         FROM races         JOIN results ON races.raceid = results.raceid         JOIN driverstandings ON results.driverstandingsid = driverstandings.driverstandingsid         WHERE position = 1 AND year < 1975         GROUP BY year",0,0,0
Tally the toxicology element of the 4th atom of each molecule that was carcinogenic.,challenging,"SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND SUBSTR(T1.atom_id, -1) = '4' AND LENGTH(T1.atom_id) = 7",SELECT a.element FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = 'carcinogenic' AND a.atom_id = 4,SELECT a.element FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = 'carcinogenic' AND a.atom_id = 4,SELECT a.element FROM atom a JOIN molecule m ON a.molecule_id = m.molecule_id WHERE m.label = 'carcinogenic' AND a.atom_id = 4,0,0,0
