Question,hardness,Gold,Prediction_0.1,Prediction_0.5,Prediction_1.0,EX_0.1,EX_0.5,EX_1.0
"Please list the account types that are not eligible for loans, and the average income of residents in the district where the account is located exceeds $8000 but is no more than $9000.",challenging,SELECT T3.type FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T2.account_id = T3.account_id WHERE T3.type != 'OWNER' AND T1.A11 BETWEEN 8000 AND 9000,SELECT DISTINCT disp.type FROM disp JOIN account ON disp.account_id = account.account_id JOIN district ON account.district_id = district.district_id WHERE district.A11 > 8000 AND district.A11 <= 9000 AND disp.type != 'OWNER',SELECT DISTINCT disp.type AS account_type FROM disp JOIN client ON disp.client_id = client.client_id JOIN district ON client.district_id = district.district_id WHERE disp.type != 'OWNER' AND (district.A11 BETWEEN 8000 AND 9000),SELECT type FROM account LEFT JOIN disp ON account.account_id = disp.account_id LEFT JOIN client ON disp.client_id = client.client_id LEFT JOIN district ON client.district_id = district.district_id LEFT JOIN loan ON account.account_id = loan.account_id WHERE loan.status IS NULL AND district.A11 BETWEEN 8000 AND 9000 GROUP BY type,1,1,0
"For all the female patient age 50 and above, who has abnormal red blood cell count. State if they were admitted to hospital.",challenging,"SELECT DISTINCT T1.ID, T1.Admission FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (T2.RBC <= 3.5 OR T2.RBC >= 6.0) AND STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) >= 50","SELECT Patient.ID, Patient.SEX, SUBTRACT(year(current_timestamp), year(Patient.Birthday)) AS Age, Examination.RBC, Patient.Admission FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.SEX = 'F' AND SUBTRACT(year(current_timestamp), year(Patient.Birthday)) >= 50 AND (Examination.RBC <= 3.5 OR Examination.RBC >= 6.0)","SELECT Patient.ID, Patient.SEX, Patient.Birthday, Patient.Admission, Examination.RBC FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.SEX = 'F' AND (year(current_timestamp) - year(Patient.Birthday)) >= 50 AND (Examination.RBC <= 3.5 OR Examination.RBC >= 6.0)","SELECT Patient.ID, Patient.SEX, SUBTRACT(year(current_timestamp), year(Patient.Birthday)) as Age, Examination.RBC, Patient.Admission FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.SEX = 'F' AND SUBTRACT(year(current_timestamp), year(Patient.Birthday)) >= 50 AND (Examination.RBC <= 3.5 OR Examination.RBC >= 6.0)",0,0,0
Which toxic element can be found in the molecule TR151?,challenging,SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR151',YOUR SQL QUERY HERE,YOUR SQL QUERY HERE,SELECT element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = 'TR151',0,0,0
"For all the set of cards that has Japanese translation, what is the percentage of them are only available in non-foil?",challenging,SELECT CAST(SUM(CASE WHEN isNonFoilOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) FROM sets WHERE code IN ( SELECT setCode FROM set_translations WHERE language = 'Japanese' ),SELECT ( SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Japanese' AND cards.isNonFoilOnly = 1 ) / ( SELECT COUNT(*) FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Japanese' ) * 100 AS percentage,SELECT (SUM(cards.isNonFoilOnly = 1 AND foreign_data.language = 'Japanese') / SUM(foreign_data.language = 'Japanese')) * 100 AS percentage FROM cards JOIN foreign_data ON cards.uuid = foreign_data.uuid,SELECT (SELECT COUNT(*) FROM cards WHERE isNonFoilOnly = 1 AND EXISTS (SELECT 1 FROM foreign_data WHERE cards.uuid = foreign_data.uuid AND language = 'Japanese')) / (SELECT COUNT(*) FROM cards WHERE EXISTS (SELECT 1 FROM foreign_data WHERE cards.uuid = foreign_data.uuid AND language = 'Japanese')) * 100 AS percentage,0,0,0
"List all the elements with double bond, consisted in molecule TR024.",challenging,SELECT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR024' AND T2.bond_type = '=',SELECT element FROM atom JOIN bond ON atom.atom_id = bond.molecule_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond_type = '=' AND molecule.molecule_id = 'TR024',SELECT element FROM atom JOIN bond ON atom.atom_id = bond.molecule_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond_type = '=' AND molecule.molecule_id = 'TR024',SELECT element FROM atom JOIN bond ON atom.atom_id = bond.molecule_id JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond_type = '=' AND molecule.molecule_id = 'TR024',0,0,0
What is the percentage of superheroes who act in their own self-interest or make decisions based on their own moral code? Indicate how many of the said superheroes were published by Marvel Comics.,challenging,"SELECT (CAST(COUNT(*) AS REAL) * 100 / (SELECT COUNT(*) FROM superhero)), CAST(SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) AS REAL) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN alignment AS T3 ON T3.id = T1.alignment_id WHERE T3.alignment = 'Bad'","SELECT (SELECT COUNT(*) FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.alignment = 'Bad') AS bad_alignment_count, (SELECT COUNT(*) FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE alignment.alignment = 'Bad' AND publisher.publisher_name = 'Marvel Comics') AS marvel_bad_alignment_count, (SELECT (bad_alignment_count * 100.0) / COUNT(superhero.id)) AS percentage_bad_alignment, (SELECT (marvel_bad_alignment_count * 100.0) / bad_alignment_count) AS percentage_marvel_bad_alignment FROM superhero","SELECT (SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad')) AS percentage, (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics') AND alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad')) AS marvel_bad_alignment","SELECT COUNT(*) as total_bad_alignment, (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM superhero)) as percentage, (SELECT COUNT(*) FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad') AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) as bad_alignment_marvel_comics FROM superhero WHERE alignment_id = (SELECT id FROM alignment WHERE alignment = 'Bad')",0,1,0
What was the average overall rating for Marko Arnautovic from 2007/2/22 to 2016/4/21?,challenging,"SELECT CAST(SUM(t2.overall_rating) AS REAL) / COUNT(t2.id) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_fifa_api_id = t2.player_fifa_api_id WHERE t1.player_name = 'Marko Arnautovic' AND SUBSTR(t2.`date`, 1, 10) BETWEEN '2007-02-22' AND '2016-04-21'",SELECT AVG(overall_rating) FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.player_name = 'Marko Arnautovic' AND Player_Attributes.date BETWEEN '2007-02-22' AND '2016-04-21',SELECT AVG(overall_rating) FROM Player_Attributes JOIN Player ON Player_Attributes.player_api_id = Player.player_api_id WHERE Player.player_name = 'Marko Arnautovic' AND Player_Attributes.date BETWEEN '2007-02-22' AND '2016-04-21',SELECT AVG(overall_rating) FROM Player_Attributes WHERE player_name = 'Marko Arnautovic' AND date BETWEEN '2007-02-22' AND '2016-04-21',0,0,0
"Between DC and Marvel Comics, which publisher has published more superheroes? Find the difference in the number of superheroes they have published.",challenging,SELECT SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id,SELECT COUNT(*) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics' MINUS SELECT COUNT(*) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'DC Comics',SELECT COUNT(*) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics' MINUS SELECT COUNT(*) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'DC Comics',"SELECT COUNT(*) FROM superhero WHERE publisher_id IN ( SELECT id FROM publisher WHERE publisher_name IN ('DC Comics', 'Marvel Comics') ) GROUP BY publisher_id",0,0,0
"What are the valid e-mail addresses of the administrator of the school located in the San Bernardino county, City of San Bernardino City Unified that opened between 1/1/2009 to 12/31/2010 whose school types are public Intermediate/Middle Schools and Unified Schools?",challenging,"SELECT T2.AdmEmail1, T2.AdmEmail2 FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'San Bernardino' AND T2.City = 'San Bernardino' AND T2.DOC = 54 AND strftime('%Y', T2.OpenDate) BETWEEN '2009' AND '2010' AND T2.SOC = 62",,,"SELECT schools.AdmEmail1, schools.AdmEmail2, schools.AdmEmail3 FROM schools JOIN satscores ON schools.CDSCode = satscores.cds WHERE schools.County = 'San Bernardino' AND schools.City = 'San Bernardino City Unified' AND schools.OpenDate BETWEEN '2009-01-01' AND '2010-12-31' AND (schools.SOC = '62' OR schools.SOC = '54')",0,0,0
How many percent of female heroes were published by Marvel Comics?,challenging,SELECT CAST(COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T3.gender = 'Female',SELECT (SELECT (SELECT COUNT(*) FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE gender.gender = 'Female' AND publisher.publisher_name = 'Marvel Comics') * 100 / (SELECT COUNT(*) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics') ) AS percent,SELECT (SELECT (SELECT COUNT(*) FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE gender.gender = 'Female' AND publisher.publisher_name = 'Marvel Comics') * 100.0 / (SELECT COUNT(*) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics')) AS percent,SELECT ( SELECT ( (SELECT COUNT(*) FROM superhero WHERE gender_id = 2 AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) * 1.0) / (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) * 100 ) as percentage,0,0,0
How many male patients who underwent testing between 1995 and 1997 and were subsequently diagnosed with Behcet disease did not stay in the hospital for treatment?,challenging,"SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'Behcet' AND T1.SEX = 'M' AND STRFTIME('%Y', T2.`Examination Date`) BETWEEN '1995' AND '1997' AND T1.Admission = '-'",SELECT COUNT(*) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.SEX = 'M' AND Examination.`Examination Date` BETWEEN '1995-01-01' AND '1997-12-31' AND Examination.Diagnosis = 'Behcet' AND Examination.Admission = '-',SELECT COUNT(*) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.SEX = 'M' AND Examination.`Examination Date` BETWEEN '1995-01-01' AND '1997-12-31' AND Examination.Diagnosis = 'Behcet' AND Examination.Admission = '-',SELECT COUNT(*) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.SEX = 'M' AND Examination.`Examination Date` BETWEEN '1995-01-01' AND '1997-12-31' AND Examination.Diagnosis = 'Behcet' AND Examination.Admission = '-',0,0,0
What is the element with the atom ID of TR004_7 in molecule that is not carcinogenic?,challenging,SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR004_7' AND T2.label = '-',SELECT element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom_id = 'TR004_7' AND molecule.label = '-',SELECT element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom_id = 'TR004_7' AND molecule.label = '-',SELECT element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.atom_id = 'TR004_7' AND molecule.label = '-',1,1,1
Which bond type accounted for the majority of the bonds found in molecule TR010 and state whether or not this molecule is carcinogenic?,challenging,"SELECT T.bond_type FROM ( SELECT T1.bond_type, COUNT(T1.molecule_id) FROM bond AS T1  WHERE T1.molecule_id = 'TR010' GROUP BY T1.bond_type ORDER BY COUNT(T1.molecule_id) DESC LIMIT 1 ) AS T",[Your SQL Query Here],Your SQL query here...,[Your SQL query here],0,0,0
"Among all superheroes in Marvel Comics, identify the percentage of 'good' superheroes.",challenging,SELECT CAST(COUNT(CASE WHEN T3.alignment = 'Good' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN alignment AS T3 ON T1.alignment_id = T3.id WHERE T2.publisher_name = 'Marvel Comics',SELECT (SELECT CAST(COUNT(*) AS REAL) / (SELECT COUNT(*) FROM superhero WHERE publisher_id = 1) * 100 FROM superhero WHERE alignment_id = 1 AND publisher_id = 1) AS percentage_of_good_superheroes,"SELECT ROUND( ( SELECT COUNT(*) FROM ( SELECT superhero.id FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics' AND alignment.alignment = 'Good' ) ) / ( SELECT COUNT(*) FROM ( SELECT superhero.id FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics' ) ) * 100, 2 ) AS percentage_of_good_superheroes","SELECT MULTIPLY(DIVIDE(SUM(alignment.alignment = 'Good'), COUNT(publisher.publisher_name = 'Marvel Comics')), 100.0) as percentage FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'Marvel Comics'",0,0,0
How often does account number 3 request an account statement to be released? What was the aim of debiting 3539 in total?,challenging,"SELECT T1.frequency, T2.k_symbol FROM account AS T1 INNER JOIN (SELECT account_id, k_symbol, SUM(amount) AS total_amount FROM `order` GROUP BY account_id, k_symbol) AS T2 ON T1.account_id = T2.account_id WHERE T1.account_id = 3 AND T2.total_amount = 3539","SELECT COUNT(*), k_symbol FROM order WHERE account_id = 3 GROUP BY k_symbol","SELECT COUNT(*), k_symbol FROM order WHERE account_id = 3 GROUP BY k_symbol ORDER BY COUNT(*) DESC","SELECT COUNT(k_symbol), SUM(amount) FROM trans WHERE account_id = 3 AND k_symbol = 'VYBER'",0,0,0
Which element is the least numerous in non-carcinogenic molecules?,challenging,"SELECT T.element FROM (SELECT T1.element, COUNT(DISTINCT T1.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '-' GROUP BY T1.element ORDER BY COUNT(DISTINCT T1.molecule_id) ASC LIMIT 1) t","SELECT element, COUNT(*) as count FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE molecule.label = '-' GROUP BY element ORDER BY count LIMIT 1","SELECT element, COUNT(*) as count FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE molecule.label = '-' GROUP BY element ORDER BY count LIMIT 1","SELECT element, MIN(count_element) as least_numerous FROM ( SELECT atom.element, COUNT(atom.element) as count_element FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE molecule.label = '-' GROUP BY atom.element )",0,0,0
"In Scotland Premier League, which away team won the most during the 2010 season?",challenging,SELECT teamInfo.team_long_name FROM League AS leagueData INNER JOIN Match AS matchData ON leagueData.id = matchData.league_id INNER JOIN Team AS teamInfo ON matchData.away_team_api_id = teamInfo.team_api_id WHERE leagueData.name = 'Scotland Premier League' AND matchData.season = '2009/2010' AND matchData.away_team_goal - matchData.home_team_goal > 0 GROUP BY matchData.away_team_api_id ORDER BY COUNT(*) DESC LIMIT 1,SELECT Team.team_long_name FROM Match JOIN Team ON Match.away_team_api_id = Team.team_api_id JOIN League ON Match.league_id = League.id WHERE League.name = 'Scotland Premier League' AND Match.season = '2009/2010' GROUP BY Team.team_long_name ORDER BY COUNT(CASE WHEN Match.away_team_goal > Match.home_team_goal THEN 1 END) DESC LIMIT 1,SELECT Team.team_long_name FROM Match JOIN Team ON Match.away_team_api_id = Team.team_api_id JOIN League ON Match.league_id = League.id WHERE League.name = 'Scotland Premier League' AND Match.season = '2009/2010' GROUP BY Team.team_long_name ORDER BY COUNT(CASE WHEN Match.away_team_goal > Match.home_team_goal THEN 1 END) DESC LIMIT 1,SELECT Team.team_long_name FROM Match JOIN Team ON Match.away_team_api_id = Team.team_api_id JOIN League ON Match.league_id = League.id WHERE League.name = 'Scotland Premier League' AND Match.season = '2009/2010' GROUP BY Team.team_long_name ORDER BY COUNT(CASE WHEN Match.away_team_goal > Match.home_team_goal THEN 1 END) DESC LIMIT 1,0,0,0
List the superheroes from Marvel Comics who have the super power of 'Super Strength'.,challenging,SELECT superhero_name FROM superhero AS T1 WHERE EXISTS (SELECT 1 FROM hero_power AS T2 INNER JOIN superpower AS T3 ON T2.power_id = T3.id WHERE T3.power_name = 'Super Strength' AND T1.id = T2.hero_id)AND EXISTS (SELECT 1 FROM publisher AS T4 WHERE T4.publisher_name = 'Marvel Comics' AND T1.publisher_id = T4.id),SELECT superhero.superhero_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE publisher.publisher_name = 'Marvel Comics' AND superpower.power_name = 'Super Strength',SELECT superhero.superhero_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE publisher.publisher_name = 'Marvel Comics' AND superpower.power_name = 'Super Strength',SELECT superhero.superhero_name FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id JOIN hero_power ON superhero.id = hero_power.hero_id JOIN superpower ON hero_power.power_id = superpower.id WHERE publisher.publisher_name = 'Marvel Comics' AND superpower.power_name = 'Super Strength',1,1,1
Please list the patient's ID if he or she has an abnormal level of red blood cell and is followed at the outpatient clinic.,challenging,SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE (T2.RBC <= 3.5 OR T2.RBC >= 6) AND T1.Admission = '-',SELECT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE (Examination.RBC <= 3.5 OR Examination.RBC >= 6.0) AND Patient.Admission = '-',SELECT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE (Examination.RBC <= 3.5 OR Examination.RBC >= 6.0) AND Patient.Admission = '-',SELECT Patient.ID FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE (Examination.RBC <= 3.5 OR Examination.RBC >= 6.0) AND Patient.Admission = '-',0,0,0
"For the teams with normal build-up play dribbling class in 2014, List the names of the teams with less than average chance creation passing, in descending order of chance creation passing.",challenging,"SELECT t3.team_long_name FROM Team AS t3 INNER JOIN Team_Attributes AS t4 ON t3.team_api_id = t4.team_api_id WHERE t4.buildUpPlayDribblingClass = 'Normal' AND t4.chanceCreationPassing < ( SELECT CAST(SUM(t2.chanceCreationPassing) AS REAL) / COUNT(t1.id) FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t2.buildUpPlayDribblingClass = 'Normal' AND SUBSTR(t2.`date`, 1, 4) = '2014') ORDER BY t4.chanceCreationPassing DESC","SELECT team_long_name, chanceCreationPassing FROM Team JOIN ( SELECT team_api_id, chanceCreationPassing FROM Team_Attributes WHERE buildUpPlayDribblingClass = 'Normal' AND date >= '2014-01-01 00:00:00' AND date <= '2014-12-31 00:00:00' HAVING chanceCreationPassing < (SELECT AVG(chanceCreationPassing) FROM Team_Attributes) ORDER BY chanceCreationPassing DESC ) AS subquery ON Team.team_api_id = subquery.team_api_id","SELECT team_long_name, chanceCreationPassing FROM Team JOIN ( SELECT team_api_id, chanceCreationPassing FROM Team_Attributes WHERE buildUpPlayDribblingClass = 'Normal' AND date >= '2014-01-01 00:00:00' AND date <= '2014-12-31 00:00:00' AND chanceCreationPassing < (SELECT AVG(chanceCreationPassing) FROM Team_Attributes) ) AS subquery ON Team.team_api_id = subquery.team_api_id ORDER BY chanceCreationPassing DESC","SELECT team_long_name, chanceCreationPassing FROM Team JOIN ( SELECT team_api_id, chanceCreationPassing FROM Team_Attributes WHERE buildUpPlayDribblingClass = 'Normal' AND date >= '2014-01-01 00:00:00' AND date <= '2014-12-31 00:00:00' AND chanceCreationPassing < (SELECT AVG(chanceCreationPassing) FROM Team_Attributes) ORDER BY chanceCreationPassing DESC ) AS subquery ON Team.team_api_id = subquery.team_api_id",0,0,0
What is the percentage of carcinogenic molecules in triple type bonds?,challenging,SELECT CAST(COUNT(DISTINCT CASE WHEN T2.label = '+' THEN T2.molecule_id ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T2.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type = '#',"SELECT DIVIDE(SUM(bond_type = '#') * 100, COUNT(bond_id)) as percent FROM bond JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = '+'","SELECT DIVIDE(SUM(CASE WHEN bond_type = '#' THEN 1 ELSE 0 END) * 100.0, COUNT(bond_id)) AS percent FROM bond JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = '+'","SELECT DIVIDE( (SELECT COUNT(bond.bond_type) FROM bond JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_type = '#' AND molecule.label = '+') * 100, (SELECT COUNT(bond.bond_id) FROM bond JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = '+') ) as percent",0,0,0
"What number of patients with a degree of thrombosis level 2 and ANA pattern of only S, have a level of anti-Cardiolip in antibody (IgM) 20% higher than average?",challenging,SELECT COUNT(*) FROM Examination WHERE Thrombosis = 2 AND `ANA Pattern` = 'S' AND `aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination WHERE Thrombosis = 2 AND `ANA Pattern` = 'S'),SELECT COUNT(*) FROM Examination WHERE Thrombosis = 2 AND ANA_Pattern = 'S' AND aCL_IgM > (SELECT AVG(aCL_IgM)*1.2 FROM Examination),SELECT COUNT(*) FROM Examination WHERE Thrombosis = 2 AND ANA_Pattern = 'S' AND aCL_IgM > (SELECT AVG(aCL_IgM)*1.2 FROM Examination),SELECT COUNT(*) FROM Examination WHERE Thrombosis = 2 AND ANA_Pattern = 'S' AND aCL_IgM > (SELECT AVG(aCL_IgM)*1.2 FROM Examination),0,0,0
Calculate the percentage of carcinogenic molecules with triple bonded Hidrogen atoms.,challenging,SELECT CAST(SUM(CASE WHEN T1.label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T1.molecule_id = T3.molecule_id WHERE T3.bond_type = '#' AND T2.element = 'h',SELECT ( SELECT COUNT(*) FROM ( SELECT DISTINCT molecule.molecule_id FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.element = 'h' AND bond.bond_type = '#' AND molecule.label = '+' ) ) / ( SELECT COUNT(*) FROM ( SELECT DISTINCT molecule.molecule_id FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE atom.element = 'h' ) ) * 100.0 AS percentage,SELECT ( SELECT COUNT(*) FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE molecule.label = '+' AND atom.element = 'h' AND bond.bond_type = '#' ) / ( SELECT COUNT(DISTINCT molecule_id) FROM atom WHERE atom.element = 'h' ) * 100.0 AS percentage,SELECT ( (SELECT COUNT(*) FROM ( SELECT DISTINCT molecule.molecule_id FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.element = 'h' AND bond.bond_type = '#' AND molecule.label = '+' ) ) / (SELECT COUNT(*) FROM ( SELECT DISTINCT molecule_id FROM atom WHERE atom.element = 'h' ) ) * 100.0 ) AS percentage_of_carcinogenic_molecules_with_triple_bonded_hydrogen,0,0,0
"Which of these artists have designed a card in the set Coldsnap, Jeremy Jarvis, Aaron Miller or Chippy?",challenging,SELECT T1.artist FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE (T2.name = 'Coldsnap' AND T1.artist = 'Chippy') OR (T2.name = 'Coldsnap' AND T1.artist = 'Aaron Miller') OR (T2.name = 'Coldsnap' AND T1.artist = 'Jeremy Jarvis') GROUP BY T1.artist,"SELECT DISTINCT artist FROM cards WHERE setCode = 'Coldsnap' AND artist IN ('Jeremy Jarvis', 'Aaron Miller','Chippy')","SELECT DISTINCT artist FROM cards WHERE setCode = 'Coldsnap' AND artist IN ('Jeremy Jarvis', 'Aaron Miller','Chippy')",YOUR SQL QUERY HERE,0,0,0
List the element and bond type included in the molecule with molecule ID of TR002.,challenging,"SELECT DISTINCT T1.element, T2.bond_type FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR002'",[Your SQL Query Here],Your SQL query here,<Your SQL Query Here>,0,0,0
What is the anti Cardiolipin antibody concentration of the female patient with the highest uric acid level in the normal range?,challenging,"SELECT T3.`aCL IgG`, T3.`aCL IgM`, T3.`aCL IgA` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T3.ID = T2.ID WHERE T1.SEX = 'F' AND T2.UA > 6.5 ORDER BY T2.UA DESC LIMIT 1","SELECT MAX(UA), aCL_IgG, aCL_IgM, aCL_IgA FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.SEX = 'F' AND Examination.UA <= 6.50","SELECT MAX(UA), aCL_IgG, aCL_IgM, aCL_IgA FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.SEX = 'F' AND Examination.UA <= 6.50","SELECT MAX(UA), aCL_IgG, aCL_IgM, aCL_IgA FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.SEX = 'F'",0,0,0
"In superheroes with height between 150 to 180, what is the percentage of heroes published by Marvel Comics?",challenging,SELECT CAST(COUNT(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.height_cm BETWEEN 150 AND 180,SELECT (SELECT COUNT(*) FROM superhero WHERE height_cm BETWEEN 150 AND 180 AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) * 100.0 / (SELECT COUNT(*) FROM superhero) AS percentage,SELECT (SELECT COUNT(*) FROM superhero WHERE height_cm BETWEEN 150 AND 180 AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) * 100.0 / (SELECT COUNT(*) FROM superhero) AS percentage,SELECT (SELECT COUNT(*) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE height_cm BETWEEN 150 AND 180 AND publisher.publisher_name = 'Marvel Comics') * 100.0 / (SELECT COUNT(*) FROM superhero) AS percentage_of_marvel_superheroes,0,0,0
"Among posts by Harvey Motulsky and Noah Snyder, which one has higher popularity?",challenging,SELECT T1.DisplayName FROM users AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.UserId INNER JOIN posts AS T3 ON T2.PostId = T3.Id WHERE T1.DisplayName = 'Harvey Motulsky' OR T1.DisplayName = 'Noah Snyder' GROUP BY T1.DisplayName ORDER BY SUM(T3.ViewCount) DESC LIMIT 1,"SELECT posts.Title, posts.ViewCount FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Harvey Motulsky' OR users.DisplayName = 'Noah Snyder' GROUP BY posts.Id ORDER BY posts.ViewCount DESC LIMIT 1","SELECT posts.Title, posts.ViewCount FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Harvey Motulsky' OR users.DisplayName = 'Noah Snyder' ORDER BY posts.ViewCount DESC LIMIT 1","SELECT posts.Title, posts.ViewCount FROM posts JOIN users ON posts.OwnerUserId = users.Id WHERE users.DisplayName = 'Harvey Motulsky' OR users.DisplayName = 'Noah Snyder' ORDER BY posts.ViewCount DESC LIMIT 1",0,0,0
What are the toxicology elements associated with bond ID TR000_1_2?,challenging,SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR000_1_2',SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_id = 'TR000_1_2',SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_id = 'TR000_1_2',SELECT atom.element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_id = 'TR000_1_2',1,1,1
"For the customer who paid 634.8 in 2012/8/25, what was the consumption decrease rate from Year 2012 to 2013?",challenging,"SELECT CAST(SUM(IIF(SUBSTR(Date, 1, 4) = '2012', Consumption, 0)) - SUM(IIF(SUBSTR(Date, 1, 4) = '2013', Consumption, 0)) AS FLOAT) / SUM(IIF(SUBSTR(Date, 1, 4) = '2012', Consumption, 0)) FROM yearmonth WHERE CustomerID = ( SELECT T1.CustomerID FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-25' AND T1.Price = 634.8 )","SELECT (yearmonth.Consumption - yearmonth2.Consumption) / yearmonth.Consumption as decrease_rate FROM yearmonth JOIN customers ON yearmonth.CustomerID = customers.CustomerID JOIN (SELECT CustomerID, Consumption FROM yearmonth WHERE Date LIKE '2012%') as yearmonth2 ON yearmonth.CustomerID = yearmonth2.CustomerID WHERE yearmonth.Date LIKE '2013%' AND customers.Currency = 'EUR'","SELECT (yearmonth.Consumption - yearmonth2.Consumption) / yearmonth.Consumption as DecreaseRate FROM yearmonth JOIN customers ON yearmonth.CustomerID = customers.CustomerID JOIN (SELECT CustomerID, Consumption FROM yearmonth WHERE Date LIKE '2012%') as yearmonth2 ON yearmonth.CustomerID = yearmonth2.CustomerID WHERE yearmonth.Date LIKE '2013%' AND customers.Currency = 'EUR' AND customers.CustomerID = (SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-25' AND Price = 634.8)","SELECT (yearmonth_2012.Consumption - yearmonth_2013.Consumption) / yearmonth_2012.Consumption AS decrease_rate FROM ( SELECT ym.CustomerID, ym.Consumption as Consumption_2012 FROM yearmonth ym JOIN customers c ON ym.CustomerID = c.CustomerID WHERE ym.Date LIKE '2012%' ) AS yearmonth_2012 JOIN ( SELECT ym.CustomerID, ym.Consumption as Consumption_2013 FROM yearmonth ym JOIN customers c ON ym.CustomerID = c.CustomerID WHERE ym.Date LIKE '2013%' ) AS yearmonth_2013 ON yearmonth_2012.CustomerID = yearmonth_2013.CustomerID JOIN ( SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-25' AND Price = 634.8 ) AS transaction ON transaction.CustomerID = yearmonth_2012.CustomerID",0,0,0
"What is the difference of the average ball control score between Abdou Diallo and Aaron Appindangoye
?",challenging,SELECT CAST(SUM(CASE WHEN t1.player_name = 'Abdou Diallo' THEN t2.ball_control ELSE 0 END) AS REAL) / COUNT(CASE WHEN t1.player_name = 'Abdou Diallo' THEN t2.id ELSE NULL END) - CAST(SUM(CASE WHEN t1.player_name = 'Aaron Appindangoye' THEN t2.ball_control ELSE 0 END) AS REAL) / COUNT(CASE WHEN t1.player_name = 'Aaron Appindangoye' THEN t2.id ELSE NULL END) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id,SELECT ABS(AVG(pa1.ball_control) - AVG(pa2.ball_control)) as difference FROM Player_Attributes pa1 JOIN Player p1 ON pa1.player_api_id = p1.player_api_id JOIN Player_Attributes pa2 ON pa2.player_api_id = p1.player_api_id JOIN Player p2 ON pa2.player_api_id = p2.player_api_id WHERE p1.player_name = 'Abdou Diallo' AND p2.player_name = 'Aaron Appindangoye',SELECT ABS(AVG(pa1.ball_control) - AVG(pa2.ball_control)) as difference FROM Player_Attributes pa1 JOIN Player p1 ON pa1.player_api_id = p1.player_api_id JOIN Player_Attributes pa2 ON pa2.player_api_id = p1.player_api_id JOIN Player p2 ON pa2.player_api_id = p2.player_api_id WHERE p1.player_name = 'Abdou Diallo' AND p2.player_name = 'Aaron Appindangoye',[Your SQL Query here],0,0,0
"List the eyes, hair and skin colour of all female superheroes published by Dark Horse Comics.",challenging,"SELECT T1.eye_colour_id, T1.hair_colour_id, T1.skin_colour_id FROM superhero AS T1 INNER JOIN publisher AS T2 ON T2.id = T1.publisher_id INNER JOIN gender AS T3 ON T3.id = T1.gender_id WHERE T2.publisher_name = 'Dark Horse Comics' AND T3.gender = 'Female'","SELECT c1.colour AS eyes, c2.colour AS hair, c3.colour AS skin_colour FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN colour AS c1 ON superhero.eye_colour_id = c1.id JOIN colour AS c2 ON superhero.hair_colour_id = c2.id JOIN colour AS c3 ON superhero.skin_colour_id = c3.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE gender.gender = 'Female' AND publisher.publisher_name = 'Dark Horse Comics'","SELECT c1.colour AS eyes, c2.colour AS hair, c3.colour AS skin_colour FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN colour AS c1 ON superhero.eye_colour_id = c1.id JOIN colour AS c2 ON superhero.hair_colour_id = c2.id JOIN colour AS c3 ON superhero.skin_colour_id = c3.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE gender.gender = 'Female' AND publisher.publisher_name = 'Dark Horse Comics'","SELECT c1.colour AS eyes, c2.colour AS hair, c3.colour AS skin FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN publisher ON superhero.publisher_id = publisher.id JOIN colour AS c1 ON superhero.eye_colour_id = c1.id JOIN colour AS c2 ON superhero.hair_colour_id = c2.id JOIN colour AS c3 ON superhero.skin_colour_id = c3.id WHERE gender.gender = 'Female' AND publisher.publisher_name = 'Dark Horse Comics'",0,0,0
Write the full names of students who received funds on the date of 9/9/2019 and include the amount received.,challenging,"SELECT DISTINCT T3.first_name, T3.last_name, T4.amount FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T3.member_id = T2.link_to_member INNER JOIN income AS T4 ON T4.link_to_member = T3.member_id WHERE T4.date_received = '2019-09-09'","SELECT member.first_name, member.last_name, income.amount FROM member JOIN income ON member.member_id = income.link_to_member WHERE income.date_received = '2019-09-09'","SELECT first_name, last_name, amount FROM member JOIN income ON member.member_id = income.link_to_member WHERE date_received = '2019-09-09'","SELECT member.first_name, member.last_name, income.amount FROM member JOIN income ON member.member_id = income.link_to_member WHERE income.date_received = '2019-09-09'",1,1,1
"Among the bad superheroes, what is the percentage of female superheroes?",challenging,SELECT CAST(COUNT(CASE WHEN T3.gender = 'Female' THEN T1.id ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN alignment AS T2 ON T1.alignment_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.alignment = 'Bad',SELECT (SELECT CAST(COUNT(*) AS FLOAT) / (SELECT COUNT(*) FROM superhero WHERE alignment_id = 2) * 100 FROM superhero WHERE gender_id = 2 AND alignment_id = 2) AS percentage_female_bad_superheroes,SELECT CAST(COUNT(CASE WHEN gender.id = 2 THEN 1 END) AS REAL) / CAST(COUNT(superhero.id) AS REAL) * 100 AS percentage FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id JOIN gender ON superhero.gender_id = gender.id WHERE alignment.id = 2,"SELECT MULTIPLY(DIVIDE(SUM(gender.id = 2 WHERE superhero.id IN (SELECT superhero.id FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.id = 2)), COUNT(superhero.id IN (SELECT superhero.id FROM superhero JOIN alignment ON superhero.alignment_id = alignment.id WHERE alignment.id = 2))), 100.0) AS percentage_female_bad_superheroes",1,1,0
What is the ratio of male to female patients among all those with abnormal uric acid counts?,challenging,SELECT CAST(SUM(CASE WHEN T2.UA <= 8.0 AND T1.SEX = 'M' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T2.UA <= 6.5 AND T1.SEX = 'F' THEN 1 ELSE 0 END) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID,SELECT (SELECT COUNT(*) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.SEX = 'M' AND Examination.UA <= '8.0') / (SELECT COUNT(*) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.SEX = 'F' AND Examination.UA <= '6.5') AS Ratio,SELECT (SELECT COUNT(*) FROM Patient WHERE SEX = 'M' AND ID IN (SELECT ID FROM Laboratory WHERE UA > '8.0')) / (SELECT COUNT(*) FROM Patient WHERE SEX = 'F' AND ID IN (SELECT ID FROM Laboratory WHERE UA > '6.5')) AS Ratio,"SELECT SEX, COUNT(*), SUM(CASE WHEN UA <= '8.0' AND SEX = 'M' THEN 1 ELSE 0 END) / SUM(CASE WHEN UA <= '6.5' AND SEX = 'F' THEN 1 ELSE 0 END) as ratio FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE UA <= '8.0' AND SEX = 'M' OR UA <= '6.5' AND SEX = 'F' GROUP BY SEX",0,0,0
Which set is not available outside of the United States and has foil cards with Japanese writing on them? Please include the set ID in your response.,challenging,"SELECT T1.name, T1.id FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Japanese' AND T1.isFoilOnly = 1 AND T1.isForeignOnly = 0",SELECT sets.id FROM sets WHERE sets.isForeignOnly = 1 AND sets.isFoilOnly = 1 AND sets.code IN ( SELECT set_translations.setCode FROM set_translations WHERE set_translations.language = 'Japanese' ),SELECT sets.id FROM sets JOIN cards ON sets.code = cards.setCode WHERE sets.isForeignOnly = 1 AND sets.isFoilOnly = 1 AND cards.language = 'Japanese',SELECT sets.id FROM sets INNER JOIN cards ON sets.code = cards.setCode WHERE cards.isForeignOnly = 1 AND cards.isFoil = 1 AND cards.language = 'Japanese',0,0,0
"List the football team that has a build up play speed of 31, build up plan dribbling of 53, and build up play passing of 32. Only indicate the short name of the team.",challenging,SELECT DISTINCT t1.team_short_name FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t2.buildUpPlaySpeed = 31 AND t2.buildUpPlayDribbling = 53 AND t2.buildUpPlayPassing = 32,SELECT team_short_name FROM Team JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE buildUpPlaySpeed = 31 AND buildUpPlayDribbling = 53 AND buildUpPlayPassing = 32,SELECT team_short_name FROM Team JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE buildUpPlaySpeed = 31 AND buildUpPlayDribbling = 53 AND buildUpPlayPassing = 32,SELECT team_short_name FROM Team JOIN Team_Attributes ON Team.team_api_id = Team_Attributes.team_api_id WHERE Team_Attributes.buildUpPlaySpeed = 31 AND Team_Attributes.buildUpPlayDribbling = 53 AND Team_Attributes.buildUpPlayPassing = 32,1,1,1
Which members who were approved from 1/10/2019 to 11/19/2019? Please identify the member who attended the event and the link to their event.,challenging,"SELECT DISTINCT T1.link_to_member, T3.link_to_event FROM expense AS T1 INNER JOIN member AS T2 ON T1.link_to_member = T2.member_id INNER JOIN attendance AS T3 ON T2.member_id = T3.link_to_member WHERE date(SUBSTR(T1.expense_date, 1, 10)) BETWEEN '2019-01-10' AND '2019-11-19' AND T1.approved = 'true'","SELECT member.member_id, member.first_name, member.last_name, attendance.link_to_event FROM member JOIN expense ON member.member_id = expense.link_to_member JOIN attendance ON member.member_id = attendance.link_to_member WHERE expense.approved = 'true' AND expense.expense_date BETWEEN '2019-01-10' AND '2019-11-19'","SELECT member.member_id, member.first_name, member.last_name, attendance.link_to_event FROM member JOIN expense ON member.member_id = expense.link_to_member JOIN attendance ON member.member_id = attendance.link_to_member WHERE expense.approved = 'true' AND expense.expense_date BETWEEN '2019-01-10' AND '2019-11-19'","SELECT member.member_id, member.first_name, member.last_name, attendance.link_to_event FROM member JOIN expense ON member.member_id = expense.link_to_member JOIN attendance ON member.member_id = attendance.link_to_member WHERE expense.approved = 'true' AND expense.expense_date BETWEEN '2019-01-10' AND '2019-11-19'",0,0,0
"Among all superheroes created by George Lucas, identify the percentage of female superheroes.",challenging,SELECT CAST(COUNT(CASE WHEN T3.gender = 'Female' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.id) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN gender AS T3 ON T1.gender_id = T3.id WHERE T2.publisher_name = 'George Lucas',SELECT (SELECT (SELECT COUNT(*) FROM superhero JOIN gender ON superhero.gender_id = gender.id WHERE gender.gender = 'Female' AND publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'George Lucas')) * 100.0 / (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'George Lucas'))) AS female_percentage,"SELECT ROUND( ( SELECT COUNT(*) FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE gender.gender = 'Female' AND publisher.publisher_name = 'George Lucas' ) * 100.0 / ( SELECT COUNT(*) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'George Lucas' ), 2 ) AS percentage_of_female_superheroes",SELECT (SELECT COUNT(*) FROM superhero JOIN gender ON superhero.gender_id = gender.id JOIN publisher ON superhero.publisher_id = publisher.id WHERE gender.gender = 'Female' AND publisher.publisher_name = 'George Lucas') * 100.0 / (SELECT COUNT(*) FROM superhero JOIN publisher ON superhero.publisher_id = publisher.id WHERE publisher.publisher_name = 'George Lucas') AS percentage,1,0,1
What is the percentage of incredibly powerful cards in the set Coldsnap?,challenging,SELECT CAST(SUM(CASE WHEN T1.cardKingdomFoilId IS NOT NULL AND T1.cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN sets AS T2 ON T2.code = T1.setCode WHERE T2.name = 'Coldsnap',SELECT ( SELECT COUNT(*) FROM cards WHERE (cardKingdomFoilId IS NOT NULL AND cardKingdomId IS NOT NULL) AND setCode = 'Coldsnap' ) / ( SELECT COUNT(*) FROM cards WHERE setCode = 'Coldsnap' ) * 100 AS percentage,NULL,,0,0,0
"For patients with abnormal platelet level, state the number of patients with lower than normal range. How is it compare to the number of patients with higher than normal range?",challenging,SELECT SUM(CASE WHEN T2.PLT <= 100 THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.PLT >= 400 THEN 1 ELSE 0 END) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID,"SELECT SUM(CASE WHEN Laboratory.PLT < 100 THEN 1 ELSE 0 END) AS Lower_than_normal, SUM(CASE WHEN Laboratory.PLT > 400 THEN 1 ELSE 0 END) AS Higher_than_normal FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Examination.Thrombosis = 1","SELECT SUM(CASE WHEN Laboratory.PLT < 100 THEN 1 ELSE 0 END) AS Lower_than_normal, SUM(CASE WHEN Laboratory.PLT > 400 THEN 1 ELSE 0 END) AS Higher_than_normal FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Examination.Thrombosis = 1","SELECT SUBTRACT( (SELECT COUNT(*) FROM Examination JOIN Laboratory ON Examination.ID = Laboratory.ID JOIN Patient ON Examination.ID = Patient.ID WHERE Laboratory.PLT < 100), (SELECT COUNT(*) FROM Examination JOIN Laboratory ON Examination.ID = Laboratory.ID JOIN Patient ON Examination.ID = Patient.ID WHERE Laboratory.PLT > 400) ) AS Difference",0,0,0
What elements are in a double type bond?,challenging,SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id WHERE T2.bond_type = '=',SELECT element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = '=',SELECT element FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_type = '=',"SELECT DISTINCT a1.element, a2.element FROM atom a1 JOIN connected c ON a1.atom_id = c.atom_id JOIN atom a2 ON c.atom_id2 = a2.atom_id JOIN bond b ON c.bond_id = b.bond_id WHERE b.bond_type = '='",0,0,0
What is the element of toxicology for the atom with the ID of TR000_1?,challenging,SELECT T.element FROM atom AS T WHERE T.atom_id = 'TR000_1',SELECT element FROM atom WHERE atom_id = 'TR000_1',SELECT element FROM atom WHERE atom_id = 'TR000_1',SELECT element FROM atom WHERE atom_id = 'TR000_1',1,1,1
How many elements are contained in bond_id TR001_3_4?,challenging,SELECT COUNT(DISTINCT T1.element) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_3_4',SELECT COUNT(*) FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_id = 'TR001_3_4',"SELECT COUNT(*) FROM ( SELECT a1.element AS element1, a2.element AS element2 FROM bond JOIN connected ON bond.bond_id = connected.bond_id JOIN atom a1 ON connected.atom_id = a1.atom_id JOIN atom a2 ON connected.atom_id2 = a2.atom_id WHERE bond.bond_id = 'TR001_3_4' ) AS elements",SELECT COUNT(atom.element) FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE bond.bond_id = 'TR001_3_4',0,0,0
"For in-patient age 50 and above, what is their average anti-cardiolipin antibody (IgG) concentration?",challenging,"SELECT AVG(T2.`aCL IgG`) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) >= 50 AND T1.Admission = '+'",SELECT AVG(Examination.aCL_IgG) FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.Admission = '+' AND (year(current_timestamp) - year(Patient.Birthday)) >= 50,SELECT AVG(Examination.aCL_IgG) FROM Examination JOIN Patient ON Examination.ID = Patient.ID WHERE Patient.Admission = '+' AND (year(current_timestamp) - year(Patient.Birthday)) >= 50,SELECT AVG(Examination.aCL_IgG) FROM Patient JOIN Examination ON Patient.ID = Examination.ID WHERE Patient.Admission = '+' AND (year(current_timestamp) - year(Patient.Birthday)) >= 50,0,0,0
"What sex is the patient who in a medical examination was diagnosed with PSS and in a laboratory examination had a blood level of C-reactive protein de 2+, createnine 1 and LDH 123?",challenging,SELECT T1.SEX FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID INNER JOIN Laboratory AS T3 ON T3.ID = T2.ID WHERE T2.Diagnosis = 'PSS' AND T3.CRP = '2+' AND T3.CRE = 1.0 AND T3.LDH = 123,SELECT Patient.SEX FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Examination.Diagnosis = 'PSS' AND Laboratory.CRP > 2 AND Laboratory.CRE = 1 AND Laboratory.LDH = 123,SELECT Patient.SEX FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Examination.Diagnosis = 'PSS' AND Laboratory.CRP > 2 AND Laboratory.CRE = 1 AND Laboratory.LDH = 123,SELECT Patient.SEX FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Examination.Diagnosis = 'PSS' AND Laboratory.CRP = '2+' AND Laboratory.CRE = 1 AND Laboratory.LDH = 123,1,1,1
"For the client whose loan was approved first in 1993/7/5, what is the increase rate of his/her account balance from 1993/3/22 to 1998/12/27?",challenging,"SELECT CAST((SUM(IIF(T3.date = '1998-12-27', T3.balance, 0)) - SUM(IIF(T3.date = '1993-03-22', T3.balance, 0))) AS REAL) * 100 / SUM(IIF(T3.date = '1993-03-22', T3.balance, 0)) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN trans AS T3 ON T3.account_id = T2.account_id WHERE T1.date = '1993-07-05'","SELECT ((t2.balance - t1.balance) / t1.balance) * 100 as balance_increase_rate FROM ( SELECT balance FROM trans WHERE account_id = ( SELECT account_id FROM loan WHERE date = '1993-07-05' ) AND date = '1993-03-22' ) as t1, ( SELECT balance FROM trans WHERE account_id = ( SELECT account_id FROM loan WHERE date = '1993-07-05' ) AND date = '1998-12-27' ) as t2","SELECT ((t2.balance - t1.balance) / t1.balance) * 100 AS balance_increase_rate FROM ( SELECT balance FROM trans WHERE account_id = ( SELECT account_id FROM loan WHERE date = '1993-07-05' ) AND date = '1993-03-22' ) AS t1, ( SELECT balance FROM trans WHERE account_id = ( SELECT account_id FROM loan WHERE date = '1993-07-05' ) AND date = '1998-12-27' ) AS t2","SELECT ((b.balance - a.balance) / a.balance) * 100 as increase_rate FROM ( SELECT t.balance FROM trans t JOIN account a ON t.account_id = a.account_id JOIN client c ON a.account_id = c.client_id WHERE t.date = '1993-03-22' AND c.client_id = ( SELECT client_id FROM loan WHERE date = '1993-07-05' AND status = 'A' ) ) as a, ( SELECT t.balance FROM trans t JOIN account a ON t.account_id = a.account_id JOIN client c ON a.account_id = c.client_id WHERE t.date = '1998-12-27' AND c.client_id = ( SELECT client_id FROM loan WHERE date = '1993-07-05' AND status = 'A' ) ) as b",0,0,0
"From 2000 to 2005, what percentage of drivers who were born before 1985 and the lap numbers were over 50?",challenging,"SELECT CAST(SUM(IIF(STRFTIME('%Y', T3.dob) < '1985' AND T1.laps > 50, 1, 0)) AS REAL) * 100 / COUNT(*) FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN drivers AS T3 on T1.driverId = T3.driverId WHERE T2.year BETWEEN 2000 AND 2005",SELECT ( SELECT COUNT(*) FROM drivers WHERE dob < '1985-01-01' AND EXISTS ( SELECT 1 FROM results WHERE drivers.driverId = results.driverId AND laps > 50 ) ) / ( SELECT COUNT(*) FROM drivers WHERE dob BETWEEN '2000-01-01' AND '2005-12-31' ) * 100 AS percentage,SELECT ( SELECT COUNT(*) FROM drivers WHERE dob < '1985-01-01' AND EXISTS ( SELECT 1 FROM results WHERE drivers.driverId = results.driverId AND laps > 50 ) ) / ( SELECT COUNT(*) * 100.0 FROM drivers WHERE dob BETWEEN '2000-01-01' AND '2005-12-31' ) AS percentage,SELECT ( SELECT COUNT(*) FROM ( SELECT results.driverId FROM results JOIN drivers ON results.driverId = drivers.driverId WHERE EXTRACT(YEAR FROM drivers.dob) < 1985 AND results.laps > 50 ) AS born_before_1985 ) / ( SELECT COUNT(*) FROM ( SELECT drivers.driverId FROM drivers JOIN results ON results.driverId = drivers.driverId WHERE EXTRACT(YEAR FROM drivers.dob) BETWEEN 2000 AND 2005 ) AS drivers_between_2000_and_2005 ) * 100 AS percentage,0,0,0
How much higher in percentage is Ariel Borysiuk's overall rating than that of Paulin Puel?,challenging,SELECT (SUM(CASE WHEN t1.player_name = 'Ariel Borysiuk' THEN t2.overall_rating ELSE 0 END) * 1.0 - SUM(CASE WHEN t1.player_name = 'Paulin Puel' THEN t2.overall_rating ELSE 0 END)) * 100 / SUM(CASE WHEN t1.player_name = 'Paulin Puel' THEN t2.overall_rating ELSE 0 END) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id,[Your SQL Query Here],SELECT ( (SELECT overall_rating FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE player_name = 'Ariel Borysiuk' ) - (SELECT overall_rating FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE player_name = 'Paulin Puel' ) ) * 100.0 / (SELECT overall_rating FROM Player JOIN Player_Attributes ON Player.player_api_id = Player_Attributes.player_api_id WHERE player_name = 'Paulin Puel' ),YOUR SQL QUERY HERE,0,0,0
"For patient born between 1936-1956, how many male patients have creatinine phosphokinase beyond the normal range?",challenging,"SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.Birthday) BETWEEN '1936' AND '1956' AND T1.SEX = 'M' AND T2.CPK >= 250",SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Patient.Birthday BETWEEN '1936' AND '1956' AND Laboratory.CPK >= 250,SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Patient.Birthday BETWEEN '1936' AND '1956' AND Laboratory.CPK >= 250,SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Examination ON Patient.ID = Examination.ID JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.SEX = 'M' AND Patient.Birthday BETWEEN '1936' AND '1956' AND Laboratory.CPK >= 250,0,0,0
