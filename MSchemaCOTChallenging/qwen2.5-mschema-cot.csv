Question,hardness,Gold,Prediction_0.1,Prediction_0.5,Prediction_1.0,EX_0.1,EX_0.5,EX_1.0
"What is the difference in the annual average consumption of the customers with the least amount of consumption paid in CZK for 2013 between SME and LAM, LAM and KAM, and KAM and SME?",challenging,"SELECT CAST(SUM(IIF(T1.Segment = 'SME', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'LAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) , CAST(SUM(IIF(T1.Segment = 'LAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'KAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) , CAST(SUM(IIF(T1.Segment = 'KAM', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) - CAST(SUM(IIF(T1.Segment = 'SME', T2.Consumption, 0)) AS REAL) / COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Currency = 'CZK' AND T2.Consumption = ( SELECT MIN(Consumption) FROM yearmonth ) AND T2.Date BETWEEN 201301 AND 201312","SELECT (SELECT AVG(Consumption) FROM yearmonth WHERE CustomerID IN ( SELECT CustomerID FROM yearmonth WHERE Date BETWEEN '201301' AND '201312' AND Currency = 'CZK' ORDER BY Consumption ASC LIMIT 1 ) AND Date BETWEEN '201301' AND '201312' AND Segment = 'SME') - (SELECT AVG(Consumption) FROM yearmonth WHERE CustomerID IN ( SELECT CustomerID FROM yearmonth WHERE Date BETWEEN '201301' AND '201312' AND Currency = 'CZK' ORDER BY Consumption ASC LIMIT 1 ) AND Date BETWEEN '201301' AND '201312' AND Segment = 'LAM') AS diff_SME_LAM, (SELECT AVG(Consumption) FROM yearmonth WHERE CustomerID IN ( SELECT CustomerID FROM yearmonth WHERE Date BETWEEN '201301' AND '201312' AND Currency = 'CZK' ORDER BY Consumption ASC LIMIT 1 ) AND Date BETWEEN '201301' AND '201312' AND Segment = 'LAM') - (SELECT AVG(Consumption) FROM yearmonth WHERE CustomerID IN ( SELECT CustomerID FROM yearmonth WHERE Date BETWEEN '201301' AND '201312' AND Currency = 'CZK' ORDER BY Consumption ASC LIMIT 1 ) AND Date BETWEEN '201301' AND '201312' AND Segment = 'KAM') AS diff_LAM_KAM, (SELECT AVG(Consumption) FROM yearmonth WHERE CustomerID IN ( SELECT CustomerID FROM yearmonth WHERE Date BETWEEN '201301' AND '201312' AND Currency = 'CZK' ORDER BY Consumption ASC LIMIT 1 ) AND Date BETWEEN '201301' AND '201312' AND Segment = 'KAM') - (SELECT AVG(Consumption) FROM yearmonth WHERE CustomerID IN ( SELECT CustomerID FROM yearmonth WHERE Date BETWEEN '201301' AND '201312' AND Currency = 'CZK' ORDER BY Consumption ASC LIMIT 1 ) AND Date BETWEEN '201301' AND '201312' AND Segment = 'SME') AS diff_KAM_SME",NULL,NULL,0,0,0
How often does account number 3 request an account statement to be released? What was the aim of debiting 3539 in total?,challenging,"SELECT T1.frequency, T2.k_symbol FROM account AS T1 INNER JOIN (SELECT account_id, k_symbol, SUM(amount) AS total_amount FROM `order` GROUP BY account_id, k_symbol) AS T2 ON T1.account_id = T2.account_id WHERE T1.account_id = 3 AND T2.total_amount = 3539","SELECT COUNT(*) AS statement_requests, SUM(CASE WHEN k_symbol = 'UVER' THEN amount ELSE 0 END) AS total_debit_for_loan FROM trans WHERE account_id = 3 AND k_symbol = 'UVER'",NULL,NULL,0,0,0
"For patient born between 1936-1956, how many male patients have creatinine phosphokinase beyond the normal range?",challenging,"SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE STRFTIME('%Y', T1.Birthday) BETWEEN '1936' AND '1956' AND T1.SEX = 'M' AND T2.CPK >= 250","SELECT COUNT(DISTINCT Patient.ID) FROM Patient JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE strftime('%Y', Patient.Birthday) BETWEEN '1936' AND '1956' AND Patient.SEX = 'M' AND Laboratory.CPK >= 250",NULL,NULL,1,0,0
"What was the final score for the match on September 24, 2008, in the Belgian Jupiler League between the home team and the away team?",challenging,"SELECT t2.home_team_goal, t2.away_team_goal FROM League AS t1 INNER JOIN Match AS t2 ON t1.id = t2.league_id WHERE t1.name = 'Belgium Jupiler League' AND t2.`date` LIKE '2008-09-24%'","SELECT T1.home_team_goal, T1.away_team_goal FROM Match AS T1 JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.date LIKE '2008-09-24%' AND T2.name = 'Belgium Jupiler League'",NULL,NULL,1,0,0
"Paul di Resta was in the No. 853 race, what percent faster did he finish in the 853rd race than the next race for the fastest lap speed?",challenging,"SELECT (SUM(IIF(T2.raceId = 853, T2.fastestLapSpeed, 0)) - SUM(IIF(T2.raceId = 854, T2.fastestLapSpeed, 0))) * 100 / SUM(IIF(T2.raceId = 853, T2.fastestLapSpeed, 0)) FROM drivers AS T1 INNER JOIN results AS T2 ON T2.driverId = T1.driverId WHERE T1.forename = 'Paul' AND T1.surname = 'di Resta'",SELECT (CAST((SELECT fastestLapSpeed FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta') AND raceId = 853) AS REAL) - CAST((SELECT fastestLapSpeed FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta') AND raceId = 854) AS REAL)) * 100 / (SELECT fastestLapSpeed FROM results WHERE driverId = (SELECT driverId FROM drivers WHERE forename = 'Paul' AND surname = 'di Resta') AND raceId = 853) AS percentage,NULL,NULL,1,0,0
"List all the elements of the toxicology of the molecule ""TR004"".",challenging,SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR004',SELECT DISTINCT element FROM atom WHERE molecule_id = 'TR004',NULL,NULL,1,0,0
List down top 3 German drivers who has the shortest average pit stop duration and were born between 1980-1985.,challenging,"SELECT T2.forename, T2.surname FROM pitStops AS T1 INNER JOIN drivers AS T2 on T1.driverId = T2.driverId WHERE T2.nationality = 'German' AND STRFTIME('%Y', T2.dob) BETWEEN '1980' AND '1985' GROUP BY T2.forename, T2.surname ORDER BY AVG(T1.duration) LIMIT 3","SELECT d.forename, d.surname, AVG(ps.duration) AS avg_duration FROM drivers d JOIN pitStops ps ON d.driverId = ps.driverId WHERE d.nationality = 'German' AND d.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY d.driverId ORDER BY avg_duration ASC LIMIT 3",NULL,NULL,0,0,0
"Among the patients whose total bilirubin is over the normal range, how many of them have a peripheral pattern observed in the sheet of ANA examination?",challenging,SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.`T-BIL` >= 2 AND T3.`ANA Pattern` LIKE '%P%',SELECT COUNT(DISTINCT p.ID) FROM Patient p JOIN Examination e ON p.ID = e.ID JOIN Laboratory l ON p.ID = l.ID WHERE l.`T-BIL` >= 2.0 AND e.`ANA Pattern` LIKE '%P%',NULL,NULL,0,0,0
"Please list the account types that are not eligible for loans, and the average income of residents in the district where the account is located exceeds $8000 but is no more than $9000.",challenging,SELECT T3.type FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T2.account_id = T3.account_id WHERE T3.type != 'OWNER' AND T1.A11 BETWEEN 8000 AND 9000,"SELECT DISTINCT card.type, AVG(client.salary) AS avg_income FROM card JOIN disp ON card.disp_id = disp.disp_id JOIN account ON disp.account_id = account.account_id JOIN client ON disp.client_id = client.client_id JOIN district ON account.district_id = district.district_id WHERE card.type != 'OWNER' AND client.salary BETWEEN 8000 AND 9000 GROUP BY card.type",NULL,NULL,0,0,0
"What number of patients with a degree of thrombosis level 2 and ANA pattern of only S, have a level of anti-Cardiolip in antibody (IgM) 20% higher than average?",challenging,SELECT COUNT(*) FROM Examination WHERE Thrombosis = 2 AND `ANA Pattern` = 'S' AND `aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination WHERE Thrombosis = 2 AND `ANA Pattern` = 'S'),SELECT COUNT(DISTINCT P.ID) AS PatientCount FROM Patient P JOIN Examination E ON P.ID = E.ID JOIN Laboratory L ON P.ID = L.ID WHERE E.Thrombosis = 2 AND E.ANA = 'S' AND L.`aCL IgM` > (SELECT AVG(`aCL IgM`) FROM Laboratory WHERE `aCL IgM` IS NOT NULL) * 1.2,NULL,NULL,0,0,0
Calculate the total average cost that Elijah Allen spent in the events on September and October.,challenging,"SELECT AVG(T2.cost) FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member WHERE T1.last_name = 'Allen' AND T1.first_name = 'Elijah' AND (SUBSTR(T2.expense_date, 6, 2) = '09' OR SUBSTR(T2.expense_date, 6, 2) = '10')","SELECT AVG(expense.cost) AS average_cost FROM expense JOIN income ON expense.link_to_member = income.link_to_member JOIN member ON income.link_to_member = member.member_id WHERE member.first_name = 'Elijah' AND member.last_name = 'Allen' AND (strftime('%m', expense.expense_date) = '09' OR strftime('%m', expense.expense_date) = '10')",NULL,NULL,1,0,0
"List out the account numbers of female clients who are oldest and has lowest average salary, calculate the gap between this lowest average salary with the highest average salary?",challenging,"SELECT T1.account_id , ( SELECT MAX(A11) - MIN(A11) FROM district ) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T1.account_id = T3.account_id INNER JOIN client AS T4 ON T3.client_id = T4.client_id WHERE T2.district_id = ( SELECT district_id FROM client WHERE gender = 'F' ORDER BY birth_date ASC LIMIT 1 ) ORDER BY T2.A11 DESC LIMIT 1","SELECT account.account_id, AVG(account.date) AS avg_salary FROM account JOIN client ON account.client_id = client.client_id WHERE client.gender = 'F' GROUP BY account.account_id ORDER BY avg_salary ASC LIMIT 1 SELECT MAX(avg_salary) - MIN(avg_salary) AS salary_gap FROM ( SELECT AVG(account.date) AS avg_salary FROM account JOIN client ON account.client_id = client.client_id WHERE client.gender = 'F' GROUP BY account.account_id )",NULL,NULL,0,0,0
Which user added a bounty amount of 50 to the post title mentioning variance?,challenging,"SELECT T3.DisplayName, T1.Title FROM posts AS T1 INNER JOIN votes AS T2 ON T1.Id = T2.PostId INNER JOIN users AS T3 ON T3.Id = T2.UserId WHERE T2.BountyAmount = 50 AND T1.Title LIKE '%variance%'",SELECT u.DisplayName FROM users u JOIN votes v ON u.Id = v.UserId JOIN posts p ON v.PostId = p.Id WHERE v.BountyAmount = 50 AND p.Title LIKE '%variance%',NULL,NULL,0,0,0
List the element and bond type included in the molecule with molecule ID of TR002.,challenging,"SELECT DISTINCT T1.element, T2.bond_type FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR002'","SELECT atom.element, bond.bond_type FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id WHERE atom.molecule_id = 'TR002'",NULL,NULL,0,0,0
What is the ratio of Hydrogen elements in molecule ID TR006? List the ratio with its label.,challenging,"WITH SubQuery AS (SELECT DISTINCT T1.atom_id, T1.element, T1.molecule_id, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR006') SELECT CAST(COUNT(CASE WHEN element = 'h' THEN atom_id ELSE NULL END) AS REAL) / (CASE WHEN COUNT(atom_id) = 0 THEN NULL ELSE COUNT(atom_id) END) AS ratio, label FROM SubQuery GROUP BY label","SELECT CAST(SUM(CASE WHEN element = 'h' THEN 1 ELSE 0 END) AS REAL) / COUNT(element) AS ratio, label FROM atom JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule_id = 'TR006' GROUP BY label",NULL,NULL,0,0,0
What is the percentage of carcinogenic molecules in triple type bonds?,challenging,SELECT CAST(COUNT(DISTINCT CASE WHEN T2.label = '+' THEN T2.molecule_id ELSE NULL END) AS REAL) * 100 / COUNT(DISTINCT T2.molecule_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type = '#',SELECT CAST(SUM(CASE WHEN T3.bond_type = '#' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T3.bond_id) AS percent FROM molecule AS T1 INNER JOIN bond AS T3 ON T1.molecule_id = T3.molecule_id WHERE T1.label = '+',NULL,NULL,0,0,0
What percentage of cards with format commander and legal status do not have a content warning?,challenging,SELECT CAST(SUM(CASE WHEN T1.hasContentWarning = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.format = 'commander' AND T2.status = 'Legal',SELECT CAST(SUM(CASE WHEN hasContentWarning = 0 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM cards INNER JOIN legalities ON cards.uuid = legalities.uuid WHERE format = 'commander' AND status = 'legal',NULL,NULL,0,0,0
"List all the elements with double bond, consisted in molecule TR024.",challenging,SELECT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR024' AND T2.bond_type = '=',SELECT DISTINCT element FROM atom WHERE molecule_id = 'TR024' AND atom_id IN ( SELECT atom_id FROM connected WHERE bond_id IN ( SELECT bond_id FROM bond WHERE molecule_id = 'TR024' AND bond_type = '=' ) ),NULL,NULL,0,0,0
"What is the average time in seconds of champion for each year, before year 1975?",challenging,"WITH time_in_seconds AS ( SELECT T2.year, T2.raceId, T1.positionOrder, CASE WHEN T1.positionOrder = 1 THEN (CAST(SUBSTR(T1.time, 1, 1) AS REAL) * 3600) + (CAST(SUBSTR(T1.time, 3, 2) AS REAL) * 60) + CAST(SUBSTR(T1.time, 6,2) AS REAL )   + CAST(SUBSTR(T1.time, 9) AS REAL)/1000 ELSE 0 END AS time_seconds FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.time IS NOT NULL ), champion_time AS ( SELECT year, raceId, time_seconds FROM time_in_seconds WHERE positionOrder = 1 ) SELECT year, AVG(time_seconds) FROM champion_time WHERE year < 1975 GROUP BY year HAVING AVG(time_seconds) IS NOT NULL","SELECT AVG(T1.time) / 1000 AS average_time_seconds, T2.year FROM results AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T1.statusId = 1 AND T2.year < 1975 GROUP BY T2.year",NULL,NULL,0,0,0
What is the percentage difference of student badges given during 2010 and 2011?,challenging,"SELECT CAST(SUM(IIF(STRFTIME('%Y', Date) = '2010', 1, 0)) AS REAL) * 100 / COUNT(Id) - CAST(SUM(IIF(STRFTIME('%Y', Date) = '2011', 1, 0)) AS REAL) * 100 / COUNT(Id) FROM badges WHERE Name = 'Student'","SELECT (CAST(SUM(CASE WHEN STRFTIME('%Y', Date) = '2010' THEN 1 ELSE 0 END) AS REAL) / COUNT(*)) * 100 - (CAST(SUM(CASE WHEN STRFTIME('%Y', Date) = '2011' THEN 1 ELSE 0 END) AS REAL) / COUNT(*)) * 100 AS percentage_difference FROM badges WHERE Name = 'Student'",NULL,NULL,1,0,0
"Among the players born before the year 1986, how many of them would remain in his position and defense while the team attacked?",challenging,"SELECT COUNT(DISTINCT t1.player_name) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE STRFTIME('%Y',t1.birthday) < '1986' AND t2.defensive_work_rate = 'high'","SELECT COUNT(DISTINCT player_api_id) FROM Player WHERE strftime('%Y', birthday) < '1986' AND defensive_work_rate = 'high'",NULL,"SELECT COUNT(DISTINCT p.player_api_id) FROM Player p JOIN Player_Attributes pa ON p.player_api_id = pa.player_api_id WHERE strftime('%Y', p.birthday) < '1986' AND pa.defensive_work_rate = 'High'",0,0,0
"Among all the lap records set on various circuits, what is the time for the fastest one?",challenging,"SELECT time FROM lapTimes ORDER BY (CASE WHEN INSTR(time, ':') <> INSTR(SUBSTR(time, INSTR(time, ':') + 1), ':') + INSTR(time, ':') THEN CAST(SUBSTR(time, 1, INSTR(time, ':') - 1) AS REAL) * 3600 ELSE 0 END) + (CAST(SUBSTR(time, INSTR(time, ':') - 2 * (INSTR(time, ':') = INSTR(SUBSTR(time, INSTR(time, ':') + 1), ':') + INSTR(time, ':')), INSTR(time, ':') - 1) AS REAL) * 60) + (CAST(SUBSTR(time, INSTR(time, ':') + 1, INSTR(time, '.') - INSTR(time, ':') - 1) AS REAL)) + (CAST(SUBSTR(time, INSTR(time, '.') + 1) AS REAL) / 1000) ASC LIMIT 1",SELECT MIN(time) AS fastest_lap_time FROM lapTimes,NULL,NULL,0,0,0
"For the customer who paid 634.8 in 2012/8/25, what was the consumption decrease rate from Year 2012 to 2013?",challenging,"SELECT CAST(SUM(IIF(SUBSTR(Date, 1, 4) = '2012', Consumption, 0)) - SUM(IIF(SUBSTR(Date, 1, 4) = '2013', Consumption, 0)) AS FLOAT) / SUM(IIF(SUBSTR(Date, 1, 4) = '2012', Consumption, 0)) FROM yearmonth WHERE CustomerID = ( SELECT T1.CustomerID FROM transactions_1k AS T1 INNER JOIN gasstations AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Date = '2012-08-25' AND T1.Price = 634.8 )",SELECT (t2.Consumption - t3.Consumption) / t2.Consumption AS ConsumptionDecreaseRate FROM transactions_1k t1 JOIN yearmonth t2 ON t1.CustomerID = t2.CustomerID AND t1.Date = '2012-08-25' JOIN yearmonth t3 ON t1.CustomerID = t3.CustomerID AND t3.Date = '2013-08-25' WHERE t1.Amount = 634.8,NULL,NULL,0,0,0
"For laboratory examinations take in 1984, list all patients below 50 years old with normal platelet level.",challenging,"SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.PLT BETWEEN 100 AND 400 AND STRFTIME('%Y', T2.Date) - STRFTIME('%Y', T1.Birthday) < 50 AND STRFTIME('%Y', T2.Date) = '1984'","SELECT DISTINCT P.ID, P.SEX, P.Birthday, P.Description, P.First_Date, P.Admission, P.Diagnosis FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE strftime('%Y', L.Date) = '1984' AND (strftime('%Y', 'now') - strftime('%Y', P.Birthday)) < 50 AND L.PLT BETWEEN 100 AND 400",NULL,"SELECT DISTINCT P.* FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE strftime('%Y', L.Date) = '1984' AND strftime('%Y', 'now') - strftime('%Y', P.Birthday) < 50 AND L.PLT BETWEEN 100 AND 400",0,0,0
"Calculate the percentage of players who prefer left foot, who were born between 1987 and 1992.",challenging,"SELECT CAST(COUNT(CASE WHEN t2.preferred_foot = 'left' THEN t1.id ELSE NULL END) AS REAL) * 100 / COUNT(t1.id) percent FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id WHERE SUBSTR(t1.birthday, 1, 4) BETWEEN '1987' AND '1992'","SELECT CAST(SUM(CASE WHEN preferred_foot = 'left' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(player_fifa_api_id) AS percentage_left_foot_players FROM Player_Attributes WHERE strftime('%Y', birthday) BETWEEN '1987' AND '1992'",NULL,SELECT CAST(SUM(CASE WHEN preferred_foot = 'left' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(player_fifa_api_id) AS percentage_left_foot FROM Player_Attributes WHERE player_api_id IN ( SELECT player_api_id FROM Player WHERE birthday BETWEEN '1987-01-01' AND '1992-12-31' ),0,0,1
Name the atoms' elements that form bond TR000_2_3.,challenging,SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR000_2_3',SELECT T1.element FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR000_2_3',NULL,NULL,1,0,0
On average how many carcinogenic molecules are single bonded?,challenging,"SELECT AVG(single_bond_count) FROM (SELECT T3.molecule_id, COUNT(T1.bond_type) AS single_bond_count FROM bond AS T1  INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN molecule AS T3 ON T3.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' AND T3.label = '+' GROUP BY T3.molecule_id) AS subquery",SELECT AVG(CASE WHEN T3.bond_type = '-' THEN 1 ELSE 0 END) AS average_single_bonded_carcinogenic_molecules FROM atom AS T1 JOIN connected AS T2 ON T1.atom_id = T2.atom_id JOIN bond AS T3 ON T2.bond_id = T3.bond_id JOIN molecule AS T4 ON T1.molecule_id = T4.molecule_id WHERE T4.label = '+',NULL,NULL,0,0,0
"Which superhero has the same eyes, hair and skin colour? Indicate the publisher of the superhero.",challenging,"SELECT T1.superhero_name, T2.publisher_name FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id WHERE T1.eye_colour_id = T1.hair_colour_id AND T1.eye_colour_id = T1.skin_colour_id","SELECT s.superhero_name, p.publisher_name FROM superhero s JOIN colour c ON s.eye_colour_id = c.id AND s.hair_colour_id = c.id AND s.skin_colour_id = c.id JOIN publisher p ON s.publisher_id = p.id WHERE s.hair_colour_id = s.skin_colour_id AND s.hair_colour_id = s.eye_colour_id",NULL,NULL,1,0,0
"The oldest SJS patient's medical laboratory work was completed on what date, and what age was the patient when they initially arrived at the hospital?",challenging,"SELECT T1.Date, STRFTIME('%Y', T2.`First Date`) - STRFTIME('%Y', T2.Birthday),T2.Birthday FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T2.Diagnosis = 'SJS' AND T2.Birthday IS NOT NULL ORDER BY T2.Birthday ASC LIMIT 1","SELECT MAX(Laboratory.Date) AS Latest_Laboratory_Date, TIMESTAMPDIFF(YEAR, Patient.Birthday, Patient.First_Date) AS Age_At_Arrival FROM Examination JOIN Patient ON Examination.ID = Patient.ID JOIN Laboratory ON Patient.ID = Laboratory.ID WHERE Patient.Diagnosis = 'SJS'",NULL,NULL,0,0,0
"In superheroes with missing weight data, calculate the difference between the number of superheroes with blue eyes and no eye color.",challenging,SELECT SUM(CASE WHEN T2.id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.id = 1 THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id WHERE T1.weight_kg = 0 OR T1.weight_kg is NULL,SELECT (SUM(CASE WHEN T1.eye_colour_id = 7 THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.eye_colour_id = 1 THEN 1 ELSE 0 END)) AS difference FROM superhero AS T1 WHERE T1.weight_kg = 0 OR T1.weight_kg IS NULL,NULL,NULL,1,0,0
"Among posts by Harvey Motulsky and Noah Snyder, which one has higher popularity?",challenging,SELECT T1.DisplayName FROM users AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.UserId INNER JOIN posts AS T3 ON T2.PostId = T3.Id WHERE T1.DisplayName = 'Harvey Motulsky' OR T1.DisplayName = 'Noah Snyder' GROUP BY T1.DisplayName ORDER BY SUM(T3.ViewCount) DESC LIMIT 1,"SELECT p.Title, p.ViewCount FROM posts p JOIN users u ON p.OwnerUserId = u.Id WHERE u.DisplayName IN ('Harvey Motulsky', 'Noah Snyder') ORDER BY p.ViewCount DESC LIMIT 1",NULL,NULL,0,0,0
"For all the female patient age 50 and above, who has abnormal red blood cell count. State if they were admitted to hospital.",challenging,"SELECT DISTINCT T1.ID, T1.Admission FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (T2.RBC <= 3.5 OR T2.RBC >= 6.0) AND STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T1.Birthday) >= 50","SELECT P.ID, P.SEX, P.Birthday, P.Admission, L.RBC FROM Patient P JOIN Laboratory L ON P.ID = L.ID WHERE P.SEX = 'F' AND (strftime('%Y', 'now') - strftime('%Y', P.Birthday)) >= 50 AND (L.RBC <= 3.5 OR L.RBC >= 6.0)",NULL,NULL,0,0,0
Calculate the percentage whereby Hamilton was not at the 1st track of the the f1 circuit since 2010.,challenging,SELECT CAST(COUNT(CASE WHEN T2.position <> 1 THEN T2.position END) AS REAL) * 100 / COUNT(T2.driverStandingsId) FROM races AS T1 INNER JOIN driverStandings AS T2 ON T2.raceId = T1.raceId INNER JOIN drivers AS T3 ON T3.driverId = T2.driverId WHERE T3.surname = 'Hamilton' AND T1.year >= 2010,SELECT CAST(SUM(CASE WHEN T2.surname = 'Hamilton' AND T1.position > 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.raceId) FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.year >= 2010,NULL,SELECT CAST(COUNT(CASE WHEN T1.surname = 'Hamilton' AND T2.position > 1 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.surname = 'Hamilton') AS percentage FROM drivers AS T1 JOIN results AS T2 ON T1.driverId = T2.driverId JOIN races AS T3 ON T1.driverId = T3.driverId WHERE T3.year >= 2010,0,0,0
Please list the superhero names of all the superheroes that have blue eyes and blond hair.,challenging,SELECT T1.superhero_name FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN colour AS T3 ON T1.hair_colour_id = T3.id WHERE T2.colour = 'Blue' AND T3.colour = 'Blond',SELECT superhero_name FROM superhero WHERE eye_colour_id = (SELECT id FROM colour WHERE colour = 'Blue') AND hair_colour_id = (SELECT id FROM colour WHERE colour = 'Blond'),NULL,NULL,1,0,0
How much higher in percentage is Ariel Borysiuk's overall rating than that of Paulin Puel?,challenging,SELECT (SUM(CASE WHEN t1.player_name = 'Ariel Borysiuk' THEN t2.overall_rating ELSE 0 END) * 1.0 - SUM(CASE WHEN t1.player_name = 'Paulin Puel' THEN t2.overall_rating ELSE 0 END)) * 100 / SUM(CASE WHEN t1.player_name = 'Paulin Puel' THEN t2.overall_rating ELSE 0 END) FROM Player AS t1 INNER JOIN Player_Attributes AS t2 ON t1.player_api_id = t2.player_api_id,SELECT ((SELECT overall_rating FROM Player WHERE player_name = 'Ariel Borysiuk') - (SELECT overall_rating FROM Player WHERE player_name = 'Paulin Puel')) / (SELECT overall_rating FROM Player WHERE player_name = 'Paulin Puel') * 100 AS percentage_difference,NULL,"SELECT (T2.overall_rating - T3.overall_rating) * 100.0 / T3.overall_rating AS percentage_increase FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id JOIN Player_Attributes AS T3 ON T3.player_api_id = (CASE WHEN T1.player_name = 'Ariel Borysiuk' THEN T2.player_api_id WHEN T1.player_name = 'Paulin Puel' THEN T2.player_api_id END) WHERE T1.player_name IN ('Ariel Borysiuk', 'Paulin Puel')",0,0,0
"List the eyes, hair and skin colour of all female superheroes published by Dark Horse Comics.",challenging,"SELECT T1.eye_colour_id, T1.hair_colour_id, T1.skin_colour_id FROM superhero AS T1 INNER JOIN publisher AS T2 ON T2.id = T1.publisher_id INNER JOIN gender AS T3 ON T3.id = T1.gender_id WHERE T2.publisher_name = 'Dark Horse Comics' AND T3.gender = 'Female'","SELECT c1.colour AS eye_colour, c2.colour AS hair_colour, c3.colour AS skin_colour FROM superhero s JOIN colour c1 ON s.eye_colour_id = c1.id JOIN colour c2 ON s.hair_colour_id = c2.id JOIN colour c3 ON s.skin_colour_id = c3.id JOIN publisher p ON s.publisher_id = p.id JOIN gender g ON s.gender_id = g.id WHERE g.gender = 'Female' AND p.publisher_name = 'Dark Horse Comics'",NULL,NULL,0,0,0
Name the elements that comprise the atoms of bond TR001_2_4.,challenging,SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_2_4',SELECT DISTINCT element FROM atom WHERE atom_id IN (SELECT atom_id FROM connected WHERE bond_id = 'TR001_2_4'),NULL,NULL,1,0,0
"For the teams with normal build-up play dribbling class in 2014, List the names of the teams with less than average chance creation passing, in descending order of chance creation passing.",challenging,"SELECT t3.team_long_name FROM Team AS t3 INNER JOIN Team_Attributes AS t4 ON t3.team_api_id = t4.team_api_id WHERE t4.buildUpPlayDribblingClass = 'Normal' AND t4.chanceCreationPassing < ( SELECT CAST(SUM(t2.chanceCreationPassing) AS REAL) / COUNT(t1.id) FROM Team AS t1 INNER JOIN Team_Attributes AS t2 ON t1.team_api_id = t2.team_api_id WHERE t2.buildUpPlayDribblingClass = 'Normal' AND SUBSTR(t2.`date`, 1, 4) = '2014') ORDER BY t4.chanceCreationPassing DESC",SELECT T1.team_long_name FROM Team AS T1 JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlayDribblingClass = 'Normal' AND T2.date BETWEEN '2014-01-01 00:00:00' AND '2014-01-31 00:00:00' HAVING AVG(T2.chanceCreationPassing) > T2.chanceCreationPassing ORDER BY T2.chanceCreationPassing DESC,NULL,"SELECT T1.team_api_id, T1.team_fifa_api_id, T1.team_long_name, T1.team_short_name FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T2.buildUpPlayDribblingClass = 'Normal' AND T2.date BETWEEN '2014-01-01' AND '2014-01-31'",0,0,0
"For loans contracts which are still running where client are in debt, list the district of the and the state the percentage unemployment rate increment from year 1995 to 1996.",challenging,SELECT CAST((T3.A13 - T3.A12) AS REAL) * 100 / T3.A12 FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.status = 'D',"SELECT d.A2 AS district, d.A3 AS state, ((d.A13 - d.A12) / d.A12) * 100 AS unemployment_rate_increment FROM district d JOIN account a ON d.district_id = a.district_id JOIN loan l ON a.account_id = l.account_id WHERE l.status = 'D'",NULL,"SELECT DISTINCT d.A2 AS district, d.A3 AS state",0,0,0
"For the client whose loan was approved first in 1993/7/5, what is the increase rate of his/her account balance from 1993/3/22 to 1998/12/27?",challenging,"SELECT CAST((SUM(IIF(T3.date = '1998-12-27', T3.balance, 0)) - SUM(IIF(T3.date = '1993-03-22', T3.balance, 0))) AS REAL) * 100 / SUM(IIF(T3.date = '1993-03-22', T3.balance, 0)) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN trans AS T3 ON T3.account_id = T2.account_id WHERE T1.date = '1993-07-05'",SELECT (t1.balance - t2.balance) / t2.balance * 100 AS increase_rate FROM trans t1 JOIN trans t2 ON t1.account_id = t2.account_id AND t1.date = '1998-12-27' AND t2.date = '1993-03-22' WHERE t1.account_id IN ( SELECT account_id FROM loan WHERE date = '1993-07-05' ORDER BY date LIMIT 1 ),NULL,NULL,0,0,0
Tally the toxicology element of the 4th atom of each molecule that was carcinogenic.,challenging,"SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+' AND SUBSTR(T1.atom_id, -1) = '4' AND LENGTH(T1.atom_id) = 7","SELECT element, COUNT(*) AS count FROM atom JOIN connected ON atom.atom_id = connected.atom_id JOIN bond ON connected.bond_id = bond.bond_id JOIN molecule ON atom.molecule_id = molecule.molecule_id WHERE molecule.label = '+' AND atom_id LIKE '%4' GROUP BY element",NULL,NULL,0,0,0
How many elements are contained in bond_id TR001_3_4?,challenging,SELECT COUNT(DISTINCT T1.element) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_3_4',SELECT COUNT(*) FROM atom WHERE atom_id IN ( SELECT atom_id FROM connected WHERE bond_id = 'TR001_3_4' ),NULL,NULL,0,0,0
"What is the most common illness that doctors identified among the patients whose lab work was done between 1/1/1985, and 12/31/1995?",challenging,SELECT T2.Diagnosis FROM Examination AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.`Examination Date` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY T2.Diagnosis ORDER BY COUNT(T2.Diagnosis) DESC LIMIT 1,SELECT Diagnosis FROM Examination WHERE `Examination Date` BETWEEN '1985-01-01' AND '1995-12-31' GROUP BY Diagnosis ORDER BY COUNT(Diagnosis) DESC LIMIT 1,NULL,NULL,1,0,0
"Based on posts posted by Community, calculate the percentage of posts that use the R language.",challenging,"SELECT CAST(SUM(IIF(T3.TagName = 'r', 1, 0)) AS REAL) * 100 / COUNT(T1.Id) FROM users AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.UserId INNER JOIN tags AS T3 ON T3.ExcerptPostId = T2.PostId WHERE T1.DisplayName = 'Community'",SELECT CAST(SUM(CASE WHEN T3.TagName = 'r' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Id) AS percentage FROM posts AS T1 JOIN users AS T2 ON T1.OwnerUserId = T2.Id JOIN postTags AS T3 ON T1.Id = T3.PostId WHERE T2.DisplayName = 'Community',NULL,SELECT CAST(COUNT(CASE WHEN tags.TagName = 'r' THEN 1 ELSE NULL END) AS REAL) / COUNT(posts.Id) AS percentage FROM posts JOIN posts.tags ON posts.Id = posts.tags.PostId JOIN users ON posts.OwnerUserId = users.Id WHERE posts.OwnerDisplayName = 'Community',0,0,0
What elements are in the TR004_8_9 bond atoms?,challenging,SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR004_8_9',SELECT DISTINCT element FROM atom WHERE atom_id IN ( SELECT atom_id FROM connected WHERE bond_id = 'TR004_8_9' ),NULL,NULL,1,0,0
What elements are in a double type bond?,challenging,SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id WHERE T2.bond_type = '=',SELECT DISTINCT element FROM atom WHERE atom_id IN ( SELECT atom_id FROM connected WHERE bond_id IN ( SELECT bond_id FROM bond WHERE bond_type = '=' ) ),NULL,NULL,0,0,0
Which publisher created more superheroes: DC or Marvel Comics? Find the difference in the number of superheroes.,challenging,SELECT SUM(CASE WHEN T2.publisher_name = 'DC Comics' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.publisher_name = 'Marvel Comics' THEN 1 ELSE 0 END) FROM superhero AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id,SELECT (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'DC Comics')) - (SELECT COUNT(*) FROM superhero WHERE publisher_id = (SELECT id FROM publisher WHERE publisher_name = 'Marvel Comics')) AS difference,NULL,NULL,1,0,0
"From 2000 to 2005, what percentage of drivers who were born before 1985 and the lap numbers were over 50?",challenging,"SELECT CAST(SUM(IIF(STRFTIME('%Y', T3.dob) < '1985' AND T1.laps > 50, 1, 0)) AS REAL) * 100 / COUNT(*) FROM results AS T1 INNER JOIN races AS T2 on T1.raceId = T2.raceId INNER JOIN drivers AS T3 on T1.driverId = T3.driverId WHERE T2.year BETWEEN 2000 AND 2005",SELECT CAST(SUM(CASE WHEN T1.year BETWEEN 2000 AND 2005 AND T2.year < 1985 AND T2.laps > 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.driverId) FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T1.year BETWEEN 2000 AND 2005,NULL,NULL,0,0,0
Please list top three elements of the toxicology of the molecule TR000 in alphabetical order.,challenging,SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR000' ORDER BY T.element LIMIT 3,SELECT element FROM atom WHERE molecule_id = 'TR000' ORDER BY element ASC LIMIT 3,NULL,NULL,0,0,0
"Among the sets whose expansion type is Commander, which set has the highest total number of cards including promotional and related supplemental products but excluding Alchemy modifications? Indicate the id of the set.",challenging,SELECT id FROM sets WHERE type = 'commander' ORDER BY totalSetSize DESC LIMIT 1,SELECT id FROM sets WHERE type = 'commander' ORDER BY totalSetSize DESC LIMIT 1,NULL,"SELECT s.id, st.translation, s.totalSetSize FROM sets s JOIN set_translations st ON s.code = st.setCode WHERE s.type = 'commander' ORDER BY s.totalSetSize DESC LIMIT 1",1,0,0
